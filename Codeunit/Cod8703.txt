OBJECT Codeunit 8703 Mobile Document Handler
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=NAVW16.00.01;
  }
  PROPERTIES
  {
    TableNo=8705;
    OnRun=VAR
            MessageIn@1001 : BigText;
            MessageOut@1000 : BigText;
          BEGIN
            MobDocQueue := Rec;
            IsNotWebServiceCall := TRUE;

            CONSISTENT(FALSE);

            CASE "Document Type" OF
              'CreateCustomer':
                CreateCustomerHandle(MessageIn, "Mobile User ID", MessageOut);
              ELSE
                ERROR(Text000,"Document Type");
            END;

            MobDocMgt.UpdateResult(Rec, XMLResultDoc);

            CONSISTENT(TRUE);
          END;

  }
  CODE
  {
    VAR
      MobXMLMgt@1000 : Codeunit 8704;
      MobDocMgt@1001 : Codeunit 8701;
      Text000@1002 : TextConst 'ENU=No document handler is available for %1.;ESP=No est  disponible ning£n controlador de documentos para %1.';
      Text001@1003 : TextConst 'ENU=Unknown XML tag (%1) found in the request.;ESP=Se ha encontrado una etiqueta XML desconocida (%1) en la solicitud.';
      Text002@1005 : TextConst 'ENU=%1 %2 created.;ESP=%1 %2 creado.';
      MobPermissionMgt@1006 : Codeunit 8705;
      MobDocQueue@1004 : Record 8705;
      XMLResultDoc@1007 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60";
      IsNotWebServiceCall@1008 : Boolean;

    PROCEDURE CreateCustomerHandle@1(MessageIn@1013 : BigText;MobileUserID@1000 : Text[65];VAR MessageOut@1014 : BigText);
    VAR
      Customer@1001 : Record 18;
      Permission@1012 : Record 2000000005;
      RecRef@1002 : RecordRef;
      XMLRequestDoc@1003 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60";
      XMLRootNode@1004 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      XMLNodeList@1005 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF82-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNodeList";
      XMLCurrNode@1006 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      XMLCustomerNode@1007 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      XMLCreditlimitNode@1008 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      XMLContactNode@1009 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      AttributeValue@1010 : Text[250];
      i@1011 : Integer;
    BEGIN
      WITH Permission DO
        MobPermissionMgt.CheckPermission(
          MobileUserID,"Object Type"::"Table Data",DATABASE::Customer,
          "Read Permission"::" ","Insert Permission"::Yes,"Modify Permission"::" ",
          "Delete Permission"::" ","Execute Permission"::" ");

      IF ISSERVICETIER AND NOT IsNotWebServiceCall THEN
        MobDocMgt.GetXMLFromBigText(MessageIn, XMLRequestDoc)
      ELSE
        MobDocQueue.LoadXMLRequestDoc(XMLRequestDoc);

      XMLRootNode := XMLRequestDoc.documentElement;

      XMLNodeList := XMLRootNode.childNodes;
      FOR i := 1 TO XMLNodeList.length DO BEGIN
        XMLCurrNode := XMLNodeList.item(i - 1);
        MobXMLMgt.GetAttribute(XMLCurrNode,'name',AttributeValue);
        CASE AttributeValue OF
          'CustomerDetailTasklet': XMLCustomerNode := XMLCurrNode.firstChild;
          'CustomerCreditLimitDetailTasklet': XMLCreditlimitNode := XMLCurrNode.firstChild;
          'CustomerContactDetailTasklet': XMLContactNode := XMLCurrNode.firstChild;
          ELSE
            ERROR(Text001,AttributeValue);
        END;
      END;

      Customer.INIT;
      Customer.INSERT(TRUE);

      CustomerNodeHandle(XMLCustomerNode,Customer);
      CreditLimitNodeHandle(XMLCreditlimitNode,Customer);
      ContactNodeHandle(MobileUserID,XMLContactNode,Customer);

      Customer.MODIFY(TRUE);

      RecRef.GETTABLE(Customer);
      MobDocMgt.LogInsertion(MobileUserID,RecRef);

      CreateCustomerResponse(MessageOut, Customer);
    END;

    LOCAL PROCEDURE CustomerNodeHandle@2(VAR XMLCustomerNode@1001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";VAR Customer@1002 : Record 18);
    VAR
      XMLCurrNode@1006 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
    BEGIN
      MobXMLMgt.FindNode(XMLCustomerNode,'name',XMLCurrNode);
      Customer.VALIDATE(Name,XMLCurrNode.text);

      MobXMLMgt.FindNode(XMLCustomerNode,'email',XMLCurrNode);
      Customer.VALIDATE("E-Mail",XMLCurrNode.text);

      MobXMLMgt.FindNode(XMLCustomerNode,'type',XMLCurrNode);
      Customer.VALIDATE("Customer Disc. Group",XMLCurrNode.text);
    END;

    LOCAL PROCEDURE CreditLimitNodeHandle@3(VAR XMLCreditLimitNode@1001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";VAR Customer@1002 : Record 18);
    VAR
      XMLCurrNode@1004 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
    BEGIN
      IF ISCLEAR(XMLCreditLimitNode) THEN
        EXIT;

      MobXMLMgt.FindNode(XMLCreditLimitNode,'limit',XMLCurrNode);
      EVALUATE(Customer."Credit Limit (LCY)",XMLCurrNode.text);
      Customer.VALIDATE("Credit Limit (LCY)");
    END;

    LOCAL PROCEDURE ContactNodeHandle@4(MobileUserID@1000 : Text[65];VAR XMLContactNode@1001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";VAR Customer@1002 : Record 18);
    VAR
      Contact@1003 : Record 5050;
      Permission@1005 : Record 2000000005;
      RecRef@1004 : RecordRef;
      XMLCurrNode@1006 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
    BEGIN
      IF ISCLEAR(XMLContactNode) THEN
        EXIT;

      MobXMLMgt.FindNode(XMLContactNode,'name',XMLCurrNode);
      Customer.VALIDATE(Contact,XMLCurrNode.text);

      MobXMLMgt.FindNode(XMLContactNode,'tel',XMLCurrNode);
      IF Customer."Primary Contact No." <> '' THEN BEGIN
        WITH Permission DO
          MobPermissionMgt.CheckPermission(
            MobileUserID,"Object Type"::"Table Data",DATABASE::Contact,
            "Read Permission"::" ","Insert Permission"::Yes,"Modify Permission"::Yes,
            "Delete Permission"::" ","Execute Permission"::" ");

        Contact.GET(Customer."Primary Contact No.");
        Contact.VALIDATE("Phone No.",XMLCurrNode.text);
        Contact.MODIFY(TRUE);
        RecRef.GETTABLE(Contact);
        MobDocMgt.LogInsertion(MobileUserID,RecRef);
      END;
    END;

    LOCAL PROCEDURE CreateCustomerResponse@8(VAR MessageOut@1006 : BigText;VAR Customer@1001 : Record 18);
    VAR
      XMLRootNode@1003 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      XMLCreatedNode@1004 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
    BEGIN
      MobDocMgt.InitializeResponseDoc(XMLResultDoc);

      XMLRootNode := XMLResultDoc.documentElement;
      MobXMLMgt.AddElement(XMLRootNode,'description', STRSUBSTNO(Text002,Customer.TABLECAPTION,Customer."No."),
                           XMLRootNode.namespaceURI,XMLCreatedNode);
      MobXMLMgt.AddElement(XMLRootNode,'responseData','',XMLRootNode.namespaceURI,XMLCreatedNode);
      MobXMLMgt.AddElement(XMLCreatedNode,'newCustomerAccount',Customer."No.",XMLRootNode.namespaceURI,XMLCreatedNode);

      IF ISSERVICETIER THEN
        MobDocMgt.GetBigTextFromXML(XMLResultDoc, MessageOut);
    END;

    EVENT XMLResultDoc@1007::ondataavailable@198();
    BEGIN
    END;

    EVENT XMLResultDoc@1007::onreadystatechange@-609();
    BEGIN
    END;

    BEGIN
    END.
  }
}
