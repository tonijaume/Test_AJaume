OBJECT Codeunit 7009911 Exportacion Hotel Payment
{
  OBJECT-PROPERTIES
  {
    Date=11/10/12;
    Time=18:21:46;
    Modified=Yes;
    Version List=AIC2009;
  }
  PROPERTIES
  {
    OnRun=BEGIN

            Exportar;
          END;

  }
  CODE
  {
    VAR
      Text000@1103355007 : TextConst 'ENU=Would you like to do the transfer to Hotel Payment company;ESP=Desea realmente realizar un traspaso a la empresa Hotel Payment';
      Text001@1103355008 : TextConst 'ENU=SELECT INITIAL CHECK-IN DATE\;ESP=SELECCIONE FECHA DE ENTRADA INICIAL\';
      Text002@1103355009 : TextConst 'ENU=Date #1######;ESP=Fecha #1######';
      Text003@1103355010 : TextConst 'ENU=Unable to leave initial check-in date in blank;ESP=No puede dejar la fecha de llegada inicial en blanco.';
      Text004@1103355011 : TextConst 'ENU=Processing \#1##########\@2@@@@@@@@@\#3########;ESP=Procesando \#1##########\@2@@@@@@@@@\#3########';
      Text005@1103355012 : TextConst 'ENU=Importation company is the same than the current one;ESP=La empresa de la importaci¢n es la misma que la actual';
      Text006@1103355013 : TextConst 'ENU=Work process completed;ESP=Proceso de traspaso completado';
      Text007@1103355014 : TextConst 'ENU=Exporting Hotels;ESP=Exportando Hoteles';
      Text008@1103355015 : TextConst 'ENU=Exporting Vouchers;ESP=Exportando Bonos';
      Text009@1103355016 : TextConst 'ENU="Table=%1, Fields=%2,%3,%4,%5,%6,%7 already exist";ESP="Ya existe Tabla=%1, Campos=%2,%3,%4,%5,%6,%7"';
      Text010@1103355017 : TextConst 'ENU="Table=%1, Fields=%2,%3,%4,%5,%6,%7,%8 already exist";ESP="Ya existe Tabla=%1, Campos=%2,%3,%4,%5,%6,%7,%8"';
      Text011@1103355018 : TextConst 'ENU="Table=%1, Fields=%2,%3,%4, already exist";ESP="Ya existe Tabla=%1, Campos=%2,%3,%4"';
      Text012@1103355019 : TextConst 'ENU="Table=%1, Fields=%2,%3,%4,%5 already exist";ESP="Ya existe Tabla=%1, Campos=%2,%3,%4,%5"';
      Text013@1103355020 : TextConst 'ENU=Deleting lines;ESP=Borrando Lineas';
      rPar@1103355000 : Record 7009700;
      rHist@1103355001 : Record 7010000;
      wNoMovs@1103355002 : Integer;
      wFinestra@1103355003 : Dialog;
      wTotalMv@1103355004 : Integer;
      wNumMv@1103355005 : Integer;

    PROCEDURE Exportar@1();
    BEGIN
      // Exportar

      IF NOT CONFIRM(Text000) THEN
        EXIT;

      wFinestra.OPEN(Text004);

      CLEAR(wNoMovs);
      CLEAR(wNumMv);
      wTotalMv := 17;
      rPar.GET;
      rPar.TESTFIELD("Empres Hotel Payment");
      IF rPar."Empres Hotel Payment" = COMPANYNAME THEN
        ERROR(Text005);

      rHist.INSERT(TRUE);

      BajaLineas;

      ExpHoteles;

      ExpBonos;

      rHist."No. Movs" := wNoMovs;
      rHist.MODIFY;
      wFinestra.CLOSE;
      MESSAGE(Text006);
    END;

    PROCEDURE ExpHoteles@5();
    VAR
      lrHotel@1103355000 : Record 7009724;
      lrHotel2@1103355001 : Record 7009724;
      lrHotel3@1103355002 : Record 7009724;
      lrContC@1103355003 : Record 7009723;
      lrContC2@1103355004 : Record 7009723;
      lrPrecContC@1103355005 : Record 7009738;
      lrPrecContC2@1103355006 : Record 7009738;
      lrPrecContC3@1103355037 : Record 7009738;
      lrContV@1103355007 : Record 7009727;
      lrContV2@1103355008 : Record 7009727;
      lrPrecContV@1103355009 : Record 7009732;
      lrPrecContV2@1103355010 : Record 7009732;
      lrComCont@1103355011 : Record 7009784;
      lrComCont2@1103355012 : Record 7009784;
      lrConvHab@1103355013 : Record 7009731;
      lrConvHab2@1103355014 : Record 7009731;
      lrPagGarantC@1103355015 : Record 7009726;
      lrPagGarantC2@1103355016 : Record 7009726;
      lrHandFee@1103355019 : Record 7009733;
      lrHandFee2@1103355020 : Record 7009733;
      lrTTOO@1103355021 : Record 7009717;
      lrTTOO2@1103355022 : Record 7009717;
      lrTTOO3@1103355023 : Record 7009717;
      lrCodCar@1103355024 : Record 7009759;
      lrCodCar2@1103355025 : Record 7009759;
      lrCodExt@1103355026 : Record 7009760;
      lrCodExt2@1103355027 : Record 7009760;
      lrRegim@1103355028 : Record 7009712;
      lrRegim2@1103355029 : Record 7009712;
      lrConvRegim@1103355030 : Record 7009719;
      lrConvRegim2@1103355031 : Record 7009719;
      lrHabBas@1103355032 : Record 7009711;
      lrHabBas2@1103355033 : Record 7009711;
      lrConvHot@1103355034 : Record 7009725;
      lrConvHot2@1103355035 : Record 7009725;
      lwExiste@1103355036 : Boolean;
    BEGIN
      // ExpHoteles

      wNumMv := 0;

      wFinestra.UPDATE(1,Text007);

      // ____________________________
      // Touroperador

      lrTTOO2.RESET;

      lrTTOO3.RESET;
      lrTTOO3.CHANGECOMPANY(rPar."Empres Hotel Payment");

      lrTTOO.RESET;
      lrTTOO.SETCURRENTKEY(Replicado);
      lrTTOO.SETRANGE(Replicado, FALSE);

      // ----  AJS 20.08.2003
      // ----  Se ha incluido un nuevo campo para indicar los Touroperadores que se traspasan a Hotel Payment

      lrTTOO.SETRANGE("Traspasar Hotel Payment", TRUE);

      IF lrTTOO.FINDLAST THEN BEGIN
        REPEAT

          lrTTOO2.CHANGECOMPANY(rPar."Empres Hotel Payment");
          lwExiste := lrTTOO2.GET(lrTTOO.TourOperador);

          // lrTTOO2.LOCKTABLE;
          lrTTOO2.INIT;
          // lrTTOO2 := lrTTOO;
          // El traspaso hay que hacerlo con un transferfields en lugar de una asignacion
          lrTTOO2.TRANSFERFIELDS(lrTTOO);
          lrTTOO2.CHANGECOMPANY(rPar."Empres Hotel Payment");

          //lwExiste := lrTTOO2.FIND;
          IF lwExiste THEN
            lrTTOO2.MODIFY
          ELSE
            lrTTOO2.INSERT;

          wNoMovs +=1;
        UNTIL lrTTOO.NEXT(-1)=0;
      END;
      Avanza;

      // __________________
      // Codigo Cargo

      lrCodCar2.RESET;

      lrCodCar.RESET;
      lrCodCar.SETRANGE(Replicado, FALSE);
      IF lrCodCar.FINDLAST THEN BEGIN
        REPEAT

          lrCodCar2.CHANGECOMPANY(rPar."Empres Hotel Payment");
          lwExiste := lrCodCar2.GET(lrCodCar.Codigo);

          lrCodCar2.CHANGECOMPANY(rPar."Empres Hotel Payment");
          lrCodCar2.LOCKTABLE;
          lrCodCar2.INIT;

          // lrCodCar2 := lrCodCar;
          // El traspaso hay que hacerlo con un transferfields en lugar de una asignacion
          lrCodCar2.TRANSFERFIELDS(lrCodCar);

          IF lwExiste THEN
            lrCodCar2.MODIFY
          ELSE
            lrCodCar2.INSERT;

          lrCodCar.Replicado := TRUE;
          lrCodCar.MODIFY;

          wNoMovs += 1;
        UNTIL lrCodCar.NEXT(-1) = 0;
      END;
      Avanza;

      // __________________
      // Codigo Extra

      lrCodExt2.RESET;

      lrCodExt.RESET;
      lrCodExt.SETRANGE(Replicado, FALSE);
      IF lrCodExt.FINDLAST THEN BEGIN
        REPEAT
          lrCodExt2.CHANGECOMPANY(rPar."Empres Hotel Payment");
          lwExiste := lrCodExt2.GET(lrCodExt.Codigo);

          lrCodExt2.CHANGECOMPANY(rPar."Empres Hotel Payment");
          lrCodExt2.LOCKTABLE;
          lrCodExt2.INIT;
          // lrCodExt2 := lrCodExt;
          // El traspaso hay que hacerlo con un transferfields en lugar de una asignacion
          lrCodExt2.TRANSFERFIELDS(lrCodExt);

          IF lwExiste THEN
            lrCodExt2.MODIFY
          ELSE
            lrCodExt2.INSERT;

          lrCodExt.Replicado := TRUE;
          lrCodExt.MODIFY;

          wNoMovs += 1;
        UNTIL lrCodExt.NEXT(-1) = 0;
      END;
      Avanza;

      // __________________
      // Regimen

      lrRegim2.RESET;

      lrRegim.RESET;
      lrRegim.SETRANGE(Replicado, FALSE);
      IF lrRegim.FINDLAST THEN BEGIN
        REPEAT
          lrRegim2.CHANGECOMPANY(rPar."Empres Hotel Payment");
          lwExiste := lrRegim2.GET(lrRegim.Regimen);

          lrRegim2.CHANGECOMPANY(rPar."Empres Hotel Payment");
          lrRegim2.LOCKTABLE;
          lrRegim2.INIT;
          // lrRegim2 := lrRegim;
          // El traspaso hay que hacerlo con un transferfields en lugar de una asignacion
          lrRegim2.TRANSFERFIELDS(lrRegim);

          IF lwExiste THEN
            lrRegim2.MODIFY
          ELSE
            lrRegim2.INSERT;

          lrRegim.Replicado := TRUE;
          lrRegim.MODIFY;

          wNoMovs += 1;
        UNTIL lrRegim.NEXT(-1) = 0;
      END;
      Avanza;

      // __________________
      // Conversion Regimen

      lrConvRegim2.RESET;

      lrConvRegim.RESET;
      IF lrConvRegim.FINDLAST THEN BEGIN
        REPEAT
          lrConvRegim2.CHANGECOMPANY(rPar."Empres Hotel Payment");
          lwExiste := lrConvRegim2.GET(lrConvRegim.TourOperador, lrConvRegim."Regimen TO");

          lrConvRegim2.CHANGECOMPANY(rPar."Empres Hotel Payment");
          lrConvRegim2.LOCKTABLE;
          lrConvRegim2.INIT;
          // lrConvRegim2 := lrConvRegim;
          // El traspaso hay que hacerlo con un transferfields en lugar de una asignacion
          lrConvRegim2.TRANSFERFIELDS(lrConvRegim);

          IF lwExiste THEN
            lrConvRegim2.MODIFY
          ELSE
            lrConvRegim2.INSERT;

          wNoMovs += 1;
        UNTIL lrConvRegim.NEXT(-1) = 0;
      END;
      Avanza;

      // __________________
      // Conversion Hotel

      lrConvHot2.RESET;

      lrConvHot.RESET;
      lrConvHot.SETRANGE(Replicado, FALSE);
      IF lrConvHot.FINDLAST THEN BEGIN
        REPEAT
          lrConvHot2.CHANGECOMPANY(rPar."Empres Hotel Payment");
          lwExiste := lrConvHot2.GET(lrConvHot.TourOperador, lrConvHot."Touroperador venta", lrConvHot."Hotel TO");

          lrConvHot2.CHANGECOMPANY(rPar."Empres Hotel Payment");
          lrConvHot2.LOCKTABLE;
          lrConvHot2.INIT;
          // lrConvHot2 := lrConvHot;
          // El traspaso hay que hacerlo con un transferfields en lugar de una asignacion
          lrConvHot2.TRANSFERFIELDS(lrConvHot);

          IF lwExiste THEN
            lrConvHot2.MODIFY
          ELSE
            lrConvHot2.INSERT;

          lrConvHot.Replicado := TRUE;
          lrConvHot.MODIFY;

          wNoMovs += 1;
        UNTIL lrConvHot.NEXT(-1) = 0;
      END;
      Avanza;

      // __________________
      // Habitacion basica

      lrHabBas2.RESET;

      lrHabBas.RESET;
      lrHabBas.SETRANGE(Replicado, FALSE);
      IF lrHabBas.FINDLAST THEN BEGIN
        REPEAT
          lrHabBas2.CHANGECOMPANY(rPar."Empres Hotel Payment");
          lwExiste := lrHabBas2.GET(lrHabBas."Codigo Habitacion");

          lrHabBas2.CHANGECOMPANY(rPar."Empres Hotel Payment");
          lrHabBas2.LOCKTABLE;
          lrHabBas2.INIT;
          // lrHabBas2 := lrHabBas;
          // El traspaso hay que hacerlo con un transferfields en lugar de una asignacion
          lrHabBas2.TRANSFERFIELDS(lrHabBas);

          IF lwExiste THEN
            lrHabBas2.MODIFY
          ELSE
            lrHabBas2.INSERT;

          lrHabBas.Replicado := TRUE;
          lrHabBas.MODIFY;

          wNoMovs += 1;
        UNTIL lrHabBas.NEXT(-1) = 0;
      END;
      Avanza;

      // __________________
      // Hoteles

      lrHotel.RESET;
      lrHotel2.RESET;

      lrHotel.SETCURRENTKEY(Replicado);
      lrHotel.SETRANGE(Replicado,FALSE);
      IF lrHotel.FINDLAST THEN BEGIN
        REPEAT
          lrHotel2.CHANGECOMPANY(rPar."Empres Hotel Payment");
          lwExiste := lrHotel2.GET(lrHotel.Hotel);
          lrHotel3.INIT;
          IF lwExiste THEN
            // lrHotel3 := lrHotel2;
            // El traspaso hay que hacerlo con un transferfields en lugar de una asignacion
            lrHotel3.TRANSFERFIELDS(lrHotel2);


          lrHotel2.CHANGECOMPANY(rPar."Empres Hotel Payment");
          lrHotel2.LOCKTABLE;
          lrHotel2.INIT;

          // lrHotel2 := lrHotel;
          lrHotel2.TRANSFERFIELDS(lrHotel);

          // lrHotel3 Sirve para que el hotel pueda conservas sus campos "Proveedor Intermediacion" y "Proveedor Cuenta Propia"

          lrHotel2."Proveedor Intermediacion" := lrHotel3."Proveedor Intermediacion";
          lrHotel2."Proveedor Cuenta Propia"  := lrHotel3."Proveedor Cuenta Propia";
          IF lwExiste THEN
            lrHotel2.MODIFY
          ELSE
            lrHotel2.INSERT;
          lrHotel.Replicado := TRUE;
          lrHotel.MODIFY;
          wNoMovs +=1;
        UNTIL lrHotel.NEXT(-1)=0;
      END;
      Avanza;

      // AJS 01.04.2004
      // Pongo este commit para que los touroperadores nuevos no den error en los contratos

      COMMIT;

      // ____________________________
      // Contratos de compra

      lrContC.RESET;
      lrContC2.RESET;
      lrContC.SETCURRENTKEY(Replicado);
      lrContC.SETRANGE(Replicado,FALSE);
      IF lrContC.FINDLAST THEN BEGIN
        REPEAT

          // ----  AJS 20.08.2003
          // ----  Se ha incluido un nuevo campo para indicar los Touroperadores que se traspasan a Hotel Payment

          CLEAR(lrTTOO);
          IF lrContC.TourOperador <> '' THEN
            lrTTOO.GET(lrContC.TourOperador);

          IF lrTTOO."Traspasar Hotel Payment" THEN BEGIN
            lrContC2.CHANGECOMPANY(rPar."Empres Hotel Payment");
            lwExiste := lrContC2.GET(lrContC.Delegacion ,lrContC."N§ Contrato compra");

            lrContC2.CHANGECOMPANY(rPar."Empres Hotel Payment");
            lrContC2.LOCKTABLE;
            lrContC2.INIT;
            lrContC2.TRANSFERFIELDS(lrContC);
            IF lwExiste THEN
              lrContC2.MODIFY
            ELSE
              lrContC2.INSERT;
            wNoMovs +=1;
            lrContC.Replicado:=TRUE;
            lrContC.MODIFY;
          END;

        UNTIL lrContC.NEXT(-1)=0;
      END;
      Avanza;

      // ____________________________
      // Precios de Contratos de compra
      lrPrecContC.RESET;
      lrPrecContC2.RESET;
      lrPrecContC.SETCURRENTKEY(Replicado);
      lrPrecContC.SETRANGE(Replicado,FALSE);
      IF lrPrecContC.FINDSET THEN BEGIN
        REPEAT

          // ----  AJS 20.08.2003
          // ----  Se ha incluido un nuevo campo para indicar los Touroperadores que se traspasan a Hotel Payment

          CLEAR(lrContC);
          IF (lrPrecContC.Delegacion <> '') AND (lrPrecContC."N§ Contrato" <> '') THEN
            lrContC.GET(lrPrecContC.Delegacion, lrPrecContC."N§ Contrato");

          CLEAR(lrTTOO);
          IF lrContC.TourOperador <> '' THEN
            lrTTOO.GET(lrContC.TourOperador);

          IF lrTTOO."Traspasar Hotel Payment" THEN BEGIN
            lrPrecContC2.CHANGECOMPANY(rPar."Empres Hotel Payment");
            lwExiste := lrPrecContC2.GET(lrPrecContC.Delegacion, lrPrecContC."N§ Contrato",
                                         lrPrecContC."Codigo Precio", lrPrecContC."Orden Precio");

            lrPrecContC2.CHANGECOMPANY(rPar."Empres Hotel Payment");
            lrPrecContC2.LOCKTABLE;
            lrPrecContC2.INIT;

            lrPrecContC2.TRANSFERFIELDS(lrPrecContC);
             IF lwExiste THEN
              lrPrecContC2.MODIFY
            ELSE
              lrPrecContC2.INSERT;
            wNoMovs +=1;
            lrPrecContC3 := lrPrecContC;
            lrPrecContC3.Replicado:=TRUE;
            lrPrecContC3.MODIFY;
          END;
        UNTIL lrPrecContC.NEXT = 0;
      END;
      Avanza;

      // ____________________________
      // Contratos de Venta
      lrContV.RESET;
      lrContV2.RESET;

      lrContV.SETCURRENTKEY(Replicado);
      lrContV.SETRANGE(Replicado,FALSE);
      IF lrContV.FINDLAST THEN BEGIN
        REPEAT
          // ----  AJS 20.08.2003
          // ----  Se ha incluido un nuevo campo para indicar los Touroperadores que se traspasan a Hotel Payment

          CLEAR(lrTTOO);
          IF lrContV.TourOperador <> '' THEN
            lrTTOO.GET(lrContV.TourOperador);

          IF lrTTOO."Traspasar Hotel Payment" THEN BEGIN
            lrContV2.CHANGECOMPANY(rPar."Empres Hotel Payment");
            lwExiste := lrContV2.GET(lrContV.Delegacion ,lrContV."N§ Contrato venta");

            lrContV2.CHANGECOMPANY(rPar."Empres Hotel Payment");
            lrContV2.LOCKTABLE;
            lrContV2.INIT;
            // lrContV2:= lrContV;
            // El traspaso hay que hacerlo con un transferfields en lugar de una asignacion
            lrContV2.TRANSFERFIELDS(lrContV);

            IF lwExiste THEN
              lrContV2.MODIFY
            ELSE
              lrContV2.INSERT;
            wNoMovs +=1;
            lrContV.Replicado:=TRUE;
            lrContV.MODIFY;
          END;
        UNTIL lrContV.NEXT(-1)=0;
      END;
      Avanza;

      // ____________________________
      // Precios Contratos de Venta
      lrPrecContV.RESET;
      lrPrecContV2.RESET;

      lrPrecContV.SETCURRENTKEY(Replicado);
      lrPrecContV.SETRANGE(Replicado,FALSE);
      IF lrPrecContV.FINDLAST THEN BEGIN
        REPEAT

          // ----  AJS 20.08.2003
          // ----  Se ha incluido un nuevo campo para indicar los Touroperadores que se traspasan a Hotel Payment

          CLEAR(lrContV);
          IF (lrPrecContV.Delegacion <> '') AND (lrPrecContV."N§ Contrato" <> '') THEN
            lrContV.GET(lrPrecContV.Delegacion, lrPrecContV."N§ Contrato");

          CLEAR(lrTTOO);
          IF lrContV.TourOperador <> '' THEN
            lrTTOO.GET(lrContV.TourOperador);

          IF lrTTOO."Traspasar Hotel Payment" THEN BEGIN

            lrPrecContV2.CHANGECOMPANY(rPar."Empres Hotel Payment");
            lwExiste := lrPrecContV2.GET(lrPrecContV.Delegacion ,lrPrecContV."N§ Contrato",
                                         lrPrecContV."Codigo Precio",lrPrecContV."Orden Precio");

            lrPrecContV2.CHANGECOMPANY(rPar."Empres Hotel Payment");
            lrPrecContV2.LOCKTABLE;
            lrPrecContV2.INIT;
            // lrPrecContV2:= lrPrecContV;
            // El traspaso hay que hacerlo con un transferfields en lugar de una asignacion
            lrPrecContV2.TRANSFERFIELDS(lrPrecContV);

            IF lwExiste THEN
              lrPrecContV2.MODIFY
            ELSE
              lrPrecContV2.INSERT;
            wNoMovs +=1;
            lrPrecContV.Replicado:=TRUE;
            lrPrecContV.MODIFY;
          END;
        UNTIL lrPrecContV.NEXT(-1)=0;
      END;
      Avanza;

      // ____________________________
      // Comentarios Contrato
      lrComCont.RESET;
      lrComCont2.RESET;

      lrComCont.SETCURRENTKEY(Traspasado);
      lrComCont.SETRANGE(Traspasado,FALSE);
      IF lrComCont.FINDLAST THEN BEGIN
        REPEAT

          // ----  AJS 20.08.2003
          // ----  Se ha incluido un nuevo campo para indicar los Touroperadores que se traspasan a Hotel Payment

          CASE lrComCont."Tipo Contrato" OF
            lrComCont."Tipo Contrato"::"V Hotel":
            BEGIN
              CLEAR(lrContV);
              IF (lrComCont.Delegacion <> '') AND (lrComCont."N§ Contrato" <> '') THEN
                lrContV.GET(lrComCont.Delegacion, lrComCont."N§ Contrato");

              CLEAR(lrTTOO);
              IF lrContV.TourOperador <> '' THEN
                lrTTOO.GET(lrContV.TourOperador);
            END;
            lrComCont."Tipo Contrato"::"C Hotel":
            BEGIN
              CLEAR(lrContC);
              IF (lrComCont.Delegacion <> '') AND (lrComCont."N§ Contrato" <> '') THEN
                lrContC.GET(lrComCont.Delegacion, lrComCont."N§ Contrato");
              CLEAR(lrTTOO);
              IF lrContC.TourOperador <> '' THEN
                lrTTOO.GET(lrContC.TourOperador);
            END;
          END;

          IF lrTTOO."Traspasar Hotel Payment" THEN BEGIN
            lrComCont2.CHANGECOMPANY(rPar."Empres Hotel Payment");
            lwExiste := lrComCont2.GET(lrComCont.Delegacion,lrComCont."N§ Contrato",
                                       lrComCont."Tipo Contrato",lrComCont."N§ Linea");

            lrComCont2.CHANGECOMPANY(rPar."Empres Hotel Payment");
            lrComCont2.LOCKTABLE;
            lrComCont2.INIT;

            // lrComCont2:= lrComCont;
            // El traspaso hay que hacerlo con un transferfields en lugar de una asignacion
            lrComCont2.TRANSFERFIELDS(lrComCont);

            IF lwExiste THEN
              lrComCont2.MODIFY
            ELSE
              lrComCont2.INSERT;
            wNoMovs +=1;
            lrComCont.Traspasado:=TRUE;
            lrComCont.MODIFY;
          END;
        UNTIL lrComCont.NEXT(-1)=0;
      END;
      Avanza;

      // ____________________________
      // Habitaciones
      lrConvHab.RESET;
      lrConvHab2.RESET;

      lrConvHab.SETCURRENTKEY(Replicado);
      lrConvHab.SETRANGE(Replicado,FALSE);
      IF lrConvHab.FINDLAST THEN BEGIN
        REPEAT

          // ----  AJS 20.08.2003
          // ----  Se ha incluido un nuevo campo para indicar los Touroperadores que se traspasan a Hotel Payment

          CASE lrConvHab."Tipo contrato" OF
            lrConvHab."Tipo contrato"::Venta:
            BEGIN
              CLEAR(lrContV);
              IF (lrConvHab.Delegacion <> '') AND (lrConvHab."N§ Contrato" <> '') THEN
                lrContV.GET(lrConvHab.Delegacion, lrConvHab."N§ Contrato");
              CLEAR(lrTTOO);
              IF lrContV.TourOperador <> '' THEN
                lrTTOO.GET(lrContV.TourOperador);
            END;
            lrConvHab."Tipo contrato"::Compra:
            BEGIN
              CLEAR(lrContC);
              IF (lrConvHab.Delegacion <> '') AND (lrConvHab."N§ Contrato" <> '') THEN
                lrContC.GET(lrConvHab.Delegacion, lrConvHab."N§ Contrato");
              CLEAR(lrTTOO);
              IF lrContC.TourOperador <> '' THEN
                lrTTOO.GET(lrContC.TourOperador);
            END;
          END;

          IF lrTTOO."Traspasar Hotel Payment" THEN BEGIN
            lrConvHab2.CHANGECOMPANY(rPar."Empres Hotel Payment");
            lwExiste := lrConvHab2.GET(lrConvHab.Delegacion,lrConvHab."N§ Contrato",
                                       lrConvHab."Tipo contrato",lrConvHab."Habitacion TO",lrConvHab."Habitacion cupo");

            lrConvHab2.CHANGECOMPANY(rPar."Empres Hotel Payment");
            lrConvHab2.LOCKTABLE;
            lrConvHab2.INIT;
            // lrConvHab2:= lrConvHab;
            // El traspaso hay que hacerlo con un transferfields en lugar de una asignacion
            lrConvHab2.TRANSFERFIELDS(lrConvHab);

            IF lwExiste THEN
              lrConvHab2.MODIFY
            ELSE
              lrConvHab2.INSERT;
            wNoMovs +=1;
            lrConvHab.Replicado:=TRUE;
            lrConvHab.MODIFY;
          END;
        UNTIL lrConvHab.NEXT(-1)=0;
      END;
      Avanza;

      // ____________________________
      // Pago garantia compra hotel
      lrPagGarantC.RESET;
      lrPagGarantC2.RESET;

      lrPagGarantC.SETCURRENTKEY(Replicado);
      lrPagGarantC.SETRANGE(Replicado,FALSE);
      IF lrPagGarantC.FINDLAST THEN BEGIN
        REPEAT
          // ----  AJS 20.08.2003
          // ----  Se ha incluido un nuevo campo para indicar los Touroperadores que se traspasan a Hotel Payment

          CLEAR(lrContC);
          IF (lrPagGarantC.Delegacion <> '') AND (lrPagGarantC."N§ Contrato" <> '') THEN
            lrContC.GET(lrPagGarantC.Delegacion, lrPagGarantC."N§ Contrato");

          CLEAR(lrTTOO);
          IF lrContC.TourOperador <> '' THEN
            lrTTOO.GET(lrContC.TourOperador);

          IF lrTTOO."Traspasar Hotel Payment" THEN BEGIN
            lrPagGarantC2.CHANGECOMPANY(rPar."Empres Hotel Payment");
            lwExiste := lrPagGarantC2.GET(lrPagGarantC.Delegacion,lrPagGarantC."N§ Contrato",lrPagGarantC."Fecha pago");

            lrPagGarantC2.CHANGECOMPANY(rPar."Empres Hotel Payment");
            lrPagGarantC2.LOCKTABLE;
            lrPagGarantC2.INIT;
            // lrPagGarantC2:= lrPagGarantC;
            // El traspaso hay que hacerlo con un transferfields en lugar de una asignacion
            lrPagGarantC2.TRANSFERFIELDS(lrPagGarantC);


            IF lwExiste THEN
              lrPagGarantC.MODIFY
            ELSE
              lrPagGarantC2.INSERT;
            wNoMovs +=1;
            lrPagGarantC.Replicado:=TRUE;
            lrPagGarantC.MODIFY;
          END;
        UNTIL lrPagGarantC.NEXT(-1)=0;
      END;
      Avanza;

      // ____________________________
      // Handling fee contrato
      lrHandFee.RESET;
      lrHandFee2.RESET;

      lrHandFee.SETCURRENTKEY(Replicado);
      lrHandFee.SETRANGE(Replicado,FALSE);
      IF lrHandFee.FINDLAST THEN BEGIN
        REPEAT
          // ----  AJS 20.08.2003
          // ----  Se ha incluido un nuevo campo para indicar los Touroperadores que se traspasan a Hotel Payment

          CLEAR(lrContV);
          IF (lrHandFee.Delegacion <> '') AND (lrHandFee."N§ Contrato" <> '') THEN
            lrContV.GET(lrHandFee.Delegacion, lrHandFee."N§ Contrato");

          CLEAR(lrTTOO);
          IF lrContV.TourOperador <> '' THEN
            lrTTOO.GET(lrContV.TourOperador);

          IF lrTTOO."Traspasar Hotel Payment" THEN BEGIN
            lrHandFee2.CHANGECOMPANY(rPar."Empres Hotel Payment");
            lwExiste := lrHandFee2.GET(lrHandFee.Delegacion, lrHandFee."N§ Contrato", lrHandFee."Tipo contrato",
                                       lrHandFee."Num Orden");

            lrHandFee2.CHANGECOMPANY(rPar."Empres Hotel Payment");
            lrHandFee2.LOCKTABLE;
            lrHandFee2.INIT;
            // lrHandFee2:= lrHandFee;
            // El traspaso hay que hacerlo con un transferfields en lugar de una asignacion
            lrHandFee2.TRANSFERFIELDS(lrHandFee);

            IF lwExiste THEN
              lrHandFee2.MODIFY
            ELSE
              lrHandFee2.INSERT;
            wNoMovs +=1;
            lrHandFee.Replicado:=TRUE;
            lrHandFee.MODIFY;
          END;
        UNTIL lrHandFee.NEXT(-1)=0;
      END;
      Avanza;
    END;

    PROCEDURE ExpBonos@4();
    VAR
      lrBonos@1103355000 : Record 7010013;
      lrBonos2@1103355001 : Record 7010013;
      lrBonos3@1103355002 : Record 7010013;
      lrCIxBono@1103355003 : Record 7010018;
      lrCIxBono2@1103355004 : Record 7010018;
      lrCIxBono3@1103355005 : Record 7010018;
      lrCIBonoCon@1103355006 : Record 7010019;
      lrCIBonoCon2@1103355007 : Record 7010019;
      lrCIBonoCon3@1103355018 : Record 7010019;
      lrResumen@1103355008 : Record 7009771;
      lrResumen2@1103355009 : Record 7009771;
      lrResumen3@1103355019 : Record 7009771;
      lrResCargo@1103355010 : Record 7009746;
      lrResCargo2@1103355011 : Record 7009746;
      lrResExtra@1103355012 : Record 7009745;
      lrResExtra2@1103355013 : Record 7009745;
      lrTTOO@1103355014 : Record 7009717;
      lwExiste@1103355015 : Boolean;
      lwActual@1103355016 : Integer;
      lwTotal@1103355017 : Integer;
    BEGIN
      // ExpBonos

      wFinestra.UPDATE(1, Text008);


      // Bonos
      lrBonos .RESET;
      lrBonos2.RESET;
      lrBonos.SETCURRENTKEY(Replicado);
      lrBonos.SETRANGE (Replicado      , FALSE);

      IF lrBonos.FINDFIRST THEN BEGIN
        lwActual := 0;
        lwTotal  := lrBonos.COUNT;

        REPEAT
          lwActual += 1;
          wFinestra.UPDATE(2, ROUND(lwActual / lwTotal * 10000, 1));

          // ----  AJS 20.08.2003
          // ----  Se ha incluido un nuevo campo para indicar los Touroperadores que se traspasan a Hotel Payment

          CLEAR(lrTTOO);
          IF lrBonos.TourOperador <> '' THEN
            lrTTOO.GET(lrBonos.TourOperador);

          IF lrTTOO."Traspasar Hotel Payment" THEN BEGIN
            lrBonos2.CHANGECOMPANY(rPar."Empres Hotel Payment");
            lwExiste := lrBonos2.GET(lrBonos.Delegacion,lrBonos.TourOperador,lrBonos.Bono,
                                     lrBonos."N§ Reserva",lrBonos."N§ Secuencia");

            lrBonos2.CHANGECOMPANY(rPar."Empres Hotel Payment");
            lrBonos2.LOCKTABLE;
            lrBonos2.INIT;

            lrBonos3.TRANSFERFIELDS(lrBonos2);

            lrBonos2.TRANSFERFIELDS(lrBonos);

            lrBonos2.Validado               := lrBonos3.Validado;
            lrBonos2."Importe en FPR"       := lrBonos3."Importe en FPR";
            lrBonos2."Ultimo importe Blank" := lrBonos3."Ultimo importe Blank";
            lrBonos2."Tipo conciliacion"    := lrBonos3."Tipo conciliacion";
            lrBonos2."Precios no coinciden" := lrBonos3."Precios no coinciden";
            lrBonos2."No aplica ofertas"    := lrBonos3."No aplica ofertas";
            lrBonos2."Falta de dtos extras" := lrBonos3."Falta de dtos extras";
            lrBonos2."Falta bono"           := lrBonos3."Falta bono";
            lrBonos2.Otros                  := lrBonos3.Otros;
            lrBonos2.Reclamada              := lrBonos3.Reclamada;
            lrBonos2.Observaciones          := lrBonos3.Observaciones;
            lrBonos2."Provision generada"   := lrBonos3."Provision generada";
            lrBonos2."Bono garantia"        := lrBonos3."Bono garantia";
            lrBonos2."Conciliacion BLANK"   := lrBonos3."Conciliacion BLANK";
            lrBonos2."N§ HPL"               := lrBonos3."N§ HPL";
            lrBonos2."Validacion Autorizada":= lrBonos3."Validacion Autorizada";

            IF lwExiste THEN
              lrBonos2.MODIFY
            ELSE
              lrBonos2.INSERT;

            wNoMovs +=1;

            lrBonos3 := lrBonos;
            lrBonos3.Replicado := TRUE;
            lrBonos3.MODIFY;
          END;
        UNTIL lrBonos.NEXT = 0;
      END;
      Avanza;

      // ____________________________
      // C/I x Bono

      lrCIxBono.RESET;
      lrCIxBono2.RESET;
      lrCIxBono.SETCURRENTKEY(Replicado);
      lrCIxBono.SETRANGE(Replicado,FALSE);
      IF lrCIxBono.FINDFIRST THEN BEGIN
        lwActual := 0;
        lwTotal  := lrCIxBono.COUNT;

        REPEAT
          lwActual += 1;
          wFinestra.UPDATE(2, ROUND(lwActual / lwTotal * 10000, 1));

          // ----  AJS 20.08.2003
          // ----  Se ha incluido un nuevo campo para indicar los Touroperadores que se traspasan a Hotel Payment

          CLEAR(lrTTOO);
          IF lrCIxBono.TourOperador <> '' THEN
            lrTTOO.GET(lrCIxBono.TourOperador);

          IF lrTTOO."Traspasar Hotel Payment" THEN BEGIN
            lrCIxBono2.CHANGECOMPANY(rPar."Empres Hotel Payment");
            lwExiste := lrCIxBono2.GET(lrCIxBono.Delegacion,lrCIxBono.TourOperador,lrCIxBono.Bono,
                                       lrCIxBono."N§ Reserva",lrCIxBono."N§ Secuencia",lrCIxBono."N§ Orden");

            lrCIxBono2.CHANGECOMPANY(rPar."Empres Hotel Payment");
            lrCIxBono2.LOCKTABLE;
            lrCIxBono2.INIT;

            lrCIxBono3.TRANSFERFIELDS(lrCIxBono2);

            lrCIxBono2.TRANSFERFIELDS(lrCIxBono);

            lrCIxBono2."N§ cierre central" := lrCIxBono3."N§ cierre central";
            IF lwExiste THEN
              MESSAGE(Text009,lrCIxBono.TABLECAPTION ,lrCIxBono.Delegacion,lrCIxBono.TourOperador,
                                          lrCIxBono.Bono,lrCIxBono."N§ Reserva",lrCIxBono."N§ Secuencia",lrCIxBono."N§ Orden")
            ELSE
              lrCIxBono2.INSERT;

            wNoMovs +=1;

            lrCIxBono3 := lrCIxBono;
            lrCIxBono3.Replicado            := TRUE;
            lrCIxBono3."Enviar delegacion"  := FALSE;
            lrCIxBono3."N§ envio delegacion":= rHist."No Exportacion";
            lrCIxBono3.MODIFY;
          END;
        UNTIL lrCIxBono.NEXT = 0;
      END;
      Avanza;

      // ____________________________
      // C/I x Bono-Concepto

      lrCIBonoCon.RESET;
      lrCIBonoCon2.RESET;
      lrCIBonoCon.SETCURRENTKEY(Replicado);
      lrCIBonoCon.SETRANGE(Replicado,FALSE);
      IF lrCIBonoCon.FINDFIRST THEN BEGIN
        lwActual := 0;
        lwTotal  := lrCIBonoCon.COUNT;

        REPEAT
          lwActual += 1;
          wFinestra.UPDATE(2, ROUND(lwActual / lwTotal * 10000, 1));

          // ----  AJS 20.08.2003
          // ----  Se ha incluido un nuevo campo para indicar los Touroperadores que se traspasan a Hotel Payment

          CLEAR(lrTTOO);
          IF lrCIBonoCon.TourOperador <> '' THEN
            lrTTOO.GET(lrCIBonoCon.TourOperador);

          IF lrTTOO."Traspasar Hotel Payment" THEN BEGIN
            lrCIBonoCon2.CHANGECOMPANY(rPar."Empres Hotel Payment");
            lwExiste := lrCIBonoCon2.GET(lrCIBonoCon.Delegacion,lrCIBonoCon.TourOperador,lrCIBonoCon.Bono,
                                         lrCIBonoCon."N§ Reserva",lrCIBonoCon."N§ Secuencia",
                                         lrCIBonoCon."N§ Orden",lrCIBonoCon.Concepto);

            lrCIBonoCon2.CHANGECOMPANY(rPar."Empres Hotel Payment");
            lrCIBonoCon2.LOCKTABLE;
            lrCIBonoCon2.INIT;
            lrCIBonoCon2.TRANSFERFIELDS(lrCIBonoCon);
            IF lwExiste THEN
              MESSAGE(Text010,lrCIBonoCon.TABLECAPTION,lrCIBonoCon.Delegacion,
                               lrCIBonoCon.TourOperador,lrCIBonoCon.Bono,lrCIxBono.Bono,lrCIxBono."N§ Reserva",
                               lrCIxBono."N§ Secuencia",lrCIxBono."N§ Orden")
            ELSE
              lrCIBonoCon2.INSERT;

            wNoMovs +=1;

            lrCIBonoCon3 := lrCIBonoCon;
            lrCIBonoCon3.Replicado := TRUE;
            lrCIBonoCon3.MODIFY;
          END;
        UNTIL lrCIBonoCon.NEXT = 0;
      END;
      Avanza;

      // ____________________________
      // Resumen reserva

      lrResumen.RESET;
      lrResumen2.RESET;

      lrResumen.SETCURRENTKEY(Replicado);
      lrResumen.SETRANGE(Replicado, FALSE);
      IF lrResumen.FINDFIRST THEN BEGIN
        lwActual := 0;
        lwTotal  := lrResumen.COUNT;

        REPEAT
          lwActual += 1;
          wFinestra.UPDATE(2, ROUND(lwActual / lwTotal * 10000, 1));

          // ----  AJS 20.08.2003
          // ----  Se ha incluido un nuevo campo para indicar los Touroperadores que se traspasan a Hotel Payment

          CLEAR(lrTTOO);
          IF lrResumen."TourOperador Venta" <> '' THEN
            lrTTOO.GET(lrResumen."TourOperador Venta");

          IF lrTTOO."Traspasar Hotel Payment" THEN BEGIN
            lrResumen2.CHANGECOMPANY(rPar."Empres Hotel Payment");
            lwExiste := lrResumen2.GET(lrResumen.Delegacion,lrResumen."N§ Reserva",lrResumen."N§ Cierre");

            lrResumen2.CHANGECOMPANY(rPar."Empres Hotel Payment");
            lrResumen2.LOCKTABLE;
            lrResumen2.INIT;
            lrResumen2.TRANSFERFIELDS(lrResumen);
            IF lwExiste THEN
              MESSAGE(Text011,lrResumen.TABLECAPTION ,
                                       lrResumen.Delegacion,lrResumen."N§ Reserva",lrResumen."N§ Cierre")
            ELSE
              lrResumen2.INSERT;
            wNoMovs +=1;

            lrResumen3 := lrResumen;
            lrResumen3.Replicado             := TRUE;
            lrResumen3."N§ envio delegacion" := rHist."No Exportacion";
            lrResumen3."Enviar delegacion"   := FALSE;
            lrResumen3.MODIFY;

            // _____________________________
            // Resumen Cargo reserva

            lrResCargo.RESET;
            lrResCargo2.RESET;

            lrResCargo.SETRANGE(Delegacion  , lrResumen.Delegacion);
            lrResCargo.SETRANGE("N§ Reserva", lrResumen."N§ Reserva");
            lrResCargo.SETRANGE("N§ Cierre" , lrResumen."N§ Cierre");

            IF lrResCargo.FINDLAST THEN BEGIN
              REPEAT
                lrResCargo2.CHANGECOMPANY(rPar."Empres Hotel Payment");
                lwExiste := lrResCargo2.GET(lrResCargo.Delegacion, lrResCargo."N§ Reserva",
                                            lrResCargo."N§ Cargo", lrResCargo."N§ Cierre");

                lrResCargo2.CHANGECOMPANY(rPar."Empres Hotel Payment");
                lrResCargo2.LOCKTABLE;
                lrResCargo2.INIT;
                lrResCargo2 := lrResCargo;
                IF lwExiste THEN
                  MESSAGE(Text012,lrResCargo.TABLECAPTION,
                          lrResCargo.Delegacion,lrResCargo."N§ Reserva",lrResCargo."N§ Cargo",lrResCargo."N§ Cierre")
                ELSE
                  lrResCargo2.INSERT;
                lrResCargo.Replicado := TRUE;
                lrResCargo.MODIFY;
                wNoMovs +=1;
              UNTIL lrResCargo.NEXT(-1)=0;
            END;

            // ____________________________
            // Resumen Extra reserva

            lrResExtra.RESET;
            lrResExtra2.RESET;

            lrResExtra.SETRANGE(Delegacion  , lrResumen.Delegacion);
            lrResExtra.SETRANGE("N§ Reserva", lrResumen."N§ Reserva");
            lrResExtra.SETRANGE("N§ Cierre" , lrResumen."N§ Cierre");
            IF lrResExtra.FINDLAST THEN BEGIN
              REPEAT
                lrResExtra2.CHANGECOMPANY(rPar."Empres Hotel Payment");
                lwExiste    := lrResExtra2.GET(lrResExtra.Delegacion,lrResExtra."N§ Reserva",
                                               lrResExtra."N§ Extra",lrResExtra."N§ Cierre");

                lrResExtra2.CHANGECOMPANY(rPar."Empres Hotel Payment");
                lrResExtra2.LOCKTABLE;
                lrResExtra2.INIT;
                lrResExtra2 := lrResExtra;
                IF lwExiste THEN
                  MESSAGE(Text012,lrResExtra.TABLECAPTION,
                          lrResExtra.Delegacion,lrResExtra."N§ Reserva",lrResExtra."N§ Extra",lrResExtra."N§ Cierre")
                ELSE
                  lrResExtra2.INSERT;
                lrResExtra.Replicado := TRUE;
                lrResExtra.MODIFY;
                wNoMovs +=1;
              UNTIL lrResExtra.NEXT(-1)=0;
            END;
          END;
        UNTIL lrResumen.NEXT = 0;
      END;
      Avanza;
    END;

    PROCEDURE BajaLineas@11();
    VAR
      lrAct@1103355000 : Record 7010001;
      lrAct2@1103355001 : Record 7010001;
    BEGIN
      // BajaLineas
      // Borra en la empresa de Hotel Payment todos los registros que se han dado de baja en las delegaciones


      wFinestra.UPDATE(1,Text013);
      lrAct.RESET;
      IF lrAct.FINDSET THEN BEGIN
        REPEAT
          lrAct2 := lrAct;
          BorraLinea2(lrAct2);
          lrAct2.DELETE;
          wNoMovs +=1;
        UNTIL lrAct.NEXT=0;
      END;
    END;

    PROCEDURE BorraLinea@2(VAR prAct@1103355000 : Record 7010001);
    VAR
      lrHotel@1103355001 : Record 7009724;
      lrContC@1103355002 : Record 7009723;
      lrPrecContC@1103355003 : Record 7009738;
      lrContV@1103355004 : Record 7009727;
      lrPrecContV@1103355005 : Record 7009732;
      lrComCont@1103355006 : Record 7009784;
      lrConvHab@1103355007 : Record 7009731;
      lPagGarC@1103355008 : Record 7009726;
      lrHandFee@1103355010 : Record 7009733;
      lrTTOO@1103355011 : Record 7009717;
      lrCodCar@1103355012 : Record 7009759;
      lrCodExt@1103355013 : Record 7009760;
      lrRegim@1103355014 : Record 7009712;
      lrHabBas@1103355015 : Record 7009711;
      lwOk@1103355016 : Boolean;
      lwEntero@1103355017 : ARRAY [2] OF Integer;
      lwFecha@1103355018 : ARRAY [2] OF Date;
    BEGIN
      // BorraLinea
      // Borra la linea detallada en el parametro en la empresa de Hotel Payment

      CLEAR(lwEntero);
      CLEAR(lwFecha);
      CASE prAct."No Tabla" OF
        50024: BEGIN // Hotel
                 lrHotel.RESET;
                 lrHotel.CHANGECOMPANY(rPar."Empres Hotel Payment");
                 IF lrHotel.GET(prAct.ID) THEN
                   lrHotel.DELETE(TRUE);
               END;
        50023: BEGIN // Contrato compra hotel
                 lrContC.RESET;
                 lrContC.CHANGECOMPANY(rPar."Empres Hotel Payment");
                 IF lrContC.GET(SELSTR(1,prAct.ID),SELSTR(2,prAct.ID)) THEN
                   lrContC.DELETE(TRUE);
               END;
        50038: BEGIN // Precios contrato compra
                 lrPrecContC.RESET;
                 lrPrecContC.CHANGECOMPANY(rPar."Empres Hotel Payment");
                 lwOk := EVALUATE(lwEntero[1],SELSTR(3,prAct.ID));
                 lwOk := lwOk AND EVALUATE(lwEntero[2],SELSTR(4,prAct.ID));
                 IF lwOk AND lrPrecContC.GET (SELSTR(1,prAct.ID),SELSTR(2,prAct.ID),lwEntero[1],lwEntero[2]) THEN
                   lrPrecContC.DELETE(TRUE)
               END;
        50027: BEGIN // Contrato venta hotel
                 lrContV.RESET;
                 lrContV.CHANGECOMPANY(rPar."Empres Hotel Payment");
                 IF lrContV.GET(SELSTR(1,prAct.ID),SELSTR(2,prAct.ID)) THEN
                   lrContV.DELETE(TRUE);
               END;
        50032: BEGIN // Precios contrato venta
                 lrPrecContV.RESET;
                 lrPrecContV.CHANGECOMPANY(rPar."Empres Hotel Payment");
                 lwOk := EVALUATE(lwEntero[1],SELSTR(3,prAct.ID));
                 lwOk := lwOk AND EVALUATE(lwEntero[2],SELSTR(4,prAct.ID));
                 IF lwOk AND lrPrecContV.GET (SELSTR(1,prAct.ID),SELSTR(2,prAct.ID),lwEntero[1],lwEntero[2]) THEN
                   lrPrecContV.DELETE(TRUE);
               END;

        50084: BEGIN // Comentarios Contrato
                 lrComCont.RESET;
                 lrComCont.CHANGECOMPANY(rPar."Empres Hotel Payment");
                 lwOk := EVALUATE(lwEntero[1],SELSTR(3,prAct.ID));
                 lwOk := lwOk AND EVALUATE(lwEntero[2],SELSTR(4,prAct.ID));
                 IF lwOk AND lrComCont.GET (SELSTR(1,prAct.ID),SELSTR(2,prAct.ID),lwEntero[1],lwEntero[2]) THEN
                   lrComCont.DELETE(TRUE);
               END;

        50031: BEGIN  // Conversion Habitacion
                 lrConvHab.RESET;
                 lrConvHab.CHANGECOMPANY(rPar."Empres Hotel Payment");
                 lwOk := EVALUATE(lwEntero[1],SELSTR(3,prAct.ID));
                 IF lwOk AND lrConvHab.GET (SELSTR(1,prAct.ID),SELSTR(2,prAct.ID),lwEntero[1],
                                           SELSTR(4,prAct.ID),SELSTR(5,prAct.ID)) THEN
                   lrConvHab.DELETE(TRUE);
               END;

        50026: BEGIN  //Pago garantia compra hotel
                 lPagGarC.RESET;
                 lPagGarC.CHANGECOMPANY(rPar."Empres Hotel Payment");
                 lwOk := EVALUATE(lwFecha[1],SELSTR(3,prAct.ID));
                 IF lwOk AND lPagGarC.GET(SELSTR(1,prAct.ID),SELSTR(2,prAct.ID),lwFecha[1]) THEN
                   lPagGarC.DELETE(TRUE);
               END;

        50033: BEGIN  // Handling fee contrato
                 lrHandFee.RESET;
                 lrHandFee.CHANGECOMPANY(rPar."Empres Hotel Payment");
                 lwOk := EVALUATE(lwEntero[1],SELSTR(3,prAct.ID));
                 lwOk := lwOk AND EVALUATE(lwFecha[1],SELSTR(5,prAct.ID));
                 lwOk := lwOk AND EVALUATE(lwFecha[2],SELSTR(6,prAct.ID));
                 IF lwOk AND lrHandFee.GET(SELSTR(1, prAct.ID),SELSTR(2, prAct.ID), lwEntero[1],
                                           SELSTR(4, prAct.ID), lwFecha[1], lwFecha[2]) THEN
                   lrHandFee.DELETE(TRUE);
               END;

        50017: BEGIN // Touroperador
                 lrTTOO.RESET;
                 lrTTOO.CHANGECOMPANY(rPar."Empres Hotel Payment");
                 IF lrTTOO.GET(prAct.ID) THEN
                   lrTTOO.DELETE(TRUE);
               END;
        50059: BEGIN // Codigo Cargo
                 lrCodCar.RESET;
                 lrCodCar.CHANGECOMPANY(rPar."Empres Hotel Payment");
                 IF lrCodCar.GET(prAct.ID) THEN
                   lrCodCar.DELETE(TRUE);
               END;
        50060: BEGIN // Codigo Extra
                 lrCodExt.RESET;
                 lrCodExt.CHANGECOMPANY(rPar."Empres Hotel Payment");
                 IF lrCodExt.GET(prAct.ID) THEN
                   lrCodExt.DELETE(TRUE);
               END;
        50012: BEGIN // Regimen
                 lrRegim.RESET;
                 lrRegim.CHANGECOMPANY(rPar."Empres Hotel Payment");
                 IF lrRegim.GET(prAct.ID) THEN
                   lrRegim.DELETE(TRUE);
               END;
        50011: BEGIN // Habitacion basica
                 lrHabBas.RESET;
                 lrHabBas.CHANGECOMPANY(rPar."Empres Hotel Payment");
                 IF lrHabBas.GET(prAct.ID) THEN
                   lrHabBas.DELETE(TRUE);
               END;
      END;

      Avanza;
    END;

    PROCEDURE BorraLinea2@1103355000(VAR prAct@1103355000 : Record 7010001);
    VAR
      lwReg@1103355001 : RecordRef;
    BEGIN
      // BorraLinea2

      lwReg.OPEN(prAct."No Tabla", FALSE, rPar."Empres Hotel Payment");
      lwReg.SETPOSITION(prAct.ID);
      IF lwReg.FIND THEN
        lwReg.DELETE;

      Avanza;
    END;

    PROCEDURE InsertaLinAct@1103355003(VAR PwReg@1103355001 : RecordRef);
    VAR
      lrAct@1103355000 : Record 7010001;
    BEGIN
      // InsertaLinAct
      // Inserta una linea de Borrado "Actions Envio Delegacion"

      CLEAR(lrAct);
      lrAct."No Tabla" := PwReg.NUMBER;
      lrAct.ID         := PwReg.GETPOSITION;
      lrAct.INSERT(TRUE);
    END;

    PROCEDURE SELSTR@3(pwNo@1103355000 : Integer;pwCadena@1103355001 : Text[250]) : Text[250];
    VAR
      lwCont@1103355002 : Integer;
      lwTexto@1103355003 : Text[250];
      lwPos@1103355004 : Integer;
    BEGIN

      // SELSTR
      // Es igual que la funci¢n SELECTSTR de Navisi¢n pero esta funciona
      //

      IF pwNo < 1 THEN
        EXIT('');
      lwTexto := pwCadena;
      FOR lwCont:= 0 TO pwNo-1 DO BEGIN
        IF lwCont>0 THEN
          lwTexto:=COPYSTR(lwTexto,STRPOS(lwTexto,',')+1,STRLEN(lwTexto));
      END;
      // Si tiene cadenas detras tambien las borramos

      lwPos := STRPOS(lwTexto,',');
      IF lwPos <> 0  THEN
        lwTexto:=COPYSTR(lwTexto,1,STRPOS(lwTexto,',')-1);
      EXIT(lwTexto);
    END;

    PROCEDURE Avanza@8();
    BEGIN
      // Avanza
      // Dibuja la linea de progreso de la ventana

      wNumMv += 1;
      IF wNumMv <= wTotalMv THEN
        wFinestra.UPDATE(2, ROUND(wNumMv / wTotalMv * 10000, 1));
      wFinestra.UPDATE(3, wNoMovs);
    END;

    PROCEDURE ExpBonoAutomatico@1103355002(VAR prBono@1103355020 : Record 7010013);
    VAR
      lrBonos2@1103355001 : Record 7010013;
      lrBonos3@1103355002 : Record 7010013;
      lrCIxBono@1103355000 : Record 7010018;
      lrCIxBono2@1103355004 : Record 7010018;
      lrCIxBono3@1103355005 : Record 7010018;
      lrCIBonoCon@1103355006 : Record 7010019;
      lrCIBonoCon2@1103355007 : Record 7010019;
      lrCIBonoCon3@1103355018 : Record 7010019;
      lrResumen@1103355008 : Record 7009771;
      lrResumen2@1103355009 : Record 7009771;
      lrResumen3@1103355019 : Record 7009771;
      lrResCargo@1103355010 : Record 7009746;
      lrResCargo2@1103355011 : Record 7009746;
      lrResExtra@1103355012 : Record 7009745;
      lrResExtra2@1103355013 : Record 7009745;
      lrTTOO@1103355014 : Record 7009717;
      lrParAgencia@1103355016 : Record 7009700;
      lwExiste@1103355015 : Boolean;
    BEGIN
      // ExpBonoAutomatico
      // Exportaci¢n autom tica a la empresa HotPayment cuando se cierra una reserva.

      lrParAgencia.FINDFIRST;

      CLEAR(lrTTOO);
      IF prBono.TourOperador <> '' THEN
        lrTTOO.GET(prBono.TourOperador);

      IF lrTTOO."Traspasar Hotel Payment" THEN BEGIN
        lrBonos2.CHANGECOMPANY(lrParAgencia."Empres Hotel Payment");
        lwExiste := lrBonos2.GET(prBono.Delegacion, prBono.TourOperador, prBono.Bono,
                                     prBono."N§ Reserva", prBono."N§ Secuencia");

        lrBonos2.CHANGECOMPANY(lrParAgencia."Empres Hotel Payment");
        lrBonos2.LOCKTABLE;
        lrBonos2.INIT;

        lrBonos3.TRANSFERFIELDS(lrBonos2);

        lrBonos2.TRANSFERFIELDS(prBono);

        lrBonos2.Validado               := lrBonos3.Validado;
        lrBonos2."Importe en FPR"       := lrBonos3."Importe en FPR";
        lrBonos2."Ultimo importe Blank" := lrBonos3."Ultimo importe Blank";
        lrBonos2."Tipo conciliacion"    := lrBonos3."Tipo conciliacion";
        lrBonos2."Precios no coinciden" := lrBonos3."Precios no coinciden";
        lrBonos2."No aplica ofertas"    := lrBonos3."No aplica ofertas";
        lrBonos2."Falta de dtos extras" := lrBonos3."Falta de dtos extras";
        lrBonos2."Falta bono"           := lrBonos3."Falta bono";
        lrBonos2.Otros                  := lrBonos3.Otros;
        lrBonos2.Reclamada              := lrBonos3.Reclamada;
        lrBonos2.Observaciones          := lrBonos3.Observaciones;
        lrBonos2."Provision generada"   := lrBonos3."Provision generada";
        lrBonos2."Bono garantia"        := lrBonos3."Bono garantia";
        lrBonos2."Conciliacion BLANK"   := lrBonos3."Conciliacion BLANK";
        lrBonos2."N§ HPL"               := lrBonos3."N§ HPL";
        lrBonos2."Validacion Autorizada":= lrBonos3."Validacion Autorizada";

        IF lwExiste THEN
          lrBonos2.MODIFY
        ELSE
          lrBonos2.INSERT;

        lrBonos3 := prBono;
        lrBonos3.Replicado := TRUE;
        lrBonos3.MODIFY;
      END;

      // ____________________________
      // C/I x Bono
      //lrCIxBono.GET(prBono.Delegacion, prBono.TourOperador, prBono.Bono,
      //              prBono."N§ Reserva", prBono."N§ Secuencia", pwNumOrden);
      lrCIxBono.SETRANGE(Delegacion    , prBono.Delegacion);
      lrCIxBono.SETRANGE(TourOperador  , prBono.TourOperador);
      lrCIxBono.SETRANGE(Bono          , prBono.Bono);
      lrCIxBono.SETRANGE("N§ Reserva"  , prBono."N§ Reserva");
      lrCIxBono.SETRANGE("N§ Secuencia", prBono."N§ Secuencia");
      lrCIxBono.SETRANGE(Replicado     , FALSE);

      IF lrCIxBono.FINDSET THEN BEGIN
        REPEAT

          IF lrTTOO."Traspasar Hotel Payment" THEN BEGIN
            lrCIxBono2.CHANGECOMPANY(lrParAgencia."Empres Hotel Payment");
            lwExiste := lrCIxBono2.GET(prBono.Delegacion, prBono.TourOperador, prBono.Bono,
                                       prBono."N§ Reserva", prBono."N§ Secuencia", lrCIxBono."N§ Orden");

            lrCIxBono2.CHANGECOMPANY(lrParAgencia."Empres Hotel Payment");
            lrCIxBono2.LOCKTABLE;
            lrCIxBono2.INIT;

            lrCIxBono3.TRANSFERFIELDS(lrCIxBono2);

            lrCIxBono2.TRANSFERFIELDS(lrCIxBono);

            lrCIxBono2."N§ cierre central" := lrCIxBono3."N§ cierre central";

            IF NOT lwExiste THEN
              lrCIxBono2.INSERT;

            lrCIxBono3 := lrCIxBono;
            lrCIxBono3.Replicado            := TRUE;
            lrCIxBono3."Enviar delegacion"  := FALSE;
            //lrCIxBono3."N§ envio delegacion":= rHist."No Exportacion"; // **
            lrCIxBono3.MODIFY;
          END;

        UNTIL lrCIxBono.NEXT = 0;
      END;

      // ____________________________
      // C/I x Bono-Concepto

      lrCIBonoCon.SETRANGE(Delegacion       , lrCIxBono.Delegacion);
      lrCIBonoCon.SETRANGE(TourOperador     , lrCIxBono.TourOperador);
      lrCIBonoCon.SETRANGE(Bono             , lrCIxBono.Bono);
      lrCIBonoCon.SETRANGE("N§ Reserva"     , lrCIxBono."N§ Reserva");
      lrCIBonoCon.SETRANGE("N§ Secuencia"   , lrCIxBono."N§ Secuencia");
      lrCIBonoCon.SETRANGE(Replicado        , FALSE);
      lrCIBonoCon.SETRANGE("Concepto ajuste", FALSE);

      IF lrCIBonoCon.FINDSET THEN BEGIN

        REPEAT

          IF lrTTOO."Traspasar Hotel Payment" THEN BEGIN
            lrCIBonoCon2.CHANGECOMPANY(lrParAgencia."Empres Hotel Payment");
            lwExiste := lrCIBonoCon2.GET(lrCIBonoCon.Delegacion,lrCIBonoCon.TourOperador,lrCIBonoCon.Bono,
                                         lrCIBonoCon."N§ Reserva",lrCIBonoCon."N§ Secuencia",
                                         lrCIBonoCon."N§ Orden",lrCIBonoCon.Concepto);

            lrCIBonoCon2.CHANGECOMPANY(lrParAgencia."Empres Hotel Payment");
            lrCIBonoCon2.LOCKTABLE;
            lrCIBonoCon2.INIT;
            lrCIBonoCon2.TRANSFERFIELDS(lrCIBonoCon);

            IF NOT lwExiste THEN
              lrCIBonoCon2.INSERT;

            lrCIBonoCon3 := lrCIBonoCon;
            lrCIBonoCon3.Replicado := TRUE;
            lrCIBonoCon3.MODIFY;
          END;

        UNTIL lrCIBonoCon.NEXT = 0;
      END;

      // ____________________________
      // Resumen reserva

      lrResumen.RESET;
      lrResumen2.RESET;

      lrResumen.SETCURRENTKEY(Delegacion, "TourOperador Venta", Bono, "N§ Responsable");
      lrResumen.SETRANGE(Delegacion, prBono.Delegacion);
      lrResumen.SETRANGE("TourOperador Venta", prBono.TourOperador);
      lrResumen.SETRANGE(Bono, prBono.Bono);
      lrResumen.SETRANGE("N§ Responsable",prBono."N§ Reserva");
      lrResumen.SETRANGE(Replicado, FALSE);

      IF lrResumen.FINDSET THEN BEGIN

        REPEAT

          IF lrTTOO."Traspasar Hotel Payment" THEN BEGIN
            lrResumen2.CHANGECOMPANY(lrParAgencia."Empres Hotel Payment");
            lwExiste := lrResumen2.GET(lrResumen.Delegacion,lrResumen."N§ Reserva",lrResumen."N§ Cierre");

            lrResumen2.CHANGECOMPANY(lrParAgencia."Empres Hotel Payment");
            lrResumen2.LOCKTABLE;
            lrResumen2.INIT;
            lrResumen2.TRANSFERFIELDS(lrResumen);

            IF NOT lwExiste THEN
              lrResumen2.INSERT;

            lrResumen3 := lrResumen;
            lrResumen3.Replicado             := TRUE;
            lrResumen3."N§ envio delegacion" := rHist."No Exportacion";
            lrResumen3."Enviar delegacion"   := FALSE;
            lrResumen3.MODIFY;

            // _____________________________
            // Resumen Cargo reserva

            lrResCargo.RESET;
            lrResCargo2.RESET;

            lrResCargo.SETRANGE(Delegacion  , lrResumen.Delegacion);
            lrResCargo.SETRANGE("N§ Reserva", lrResumen."N§ Reserva");
            lrResCargo.SETRANGE("N§ Cierre" , lrResumen."N§ Cierre");

            IF lrResCargo.FINDLAST THEN BEGIN
              REPEAT
                lrResCargo2.CHANGECOMPANY(lrParAgencia."Empres Hotel Payment");
                lwExiste := lrResCargo2.GET(lrResCargo.Delegacion, lrResCargo."N§ Reserva",
                                            lrResCargo."N§ Cargo", lrResCargo."N§ Cierre");

                lrResCargo2.CHANGECOMPANY(lrParAgencia."Empres Hotel Payment");
                lrResCargo2.LOCKTABLE;
                lrResCargo2.INIT;
                lrResCargo2 := lrResCargo;

                IF NOT lwExiste THEN
                  lrResCargo2.INSERT;

                lrResCargo.Replicado := TRUE;
                lrResCargo.MODIFY;
              UNTIL lrResCargo.NEXT(-1)=0;
            END;

            // ____________________________
            // Resumen Extra reserva

            lrResExtra.RESET;
            lrResExtra2.RESET;

            lrResExtra.SETRANGE(Delegacion  , lrResumen.Delegacion);
            lrResExtra.SETRANGE("N§ Reserva", lrResumen."N§ Reserva");
            lrResExtra.SETRANGE("N§ Cierre" , lrResumen."N§ Cierre");
            IF lrResExtra.FINDLAST THEN BEGIN
              REPEAT

                lrResExtra2.CHANGECOMPANY(lrParAgencia."Empres Hotel Payment");
                lwExiste    := lrResExtra2.GET(lrResExtra.Delegacion,lrResExtra."N§ Reserva",
                                               lrResExtra."N§ Extra",lrResExtra."N§ Cierre");

                lrResExtra2.CHANGECOMPANY(lrParAgencia."Empres Hotel Payment");
                lrResExtra2.LOCKTABLE;
                lrResExtra2.INIT;
                lrResExtra2 := lrResExtra;

                IF NOT lwExiste THEN
                  lrResExtra2.INSERT;

                lrResExtra.Replicado := TRUE;
                lrResExtra.MODIFY;

              UNTIL lrResExtra.NEXT(-1)=0;
            END;
          END;
        UNTIL lrResumen.NEXT = 0;
      END;
    END;

    BEGIN
    {
      Funciones para la exportacion de datos a la empresa centralizada de Hotel Payment

      $001 AJS 29082012 Para saber si tenemos que exportar los resumenes de reserva hay que basarse en el touroperador de venta
    }
    END.
  }
}
