OBJECT Codeunit 7009752 Importacion Texto
{
  OBJECT-PROPERTIES
  {
    Date=23/07/15;
    Time=[ 2:28:20];
    Modified=Yes;
    Version List=AIC2009;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      wFileName@1100253005 : Text[1024];
      wBufferFile@1100253004 : BigText;
      wBufferReg@1100253003 : BigText;
      wBufferField@1100253002 : BigText;
      wFieldSep@1100253001 : Text[30];
      wRegSep@1100253000 : Text[30];
      wFieldDel@1100253006 : Text[30];
      wOptDel@1100253007 : Boolean;
      Text001@1100253008 : TextConst 'ENU=Error: limit was expected %1;ESP=Error: se esperaba delimitador %1.';

    PROCEDURE SetNombreFichero@1100253000(pwFilename@1100253000 : Text[1024]);
    BEGIN
      // SetNombreFichero.

      wFileName := pwFilename;
    END;

    PROCEDURE SetSeparadorCampo@1100253001(pwSep@1100253000 : Text[30]);
    BEGIN
      // SetSeparadorCampo.

      wFieldSep := pwSep;
    END;

    PROCEDURE SetDelimitadorCampo@1100253003(pwFieldDel@1100253000 : Text[30];pwOptDel@1100253001 : Boolean);
    BEGIN
      // SetDelimitadorCampo.

      wFieldDel := pwFieldDel;
      wOptDel   := pwOptDel;
    END;

    PROCEDURE SetSeparadorLinea@1100253002(pwSep@1100253000 : Text[30]);
    BEGIN
      // SetSeparadorLinea.

      wRegSep := pwSep;
    END;

    PROCEDURE AbrirFichero@1100253005();
    VAR
      lrTempBlob@1100253000 : Record 99008535;
      lwInStream@1100253001 : InStream;
    BEGIN
      // AbrirFichero.

      // Si no se indica el separador por defecto de campo se asume un tabulador.
      IF wFieldSep = '' THEN
       wFieldSep[1] := 9;

      // Si no se indica el separador por defecto de l¡nea se asume un salto de pagina CR+LF
      IF wRegSep = '' THEN BEGIN
        wRegSep[1] := 13;
        wRegSep[2] := 10;
      END;

      CLEAR(lrTempBlob);
      lrTempBlob.Blob.IMPORT(wFileName);
      lrTempBlob.CALCFIELDS(Blob);
      lrTempBlob.Blob.CREATEINSTREAM(lwInStream);

      CLEAR(wBufferFile);
      wBufferFile.READ(lwInStream);
    END;

    PROCEDURE AbrirFicheroInStream@1100253006(VAR pwInStream@1100253000 : InStream);
    BEGIN
      // AbrirFicheroInStream.

      // Si no se indica el separador por defecto de campo se asume un tabulador.
      IF wFieldSep = '' THEN
       wFieldSep[1] := 9;

      // Si no se indica el separador por defecto de l¡nea se asume un salto de pagina CR+LF
      IF wRegSep = '' THEN BEGIN
        wRegSep[1] := 13;
        wRegSep[2] := 10;
      END;

      CLEAR(wBufferFile);
      wBufferFile.READ(pwInStream);
    END;

    PROCEDURE GetRegistro@1100253009() rvHayReg : Boolean;
    VAR
      lwPos@1100253000 : Integer;
      lwLen@1100253001 : Integer;
    BEGIN
      // GetRegistro.

      lwLen := wBufferFile.LENGTH;
      IF lwLen = 0 THEN
        EXIT(FALSE);

      CLEAR(wBufferReg);
      lwPos := wBufferFile.TEXTPOS(wRegSep);

      // Recuperamos el registro, sin el separador.
      CASE TRUE OF

        // Final de ficheri sin separador de registro.
        (lwPos = 0): BEGIN
          wBufferFile.GETSUBTEXT(wBufferReg, 1);
          CLEAR(wBufferFile);
        END;

        // Final con separador de registro
        (lwPos = lwLen - STRLEN(wRegSep) + 1): BEGIN
          wBufferFile.GETSUBTEXT(wBufferReg, 1, lwPos - 1);
          CLEAR(wBufferFile);
        END;

        // Registro intermedio
        ELSE BEGIN
          wBufferFile.GETSUBTEXT(wBufferReg, 1, lwPos - 1);
          wBufferFile.GETSUBTEXT(wBufferFile, lwPos + STRLEN(wRegSep));
        END;
      END;

      EXIT(TRUE);
    END;

    PROCEDURE GetCampo@1100253010(VAR prTextBuff@1100253001 : TEMPORARY Record 7009892) rvHayCampo : Boolean;
    VAR
      lwPos@1100253000 : Integer;
      lwIndex@1100253002 : Integer;
      lwPosDel@1100253003 : Integer;
      lwHayDel@1100253004 : Boolean;
    BEGIN
      // GetCampo.

      CLEAR(prTextBuff);
      prTextBuff.DELETEALL;

      IF wBufferReg.LENGTH = 0 THEN
        EXIT(FALSE);

      // Si hay delimitador de campo lo quitamos
      IF wFieldDel <> '' THEN BEGIN
        lwPosDel := wBufferReg.TEXTPOS(wFieldDel);
        lwHayDel := lwPosDel = 1;
        IF NOT lwHayDel AND NOT wOptDel THEN
          ERROR(Text001,wFieldDel);

        IF lwHayDel THEN
          wBufferReg.GETSUBTEXT(wBufferReg, 2);
      END;

      CLEAR(wBufferField);
      IF lwHayDel THEN BEGIN
        lwPosDel := wBufferReg.TEXTPOS(wFieldDel);
        IF lwPosDel = 0 THEN
          ERROR(Text001,wFieldDel);

        wBufferReg.GETSUBTEXT(wBufferField, 1, lwPosDel - 1);
        wBufferReg.GETSUBTEXT(wBufferReg, lwPosDel + 1);

        // Si hay un separador despues del campo recortamos.
        lwPos := wBufferReg.TEXTPOS(wFieldSep);
        IF lwPos = 1 THEN BEGIN
          wBufferReg.GETSUBTEXT(wBufferReg, STRLEN(wFieldSep) + 1);
        END
        ELSE
          CLEAR(wBufferReg);
      END
      ELSE BEGIN

        lwPos := wBufferReg.TEXTPOS(wFieldSep);
        IF lwPos = 0 THEN BEGIN
          wBufferReg.GETSUBTEXT(wBufferField, 1);
          CLEAR(wBufferReg);
        END
        ELSE BEGIN
          wBufferReg.GETSUBTEXT(wBufferField, 1, lwPos - 1);
          // Recortamos el buffer del registro.
          wBufferReg.GETSUBTEXT(wBufferReg, lwPos + STRLEN(wFieldSep));
        END;
      END;

      // Partimos el campo en los trozos necesarios para que quepan en el tama¤o
      // m ximo del tipo text.

      lwIndex := 0;
      WHILE wBufferField.LENGTH <> 0 DO BEGIN
        lwIndex += 1;
        CLEAR(prTextBuff);
        prTextBuff.id   := lwIndex;

        IF wBufferField.LENGTH > MAXSTRLEN(prTextBuff.Text) THEN BEGIN
          wBufferField.GETSUBTEXT(prTextBuff.Text,1, MAXSTRLEN(prTextBuff.Text));
          wBufferField.GETSUBTEXT(wBufferField, MAXSTRLEN(prTextBuff.Text) + 1);
        END
        ELSE BEGIN
          wBufferField.GETSUBTEXT(prTextBuff.Text,1);
          CLEAR(wBufferField);
        END;

        prTextBuff.INSERT;
      END;

      EXIT(TRUE);
    END;

    PROCEDURE GetCopiaRegistro@1100253004(VAR pwCopia@1100253000 : BigText);
    BEGIN
      // GetCopiaRegistro.

      wBufferReg.GETSUBTEXT(pwCopia, 1);
    END;

    PROCEDURE ImportPrepaid@1000000000();
    VAR
      rExcel@1000000012 : ARRAY [2] OF TEMPORARY Record 370;
      rRsv@1000000011 : Record 7009950;
      rConversion@1000000010 : Record 7010271;
      rTO@1000000009 : Record 7009717;
      rPeriodo@1000000008 : Record 7009742;
      wFechaExcursion@1000000007 : Date;
      wFechaVenta@1000000006 : Date;
      wExcursion@1000000005 : Code[10];
      wExcursionName@1000000015 : Text[80];
      wBooking@1000000004 : Code[10];
      wNombre@1000000003 : Text[30];
      wApellidos@1000000002 : Text[30];
      wTipoPersona@1000000001 : Text[30];
      wOk@1000000000 : Boolean;
      cFicheros@1000000013 : Codeunit 412;
      wFileName@1000000014 : Text[1024];
    BEGIN
      // ImportPrepaid

      rTO.RESET;
      IF FORM.RUNMODAL(0, rTO) <> ACTION::LookupOK THEN
        EXIT;

      wFileName := cFicheros.OpenFile('FICHERO EXCURSIONES', '', 2, '', 0);

      rExcel[1].RESET;
      rExcel[1].OpenBook(wFileName, 'EXCURSIONES');
      rExcel[1].ReadSheet;

      rExcel[1].SETFILTER("Row No."  , '>%1', 1);
      rExcel[1].SETRANGE("Column No.", 1);
      IF rExcel[1].FINDSET THEN
      BEGIN
        REPEAT
          wOk := EVALUATE(wFechaVenta, rExcel[1]."Cell Value as Text");

          IF wOk THEN
          BEGIN
            //IF rExcel[2].GET(rExcel[1]."Row No.", 3) THEN
            //  wOk := EVALUATE(wFechaExcursion, rExcel[2]."Cell Value as Text")
            //ELSE
            //  wFechaExcursion := 0D;

            IF rExcel[2].GET(rExcel[1]."Row No.", 2) THEN
              wBooking := rExcel[2]."Cell Value as Text"
            ELSE
              wBooking := '';

            IF rExcel[2].GET(rExcel[1]."Row No.", 3) THEN
              wExcursion := rExcel[2]."Cell Value as Text"
            ELSE
              wExcursion := '';

            IF rExcel[2].GET(rExcel[1]."Row No.", 4) THEN
              wExcursionName := rExcel[2]."Cell Value as Text"
            ELSE
              wExcursionName := '';

            IF rExcel[2].GET(rExcel[1]."Row No.", 6) THEN
              wApellidos := rExcel[2]."Cell Value as Text"
            ELSE
              wApellidos := '';

            IF rExcel[2].GET(rExcel[1]."Row No.", 7) THEN
              wNombre := rExcel[2]."Cell Value as Text"
            ELSE
              wNombre := '';

            IF rExcel[2].GET(rExcel[1]."Row No.", 8) THEN
              wTipoPersona := rExcel[2]."Cell Value as Text"
            ELSE
              wTipoPersona := '';

            rPeriodo.SETRANGE("TourOperador Venta", rTO.TourOperador);
            rPeriodo.SETRANGE(Bono                , wBooking);
            IF NOT rPeriodo.FINDFIRST THEN
              CLEAR(rPeriodo);

            IF wOk THEN
            BEGIN
              rRsv.RESET;
              rRsv.SETRANGE("Booking number", wBooking);
              IF NOT rRsv.FINDFIRST THEN
              BEGIN
                CLEAR(rRsv);
                rRsv.INSERT(TRUE);

                rRsv.Destination := COPYSTR(rTO.TourOperador, 1, 3);
                rRsv."NAV Company" := COMPANYNAME;
                rRsv."Chanel Id" := 'TTOO';
                rRsv.VALIDATE("Sale date"     , wFechaVenta);
                rRsv.VALIDATE(Touroperador    , rTO.TourOperador);
                rRsv.VALIDATE("Booking number", wBooking);
                rRsv.VALIDATE(Excursion       , wExcursion);
                rRsv.VALIDATE("Excursion name", wExcursionName);
                rRsv.VALIDATE("Service Date"  , rPeriodo."Fecha entrada");
                IF wTipoPersona = 'AD' THEN
                  rRsv.VALIDATE(Adults, 1)
                ELSE
                  rRsv.VALIDATE(Children, 1);
                rRsv.VALIDATE(Hotel, rPeriodo."Hotel Booking");
                rRsv.Name := wNombre + ' ' + wApellidos;
                rRsv.MODIFY;
              END
              ELSE
              BEGIN
                IF wTipoPersona = 'AD' THEN
                  rRsv.VALIDATE(Adults, rRsv.Adults + 1)
                ELSE
                  rRsv.VALIDATE(Children, rRsv.Children + 1);
                rRsv.MODIFY;
              END;
            END;
          END;
        UNTIL rExcel[1].NEXT = 0;
      END;

      MESSAGE('Bonos importados');
    END;

    BEGIN
    END.
  }
}
