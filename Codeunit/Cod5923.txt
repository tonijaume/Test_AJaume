OBJECT Codeunit 5923 Service-Quote to Order
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=NAVW16.00.01;
  }
  PROPERTIES
  {
    TableNo=5900;
    Permissions=TableData 5914=m,
                TableData 5950=rimd;
    OnRun=VAR
            ServQuoteLine@1001 : Record 5902;
            CustCheckCreditLimit@1000 : Codeunit 312;
            ItemCheckAvail@1002 : Codeunit 311;
          BEGIN
            NewServHeader := Rec;

            ServMgtSetup.GET;

            NewServHeader."Document Type" := "Document Type"::Order;

            CustCheckCreditLimit.ServiceHeaderCheck(NewServHeader);

            ServQuoteLine.SETRANGE("Document Type","Document Type");
            ServQuoteLine.SETRANGE("Document No.","No.");
            ServQuoteLine.SETRANGE(Type,ServQuoteLine.Type::Item);
            ServQuoteLine.SETFILTER("No.",'<>%1','');
            IF ServQuoteLine.FIND('-') THEN
              REPEAT
                ServLine := ServQuoteLine;
                ServLine.VALIDATE("Reserved Qty. (Base)",0);
                ServLine."Line No." := 0;
                IF GUIALLOWED THEN
                  ItemCheckAvail.ServiceInvLineCheck(ServLine);
              UNTIL ServQuoteLine.NEXT = 0;

            WITH NewServHeader DO BEGIN
              "No." := '';
              "No. Printed" := 0;
              Status := Status::Pending;
              "Order Date" := WORKDATE;
              "Order Time" := TIME;
              "Actual Response Time (Hours)" := 0;
              "Service Time (Hours)" := 0;
              "Starting Date" := 0D;
              "Starting Time" := 0T;
              "Finishing Date" := 0D;
              "Finishing Time" := 0T;

              TestNoSeries;
              NoSeriesMgt.InitSeries(GetNoSeriesCode,'',0D,"No.","No. Series");

              NewServHeader.COPYLINKS(Rec);
              INSERT(TRUE);

              ServCommentLine.RESET;
              ServCommentLine.SETRANGE("Table Name",ServCommentLine."Table Name"::"Service Header");
              ServCommentLine.SETRANGE("Table Subtype",Rec."Document Type");
              ServCommentLine.SETRANGE("No.",Rec."No.");
              ServCommentLine.SETRANGE("Table Line No.", 0);
              IF ServCommentLine.FIND('-') THEN
                REPEAT
                  ServCommentLine2 := ServCommentLine;
                  ServCommentLine2."Table Subtype" := "Document Type";
                  ServCommentLine2."No." := "No.";
                  ServCommentLine2.INSERT;
                UNTIL ServCommentLine.NEXT = 0;

              ServOrderAlloc.RESET;
              ServOrderAlloc.SETCURRENTKEY("Document Type","Document No.",Status);
              ServOrderAlloc.SETRANGE("Document Type",Rec."Document Type");
              ServOrderAlloc.SETRANGE("Document No.",Rec."No.");
              ServOrderAlloc.SETRANGE(Status,ServOrderAlloc.Status::Active);
              WHILE ServOrderAlloc.FIND('-') DO BEGIN
                ServOrderAlloc."Document Type" := "Document Type";
                ServOrderAlloc."Document No." := "No.";
                ServOrderAlloc."Service Started" := TRUE;
                ServOrderAlloc.Status := ServOrderAlloc.Status::"Reallocation Needed";
                ServOrderAlloc.MODIFY;
              END;

              ServItemLine.RESET;
              ServItemLine.SETRANGE("Document Type",Rec."Document Type");
              ServItemLine.SETRANGE("Document No.",Rec."No.");
              IF ServItemLine.FIND('-') THEN BEGIN
                REPEAT
                  ServItemLine2 := ServItemLine;
                  ServItemLine2."Document Type" := "Document Type";
                  ServItemLine2."Document No." := "No.";
                  ServItemLine2.UpdateResponseTimeHours;
                  ServItemLine2.CalculateResponseDateTime("Order Date","Order Time");
                  ServItemLine2."Starting Date" := 0D;
                  ServItemLine2."Starting Time" := 0T;
                  ServItemLine2."Actual Response Time (Hours)" := 0;
                  ServItemLine2."Finishing Date" := 0D;
                  ServItemLine2."Finishing Time" := 0T;
                  RepairStatus.RESET;
                  RepairStatus.SETRANGE(Initial,TRUE);
                  IF RepairStatus.FIND('-') THEN
                    ServItemLine2."Repair Status Code" := RepairStatus.Code;
                  ServItemLine2.INSERT(TRUE);
                UNTIL ServItemLine.NEXT = 0;
              END;
              UpdateResponseDateTime;

              LoanerEntry.RESET;
              LoanerEntry.SETCURRENTKEY("Document Type", "Document No.");
              LoanerEntry.SETRANGE("Document Type", Rec."Document Type" + 1);
              LoanerEntry.SETRANGE("Document No.", Rec."No.");
              WHILE LoanerEntry.FIND('-') DO BEGIN
                LoanerEntry."Document Type" := "Document Type" + 1;
                LoanerEntry."Document No." := "No.";
                LoanerEntry.MODIFY;
              END;

              ServCommentLine.RESET;
              ServCommentLine.SETRANGE("Table Name",ServCommentLine."Table Name"::"Service Header");
              ServCommentLine.SETRANGE("Table Subtype",Rec."Document Type");
              ServCommentLine.SETRANGE("No.",Rec."No.");
              ServCommentLine.SETFILTER("Table Line No.", '>%1', 0);
              IF ServCommentLine.FIND('-') THEN
                REPEAT
                  ServCommentLine2 := ServCommentLine;
                  ServCommentLine2."Table Subtype" := "Document Type";
                  ServCommentLine2."No." := "No.";
                  ServCommentLine2.INSERT;
                UNTIL ServCommentLine.NEXT = 0;

              ServLine.RESET;
              ServLine.SETRANGE("Document Type",Rec."Document Type");
              ServLine.SETRANGE("Document No.",Rec."No.");
              IF ServLine.FIND('-') THEN BEGIN
                REPEAT
                  ServLine2 := ServLine;
                  ServLine2."Document Type" := "Document Type";
                  ServLine2."Document No." := "No.";
                  ServLine2.INSERT;
                  ReserveServiceLine.TransServLineToServLine(ServLine,ServLine2,ServLine.Quantity);
                UNTIL ServLine.NEXT = 0;
              END;

              QuoteLineDim.RESET;
              QuoteLineDim.SETRANGE("Table ID",DATABASE::"Service Line");
              QuoteLineDim.SETRANGE("Document Type",Rec."Document Type");
              QuoteLineDim.SETRANGE("Document No.",Rec."No.");
              IF QuoteLineDim.FIND('-') THEN BEGIN
                REPEAT
                  OrderLineDim.INIT;
                  OrderLineDim."Table ID" := DATABASE::"Service Line";
                  OrderLineDim."Document Type" := "Document Type";
                  OrderLineDim."Document No." := "No.";
                  OrderLineDim."Line No." := QuoteLineDim."Line No.";
                  OrderLineDim."Dimension Code" := QuoteLineDim."Dimension Code";
                  OrderLineDim."Dimension Value Code" := QuoteLineDim."Dimension Value Code";
                  OrderLineDim.INSERT;
                UNTIL QuoteLineDim.NEXT = 0;
                QuoteLineDim.DELETEALL;
              END;

              QuoteItemLineDim.RESET;
              QuoteItemLineDim.SETRANGE("Table ID",DATABASE::"Service Item Line");
              QuoteItemLineDim.SETRANGE("Document Type",Rec."Document Type");
              QuoteItemLineDim.SETRANGE("Document No.",Rec."No.");
              IF QuoteItemLineDim.FIND('-') THEN BEGIN
                REPEAT
                  OrderItemLineDim.INIT;
                  OrderItemLineDim."Table ID" := DATABASE::"Service Item Line";
                  OrderItemLineDim."Document Type" := "Document Type";
                  OrderItemLineDim."Document No." := "No.";
                  OrderItemLineDim."Line No." := QuoteItemLineDim."Line No.";
                  OrderItemLineDim."Dimension Code" := QuoteItemLineDim."Dimension Code";
                  OrderItemLineDim."Dimension Value Code" := QuoteItemLineDim."Dimension Value Code";
                  OrderItemLineDim.INSERT;
                UNTIL QuoteItemLineDim.NEXT = 0;
                QuoteItemLineDim.DELETEALL;
              END;

              QuoteHeaderDim.RESET;
              QuoteHeaderDim.SETRANGE("Table ID",DATABASE::"Service Header");
              QuoteHeaderDim.SETRANGE("Document Type",Rec."Document Type");
              QuoteHeaderDim.SETRANGE("Document No.",Rec."No.");
              IF QuoteHeaderDim.FIND('-') THEN BEGIN
                REPEAT
                  OrderHeaderDim.INIT;
                  OrderHeaderDim."Table ID" := DATABASE::"Service Header";
                  OrderHeaderDim."Document Type" := "Document Type";
                  OrderHeaderDim."Document No." := "No.";
                  OrderHeaderDim."Line No." := QuoteHeaderDim."Line No.";
                  OrderHeaderDim."Dimension Code" := QuoteHeaderDim."Dimension Code";
                  OrderHeaderDim."Dimension Value Code" := QuoteHeaderDim."Dimension Value Code";
                  OrderHeaderDim.INSERT;
                UNTIL QuoteHeaderDim.NEXT = 0;
                QuoteHeaderDim.DELETEALL;
              END;

              ServLogMgt.ServOrderQuoteChanged(NewServHeader,Rec);
              ServLine.DELETEALL(TRUE);
            END;

            DELETE(TRUE);
          END;

  }
  CODE
  {
    VAR
      ServMgtSetup@1006 : Record 5911;
      RepairStatus@1004 : Record 5927;
      ServItemLine@1001 : Record 5901;
      ServItemLine2@1008 : Record 5901;
      ServLine@1000 : Record 5902;
      ServLine2@1009 : Record 5902;
      ServOrderAlloc@1005 : Record 5950;
      NewServHeader@1010 : Record 5900;
      LoanerEntry@1019 : Record 5914;
      ServCommentLine@1020 : Record 5906;
      ServCommentLine2@1021 : Record 5906;
      QuoteHeaderDim@1018 : Record 357;
      OrderHeaderDim@1017 : Record 357;
      QuoteLineDim@1016 : Record 357;
      OrderLineDim@1015 : Record 357;
      QuoteItemLineDim@1003 : Record 357;
      OrderItemLineDim@1002 : Record 357;
      NoSeriesMgt@1007 : Codeunit 396;
      ServLogMgt@1011 : Codeunit 5906;
      ReserveServiceLine@1012 : Codeunit 99000842;

    LOCAL PROCEDURE TestNoSeries@21() : Boolean;
    BEGIN
      ServMgtSetup.TESTFIELD("Service Order Nos.");
    END;

    LOCAL PROCEDURE GetNoSeriesCode@20() : Code[10];
    BEGIN
      EXIT(ServMgtSetup."Service Order Nos.");
    END;

    PROCEDURE ReturnOrderNo@1() : Code[20];
    BEGIN
      EXIT(NewServHeader."No.");
    END;

    BEGIN
    END.
  }
}
