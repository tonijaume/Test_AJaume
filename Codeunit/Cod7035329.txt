OBJECT Codeunit 7035329 Generacion EXCEL
{
  OBJECT-PROPERTIES
  {
    Date=24/11/14;
    Time=13:08:49;
    Modified=Yes;
    Version List=TRANSFER;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text50002@1103355002 : TextConst 'ESP=Total';
      Text50003@1103355003 : TextConst 'ESP=D';
      Text50004@1103355004 : TextConst 'ESP=A';
      Text50005@1103355005 : TextConst 'ESP=K';
      Text50006@1103355006 : TextConst 'ESP=J';
      Text50007@1103355007 : TextConst 'ESP="Total "';
      Text50008@1103355008 : TextConst 'ESP=" del TTOO "';
      Text50009@1103355009 : TextConst 'ESP="Total del TTOO "';
      Text50010@1103355010 : TextConst 'ESP="Total del Cliente "';
      Text50011@1103355011 : TextConst 'ESP=" del Cliente "';
      Text50012@1103355012 : TextConst 'ESP=Total Final';
      Text50013@1103355013 : TextConst 'ESP=VIAJES';
      Text50014@1103355014 : TextConst 'ESP=PAX';
      Text50015@1103355015 : TextConst 'ESP=EXCURSION';
      Text50016@1103355016 : TextConst 'ESP=B';
      Text50017@1103355017 : TextConst 'ESP=C';
      Text50018@1103355018 : TextConst 'ESP=F';
      Text50019@1103355019 : TextConst 'ESP=G';
      Text50020@1103355020 : TextConst 'ESP=H';
      Text50021@1103355021 : TextConst 'ESP=I';
      Text50022@1103355022 : TextConst 'ESP=" a "';
      Text50023@1103355023 : TextConst 'ESP=E';
      Text50024@1103355024 : TextConst 'ESP=Pax transp. x Periodo';
      Text50025@1103355025 : TextConst 'ESP=Pax transp. Acumulados';
      Text50026@1103355026 : TextConst 'ESP=Viajes x Periodo';
      Text50027@1103355027 : TextConst 'ESP=Viajes Acumulados';
      Text50032@1103355032 : TextConst 'ESP=Cliente';
      Text50033@1103355033 : TextConst 'ESP=TTOO';
      Text50034@1103355034 : TextConst 'ESP=Tipo Vehiculo';
      Text50035@1103355035 : TextConst 'ESP=Total General';
      Text50036@1103355036 : TextConst 'ESP=A1';
      rPar@1103350000 : Record 7010311;
      xlApp@1103350001 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00024500-0000-0000-C000-000000000046}:Unknown Automation Server.Application";
      xlLibro@1103350002 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";
      xlHoja@1103350003 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00020820-0000-0000-C000-000000000046}:Unknown Automation Server.Worksheet";
      FileName@1103350004 : Text[250];
      aCS@1103350005 : ARRAY [3,2] OF Code[10];
      ID_VALOR@1103350006 : TextConst 'ESP=VALOR';
      ID_TOTAL@1103350007 : TextConst 'ESP=TOTAL';
      ID_CLIENTE@1103350008 : TextConst 'ESP=CLIENTE';
      ID_GRUPO@1103350009 : TextConst 'ESP=GRUPO';
      aDesgloses@1103350010 : ARRAY [10,2] OF Integer;
      wNumDesgloses@1103350011 : Integer;
      window@1103350012 : Dialog;
      text01@1103350013 : TextConst 'ESP=Generando temporal';
      text02@1103350014 : TextConst 'ESP=Generando documento EXCEL';
      text03@1103350015 : TextConst 'ESP=Finalizando proceso';
      wEstudio@1103350016 : Code[10];
      Text0001@1103350017 : TextConst 'ESP=Planning.xls';
      Text0002@1103350018 : TextConst 'ESP=PLANNING DE SERVICIOS';
      Text0003@1103350019 : TextConst 'ESP=Empresa:';
      Text0004@1103350020 : TextConst 'ESP=Fecha Servicios:';
      Text0100@1103350021 : TextConst 'ESP=Entrada';
      Text0101@1103350022 : TextConst 'ESP=Salidas';
      Text0102@1103350023 : TextConst 'ESP=Excursion';

    PROCEDURE Calcular@1(pPeriodoActual@1103350000 : Text[30];pPeriodoAnterior@1103350001 : Text[30];pIniAcumActual@1103350002 : Date;pIniAcumAnterior@1103350003 : Date;pSoloConActividad@1103350004 : Boolean;pSelVehiculos@1103350005 : 'Todos los Veh¡culos,Seg£n Selecci¢n';pSelTTOO@1103350006 : 'Todos los Clientes,Seg£n Selecci¢n';pGaraje@1103350007 : Code[10];pTotCli@1103350008 : Boolean;pTotTTOO@1103350009 : Boolean;pTotTV@1103350010 : Boolean;pTotGeneral@1103350011 : Boolean;pDesgloseTVxCli@1103350012 : Boolean;pDesgloseTVxTTOO@1103350013 : Boolean;pNumDesgloses@1103350014 : Integer;pDesgloses@1103350015 : ARRAY [10,2] OF Integer;pEstudio@1103350016 : Code[10]);
    VAR
      rParametros@1103350017 : Record 7010311;
      rTemp@1103350018 : Record 7010393;
      rAuxTemp@1103350019 : Record 7010393;
      lAcumAnterior@1103350020 : Text[30];
      lAcumActual@1103350021 : Text[30];
      lLinea@1103350022 : Integer;
      rTV@1103350023 : Record 7010345;
    BEGIN
      //Calcular();

      rPar.FINDFIRST;
      lAcumAnterior := FORMAT(pIniAcumAnterior)+'..'+FORMAT(ObtenerFinalPeriodo(pPeriodoAnterior));
      lAcumActual   := FORMAT(pIniAcumActual)+'..'+FORMAT(ObtenerFinalPeriodo(pPeriodoActual));
      lLinea        := 13;

      window.OPEN('#1#############################################');

      rParametros.FINDFIRST;

      CopiarDesgloses(pDesgloses);

      wNumDesgloses := pNumDesgloses;
      wEstudio      := pEstudio;
      GenerarTemporal(pPeriodoActual,pPeriodoAnterior,lAcumActual,lAcumAnterior,pSelVehiculos,pSelTTOO,pGaraje);

      FileName := rParametros."Ubicacion Fichero EXCEL";

      CREATE(xlApp);
      // xlLibro := xlApp.Workbooks._Open(FileName,TRUE);
      xlLibro := xlApp.Workbooks.Open(FileName,TRUE);

      IF wNumDesgloses > 0 THEN
        xlHoja := xlLibro.Worksheets.Item('Pax x TTOO')
      ELSE
        xlHoja := xlLibro.Worksheets.Item('Viajes x TTOO');

      xlHoja.Activate;


      rTemp.RESET;
      rTemp.SETCURRENTKEY(Usuario,"Tipo Linea",Cliente,TTOO);
      rTemp.SETRANGE(Usuario,USERID);
      rTemp.SETRANGE("Tipo Linea",ID_CLIENTE);

      IF rTemp.FINDSET THEN  BEGIN

        REPEAT

          window.UPDATE(1,text02 +'.  < '+rTemp.Cliente+' / '+rTemp.TTOO+' >');

          IF pDesgloseTVxTTOO THEN BEGIN
            rTV.RESET;
            IF rTV.FINDSET THEN BEGIN
              REPEAT
                //Acumulado por Tipo de Vehiculo.
                VolcarEnExcel(lLinea,rTemp.Cliente,rTemp.TTOO,pPeriodoActual,pPeriodoAnterior,lAcumActual,lAcumAnterior,
                              pSoloConActividad,0,rTV.Codigo,pSelVehiculos,pGaraje);
              UNTIL rTV.NEXT=0;
            END;
          END;

          IF pTotTTOO THEN BEGIN
            //Acumulado por Touroperador.
            VolcarEnExcel(lLinea,rTemp.Cliente,rTemp.TTOO,pPeriodoActual,pPeriodoAnterior,lAcumActual,lAcumAnterior,
                          pSoloConActividad,1,'',pSelVehiculos,pGaraje);
          END;

          rAuxTemp := rTemp;
          IF (rAuxTemp.NEXT=0) OR (rAuxTemp.Cliente <> rTemp.Cliente) THEN BEGIN
            //Acumulados por cliente.
            IF pDesgloseTVxCli THEN BEGIN
              rTV.RESET;
              IF rTV.FINDSET THEN BEGIN
                REPEAT
                  //Acumulado por Tipo de Vehiculo.
                  VolcarEnExcel(lLinea,rTemp.Cliente,'',pPeriodoActual,pPeriodoAnterior,lAcumActual,lAcumAnterior,
                                pSoloConActividad,3,rTV.Codigo,pSelVehiculos,pGaraje);
                UNTIL rTV.NEXT=0;
              END;
            END;

            IF pTotCli THEN BEGIN
              VolcarEnExcel(lLinea,rTemp.Cliente,'',pPeriodoActual,pPeriodoAnterior,lAcumActual,lAcumAnterior,
                              pSoloConActividad,2,'',pSelVehiculos,pGaraje);
            END;

          END;

        UNTIL rTemp.NEXT=0;

      END;

      window.UPDATE(1,text03);

      IF pTotTV THEN
      BEGIN
        //Acumulados por tipo de vehiculo.
        rTV.RESET;
        IF rTV.FINDSET THEN
        BEGIN
          REPEAT
            VolcarEnExcel(lLinea, '', '', pPeriodoActual, pPeriodoAnterior, lAcumActual, lAcumAnterior,
                          pSoloConActividad, 4, rTV.Codigo, pSelVehiculos, pGaraje);
          UNTIL rTV.NEXT=0;
        END;
      END;

      //Acumulados totales.
      IF pTotGeneral THEN BEGIN
        VolcarEnExcel(lLinea,'', '', pPeriodoActual, pPeriodoAnterior, lAcumActual, lAcumAnterior,
                      pSoloConActividad, 5, '', pSelVehiculos, pGaraje);
      END;

      MostrarCabecera(pPeriodoActual, pPeriodoAnterior, pIniAcumActual, pIniAcumAnterior, pSoloConActividad,
                      pSelVehiculos, pSelTTOO, pGaraje, pTotCli, pTotTTOO, pTotTV, pTotGeneral, pDesgloseTVxCli,
                      pDesgloseTVxTTOO, wNumDesgloses);
      window.CLOSE;

      xlApp.Visible(TRUE);
      xlLibro.Saved := TRUE;
      CLEAR(xlApp);
    END;

    PROCEDURE GenerarTemporal@7(pPeriodoActual@1103350000 : Text[30];pPeriodoAnterior@1103350001 : Text[30];pAcumActual@1103350002 : Text[30];pAcumAnterior@1103350003 : Text[30];pSelVehiculos@1103350004 : 'Todos los Veh¡culos,Seg£n Selecci¢n';pSelTTOO@1103350005 : 'Todos los Clientes,Seg£n Selecci¢n';pGaraje@1103350006 : Code[10]);
    VAR
      rTem@1103350007 : Record 7010393;
      rCS@1103350008 : Record 7010320;
      rTV@1103350009 : Record 7010345;
      rParametros@1103350010 : Record 7010311;
      rCliTTOO@1103350011 : Record 7010323;
      lAcumAnterior@1103350012 : Text[30];
      lAcumActual@1103350013 : Text[30];
      lValorPerActual@1103350014 : Decimal;
      lValorPerAnterior@1103350015 : Decimal;
      lValorAcumActual@1103350016 : Decimal;
      lValorAcumAnterior@1103350017 : Decimal;
      i@1103350018 : Integer;
      j@1103350019 : Integer;
      lAuxDesgloses@1103350020 : Integer;
      lDesde@1103350021 : Integer;
      lHasta@1103350022 : Integer;
    BEGIN
      //GenerarTemporal.
      //Borramos el temporal.
      rTem.RESET;
      rTem.SETRANGE(Usuario,USERID);
      rTem.SETFILTER("Tipo Linea",'<>%1',ID_GRUPO);
      rTem.DELETEALL;

      //Llenamos la matriz de tipos de servicio.
      rParametros.FINDFIRST;
      aCS[1,1] := rParametros."Codigo Entradas";
      aCS[2,1] := rParametros."Codigo Salidas";
      aCS[3,1] := rParametros."Codigo Tipo Excursiones";

      rCS.GET(aCS[1,1]);
      aCS[1,2] := rCS."Tipo servicio";
      aCS[2,2] := rCS."Tipo servicio";
      aCS[3,2] := aCS[3,1];

      lAuxDesgloses := 1;
      IF wNumDesgloses > 0 THEN
        lAuxDesgloses := wNumDesgloses;

      //Creaci¢n del temporal.
      rCliTTOO.RESET;
      rCliTTOO.SETCURRENTKEY(Cliente,TTOO);
      rCliTTOO.SETFILTER(Cliente,'<> %1','');
      rCliTTOO.SETFILTER(TTOO,'<> %1','');
      IF rCliTTOO.FINDSET THEN  BEGIN
        REPEAT

          IF (pSelTTOO = pSelTTOO::"Todos los Clientes") OR (TestSeleccionTTOO(rCliTTOO)) THEN BEGIN

            window.UPDATE(1,text01+'.  < '+rCliTTOO.Cliente+' / '+rCliTTOO.TTOO+' >');

            //Desglosamos por tipo de vehiculo.
            rTV.RESET;
            IF rTV.FINDSET THEN BEGIN
              REPEAT
                //Desglosamos por codigo de servicio.
                FOR i:=1 TO 3 DO BEGIN
                  FOR j:=1 TO lAuxDesgloses DO BEGIN

                    //Revisamos el tema del desglose ( por lo del Pax Transportado )
                    IF wNumDesgloses > 0 THEN BEGIN
                      lDesde := aDesgloses[j,1];
                      lHasta := aDesgloses[j,2];
                    END
                    ELSE BEGIN
                      lDesde := -1;
                      lHasta := -1;
                    END;

                    //Calculamos el acumulado y lo grabamos.
                    CalcularAcumuladosTemporal(i,rCliTTOO, pPeriodoActual, pPeriodoAnterior,pAcumActual, pAcumAnterior,
                                               rTV.Codigo, pGaraje, pSelVehiculos, lDesde, lHasta);
                  END;
                END;
              UNTIL rTV.NEXT=0;
            END;

            //El temporal guardar  tambien la tupla cliente-ttoo.
            rTem.INIT;
            rTem."Tipo Linea" := ID_CLIENTE;
            rTem.Cliente      := rCliTTOO.Cliente;
            rTem.TTOO         := rCliTTOO.TTOO;
            rTem.INSERT(TRUE);

          END;


        UNTIL rCliTTOO.NEXT=0;
      END;

      //El temporal guardar  tambien un registro para calcular los flowfields.
      rTem.INIT;
      rTem."Tipo Linea" := ID_TOTAL;
      rTem.INSERT(TRUE);
    END;

    PROCEDURE VolcarEnExcel@3(VAR vLinea@1103350000 : Integer;pCliente@1103350001 : Code[20];pTTOO@1103350002 : Code[10];pPerActual@1103350003 : Text[30];pPerAnterior@1103350004 : Text[30];pAcumActual@1103350005 : Text[30];pAcumAnterior@1103350006 : Text[30];pSoloConActividad@1103350007 : Boolean;pID@1103350008 : Integer;pTV@1103350009 : Code[10];pSelVehiculos@1103350010 : 'Todos los Veh¡culos,Seg£n Selecci¢n';pGaraje@1103350011 : Code[10]);
    VAR
      rTS@1103350012 : Record 7010319;
      lCelda@1103350013 : Text[10];
      lRango@1103350014 : Text[15];
      lTotal@1103350015 : Text[100];
      lValorPerActual@1103350016 : Decimal;
      lValorPerAnterior@1103350017 : Decimal;
      lValorAcumActual@1103350018 : Decimal;
      lValorAcumAnterior@1103350019 : Decimal;
      ltValorPerActual@1103350020 : Decimal;
      ltValorPerAnterior@1103350021 : Decimal;
      ltValorAcumActual@1103350022 : Decimal;
      ltValorAcumAnterior@1103350023 : Decimal;
      i@1103350024 : Integer;
      j@1103350025 : Integer;
      lAuxDesgloses@1103350026 : Integer;
      lDesde@1103350027 : Integer;
      lHasta@1103350028 : Integer;
      vLiteral@1103350029 : Code[10];
      lwLinea2@1103350030 : Integer;
    BEGIN
      //VolcarEnExcel.
      //
      lwLinea2 := vLinea;
      lAuxDesgloses:= 1;
      IF wNumDesgloses > 0 THEN
        lAuxDesgloses := wNumDesgloses;

      //Calculamos en primer lugar el TOTAL.
      CalcularValores(pCliente,pTTOO,pTV,0,ltValorPerActual,ltValorPerAnterior,ltValorAcumActual,ltValorAcumAnterior,-1,-1);

      IF pSoloConActividad AND (ltValorPerActual  = 0) AND (ltValorPerAnterior = 0) AND
                               (ltValorAcumActual = 0) AND (ltValorAcumAnterior = 0) THEN
        EXIT;


      //Calculamos para cada tipo de servicio.
      FOR i:= 1 TO 3 DO BEGIN

        //vLiteral := aCS[i,1];
        CASE i OF
          1: vLiteral := Text0100;
          2: vLiteral := Text0101;
          3: vLiteral := Text0102;
        END;

        FOR j:=1 TO lAuxDesgloses DO BEGIN

          //Revisamos el tema del desglose ( por lo del Pax Transportado )
          IF wNumDesgloses > 0 THEN BEGIN
            lDesde := aDesgloses[j,1];
            lHasta := aDesgloses[j,2];
          END
          ELSE BEGIN
            lDesde := -1;
            lHasta := -1;
          END;

          CalcularValores(pCliente,pTTOO,pTV,i,
                          lValorPerActual,lValorPerAnterior,lValorAcumActual,lValorAcumAnterior,lDesde,lHasta);

          IF j=2 THEN
            vLiteral := '';

          IF wNumDesgloses > 0 THEN
            LineaExcel2(vLinea,lValorPerActual,lValorPerAnterior,lValorAcumActual,lValorAcumAnterior,vLiteral,lDesde,lHasta)
          ELSE
            LineaExcel(vLinea,lValorPerActual,lValorPerAnterior,lValorAcumActual,lValorAcumAnterior,vLiteral)

        END;
        //Si hay desgloses dejamos una linea en blanco.
        IF wNumDesgloses > 0 THEN
          vLinea +=1;
      END;

      //Calculo del total por Tipo de Servicio.
      IF wNumDesgloses = 0 THEN
        LineaExcel(vLinea,ltValorPerActual,ltValorPerAnterior,ltValorAcumActual,ltValorAcumAnterior,Text50002)
      ELSE BEGIN
        vLiteral := Text50002;
        FOR j:=1 TO lAuxDesgloses DO BEGIN

          lDesde := aDesgloses[j,1];
          lHasta := aDesgloses[j,2];

          CalcularValores(pCliente,pTTOO,pTV,0,
                          lValorPerActual,lValorPerAnterior,lValorAcumActual,lValorAcumAnterior,lDesde,lHasta);

          IF j=2 THEN
            vLiteral := '';

          LineaExcel2(vLinea,lValorPerActual,lValorPerAnterior,lValorAcumActual,lValorAcumAnterior,vLiteral,lDesde,lHasta);

        END;

      END;


      vLinea +=1;
      lCelda := Text50003+FORMAT(lwLinea2);
      IF wNumDesgloses > 0 THEN
        lRango := Text50004+FORMAT(lwLinea2)+'..'+Text50005+FORMAT(lwLinea2)
      ELSE
        lRango := Text50004+FORMAT(lwLinea2)+'..'+Text50006+FORMAT(lwLinea2);

      lTotal := '';

      CASE pID OF
        0: lTotal := Text50007+pTV+Text50008+pTTOO;
        1: lTotal := Text50009+pTTOO;
        2: lTotal := Text50010+pCliente;
        3: lTotal := Text50007+pTV+Text50011+pCliente;
        4: lTotal := Text50007+pTV;
        5: lTotal := Text50012;
      END;

      xlHoja.Range(lCelda).Value      := lTotal;


      CASE pID OF
        0: BEGIN
          //Total tipo de vehiculo del TTOO.
          xlHoja.Range(lRango).Font.Color     := 16777215; //BLANCO.
          xlHoja.Range(lRango).Interior.Color := 12632256; //GRIS CLARO.
        END;

        1: BEGIN
          //Total del TTOO.
          xlHoja.Range(lRango).Font.Color     := 16777215; //BLANCO.
          xlHoja.Range(lRango).Interior.Color := 8421376; //AZUL CYAN.
        END;

        2: BEGIN
          //Total del cliente.
          xlHoja.Range(lRango).Font.Color     := 16777215;//BLANCO.
          xlHoja.Range(lRango).Interior.Color := 8388608;  //AZUL OSCURO.
        END;

        3: BEGIN
          //Total tipo de vehiculo del cliente.
          xlHoja.Range(lRango).Font.Color     := 16777215;//BLANCO.
          xlHoja.Range(lRango).Interior.Color := 8421504; //GRIS OSCURO.
        END;

        4: BEGIN
          //Total tipo de vehiculo.
          xlHoja.Range(lRango).Font.Color     := 16777215;//BLANCO.
          xlHoja.Range(lRango).Interior.Color := 32768;   //VERDE.
        END;

        5: BEGIN
          //Total general.
          xlHoja.Range(lRango).Font.Color     := 16777215;//BLANCO.
          //xlHoja.Range(lRango).Interior.Color := 32768;   //VERDE.
          xlHoja.Range(lRango).Interior.Color := 0;  // NEGRO
        END;

      END;
    END;

    PROCEDURE CalcularAcumuladosTemporal@9(pIDTS@1103350000 : Integer;rCli@1103350001 : Record 7010323;pPerActual@1103350002 : Text[30];pPerAnterior@1103350003 : Text[30];pAcumActual@1103350004 : Text[30];pAcumAnterior@1103350005 : Text[30];pTV@1103350006 : Code[10];pGaraje@1103350007 : Code[10];pSelVehiculos@1103350008 : 'Todos los Veh¡culos,Seg£n Selecci¢n';pDesde@1103350009 : Integer;pHasta@1103350010 : Integer);
    VAR
      rTem@1103350011 : Record 7010393;
      rCliTTOO@1103350012 : Record 7010323;
      rSelVeh@1103350013 : Record 7010352;
      lTS@1103350014 : Code[10];
      lCS@1103350015 : Code[20];
      lCliente@1103350016 : Code[20];
      lTTOO@1103350017 : Code[10];
      lValorPerActual@1103350018 : Decimal;
      lValorPerAnterior@1103350019 : Decimal;
      lValorAcumActual@1103350020 : Decimal;
      lValorAcumAnterior@1103350021 : Decimal;
    BEGIN
      //CalcularAcumuladosTemporal

      lValorPerActual    := 0;
      lValorPerAnterior  := 0;
      lValorAcumActual   := 0;
      lValorAcumAnterior := 0;

      lTS      := aCS[pIDTS,2];
      //lCS      := aCS[pIDTS,1];
      // JPT 02/08/05 Cambiamos la manera de filtrar  el tipo de servicio
      CASE pIDTS OF
       1:  lCS:= rPar."Codigo Entradas";
       2:  lCS:= rPar."Codigo Salidas";
       3:  lCS:= STRSUBSTNO('<>%1 & <>%2',rPar."Codigo Entradas",rPar."Codigo Salidas");
       ELSE CLEAR(lCS);
      END;

      lCliente := rCli.Cliente;
      lTTOO    := rCli.TTOO;

      rCliTTOO.RESET;
      IF rCliTTOO.FINDFIRST THEN BEGIN

        rCliTTOO.SETFILTER("Filtro Cliente",lCliente);
        rCliTTOO.SETFILTER("Filtro TTOO",lTTOO);
        rCliTTOO.SETFILTER("Filtro Fecha",pPerActual);

        IF pGaraje <> '' THEN
          rCliTTOO.SETFILTER("Filtro Garaje Resultados",pGaraje)
        ELSE
          rCliTTOO.SETRANGE("Filtro Garaje Resultados");

        //rCliTTOO.SETRANGE("Filtro Tipo Servicio"  , lTS);

        //IF aCS[3,1] <> lCS THEN
          rCliTTOO.SETFILTER("Filtro Codigo Servicio", lCS);
        //ELSE
          //rCliTTOO.SETRANGE("Filtro Codigo Servicio");


        rCliTTOO.SETRANGE("Filtro Tipo Vehiculo",pTV);

        IF pDesde <> -1 THEN
          rCliTTOO.SETRANGE("Filtro Pax Transportado",pDesde,pHasta)
        ELSE
          rCliTTOO.SETRANGE("Filtro Pax Transportado");

        IF pSelVehiculos = pSelVehiculos::"Todos los Veh¡culos" THEN BEGIN

          IF wEstudio = Text50013 THEN BEGIN
            // JPT 01/09/05 Cambiamos el campo de referencia, Ahora hace un count sobre registros
            rCliTTOO.CALCFIELDS("N§ Viajes2");
            lValorPerActual := rCliTTOO."N§ Viajes2";
            //rCliTTOO.CALCFIELDS("N§ ViajesTTOOParte");
            //lValorPerActual := rCliTTOO."N§ ViajesTTOOParte";


            rCliTTOO.SETFILTER("Filtro Fecha",pPerAnterior);
            rCliTTOO.CALCFIELDS("N§ Viajes2");
            lValorPerAnterior := rCliTTOO."N§ Viajes2";

            //rCliTTOO.CALCFIELDS("N§ ViajesTTOOParte");
            //lValorPerAnterior := rCliTTOO."N§ ViajesTTOOParte";


            rCliTTOO.SETFILTER("Filtro Fecha",pAcumActual);
            rCliTTOO.CALCFIELDS("N§ Viajes2");
            lValorAcumActual := rCliTTOO."N§ Viajes2";
            //rCliTTOO.CALCFIELDS("N§ ViajesTTOOParte");
            //lValorAcumActual := rCliTTOO."N§ ViajesTTOOParte";


            rCliTTOO.SETFILTER("Filtro Fecha",pAcumAnterior);
            rCliTTOO.CALCFIELDS("N§ Viajes2");
            lValorAcumAnterior := rCliTTOO."N§ Viajes2";
            //rCliTTOO.CALCFIELDS("N§ ViajesTTOOParte");
            //lValorAcumAnterior := rCliTTOO."N§ ViajesTTOOParte";

          END;

          IF wEstudio = Text50014 THEN BEGIN
            rCliTTOO.CALCFIELDS("Adultos Transportados","Ni¤os Transportados");
            lValorPerActual := rCliTTOO."Adultos Transportados"+rCliTTOO."Ni¤os Transportados";

            rCliTTOO.SETFILTER("Filtro Fecha",pPerAnterior);
            rCliTTOO.CALCFIELDS("Adultos Transportados","Ni¤os Transportados");
            lValorPerAnterior := rCliTTOO."Adultos Transportados"+rCliTTOO."Ni¤os Transportados";

            rCliTTOO.SETFILTER("Filtro Fecha",pAcumActual);
            rCliTTOO.CALCFIELDS("Adultos Transportados","Ni¤os Transportados");
            lValorAcumActual := rCliTTOO."Adultos Transportados"+rCliTTOO."Ni¤os Transportados";

            rCliTTOO.SETFILTER("Filtro Fecha",pAcumAnterior);
            rCliTTOO.CALCFIELDS("Adultos Transportados","Ni¤os Transportados");
            lValorAcumAnterior := rCliTTOO."Adultos Transportados"+rCliTTOO."Ni¤os Transportados";
          END;

        END

        ELSE BEGIN

          rSelVeh.RESET;
          rSelVeh.SETRANGE(Usuario,USERID);
          IF rSelVeh.FINDSET THEN REPEAT
            IF (rSelVeh.Seleccion) AND (rSelVeh."Tipo Vehiculo"=pTV) THEN BEGIN

              rCliTTOO.SETRANGE("Filtro Vehiculo",rSelVeh.Matricula);

              IF wEstudio = Text50013 THEN BEGIN
                // JPT 01/09/05 Cambiamos el campo de referencia N§ Viajes2, Ahora hace un count sobre registros N§ ViajesTTOOParte
                rCliTTOO.SETFILTER("Filtro Fecha",pPerActual);
                rCliTTOO.CALCFIELDS("N§ Viajes2");
                lValorPerActual += rCliTTOO."N§ Viajes2";
                //rCliTTOO.CALCFIELDS("N§ ViajesTTOOParte");
                //lValorPerActual += rCliTTOO."N§ ViajesTTOOParte";

                rCliTTOO.SETFILTER("Filtro Fecha",pPerAnterior);
                rCliTTOO.CALCFIELDS("N§ Viajes2");
                lValorPerAnterior += rCliTTOO."N§ Viajes2";
                //rCliTTOO.CALCFIELDS("N§ ViajesTTOOParte");
                //lValorPerAnterior += rCliTTOO."N§ ViajesTTOOParte";

                rCliTTOO.SETFILTER("Filtro Fecha",pAcumActual);
                rCliTTOO.CALCFIELDS("N§ Viajes2");
                lValorAcumActual += rCliTTOO."N§ Viajes2";
                //rCliTTOO.CALCFIELDS("N§ ViajesTTOOParte");
                //lValorAcumActual += rCliTTOO."N§ ViajesTTOOParte";

                rCliTTOO.SETFILTER("Filtro Fecha",pAcumAnterior);
                rCliTTOO.CALCFIELDS("N§ Viajes2");
                lValorAcumAnterior += rCliTTOO."N§ Viajes2";
                //rCliTTOO.CALCFIELDS("N§ ViajesTTOOParte");
                //lValorAcumAnterior += rCliTTOO."N§ ViajesTTOOParte";

              END;

              IF wEstudio = Text50014 THEN BEGIN
                rCliTTOO.SETFILTER("Filtro Fecha",pPerActual);
                rCliTTOO.CALCFIELDS("Adultos Transportados","Ni¤os Transportados");
                lValorPerActual += rCliTTOO."Adultos Transportados" + rCliTTOO."Ni¤os Transportados";

                rCliTTOO.SETFILTER("Filtro Fecha",pPerAnterior);
                rCliTTOO.CALCFIELDS("Adultos Transportados","Ni¤os Transportados");
                lValorPerAnterior += rCliTTOO."Adultos Transportados" + rCliTTOO."Ni¤os Transportados";

                rCliTTOO.SETFILTER("Filtro Fecha",pAcumActual);
                rCliTTOO.CALCFIELDS("Adultos Transportados","Ni¤os Transportados");
                lValorAcumActual += rCliTTOO."Adultos Transportados" + rCliTTOO."Ni¤os Transportados";

                rCliTTOO.SETFILTER("Filtro Fecha",pAcumAnterior);
                rCliTTOO.CALCFIELDS("Adultos Transportados","Ni¤os Transportados");
                lValorAcumAnterior += rCliTTOO."Adultos Transportados" + rCliTTOO."Ni¤os Transportados";
              END;

            END;

          UNTIL rSelVeh.NEXT=0;

        END;

        IF pIDTS=3 THEN
          lCS:=Text50015;

        //Grabamos el registro temporal.
        rTem.INIT;
        rTem."Tipo Linea"               := ID_VALOR;
        rTem.Cliente                    := lCliente;
        rTem.TTOO                       := lTTOO;
        rTem."Tipo Vehiculo"            := pTV;
        rTem."Codigo Servicio"          := lCS;
        rTem."Valor Periodo Actual"     := lValorPerActual;
        rTem."Valor Periodo Anterior"   := lValorPerAnterior;
        rTem."Valor Acumulado Actual"   := lValorAcumActual;
        rTem."Valor Acumulado Anterior" := lValorAcumAnterior;
        rTem.Desde                      := pDesde;
        rTem.Hasta                      := pHasta;
        rTem.INSERT(TRUE);

      END;
    END;

    PROCEDURE CalcularValores@8(pCliente@1103350000 : Code[20];pTTOO@1103350001 : Code[10];pTV@1103350002 : Code[10];pTS@1103350003 : Integer;VAR lValorPerActual@1103350004 : Decimal;VAR lValorPerAnterior@1103350005 : Decimal;VAR lValorAcumActual@1103350006 : Decimal;VAR lValorAcumAnterior@1103350007 : Decimal;pDesde@1103350008 : Integer;pHasta@1103350009 : Integer);
    VAR
      rTemp@1103350010 : Record 7010393;
      lwFTipSer@1103350011 : Text[30];
    BEGIN
      //CalcularValores(..).
      // pTS = 1:Entradas, 2: Salidas 3:Excursiones 0:Todo

      lValorPerActual    := 0; lValorPerAnterior  := 0;
      lValorAcumActual   := 0; lValorAcumAnterior := 0;

      rTemp.SETRANGE(Usuario,USERID);
      rTemp.SETRANGE("Tipo Linea",ID_TOTAL);

      IF rTemp.FINDFIRST THEN BEGIN

        IF pCliente <> '' THEN
          rTemp.SETRANGE("Filtro Cliente",pCliente)
        ELSE
          rTemp.SETRANGE("Filtro Cliente");

        IF pTTOO <> '' THEN
          rTemp.SETRANGE("Filtro TTOO",pTTOO)
        ELSE
          rTemp.SETRANGE("Filtro TTOO");

        IF pTV <> '' THEN
          rTemp.SETRANGE("Filtro Tipo Vehiculo",pTV)
        ELSE
          rTemp.SETRANGE("Filtro Tipo Vehiculo");

        // JPT 02/08/05 Cambiamos la manera de filtrar  el tipo de servicio
        CASE pTS OF
         1:  lwFTipSer:= rPar."Codigo Entradas";
         2:  lwFTipSer:= rPar."Codigo Salidas";
         3:  lwFTipSer:= STRSUBSTNO('<>%1 & <>%2',rPar."Codigo Entradas",rPar."Codigo Salidas");
         ELSE CLEAR(lwFTipSer);
        END;

        IF pTS <> 0 THEN
          rTemp.SETFILTER("Filtro Codigo Servicio",lwFTipSer)
        ELSE
          rTemp.SETRANGE("Filtro Codigo Servicio");

        IF pDesde > -1 THEN
          rTemp.SETRANGE("Filtro Pax Desde",pDesde)
        ELSE
          rTemp.SETRANGE("Filtro Pax Desde");

        IF pHasta > -1 THEN
          rTemp.SETRANGE("Filtro Pax Hasta",pHasta)
        ELSE
          rTemp.SETRANGE("Filtro Pax Hasta");


        rTemp.CALCFIELDS("Total Periodo Actual","Total Periodo Anterior","Total Acumulado Actual","Total Acumulado Anterior");

        lValorPerActual    := rTemp."Total Periodo Actual";
        lValorPerAnterior  := rTemp."Total Periodo Anterior";
        lValorAcumActual   := rTemp."Total Acumulado Actual";
        lValorAcumAnterior := rTemp."Total Acumulado Anterior";

      END;
    END;

    PROCEDURE LineaExcel@6(VAR vLinea@1103350000 : Integer;pValorPerActual@1103350001 : Decimal;pValorPerAnterior@1103350002 : Decimal;pValorAcumActual@1103350003 : Decimal;pValorAcumAnterior@1103350004 : Decimal;pTipoServicio@1103350005 : Code[10]);
    VAR
      lCelda@1103350006 : Text[10];
      lDif@1103350007 : Decimal;
      lPercent@1103350008 : Decimal;
    BEGIN
      //LineaExcel
      vLinea += 1;

      lCelda := Text50004+FORMAT(vLinea);
      ValorCelda(lCelda,pValorPerActual);

      lCelda := Text50016+FORMAT(vLinea);
      ValorCelda(lCelda,pValorPerAnterior);

      ObtenerDiferencia(lPercent,lDif,pValorPerActual,pValorPerAnterior);

      lCelda := Text50017+FORMAT(vLinea);
      ValorCelda(lCelda,lDif);

      lCelda  := Text50003+FORMAT(vLinea);
      ValorCelda(lCelda,lPercent);


      lCelda := Text50018+FORMAT(vLinea);
      ValorCelda(lCelda,pValorAcumActual);

      lCelda := Text50019+FORMAT(vLinea);
      ValorCelda(lCelda,pValorAcumAnterior);

      ObtenerDiferencia(lPercent,lDif,pValorAcumActual,pValorAcumAnterior);

      lCelda := Text50020+FORMAT(vLinea);
      ValorCelda(lCelda,lDif);

      lCelda  := Text50021+FORMAT(vLinea);
      ValorCelda(lCelda,lPercent);

      lCelda := Text50006+FORMAT(vLinea);
      xlHoja.Range(lCelda).Value := pTipoServicio;
    END;

    PROCEDURE LineaExcel2@11(VAR vLinea@1103350000 : Integer;pValorPerActual@1103350001 : Decimal;pValorPerAnterior@1103350002 : Decimal;pValorAcumActual@1103350003 : Decimal;pValorAcumAnterior@1103350004 : Decimal;pTipoServicio@1103350005 : Code[10];pDesde@1103350006 : Integer;pHasta@1103350007 : Integer);
    VAR
      lCelda@1103350008 : Text[10];
      lDif@1103350009 : Decimal;
      lPercent@1103350010 : Decimal;
    BEGIN
      //LineaExcel2
      vLinea += 1;
      lCelda := Text50004+FORMAT(vLinea);
      xlHoja.Range(lCelda).Value := FORMAT(pDesde)+ Text50022+FORMAT(pHasta);

      lCelda := Text50016+FORMAT(vLinea);
      ValorCelda(lCelda,pValorPerActual);

      lCelda := Text50017+FORMAT(vLinea);
      ValorCelda(lCelda,pValorPerAnterior);

      ObtenerDiferencia(lPercent,lDif,pValorPerActual,pValorPerAnterior);

      lCelda := Text50003+FORMAT(vLinea);
      ValorCelda(lCelda,lDif);

      lCelda  := Text50023+FORMAT(vLinea);
      ValorCelda(lCelda,lPercent);


      lCelda := Text50019+FORMAT(vLinea);
      ValorCelda(lCelda,pValorAcumActual);

      lCelda := Text50020+FORMAT(vLinea);
      ValorCelda(lCelda,pValorAcumAnterior);

      ObtenerDiferencia(lPercent,lDif,pValorAcumActual,pValorAcumAnterior);

      lCelda := Text50021+FORMAT(vLinea);
      ValorCelda(lCelda,lDif);

      lCelda  := Text50006+FORMAT(vLinea);
      ValorCelda(lCelda,lPercent);

      lCelda := Text50005+FORMAT(vLinea);
      xlHoja.Range(lCelda).Value := pTipoServicio;
    END;

    PROCEDURE ValorCelda@4(pCelda@1103350000 : Text[10];pValor@1103350001 : Decimal);
    BEGIN
      //ValorCelda
      xlHoja.Range(pCelda).Value := FORMAT(pValor);
    END;

    PROCEDURE ObtenerDiferencia@5(VAR lPercent@1103350000 : Decimal;VAR lDif@1103350001 : Decimal;pValor1@1103350002 : Decimal;pValor2@1103350003 : Decimal);
    BEGIN
      //ObtenerDiferencia
      lPercent:= 0;
      lDif    := pValor1 - pValor2;
      IF pValor2 <> 0 THEN
        lPercent  := ROUND(lDif * 100 / pValor2,0.01);

      //Parche.
      IF (pValor2 = 0) AND (pValor1 <> 0) THEN
        lPercent := 100;
    END;

    PROCEDURE ObtenerFinalPeriodo@2(pStr@1103350000 : Text[30]) : Date;
    VAR
      vPos@1103350001 : Integer;
      vResult@1103350002 : Date;
    BEGIN
      //ObtenerFinalPeriodo.
      vPos  := STRPOS(pStr,'..')+2;
      EVALUATE(vResult,COPYSTR(pStr,vPos,10));
      EXIT(vResult);
    END;

    PROCEDURE TestSeleccionTTOO@10(rCliTTOO@1103350000 : Record 7010323) : Boolean;
    VAR
      rSel@1103350001 : Record 7010324;
    BEGIN
      //TestSeleccionTTOO
      rSel.RESET;
      IF rSel.GET(USERID,rCliTTOO.Cliente,rCliTTOO.TTOO,0) THEN
        IF rSel.Selecci¢n THEN
          EXIT(TRUE);

      EXIT(FALSE);
    END;

    PROCEDURE CopiarDesgloses@13(pDesgloses@1103350000 : ARRAY [10,2] OF Integer);
    VAR
      i@1103350001 : Integer;
      j@1103350002 : Integer;
    BEGIN
      //CopiarDesgloses.
      FOR i:=1 TO 10 DO
        FOR j:=1 TO 2 DO
          aDesgloses[i,j] := pDesgloses[i,j];
    END;

    PROCEDURE MostrarCabecera@12(pPeriodoActual@1103350000 : Text[30];pPeriodoAnterior@1103350001 : Text[30];pAcumActual@1103350002 : Date;pAcumAnterior@1103350003 : Date;pSoloConActividad@1103350004 : Boolean;pSelVehiculos@1103350005 : 'Todos los Veh¡culos,Seg£n Selecci¢n';pSelTTOO@1103350006 : 'Todos los Clientes,Seg£n Selecci¢n';pGaraje@1103350007 : Code[10];pTotCli@1103350008 : Boolean;pTotTTOO@1103350009 : Boolean;pTotTV@1103350010 : Boolean;pTotGeneral@1103350011 : Boolean;pDesgloseTVxCli@1103350012 : Boolean;pDesgloseTVxTTOO@1103350013 : Boolean;pNumDesgloses@1103350014 : Integer);
    VAR
      lColumna@1103350015 : Text[1];
      lColTit1@1103350016 : Text[1];
      lColTit2@1103350017 : Text[1];
      lTit1@1103350018 : Text[30];
      lTit2@1103350019 : Text[30];
    BEGIN
      //MostrarCabecera
      IF pNumDesgloses > 0 THEN BEGIN
        lColumna := Text50019;
        lColTit1 := Text50016;
        lColTit2 := Text50019;
      END
      ELSE BEGIN
        lColumna := Text50018;
        lColTit1 := Text50004;
        lColTit2 := Text50018;
      END;

      IF wEstudio = Text50014 THEN BEGIN
        lTit1    := Text50024;
        lTit2    := Text50025;
      END;
      IF wEstudio = Text50013 THEN BEGIN
        lTit1    := Text50026;
        lTit2    := Text50027;
      END;

      xlHoja.Range(lColTit1+'11').Value := lTit1;
      xlHoja.Range(lColTit2+'11').Value := lTit2;

      xlHoja.Range(lColumna+'1').Value := pPeriodoActual   +' ('+FORMAT(pAcumActual)+')';
      xlHoja.Range(lColumna+'2').Value := pPeriodoAnterior +' ('+FORMAT(pAcumAnterior)+')';

      IF pSelTTOO = pSelTTOO::"Todos los Clientes" THEN
        xlHoja.Range(lColumna+'3').Value := 'Todos los clientes'
      ELSE
        xlHoja.Range(lColumna+'3').Value := ObtenerSeleccionClientes;

      IF pSelVehiculos = pSelVehiculos::"Todos los Veh¡culos" THEN
        xlHoja.Range(lColumna+'4').Value := 'Todos los Veh¡culos'
      ELSE
        xlHoja.Range(lColumna+'4').Value := ObtenerSeleccionVehiculos;

      IF pGaraje <> '' THEN
        xlHoja.Range(lColumna+'5').Value := pGaraje;

      xlHoja.Range(lColumna+'6').Value   := Visualizaci¢n1(pDesgloseTVxCli,pDesgloseTVxTTOO);
      xlHoja.Range(lColumna+'7').Value   := Visualizaci¢n2(pTotCli,pTotTTOO,pTotTV,pTotGeneral);

      IF pSoloConActividad THEN
        xlHoja.Range(lColumna+'8').Value   := 'S¡'
      ELSE
        xlHoja.Range(lColumna+'8').Value   := 'No';

      IF pNumDesgloses > 0 THEN
        xlHoja.Range(lColumna+'9').Value   := 'S¡';
    END;

    PROCEDURE ObtenerSeleccionClientes@15() : Text[250];
    VAR
      r@1103350000 : Record 7010393;
      lResult@1103350001 : Text[250];
      lMax@1103350002 : Integer;
      lContador@1103350003 : Integer;
    BEGIN
      //ObtenerSeleccionClientes.
      lContador := 0;
      lMax      := 3;
      lResult   := '';
      r.RESET;
      r.SETCURRENTKEY(Usuario,"Tipo Linea",Cliente,TTOO);
      r.SETRANGE(Usuario,USERID);
      r.SETRANGE("Tipo Linea",ID_CLIENTE);
      IF r.FINDSET THEN REPEAT

        IF lContador < lMax THEN BEGIN

          IF lContador > 0 THEN
            lResult+=', ';

          lResult += r.Cliente+'/'+r.TTOO;
        END;

        IF lContador = lMax + 1 THEN
          lResult +='...';

        lContador +=1;

      UNTIL r.NEXT=0;

      EXIT(lResult);
    END;

    PROCEDURE ObtenerSeleccionVehiculos@16() : Text[250];
    VAR
      r@1103350000 : Record 7010352;
      lResult@1103350001 : Text[250];
      lMax@1103350002 : Integer;
      lContador@1103350003 : Integer;
    BEGIN
      //ObtenerSeleccionVehiculos
      lContador := 0;
      lMax      := 10;
      lResult   := '';
      r.RESET;
      r.SETCURRENTKEY(Usuario,Matricula);
      r.SETRANGE(Usuario,USERID);
      r.SETRANGE(Seleccion,TRUE);
      IF r.FINDSET THEN REPEAT

        IF lContador < lMax THEN BEGIN

          IF lContador > 0 THEN
            lResult+=', ';

          lResult += r.Numero;
        END;

        IF lContador = lMax + 1 THEN
          lResult +='...';

        lContador +=1;

      UNTIL r.NEXT=0;

      EXIT(lResult);
    END;

    PROCEDURE Visualizaci¢n1@18(pDesgloseCli@1103350000 : Boolean;pDesgloseTTOO@1103350001 : Boolean) : Text[250];
    VAR
      lConta@1103350002 : Integer;
      lResult@1103350003 : Text[250];
    BEGIN
      //Visualizaci¢n1
      lResult := '';
      lConta  := 0;
      IF pDesgloseCli THEN BEGIN
        lResult := Text50032;
        lConta  += 1;
      END;

      IF pDesgloseTTOO THEN BEGIN
        IF lConta > 0 THEN
          lResult += ', ';
        lResult += Text50033;
        lConta +=1;
      END;

      EXIT(lResult);
    END;

    PROCEDURE Visualizaci¢n2@14(pTotCli@1103350000 : Boolean;pTotTTOO@1103350001 : Boolean;pTotTV@1103350002 : Boolean;pTotGeneral@1103350003 : Boolean) : Text[250];
    VAR
      lConta@1103350004 : Integer;
      lResult@1103350005 : Text[250];
    BEGIN
      //Visualizaci¢n2
      lResult := '';
      lConta  := 0;
      IF pTotCli THEN BEGIN
        lResult := Text50032;
        lConta  += 1;
      END;

      IF pTotTTOO THEN BEGIN
        IF lConta > 0 THEN
          lResult += ', ';
        lResult += Text50033;
        lConta +=1;
      END;

      IF pTotTV THEN BEGIN
        IF lConta > 0 THEN
          lResult += ', ';
        lResult += Text50034;
        lConta +=1;
      END;

      IF pTotGeneral THEN BEGIN
        IF lConta > 0 THEN
          lResult += ', ';
        lResult += Text50035;
        lConta +=1;
      END;

      EXIT(lResult);
    END;

    PROCEDURE PlaningServicios@17();
    VAR
      lrInfEmp@1103350000 : Record 79;
      lrConduct@1103350001 : Record 7010327;
      lrParte@1103350002 : Record 7010360;
      lwArchivoExcel@1103350003 : Text[250];
      lxBordes@1103350004 : Automation "{00020813-0000-0000-C000-000000000046} 1.3:{00020855-0000-0000-C000-000000000046}:Unknown Automation Server.Borders";
      lxFont@1103350005 : Automation "{00020813-0000-0000-C000-000000000046} 1.3:{0002084D-0000-0000-C000-000000000046}:Unknown Automation Server.Font";
      lxInterior@1103350006 : Automation "{00020813-0000-0000-C000-000000000046} 1.3:{00020870-0000-0000-C000-000000000046}:Unknown Automation Server.Interior";
      lxRango@1103350007 : Automation "{00020813-0000-0000-C000-000000000046} 1.3:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";
      wLin@1103350008 : Integer;
      wCol@1103350009 : Integer;
      lwOrigen@1103350010 : Text[30];
      lwHoraInicio@1103350011 : Time;
      lwHora@1103350012 : Time;
      lwCont@1103350013 : Integer;
    BEGIN
      // PlaningServicios
      // Listado de servicios conductores -INVISA

      rPar.FINDFIRST;
      rPar.TESTFIELD("Ruta Plantilla Informes");

      lwOrigen :=Text50036;
      lwArchivoExcel:= rPar."Ruta Plantilla Informes";
      IF lwArchivoExcel[STRLEN(lwArchivoExcel)] <> '\' THEN
        lwArchivoExcel += '';

      lwArchivoExcel += Text0001;

      IF NOT CREATE(xlApp) THEN
        EXIT;

      // xlLibro := xlApp.Workbooks._Open(lwArchivoExcel,TRUE);
      xlLibro := xlApp.Workbooks.Open(lwArchivoExcel,TRUE);
      xlHoja := xlLibro.Worksheets.Item(1);
      //xlLibro.Windows.DisplayGridlines:= false;
      xlHoja.Activate;

      //xlHoja.Range(lwOrigen).Offset(wLin+1,34)

      xlHoja.Range(lwOrigen).Value := Text0002; // Planning vehiculos
      lrInfEmp.RESET;
      lrInfEmp.GET;
      xlHoja.Range(lwOrigen).Offset(1,0).Value := Text0003 + lrInfEmp.Name;
      xlHoja.Range(lwOrigen).Offset(3,0).Value := Text0004;

      // Dibuja los recuadros iniciales
      lwHoraInicio := 040000T;

      FOR lwCont:=1 TO 24 DO BEGIN
        xlHoja.Range(lwOrigen).Offset(4,lwCont)._BorderAround        := 2;
        xlHoja.Range(lwOrigen).Offset(4,lwCont).HorizontalAlignment := 3;
        xlHoja.Range(lwOrigen).Offset(4,lwCont).Font.Bold           := TRUE;
        xlHoja.Range(lwOrigen).Offset(4,lwCont).Font.Size           := 20;
        xlHoja.Range(lwOrigen).Offset(4,lwCont).Value := lwHoraInicio + (3600000 * lwCont);
      END;

      CLEARALL;
    END;

    BEGIN
    {
      variable wESTUDIO.
    }
    END.
  }
}
