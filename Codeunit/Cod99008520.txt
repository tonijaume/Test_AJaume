OBJECT Codeunit 99008520 BizTalk Sales Quote
{
  OBJECT-PROPERTIES
  {
    Date=13/02/07;
    Time=12:00:00;
    Version List=NAVW15.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=%1 number %2 has already been sent as a BizTalk document.;ESP=Ya se ha enviado %1 n£mero %2 como documento BizTalk.';
      Text001@1001 : TextConst 'ENU=There are no lines to send.;ESP=No hay l¡neas para enviar.';

    PROCEDURE ValidateData@3(SalesHeader@1000 : Record 36);
    VAR
      SalesLine@1001 : Record 37;
    BEGIN
      IF SalesHeader."BizTalk Sales Quote" THEN
        ERROR(Text000,SalesHeader."Document Type",SalesHeader."No.");
      SalesLine.SETCURRENTKEY("Document Type","Document No.");
      SalesLine.SETRANGE("Document Type",SalesHeader."Document Type");
      SalesLine.SETRANGE("Document No.",SalesHeader."No.");
      IF NOT SalesLine.FIND('-') THEN
        ERROR(Text001);
      SalesLine.SETRANGE(Type,SalesLine.Type::Resource);
      IF SalesLine.FIND('-') THEN
        SalesLine.FIELDERROR(Type);
    END;

    PROCEDURE TransferData@2(SalesHeader@1001 : Record 36) NextOutboundNo@1000 : Integer;
    VAR
      GeneralLedgerSetup@1002 : Record 98;
      OutboundSalesDocumentHeader@1003 : Record 99008506;
      OutboundSalesDocumentLine@1004 : Record 99008507;
      SalesLine@1005 : Record 37;
      Item@1006 : Record 27;
      ReservEntry@1008 : Record 337;
      BizTalkReservEntry@1009 : Record 99008533;
      AmountSalesHeader@1014 : TEMPORARY Record 36;
      AmountSalesLine@1013 : TEMPORARY Record 37;
      TempVATAmountLine0@1012 : TEMPORARY Record 290;
      TempVATAmountLine1@1011 : TEMPORARY Record 290;
      NextLineNo@1007 : Integer;
      BizTalkManagement@1010 : Codeunit 99008508;
    BEGIN
      OutboundSalesDocumentLine.LOCKTABLE;
      OutboundSalesDocumentHeader.LOCKTABLE;
      IF OutboundSalesDocumentHeader.FIND('+') THEN
        NextOutboundNo := OutboundSalesDocumentHeader."Outbound Document No." + 1
      ELSE
        NextOutboundNo := 1;
      WITH OutboundSalesDocumentHeader DO BEGIN
        INIT;
        "Outbound Document No." := NextOutboundNo;
        "Document Type" := SalesHeader."Document Type";
        "Sell-to Customer No." := SalesHeader."Sell-to Customer No.";
        "No." := SalesHeader."No.";
        "Bill-to Customer No." := SalesHeader."Bill-to Customer No.";
        "Bill-to Name" := SalesHeader."Bill-to Name";
        "Bill-to Name 2" := SalesHeader."Bill-to Name 2";
        "Bill-to Address" := SalesHeader."Bill-to Address";
        "Bill-to Address 2" := SalesHeader."Bill-to Address 2";
        "Bill-to City" := SalesHeader."Bill-to City";
        "Bill-to Contact" := SalesHeader."Bill-to Contact";
        "Your Reference" := SalesHeader."Your Reference";
        "Ship-to Code" := SalesHeader."Ship-to Code";
        "Ship-to Name" := SalesHeader."Ship-to Name";
        "Ship-to Name 2" := SalesHeader."Ship-to Name 2";
        "Ship-to Address" := SalesHeader."Ship-to Address";
        "Ship-to Address 2" := SalesHeader."Ship-to Address 2";
        "Ship-to City" := SalesHeader."Ship-to City";
        "Ship-to Contact" := SalesHeader."Ship-to Contact";
        "Order Date" := SalesHeader."Order Date";
        "Posting Date" := SalesHeader."Posting Date";
        "Shipment Date" := SalesHeader."Shipment Date";
        "Posting Description" := SalesHeader."Posting Description";
        "Payment Terms Code" := SalesHeader."Payment Terms Code";
        "Due Date" := SalesHeader."Due Date";
        "Payment Discount %" := SalesHeader."Payment Discount %";
        "Pmt. Discount Date" := SalesHeader."Pmt. Discount Date";
        "Shipment Method Code" := SalesHeader."Shipment Method Code";
        "Location Code" := SalesHeader."Location Code";
        "Shortcut Dimension 1 Code" := SalesHeader."Shortcut Dimension 1 Code";
        "Shortcut Dimension 2 Code" := SalesHeader."Shortcut Dimension 2 Code";
        "Customer Posting Group" := SalesHeader."Customer Posting Group";
        IF SalesHeader."Currency Code" <> '' THEN
          "Currency Code" := SalesHeader."Currency Code"
        ELSE BEGIN
          GeneralLedgerSetup.FIND('-');
          "Currency Code" := GeneralLedgerSetup."LCY Code"
        END;
        "Currency Factor" := SalesHeader."Currency Factor";
        "Price Group Code" := SalesHeader."Customer Price Group";
        "Prices Including VAT" := SalesHeader."Prices Including VAT";
        "Invoice Disc. Code" := SalesHeader."Invoice Disc. Code";
        "Cust./Item Disc. Gr." := SalesHeader."Customer Disc. Group";
        "Language Code" := SalesHeader."Language Code";
        "Salesperson Code" := SalesHeader."Salesperson Code";
        "Order Class" := SalesHeader."Order Class";
        Comment := SalesHeader.Comment;
        "No. Printed" := SalesHeader."No. Printed";
        "On Hold" := SalesHeader."On Hold";
        "Applies-to Doc. Type" := SalesHeader."Applies-to Doc. Type";
        "Applies-to Doc. No." := SalesHeader."Applies-to Doc. No.";
        "Bal. Account No." := SalesHeader."Bal. Account No.";
        Ship := SalesHeader.Ship;
        Invoice := SalesHeader.Invoice;
        SalesHeader.CALCFIELDS(Amount,"Amount Including VAT");
        Amount := SalesHeader.Amount;
        "Amount Including VAT" := SalesHeader."Amount Including VAT";
        "Shipping No." := SalesHeader."Shipping No.";
        "Posting No." := SalesHeader."Posting No.";
        "Last Shipping No." := SalesHeader."Last Shipping No.";
        "Last Posting No." := SalesHeader."Last Posting No.";
        "VAT Registration No." := SalesHeader."VAT Registration No.";
        "Combine Shipments" := SalesHeader."Combine Shipments";
        "Reason Code" := SalesHeader."Reason Code";
        "Gen. Bus. Posting Group" := SalesHeader."Gen. Bus. Posting Group";
        "EU 3-Party Trade" := SalesHeader."EU 3-Party Trade";
        "Transaction Type" := SalesHeader."Transaction Type";
        "Transport Method" := SalesHeader."Transport Method";
        "VAT Country/Region Code" := SalesHeader."VAT Country/Region Code";
        "Sell-to Customer Name" := SalesHeader."Sell-to Customer Name";
        "Sell-to Customer Name 2" := SalesHeader."Sell-to Customer Name 2";
        "Sell-to Address" := SalesHeader."Sell-to Address";
        "Sell-to Address 2" := SalesHeader."Sell-to Address 2";
        "Sell-to City" := SalesHeader."Sell-to City";
        "Sell-to Contact" := SalesHeader."Sell-to Contact";
        "Bill-to Post Code" := SalesHeader."Bill-to Post Code";
        "Bill-to County" := SalesHeader."Bill-to County";
        "Bill-to Country/Region Code" := SalesHeader."Bill-to Country/Region Code";
        "Sell-to Post Code" := SalesHeader."Sell-to Post Code";
        "Sell-to County" := SalesHeader."Sell-to County";
        "Sell-to Country/Region Code" := SalesHeader."Sell-to Country/Region Code";
        "Ship-to Post Code" := SalesHeader."Ship-to Post Code";
        "Ship-to Country/Region Code" := SalesHeader."Ship-to Country/Region Code";
        "Bal. Account Type" := SalesHeader."Bal. Account Type";
        "Exit Point" := SalesHeader."Exit Point";
        Correction := SalesHeader.Correction;
        "Document Date" := SalesHeader."Document Date";
        "External Document No." := SalesHeader."External Document No.";
        Area := SalesHeader.Area;
        "Transaction Specification" := SalesHeader."Transaction Specification";
        "Payment Method Code" := SalesHeader."Payment Method Code";
        "Shipping Agent Code" := SalesHeader."Shipping Agent Code";
        "Package Tracking No." := SalesHeader."Package Tracking No.";
        "No. Series" := SalesHeader."No. Series";
        "Posting No. Series" := SalesHeader."Posting No. Series";
        "Shipping No. Series" := SalesHeader."Shipping No. Series";
        "Tax Area Code" := SalesHeader."Tax Area Code";
        "Tax Liable" := SalesHeader."Tax Liable";
        "VAT Bus. Posting Group" := SalesHeader."VAT Bus. Posting Group";
        Reserve := SalesHeader.Reserve;
        "Applies-to ID" := SalesHeader."Applies-to ID";
        "VAT Base Discount %" := SalesHeader."VAT Base Discount %";
        "Order No." := SalesHeader."Customer Order No.";
        "Customer Quote No." := SalesHeader."Customer Quote No.";
        Status := Status::Unsent;
        "BizTalk Document Type" := "BizTalk Document Type"::Quote;
        INSERT;

        OutboundSalesDocumentLine.SETCURRENTKEY("Outbound Document No.");
        OutboundSalesDocumentLine.SETRANGE("Outbound Document No.",NextOutboundNo);
        IF OutboundSalesDocumentLine.FIND('+') THEN
          NextLineNo := OutboundSalesDocumentLine."Line No."
        ELSE
          NextLineNo := 0;
        WITH OutboundSalesDocumentLine DO BEGIN
          SalesLine.SETCURRENTKEY("Document Type","Document No.");
          SalesLine.SETRANGE("Document Type",SalesHeader."Document Type");
          SalesLine.SETRANGE("Document No.",SalesHeader."No.");
          IF SalesLine.FIND('-') THEN
          REPEAT
            INIT;
            NextLineNo := NextLineNo +1;
            "Line No." := NextLineNo;
            "Outbound Document No." := NextOutboundNo;
            "Document Type" := SalesLine."Document Type";
            "Document No." := SalesLine."Document No.";
            "Sell-to Customer No." := SalesLine."Sell-to Customer No.";
            Type := SalesLine.Type;
            "No." := SalesLine."No.";
            IF Item.GET(SalesLine."No.") THEN BEGIN
              "Vendor Item No." := Item."Vendor Item No.";
              "Common Item No." := Item."Common Item No.";
            END;
            "Location Code" := SalesLine."Location Code";
            "Posting Group" := SalesLine."Posting Group";
            "Shipment Date" := SalesLine."Shipment Date";
            Description := SalesLine.Description;
            "Description 2" := SalesLine."Description 2";
            "Unit of Measure" := SalesLine."Unit of Measure";
            Quantity := SalesLine.Quantity;
            "Outstanding Quantity" := SalesLine."Outstanding Quantity";
            "Qty. to Invoice" := SalesLine."Qty. to Invoice";
            "Qty. to Ship" := SalesLine."Qty. to Ship";
            "Unit Price" := SalesLine."Unit Price";
            "Unit Cost (LCY)" := SalesLine."Unit Cost (LCY)";
            "VAT %" := SalesLine."VAT %";

            IF SalesLine.Type = SalesLine.Type::Item THEN BEGIN
              AmountSalesLine := SalesLine;
              AmountSalesLine.INSERT;
              IF SalesHeader.Status = SalesHeader.Status::Open THEN BEGIN
                AmountSalesHeader := SalesHeader;
                AmountSalesHeader.INSERT;
                AmountSalesHeader.Status := AmountSalesHeader.Status::Released;

                AmountSalesLine.SetSalesHeader(AmountSalesHeader);
                AmountSalesLine.CalcVATAmountLines(0,AmountSalesHeader,AmountSalesLine,TempVATAmountLine0);
                AmountSalesLine.CalcVATAmountLines(1,AmountSalesHeader,AmountSalesLine,TempVATAmountLine1);
                AmountSalesLine.UpdateVATOnLines(0,AmountSalesHeader,AmountSalesLine,TempVATAmountLine0);
                AmountSalesLine.UpdateVATOnLines(1,AmountSalesHeader,AmountSalesLine,TempVATAmountLine1);
                AmountSalesHeader.DELETE;
              END;
              "Line Discount %" := AmountSalesLine."Line Discount %";
              "Line Discount Amount" := AmountSalesLine."Line Discount Amount";
              Amount := AmountSalesLine.Amount;
              "Amount Including VAT" := AmountSalesLine."Amount Including VAT";
            END;
            "Allow Invoice Disc." := SalesLine."Allow Invoice Disc.";
            "Gross Weight" := SalesLine."Gross Weight";
            "Net Weight" := SalesLine."Net Weight";
            "Units per Parcel" := SalesLine."Units per Parcel";
            "Unit Volume" := SalesLine."Unit Volume";
            "Appl.-to Item Entry" := SalesLine."Appl.-to Item Entry";
            "Shortcut Dimension 1 Code" := SalesLine."Shortcut Dimension 1 Code";
            "Shortcut Dimension 2 Code" := SalesLine."Shortcut Dimension 2 Code";
            "Price Group Code" := SalesLine."Customer Price Group";
            "Job No." := SalesLine."Job No.";
            "Work Type Code" := SalesLine."Work Type Code";
            "Outstanding Amount" := SalesLine."Outstanding Amount";
            "Qty. Shipped Not Invoiced" := SalesLine."Qty. Shipped Not Invoiced";
            "Quantity Shipped" := SalesLine."Quantity Shipped";
            "Quantity Invoiced" := SalesLine."Quantity Invoiced";
            "Shipment No." := SalesLine."Shipment No.";
            "Shipment Line No." := SalesLine."Shipment Line No.";
            "Profit %" := SalesLine."Profit %";
            "Bill-to Customer No." := SalesLine."Bill-to Customer No.";
            "Inv. Discount Amount" := SalesLine."Inv. Discount Amount";
            "Purchase Order No." := SalesLine."Purchase Order No.";
            "Purch. Order Line No." := SalesLine."Purch. Order Line No.";
            "Drop Shipment" := SalesLine."Drop Shipment";
            "Gen. Bus. Posting Group" := SalesLine."Gen. Bus. Posting Group";
            "Gen. Prod. Posting Group" := SalesLine."Gen. Prod. Posting Group";
            "VAT Calculation Type" := SalesLine."VAT Calculation Type";
            "Transaction Type" := SalesLine."Transaction Type";
            "Transport Method" := SalesLine."Transport Method";
            "Attached to Line No." := SalesLine."Attached to Line No.";
            "Exit Point" := SalesLine."Exit Point";
            Area := SalesLine.Area;
            "Transaction Specification" :=SalesLine."Transaction Specification";
            "Tax Area Code" := SalesLine."Tax Area Code";
            "Tax Liable" := SalesLine."Tax Liable";
            "Tax Group Code" := SalesLine."Tax Group Code";
            "VAT Bus. Posting Group" := SalesLine."VAT Bus. Posting Group";
            "VAT Prod. Posting Group" := SalesLine."VAT Prod. Posting Group";
            "Outstanding Amount (LCY)" := SalesLine."Outstanding Amount (LCY)";
            "Shipped Not Invoiced (LCY)" := SalesLine."Shipped Not Invoiced (LCY)";
            "Reserved Quantity" := SalesLine."Reserved Quantity";
            Reserve := SalesLine.Reserve;
            "Blanket Order No." := SalesLine."Blanket Order No.";
            "Blanket Order Line No." := SalesLine."Blanket Order Line No.";
            "VAT Base Amount" := SalesLine."VAT Base Amount";
            "Unit Cost" := SalesLine."Unit Cost";
            "System-Created Entry" := SalesLine."System-Created Entry";
            "Variant Code" := SalesLine."Variant Code";
            "Bin Code" := SalesLine."Bin Code";
            "Qty. per Unit of Measure" := SalesLine."Qty. per Unit of Measure";
            Planned := SalesLine.Planned;
            "Unit of Measure Code" := SalesLine."Unit of Measure Code";
            "Quantity (Base)" := SalesLine."Quantity (Base)";
            "Outstanding Qty. (Base)" := SalesLine."Outstanding Qty. (Base)";
            "Qty. to Invoice (Base)" := SalesLine."Qty. to Invoice (Base)";
            "Qty. to Ship (Base)" := SalesLine."Qty. to Ship (Base)";
            "Qty. Shipped Not Invd. (Base)" := SalesLine."Qty. Shipped Not Invd. (Base)";
            "Qty. Shipped (Base)" := SalesLine."Qty. Shipped (Base)";
            "Qty. Invoiced (Base)" := SalesLine."Qty. Invoiced (Base)";
            "Reserved Qty. (Base)" := SalesLine."Reserved Qty. (Base)";
            "Planned Delivery Date" := SalesLine."Planned Delivery Date";
            INSERT;

            ReservEntry.SETCURRENTKEY(
              "Source ID","Source Ref. No.","Source Type","Source Subtype",
              "Source Batch Name","Source Prod. Order Line","Reservation Status");
            ReservEntry.SETRANGE("Source ID",SalesHeader."No.");
            ReservEntry.SETRANGE("Source Ref. No.",SalesLine."Line No.");
            ReservEntry.SETRANGE("Source Type",DATABASE::"Sales Line");
            ReservEntry.SETRANGE("Source Subtype",SalesHeader."Document Type");
            IF ReservEntry.FIND('-') THEN
              REPEAT
                IF (ReservEntry."Lot No." <> '') OR (ReservEntry."Serial No." <> '') THEN BEGIN
                  BizTalkReservEntry.INIT;
                  BizTalkReservEntry."BizTalk Document No." :=
                    OutboundSalesDocumentHeader."Outbound Document No.";
                  BizTalkReservEntry."Biztalk Document Direction" :=
                    BizTalkReservEntry."Biztalk Document Direction"::Outbound;
                  BizTalkReservEntry."Source Type" := DATABASE::"Sales Line";
                  BizTalkReservEntry."BizTalk Document Line No." :=
                    OutboundSalesDocumentLine."Line No.";
                  BizTalkReservEntry.TRANSFERFIELDS(ReservEntry);
                  BizTalkReservEntry."Item No." :=
                    BizTalkManagement.SetItemNoOnSalesBizReservEntry(
                      OutboundSalesDocumentLine,
                      OutboundSalesDocumentLine."Sell-to Customer No.");
                  BizTalkReservEntry.INSERT;
                END;
              UNTIL ReservEntry.NEXT = 0;

          UNTIL SalesLine.NEXT = 0;
        END;
      END;
    END;

    BEGIN
    END.
  }
}
