OBJECT Codeunit 6828 EP Report Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=NAVW16.00.01;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      TmpFileName@1000 : Text[1024];

    LOCAL PROCEDURE GetTempFileName@1();
    VAR
      File@1000 : File;
    BEGIN
      File.CREATETEMPFILE;
      TmpFileName := File.NAME;
      File.CLOSE;
    END;

    LOCAL PROCEDURE GetXMLNode@2(VAR ReportNode@1001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 3.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v3.0'.IXMLDOMNode");
    VAR
      XMLReportStore@1000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 3.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v3.0'.DOMDocument";
    BEGIN
      CREATE(XMLReportStore);
      XMLReportStore.load(TmpFileName);
      ReportNode := XMLReportStore.documentElement;
      CLEAR(XMLReportStore);

      ERASE(TmpFileName);
    END;

    PROCEDURE CreateReportPreview@1000000000(ReportID@1000000000 : Integer;VAR PrintRecordRef@1000000001 : RecordRef;VAR ReportNode@1002 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 3.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v3.0'.IXMLDOMNode") ReturnValue : Boolean;
    BEGIN
      ReturnValue := FALSE;
      TmpFileName := '';

      GetTempFileName;
      IF TmpFileName <> '' THEN
        ReturnValue := TRUE;

      IF ReturnValue THEN
        CASE ReportID OF
          REPORT::"Sales - Quote":
            ReturnValue := SalesHeaderTableBased(ReportID,TmpFileName,PrintRecordRef);
          REPORT::"Order Confirmation":
            ReturnValue := SalesHeaderTableBased(ReportID,TmpFileName,PrintRecordRef);
          REPORT::"Quantity Explosion of BOM":
            ReturnValue := ItemTableBased(ReportID,TmpFileName,PrintRecordRef);
          REPORT::"Rolled-up Cost Shares":
            ReturnValue := ItemTableBased(ReportID,TmpFileName,PrintRecordRef);
          REPORT::"Detailed Calculation":
            ReturnValue := ItemTableBased(ReportID,TmpFileName,PrintRecordRef);
        END;

      IF ReturnValue THEN BEGIN
        GetXMLNode(ReportNode);
      END;

      IF ISCLEAR(ReportNode) THEN
        ReturnValue := FALSE;
    END;

    LOCAL PROCEDURE CustomerTableBased@1000000001(ReportID@1000000002 : Integer;TempPath@1000000001 : Text[1024];VAR PrintRecordRef@1000000000 : RecordRef) ReturnValue : Boolean;
    VAR
      Customer@1000000003 : Record 18;
    BEGIN
      Customer.SETVIEW(PrintRecordRef.GETVIEW);
      IF NOT ISSERVICETIER THEN // In order to suppress the warning on SAVEASXML
        ReturnValue := REPORT.SAVEASXML(ReportID,TempPath,TRUE,Customer);
    END;

    LOCAL PROCEDURE VendorTableBased@1000000002(ReportID@1000000003 : Integer;TempPath@1000000002 : Text[1024];VAR PrintRecordRef@1000000001 : RecordRef) ReturnValue : Boolean;
    VAR
      Vendor@1000000000 : Record 23;
    BEGIN
      Vendor.SETVIEW(PrintRecordRef.GETVIEW);
      IF NOT ISSERVICETIER THEN // In order to suppress the warning on SAVEASXML
        ReturnValue := REPORT.SAVEASXML(ReportID,TempPath,TRUE,Vendor);
    END;

    LOCAL PROCEDURE ItemTableBased@3(ReportID@1000000003 : Integer;TempPath@1000000002 : Text[1024];VAR PrintRecordRef@1000000001 : RecordRef) ReturnValue : Boolean;
    VAR
      Item@1000000000 : Record 27;
    BEGIN
      Item.SETVIEW(PrintRecordRef.GETVIEW);
      IF NOT ISSERVICETIER THEN // In order to suppress the warning on SAVEASXML
        ReturnValue := REPORT.SAVEASXML(ReportID,TempPath,TRUE,Item);
    END;

    LOCAL PROCEDURE SalesHeaderTableBased@4(ReportID@1000000003 : Integer;TempPath@1000000002 : Text[1024];VAR PrintRecordRef@1000000001 : RecordRef) ReturnValue : Boolean;
    VAR
      SalesHeader@1000000000 : Record 36;
    BEGIN
      SalesHeader.SETVIEW(PrintRecordRef.GETVIEW);
      IF NOT ISSERVICETIER THEN // In order to suppress the warning on SAVEASXML
        ReturnValue := REPORT.SAVEASXML(ReportID,TempPath,TRUE,SalesHeader);
    END;

    BEGIN
    END.
  }
}
