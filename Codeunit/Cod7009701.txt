OBJECT Codeunit 7009701 Funciones contrato
{
  OBJECT-PROPERTIES
  {
    Date=27/06/14;
    Time=12:26:58;
    Modified=Yes;
    Version List=AIC2009;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1103355004 : TextConst 'ENU=Reservation stay does not reach the minimum of admitted stays\;ESP=La estancia de la reserva no supera el minimo de estancias admitidas\';
      Text001@1103355005 : TextConst 'ENU=by the purchase contract;ESP=por el contrato compra.';
      Text002@1103355006 : TextConst 'ENU=There is a non-confirmed hotel purchase contract for the touroperator %1 \;ESP=Existe un contrato de compra hotel no confirmado para el TourOperador %1 \';
      Text003@1103355007 : TextConst 'ENU=local office %2 in the hotel %3 for the date %4;ESP=delegacion %2 en el hotel %3 para la fecha %4.';
      Text004@1103355008 : TextConst 'ENU=Hotel purchase contract does not exist for TourOperator %1 \;ESP=No existe contrato de compra hotel para el TourOperador %1 \';
      Text005@1103355009 : TextConst 'ENU=There is a hotel sale contract not confirmed for the TourOperator %1 \;ESP=Existe un contrato de venta hotel no confirmado para el TourOperador %1 \';
      Text006@1103355010 : TextConst 'ENU=Hotel sale contract does not exist for TourOperator %1 \;ESP=No existe contrato de venta hotel para el TourOperador %1 \';
      Text007@1103355011 : TextConst 'ENU=Purchase allotment does not exist for the room %1 in the contract %2-%3\;ESP=No existe cupo de compra para la habitacion %1 en el contrato %2-%3\';
      Text008@1103355012 : TextConst 'ENU=for the date %4;ESP=para la fecha %4.';
      Text009@1103355013 : TextConst 'ENU=Pruchase price for room %1 in the contract %2-%3 does not exist\;ESP=No existe precio de compra para la habitacion %1 en el contrato %2-%3\';
      Text010@1103355014 : TextConst 'ENU=Purchase price for board %1 in the contract %2-%3 does not exist\;ESP=No existe precio de compra para el regimen %1 en el contrato %2-%3\';
      Text011@1103355015 : TextConst 'ENU=TourOperator must be indicated;ESP=Se debe indicar un Touroperador.';
      Text012@1103355016 : TextConst 'ENU=Hotel must be indicated;ESP=Se debe indicar un hotel.';
      Text013@1103355017 : TextConst 'ENU=Initial date must be indicated;ESP=Se debe indicar la fecha de inicio.';
      Text014@1103355018 : TextConst 'ENU=Final date must be indicated;ESP=Se debe indicar la fecha de final.';
      Text015@1103355019 : TextConst 'ENU=VAT Prod. posting Group must be indicated;ESP=Se debe indicar un Grupo registro iva producto.';
      Text016@1103355020 : TextConst 'ENU=Starting date overlaps with the\;ESP=La fecha de inicio de este contrato se solapa con el\';
      Text017@1103355021 : TextConst 'ENU=contract %1-%2;ESP=contrato %1-%2.';
      Text018@1103355022 : TextConst 'ENU=Final date of this contract overlaps with the\;ESP=La fecha de final de este contrato se solapa con el\';
      Text019@1103355023 : TextConst 'ENU=This contract overlaps with the contract %1-%2;ESP=Este contrato se solapa con el contrato %1-%2.';
      Text021@1103355025 : TextConst 'ENU=FUN-ACT-COC;ESP=FUN-ACT-COC';
      Text022@1103355026 : TextConst 'ENU=Client must be indicated;ESP=Se debe indicar un Cliente.';
      Text023@1103355027 : TextConst 'ENU=FUN-ACT-COV;ESP=FUN-ACT-COV';
      Text024@1103355028 : TextConst 'ENU=Initial date of this allotment overlaps with another one;ESP=La fecha de inicio de este cupo se solapa con otro cupo.';
      Text025@1103355029 : TextConst 'ENU=Final date of this allotment overlaps with another one;ESP=La fecha de final de este cupo se solapa con otro cupo.';
      Text026@1103355030 : TextConst 'ENU=This allotment overlaps with another allotment of this contract;ESP=Este cupo se solapa con otro cupo de este contrato.';
      Text027@1103355031 : TextConst 'ENU=To generate the sale allotment must fill up the field %1;ESP=Para generar el cupo venta tiene que rellenar el campo %1';
      Text028@1103355032 : TextConst 'ENU=Initial date of this rate overlaps with another rate;ESP=La fecha de inicio de este precio se solapa con otro precio.';
      Text029@1103355033 : TextConst 'ENU=Final date of this rate overlaps with another rate;ESP=La fecha de final de este precio se solapa con otro precio.';
      Text030@1103355034 : TextConst 'ENU=This rate overlaps with another rate of this contract;ESP=Este precio se solapa con otro precio de este contrato.';
      Text031@1103355035 : TextConst 'ENU=Must confirm the contract before activate the prices;ESP=Debe confirmar el contrato antes de activar los precios.';
      Text032@1103355036 : TextConst 'ENU=This price overlaps with another entered price;ESP=Este precio se solapa con otro precio ya introducido.';
      Text033@1103355037 : TextConst 'ENU=Initial date of this offer overlaps with another price;ESP=La fecha de inicio de esta oferta se solapa con otro precio.';
      Text034@1103355038 : TextConst 'ENU=Final date of this offer overlaps with another price;ESP=La fecha de final de esta oferta se solapa con otro precio.';
      Text035@1103355039 : TextConst 'ENU=This offer overlaps with another rate of this contract;ESP=Esta oferta se solapa con otro precio de este contrato.';
      Text036@1103355040 : TextConst 'ENU=The term of this handling overlaps with another already entered;ESP=El periodo de este handling se solapa con otro ya introducido.';
      Text037@1103355041 : TextConst 'ENU="Final date of this Handling overlaps with another ";ESP=La fecha de final de este Handling se solapa con otro Handling.';
      Text038@1103355042 : TextConst 'ENU=This Handling overlaps with another Handling of this contract;ESP=Este Handling se solapa con otro Handling de este contrato.';
      Text039@1103355043 : TextConst 'ENU=Initial date of this rate overlaps with another rate;ESP=La fecha de inicio de este precio se solapa con otro precio.';
      Text040@1103355044 : TextConst 'ENU=Final date of this rate overlaps with another rate;ESP=La fecha de final de este precio se solapa con otro precio.';
      Text041@1103355045 : TextConst 'ENU=This rate overlaps with another rate of this contract;ESP=Este precio se solapa con otro precio de este contrato.';
      Text042@1103355046 : TextConst 'ENU=Initial date of this Guarantee overlaps with another Guarantee;ESP=La fecha de inicio de esta Garantia se solapa con otra Garantia.';
      Text043@1103355047 : TextConst 'ENU=Must confirm the contract before activating the guarantees;ESP=Debe confirmar el contrato antes de activar las garantias.';
      Text044@1103355048 : TextConst 'ENU=Copy to sale,Copy to purchase;ESP=Copiar a venta,Copiar a compra';
      Text048@1103355052 : TextConst 'ENU=Copy the contract %1 on the new contract %2;ESP=Copiar el contrato %1 sobre el nuevo contrato %2';
      Text051@1103355055 : TextConst 'ENU=Copy to sale,;ESP=Copiar a venta,';
      Text052@1103355056 : TextConst 'ENU=Copy to purchase;ESP=Copiar a compra';
      Text053@1103355057 : TextConst 'ENU=Error on the application.;ESP=Error inesperado en la aplicacion.';
      Text054@1103355058 : TextConst 'ENU=Must indicate positive numbers in realease and in allotment;ESP=Debe indicar cifras positivas tanto en realease com en cupo';
      Text055@1103355059 : TextConst 'ENU=Date from must be lower than date to;ESP=La fecha desde debe ser inferior a la fecha hasta';
      Text056@1103355060 : TextConst 'ENU=Dates overlap the current ones;ESP=Las fechas sobrepasan las actuales';
      Text057@1103355061 : TextConst 'ENU=-1D;ESP=-1D';
      Text058@1103355062 : TextConst 'ENU=+1D;ESP=+1D';
      Text059@1103355063 : TextConst 'ENU=Enter the new release term, \;ESP=Introduzca el nuevo periodo realease, \';
      Text060@1103355064 : TextConst 'ENU=" From            #1#######\";ESP=" Desde            #1#######\"';
      Text061@1103355065 : TextConst 'ENU=" To            #2#######\";ESP=" Hasta            #2#######\"';
      Text062@1103355066 : TextConst 'ENU=" Allotment             #3##\";ESP=" Cupo             #3##\"';
      Text063@1103355067 : TextConst 'ENU=" Release days #4##\\";ESP=" Dias de realease #4##\\"';
      Text064@1103355068 : TextConst 'ENU=" Room type  #5#######";ESP=" Tipo Habitaci¢n  #5#######"';
      Text065@1103355069 : TextConst 'ENU=Dates overlap the current ones;ESP=Las fechas sobrepasan los actuales';
      Text066@1103355070 : TextConst 'ENU=Error'' consult your administrator;ESP=Error imprevisto... consulte con su distribuidor';
      Text067@1103355071 : TextConst 'ENU=Division date must be within date from and date to;ESP=La fecha division debe estar entre la fecha desde y la fecha hasta';
      Text068@1103355072 : TextConst 'ENU=Division date must be lower or the same than division date to;ESP=La fecha division desde tiene que ser menor o igual que la fecha division hasta';
      Text069@1103355073 : TextConst 'ENU=Enter the new term of the price %1;ESP=Introduzca el nuevo periodo del precio %1';
      Text070@1103355074 : TextConst 'ENU=" From               #1#######\";ESP=" Desde               #1#######\"';
      Text071@1103355075 : TextConst 'ENU=" Division            #2#######\";ESP=" Division            #2#######\"';
      Text072@1103355076 : TextConst 'ENU=" To               #3#######\";ESP=" Hasta               #3#######\"';
      Text073@1103355077 : TextConst 'ENU=" 1st term amount  #4#######\";ESP=" Importe 1r periodo  #4#######\"';
      Text074@1103355078 : TextConst 'ENU=" 2nd term amount  #5#######";ESP=" Importe 2o periodo  #5#######"';
      Text075@1103355079 : TextConst 'ENU=Division date must be within date from and date to, excluding both;ESP=La fecha division debe estar entre la fecha desde y la fecha hasta, ambas excluidas';
      Text076@1103355080 : TextConst 'ENU=Sale allotment does not exist for the room %1 in the contract %2-%3\;ESP=No existe cupo de venta para la habitacion %1 en el contrato %2-%3\';
      Text077@1103355081 : TextConst 'ENU=Sale price does not exist for the room %1 in the contract %2-%3\;ESP=No existe precio de venta para la habitacion %1 en el contrato %2-%3\';
      Text078@1103355082 : TextConst 'ENU=Sale price does not exist for the board %1 in the contract %2-%3\;ESP=No existe precio de venta para el regimen %1 en el contrato %2-%3\';
      Text079@1103355083 : TextConst 'ENU=" COPY OFFER PURCHASE PRICE \";ESP=" COPIAR OFERTA PRECIO DE COMPRA \"';
      Text080@1103355084 : TextConst 'ENU="     Date from: #1######\";ESP="     Fecha desde: #1######\"';
      Text081@1103355085 : TextConst 'ENU="     Date to: #2######";ESP="     Fecha hasta: #2######"';
      Text082@1103355086 : TextConst 'ENU=Initial date mus be previous than date of the end of offer;ESP=La fecha de inicio debe ser anterior a la fecha de fin de la oferta.';
      Text083@1103355087 : TextConst 'ENU=Date from is out of the range of the contract;ESP=La fecha desde esta fuera de los rangos del contrato.';
      Text084@1103355088 : TextConst 'ENU=Date to is out of the range of the contract;ESP=La fecha hasta esta fuera de los rangos del contrato.';
      Text085@1103355089 : TextConst 'ENU=" COPY OFFER SALE PRICE \";ESP=" COPIAR OFERTA PRECIO DE VENTA \"';
      Text086@1103355090 : TextConst 'ENU=" COPY PRICES PURCHASE ROOM \";ESP=" COPIAR PRECIOS HABITACION COMPRA \"';
      Text087@1103355091 : TextConst 'ENU="   New Room: #1#######";ESP="   Nueva Habitacion: #1#######"';
      Text088@1103355092 : TextConst 'ENU=Room type %1 does not exist in this contract;ESP=No existe el tipo de habitacion %1 en este contrato.';
      Text089@1103355093 : TextConst 'ENU=This type of room has cleared prices, no possible to copy.;ESP=Este tipo de habitacion ya tiene precios definidos, no es posible realizar la copia.';
      Text090@1103355094 : TextConst 'ENU=" COPY PRICES SALE ROOM \";ESP=" COPIAR PRECIOS HABITACION VENTA \"';
      Text091@1103355095 : TextConst 'ENU=" ACTIVATING PURCHASE ALLOTMENTS \";ESP=" ACTIVANDO CUPOS DE COMPRA \"';
      Text092@1103355096 : TextConst 'ENU="   Contract..: #1########  \";ESP="   Contrato..: #1########  \"';
      Text093@1103355097 : TextConst 'ENU="   Room: #2########  \";ESP="   Habitacion: #2########  \"';
      Text094@1103355098 : TextConst 'ENU="   From.....: #3######    \";ESP="   Desde.....: #3######    \"';
      Text095@1103355099 : TextConst 'ENU="   To.....: #4######";ESP="   Hasta.....: #4######"';
      Text096@1103355100 : TextConst 'ENU=ACTIVATING SALE ALLOTMENTS \;ESP=" ACTIVANDO CUPOS DE VENTA \"';
      Text097@1103355101 : TextConst 'ENU="  Contract..: #1########  \";ESP="  Contrato..: #1########  \"';
      Text098@1103355102 : TextConst 'ENU="  Room: #2########  \";ESP="  Habitacion: #2########  \"';
      Text099@1103355103 : TextConst 'ENU="  From.....: #3######    \";ESP="  Desde.....: #3######    \"';
      Text100@1103355104 : TextConst 'ENU="  To.....: #4######";ESP="  Hasta.....: #4######"';
      Text101@1103355105 : TextConst 'ENU=Hotel Name #1############################;ESP=Nombre Hotel #1############################';
      Text102@1103355106 : TextConst 'ENU=Choose a more restricted filter;ESP=Elija un filtro m s restrictivo.';
      Text103@1103355107 : TextConst 'ENU=COPY ALLOTMENTS PURCHASE ROOM\;ESP=COPIAR CUPOS HABITACION COMPRA\';
      Text104@1103355108 : TextConst 'ENU=New Room: #1#######;ESP=Nueva Habitacion: #1#######';
      Text105@1103355109 : TextConst 'ENU=COPY ALLOTMENTS SALE ROOM\;ESP=COPIAR CUPOS HABITACION VENTA\';
      Text107@1103355111 : TextConst 'ENU=This price overlaps with another one already entered;ESP=Este precio se solapa con otra ya introducido.';
      rPar@1103355000 : Record 7009700;
      fconHot@1103355001 : Form 7010123;
      rUsu2@1103355002 : Record 2000000002;
      Text108@1103355112 : TextConst 'ENU=When filling up %1 field is compulsory to fill up the field %2;ESP=Cuando se rellena el campo %1 es obligatorio rellenar tambien el campo %2.';
      Text109@1103355113 : TextConst 'ENU=Indicate month of increasing #1##;ESP=Indicar meses de incremento #1##';
      Text110@1103355114 : TextConst 'ENU=Dates of the new contract were not filling up correctly;ESP=No ha rellenado correctamente las fechas del nuevo contrato';
      Text111@1103355115 : TextConst 'ENU=Would you like to change the dates of the new contract;ESP=Desea cambiar las fechas del nuevo contrato';
      Text112@1103355116 : TextConst 'ENU=Would you like to generate the tracking of contract from %1?;ESP=¨Desea generar los seguimientos de contrato a partir de %1?';
      wVentana@1103355117 : Dialog;
      Text113@1103355118 : TextConst 'ENU=Enter date from #1#########;ESP=Introducir Fecha Desde #1#########';
      Text114@1103355119 : TextConst 'ENU=Must enter a date;ESP=Debe de Introducir una fecha';
      cFunHot@1100253000 : Codeunit 7009719;
      Text115@1100253001 : TextConst 'ENU=Copying process correctly ended;ESP=Proceso de copiar finalizado correctamente.';
      Text116@1100253002 : TextConst 'ENU=Any contract has been selected;ESP=No se ha seleccionado ningun contrato.';
      Text117@1100253003 : TextConst 'ENU=Would you like to create new sale contracts for the selected touroperators;ESP=Desea crear nuevos contratos de venta para los touroperadores seleccionados.';
      Text118@1100253004 : TextConst 'ENU="Would you like to create prices of the sale contract to zero ";ESP=Desea crear los precios del contrato de venta a cero';
      Text119@1100253005 : TextConst 'ENU=Unable to copy from an expired contract;ESP=No se puede copiar desde un contrato vencido.';
      Text120@1100253006 : TextConst 'ENU=Contracts copying process ended;ESP=Proceso de copiado de contratos finalizado.';
      cFunSeg@1100253007 : Codeunit 7009751;

    PROCEDURE busca_contrato_compra@1(aux_touroperador@1103355000 : Code[10];aux_delegacion@1103355001 : Code[10];aux_hotel@1103355002 : Code[20];aux_fecha_entrada@1103355003 : Date;aux_fecha_salida@1103355004 : Date) : Code[10];
    VAR
      rConC@1103355005 : Record 7009723;
      fecha_trabajo@1103355006 : Date;
      contrato@1103355007 : Code[10];
      estancia@1103355008 : Integer;
    BEGIN
      // busca_contrato_compra

      estancia := aux_fecha_salida - aux_fecha_entrada;

      contrato := '';

      rConC.RESET;
      rConC.SETCURRENTKEY(Delegacion,
                          TourOperador,
                          Hotel,
                          "Fecha inicio contrato",
                          "Fecha final contrato");
      rConC.SETRANGE (Delegacion             , aux_delegacion);
      rConC.SETRANGE (TourOperador           , aux_touroperador);
      rConC.SETRANGE (Hotel                  , aux_hotel);
      FOR fecha_trabajo := aux_fecha_entrada TO aux_fecha_salida - 1 DO BEGIN
        rConC.SETFILTER("Fecha inicio contrato", '<=%1', fecha_trabajo);
        rConC.SETFILTER("Fecha final contrato" , '>=%1', fecha_trabajo);
        IF rConC.FIND('-') THEN BEGIN
          IF rConC.Confirmado THEN BEGIN
            IF fecha_trabajo = aux_fecha_entrada THEN BEGIN
              IF estancia < rConC."Minimo estancias" THEN
                ERROR(Text000 +
                      Text001)
              ELSE
                contrato := rConC."N§ Contrato compra";
            END;
          END
          ELSE BEGIN
            ERROR(Text002+
                  Text003, aux_touroperador,
                  aux_delegacion, aux_hotel, fecha_trabajo);
          END;
        END
        ELSE BEGIN
          rConC.RESET;
          ERROR(Text004+
                Text003, aux_touroperador,
                aux_delegacion, aux_hotel, fecha_trabajo);
        END;
      END;
      EXIT(contrato);
    END;

    PROCEDURE busca_contrato_venta@5(aux_touroperador@1103355000 : Code[10];aux_delegacion@1103355001 : Code[10];aux_hotel@1103355002 : Code[20];aux_fecha_entrada@1103355003 : Date;aux_fecha_salida@1103355004 : Date) : Code[10];
    VAR
      rConV@1103355005 : Record 7009727;
      fecha_trabajo@1103355006 : Date;
      contrato@1103355007 : Code[10];
    BEGIN
      // busca_contrato_venta
      //
      contrato := '';
      rConV.RESET;
      rConV.SETCURRENTKEY(Delegacion,
                          TourOperador,
                          Hotel,
                          "Fecha inicio contrato",
                          "Fecha final contrato");
      rConV.SETRANGE (Delegacion             , aux_delegacion);
      rConV.SETRANGE (TourOperador           , aux_touroperador);
      rConV.SETRANGE (Hotel                  , aux_hotel);
      FOR fecha_trabajo := aux_fecha_entrada TO aux_fecha_salida - 1 DO BEGIN
        rConV.SETFILTER("Fecha inicio contrato", '<=%1', fecha_trabajo);
        rConV.SETFILTER("Fecha final contrato" , '>=%1', fecha_trabajo);
        IF rConV.FIND('-') THEN BEGIN
          IF rConV.Confirmado THEN BEGIN
            IF fecha_trabajo = aux_fecha_entrada THEN BEGIN
              contrato := rConV."N§ Contrato venta";
            END;
          END
          ELSE BEGIN
            ERROR(Text005+
                  Text003, aux_touroperador,
                  aux_delegacion, aux_hotel, fecha_trabajo);
          END;
        END
        ELSE BEGIN
          rConV.RESET;
          ERROR(Text006+
                Text003, aux_touroperador,
                aux_delegacion, aux_hotel, fecha_trabajo);
        END;
      END;
      EXIT(contrato);
    END;

    PROCEDURE busca_cupo_habitacion@2(aux_touroperador@1103355000 : Code[10];aux_delegacion@1103355001 : Code[10];aux_hotel@1103355002 : Code[20];aux_fecha_entrada@1103355003 : Date;aux_fecha_salida@1103355004 : Date;aux_habitacion@1103355005 : Code[10];aux_hotel_precios@1103355006 : Code[20];busca_precio@1103355007 : Boolean);
    VAR
      rConC@1103355008 : Record 7009723;
      rCupoC@1103355009 : Record 7009739;
      rPreC@1103355010 : Record 7009738;
      fecha_trabajo@1103355011 : Date;
    BEGIN
      // busca_cupo_habitacion
      //
      rConC.RESET;
      rConC.SETCURRENTKEY(Delegacion,
                          TourOperador,
                          Hotel,
                          "Fecha inicio contrato",
                          "Fecha final contrato");
      rConC.SETRANGE (Delegacion             , aux_delegacion);
      rConC.SETRANGE (TourOperador           , aux_touroperador);
      rConC.SETRANGE (Hotel                  , aux_hotel);
      rConC.SETRANGE (Confirmado             , TRUE);
      FOR fecha_trabajo := aux_fecha_entrada TO aux_fecha_salida - 1 DO BEGIN
        rConC.SETFILTER("Fecha inicio contrato", '<=%1', fecha_trabajo);
        rConC.SETFILTER("Fecha final contrato" , '>=%1', fecha_trabajo);
        IF rConC.FIND('-') THEN BEGIN
          rCupoC.SETRANGE (Delegacion          , aux_delegacion);
          rCupoC.SETRANGE ("N§ Contrato compra", rConC."N§ Contrato compra");
          rCupoC.SETRANGE ("Habitacion cupo"   , aux_habitacion);
          rCupoC.SETFILTER("Fecha desde"      , '<=%1', fecha_trabajo);
          rCupoC.SETFILTER("Fecha hasta"      , '>=%1', fecha_trabajo);
          rCupoC.SETRANGE (Activo             , TRUE);
          IF NOT rCupoC.FIND('-') THEN BEGIN
            ERROR(Text007+
                  Text008, aux_habitacion, aux_delegacion, rConC."N§ Contrato compra", fecha_trabajo);
          END;
        END
        ELSE BEGIN
          rConC.RESET;
          ERROR(Text004+
                Text003, aux_touroperador,
                aux_delegacion, aux_hotel, fecha_trabajo);
        END;
      END;
      IF busca_precio THEN BEGIN
        rConC.RESET;
        rConC.SETCURRENTKEY(Delegacion,
                            TourOperador,
                            Hotel,
                            "Fecha inicio contrato",
                            "Fecha final contrato");
        rConC.SETRANGE (Delegacion             , aux_delegacion);
        rConC.SETRANGE (TourOperador           , aux_touroperador);
        rConC.SETRANGE (Hotel                  , aux_hotel_precios);
        rConC.SETRANGE (Confirmado             , TRUE);
        FOR fecha_trabajo := aux_fecha_entrada TO aux_fecha_salida - 1 DO BEGIN
          rConC.SETFILTER("Fecha inicio contrato", '<=%1', fecha_trabajo);
          rConC.SETFILTER("Fecha final contrato" , '>=%1', fecha_trabajo);
          IF rConC.FIND('-') THEN BEGIN
            rPreC.SETRANGE(Delegacion     , aux_delegacion);
            rPreC.SETRANGE("N§ Contrato"  , rConC."N§ Contrato compra");
            rPreC.SETRANGE("Codigo Precio", rPreC."Codigo Precio"::Habitacion);
            rPreC.SETRANGE(Codigo         , aux_habitacion);
            rPreC.SETFILTER("Fecha desde" , '<=%1', fecha_trabajo);
            rPreC.SETFILTER("Fecha hasta" , '>=%1', fecha_trabajo);
            rPreC.SETRANGE(Activo         , TRUE);
            IF NOT rPreC.FIND('-') THEN
              ERROR(Text009+
                    Text008, aux_habitacion, aux_delegacion, rConC."N§ Contrato compra", fecha_trabajo);
          END
          ELSE BEGIN
            rConC.RESET;
            ERROR(Text004+
                  Text003, aux_touroperador,
                  aux_delegacion, aux_hotel_precios, fecha_trabajo);
          END;
        END;
      END;
    END;

    PROCEDURE busca_precio_regimen@4(aux_touroperador@1103355000 : Code[10];aux_delegacion@1103355001 : Code[10];aux_hotel@1103355002 : Code[20];aux_fecha_entrada@1103355003 : Date;aux_fecha_salida@1103355004 : Date;aux_regimen@1103355005 : Code[10]);
    VAR
      rConC@1103355006 : Record 7009723;
      rPreC@1103355007 : Record 7009738;
      fecha_trabajo@1103355008 : Date;
    BEGIN
      // busca_precio_regimen

      rConC.RESET;
      rConC.SETCURRENTKEY(Delegacion,
                          TourOperador,
                          Hotel,
                          "Fecha inicio contrato",
                          "Fecha final contrato");
      rConC.SETRANGE (Delegacion             , aux_delegacion);
      rConC.SETRANGE (TourOperador           , aux_touroperador);
      rConC.SETRANGE (Hotel                  , aux_hotel);
      rConC.SETRANGE (Confirmado             , TRUE);
      FOR fecha_trabajo := aux_fecha_entrada TO aux_fecha_salida - 1 DO BEGIN
        rConC.SETFILTER("Fecha inicio contrato", '<=%1', fecha_trabajo);
        rConC.SETFILTER("Fecha final contrato" , '>=%1', fecha_trabajo);
        IF rConC.FIND('-') THEN BEGIN
          rPreC.SETRANGE (Delegacion     , aux_delegacion);
          rPreC.SETRANGE ("N§ Contrato"  , rConC."N§ Contrato compra");
          rPreC.SETRANGE ("Codigo Precio", rPreC."Codigo Precio"::Regimen);
          rPreC.SETRANGE (Codigo         , aux_regimen);
          rPreC.SETFILTER("Fecha desde"  , '<=%1', fecha_trabajo);
          rPreC.SETFILTER("Fecha hasta"  , '>=%1', fecha_trabajo);
          rPreC.SETRANGE (Activo         , TRUE);
          IF NOT rPreC.FIND('-') THEN
            ERROR(Text010+
                  Text008, aux_regimen, aux_delegacion, rConC."N§ Contrato compra", fecha_trabajo);
        END
        ELSE BEGIN
          rConC.RESET;
          ERROR(Text004+
                Text003, aux_touroperador,
                aux_delegacion, aux_hotel, fecha_trabajo);
        END;
      END;
    END;

    PROCEDURE confirmar_contrato_compra@6(Contrato@1103355000 : Record 7009723) : Boolean;
    VAR
      rConC@1103355001 : Record 7009723;
    BEGIN
      // confirmar_contrato_compra

      IF Contrato.TourOperador = '' THEN BEGIN
        MESSAGE(Text011);
        EXIT;
      END;
      IF Contrato.Hotel = '' THEN BEGIN
        MESSAGE(Text012);
        EXIT;
      END;
      IF Contrato."Fecha inicio contrato" = 0D THEN BEGIN
        MESSAGE(Text013);
        EXIT;
      END;
      IF (Contrato."Fecha final contrato" = 0D) THEN BEGIN
        MESSAGE(Text014);
        EXIT;
      END;
      IF Contrato."Gr. Registro IVA Producto" = '' THEN BEGIN
        MESSAGE(Text015);
        EXIT;
      END;

      rConC.RESET;
      rConC.SETRANGE (Delegacion             , Contrato.Delegacion);
      rConC.SETRANGE (TourOperador           , Contrato.TourOperador);
      rConC.SETRANGE (Hotel                  , Contrato.Hotel);
      rConC.SETFILTER("N§ Contrato compra"   , '<>%1', Contrato."N§ Contrato compra");
      rConC.SETFILTER("Fecha inicio contrato", '<=%1', Contrato."Fecha inicio contrato");
      rConC.SETFILTER("Fecha final contrato" , '>=%1', Contrato."Fecha inicio contrato");
      rConC.SETRANGE (Confirmado             , TRUE);
      IF rConC.FIND('-') THEN
        ERROR(Text016+
              Text017, rConC.Delegacion, rConC."N§ Contrato compra");

      rConC.RESET;
      rConC.SETRANGE (Delegacion             , Contrato.Delegacion);
      rConC.SETRANGE (TourOperador           , Contrato.TourOperador);
      rConC.SETRANGE (Hotel                  , Contrato.Hotel);
      rConC.SETFILTER("N§ Contrato compra"   , '<>%1', Contrato."N§ Contrato compra");
      rConC.SETFILTER("Fecha inicio contrato", '<=%1', Contrato."Fecha final contrato");
      rConC.SETFILTER("Fecha final contrato" , '>=%1', Contrato."Fecha final contrato");
      rConC.SETRANGE (Confirmado             , TRUE);
      IF rConC.FIND('-') THEN
        ERROR(Text018+
              Text017, rConC.Delegacion, rConC."N§ Contrato compra");

      rConC.RESET;
      rConC.SETRANGE (Delegacion             , Contrato.Delegacion);
      rConC.SETRANGE (TourOperador           , Contrato.TourOperador);
      rConC.SETRANGE (Hotel                  , Contrato.Hotel);
      rConC.SETFILTER("N§ Contrato compra"   , '<>%1', Contrato."N§ Contrato compra");
      rConC.SETFILTER("Fecha inicio contrato", '>=%1', Contrato."Fecha inicio contrato");
      rConC.SETFILTER("Fecha final contrato" , '<=%1', Contrato."Fecha final contrato");
      rConC.SETRANGE (Confirmado             , TRUE);
      IF rConC.FIND('-') THEN
        ERROR(Text019, rConC.Delegacion, rConC."N§ Contrato compra");

      IF NOT cFunSeg.TienePermiso(Text021, FALSE) THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE confirmar_contrato_venta@3(Contrato@1103355000 : Record 7009727) : Boolean;
    VAR
      rConV@1103355001 : Record 7009727;
    BEGIN
      // confirmar_contrato_venta

      IF (Contrato.Delegacion = '') OR (Contrato.TourOperador = '') OR (Contrato.Hotel = '') OR
         (Contrato."Fecha inicio contrato" = 0D) OR (Contrato."Fecha final contrato" = 0D) THEN
        EXIT;
      IF Contrato.Cliente = '' THEN BEGIN
        MESSAGE(Text022);
        EXIT;
      END;
      IF Contrato."Gr. registro IVA producto" = '' THEN BEGIN
        MESSAGE(Text015);
        EXIT;
      END;

      rConV.RESET;
      rConV.SETRANGE (Delegacion             , Contrato.Delegacion);
      rConV.SETRANGE (TourOperador           , Contrato.TourOperador);
      rConV.SETRANGE (Hotel                  , Contrato.Hotel);
      rConV.SETFILTER("N§ Contrato venta"   , '<>%1', Contrato."N§ Contrato venta");
      rConV.SETFILTER("Fecha inicio contrato", '<=%1', Contrato."Fecha inicio contrato");
      rConV.SETFILTER("Fecha final contrato" , '>=%1', Contrato."Fecha inicio contrato");
      rConV.SETRANGE (Confirmado             , TRUE);
      IF rConV.FIND('-') THEN
        ERROR(Text016+
              Text017, rConV.Delegacion, rConV."N§ Contrato venta");

      rConV.RESET;
      rConV.SETRANGE (Delegacion             , Contrato.Delegacion);
      rConV.SETRANGE (TourOperador           , Contrato.TourOperador);
      rConV.SETRANGE (Hotel                  , Contrato.Hotel);
      rConV.SETFILTER("N§ Contrato venta"   , '<>%1', Contrato."N§ Contrato venta");
      rConV.SETFILTER("Fecha inicio contrato", '<=%1', Contrato."Fecha final contrato");
      rConV.SETFILTER("Fecha final contrato" , '>=%1', Contrato."Fecha final contrato");
      rConV.SETRANGE (Confirmado             , TRUE);
      IF rConV.FIND('-') THEN
        ERROR(Text018+
              Text017, rConV.Delegacion, rConV."N§ Contrato venta");

      rConV.RESET;
      rConV.SETRANGE (Delegacion             , Contrato.Delegacion);
      rConV.SETRANGE (TourOperador           , Contrato.TourOperador);
      rConV.SETRANGE (Hotel                  , Contrato.Hotel);
      rConV.SETFILTER("N§ Contrato venta"   , '<>%1', Contrato."N§ Contrato venta");
      rConV.SETFILTER("Fecha inicio contrato", '>=%1', Contrato."Fecha inicio contrato");
      rConV.SETFILTER("Fecha final contrato" , '<=%1', Contrato."Fecha final contrato");
      rConV.SETRANGE (Confirmado             , TRUE);
      IF rConV.FIND('-') THEN
        ERROR(Text019, rConV.Delegacion, rConV."N§ Contrato venta");

      IF NOT cFunSeg.TienePermiso(Text023, FALSE) THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE activar_cupo_compra@7(Cupo@1103355000 : Record 7009739;contrato_compra@1103355001 : Record 7009723) : Boolean;
    VAR
      rCupo@1103355002 : Record 7009739;
      rConC@1103355003 : Record 7009723;
      rCupodia@1103355004 : Record 7009757;
      rHot@1103355007 : Record 7009724;
      dia@1103355008 : Date;
      lwGrupoTTOO@1100253000 : Code[10];
    BEGIN
      // activar_cupo_compra

      IF (Cupo.Delegacion = '') OR (Cupo."N§ Contrato compra" = '') OR (Cupo."Habitacion cupo" = '') OR
         (Cupo."Fecha desde" = 0D) OR (Cupo."Fecha hasta" = 0D) THEN
        EXIT;

      rPar.FIND('-');

      // JPT 10/12/04 Si as¡ esta parametrizado se crear  para cada cupo x dia compra un cupo x dia venta
      // Si no est  el TTOO no se activa el cupo

      IF rPar."Crear Cupos Venta desde compra" THEN BEGIN
        IF Cupo."Touroperador Venta"='' THEN
          EXIT(FALSE);
      END;

      // Comprobar nuevos datos de cupos

      rCupo.RESET;
      rCupo.SETRANGE (Delegacion          , Cupo.Delegacion);
      rCupo.SETRANGE ("N§ Contrato compra", Cupo."N§ Contrato compra");
      rCupo.SETRANGE ("Habitacion cupo"   , Cupo."Habitacion cupo");
      rCupo.SETFILTER("Fecha desde"       , '<=%1', Cupo."Fecha desde");
      rCupo.SETFILTER("Fecha hasta"       , '>=%1', Cupo."Fecha desde");
      rCupo.SETRANGE (Activo              , TRUE);
      rCupo.SETRANGE ("Touroperador Venta", Cupo."Touroperador Venta");
      rCupo.SETFILTER("Num Linea"         , '<>%1', Cupo."Num Linea");
      IF rCupo.FIND('-') THEN BEGIN
        MESSAGE(Text024);
        EXIT(FALSE);
      END;

      rCupo.RESET;
      rCupo.SETRANGE (Delegacion          , Cupo.Delegacion);
      rCupo.SETRANGE ("N§ Contrato compra", Cupo."N§ Contrato compra");
      rCupo.SETRANGE ("Habitacion cupo"   , Cupo."Habitacion cupo");
      rCupo.SETFILTER("Fecha desde"       , '<=%1', Cupo."Fecha hasta");
      rCupo.SETFILTER("Fecha hasta"       , '>=%1', Cupo."Fecha hasta");
      rCupo.SETRANGE (Activo              , TRUE);
      rCupo.SETRANGE ("Touroperador Venta", Cupo."Touroperador Venta");
      rCupo.SETFILTER("Num Linea"         , '<>%1', Cupo."Num Linea");
      IF rCupo.FIND('-') THEN BEGIN
        MESSAGE(Text025);
        EXIT(FALSE);
      END;

      rCupo.RESET;
      rCupo.SETRANGE (Delegacion          , Cupo.Delegacion);
      rCupo.SETRANGE ("N§ Contrato compra", Cupo."N§ Contrato compra");
      rCupo.SETRANGE ("Habitacion cupo"   , Cupo."Habitacion cupo");
      rCupo.SETFILTER("Fecha desde"       , '>=%1', Cupo."Fecha desde");
      rCupo.SETFILTER("Fecha hasta"       , '<=%1', Cupo."Fecha hasta");
      rCupo.SETRANGE (Activo              , TRUE);
      rCupo.SETRANGE ("Touroperador Venta", Cupo."Touroperador Venta");
      rCupo.SETFILTER("Num Linea"         , '<>%1', Cupo."Num Linea");
      IF rCupo.FIND('-') THEN BEGIN
        MESSAGE(Text026);
        EXIT(FALSE);
      END;

      // AJS 27.05.2009

      rPar.FINDFIRST;
      IF NOT rPar."No generar booking x dia" THEN BEGIN

        // JPT 10/08/10 Insertamos el grupo toruoperador
        lwGrupoTTOO := cFunHot.GetGrupoTouroperador(Cupo."Touroperador Venta");

        // Insertar nuevos registros en booking

        FOR dia := Cupo."Fecha desde" TO Cupo."Fecha hasta" DO BEGIN
          rCupodia.INIT;
          rCupodia.Delegacion          := contrato_compra.Delegacion;
          rCupodia."Contrato compra"   := contrato_compra."N§ Contrato compra";
          rCupodia.Hotel               := contrato_compra.Hotel;
          rCupodia.TourOperador        := contrato_compra.TourOperador;
          rCupodia.Dia                 := dia;
          rCupodia.Habitacion          := Cupo."Habitacion cupo";
          rCupodia."Cupo contratado"   := Cupo.Cupo;
          rCupodia.Release             := Cupo.Release;
          rCupodia."Habitacion basica" := Cupo."Habitacion basica";
          rCupodia."Num Linea"         := Cupo."Num Linea";
          rCupodia."Grupo TourOperador":= lwGrupoTTOO;

          IF rHot.GET(rCupodia.Hotel) THEN
            rCupodia.Zona := rHot."Zona Fisica";

          rCupodia.INSERT;

          // JPT 10/12/04
          // Si asi esta parametrizado se crear  para cada cupo x dia compra un cupo x dia venta

          IF rPar."Crear Cupos Venta desde compra" THEN BEGIN
            IF Cupo."Touroperador Venta"='' THEN
              ERROR(Text027, Cupo.FIELDCAPTION("Touroperador Venta"));
            rCupodia.CupoaVenta(Cupo."Touroperador Venta");
          END;
        END;
      END;

      IF NOT cFunSeg.TienePermiso(Text021, FALSE) THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE activar_cupo_venta@8(Cupo@1103355000 : Record 7009730;contrato_venta@1103355001 : Record 7009727) : Boolean;
    VAR
      rCupo@1103355002 : Record 7009730;
      rConV@1103355003 : Record 7009727;
      rCupoDia@1103355004 : Record 7009758;
      lrCupoDia2@1103355005 : Record 7009758;
      rHot@1103355007 : Record 7009724;
      dia@1103355008 : Date;
    BEGIN
      // activar_cupo_venta

      IF (Cupo.Delegacion = '') OR (Cupo."N§ Contrato venta" = '') OR (Cupo."Habitacion cupo" = '') OR
         (Cupo."Fecha desde" = 0D) OR (Cupo."Fecha hasta" = 0D) THEN
        EXIT;

      // Comprobar nuevos datos de cupos

      rCupo.RESET;
      rCupo.SETRANGE (Delegacion         , Cupo.Delegacion);
      rCupo.SETRANGE ("N§ Contrato venta", Cupo."N§ Contrato venta");
      rCupo.SETRANGE ("Habitacion cupo"  , Cupo."Habitacion cupo");
      rCupo.SETFILTER("Fecha desde"      , '<=%1', Cupo."Fecha desde");
      rCupo.SETFILTER("Fecha hasta"      , '>=%1', Cupo."Fecha desde");
      rCupo.SETRANGE (Activo             , TRUE);
      IF rCupo.FIND('-') THEN BEGIN
        IF (rCupo."Fecha desde" <> Cupo."Fecha desde") OR (rCupo."Fecha hasta" <> Cupo."Fecha hasta") THEN BEGIN
          MESSAGE(Text024);
          EXIT(FALSE);
        END;
      END;

      rCupo.RESET;
      rCupo.SETRANGE (Delegacion         , Cupo.Delegacion);
      rCupo.SETRANGE ("N§ Contrato venta", Cupo."N§ Contrato venta");
      rCupo.SETRANGE ("Habitacion cupo"  , Cupo."Habitacion cupo");
      rCupo.SETFILTER("Fecha desde"      , '<=%1', Cupo."Fecha desde");
      rCupo.SETFILTER("Fecha hasta"      , '>=%1', Cupo."Fecha desde");
      rCupo.SETRANGE (Activo             , TRUE);
      IF rCupo.FIND('-') THEN BEGIN
        IF (rCupo."Fecha desde" <> Cupo."Fecha desde") OR (rCupo."Fecha hasta" <> Cupo."Fecha hasta") THEN BEGIN
          MESSAGE(Text025);
          EXIT(FALSE);
        END;
      END;

      rCupo.RESET;
      rCupo.SETRANGE (Delegacion         , Cupo.Delegacion);
      rCupo.SETRANGE ("N§ Contrato venta", Cupo."N§ Contrato venta");
      rCupo.SETRANGE ("Habitacion cupo"  , Cupo."Habitacion cupo");
      rCupo.SETFILTER("Fecha desde"      , '>=%1', Cupo."Fecha desde");
      rCupo.SETFILTER("Fecha hasta"      , '<=%1', Cupo."Fecha hasta");
      rCupo.SETRANGE (Activo             , TRUE);
      IF rCupo.FIND('-') THEN BEGIN
        IF (rCupo."Fecha desde" <> Cupo."Fecha desde") OR (rCupo."Fecha hasta" <> Cupo."Fecha hasta") THEN BEGIN
          MESSAGE(Text026);
          EXIT(FALSE);
        END;
      END;

      // AJS 27.05.2009

      rPar.FINDFIRST;
      IF NOT rPar."No generar booking x dia" THEN BEGIN

        // Insertar nuevos registros en booking

        FOR dia := Cupo."Fecha desde" TO Cupo."Fecha hasta" DO BEGIN
          rCupoDia.INIT;
          rCupoDia.Delegacion := contrato_venta.Delegacion;
          rCupoDia."Contrato venta" := contrato_venta."N§ Contrato venta";
          rCupoDia.Hotel := contrato_venta.Hotel;
          rCupoDia.TourOperador := contrato_venta.TourOperador;
          rCupoDia.Dia := dia;
          rCupoDia.Habitacion := Cupo."Habitacion cupo";
          rCupoDia."Cupo contratado" := Cupo.Cupo;
          rCupoDia.Release := Cupo.Release;
          rCupoDia."Habitacion basica" := Cupo."Habitacion basica";
          IF rHot.GET(rCupoDia.Hotel) THEN
            rCupoDia.Zona := rHot."Zona Fisica";

          lrCupoDia2 := rCupoDia;
          IF lrCupoDia2.FIND THEN
            rCupoDia.MODIFY
          ELSE
            rCupoDia.INSERT;
        END;
      END;

      IF NOT cFunSeg.TienePermiso(Text023, FALSE) THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE activar_precio_compra@10(Precio@1103355000 : Record 7009738) : Boolean;
    VAR
      rPrecio@1103355001 : Record 7009738;
      rConC@1103355002 : Record 7009723;
    BEGIN
      // activar_precio_compra
      //
      IF (Precio.Delegacion = '') OR (Precio."N§ Contrato" = '') OR (Precio.Codigo = '') OR
         (Precio."Fecha desde" = 0D) OR (Precio."Fecha hasta" = 0D) THEN
        EXIT;
      rPrecio.RESET;
      rPrecio.SETRANGE (Delegacion       , Precio.Delegacion);
      rPrecio.SETRANGE ("N§ Contrato"    , Precio."N§ Contrato");
      rPrecio.SETRANGE ("Codigo Precio"  , Precio."Codigo Precio");
      rPrecio.SETRANGE (Codigo           , Precio.Codigo);
      // AJS 17-02-2000
      //
      CASE Precio."Tipo Fechas" OF
        Precio."Tipo Fechas"::"Fecha venta+estancia", Precio."Tipo Fechas"::"Fecha venta+entrada",
        Precio."Tipo Fechas"::"Fecha venta+salida", Precio."Tipo Fechas"::"Fecha venta+estancia":
        BEGIN
          rPrecio.SETFILTER("2¦ Fecha desde"    , '<=%1', Precio."2¦ Fecha desde");
          rPrecio.SETFILTER("2¦ Fecha hasta"    , '>=%1', Precio."2¦ Fecha desde");
        END;
        ELSE
        BEGIN
          rPrecio.SETFILTER("Fecha desde"    , '<=%1', Precio."Fecha desde");
          rPrecio.SETFILTER("Fecha hasta"    , '>=%1', Precio."Fecha desde");
        END;
      END;
      // FIN AJS 17-02-2000
      //
      rPrecio.SETRANGE ("Tipo Habitacion", Precio."Tipo Habitacion");

      IF Precio."Touroperador aplicacion" <> '' THEN
        rPrecio.SETRANGE("Touroperador aplicacion", Precio."Touroperador aplicacion");

      rPrecio.SETRANGE (Activo           , TRUE);
      IF rPrecio.FIND('-') THEN BEGIN
        IF rPrecio."Orden Precio" <> Precio."Orden Precio" THEN BEGIN
          MESSAGE(Text028);
          EXIT(FALSE);
        END;
      END;

      rPrecio.RESET;
      rPrecio.SETRANGE (Delegacion       , Precio.Delegacion);
      rPrecio.SETRANGE ("N§ Contrato"    , Precio."N§ Contrato");
      rPrecio.SETRANGE ("Codigo Precio"  , Precio."Codigo Precio");
      rPrecio.SETRANGE (Codigo           , Precio.Codigo);
      // AJS 17-02-2000
      //
      CASE Precio."Tipo Fechas" OF
        Precio."Tipo Fechas"::"Fecha venta+estancia", Precio."Tipo Fechas"::"Fecha venta+entrada",
        Precio."Tipo Fechas"::"Fecha venta+salida", Precio."Tipo Fechas"::"Fecha venta+estancia":
        BEGIN
          rPrecio.SETFILTER("2¦ Fecha desde"    , '<=%1', Precio."2¦ Fecha desde");
          rPrecio.SETFILTER("2¦ Fecha hasta"    , '>=%1', Precio."2¦ Fecha desde");
        END;
        ELSE
        BEGIN
          rPrecio.SETFILTER("Fecha desde"    , '<=%1', Precio."Fecha desde");
          rPrecio.SETFILTER("Fecha hasta"    , '>=%1', Precio."Fecha desde");
        END;
      END;
      // FIN AJS 17-02-2000
      //
      rPrecio.SETRANGE ("Tipo Habitacion", Precio."Tipo Habitacion");

      IF Precio."Touroperador aplicacion" <> '' THEN
        rPrecio.SETRANGE("Touroperador aplicacion", Precio."Touroperador aplicacion");

      rPrecio.SETRANGE (Activo           , TRUE);
      IF rPrecio.FIND('-') THEN BEGIN
        IF rPrecio."Orden Precio" <> Precio."Orden Precio" THEN BEGIN
          MESSAGE(Text029);
          EXIT(FALSE);
        END;
      END;

      rPrecio.RESET;
      rPrecio.SETRANGE (Delegacion       , Precio.Delegacion);
      rPrecio.SETRANGE ("N§ Contrato"    , Precio."N§ Contrato");
      rPrecio.SETRANGE ("Codigo Precio"  , Precio."Codigo Precio");
      rPrecio.SETRANGE (Codigo           , Precio.Codigo);
      // AJS 17-02-2000
      //
      CASE Precio."Tipo Fechas" OF
        Precio."Tipo Fechas"::"Fecha venta+estancia", Precio."Tipo Fechas"::"Fecha venta+entrada",
        Precio."Tipo Fechas"::"Fecha venta+salida", Precio."Tipo Fechas"::"Fecha venta+estancia":
        BEGIN
          rPrecio.SETFILTER("2¦ Fecha desde"    , '<=%1', Precio."2¦ Fecha desde");
          rPrecio.SETFILTER("2¦ Fecha hasta"    , '>=%1', Precio."2¦ Fecha desde");
        END;
        ELSE
        BEGIN
          rPrecio.SETFILTER("Fecha desde"    , '<=%1', Precio."Fecha desde");
          rPrecio.SETFILTER("Fecha hasta"    , '>=%1', Precio."Fecha desde");
        END;
      END;
      // FIN AJS 17-02-2000
      //
      rPrecio.SETRANGE ("Tipo Habitacion", Precio."Tipo Habitacion");

      IF Precio."Touroperador aplicacion" <> '' THEN
        rPrecio.SETRANGE("Touroperador aplicacion", Precio."Touroperador aplicacion");

      rPrecio.SETRANGE (Activo           , TRUE);
      IF rPrecio.FIND('-') THEN BEGIN
        IF rPrecio."Orden Precio" <> Precio."Orden Precio" THEN BEGIN
          MESSAGE(Text030);
          EXIT(FALSE);
        END;
      END;
      IF NOT cFunSeg.TienePermiso(Text021,FALSE) THEN
        EXIT(FALSE);

      IF rConC.GET(Precio.Delegacion, Precio."N§ Contrato") THEN BEGIN
        IF NOT rConC.Confirmado THEN BEGIN
          MESSAGE(Text031);
          EXIT(FALSE);
        END;
      END;
      EXIT(TRUE);
    END;

    PROCEDURE activar_suplemento_compra@13(Precio@1103355000 : Record 7009738) : Boolean;
    VAR
      rPrecio@1103355001 : Record 7009738;
      rConC@1103355002 : Record 7009723;
    BEGIN
      // activar_suplemento_compra
      //
      IF (Precio.Delegacion = '') OR (Precio."N§ Contrato" = '') OR (Precio.Codigo = '') OR
         (Precio."Fecha desde" = 0D) OR (Precio."Fecha hasta" = 0D) THEN
        EXIT;

      rPrecio.RESET;
      rPrecio.SETRANGE (Delegacion               , Precio.Delegacion);
      rPrecio.SETRANGE ("N§ Contrato"            , Precio."N§ Contrato");
      rPrecio.SETRANGE ("Codigo Precio"          , Precio."Codigo Precio");
      rPrecio.SETRANGE (Codigo                   , Precio.Codigo);
      rPrecio.SETRANGE ("N§ Persona"             , Precio."N§ Persona");
      rPrecio.SETRANGE ("Tipo Habitacion"        , Precio."Tipo Habitacion");
      rPrecio.SETRANGE ("Tipo Regimen"           , Precio."Tipo Regimen");
      rPrecio.SETRANGE ("Tipo Fechas"            , Precio."Tipo Fechas");
      rPrecio.SETRANGE ("N§ Personas acompa¤ante", Precio."N§ Personas acompa¤ante");
      rPrecio.SETRANGE ("Tipo Persona"           , Precio."Tipo Persona");
      rPrecio.SETFILTER("Fecha desde"            , '<=%1', Precio."Fecha desde");
      rPrecio.SETFILTER("Fecha hasta"            , '>=%1', Precio."Fecha desde");
      rPrecio.SETRANGE (Activo                   , TRUE);

      // AJS 03.02.2007
      // Incluir el Hotel oferta especial en el control de duplicacion

      rPrecio.SETRANGE("Hotel oferta especial"   , Precio."Hotel oferta especial");

      rPrecio.SETFILTER("Orden Precio"           , '<>%1', Precio."Orden Precio");

      IF rPrecio.FIND('-') THEN BEGIN
        rPrecio.SETFILTER("Edad desde", '<=%1', Precio."Edad desde");
        rPrecio.SETFILTER("Edad hasta", '>=%1', Precio."Edad desde");
        IF rPrecio.FIND('-') THEN BEGIN
          IF comprobar_dia_semana_compra(Precio, rPrecio) THEN BEGIN
            MESSAGE(Text032);
            EXIT(FALSE);
          END;
        END;
        rPrecio.SETFILTER("Edad desde", '<=%1', Precio."Edad hasta");
        rPrecio.SETFILTER("Edad hasta", '>=%1', Precio."Edad hasta");
        IF rPrecio.FIND('-') THEN BEGIN
          IF comprobar_dia_semana_compra(Precio, rPrecio) THEN BEGIN
            MESSAGE(Text032);
            EXIT(FALSE);
          END;
        END;
        rPrecio.SETFILTER("Edad desde", '>=%1', Precio."Edad desde");
        rPrecio.SETFILTER("Edad hasta", '<=%1', Precio."Edad hasta");
        IF rPrecio.FIND('-') THEN BEGIN
          IF comprobar_dia_semana_compra(Precio, rPrecio) THEN BEGIN
            MESSAGE(Text032);
            EXIT(FALSE);
          END;
        END;
      END;

      rPrecio.RESET;
      rPrecio.SETRANGE (Delegacion       , Precio.Delegacion);
      rPrecio.SETRANGE ("N§ Contrato"    , Precio."N§ Contrato");
      rPrecio.SETRANGE ("Codigo Precio"  , Precio."Codigo Precio");
      rPrecio.SETRANGE (Codigo           , Precio.Codigo);
      rPrecio.SETRANGE ("N§ Persona"     , Precio."N§ Persona");
      rPrecio.SETRANGE ("Tipo Habitacion", Precio."Tipo Habitacion");
      rPrecio.SETRANGE ("Tipo Regimen"   , Precio."Tipo Regimen");
      rPrecio.SETRANGE ("Tipo Fechas"    , Precio."Tipo Fechas");
      rPrecio.SETRANGE ("N§ Personas acompa¤ante", Precio."N§ Personas acompa¤ante");
      rPrecio.SETRANGE ("Tipo Persona"    , Precio."Tipo Persona");
      rPrecio.SETFILTER("Fecha desde"    , '<=%1', Precio."Fecha desde");
      rPrecio.SETFILTER("Fecha hasta"    , '>=%1', Precio."Fecha desde");
      rPrecio.SETRANGE (Activo           , TRUE);
      rPrecio.SETFILTER("Orden Precio"   , '<>%1', Precio."Orden Precio");
      IF rPrecio.FIND('-') THEN BEGIN
        rPrecio.SETFILTER("Edad desde", '<=%1', Precio."Edad desde");
        rPrecio.SETFILTER("Edad hasta", '>=%1', Precio."Edad desde");
        IF rPrecio.FIND('-') THEN BEGIN
          IF comprobar_dia_semana_compra(Precio, rPrecio) THEN BEGIN
            MESSAGE(Text032);
            EXIT(FALSE);
          END;
        END;
        rPrecio.SETFILTER("Edad desde", '<=%1', Precio."Edad hasta");
        rPrecio.SETFILTER("Edad hasta", '>=%1', Precio."Edad hasta");
        IF rPrecio.FIND('-') THEN BEGIN
          IF comprobar_dia_semana_compra(Precio, rPrecio) THEN BEGIN
            MESSAGE(Text032);
            EXIT(FALSE);
          END;
        END;
        rPrecio.SETFILTER("Edad desde", '>=%1', Precio."Edad desde");
        rPrecio.SETFILTER("Edad hasta", '<=%1', Precio."Edad hasta");
        IF rPrecio.FIND('-') THEN BEGIN
          IF comprobar_dia_semana_compra(Precio, rPrecio) THEN BEGIN
            MESSAGE(Text032);
            EXIT(FALSE);
          END;
        END;
      END;

      rPrecio.RESET;
      rPrecio.SETRANGE (Delegacion     , Precio.Delegacion);
      rPrecio.SETRANGE ("N§ Contrato"  , Precio."N§ Contrato");
      rPrecio.SETRANGE ("Codigo Precio", Precio."Codigo Precio");
      rPrecio.SETRANGE (Codigo         , Precio.Codigo);
      rPrecio.SETRANGE ("N§ Persona"   , Precio."N§ Persona");
      rPrecio.SETRANGE ("Tipo Habitacion", Precio."Tipo Habitacion");
      rPrecio.SETRANGE ("Tipo Regimen"   , Precio."Tipo Regimen");
      rPrecio.SETRANGE ("Tipo Fechas"    , Precio."Tipo Fechas");
      rPrecio.SETRANGE ("N§ Personas acompa¤ante", Precio."N§ Personas acompa¤ante");
      rPrecio.SETRANGE ("Tipo Persona"    , Precio."Tipo Persona");
      rPrecio.SETFILTER("Fecha desde"  , '>=%1', Precio."Fecha desde");
      rPrecio.SETFILTER("Fecha hasta"  , '<=%1', Precio."Fecha hasta");
      rPrecio.SETRANGE (Activo         , TRUE);
      rPrecio.SETFILTER("Orden Precio" , '<>%1', Precio."Orden Precio");
      IF rPrecio.FIND('-') THEN BEGIN
        rPrecio.SETFILTER("Edad desde", '<=%1', Precio."Edad desde");
        rPrecio.SETFILTER("Edad hasta", '>=%1', Precio."Edad desde");
        IF rPrecio.FIND('-') THEN BEGIN
          IF comprobar_dia_semana_compra(Precio, rPrecio) THEN BEGIN
            MESSAGE(Text032);
            EXIT(FALSE);
          END;
        END;
        rPrecio.SETFILTER("Edad desde", '<=%1', Precio."Edad hasta");
        rPrecio.SETFILTER("Edad hasta", '>=%1', Precio."Edad hasta");
        IF rPrecio.FIND('-') THEN BEGIN
          IF comprobar_dia_semana_compra(Precio, rPrecio) THEN BEGIN
            MESSAGE(Text032);
            EXIT(FALSE);
          END;
        END;
        rPrecio.SETFILTER("Edad desde", '>=%1', Precio."Edad desde");
        rPrecio.SETFILTER("Edad hasta", '<=%1', Precio."Edad hasta");
        IF rPrecio.FIND('-') THEN BEGIN
          IF comprobar_dia_semana_compra(Precio, rPrecio) THEN BEGIN
            MESSAGE(Text032);
            EXIT(FALSE);
          END;
        END;
      END;

      IF NOT cFunSeg.TienePermiso(Text021, FALSE) THEN
        EXIT(FALSE);

      IF rConC.GET(Precio.Delegacion, Precio."N§ Contrato") THEN BEGIN
        IF NOT rConC.Confirmado THEN BEGIN
          MESSAGE(Text031);
          EXIT(FALSE);
        END;
      END;

      EXIT(TRUE);
    END;

    PROCEDURE activar_oferta_precio_compra@14(Precio@1103355000 : Record 7009738) : Boolean;
    VAR
      rPrecio@1103355001 : Record 7009738;
      rConC@1103355002 : Record 7009723;
    BEGIN
      // activar_oferta_precio_compra
      //
      IF (Precio.Delegacion = '') OR (Precio."N§ Contrato" = '') OR (Precio.Codigo = '') OR
         (Precio."Fecha desde" = 0D) OR (Precio."Fecha hasta" = 0D) THEN
        EXIT;

      // AJS 21.02.2007
      // Si se rellena el campo inicial de estancias "A partir de" tambien hay que rellenar el campo Hasta

      IF Precio."A partir de estancias" <> 0 THEN
        IF Precio."Hasta numero estancias" = 0 THEN
          ERROR(Text108, Precio.FIELDCAPTION("A partir de estancias"), Precio.FIELDCAPTION("Hasta numero estancias"));

      rPrecio.RESET;
      rPrecio.SETRANGE (Delegacion       , Precio.Delegacion);
      rPrecio.SETRANGE ("N§ Contrato"    , Precio."N§ Contrato");
      rPrecio.SETRANGE ("Codigo Precio"  , Precio."Codigo Precio");
      rPrecio.SETRANGE (Codigo           , Precio.Codigo);
      rPrecio.SETRANGE ("N§ Persona"     , Precio."N§ Persona");

      // ----  AJS 19.12.2001  ----
      // ----  Incluir el filtro por tipo de persona en la comprobacion de solapamiento  ----

      rPrecio.SETRANGE("Tipo Persona"    , Precio."Tipo Persona");

      // AJS 27.01.2005
      // Control por n§ de estancias

      rPrecio.SETRANGE("N§ estancias"    , Precio."N§ estancias");

      // AJS 03.10.2006
      // Control sobre el campo A partir de

      rPrecio.SETRANGE("A partir de estancias", Precio."A partir de estancias");

      // AJS 10.05.2005
      // Control por Touroperador aplicacion

      rPrecio.SETRANGE("Touroperador aplicacion", Precio."Touroperador aplicacion");

      rPrecio.SETRANGE ("Tipo Habitacion", Precio."Tipo Habitacion");
      rPrecio.SETRANGE ("Tipo Regimen"   , Precio."Tipo Regimen");
      rPrecio.SETRANGE ("Tipo Fechas"    , Precio."Tipo Fechas");
      rPrecio.SETFILTER("Fecha desde"    , '<=%1', Precio."Fecha desde");
      rPrecio.SETFILTER("Fecha hasta"    , '>=%1', Precio."Fecha desde");
      rPrecio.SETRANGE (Activo           , TRUE);
      rPrecio.SETFILTER("Orden Precio"   , '<>%1', Precio."Orden Precio");

      // AJS 26.06.2009
      // Control por Hotel oferta especial

      rPrecio.SETRANGE("Hotel oferta especial", Precio."Hotel oferta especial");

      IF rPrecio.FIND('-') THEN BEGIN
        CASE Precio."Tipo Fechas" OF
          Precio."Tipo Fechas"::"Fecha venta+estancia", Precio."Tipo Fechas"::"Fecha venta+entrada",
          Precio."Tipo Fechas"::"Fecha venta+salida", Precio."Tipo Fechas"::"Fecha venta+estancia",
          Precio."Tipo Fechas"::"Fecha entrada+salida":
          BEGIN
            comprobar_oferta_precio_compra(Precio, rPrecio);
          END
          ELSE
            comprobar_oferta_compra_edades(Precio, rPrecio);
        END;
      END;

      rPrecio.RESET;
      rPrecio.SETRANGE (Delegacion     , Precio.Delegacion);
      rPrecio.SETRANGE ("N§ Contrato"  , Precio."N§ Contrato");
      rPrecio.SETRANGE ("Codigo Precio", Precio."Codigo Precio");
      rPrecio.SETRANGE (Codigo         , Precio.Codigo);
      rPrecio.SETRANGE ("N§ Persona"   , Precio."N§ Persona");

      // ----  AJS 19.12.2001  ----
      // ----  Incluir el filtro por tipo de persona en la comprobacion de solapamiento  ----

      rPrecio.SETRANGE("Tipo Persona"    , Precio."Tipo Persona");

      // ---- FIN AJS 19.12.2001  ----

      rPrecio.SETRANGE ("Tipo Habitacion", Precio."Tipo Habitacion");
      rPrecio.SETRANGE ("Tipo Regimen"   , Precio."Tipo Regimen");
      rPrecio.SETRANGE ("Tipo Fechas"    , Precio."Tipo Fechas");

      // AJS 27.01.2005
      // Control por n§ de estancias

      rPrecio.SETRANGE("N§ estancias"    , Precio."N§ estancias");

      // AJS 03.10.2006
      // Control sobre el campo A partir de

      rPrecio.SETRANGE("A partir de estancias", Precio."A partir de estancias");

      // AJS 10.05.2005
      // Control por Touroperador aplicacion

      rPrecio.SETRANGE("Touroperador aplicacion", Precio."Touroperador aplicacion");

      rPrecio.SETFILTER("Fecha desde" , '<=%1', Precio."Fecha hasta");
      rPrecio.SETFILTER("Fecha hasta" , '>=%1', Precio."Fecha hasta");
      rPrecio.SETRANGE (Activo        , TRUE);
      rPrecio.SETFILTER("Orden Precio", '<>%1', Precio."Orden Precio");

      // AJS 26.06.2009
      // Control por Hotel oferta especial

      rPrecio.SETRANGE("Hotel oferta especial", Precio."Hotel oferta especial");
      IF rPrecio.FIND('-') THEN BEGIN
        CASE Precio."Tipo Fechas" OF
          Precio."Tipo Fechas"::"Fecha venta+estancia", Precio."Tipo Fechas"::"Fecha venta+entrada",
          Precio."Tipo Fechas"::"Fecha venta+salida", Precio."Tipo Fechas"::"Fecha venta+estancia",
          Precio."Tipo Fechas"::"Fecha entrada+salida":
          BEGIN
            comprobar_oferta_precio_compra(Precio, rPrecio);
          END
          ELSE
            comprobar_oferta_compra_edades(Precio, rPrecio);
        END;
      END;

      rPrecio.RESET;
      rPrecio.SETRANGE (Delegacion     , Precio.Delegacion);
      rPrecio.SETRANGE ("N§ Contrato"  , Precio."N§ Contrato");
      rPrecio.SETRANGE ("Codigo Precio", Precio."Codigo Precio");
      rPrecio.SETRANGE (Codigo         , Precio.Codigo);
      rPrecio.SETRANGE ("N§ Persona"   , Precio."N§ Persona");
      rPrecio.SETRANGE("Tipo Persona"    , Precio."Tipo Persona");
      rPrecio.SETRANGE ("Tipo Habitacion", Precio."Tipo Habitacion");
      rPrecio.SETRANGE ("Tipo Regimen"   , Precio."Tipo Regimen");
      rPrecio.SETRANGE ("Tipo Fechas"    , Precio."Tipo Fechas");

      // AJS 27.01.2005
      // Control por n§ de estancias

      rPrecio.SETRANGE("N§ estancias"    , Precio."N§ estancias");

      // AJS 03.10.2006
      // Control sobre el campo A partir de

      rPrecio.SETRANGE("A partir de estancias", Precio."A partir de estancias");

      // AJS 10.05.2005
      // Control por Touroperador aplicacion

      rPrecio.SETRANGE("Touroperador aplicacion", Precio."Touroperador aplicacion");

      rPrecio.SETFILTER("Fecha desde" , '>=%1', Precio."Fecha desde");
      rPrecio.SETFILTER("Fecha hasta" , '<=%1', Precio."Fecha hasta");
      rPrecio.SETRANGE (Activo        , TRUE);
      rPrecio.SETFILTER("Orden Precio", '<>%1', Precio."Orden Precio");

      // AJS 26.06.2009
      // Control por Hotel oferta especial

      rPrecio.SETRANGE("Hotel oferta especial", Precio."Hotel oferta especial");
      IF rPrecio.FIND('-') THEN BEGIN
        CASE Precio."Tipo Fechas" OF
          Precio."Tipo Fechas"::"Fecha venta+estancia", Precio."Tipo Fechas"::"Fecha venta+entrada",
          Precio."Tipo Fechas"::"Fecha venta+salida", Precio."Tipo Fechas"::"Fecha venta+estancia",
          Precio."Tipo Fechas"::"Fecha entrada+salida":
          BEGIN
            comprobar_oferta_precio_compra(Precio, rPrecio);
          END
          ELSE
            comprobar_oferta_compra_edades(Precio, rPrecio);
        END;
      END;

      IF NOT cFunSeg.TienePermiso(Text021, FALSE) THEN
        EXIT(FALSE);

      IF rConC.GET(Precio.Delegacion, Precio."N§ Contrato") THEN BEGIN
        IF NOT rConC.Confirmado THEN
          ERROR(Text031);
      END;

      EXIT(TRUE);
    END;

    PROCEDURE activar_precio_venta@11(Precio@1103355000 : Record 7009732) : Boolean;
    VAR
      rPrecio@1103355001 : Record 7009732;
      rConV@1103355002 : Record 7009727;
    BEGIN
      // activar_precio_venta
      //
      IF (Precio.Delegacion = '') OR (Precio."N§ Contrato" = '') OR (Precio.Codigo = '') OR
         (Precio."Fecha desde" = 0D) OR (Precio."Fecha hasta" = 0D) THEN
        EXIT;

      rPrecio.RESET;
      rPrecio.SETRANGE (Delegacion       , Precio.Delegacion);
      rPrecio.SETRANGE ("N§ Contrato"    , Precio."N§ Contrato");
      rPrecio.SETRANGE ("Codigo Precio"  , Precio."Codigo Precio");
      rPrecio.SETRANGE (Codigo           , Precio.Codigo);
      CASE Precio."Tipo Fechas" OF
        Precio."Tipo Fechas"::"Fecha venta+estancia", Precio."Tipo Fechas"::"Fecha venta+entrada",
        Precio."Tipo Fechas"::"Fecha venta+salida", Precio."Tipo Fechas"::"Fecha venta+estancia":
        BEGIN
          rPrecio.SETFILTER("2¦ Fecha desde"    , '<=%1', Precio."2¦ Fecha desde");
          rPrecio.SETFILTER("2¦ Fecha hasta"    , '>=%1', Precio."2¦ Fecha desde");
        END;
        ELSE
        BEGIN
          rPrecio.SETFILTER("Fecha desde"    , '<=%1', Precio."Fecha desde");
          rPrecio.SETFILTER("Fecha hasta"    , '>=%1', Precio."Fecha desde");
        END;
      END;

      rPrecio.SETRANGE ("Tipo Habitacion", Precio."Tipo Habitacion");
      rPrecio.SETRANGE (Activo           , TRUE);
      IF rPrecio.FIND('-') THEN BEGIN
        IF rPrecio."Orden Precio" <> Precio."Orden Precio" THEN
          ERROR(Text028);
      END;

      rPrecio.RESET;
      rPrecio.SETRANGE (Delegacion       , Precio.Delegacion);
      rPrecio.SETRANGE ("N§ Contrato"    , Precio."N§ Contrato");
      rPrecio.SETRANGE ("Codigo Precio"  , Precio."Codigo Precio");
      rPrecio.SETRANGE (Codigo           , Precio.Codigo);
      CASE Precio."Tipo Fechas" OF
        Precio."Tipo Fechas"::"Fecha venta+estancia", Precio."Tipo Fechas"::"Fecha venta+entrada",
        Precio."Tipo Fechas"::"Fecha venta+salida", Precio."Tipo Fechas"::"Fecha venta+estancia":
        BEGIN
          rPrecio.SETFILTER("2¦ Fecha desde"    , '<=%1', Precio."2¦ Fecha desde");
          rPrecio.SETFILTER("2¦ Fecha hasta"    , '>=%1', Precio."2¦ Fecha desde");
        END;
        ELSE
        BEGIN
          rPrecio.SETFILTER("Fecha desde"    , '<=%1', Precio."Fecha desde");
          rPrecio.SETFILTER("Fecha hasta"    , '>=%1', Precio."Fecha desde");
        END;
      END;

      rPrecio.SETRANGE ("Tipo Habitacion", Precio."Tipo Habitacion");
      rPrecio.SETRANGE (Activo           , TRUE);
      IF rPrecio.FIND('-') THEN BEGIN
        IF rPrecio."Orden Precio" <> Precio."Orden Precio" THEN
          ERROR(Text029);
      END;

      rPrecio.RESET;
      rPrecio.SETRANGE (Delegacion       , Precio.Delegacion);
      rPrecio.SETRANGE ("N§ Contrato"    , Precio."N§ Contrato");
      rPrecio.SETRANGE ("Codigo Precio"  , Precio."Codigo Precio");
      rPrecio.SETRANGE (Codigo           , Precio.Codigo);
      CASE Precio."Tipo Fechas" OF
        Precio."Tipo Fechas"::"Fecha venta+estancia", Precio."Tipo Fechas"::"Fecha venta+entrada",
        Precio."Tipo Fechas"::"Fecha venta+salida", Precio."Tipo Fechas"::"Fecha venta+estancia":
        BEGIN
          rPrecio.SETFILTER("2¦ Fecha desde"    , '<=%1', Precio."2¦ Fecha desde");
          rPrecio.SETFILTER("2¦ Fecha hasta"    , '>=%1', Precio."2¦ Fecha desde");
        END;
        ELSE
        BEGIN
          rPrecio.SETFILTER("Fecha desde"    , '<=%1', Precio."Fecha desde");
          rPrecio.SETFILTER("Fecha hasta"    , '>=%1', Precio."Fecha desde");
        END;
      END;

      rPrecio.SETRANGE ("Tipo Habitacion", Precio."Tipo Habitacion");
      rPrecio.SETRANGE (Activo           , TRUE);
      IF rPrecio.FIND('-') THEN BEGIN
        IF rPrecio."Orden Precio" <> Precio."Orden Precio" THEN
          ERROR(Text030);
      END;

      IF NOT cFunSeg.TienePermiso(Text023, FALSE) THEN
        EXIT(FALSE);

      IF rConV.GET(Precio.Delegacion, Precio."N§ Contrato") THEN BEGIN
        IF NOT rConV.Confirmado THEN
          ERROR(Text031);
      END;

      EXIT(TRUE);
    END;

    PROCEDURE activar_suplemento_venta@9(Precio@1103355000 : Record 7009732) : Boolean;
    VAR
      rPrecio@1103355001 : Record 7009732;
      rConV@1103355002 : Record 7009727;
    BEGIN
      // activar_suplemento_venta

      IF (Precio.Delegacion = '') OR (Precio."N§ Contrato" = '') OR (Precio.Codigo = '') OR
         (Precio."Fecha desde" = 0D) OR (Precio."Fecha hasta" = 0D) THEN
        EXIT;

      rPrecio.RESET;
      rPrecio.SETRANGE (Delegacion       , Precio.Delegacion);
      rPrecio.SETRANGE ("N§ Contrato"    , Precio."N§ Contrato");
      rPrecio.SETRANGE ("Codigo Precio"  , Precio."Codigo Precio");
      rPrecio.SETRANGE (Codigo           , Precio.Codigo);
      rPrecio.SETRANGE ("N§ Persona"     , Precio."N§ Persona");
      rPrecio.SETRANGE ("Tipo Habitacion", Precio."Tipo Habitacion");
      rPrecio.SETRANGE ("Tipo Regimen"   , Precio."Tipo Regimen");
      rPrecio.SETRANGE ("Tipo Fechas"    , Precio."Tipo Fechas");
      rPrecio.SETRANGE ("N§ Personas acompa¤ante", Precio."N§ Personas acompa¤ante");
      rPrecio.SETRANGE ("Tipo Persona"    , Precio."Tipo Persona");
      rPrecio.SETFILTER("Fecha desde"    , '<=%1', Precio."Fecha desde");
      rPrecio.SETFILTER("Fecha hasta"    , '>=%1', Precio."Fecha desde");
      rPrecio.SETRANGE (Activo           , TRUE);
      IF rPrecio.FIND('-') THEN BEGIN
        rPrecio.SETFILTER("Edad desde", '<=%1', Precio."Edad desde");
        rPrecio.SETFILTER("Edad hasta", '>=%1', Precio."Edad desde");
        IF rPrecio.FIND('-') THEN BEGIN
          IF rPrecio."Orden Precio" <> Precio."Orden Precio" THEN
            ERROR(Text032);
        END;
        rPrecio.SETFILTER("Edad desde", '<=%1', Precio."Edad hasta");
        rPrecio.SETFILTER("Edad hasta", '>=%1', Precio."Edad hasta");
        IF rPrecio.FIND('-') THEN BEGIN
          IF rPrecio."Orden Precio" <> Precio."Orden Precio" THEN
            ERROR(Text032);
        END;
        rPrecio.SETFILTER("Edad desde", '>=%1', Precio."Edad desde");
        rPrecio.SETFILTER("Edad hasta", '<=%1', Precio."Edad hasta");
        IF rPrecio.FIND('-') THEN BEGIN
          IF rPrecio."Orden Precio" <> Precio."Orden Precio" THEN
            ERROR(Text032);
        END;
      END;

      rPrecio.RESET;
      rPrecio.SETRANGE (Delegacion     , Precio.Delegacion);
      rPrecio.SETRANGE ("N§ Contrato"  , Precio."N§ Contrato");
      rPrecio.SETRANGE ("Codigo Precio", Precio."Codigo Precio");
      rPrecio.SETRANGE (Codigo         , Precio.Codigo);
      rPrecio.SETRANGE ("N§ Persona"   , Precio."N§ Persona");
      rPrecio.SETRANGE ("Tipo Habitacion", Precio."Tipo Habitacion");
      rPrecio.SETRANGE ("Tipo Regimen"   , Precio."Tipo Regimen");
      rPrecio.SETRANGE ("Tipo Fechas"    , Precio."Tipo Fechas");
      rPrecio.SETRANGE ("N§ Personas acompa¤ante", Precio."N§ Personas acompa¤ante");
      rPrecio.SETRANGE ("Tipo Persona"    , Precio."Tipo Persona");
      rPrecio.SETFILTER("Fecha desde"  , '<=%1', Precio."Fecha desde");
      rPrecio.SETFILTER("Fecha hasta"  , '>=%1', Precio."Fecha desde");
      rPrecio.SETRANGE (Activo         , TRUE);
      IF rPrecio.FIND('-') THEN BEGIN
        rPrecio.SETFILTER("Edad desde", '<=%1', Precio."Edad desde");
        rPrecio.SETFILTER("Edad hasta", '>=%1', Precio."Edad desde");
        IF rPrecio.FIND('-') THEN BEGIN
          IF rPrecio."Orden Precio" <> Precio."Orden Precio" THEN
            ERROR(Text032);
        END;
        rPrecio.SETFILTER("Edad desde", '<=%1', Precio."Edad hasta");
        rPrecio.SETFILTER("Edad hasta", '>=%1', Precio."Edad hasta");
        IF rPrecio.FIND('-') THEN BEGIN
          IF rPrecio."Orden Precio" <> Precio."Orden Precio" THEN
            ERROR(Text032);
        END;
        rPrecio.SETFILTER("Edad desde", '>=%1', Precio."Edad desde");
        rPrecio.SETFILTER("Edad hasta", '<=%1', Precio."Edad hasta");
        IF rPrecio.FIND('-') THEN BEGIN
          IF rPrecio."Orden Precio" <> Precio."Orden Precio" THEN
            ERROR(Text032);
        END;
      END;

      rPrecio.RESET;
      rPrecio.SETRANGE (Delegacion     , Precio.Delegacion);
      rPrecio.SETRANGE ("N§ Contrato"  , Precio."N§ Contrato");
      rPrecio.SETRANGE ("Codigo Precio", Precio."Codigo Precio");
      rPrecio.SETRANGE (Codigo         , Precio.Codigo);
      rPrecio.SETRANGE ("N§ Persona"   , Precio."N§ Persona");
      rPrecio.SETRANGE ("Tipo Habitacion", Precio."Tipo Habitacion");
      rPrecio.SETRANGE ("Tipo Regimen"   , Precio."Tipo Regimen");
      rPrecio.SETRANGE ("Tipo Fechas"    , Precio."Tipo Fechas");
      rPrecio.SETRANGE ("N§ Personas acompa¤ante", Precio."N§ Personas acompa¤ante");
      rPrecio.SETRANGE ("Tipo Persona"    , Precio."Tipo Persona");
      rPrecio.SETFILTER("Fecha desde"  , '>=%1', Precio."Fecha desde");
      rPrecio.SETFILTER("Fecha hasta"  , '<=%1', Precio."Fecha hasta");
      rPrecio.SETRANGE (Activo         , TRUE);
      IF rPrecio.FIND('-') THEN BEGIN
        rPrecio.SETFILTER("Edad desde", '<=%1', Precio."Edad desde");
        rPrecio.SETFILTER("Edad hasta", '>=%1', Precio."Edad desde");
        IF rPrecio.FIND('-') THEN BEGIN
          IF rPrecio."Orden Precio" <> Precio."Orden Precio" THEN
            ERROR(Text032);
        END;
        rPrecio.SETFILTER("Edad desde", '<=%1', Precio."Edad hasta");
        rPrecio.SETFILTER("Edad hasta", '>=%1', Precio."Edad hasta");
        IF rPrecio.FIND('-') THEN BEGIN
          IF rPrecio."Orden Precio" <> Precio."Orden Precio" THEN
            ERROR(Text032);
        END;
        rPrecio.SETFILTER("Edad desde", '>=%1', Precio."Edad desde");
        rPrecio.SETFILTER("Edad hasta", '<=%1', Precio."Edad hasta");
        IF rPrecio.FIND('-') THEN BEGIN
          IF rPrecio."Orden Precio" <> Precio."Orden Precio" THEN
            ERROR(Text032);
        END;
      END;

      IF NOT cFunSeg.TienePermiso(Text023, FALSE) THEN
        EXIT(FALSE);

      IF rConV.GET(Precio.Delegacion, Precio."N§ Contrato") THEN BEGIN
        IF NOT rConV.Confirmado THEN
          ERROR(Text031);
      END;
      EXIT(TRUE);
    END;

    PROCEDURE activar_oferta_precio_venta@12(Precio@1103355000 : Record 7009732) : Boolean;
    VAR
      rPrecio@1103355001 : Record 7009732;
      rConv@1103355002 : Record 7009727;
    BEGIN
      // activar_oferta_precio_venta

      IF (Precio.Delegacion = '') OR (Precio."N§ Contrato" = '') OR (Precio.Codigo = '') OR
         (Precio."Fecha desde" = 0D) OR (Precio."Fecha hasta" = 0D) THEN
        EXIT;

      rPrecio.RESET;
      rPrecio.SETRANGE (Delegacion       , Precio.Delegacion);
      rPrecio.SETRANGE ("N§ Contrato"    , Precio."N§ Contrato");
      rPrecio.SETRANGE ("Codigo Precio"  , Precio."Codigo Precio");
      rPrecio.SETRANGE (Codigo           , Precio.Codigo);
      rPrecio.SETRANGE ("N§ Persona"     , Precio."N§ Persona");
      rPrecio.SETRANGE("Tipo Persona"    , Precio."Tipo Persona");

      // AJS 27.01.2005
      // Control por n§ de estancias

      rPrecio.SETRANGE("N§ estancias"    , Precio."N§ estancias");

      rPrecio.SETRANGE ("Tipo Habitacion", Precio."Tipo Habitacion");
      rPrecio.SETRANGE ("Tipo Regimen"   , Precio."Tipo Regimen");
      rPrecio.SETRANGE ("Tipo Fechas"    , Precio."Tipo Fechas");
      rPrecio.SETFILTER("Fecha desde" , '<=%1', Precio."Fecha desde");
      rPrecio.SETFILTER("Fecha hasta" , '>=%1', Precio."Fecha desde");
      rPrecio.SETRANGE (Activo        , TRUE);
      rPrecio.SETFILTER("Orden Precio", '<>%1', Precio."Orden Precio");
      IF rPrecio.FIND('-') THEN BEGIN
        CASE Precio."Tipo Fechas" OF
          Precio."Tipo Fechas"::"Fecha venta+estancia", Precio."Tipo Fechas"::"Fecha venta+entrada",
          Precio."Tipo Fechas"::"Fecha venta+salida", Precio."Tipo Fechas"::"Fecha venta+estancia",
          Precio."Tipo Fechas"::"Fecha entrada+salida":
          BEGIN
            comprobar_oferta_precio_venta(Precio, rPrecio);
          END
          ELSE
            ERROR(Text033);
        END;
      END;

      rPrecio.RESET;
      rPrecio.SETRANGE (Delegacion     , Precio.Delegacion);
      rPrecio.SETRANGE ("N§ Contrato"  , Precio."N§ Contrato");
      rPrecio.SETRANGE ("Codigo Precio", Precio."Codigo Precio");
      rPrecio.SETRANGE (Codigo         , Precio.Codigo);
      rPrecio.SETRANGE ("N§ Persona"   , Precio."N§ Persona");
      rPrecio.SETRANGE("Tipo Persona"    , Precio."Tipo Persona");
      rPrecio.SETRANGE ("Tipo Habitacion", Precio."Tipo Habitacion");
      rPrecio.SETRANGE ("Tipo Regimen"   , Precio."Tipo Regimen");
      rPrecio.SETRANGE ("Tipo Fechas"    , Precio."Tipo Fechas");

      // AJS 27.01.2005
      // Control por n§ de estancias

      rPrecio.SETRANGE("N§ estancias"    , Precio."N§ estancias");
      rPrecio.SETFILTER("Fecha desde" , '<=%1', Precio."Fecha hasta");
      rPrecio.SETFILTER("Fecha hasta" , '>=%1', Precio."Fecha hasta");
      rPrecio.SETRANGE (Activo        , TRUE);
      rPrecio.SETFILTER("Orden Precio", '<>%1', Precio."Orden Precio");
      IF rPrecio.FIND('-') THEN BEGIN
        CASE Precio."Tipo Fechas" OF
          Precio."Tipo Fechas"::"Fecha venta+estancia", Precio."Tipo Fechas"::"Fecha venta+entrada",
          Precio."Tipo Fechas"::"Fecha venta+salida", Precio."Tipo Fechas"::"Fecha venta+estancia",
          Precio."Tipo Fechas"::"Fecha entrada+salida":
          BEGIN
            comprobar_oferta_precio_venta(Precio, rPrecio);
          END
          ELSE
            ERROR(Text034);
        END;
      END;

      rPrecio.RESET;
      rPrecio.SETRANGE (Delegacion     , Precio.Delegacion);
      rPrecio.SETRANGE ("N§ Contrato"  , Precio."N§ Contrato");
      rPrecio.SETRANGE ("Codigo Precio", Precio."Codigo Precio");
      rPrecio.SETRANGE (Codigo         , Precio.Codigo);
      rPrecio.SETRANGE ("N§ Persona"   , Precio."N§ Persona");
      rPrecio.SETRANGE("Tipo Persona"    , Precio."Tipo Persona");
      rPrecio.SETRANGE ("Tipo Habitacion", Precio."Tipo Habitacion");
      rPrecio.SETRANGE ("Tipo Regimen"   , Precio."Tipo Regimen");
      rPrecio.SETRANGE ("Tipo Fechas"    , Precio."Tipo Fechas");

      // AJS 27.01.2005
      // Control por n§ de estancias

      rPrecio.SETRANGE("N§ estancias"    , Precio."N§ estancias");

      rPrecio.SETFILTER("Fecha desde" , '>=%1', Precio."Fecha desde");
      rPrecio.SETFILTER("Fecha hasta" , '<=%1', Precio."Fecha hasta");
      rPrecio.SETRANGE (Activo        , TRUE);
      rPrecio.SETFILTER("Orden Precio", '<>%1', Precio."Orden Precio");
      IF rPrecio.FIND('-') THEN BEGIN
        CASE Precio."Tipo Fechas" OF
          Precio."Tipo Fechas"::"Fecha venta+estancia", Precio."Tipo Fechas"::"Fecha venta+entrada",
          Precio."Tipo Fechas"::"Fecha venta+salida", Precio."Tipo Fechas"::"Fecha venta+estancia",
          Precio."Tipo Fechas"::"Fecha entrada+salida":
          BEGIN
            comprobar_oferta_precio_venta(Precio, rPrecio);
          END
          ELSE
            ERROR(Text035);
        END;
      END;

      IF NOT cFunSeg.TienePermiso(Text021, FALSE) THEN
        EXIT(FALSE);

      IF rConv.GET(Precio.Delegacion, Precio."N§ Contrato") THEN BEGIN
        IF NOT rConv.Confirmado THEN
          ERROR(Text031);
      END;

      EXIT(TRUE);
    END;

    PROCEDURE activar_handling_fee@15(prHandling@1103355000 : Record 7009733) : Boolean;
    VAR
      rConC@1103355001 : Record 7009723;
      rConV@1103355002 : Record 7009727;
      rHandling@1103355003 : Record 7009733;
    BEGIN
      // activar_handling_fee

      IF (prHandling.Delegacion = '') OR (prHandling."N§ Contrato" = '') OR (prHandling."Codigo Handling Fee" = '') OR
         (prHandling."Fecha Desde" = 0D) OR (prHandling."Fecha Hasta" = 0D) THEN
        EXIT;

      rHandling.RESET;
      rHandling.SETRANGE (Delegacion           , prHandling.Delegacion);
      rHandling.SETRANGE ("N§ Contrato"        , prHandling."N§ Contrato");
      rHandling.SETRANGE ("Tipo contrato"      , prHandling."Tipo contrato");
      rHandling.SETRANGE ("Codigo Handling Fee", prHandling."Codigo Handling Fee");
      rHandling.SETRANGE ("Hotel TO"           , prHandling."Hotel TO");
      rHandling.SETRANGE ("Tipo Habitacion"    , prHandling."Tipo Habitacion");
      rHandling.SETRANGE ("Tipo Regimen"       , prHandling."Tipo Regimen");
      rHandling.SETFILTER("Fecha Desde"        , '<=%1', prHandling."Fecha Hasta");
      rHandling.SETFILTER("Fecha Hasta"        , '>=%1', prHandling."Fecha Desde");
      rHandling.SETFILTER("Num Orden"          , '<>%1', prHandling."Num Orden");
      rHandling.SETRANGE ("Sin transfer"       , prHandling."Sin transfer"); //+$005
      rHandling.SETRANGE (Activo               , TRUE);
      IF rHandling.FINDFIRST THEN
        ERROR(Text036);

      IF NOT cFunSeg.TienePermiso(Text023, FALSE) THEN
        EXIT(FALSE);

      IF prHandling."Tipo contrato" = prHandling."Tipo contrato"::Compra THEN BEGIN
        IF rConC.GET(prHandling.Delegacion, prHandling."N§ Contrato") THEN BEGIN
          IF NOT rConC.Confirmado THEN
            ERROR(Text031);
        END;
      END
      ELSE BEGIN
        IF rConV.GET(prHandling.Delegacion, prHandling."N§ Contrato") THEN BEGIN
          IF NOT rConV.Confirmado THEN
            ERROR(Text031);
        END;
      END;

      EXIT(TRUE);
    END;

    PROCEDURE activar_garantia@27(Garantia@1103355000 : Record 7009729) : Boolean;
    VAR
      rGarantia@1103355001 : Record 7009729;
      rConC@1103355002 : Record 7009723;
    BEGIN
      // activar_garantia

      IF (Garantia."Fecha venta desde" = 0D) OR (Garantia."Fecha venta hasta" = 0D) THEN
        EXIT;

      rGarantia.RESET;
      rGarantia.SETRANGE (Delegacion           , Garantia.Delegacion);
      rGarantia.SETRANGE ("N§ Contrato"        , Garantia."N§ Contrato");
      rGarantia.SETRANGE ("Tipo Garantia"      , Garantia."Tipo Garantia");
      rGarantia.SETFILTER("Fecha venta desde"        , '<=%1', Garantia."Fecha venta desde");
      rGarantia.SETFILTER("Fecha venta hasta"        , '>=%1', Garantia."Fecha venta desde");
      rGarantia.SETRANGE (Activo               , TRUE);
      IF rGarantia.FIND('-') THEN BEGIN
        rGarantia.SETFILTER("Habitacion desde", '<=%1', Garantia."Habitacion desde");
        rGarantia.SETFILTER("Habitacion hasta", '>=%1', Garantia."Habitacion desde");
        IF rGarantia.FIND('-') THEN BEGIN
          IF rGarantia."Num Orden" <> Garantia."Num Orden"  THEN
            ERROR(Text042);
        END;
        rGarantia.SETFILTER("Habitacion desde", '<=%1', Garantia."Habitacion hasta");
        rGarantia.SETFILTER("Habitacion hasta", '>=%1', Garantia."Habitacion hasta");
        IF rGarantia.FIND('-') THEN BEGIN
          IF rGarantia."Num Orden" <> Garantia."Num Orden"  THEN
            ERROR(Text042);
        END;
        rGarantia.SETFILTER("Habitacion desde", '>=%1', Garantia."Habitacion desde");
        rGarantia.SETFILTER("Habitacion hasta", '<=%1', Garantia."Habitacion hasta");
        IF rGarantia.FIND('-') THEN BEGIN
          IF rGarantia."Num Orden" <> Garantia."Num Orden"  THEN
            ERROR(Text042);
        END;
      END;

      rGarantia.RESET;
      rGarantia.SETRANGE (Delegacion           , Garantia.Delegacion);
      rGarantia.SETRANGE ("N§ Contrato"        , Garantia."N§ Contrato");
      rGarantia.SETRANGE ("Tipo Garantia"      , Garantia."Tipo Garantia");
      rGarantia.SETFILTER("Fecha venta desde"        , '<=%1', Garantia."Fecha venta hasta");
      rGarantia.SETFILTER("Fecha venta hasta"        , '>=%1', Garantia."Fecha venta hasta");
      rGarantia.SETRANGE (Activo               , TRUE);
      IF rGarantia.FIND('-') THEN BEGIN
        rGarantia.SETFILTER("Habitacion desde", '<=%1', Garantia."Habitacion desde");
        rGarantia.SETFILTER("Habitacion hasta", '>=%1', Garantia."Habitacion desde");
        IF rGarantia.FIND('-') THEN BEGIN
          IF rGarantia."Num Orden" <> Garantia."Num Orden"  THEN
            ERROR(Text042);
        END;
        rGarantia.SETFILTER("Habitacion desde", '<=%1', Garantia."Habitacion hasta");
        rGarantia.SETFILTER("Habitacion hasta", '>=%1', Garantia."Habitacion hasta");
        IF rGarantia.FIND('-') THEN BEGIN
          IF rGarantia."Num Orden" <> Garantia."Num Orden"  THEN
            ERROR(Text042);
        END;
        rGarantia.SETFILTER("Habitacion desde", '>=%1', Garantia."Habitacion desde");
        rGarantia.SETFILTER("Habitacion hasta", '<=%1', Garantia."Habitacion hasta");
        IF rGarantia.FIND('-') THEN BEGIN
          IF rGarantia."Num Orden" <> Garantia."Num Orden"  THEN
            ERROR(Text042);
        END;
      END;

      rGarantia.RESET;
      rGarantia.SETRANGE (Delegacion           , Garantia.Delegacion);
      rGarantia.SETRANGE ("N§ Contrato"        , Garantia."N§ Contrato");
      rGarantia.SETRANGE ("Tipo Garantia"      , Garantia."Tipo Garantia");
      rGarantia.SETFILTER("Fecha venta desde"        , '>=%1', Garantia."Fecha venta desde");
      rGarantia.SETFILTER("Fecha venta hasta"        , '<=%1', Garantia."Fecha venta hasta");
      rGarantia.SETRANGE (Activo               , TRUE);
      IF rGarantia.FIND('-') THEN BEGIN
        rGarantia.SETFILTER("Habitacion desde", '<=%1', Garantia."Habitacion desde");
        rGarantia.SETFILTER("Habitacion hasta", '>=%1', Garantia."Habitacion desde");
        IF rGarantia.FIND('-') THEN BEGIN
          IF rGarantia."Num Orden" <> Garantia."Num Orden"  THEN
            ERROR(Text042);
        END;
        rGarantia.SETFILTER("Habitacion desde", '<=%1', Garantia."Habitacion hasta");
        rGarantia.SETFILTER("Habitacion hasta", '>=%1', Garantia."Habitacion hasta");
        IF rGarantia.FIND('-') THEN BEGIN
          IF rGarantia."Num Orden" <> Garantia."Num Orden"  THEN
            ERROR(Text042);
        END;
        rGarantia.SETFILTER("Habitacion desde", '>=%1', Garantia."Habitacion desde");
        rGarantia.SETFILTER("Habitacion hasta", '<=%1', Garantia."Habitacion hasta");
        IF rGarantia.FIND('-') THEN BEGIN
          IF rGarantia."Num Orden" <> Garantia."Num Orden"  THEN
            ERROR(Text042);
        END;
      END;

      IF NOT cFunSeg.TienePermiso(Text021, FALSE) THEN
        EXIT(FALSE);

      IF rConC.GET(Garantia.Delegacion, Garantia."N§ Contrato") THEN BEGIN
        IF NOT rConC.Confirmado THEN
          ERROR(Text043);
      END;

      EXIT(TRUE);
    END;

    PROCEDURE copiar_contrato@17(Delegacion@1103355000 : Code[10];Contrato@1103355001 : Code[10];"Tipo Contrato"@1103355002 : 'Hotel Compra,Hotel Venta');
    BEGIN
      // copiar_contrato

      CASE "Tipo Contrato" OF
        "Tipo Contrato"::"Hotel Compra":
        BEGIN
          copiar_contrato_hotel_compra(Delegacion, Contrato);
        END;
        "Tipo Contrato"::"Hotel Venta":
        BEGIN
          copiar_contrato_hotel_venta(Delegacion, Contrato);
        END;
      END;
    END;

    PROCEDURE copiar_contrato_hotel_compra@20(Delegacion@1103355000 : Code[10];Contrato@1103355001 : Code[10]);
    VAR
      lwDejarPrecioCero@1100253002 : Boolean;
      opcion@1103355002 : Integer;
      ventana@1103355003 : Dialog;
      wFechaFirma@1103355010 : Date;
      wFechaInicio@1103355011 : Date;
      wFechaFinal@1103355012 : Date;
      rConC@1103355004 : Record 7009723;
      rConC2@1103355005 : Record 7009723;
      rConV@1103355006 : Record 7009727;
      lrTTOO@1100253000 : Record 7009717;
      fFichContVta@1103355007 : Form 7009739;
      fFichContCmp@1103355008 : Form 7009735;
      fPideFechas@1103355009 : Form 7010037;
      lfTTOO@1100253001 : Form 7009722;
    BEGIN
      // copiar_contrato_hotel_compra

      opcion := STRMENU(Text044, 1);
      IF opcion = 0 THEN
        EXIT;
      CASE opcion OF
        1: BEGIN
             IF rConC.GET(Delegacion, Contrato) THEN BEGIN

               IF rConC."Fecha final contrato" < TODAY THEN
                 ERROR(Text119);

               //. Mostrar un selector de Touroperador para hacer una copia multiple

               CLEAR(lfTTOO);
               lfTTOO.EDITABLE(FALSE);
               lfTTOO.LOOKUPMODE(TRUE);
               IF lfTTOO.RUNMODAL <> ACTION::LookupOK THEN
                 EXIT;

               IF NOT CONFIRM(Text117) THEN
                 EXIT;

               lwDejarPrecioCero := CONFIRM(Text118);

               lfTTOO.GetFiltroSeleccion(lrTTOO);
               IF lrTTOO.FINDSET THEN BEGIN
                 REPEAT
                   CLEAR(rConV);
                   rConV.TourOperador := lrTTOO.TourOperador;

                   contrato_compra_venta(rConC, rConV);
                   precios_compra_venta(rConC, rConV, lwDejarPrecioCero);
                 UNTIL lrTTOO.NEXT = 0;
                 MESSAGE(Text120);
               END;
             END;
           END;
        2: BEGIN
             IF rConC.GET(Delegacion, Contrato) THEN BEGIN
               IF NOT CONFIRM(STRSUBSTNO(Text048, rConC."N§ Contrato compra", rConC2."N§ Contrato compra")) THEN
                 EXIT;

               // AJS 09.10.2007
               // Copiar los contratos incrementando fechas

               wFechaFirma  := 0D;
               wFechaInicio := 0D;
               wFechaFinal  := 0D;

               IF CONFIRM(Text111) THEN BEGIN
                 CLEAR(fPideFechas);
                 fPideFechas.RUNMODAL;
                 fPideFechas.RetornaParametros(wFechaFirma, wFechaInicio, wFechaFinal);

                 ComprobarFechas(wFechaFirma, wFechaInicio, wFechaFinal);
               END;

               contrato_compra_compra(rConC, rConC2, wFechaFirma, wFechaInicio, wFechaFinal);
               precios_compra_compra(rConC, rConC2, wFechaInicio, wFechaFinal);

               COMMIT;

               rConC2.SETRECFILTER;
               fFichContCmp.SETTABLEVIEW(rConC2);
               fFichContCmp.RUNMODAL;
               CLEAR(fFichContCmp);
               rConC2.RESET;
             END;
           END;
      END;
    END;

    PROCEDURE copiar_contrato_hotel_venta@18(Delegacion@1103355000 : Code[10];Contrato@1103355001 : Code[10]);
    VAR
      opcion@1103355002 : Integer;
      ventana@1103355003 : Dialog;
      rConC@1103355004 : Record 7009723;
      rConV2@1103355005 : Record 7009727;
      rConV@1103355006 : Record 7009727;
      fFichContVta@1103355007 : Form 7009739;
      fFichContCmp@1103355008 : Form 7009735;
    BEGIN
      // copiar_contrato_hotel_venta
      //
      opcion := STRMENU(Text051 + Text052, 1);
      IF opcion = 0 THEN
        EXIT;
      CASE opcion OF
        1: BEGIN
             IF rConV.GET(Delegacion, Contrato) THEN BEGIN
               //-$007 <
               //ventana.OPEN(Text045+
               //             '\'+
               //             Text046);
               //ventana.INPUT(1, rConV2."N§ Contrato venta");
               //ventana.CLOSE;

               //IF (rConV2."N§ Contrato venta" <> '') AND rConV2.GET(rConV.Delegacion, rConV2."N§ Contrato venta") THEN
               //  ERROR(Text047);
               //-$007 >

               IF NOT CONFIRM(STRSUBSTNO(Text048,
                              rConV."N§ Contrato venta", rConV2."N§ Contrato venta")) THEN
                 EXIT;

               contrato_venta_venta(rConV, rConV2);
               precios_venta_venta(rConV, rConV2);
               COMMIT;

               rConV2.SETRECFILTER;
               fFichContVta.SETTABLEVIEW(rConV2);
               fFichContVta.RUNMODAL;
               CLEAR(fFichContVta);
               rConV2.RESET;
             END;
           END;
        2: BEGIN
             IF rConV.GET(Delegacion, Contrato) THEN BEGIN
               //-$007 <
               //ventana.OPEN(Text049+
               //             '\'+
               //             Text050);
               //ventana.INPUT(1, rConC."N§ Contrato compra");
               //ventana.CLOSE;

               //IF (rConC."N§ Contrato compra" <> '') AND rConC.GET(rConV.Delegacion, rConC."N§ Contrato compra") THEN
               //  ERROR(Text047);
               //-$007 >

               IF NOT CONFIRM(STRSUBSTNO(Text048,
                              rConV."N§ Contrato venta", rConC."N§ Contrato compra")) THEN
                 EXIT;

               contrato_venta_compra(rConV, rConC);
               precios_venta_compra(rConV, rConC);
               rConC.SETRECFILTER;
               COMMIT;

               fFichContCmp.SETTABLEVIEW(rConC);
               fFichContCmp.RUNMODAL;
               CLEAR(fFichContCmp);
               rConC.RESET;
             END;
           END;
      END;
    END;

    PROCEDURE contrato_compra_venta@23(ConC@1103355000 : Record 7009723;VAR ConV@1103355001 : Record 7009727);
    VAR
      lrCuentasTO@1100217000 : Record 7009705;
    BEGIN
      // contrato_compra_venta

      ConV.Delegacion                  := ConC.Delegacion;
      ConV."Fecha firma contrato"      := ConC."Fecha firma contrato";
      ConV."Fecha inicio contrato"     := ConC."Fecha inicio contrato";
      ConV."Fecha final contrato"      := ConC."Fecha final contrato";
      ConV.Hotel                       := ConC.Hotel;
      ConV."Impuestos incluidos"       := ConC."Impuestos incluidos";
      ConV."Tipo garantias"            := ConC."Tipo de Garantias";
      ConV."Gr. registro IVA producto" := ConC."Gr. Registro IVA Producto";
      ConV."Cod. Terminos pago"        := ConC."Cod. Terminos Pago";
      ConV."Cod. Formas pago"          := ConC."Cod. Formas Pago";
      //-$003ConV."Cod. Serie"                := ConC."OLD_Cod. Serie";
      ConV.Confirmado                  := FALSE;
      ConV.Enviar                      := TRUE;

      //. Buscamos la configuracion del Touroperador para obtener el cliente
      lrCuentasTO.GET(ConV.Delegacion, ConV.TourOperador);
      ConV.Cliente := lrCuentasTO."Cliente Hotel";

      ConV.INSERT(TRUE);
    END;

    PROCEDURE contrato_compra_compra@37(ConC@1103355000 : Record 7009723;VAR ConC2@1103355001 : Record 7009723;pwFechaFirma@1103355002 : Date;pwFechaInicio@1103355004 : Date;pwFechaFinal@1103355005 : Date);
    BEGIN
      // contrato_compra_compra

      ConC2.Delegacion := ConC.Delegacion;

      IF pwFechaFirma <> 0D THEN
        ConC2."Fecha firma contrato" := pwFechaFirma
      ELSE
        ConC2."Fecha firma contrato" := ConC."Fecha firma contrato";

      IF pwFechaInicio <> 0D THEN
        ConC2."Fecha inicio contrato" := pwFechaInicio
      ELSE
        ConC2."Fecha inicio contrato" := ConC."Fecha inicio contrato";

      IF pwFechaFinal <> 0D THEN
        ConC2."Fecha final contrato" := pwFechaFinal
      ELSE
        ConC2."Fecha final contrato" := ConC."Fecha final contrato";

      ConC2.TourOperador                := ConC.TourOperador;
      ConC2.Hotel                       := ConC.Hotel;
      ConC2."Impuestos incluidos"       := ConC."Impuestos incluidos";
      ConC2."Tipo de Garantias"         := ConC."Tipo de Garantias";
      ConC2."Gr. Registro IVA Producto" := ConC."Gr. Registro IVA Producto";
      ConC2."Cod. Terminos Pago"        := ConC."Cod. Terminos Pago";
      ConC2."Cod. Formas Pago"          := ConC."Cod. Formas Pago";
      //-$003ConC2."OLD_Cod. Serie"                := ConC."OLD_Cod. Serie";
      ConC2.Confirmado                  := FALSE;
      ConC2.Enviar                      := TRUE;
      ConC2."Tipo de Contrato"          := ConC."Tipo de Contrato";
      ConC2."C¢d. divisa"               := ConC."C¢d. divisa";
      ConC2."Minimo estancias"          := ConC."Minimo estancias";
      ConC2.INSERT(TRUE);
    END;

    PROCEDURE contrato_venta_venta@19(ConV@1103355000 : Record 7009727;VAR ConV2@1103355001 : Record 7009727);
    BEGIN
      // contrato_venta_venta

      ConV2.Delegacion := ConV.Delegacion;
      ConV2."Fecha firma contrato" := ConV."Fecha firma contrato";
      ConV2."Fecha inicio contrato" := ConV."Fecha inicio contrato";
      ConV2."Fecha final contrato" := ConV."Fecha final contrato";
      ConV2.TourOperador := ConV.TourOperador;
      ConV2.Hotel := ConV.Hotel;
      ConV2."Impuestos incluidos" := ConV."Impuestos incluidos";
      ConV2."Tipo garantias" := ConV."Tipo garantias";
      ConV2."Gr. registro IVA producto" := ConV."Gr. registro IVA producto";
      ConV2."Cod. Terminos pago" := ConV."Cod. Terminos pago";
      ConV2."Cod. Formas pago" := ConV."Cod. Formas pago";
      //-$003ConV2."Cod. Serie" := ConV."Cod. Serie";
      ConV2.Confirmado := FALSE;
      ConV2.Enviar := TRUE;
      ConV2.INSERT(TRUE);
    END;

    PROCEDURE contrato_venta_compra@21(ConV@1103355000 : Record 7009727;VAR ConC@1103355001 : Record 7009723);
    BEGIN
      // contrato_venta_compra

      ConC.Delegacion := ConV.Delegacion;
      ConC."Fecha firma contrato" := ConV."Fecha firma contrato";
      ConC."Fecha inicio contrato" := ConV."Fecha inicio contrato";
      ConC."Fecha final contrato" := ConV."Fecha final contrato";
      ConC.TourOperador := ConV.TourOperador;
      ConC.Hotel := ConV.Hotel;
      ConC."Impuestos incluidos" := ConV."Impuestos incluidos";
      ConC."Tipo de Garantias" := ConV."Tipo garantias";
      ConC."Gr. Registro IVA Producto" := ConV."Gr. registro IVA producto";
      ConC."Cod. Terminos Pago" := ConV."Cod. Terminos pago";
      ConC."Cod. Formas Pago" := ConV."Cod. Formas pago";
      //-$003ConC."OLD_Cod. Serie" := ConV."Cod. Serie";
      ConC.Confirmado := FALSE;
      ConC.Enviar := TRUE;
      ConC."Tipo de Contrato" := ConC."Tipo de Contrato"::"En nombre propio";
      ConC.INSERT(TRUE);
    END;

    PROCEDURE precios_compra_venta@24(ConC@1103355000 : Record 7009723;ConV@1103355001 : Record 7009727;DejarPrecioCero@1100253000 : Boolean);
    VAR
      rPreC@1103355002 : Record 7009738;
      rPreV@1103355003 : Record 7009732;
      rAport@1103355004 : Record 7010007;
      rGar@1103355005 : Record 7009729;
      rCupoC@1103355007 : Record 7009739;
      rCupoV@1103355008 : Record 7009730;
      rConHab@1103355009 : Record 7009731;
      rConHab2@1103355010 : Record 7009731;
    BEGIN
      // precios_compra_venta

      rPreC.RESET;
      rPreC.SETRANGE(Delegacion   , ConC.Delegacion);
      rPreC.SETRANGE("N§ Contrato", ConC."N§ Contrato compra");
      IF rPreC.FIND('-') THEN BEGIN
        REPEAT
          rPreV.TRANSFERFIELDS(rPreC);
          rPreV."N§ Contrato" := ConV."N§ Contrato venta";
          rPreV.Activo := FALSE;
          IF DejarPrecioCero THEN
            rPreV.Importe := 0;
          rPreV.INSERT;
        UNTIL rPreC.NEXT = 0;
      END;

      rCupoC.RESET;
      rCupoC.SETRANGE(Delegacion          , ConC.Delegacion);
      rCupoC.SETRANGE("N§ Contrato compra", ConC."N§ Contrato compra");
      IF rCupoC.FIND('-') THEN BEGIN
        REPEAT
          rCupoV.TRANSFERFIELDS(rCupoC);
          rCupoV."N§ Contrato venta" := ConV."N§ Contrato venta";
          rCupoV.Cupo    := 0;
          rCupoV.Release := 0;
          rCupoV.Activo  := FALSE;
          rCupoV.INSERT;
        UNTIL rCupoC.NEXT = 0;
      END;

      rConHab.RESET;
      rConHab.SETRANGE(Delegacion     , ConC.Delegacion);
      rConHab.SETRANGE("N§ Contrato"  , ConC."N§ Contrato compra");
      rConHab.SETRANGE("Tipo contrato", rConHab."Tipo contrato"::Compra);
      IF rConHab.FIND('-') THEN BEGIN
        REPEAT
          rConHab2.TRANSFERFIELDS(rConHab);
          rConHab2."N§ Contrato" := ConV."N§ Contrato venta";
          rConHab2."Tipo contrato" := rConHab2."Tipo contrato"::Venta;
          rConHab2.INSERT;
        UNTIL rConHab.NEXT = 0;
      END;
    END;

    PROCEDURE precios_compra_compra@38(ConC@1103355000 : Record 7009723;ConC2@1103355001 : Record 7009723;pwFechaInicio@1103355014 : Date;pwFechaFinal@1103355015 : Date);
    VAR
      rPreC@1103355002 : Record 7009738;
      rPreC2@1103355003 : Record 7009738;
      rPreC3@1103355013 : Record 7009738;
      rGar@1103355006 : Record 7009729;
      rGar2@1103355007 : Record 7009729;
      rCupoC@1103355008 : Record 7009739;
      rCupoC2@1103355009 : Record 7009739;
      rCupoC3@1103355012 : Record 7009739;
      rConHab@1103355010 : Record 7009731;
      rConHab2@1103355011 : Record 7009731;
      wDesfaseFechas@1100217000 : Integer;
      wDesfaseTexto@1100217001 : Text[30];
    BEGIN
      // precios_compra_compra

      rPreC.RESET;
      rPreC.SETRANGE(Delegacion   , ConC.Delegacion);
      rPreC.SETRANGE("N§ Contrato", ConC."N§ Contrato compra");

      // Filtramos para ir copiar los precios segun su distinto tipo

      rPreC.SETFILTER("Codigo Precio", '%1|%2', rPreC."Codigo Precio"::Habitacion, rPreC."Codigo Precio"::Regimen);
      IF rPreC.FINDSET THEN BEGIN
        REPEAT
          //+$006
          //. Obtener el desfase, en meses, entre la fecha de inicio del contrato original y la del nuevo
          IF pwFechaInicio = 0D THEN
            wDesfaseFechas := 0
          ELSE
            wDesfaseFechas := DATE2DMY(pwFechaInicio, 2) - DATE2DMY(ConC."Fecha inicio contrato", 2);
          wDesfaseTexto  := '<' + FORMAT(wDesfaseFechas) + 'M>';

          rPreC2.TRANSFERFIELDS(rPreC);
          rPreC2."N§ Contrato"    := ConC2."N§ Contrato compra";

          // Vamos a buscar si para el codigo de Habitacion/Regimen existe una sola linea en el contrato

          rPreC3.RESET;
          rPreC3.SETRANGE (Delegacion     , rPreC.Delegacion);
          rPreC3.SETRANGE ("N§ Contrato"  , rPreC."N§ Contrato");
          rPreC3.SETRANGE ("Codigo Precio", rPreC."Codigo Precio");
          rPreC3.SETRANGE (Codigo         , rPreC.Codigo);
          rPreC3.SETFILTER("Orden Precio" , '<>%1', rPreC."Orden Precio");
          IF NOT rPreC3.FINDFIRST THEN BEGIN
            IF pwFechaInicio <> 0D THEN
            BEGIN
              rPreC2."Fecha desde" := pwFechaInicio;
              rPreC2."Fecha hasta" := pwFechaFinal;
            END;
          END
          //. Existe varias lineas de precio
          ELSE BEGIN
            IF pwFechaInicio <> 0D THEN
            BEGIN
              //-$006rPreC2."Fecha desde" := 0D;
              //-$006rPreC2."Fecha hasta" := 0D;

              //+$006
              //. Aplicamos el desfase de fechas
              IF rPreC."Fecha desde" <> 0D THEN
                rPreC2."Fecha desde" := CALCDATE(wDesfaseTexto, rPreC."Fecha desde");
              IF rPreC."Fecha hasta" <> 0D THEN
                rPreC2."Fecha hasta" := CALCDATE(wDesfaseTexto, rPreC."Fecha hasta");
              //+$006
            END;
          END;

          rPreC2.Importe := 0;
          rPreC2.Activo  := FALSE;
          rPreC2.INSERT;
        UNTIL rPreC.NEXT = 0;
      END;

      //. Copiamos suplementos y ofertas

      rPreC.SETFILTER("Codigo Precio", '%1|%2|%3', rPreC."Codigo Precio"::Suplementos, rPreC."Codigo Precio"::Extras,
                                                   rPreC."Codigo Precio"::Ofertas);
      IF rPreC.FINDSET THEN BEGIN
        REPEAT
          rPreC2.TRANSFERFIELDS(rPreC);
          rPreC2."N§ Contrato"    := ConC2."N§ Contrato compra";

          IF pwFechaInicio <> 0D THEN
          BEGIN
            //-$006rPreC2."Fecha desde"    := 0D;
            //-$006rPreC2."Fecha hasta"    := 0D;
            //-$006rPreC2."2¦ Fecha desde" := rPreC2."2¦ Fecha desde";
            //-$006rPreC2."2¦ Fecha hasta" := rPreC2."2¦ Fecha hasta";

            //+$006
            //. Aplicamos el desfase a las fechas
            IF rPreC."Fecha desde" <> 0D THEN
              rPreC2."Fecha desde"    := CALCDATE(wDesfaseTexto, rPreC."Fecha desde");
            IF rPreC."Fecha hasta" <> 0D THEN
              rPreC2."Fecha hasta"    := CALCDATE(wDesfaseTexto, rPreC."Fecha hasta");
            IF rPreC."2¦ Fecha desde" <> 0D THEN
              rPreC2."2¦ Fecha desde" := CALCDATE(wDesfaseTexto, rPreC."2¦ Fecha desde");
            IF rPreC."2¦ Fecha hasta" <> 0D THEN
              rPreC2."2¦ Fecha hasta" := CALCDATE(wDesfaseTexto, rPreC."2¦ Fecha hasta");
            //+$006
          END;

          rPreC2.Importe := 0;
          rPreC2.Activo  := FALSE;
          rPreC2.INSERT;
        UNTIL rPreC.NEXT = 0;
      END;

      rCupoC.RESET;
      rCupoC.SETRANGE(Delegacion          , ConC.Delegacion);
      rCupoC.SETRANGE("N§ Contrato compra", ConC."N§ Contrato compra");
      IF rCupoC.FINDSET THEN BEGIN
        REPEAT
          rCupoC2.TRANSFERFIELDS(rCupoC);
          rCupoC2."N§ Contrato compra" := ConC2."N§ Contrato compra";

          // AJS 10.10.2007
          // Comprobamos si existe una sola linea de fechas para el tipo de habitacion

          rCupoC3.SETRANGE (Delegacion          , rCupoC.Delegacion);
          rCupoC3.SETRANGE ("N§ Contrato compra", rCupoC."N§ Contrato compra");
          rCupoC3.SETRANGE ("Habitacion cupo"   , rCupoC."Habitacion cupo");
          //rCupoC3.SETRANGE ("Touroperador Venta", rCupoC."Touroperador Venta");
          rCupoC3.SETFILTER("Num Linea"         , '<>%1', rCupoC."Num Linea");
          IF NOT rCupoC3.FINDFIRST THEN
          BEGIN
            IF pwFechaInicio <> 0D THEN
            BEGIN
              rCupoC2."Fecha desde" := pwFechaInicio;
              rCupoC2."Fecha hasta" := pwFechaFinal;
            END;
          END
          //. Si existe mas de una linea hay que aplicar el desfase de fechas
          ELSE
          BEGIN
            IF pwFechaInicio <> 0D THEN
            BEGIN
              //-$006rCupoC2."Fecha desde" := 0D;
              //-$006rCupoC2."Fecha hasta" := 0D;

              //+$006
              //. Aplicamos el desfase de fechas
              IF rCupoC."Fecha desde" <> 0D THEN
                rCupoC2."Fecha desde" := CALCDATE(wDesfaseTexto, rCupoC."Fecha desde");
              IF rCupoC."Fecha hasta" <> 0D THEN
                rCupoC2."Fecha hasta" := CALCDATE(wDesfaseTexto, rCupoC."Fecha hasta");
              //+$006
            END;
          END;
          rCupoC2.Activo := FALSE;
          rCupoC2.INSERT;
        UNTIL rCupoC.NEXT = 0;
      END;

      rConHab.RESET;
      rConHab.SETRANGE(Delegacion     , ConC.Delegacion);
      rConHab.SETRANGE("N§ Contrato"  , ConC."N§ Contrato compra");
      rConHab.SETRANGE("Tipo contrato", rConHab."Tipo contrato"::Compra);
      IF rConHab.FIND('-') THEN BEGIN
        REPEAT
          rConHab2.TRANSFERFIELDS(rConHab);
          rConHab2."N§ Contrato"   := ConC2."N§ Contrato compra";
          rConHab2.INSERT;
        UNTIL rConHab.NEXT = 0;
      END;

      rGar.RESET;
      rGar.SETRANGE(Delegacion   , ConC.Delegacion);
      rGar.SETRANGE("N§ Contrato", ConC."N§ Contrato compra");
      IF rGar.FIND('-') THEN BEGIN
        REPEAT
          rGar2 := rGar;
          rGar2."N§ Contrato"         := ConC2."N§ Contrato compra";
          rGar2."Fecha venta desde"   := 0D;
          rGar2."Fecha venta hasta"   := 0D;
          rGar2."Fecha llegada desde" := 0D;
          rGar2."Fecha llegada hasta" := 0D;
          rGar2.Activo                := FALSE;
          rGar2.INSERT;
        UNTIL rGar.NEXT = 0;
      END;
    END;

    PROCEDURE precios_venta_venta@22(ConV@1103355000 : Record 7009727;ConV2@1103355001 : Record 7009727);
    VAR
      rPreV2@1103355002 : Record 7009732;
      rPreV@1103355003 : Record 7009732;
      rCupoV2@1103355006 : Record 7009730;
      rCupoV@1103355007 : Record 7009730;
      rConHab@1103355008 : Record 7009731;
      rConHab2@1103355009 : Record 7009731;
    BEGIN
      // precios_venta_venta

      rPreV.RESET;
      rPreV.SETRANGE(Delegacion   , ConV.Delegacion);
      rPreV.SETRANGE("N§ Contrato", ConV."N§ Contrato venta");
      IF rPreV.FIND('-') THEN BEGIN
        REPEAT
          rPreV2.TRANSFERFIELDS(rPreV);
          rPreV2."N§ Contrato" := ConV2."N§ Contrato venta";
          rPreV2.Activo := FALSE;
          rPreV2.INSERT;
        UNTIL rPreV.NEXT = 0;
      END;
      rPreV.RESET;

      rCupoV.RESET;
      rCupoV.SETRANGE(Delegacion         , ConV.Delegacion);
      rCupoV.SETRANGE("N§ Contrato venta", ConV."N§ Contrato venta");
      IF rCupoV.FIND('-') THEN BEGIN
        REPEAT
          rCupoV2.TRANSFERFIELDS(rCupoV);
          rCupoV2."N§ Contrato venta" := ConV2."N§ Contrato venta";
          rCupoV2.Activo := FALSE;
          rCupoV2.INSERT;
        UNTIL rCupoV.NEXT = 0;
      END;
      rCupoV.RESET;

      rConHab.RESET;
      rConHab.SETRANGE(Delegacion     , ConV.Delegacion);
      rConHab.SETRANGE("N§ Contrato"  , ConV."N§ Contrato venta");
      rConHab.SETRANGE("Tipo contrato", rConHab."Tipo contrato"::Venta);
      IF rConHab.FIND('-') THEN BEGIN
        REPEAT
          rConHab2.TRANSFERFIELDS(rConHab);
          rConHab2."N§ Contrato" := ConV2."N§ Contrato venta";
          rConHab2."Tipo contrato" := rConHab2."Tipo contrato"::Venta;
          rConHab2.INSERT;
        UNTIL rConHab.NEXT = 0;
      END;
      rConHab.RESET;
    END;

    PROCEDURE precios_venta_compra@25(ConV@1103355000 : Record 7009727;ConC@1103355001 : Record 7009723);
    VAR
      rPreC@1103355002 : Record 7009738;
      rPreV@1103355003 : Record 7009732;
      rCupoC@1103355004 : Record 7009739;
      rCupoV@1103355005 : Record 7009730;
      rConHab@1103355006 : Record 7009731;
      rConHab2@1103355007 : Record 7009731;
      lwLin@1103355008 : Integer;
    BEGIN
      // precios_venta_compra
      //
      rPreV.RESET;
      rPreV.SETRANGE(Delegacion   , ConV.Delegacion);
      rPreV.SETRANGE("N§ Contrato", ConV."N§ Contrato venta");
      IF rPreV.FIND('-') THEN BEGIN
        REPEAT
          rPreC.TRANSFERFIELDS(rPreV);
          rPreC."N§ Contrato" := ConC."N§ Contrato compra";
          rPreC.Activo := FALSE;
          rPreC.INSERT;
        UNTIL rPreV.NEXT = 0;
      END;
      rPreV.RESET;

      rCupoV.RESET;
      rCupoV.SETRANGE(Delegacion         , ConV.Delegacion);
      rCupoV.SETRANGE("N§ Contrato venta", ConV."N§ Contrato venta");
      IF rCupoV.FIND('-') THEN BEGIN
        lwLin := 0;
        REPEAT
          rCupoC.TRANSFERFIELDS(rCupoV);
          rCupoC."N§ Contrato compra" := ConC."N§ Contrato compra";

          // AJF 10/02/09
          // Los cupos de contratos de compra tienen una clave primaria distinta
          // con un n£mero de l¡nea.
          lwLin += 10000;
          rCupoC."Num Linea" := lwLin;

          rCupoC.Activo := FALSE;
          rCupoC.INSERT;
        UNTIL rCupoV.NEXT = 0;
      END;
      rCupoV.RESET;

      rConHab.RESET;
      rConHab.SETRANGE(Delegacion     , ConV.Delegacion);
      rConHab.SETRANGE("N§ Contrato"  , ConV."N§ Contrato venta");
      rConHab.SETRANGE("Tipo contrato", rConHab."Tipo contrato"::Venta);
      IF rConHab.FIND('-') THEN BEGIN
        REPEAT
          rConHab2.TRANSFERFIELDS(rConHab);
          rConHab2."N§ Contrato" := ConC."N§ Contrato compra";
          rConHab2."Tipo contrato" := rConHab2."Tipo contrato"::Compra;
          rConHab2.INSERT;
        UNTIL rConHab.NEXT = 0;
      END;
      rConHab.RESET;
    END;

    PROCEDURE divide_periodo_release@26(rCupos@1103355000 : Record 7009739);
    VAR
      rPrecios@1103355003 : Record 7009739;
      rConCompra@1103355004 : Record 7009723;
      rHotel@1103355005 : Record 7009724;
      rCond@1103355006 : Record 7010085;
      fFicDiv@1103355007 : Form 7010127;
      fDesde@1103355008 : Date;
      fHasta@1103355009 : Date;
      fDesde_aux@1103355010 : Date;
      fHasta_aux@1103355011 : Date;
      fDia@1103355012 : Date;
      iDiasC@1103355013 : Integer;
      iDiasR@1103355014 : Integer;
      diVentana@1103355015 : Dialog;
    BEGIN
      // divide_periodo_release

      IF rCond.GET(USERID) THEN
        rCond.DELETE;
      CLEAR(rCond);
      rCond.Usuario := USERID;
      rCond."Fecha desde" := rCupos."Fecha desde";
      rCond."Fecha hasta" := rCupos."Fecha hasta";
      rCond."N§ Habitaciones" := rCupos.Cupo;
      rCond.Frecuencia := rCupos.Release;
      rCond.Habitacion := rCupos."Habitacion cupo";
      rCond.INSERT;
      COMMIT;

      rCond.FILTERGROUP(2);
      rCond.SETRANGE(Usuario, USERID);
      rCond.FILTERGROUP(0);
      CLEAR(fFicDiv);
      fFicDiv.SETTABLEVIEW(rCond);
      fFicDiv.RUNMODAL;
      IF NOT rCond.GET(USERID) THEN
        ERROR(Text053);
      IF NOT rCond.Correcto THEN
        EXIT;

      fDesde := rCond."Fecha desde";
      fHasta := rCond."Fecha hasta";
      iDiasC := rCond."N§ Habitaciones";
      iDiasR := rCond.Frecuencia;

      IF fDesde = 0D THEN
        EXIT;
      IF fHasta = 0D THEN
        EXIT;
      IF (iDiasC < 0) OR (iDiasR < 0) THEN
        ERROR(Text054);

      IF fDesde > fHasta THEN
        ERROR(Text055);

      IF (fDesde < rCupos."Fecha desde") OR (fHasta > rCupos."Fecha hasta") THEN
        ERROR(Text056);

      // Borramos la linea actual y todos los registros de booking associados

      //+$004
      borrar_registro(rCupos);
      rCupos.DELETE;
      //+$004

      // insertamos las nuevas lineas en el fichero de precios.

      IF fDesde <> rCupos."Fecha desde" THEN BEGIN
        rPrecios.TRANSFERFIELDS(rCupos);
        rPrecios."Fecha hasta" := CALCDATE(Text057, fDesde);
        rPrecios.Activo        := FALSE;
        rPrecios.INSERT(TRUE);
      END;

      rPrecios.TRANSFERFIELDS(rCupos);
      rPrecios."Fecha desde" := fDesde;
      rPrecios."Fecha hasta" := fHasta;
      rPrecios.Cupo          := iDiasC;
      rPrecios.Release       := iDiasR;
      rPrecios.Activo        := FALSE;
      rPrecios.INSERT(TRUE);
      rPrecios.VALIDATE(Release);

      IF fHasta <> rCupos."Fecha hasta" THEN BEGIN
        rPrecios.TRANSFERFIELDS(rCupos);
        rPrecios."Fecha desde" := CALCDATE(Text058, fHasta);
        rPrecios.Activo        := FALSE;
        rPrecios.INSERT(TRUE);
      END;
    END;

    PROCEDURE divide_periodo_release_venta@30(rCupos@1103355000 : Record 7009730);
    VAR
      rBookHotelDiario@1103355001 : Record 7009758;
      rPrecios@1103355003 : Record 7009730;
      rConVenta@1103355004 : Record 7009727;
      rHotel@1103355005 : Record 7009724;
      rCond@1103355006 : Record 7010085;
      fFicDiv@1103355007 : Form 7010127;
      fDesde@1103355008 : Date;
      fHasta@1103355009 : Date;
      fDesde_aux@1103355010 : Date;
      fHasta_aux@1103355011 : Date;
      fDia@1103355012 : Date;
      iDiasC@1103355013 : Integer;
      iDiasR@1103355014 : Integer;
    BEGIN
      // divide_periodo_release_venta

      IF rCond.GET(USERID) THEN
        rCond.DELETE;
      CLEAR(rCond);
      rCond.Usuario := USERID;
      rCond."Fecha desde" := rCupos."Fecha desde";
      rCond."Fecha hasta" := rCupos."Fecha hasta";
      rCond."N§ Habitaciones" := rCupos.Cupo;
      rCond.Frecuencia := rCupos.Release;
      rCond.Habitacion := rCupos."Habitacion cupo";
      rCond.INSERT;
      COMMIT;

      rCond.FILTERGROUP(2);
      rCond.SETRANGE(Usuario, USERID);
      rCond.FILTERGROUP(0);

      CLEAR(fFicDiv);
      fFicDiv.SETTABLEVIEW(rCond);
      fFicDiv.RUNMODAL;

      CLEAR(fFicDiv);
      rCond.FILTERGROUP(2);
      rCond.SETRANGE(Usuario);
      rCond.FILTERGROUP(0);
      IF NOT rCond.GET(USERID) THEN
        ERROR(Text053);
      IF NOT rCond.Correcto THEN
        EXIT;

      fDesde := rCond."Fecha desde";
      fHasta := rCond."Fecha hasta";
      iDiasC := rCond."N§ Habitaciones";
      iDiasR := rCond.Frecuencia;

      IF (iDiasC < 0) OR (iDiasR < 0) THEN
        ERROR(Text054);

      IF fDesde > fHasta THEN
        ERROR(Text055);

      IF (fDesde < rCupos."Fecha desde") OR (fHasta > rCupos."Fecha hasta") THEN
        ERROR(Text065);

      // Borramos la linea actual y todos los registros de booking associados

      //+$004
      borrar_registro_venta(rCupos);
      rCupos.DELETE;
      //+$004

      // insertamos las nuevas lineas en el fichero de precios.

      IF fDesde <> rCupos."Fecha desde" THEN BEGIN
        rPrecios.TRANSFERFIELDS(rCupos);
        rPrecios."Fecha hasta" := CALCDATE(Text057, fDesde);
        rPrecios.Activo        := FALSE;
        rPrecios.INSERT;
      END;

      rPrecios.TRANSFERFIELDS(rCupos);
      rPrecios."Fecha desde" := fDesde;
      rPrecios."Fecha hasta" := fHasta;
      rPrecios.Cupo          := iDiasC;
      rPrecios.Release       := iDiasR;
      rPrecios.Activo        := FALSE;
      rPrecios.INSERT;
      rPrecios.VALIDATE(Release);

      IF fHasta <> rCupos."Fecha hasta" THEN BEGIN
        rPrecios.TRANSFERFIELDS(rCupos);
        rPrecios."Fecha desde" := CALCDATE(Text058, fHasta);
        rPrecios.Activo        := FALSE;
        rPrecios.INSERT;
      END;
    END;

    PROCEDURE divide_periodo_precio_venta@41(rPrecioVenta@1103355000 : Record 7009732);
    VAR
      rPrecios@1103355001 : Record 7009732;
      fDesde@1103355002 : Date;
      fHasta@1103355003 : Date;
      fDivision@1103355004 : Date;
      diVentana@1103355005 : Dialog;
      ImporteAnt@1103355006 : Decimal;
      ImporteNue@1103355007 : Decimal;
      rTemp@1103355008 : Record 7010085;
    BEGIN
      // divide_periodo_precio_venta
      //
      // {* PLB 19/02/99 *}
      rTemp.RESET;
      IF NOT rTemp.GET(USERID()) THEN BEGIN
        rTemp.INIT;
        rTemp.Usuario := USERID();
        rTemp.INSERT;
      END;
      //
      // rtemp."fecha llegada desde"  -> fecha dividir desde
      // rtemp."fecha llegada hasta"  -> fecha dividir hasta
      // rtemp."precio manual compra" -> precio actual
      // rtemp."precio manual venta"  -> precio periodo division
      //
      rTemp.INIT;
      rTemp.Usuario := USERID();
      rTemp."Fecha desde"         := rPrecioVenta."Fecha desde";
      rTemp."Fecha hasta"         := rPrecioVenta."Fecha hasta";
      rTemp."Precio Manual Compra":= rPrecioVenta.Importe;
      rTemp."Fecha llegada desde" := rPrecioVenta."Fecha desde";
      rTemp."Fecha llegada hasta" := rPrecioVenta."Fecha hasta";
      rTemp."Precio Manual Venta" := rPrecioVenta.Importe;
      rTemp.Correcto              := FALSE;
      rTemp.MODIFY;
      COMMIT;

      rTemp.SETRANGE(Usuario, USERID());

      FORM.RUNMODAL(FORM::"Ficha Condiciones Dividir Prec", rTemp);

      IF NOT rTemp.GET(USERID()) THEN
        ERROR(Text066);

      IF NOT rTemp.Correcto THEN
        EXIT;

      IF (rTemp."Fecha llegada desde" < rPrecioVenta."Fecha desde")
         OR (rTemp."Fecha llegada hasta" > rPrecioVenta."Fecha hasta") THEN
        ERROR(Text067);

      IF (rTemp."Fecha llegada desde" > rTemp."Fecha llegada hasta") THEN
        ERROR(Text068);

      // insertamos las nuevas lineas en el fichero de precios.
      //

      IF rTemp."Fecha llegada desde" <> rPrecioVenta."Fecha desde" THEN BEGIN
        rPrecios.TRANSFERFIELDS(rPrecioVenta);
        rPrecios."Fecha hasta" := CALCDATE(Text057, rTemp."Fecha llegada desde");
        rPrecios.Activo        := FALSE;
        rPrecios."Orden Precio":= 0;
        rPrecios.INSERT(TRUE);
        rPrecios.MARK(TRUE);
      END;

      rPrecios.TRANSFERFIELDS(rPrecioVenta);
      rPrecios."Fecha desde" := rTemp."Fecha llegada desde";
      rPrecios."Fecha hasta" := rTemp."Fecha llegada hasta";
      rPrecios.Importe       := rTemp."Precio Manual Venta";
      rPrecios.Activo        := FALSE;
      rPrecios."Orden Precio":= 0;
      rPrecios.INSERT(TRUE);
      rPrecios.MARK(TRUE);

      IF rTemp."Fecha llegada hasta" <> rPrecioVenta."Fecha hasta" THEN BEGIN
        rPrecios.TRANSFERFIELDS(rPrecioVenta);
        rPrecios."Fecha desde" := CALCDATE(Text058, rTemp."Fecha llegada hasta");
        rPrecios.Activo        := FALSE;
        rPrecios."Orden Precio":= 0;
        rPrecios.INSERT(TRUE);
        rPrecios.MARK(TRUE);
      END;

      rPrecioVenta.DELETE;

      {
      fDesde := rPrecioVenta."Fecha desde";
      fHasta := rPrecioVenta."Fecha hasta";
      fDivision := fDesde + ROUND((fHasta - fDesde) / 2, 1);
      ImporteAnt := rPrecioVenta.Importe;
      ImporteNue := rPrecioVenta.Importe;

      diVentana.OPEN(STRSUBSTNO(Text069, rPrecioVenta."Codigo Precio")+ '\' +
                     Text070 +
                     Text071 +
                     Text072 +
                     Text073 +
                     Text074,
                     fDesde,
                     fDivision,
                     fHasta,
                     ImporteAnt,
                     ImporteNue);

      diVentana.INPUT(2, fDivision);
      IF fDivision = 0D THEN
        EXIT;
      diVentana.INPUT(5, ImporteNue);
      diVentana.CLOSE;

      IF (fDivision <= fDesde) OR (fDivision >= fHasta) THEN
        ERROR(Text075);

      rPrecios.TRANSFERFIELDS(rPrecioVenta);
      rPrecios."Fecha desde" := fDivision;
      rPrecios.Activo        := FALSE;
      rPrecios.Importe       := ImporteNue;
      rPrecios."Orden Precio":= 0;
      rPrecios.INSERT(TRUE);
      rPrecios.MARK(TRUE);

      rPrecioVenta."Fecha hasta" := CALCDATE(Text057, fDivision);
      rPrecioVenta.Activo        := FALSE;
      rPrecioVenta.MODIFY(True);
      rPrecioVenta.MARK(TRUE);
      }
    END;

    PROCEDURE divide_periodo_precio_compra@42(rPrecioCompra@1103355000 : Record 7009738);
    VAR
      rPrecios@1103355001 : Record 7009738;
      fDesde@1103355002 : Date;
      fHasta@1103355003 : Date;
      fDivision@1103355004 : Date;
      diVentana@1103355005 : Dialog;
      ImporteAnt@1103355006 : Decimal;
      ImporteNue@1103355007 : Decimal;
      rTemp@1103355008 : Record 7010085;
    BEGIN
      // divide_periodo_precio_compra

      rTemp.RESET;
      IF NOT rTemp.GET(USERID()) THEN BEGIN
        rTemp.INIT;
        rTemp.Usuario := USERID();
        rTemp.INSERT;
      END;

      rTemp.INIT;
      rTemp.Usuario               := USERID();
      rTemp."Fecha desde"         := rPrecioCompra."Fecha desde";
      rTemp."Fecha hasta"         := rPrecioCompra."Fecha hasta";
      rTemp.Habitacion            := rPrecioCompra.Codigo;
      rTemp."Precio Manual Compra":= rPrecioCompra.Importe;
      rTemp."Fecha llegada desde" := rPrecioCompra."Fecha desde";
      rTemp."Fecha llegada hasta" := rPrecioCompra."Fecha hasta";
      rTemp."Precio Manual Venta" := rPrecioCompra.Importe;
      rTemp.Correcto              := FALSE;
      rTemp.MODIFY;

      COMMIT;

      rTemp.SETRANGE(Usuario, USERID());

      FORM.RUNMODAL(FORM::"Ficha Condiciones Dividir Prec", rTemp);

      IF NOT rTemp.GET(USERID()) THEN
        ERROR(Text066);

      IF NOT rTemp.Correcto THEN
        EXIT;

      IF (rTemp."Fecha llegada desde" < rPrecioCompra."Fecha desde")
         OR (rTemp."Fecha llegada hasta" > rPrecioCompra."Fecha hasta") THEN
        ERROR(Text067);

      IF (rTemp."Fecha llegada desde" > rTemp."Fecha llegada hasta") THEN
        ERROR(Text068);

      // AJS 17.10.2008
      // Borramos la linea actual de precios para que no de error de activacion

      rPrecioCompra.DELETE;
      rPrecioCompra.InsertaLinAction;

      // insertamos las nuevas lineas en el fichero de precios.

      IF rTemp."Fecha llegada desde" <> rPrecioCompra."Fecha desde" THEN BEGIN
        rPrecios.TRANSFERFIELDS(rPrecioCompra);
        rPrecios."Fecha hasta" := CALCDATE(Text057, rTemp."Fecha llegada desde");
        rPrecios.Activo        := FALSE;
        rPrecios."Orden Precio":= 0;
        rPrecios.INSERT(TRUE);
        rPrecios.MARK(TRUE);
      END;

      rPrecios.TRANSFERFIELDS(rPrecioCompra);
      rPrecios."Fecha desde" := rTemp."Fecha llegada desde";
      rPrecios."Fecha hasta" := rTemp."Fecha llegada hasta";
      rPrecios.Importe       := rTemp."Precio Manual Venta";
      rPrecios.Activo        := FALSE;
      rPrecios."Orden Precio":= 0;
      rPrecios.INSERT(TRUE);
      rPrecios.MARK(TRUE);

      IF rTemp."Fecha llegada hasta" <> rPrecioCompra."Fecha hasta" THEN BEGIN
        rPrecios.TRANSFERFIELDS(rPrecioCompra);
        rPrecios."Fecha desde" := CALCDATE(Text058, rTemp."Fecha llegada hasta");
        rPrecios.Activo        := FALSE;
        rPrecios."Orden Precio":= 0;
        rPrecios.INSERT(TRUE);
        rPrecios.MARK(TRUE);
      END;
    END;

    PROCEDURE borrar_registro@31(rCupos@1103355000 : Record 7009739);
    VAR
      rBookHotelDiario@1103355001 : Record 7009757;
      rConCompra@1103355003 : Record 7009723;
    BEGIN
      // borrar_registros
      //
      IF rConCompra.GET(rCupos.Delegacion, rCupos."N§ Contrato compra") THEN BEGIN
      // Se borran las lineas de detalle del booking
        rBookHotelDiario.SETRANGE("Contrato compra", rConCompra."N§ Contrato compra");
        rBookHotelDiario.SETRANGE(Hotel            , rConCompra.Hotel);
        rBookHotelDiario.SETRANGE(TourOperador     , rConCompra.TourOperador);
        rBookHotelDiario.SETRANGE(Habitacion     , rCupos."Habitacion cupo");
        rBookHotelDiario.SETRANGE(Dia              , rCupos."Fecha desde", rCupos."Fecha hasta");
        IF rBookHotelDiario.FIND('-') THEN
          rBookHotelDiario.DELETEALL(TRUE);
        rBookHotelDiario.SETRANGE("Contrato compra");
        rBookHotelDiario.SETRANGE(Hotel);
        rBookHotelDiario.SETRANGE(TourOperador);
        rBookHotelDiario.SETRANGE(Habitacion );
        rBookHotelDiario.SETRANGE(Dia);
      END;
    END;

    PROCEDURE borrar_registro_venta@32(rCupos@1103355000 : Record 7009730);
    VAR
      rBookHotelDiario@1103355001 : Record 7009758;
      rConVenta@1103355003 : Record 7009727;
    BEGIN
      // borrar_registros
      //
      IF rConVenta.GET(rCupos.Delegacion, rCupos."N§ Contrato venta") THEN BEGIN
      // Se borran las lineas de detalle del booking
        rBookHotelDiario.SETRANGE("Contrato venta", rConVenta."N§ Contrato venta");
        rBookHotelDiario.SETRANGE(Hotel            , rConVenta.Hotel);
        rBookHotelDiario.SETRANGE(TourOperador     , rConVenta.TourOperador);
        rBookHotelDiario.SETRANGE(Habitacion     , rCupos."Habitacion cupo");
        rBookHotelDiario.SETRANGE(Dia              , rCupos."Fecha desde", rCupos."Fecha hasta");
        IF rBookHotelDiario.FIND('-') THEN
          rBookHotelDiario.DELETEALL;
        rBookHotelDiario.SETRANGE("Contrato venta");
        rBookHotelDiario.SETRANGE(Hotel);
        rBookHotelDiario.SETRANGE(TourOperador);
        rBookHotelDiario.SETRANGE(Habitacion );
        rBookHotelDiario.SETRANGE(Dia);
      END;
    END;

    PROCEDURE busca_cupo_habitacion_venta@28(aux_touroperador@1103355000 : Code[10];aux_delegacion@1103355001 : Code[10];aux_hotel@1103355002 : Code[20];aux_fecha_entrada@1103355003 : Date;aux_fecha_salida@1103355004 : Date;aux_habitacion@1103355005 : Code[10];aux_hotel_precios@1103355006 : Code[20];busca_precio@1103355007 : Boolean);
    VAR
      rConV@1103355008 : Record 7009727;
      rCupoV@1103355009 : Record 7009730;
      rPreV@1103355010 : Record 7009732;
      fecha_trabajo@1103355011 : Date;
    BEGIN
      // busca_cupo_habitacion_venta
      //
      rConV.RESET;
      rConV.SETCURRENTKEY(Delegacion,
                          TourOperador,
                          Hotel,
                          "Fecha inicio contrato",
                          "Fecha final contrato");
      rConV.SETRANGE (Delegacion             , aux_delegacion);
      rConV.SETRANGE (TourOperador           , aux_touroperador);
      rConV.SETRANGE (Hotel                  , aux_hotel);
      rConV.SETRANGE (Confirmado             , TRUE);
      FOR fecha_trabajo := aux_fecha_entrada TO aux_fecha_salida - 1 DO BEGIN
        rConV.SETFILTER("Fecha inicio contrato", '<=%1', fecha_trabajo);
        rConV.SETFILTER("Fecha final contrato" , '>=%1', fecha_trabajo);
        IF rConV.FIND('-') THEN BEGIN
          rCupoV.SETRANGE (Delegacion         , aux_delegacion);
          rCupoV.SETRANGE ("N§ Contrato venta", rConV."N§ Contrato venta");
          rCupoV.SETRANGE ("Habitacion cupo"  , aux_habitacion);
          rCupoV.SETFILTER("Fecha desde"      , '<=%1', fecha_trabajo);
          rCupoV.SETFILTER("Fecha hasta"      , '>=%1', fecha_trabajo);
          rCupoV.SETRANGE (Activo             , TRUE);
          IF NOT rCupoV.FIND('-') THEN BEGIN
            ERROR(Text076+
                  Text008, aux_habitacion, aux_delegacion, rConV."N§ Contrato venta", fecha_trabajo);
          END;
        END
        ELSE BEGIN
          rConV.RESET;
          ERROR(Text006+
                Text003, aux_touroperador,
                aux_delegacion, aux_hotel, fecha_trabajo);
        END;
      END;
      IF busca_precio THEN BEGIN
        rConV.RESET;
        rConV.SETCURRENTKEY(Delegacion,
                            TourOperador,
                            Hotel,
                            "Fecha inicio contrato",
                            "Fecha final contrato");
        rConV.SETRANGE (Delegacion             , aux_delegacion);
        rConV.SETRANGE (TourOperador           , aux_touroperador);
        rConV.SETRANGE (Hotel                  , aux_hotel_precios);
        rConV.SETRANGE (Confirmado             , TRUE);
        FOR fecha_trabajo := aux_fecha_entrada TO aux_fecha_salida - 1 DO BEGIN
          rConV.SETFILTER("Fecha inicio contrato", '<=%1', fecha_trabajo);
          rConV.SETFILTER("Fecha final contrato" , '>=%1', fecha_trabajo);
          IF rConV.FIND('-') THEN BEGIN
            rPreV.SETRANGE(Delegacion     , aux_delegacion);
            rPreV.SETRANGE("N§ Contrato"  , rConV."N§ Contrato venta");
            rPreV.SETRANGE("Codigo Precio", rPreV."Codigo Precio"::Habitacion);
            rPreV.SETRANGE(Codigo         , aux_habitacion);
            rPreV.SETFILTER("Fecha desde" , '<=%1', fecha_trabajo);
            rPreV.SETFILTER("Fecha hasta" , '>=%1', fecha_trabajo);
            rPreV.SETRANGE(Activo         , TRUE);
            IF NOT rPreV.FIND('-') THEN
              ERROR(Text077+
                    Text008, aux_habitacion, aux_delegacion, rConV."N§ Contrato venta", fecha_trabajo);
          END
          ELSE BEGIN
            rConV.RESET;
            ERROR(Text006+
                  Text003, aux_touroperador,
                  aux_delegacion, aux_hotel_precios, fecha_trabajo);
          END;
        END;
      END;
    END;

    PROCEDURE busca_precio_regimen_venta@29(aux_touroperador@1103355000 : Code[10];aux_delegacion@1103355001 : Code[10];aux_hotel@1103355002 : Code[20];aux_fecha_entrada@1103355003 : Date;aux_fecha_salida@1103355004 : Date;aux_regimen@1103355005 : Code[10]);
    VAR
      rConV@1103355006 : Record 7009727;
      rPreV@1103355007 : Record 7009732;
      fecha_trabajo@1103355008 : Date;
    BEGIN
      // busca_precio_regimen_venta
      //
      rConV.RESET;
      rConV.SETCURRENTKEY(Delegacion,
                          TourOperador,
                          Hotel,
                          "Fecha inicio contrato",
                          "Fecha final contrato");
      rConV.SETRANGE (Delegacion             , aux_delegacion);
      rConV.SETRANGE (TourOperador           , aux_touroperador);
      rConV.SETRANGE (Hotel                  , aux_hotel);
      rConV.SETRANGE (Confirmado             , TRUE);
      FOR fecha_trabajo := aux_fecha_entrada TO aux_fecha_salida - 1 DO BEGIN
        rConV.SETFILTER("Fecha inicio contrato", '<=%1', fecha_trabajo);
        rConV.SETFILTER("Fecha final contrato" , '>=%1', fecha_trabajo);
        IF rConV.FIND('-') THEN BEGIN
          rPreV.SETRANGE (Delegacion     , aux_delegacion);
          rPreV.SETRANGE ("N§ Contrato"  , rConV."N§ Contrato venta");
          rPreV.SETRANGE ("Codigo Precio", rPreV."Codigo Precio"::Regimen);
          rPreV.SETRANGE (Codigo         , aux_regimen);
          rPreV.SETFILTER("Fecha desde"  , '<=%1', fecha_trabajo);
          rPreV.SETFILTER("Fecha hasta"  , '>=%1', fecha_trabajo);
          rPreV.SETRANGE (Activo         , TRUE);
          IF NOT rPreV.FIND('-') THEN
            ERROR(Text078+
                  Text008, aux_regimen, aux_delegacion, rConV."N§ Contrato venta", fecha_trabajo);
        END
        ELSE BEGIN
          rConV.RESET;
          ERROR(Text006+
                Text003, aux_touroperador,
                aux_delegacion, aux_hotel, fecha_trabajo);
        END;
      END;
    END;

    PROCEDURE copiar_oferta_compra@33(rPrecio@1103355000 : Record 7009738);
    VAR
      Precio@1103355001 : Record 7009738;
      rConC@1103355002 : Record 7009723;
      ventana@1103355003 : Dialog;
      fDesde@1103355004 : Date;
      fHasta@1103355005 : Date;
    BEGIN
      // copiar_oferta_compra
      //
      fDesde := 0D;
      fHasta := 0D;
      ventana.OPEN(Text079+
                   '\'+
                   Text080+
                   Text081);
      ventana.INPUT(1, fDesde);
      IF fDesde = 0D THEN
        EXIT;
      ventana.INPUT(2, fHasta);
      ventana.CLOSE;
      IF fHasta = 0D THEN
        EXIT;
      IF fDesde > fHasta THEN
        ERROR(Text082);
      IF rPrecio."Tipo Fechas" <> rPrecio."Tipo Fechas"::"Fecha venta" THEN BEGIN
        IF rConC.GET(rPrecio.Delegacion, rPrecio."N§ Contrato") THEN BEGIN
          IF (fDesde < rConC."Fecha inicio contrato") OR (fDesde > rConC."Fecha final contrato") THEN
            ERROR(Text083);
          IF (fHasta < rConC."Fecha inicio contrato") OR (fHasta > rConC."Fecha final contrato") THEN
            ERROR(Text084);
        END;
      END;
      CLEAR(Precio);
      Precio := rPrecio;
      Precio."Fecha desde" := fDesde;
      Precio."Fecha hasta" := fHasta;
      Precio.Activo := FALSE;
      Precio."Orden Precio" := 0;
      Precio.INSERT(TRUE);
      COMMIT;
      activar_oferta_precio_compra(Precio);
    END;

    PROCEDURE copiar_oferta_venta@34(rPrecio@1103355000 : Record 7009732);
    VAR
      Precio@1103355001 : Record 7009732;
      rConV@1103355002 : Record 7009727;
      ventana@1103355003 : Dialog;
      fDesde@1103355004 : Date;
      fHasta@1103355005 : Date;
    BEGIN
      // copiar_oferta_venta
      //
      fDesde := 0D;
      fHasta := 0D;
      ventana.OPEN(Text085+
                   '\'+
                   Text080+
                   Text081);
      ventana.INPUT(1, fDesde);
      IF fDesde = 0D THEN
        EXIT;
      ventana.INPUT(2, fHasta);
      ventana.CLOSE;
      IF fHasta = 0D THEN
        EXIT;
      IF fDesde > fHasta THEN
        ERROR(Text082);
      IF rPrecio."Tipo Fechas" <> rPrecio."Tipo Fechas"::"Fecha venta" THEN BEGIN
        IF rConV.GET(rPrecio.Delegacion, rPrecio."N§ Contrato") THEN BEGIN
          IF (fDesde < rConV."Fecha inicio contrato") OR (fDesde > rConV."Fecha final contrato") THEN
            ERROR(Text083);
          IF (fHasta < rConV."Fecha inicio contrato") OR (fHasta > rConV."Fecha final contrato") THEN
            ERROR(Text084);
        END;
      END;
      CLEAR(Precio);
      Precio := rPrecio;
      Precio."Fecha desde" := fDesde;
      Precio."Fecha hasta" := fHasta;
      Precio.Activo := FALSE;
      Precio."Orden Precio" := 0;
      Precio.INSERT(TRUE);
      COMMIT;
      activar_oferta_precio_venta(Precio);
    END;

    PROCEDURE copiar_precios_habitacion_comp@35(Precio@1103355000 : Record 7009738);
    VAR
      rPrecio@1103355001 : Record 7009738;
      rPrecio2@1103355002 : Record 7009738;
      rConv@1103355003 : Record 7009731;
      ventana@1103355004 : Dialog;
      w_habitacion@1103355005 : Code[10];
    BEGIN
      // copiar_precios_habitacion_comp
      //
      w_habitacion := '';
      ventana.OPEN(Text086+
                   '\'+
                   Text087);
      ventana.INPUT(1, w_habitacion);
      ventana.CLOSE;
      IF w_habitacion = '' THEN
        EXIT;
      rConv.RESET;
      rConv.SETRANGE(Delegacion       , Precio.Delegacion);
      rConv.SETRANGE("N§ Contrato"    , Precio."N§ Contrato");
      rConv.SETRANGE("Tipo contrato"  , rConv."Tipo contrato"::Compra);
      rConv.SETRANGE("Habitacion cupo", w_habitacion);
      IF NOT rConv.FIND('-') THEN
        ERROR(Text088,w_habitacion);
      rConv.RESET;

      rPrecio.RESET;
      rPrecio.SETRANGE(Delegacion     , Precio.Delegacion);
      rPrecio.SETRANGE("N§ Contrato"  , Precio."N§ Contrato");
      rPrecio.SETRANGE("Codigo Precio", Precio."Codigo Precio");
      rPrecio.SETRANGE(Codigo         , w_habitacion);
      IF rPrecio.FIND('-') THEN
        ERROR(Text089);

      rPrecio.RESET;
      rPrecio.SETRANGE(Delegacion     , Precio.Delegacion);
      rPrecio.SETRANGE("N§ Contrato"  , Precio."N§ Contrato");
      rPrecio.SETRANGE("Codigo Precio", Precio."Codigo Precio");
      rPrecio.SETRANGE(Codigo         , Precio.Codigo);
      IF rPrecio.FIND('-') THEN BEGIN
        REPEAT
          CLEAR(rPrecio2);
          rPrecio2 := rPrecio;
          rPrecio2.Codigo := w_habitacion;
          rPrecio2."Orden Precio" := 0;
          rPrecio2.Activo := FALSE;
          rPrecio2.INSERT(TRUE);
        UNTIL rPrecio.NEXT = 0;
      END;
    END;

    PROCEDURE copiar_precios_habitacion_vent@36(Precio@1103355000 : Record 7009732);
    VAR
      rPrecio@1103355001 : Record 7009732;
      rPrecio2@1103355002 : Record 7009732;
      rConv@1103355003 : Record 7009731;
      ventana@1103355004 : Dialog;
      w_habitacion@1103355005 : Code[10];
    BEGIN
      // copiar_precios_habitacion_vent
      //
      w_habitacion := '';
      ventana.OPEN(Text090+
                   '\'+
                   Text087);
      ventana.INPUT(1, w_habitacion);
      ventana.CLOSE;
      IF w_habitacion = '' THEN
        EXIT;
      rConv.RESET;
      rConv.SETRANGE(Delegacion       , Precio.Delegacion);
      rConv.SETRANGE("N§ Contrato"    , Precio."N§ Contrato");
      rConv.SETRANGE("Tipo contrato"  , rConv."Tipo contrato"::Venta);
      rConv.SETRANGE("Habitacion cupo", w_habitacion);
      IF NOT rConv.FIND('-') THEN
        ERROR(Text088,w_habitacion);
      rConv.RESET;

      rPrecio.RESET;
      rPrecio.SETRANGE(Delegacion     , Precio.Delegacion);
      rPrecio.SETRANGE("N§ Contrato"  , Precio."N§ Contrato");
      rPrecio.SETRANGE("Codigo Precio", Precio."Codigo Precio");
      rPrecio.SETRANGE(Codigo         , w_habitacion);
      IF rPrecio.FIND('-') THEN
        ERROR(Text089);

      rPrecio.RESET;
      rPrecio.SETRANGE(Delegacion     , Precio.Delegacion);
      rPrecio.SETRANGE("N§ Contrato"  , Precio."N§ Contrato");
      rPrecio.SETRANGE("Codigo Precio", Precio."Codigo Precio");
      rPrecio.SETRANGE(Codigo         , Precio.Codigo);
      IF rPrecio.FIND('-') THEN BEGIN
        REPEAT
          CLEAR(rPrecio2);
          rPrecio2 := rPrecio;
          rPrecio2.Codigo := w_habitacion;
          rPrecio2."Orden Precio" := 0;
          rPrecio2.Activo := FALSE;
          rPrecio2.INSERT(TRUE);
        UNTIL rPrecio.NEXT = 0;
      END;
    END;

    PROCEDURE activacion_masiva_cupos_compra@39();
    VAR
      rCupo@1103355000 : Record 7009739;
      rCon@1103355001 : Record 7009723;
      ventana@1103355002 : Dialog;
    BEGIN
      // activacion_masiva_cupos_compra
      //
      rCupo.RESET;
      IF rCupo.FIND('-') THEN BEGIN
        ventana.OPEN(Text091+
                     Text092+
                     Text093+
                     Text094+
                     Text095);
        REPEAT
          IF rCon.GET(rCupo.Delegacion, rCupo."N§ Contrato compra") THEN BEGIN
            IF rCon.Confirmado THEN BEGIN
              ventana.UPDATE(1, rCupo."N§ Contrato compra");
              ventana.UPDATE(2, rCupo."Habitacion cupo");
              ventana.UPDATE(3, rCupo."Fecha desde");
              ventana.UPDATE(4, rCupo."Fecha hasta");
              rCupo.Activo := activar_cupo_compra(rCupo, rCon);
              rCupo.MODIFY;
            END;
          END;
        UNTIL rCupo.NEXT = 0;
      END;
      rCupo.RESET;
    END;

    PROCEDURE activacion_masiva_cupos_venta@40();
    VAR
      rCupo@1103355000 : Record 7009730;
      rCon@1103355001 : Record 7009727;
      ventana@1103355002 : Dialog;
    BEGIN
      // activacion_masiva_cupos_venta
      //
      rCupo.RESET;
      IF rCupo.FIND('-') THEN BEGIN
        ventana.OPEN(Text096+
                     Text097+
                     Text098+
                     Text099+
                     Text100);
        REPEAT
          IF rCon.GET(rCupo.Delegacion, rCupo."N§ Contrato venta") THEN BEGIN
            IF rCon.Confirmado THEN BEGIN
              ventana.UPDATE(1, rCupo."N§ Contrato venta");
              ventana.UPDATE(2, rCupo."Habitacion cupo");
              ventana.UPDATE(3, rCupo."Fecha desde");
              ventana.UPDATE(4, rCupo."Fecha hasta");
              rCupo.Activo := activar_cupo_venta(rCupo, rCon);
              rCupo.MODIFY;
            END;
          END;
        UNTIL rCupo.NEXT = 0;
      END;
      rCupo.RESET;
    END;

    PROCEDURE buscar_nombre_hotel_compra@43(VAR rConC@1103355000 : Record 7009723);
    VAR
      rHot@1103355001 : Record 7009724;
      ventana@1103355002 : Dialog;
      w_nombre@1103355003 : Text[30];
      w_hoteles@1103355004 : Text[250];
    BEGIN
      // buscar_nombre_hotel_compra


      ventana.OPEN(Text101);
      ventana.INPUT(1, w_nombre);
      ventana.CLOSE;

      w_nombre := UPPERCASE(w_nombre);

      rHot.RESET;
      rHot.SETFILTER(Nombre, w_nombre);
      IF rHot.FINDSET THEN BEGIN
        w_hoteles := rHot.Hotel;
        WHILE rHot.NEXT <> 0 DO BEGIN
          w_hoteles := w_hoteles + '|' + rHot.Hotel;
          IF STRLEN(w_hoteles) > (MAXSTRLEN(w_hoteles) - 11) THEN
            ERROR( Text102 );
        END;
        rConC.SETFILTER(Hotel, w_hoteles);
      END;
    END;

    PROCEDURE buscar_nombre_hotel_venta@44(VAR rConV@1103355000 : Record 7009727);
    VAR
      rHot@1103355001 : Record 7009724;
      ventana@1103355002 : Dialog;
      w_nombre@1103355003 : Text[30];
      w_hoteles@1103355004 : Text[250];
    BEGIN
      // buscar_nombre_hotel_venta

      ventana.OPEN(Text101);
      ventana.INPUT(1, w_nombre);
      ventana.CLOSE;

      w_nombre := UPPERCASE(w_nombre);
      rHot.RESET;
      rHot.SETFILTER(Nombre, w_nombre);
      IF rHot.FINDSET THEN BEGIN
        w_hoteles := rHot.Hotel;
        WHILE rHot.NEXT <> 0 DO BEGIN
          w_hoteles := w_hoteles + '|' + rHot.Hotel;
          IF STRLEN(w_hoteles) > (MAXSTRLEN(w_hoteles) - 11) THEN
            ERROR( Text102 );
        END;
        rConV.SETFILTER(Hotel, w_hoteles);
      END;
    END;

    PROCEDURE copiar_cupos_compra@45(cupo@1103355000 : Record 7009739);
    VAR
      rCupo@1103355001 : Record 7009739;
      rCupo2@1103355002 : Record 7009739;
      rConv@1103355003 : Record 7009731;
      ventana@1103355004 : Dialog;
      w_habitacion@1103355005 : Code[10];
    BEGIN
      // copiar_cupos_compra

      w_habitacion := '';
      ventana.OPEN(Text103+
                   '\'+
                   Text104);
      ventana.INPUT(1, w_habitacion);
      ventana.CLOSE;
      IF w_habitacion = '' THEN
        EXIT;
      rConv.RESET;
      rConv.SETRANGE(Delegacion       , cupo.Delegacion);
      rConv.SETRANGE("N§ Contrato"    , cupo."N§ Contrato compra");
      rConv.SETRANGE("Tipo contrato"  , rConv."Tipo contrato"::Compra);
      rConv.SETRANGE("Habitacion cupo", w_habitacion);
      IF NOT rConv.FIND('-') THEN
        ERROR(Text088,w_habitacion);
      rConv.RESET;

      rCupo.RESET;
      rCupo.SETRANGE(Delegacion          , cupo.Delegacion);
      rCupo.SETRANGE("N§ Contrato compra", cupo."N§ Contrato compra");
      rCupo.SETRANGE("Habitacion cupo"   , cupo."Habitacion cupo");
      IF rCupo.FIND('-') THEN BEGIN
        REPEAT
          CLEAR(rCupo2);
          rCupo2 := rCupo;
          rCupo2.VALIDATE("Habitacion cupo", w_habitacion);
          rCupo2.Activo := FALSE;
          rCupo2.INSERT(TRUE);
        UNTIL rCupo.NEXT = 0;
      END;
      rCupo.RESET;
    END;

    PROCEDURE copiar_cupos_venta@46(cupo@1103355000 : Record 7009730);
    VAR
      rCupo@1103355001 : Record 7009730;
      rCupo2@1103355002 : Record 7009730;
      rConv@1103355003 : Record 7009731;
      ventana@1103355004 : Dialog;
      w_habitacion@1103355005 : Code[10];
    BEGIN
      // copiar_cupos_venta
      //
      w_habitacion := '';
      ventana.OPEN(Text105+
                   '\'+
                   Text104);
      ventana.INPUT(1, w_habitacion);
      ventana.CLOSE;
      IF w_habitacion = '' THEN
        EXIT;
      rConv.RESET;
      rConv.SETRANGE(Delegacion       , cupo.Delegacion);
      rConv.SETRANGE("N§ Contrato"    , cupo."N§ Contrato venta");
      rConv.SETRANGE("Tipo contrato"  , rConv."Tipo contrato"::Venta);
      rConv.SETRANGE("Habitacion cupo", w_habitacion);
      IF NOT rConv.FIND('-') THEN
        ERROR(Text088,w_habitacion);
      rConv.RESET;

      rCupo.RESET;
      rCupo.SETRANGE(Delegacion         , cupo.Delegacion);
      rCupo.SETRANGE("N§ Contrato venta", cupo."N§ Contrato venta");
      rCupo.SETRANGE("Habitacion cupo"  , cupo."Habitacion cupo");
      IF rCupo.FIND('-') THEN BEGIN
        REPEAT
          CLEAR(rCupo2);
          rCupo2 := rCupo;
          rCupo2.VALIDATE("Habitacion cupo", w_habitacion);
          rCupo2.Activo := FALSE;
          rCupo2.INSERT(TRUE);
        UNTIL rCupo.NEXT = 0;
      END;
      rCupo.RESET;
    END;

    PROCEDURE desconfirmar_contrato_compra@47() : Boolean;
    BEGIN
      // desconfirmar_contrato_compra

      cFunSeg.TienePermiso(Text021, TRUE);

      EXIT(FALSE);
    END;

    PROCEDURE desconfirmar_contrato_venta@48() : Boolean;
    VAR
      rUsu@1103355000 : Record 2000000002;
      rPer@1103355001 : Record 7010090;
    BEGIN
      // desconfirmar_contrato_venta

      cFunSeg.TienePermiso(Text023, TRUE);

      EXIT(FALSE);
    END;

    PROCEDURE comprobar_oferta_precio_compra@49(precio_comprobado@1103355000 : Record 7009738;VAR precio_solapa@1103355001 : Record 7009738);
    VAR
      rPrecio@1103355002 : Record 7009738;
    BEGIN
      // comprobar_oferta_precio_compra
      //
      rPrecio.COPY(precio_solapa);

      rPrecio.SETFILTER("2¦ Fecha desde" , '<=%1', precio_comprobado."2¦ Fecha desde");
      rPrecio.SETFILTER("2¦ Fecha hasta" , '>=%1', precio_comprobado."2¦ Fecha desde");
      IF rPrecio.FIND('-') THEN
        comprobar_oferta_compra_edades(precio_comprobado, rPrecio);

      rPrecio.SETFILTER("2¦ Fecha desde" , '<=%1', precio_comprobado."2¦ Fecha hasta");
      rPrecio.SETFILTER("2¦ Fecha hasta" , '>=%1', precio_comprobado."2¦ Fecha hasta");
      IF rPrecio.FIND('-') THEN
        comprobar_oferta_compra_edades(precio_comprobado, rPrecio);

      rPrecio.SETFILTER("2¦ Fecha desde" , '>=%1', precio_comprobado."2¦ Fecha desde");
      rPrecio.SETFILTER("2¦ Fecha hasta" , '<=%1', precio_comprobado."2¦ Fecha hasta");
      IF rPrecio.FIND('-') THEN
        comprobar_oferta_compra_edades(precio_comprobado, rPrecio);
    END;

    PROCEDURE comprobar_oferta_compra_edades@1103355001(precio_comprobado@1103355001 : Record 7009738;VAR precio_solapa@1103355000 : Record 7009738);
    VAR
      rPrecio@1103355002 : Record 7009738;
    BEGIN
      // comprobar_oferta_compra_edades

      rPrecio.COPY(precio_solapa);

      rPrecio.SETFILTER("Edad desde", '<=%1', precio_comprobado."Edad desde");
      rPrecio.SETFILTER("Edad hasta", '>=%1', precio_comprobado."Edad desde");
        IF rPrecio.FIND('-') THEN BEGIN
          IF comprobar_dia_semana_compra(precio_comprobado, rPrecio) THEN BEGIN
            ERROR(Text107);
          END;
        END;
        rPrecio.SETFILTER("Edad desde", '<=%1', precio_comprobado."Edad hasta");
        rPrecio.SETFILTER("Edad hasta", '>=%1', precio_comprobado."Edad hasta");
        IF rPrecio.FIND('-') THEN BEGIN
          IF comprobar_dia_semana_compra(precio_comprobado, rPrecio) THEN BEGIN
            ERROR(Text107);
          END;
        END;
        rPrecio.SETFILTER("Edad desde", '>=%1', precio_comprobado."Edad desde");
        rPrecio.SETFILTER("Edad hasta", '<=%1', precio_comprobado."Edad hasta");
        IF rPrecio.FIND('-') THEN BEGIN
          IF comprobar_dia_semana_compra(precio_comprobado, rPrecio) THEN BEGIN
            ERROR(Text107);
          END;
        END;
    END;

    PROCEDURE comprobar_oferta_precio_venta@60(precio_comprobado@1103355000 : Record 7009732;VAR precio_solapa@1103355001 : Record 7009732);
    VAR
      rPrecio@1103355002 : Record 7009732;
    BEGIN
      // comprobar_oferta_precio_venta
      //
      rPrecio.COPY(precio_solapa);

      rPrecio.SETFILTER("2¦ Fecha desde" , '<=%1', precio_comprobado."2¦ Fecha desde");
      rPrecio.SETFILTER("2¦ Fecha hasta" , '>=%1', precio_comprobado."2¦ Fecha desde");
      IF rPrecio.FIND('-') THEN
        ERROR(Text107);

      rPrecio.SETFILTER("2¦ Fecha desde" , '<=%1', precio_comprobado."2¦ Fecha hasta");
      rPrecio.SETFILTER("2¦ Fecha hasta" , '>=%1', precio_comprobado."2¦ Fecha hasta");
      IF rPrecio.FIND('-') THEN
        ERROR(Text107);

      rPrecio.SETFILTER("2¦ Fecha desde" , '>=%1', precio_comprobado."2¦ Fecha desde");
      rPrecio.SETFILTER("2¦ Fecha hasta" , '<=%1', precio_comprobado."2¦ Fecha hasta");
      IF rPrecio.FIND('-') THEN
        ERROR(Text107);
    END;

    PROCEDURE comprobar_dia_semana_compra@52(VAR prPre@1103355000 : Record 7009738;VAR prPreSolap@1103355001 : Record 7009738) : Boolean;
    BEGIN
      // comprobar_dia_semana_compra
      //
      IF NOT prPre."Aplicacion x dia" THEN
        EXIT(TRUE);

      IF prPre."Aplica Lunes" THEN
        IF prPreSolap."Aplica Lunes" THEN
          EXIT(TRUE);

      IF prPre."Aplica Martes" THEN
        IF prPreSolap."Aplica Martes" THEN
          EXIT(TRUE);

      IF prPre."Aplica Miercoles" THEN
        IF prPreSolap."Aplica Miercoles" THEN
          EXIT(TRUE);

      IF prPre."Aplica Jueves" THEN
        IF prPreSolap."Aplica Jueves" THEN
          EXIT(TRUE);

      IF prPre."Aplica Viernes" THEN
        IF prPreSolap."Aplica Viernes" THEN
          EXIT(TRUE);

      IF prPre."Aplica Sabado" THEN
        IF prPreSolap."Aplica Sabado" THEN
          EXIT(TRUE);

      IF prPre."Aplica Domingo" THEN
        IF prPreSolap."Aplica Domingo" THEN
          EXIT(TRUE);

      EXIT(FALSE);
    END;

    PROCEDURE ComprobarFechas@1103355000(pwFechaFirma@1103355000 : Date;pwFechaInicio@1103355001 : Date;pwFechaFinal@1103355002 : Date);
    BEGIN

      IF (pwFechaFirma = 0D) OR
         (pwFechaInicio = 0D) OR
         (pwFechaFinal = 0D) THEN
        ERROR(Text110);

      IF pwFechaInicio >= pwFechaFinal THEN
        ERROR(Text110);
    END;

    PROCEDURE GenerarSeguimientoCC@1103355002();
    VAR
      lwFecha@1103355000 : Date;
      lrContC@1103355001 : Record 7009723;
      lrSeg@1103355002 : Record 7009995;
      lwCont@1103355003 : Integer;
      lwTotal@1103355004 : Integer;
    BEGIN
      // GenerarSeguimientoCC

      CLEAR(lwFecha);

      wVentana.OPEN(Text113);
      wVentana.INPUT(1,lwFecha);
      wVentana.CLOSE;

      IF lwFecha=0D THEN
        ERROR(Text114);

      IF NOT CONFIRM(Text112, FALSE, lwFecha) THEN
        EXIT;


      CLEAR(lrContC);
      lrContC.SETCURRENTKEY(Hotel,TourOperador,"Fecha inicio contrato");
      lrContC.SETFILTER("Fecha inicio contrato", '>=%1', lwFecha);
      IF lrContC.FINDSET THEN BEGIN
        wVentana.OPEN('@1@@@@@@@@@@');
        lwTotal := lrContC.COUNT;
        lwCont  := 0;
        REPEAT
          // Borramos y los volvemos a  generar
          CLEAR(lrSeg);
          lrSeg.SETCURRENTKEY(Delegacion,"No Contrato");
          lrSeg.SETRANGE(Delegacion   , lrContC.Delegacion);
          lrSeg.SETRANGE("No Contrato", lrContC."N§ Contrato compra");
          lrSeg.DELETEALL;
          lrContC.CrearSeguimiento;
          // Los creamos y marcamos todos como completados
          lrSeg.MODIFYALL(Completado, TRUE);
          lwCont +=1;
          wVentana.UPDATE(1, ROUND(lwCont/lwTotal*10000,1));
        UNTIL lrContC.NEXT=0;
        wVentana.CLOSE;
      END;
    END;

    PROCEDURE ComprobarSolapFechasyEdades@1103355006(VAR prPrecio@1103355000 : Record 7009738);
    VAR
      lrPrecios@1103355001 : Record 7009738;
      lrPreciosTMP@1103355002 : TEMPORARY Record 7009738;
    BEGIN
      // ComprobarSolapFechasyEdades
      // Comprobamos que en los precios de regimen no se solapen las edades

      IF prPrecio."Codigo Precio" <> prPrecio."Codigo Precio"::Regimen THEN
        EXIT;

      lrPrecios.RESET;
      lrPrecios.SETCURRENTKEY(Delegacion   ,"N§ Contrato" ,"Codigo Precio", Codigo,
                              "Fecha desde", "Fecha hasta", "Edad desde"  , "Edad hasta");
      lrPrecios.SETRANGE (Delegacion            , prPrecio.Delegacion);
      lrPrecios.SETRANGE ("N§ Contrato"         , prPrecio."N§ Contrato");
      lrPrecios.SETRANGE ("Codigo Precio"       , prPrecio."Codigo Precio");
      lrPrecios.SETRANGE (Codigo                , prPrecio.Codigo);
      lrPrecios.SETRANGE ("Tipo Habitacion"     , prPrecio."Tipo Habitacion");
      lrPrecios.SETFILTER("Orden Precio", '<>%1', prPrecio."Orden Precio");

      IF prPrecio."Touroperador aplicacion" <> '' THEN
        lrPrecios.SETRANGE("Touroperador aplicacion", prPrecio."Touroperador aplicacion");

      lrPrecios.SETRANGE (Activo           , TRUE);

      // los meto en un temporary ya que hay que hacer varias consultas.

      lrPrecios.SETFILTER("Fecha desde", '<=%1', prPrecio."Fecha desde");
      lrPrecios.SETFILTER("Fecha hasta", '>=%1', prPrecio."Fecha desde");

      IF lrPrecios.FINDSET THEN BEGIN
        REPEAT
          lrPreciosTMP := lrPrecios;
          lrPreciosTMP.INSERT;
        UNTIL lrPrecios.NEXT = 0;
      END;

      lrPrecios.SETFILTER("Fecha desde", '<=%1', prPrecio."Fecha hasta");
      lrPrecios.SETFILTER("Fecha hasta", '>=%1', prPrecio."Fecha hasta");

      IF lrPrecios.FINDSET THEN BEGIN
        REPEAT
          lrPreciosTMP := lrPrecios;
          IF NOT lrPreciosTMP.FIND THEN
            lrPreciosTMP.INSERT;
        UNTIL lrPrecios.NEXT = 0;
      END;

      lrPrecios.SETFILTER("Fecha desde", '>=%1', prPrecio."Fecha desde");
      lrPrecios.SETFILTER("Fecha hasta", '<=%1', prPrecio."Fecha hasta");

      IF lrPrecios.FINDSET THEN BEGIN
        REPEAT
        lrPreciosTMP := lrPrecios;
        IF NOT lrPreciosTMP.FIND THEN
          lrPreciosTMP.INSERT;
        UNTIL lrPrecios.NEXT = 0;
      END;

      // Ahora comprobamos el solapamiento de edades sobre el temporary.

      lrPreciosTMP.RESET;
      lrPreciosTMP.SETCURRENTKEY(Delegacion   ,"N§ Contrato" ,"Codigo Precio", Codigo,
                                 "Fecha desde", "Fecha hasta", "Edad desde"  , "Edad hasta");

      lrPreciosTMP.SETFILTER("Edad desde", '<=%1', prPrecio."Edad desde");
      lrPreciosTMP.SETFILTER("Edad hasta", '>=%1', prPrecio."Edad desde");

      IF NOT lrPreciosTMP.ISEMPTY THEN
        ERROR(Text030);

      lrPreciosTMP.SETFILTER("Edad desde", '<=%1', prPrecio."Edad hasta");
      lrPreciosTMP.SETFILTER("Edad hasta", '>=%1', prPrecio."Edad hasta");

      IF NOT lrPreciosTMP.ISEMPTY THEN
        ERROR(Text030);

      lrPreciosTMP.SETFILTER("Edad desde", '>=%1', prPrecio."Edad desde");
      lrPreciosTMP.SETFILTER("Edad hasta", '<=%1', prPrecio."Edad hasta");

      IF NOT lrPreciosTMP.ISEMPTY THEN
        ERROR(Text030);
    END;

    PROCEDURE ComprobarSolapFechas@1103355016(VAR prPrecio@1103355000 : Record 7009738);
    VAR
      lrPrecios@1103355001 : Record 7009738;
    BEGIN
      // ComprobarSolapFechas

      lrPrecios.RESET;
      lrPrecios.SETCURRENTKEY(Delegacion   ,"N§ Contrato" ,"Codigo Precio", Codigo,
                              "Fecha desde", "Fecha hasta", "Edad desde"  , "Edad hasta");
      lrPrecios.SETRANGE (Delegacion            , prPrecio.Delegacion);
      lrPrecios.SETRANGE ("N§ Contrato"         , prPrecio."N§ Contrato");
      lrPrecios.SETRANGE ("Codigo Precio"       , prPrecio."Codigo Precio");
      lrPrecios.SETRANGE (Codigo                , prPrecio.Codigo);
      lrPrecios.SETRANGE ("Tipo Habitacion"     , prPrecio."Tipo Habitacion");
      lrPrecios.SETFILTER("Orden Precio", '<>%1', prPrecio."Orden Precio");

      IF prPrecio."Touroperador aplicacion" <> '' THEN
        lrPrecios.SETRANGE("Touroperador aplicacion", prPrecio."Touroperador aplicacion");

      lrPrecios.SETRANGE (Activo           , TRUE);

      // los meto en un temporary ya que hay que hacer varias consultas.

      lrPrecios.SETFILTER("Fecha desde", '<=%1', prPrecio."Fecha desde");
      lrPrecios.SETFILTER("Fecha hasta", '>=%1', prPrecio."Fecha desde");

      IF NOT lrPrecios.ISEMPTY THEN
        ERROR(Text030);

      lrPrecios.SETFILTER("Fecha desde", '<=%1', prPrecio."Fecha hasta");
      lrPrecios.SETFILTER("Fecha hasta", '>=%1', prPrecio."Fecha hasta");

      IF NOT lrPrecios.ISEMPTY THEN
        ERROR(Text030);

      lrPrecios.SETFILTER("Fecha desde", '>=%1', prPrecio."Fecha desde");
      lrPrecios.SETFILTER("Fecha hasta", '<=%1', prPrecio."Fecha hasta");

      IF NOT lrPrecios.ISEMPTY THEN
        ERROR(Text030);
    END;

    PROCEDURE ActivarPrecioRegimenCompra@1103355003(VAR prPrecio@1103355000 : Record 7009738) : Boolean;
    VAR
      lrContratoCompra@1103355003 : Record 7009723;
    BEGIN
      // ActivarPrecioRegimenCompra

      IF (prPrecio.Delegacion = '') OR
         (prPrecio."N§ Contrato" = '') OR
         (prPrecio.Codigo = '') OR
         (prPrecio."Fecha desde" = 0D) OR
         (prPrecio."Fecha hasta" = 0D) THEN
        EXIT;

      ComprobarSolapFechasyEdades(prPrecio);

      IF NOT cFunSeg.TienePermiso(Text021, FALSE) THEN
        EXIT(FALSE);

      IF lrContratoCompra.GET(prPrecio.Delegacion, prPrecio."N§ Contrato") THEN BEGIN
        IF NOT lrContratoCompra.Confirmado THEN BEGIN
          MESSAGE(Text031);
          EXIT(FALSE);
        END;
      END;
      EXIT(TRUE);
    END;

    PROCEDURE ActivarPrecioHabitacionCompra@1103355004(VAR prPrecio@1103355000 : Record 7009738) : Boolean;
    VAR
      lrContratoCompra@1103355003 : Record 7009723;
    BEGIN
      // ActivarPrecioHabitacionCompra

      IF (prPrecio.Delegacion = '') OR
         (prPrecio."N§ Contrato" = '') OR
         (prPrecio.Codigo = '') OR
         (prPrecio."Fecha desde" = 0D) OR
         (prPrecio."Fecha hasta" = 0D) THEN
        EXIT;

      ComprobarSolapFechas(prPrecio);

      IF NOT cFunSeg.TienePermiso(Text021, FALSE) THEN
        EXIT(FALSE);

      IF lrContratoCompra.GET(prPrecio.Delegacion, prPrecio."N§ Contrato") THEN BEGIN
        IF NOT lrContratoCompra.Confirmado THEN BEGIN
          MESSAGE(Text031);
          EXIT(FALSE);
        END;
      END;

      EXIT(TRUE);
    END;

    PROCEDURE CopiarHandlingMasivo@1100253000(prHandling@1100253000 : Record 7009733);
    VAR
      lrCon@1100253001 : Record 7009727;
      lrConBase@1100253004 : Record 7009727;
      lrHandling@1100253003 : Record 7009733;
      lfCon@1100253002 : Form 7009743;
    BEGIN
      // CopiarHandlingMasivo

      //. Comprobamos si el handling que vamos a tomar como base esta rellenado correctamente

      IF NOT prHandling.Activo THEN
        EXIT;

      IF NOT lrConBase.GET(prHandling.Delegacion, prHandling."N§ Contrato") THEN
        EXIT;

      //. Abrir una consulta de contratos de venta para que el usuario seleccione los contratos de destino

      lrCon.RESET;
      lrCon.FILTERGROUP(2);
      lrCon.SETFILTER("Fecha final contrato", '>=%1', TODAY);
      lrCon.SETRANGE (Confirmado            , TRUE);
      lrCon.SETFILTER("N§ Contrato venta"   , '<>%1', prHandling."N§ Contrato");

      //. Si estamos copiando el precio especial para un codigo de hotel Touroperador
      //. solo dejar seleccionar los que pertenecen al mismo hotel del contrato

      IF prHandling."Hotel TO" <> '' THEN
        lrCon.SETRANGE(Hotel, lrConBase.Hotel);
      lrCon.FILTERGROUP(0);

      CLEAR(lfCon);
      lfCon.SETTABLEVIEW(lrCon);
      lfCon.SETRECORD(lrCon);
      lfCon.LOOKUPMODE(TRUE);
      IF lfCon.RUNMODAL <> ACTION::LookupOK THEN
        EXIT;

      lfCon.RetornaSeleccion(lrCon);
      IF lrCon.FINDSET THEN BEGIN
        REPEAT
          lrHandling.TRANSFERFIELDS(prHandling);
          lrHandling."N§ Contrato" := lrCon."N§ Contrato venta";
          lrHandling.INSERT(TRUE);

          activar_handling_fee(lrHandling)
        UNTIL lrCon.NEXT = 0;
        MESSAGE(Text115);
      END
      ELSE
        MESSAGE(Text116);
    END;

    BEGIN
    {
      ## AJS 27.05.2009

        .- He modificado las rutinas activar_cupo_compra y activar_cupo_venta para que no se
           creen los registros diarios en funcion de un parametro

      ## AJS 26.06.2009

        .- En la funcion activar_oferta_precio_compra he incluido el filtro por Hotel oferta especial

      ## AJF 29/06/09

        .- Modificados los par metros que hacen referencia a c¢digos de hotel de varias funciones de code10 a code20.

      JPT 09/08/10 Relleno nuevo campo "Grupo Touroperador" en "activar_cupo_compra".

      $001 AJS 21112011 Modificacion temporal para que busque automaticamente contratos para rewe en reservas a partir
                        de 01/05/2012D

      $002 AJS 14122011 Modifico la funcion copiar_contrato_hotel_compra para que el usuario pueda seleccionar una
                        lista de touroperadores

      $003 AJS 21122011 Elimino el rellenado del campo Cod. Serie de los contratos

      $004 AJS 17012012 Modifico las funciones Divide_Periodo_Release y Divide_Periodo_Release_Venta para evitar que salte
                        el error de cupo solapado, borrando el cupo existente antes de crear las nuevas lineas.

      $005 AJS 14032012 Modifico la funcion activar_handling_fee para incluir el control de solapamiento de los
                        precios "Sin Transfer"

      $006 AJS 06052012 Modifico la funcion precios_compra_compra para que las fechas no queden en blanco si se hay un cambio
                        de fechas en la copia del contrato

      $007 AJS 24122012 Modifico las funciones de copia de contrato para que no pidan nuevo numero de contrato porque no es
                        operativo

      $008 AJS 27062014 Elimino las variables de Booking compra y Booking venta
    }
    END.
  }
}
