OBJECT Codeunit 449 Job Queue Start Codeunit
{
  OBJECT-PROPERTIES
  {
    Date=14/02/08;
    Time=12:00:00;
    Version List=NAVW15.00.01;
  }
  PROPERTIES
  {
    TableNo=472;
    OnRun=VAR
            AllObjWithCaption@1001 : Record 2000000058;
            MemberOf@1000 : Record 2000000003;
            WinAccControl@1002 : Record 2000000053;
            HasPermission@1004 : Boolean;
          BEGIN
            HasPermission := MemberOf.ISEMPTY AND WinAccControl.ISEMPTY;
            IF NOT HasPermission AND NOT MemberOf.ISEMPTY THEN
              HasPermission := HasDBPermission("User ID","Object Type to Run","Object ID to Run");
            IF NOT HasPermission THEN
              HasPermission := HasWinPermission("User ID","Object Type to Run","Object ID to Run");
            IF NOT HasPermission THEN BEGIN
              IF AllObjWithCaption.GET("Object Type to Run","Object ID to Run") THEN;
              ERROR(Text001,"User ID","Object Type to Run","Object ID to Run",AllObjWithCaption."Object Caption");
            END;

            CASE "Object Type to Run" OF
              "Object Type to Run"::Codeunit:
                CODEUNIT.RUN("Object ID to Run",Rec);
              "Object Type to Run"::Report:
                REPORT.RUN("Object ID to Run",FALSE);
            END;
          END;

  }
  CODE
  {
    VAR
      Text001@1000 : TextConst 'ENU=User %1 has not been set up to be allowed to run %2 %3 - %4.;ESP=El usuario %1 no se ha configurado para poder ejecutar %2 %3 - %4.';

    LOCAL PROCEDURE HasDBPermission@1(UserID2@1006 : Text[65];ObjectType@1000 : Integer;ObjectID@1001 : Integer) : Boolean;
    VAR
      Permission@1004 : Record 2000000005;
      MemberOf@1005 : Record 2000000003;
      MorePermissions@1003 : Boolean;
      HasPermission@1002 : Boolean;
    BEGIN
      HasPermission := MemberOf.GET(UserID2,'SUPER',COMPANYNAME);
      IF NOT HasPermission THEN
        HasPermission := MemberOf.GET(UserID2,'SUPER','');
      IF HasPermission THEN
        EXIT(TRUE);

      Permission.SETRANGE("Object Type",ObjectType);
      Permission.SETRANGE("Object ID",ObjectID);
      Permission.SETRANGE("Execute Permission",Permission."Execute Permission"::Yes);
      IF Permission.FINDSET THEN
        REPEAT
          HasPermission := MemberOf.GET(UserID2,Permission."Role ID",COMPANYNAME);
          IF NOT HasPermission THEN
            HasPermission := MemberOf.GET(UserID2,Permission."Role ID",'');
        UNTIL HasPermission OR (Permission.NEXT = 0);
      EXIT(HasPermission);
    END;

    LOCAL PROCEDURE HasWinPermission@2(UserId2@1002 : Text[65];ObjectType@1000 : Integer;ObjectID@1001 : Integer) : Boolean;
    VAR
      WinLogin@1005 : Record 2000000054;
      WinLogin2@1009 : Record 2000000054;
      WinAccessControl@1006 : Record 2000000053;
      Permission@1008 : Record 2000000005;
      LoginManagement@1010 : Codeunit 418;
      Found@1007 : Boolean;
      MorePermissions@1004 : Boolean;
      HasPermission@1003 : Boolean;
    BEGIN
      IF WinLogin2.FINDSET THEN
        REPEAT
          WinLogin2.CALCFIELDS(ID);
          Found := UPPERCASE(LoginManagement.ShortUserID(WinLogin2.ID)) = UPPERCASE(UserId2);
          IF Found THEN
            WinLogin := WinLogin2;
        UNTIL Found OR (WinLogin2.NEXT = 0);
      IF NOT Found THEN
        EXIT(FALSE);

      HasPermission := WinAccessControl.GET(WinLogin.SID,'SUPER',COMPANYNAME);
      IF NOT HasPermission THEN
        HasPermission := WinAccessControl.GET(WinLogin.SID,'SUPER','');
      IF HasPermission THEN
        EXIT(TRUE);

      Permission.SETRANGE("Object Type",ObjectType);
      Permission.SETRANGE("Object ID",ObjectID);
      Permission.SETRANGE("Execute Permission",Permission."Execute Permission"::Yes);
      IF Permission.FINDSET THEN
        REPEAT
          HasPermission := WinAccessControl.GET(WinLogin.SID,Permission."Role ID",COMPANYNAME);
          IF NOT HasPermission THEN
            HasPermission := WinAccessControl.GET(WinLogin.SID,Permission."Role ID",'');
        UNTIL HasPermission OR (Permission.NEXT = 0);
      EXIT(HasPermission);
    END;

    BEGIN
    END.
  }
}
