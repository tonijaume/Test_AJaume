OBJECT Codeunit 99000853 Calc. Low-level code
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=NAVW16.00.01;
  }
  PROPERTIES
  {
    OnRun=BEGIN
            FindTopLevel;
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Calculate low-level code;ESP=Calc. c¢d. nivel m s bajo';
      Text001@1001 : TextConst 'ENU=No. #2################## @3@@@@@@@@@@@@@;ESP=No. #2################## @3@@@@@@@@@@@@@';
      Text002@1002 : TextConst 'ENU=Top-Level Items;ESP=Productos de nivel superior';
      Text003@1003 : TextConst 'ENU=BOMs;ESP=Listado de L.M.';
      HideDialogs@1007 : Boolean;

    PROCEDURE FindTopLevel@1();
    VAR
      ProdBOMLine@1000 : Record 99000772;
      Item@1001 : Record 27;
      ProdBOMHeader@1002 : Record 99000771;
      Window@1004 : Dialog;
      NoofItems@1003 : Integer;
    BEGIN
      NoofItems := 0;
      IF NOT HideDialogs THEN
        IF NOT CONFIRM(Text000,FALSE) THEN
          EXIT;
      Window.OPEN(
        '#1################## \\' +
        Text001);
      Window.UPDATE(1,Text002);

      Item.LOCKTABLE;
      Item.MODIFYALL("Low-Level Code",0);
      ProdBOMHeader.LOCKTABLE;
      ProdBOMHeader.MODIFYALL("Low-Level Code",0);

      ProdBOMLine.SETCURRENTKEY(Type,"No.");
      IF Item.FINDSET THEN
        REPEAT
          Window.UPDATE(2,Item."No.");
          Window.UPDATE(3,ROUND(NoofItems / Item.COUNT * 10000,1));
          ProdBOMLine.SETRANGE("No.",Item."No.");
          ProdBOMLine.SETRANGE(Type,ProdBOMLine.Type::Item);
          IF ProdBOMLine.ISEMPTY THEN BEGIN
            // handle items which are not part of any BOMs
            IF ProdBOMHeader.GET(Item."Production BOM No.") THEN
              CalcLevelsForBOM(ProdBOMHeader);
          END ELSE
            REPEAT
              // handle items which are part of un-certified BOMs
              IF ProdBOMHeader.GET(ProdBOMLine."Production BOM No.") THEN
                IF ProdBOMHeader.Status <> ProdBOMHeader.Status::Certified THEN
                  IF ProdBOMHeader.GET(Item."Production BOM No.") THEN
                    CalcLevelsForBOM(ProdBOMHeader);
            UNTIL ProdBOMLine.NEXT = 0;
          NoofItems := NoofItems + 1;
        UNTIL Item.NEXT = 0;
      NoofItems := 0;
      Window.UPDATE(1,Text003);
      ProdBOMHeader.RESET;
      ProdBOMHeader.SETRANGE("Low-Level Code",0);
      IF ProdBOMHeader.FINDSET(TRUE) THEN
        REPEAT
          Window.UPDATE(2,ProdBOMHeader."No.");
          Window.UPDATE(3,ROUND(NoofItems / ProdBOMHeader.COUNT * 10000,1));
          CalcLevelsForBOM(ProdBOMHeader);
          NoofItems := NoofItems + 1;
        UNTIL ProdBOMHeader.NEXT=0;
    END;

    PROCEDURE CalcLevelsForBOM@10(VAR ProdBOM@1000 : Record 99000771);
    VAR
      ProdBOMLine@1004 : Record 99000772;
      CalcLowLevelCode@1001 : Codeunit 99000793;
    BEGIN
      IF ProdBOM.Status = ProdBOM.Status::Certified THEN BEGIN
        ProdBOM."Low-Level Code" := CalcLowLevelCode.CalcLevels(ProdBOMLine.Type::"Production BOM",ProdBOM."No.",0,0);
        CalcLowLevelCode.RecalcLowerLevels(ProdBOM."No.",ProdBOM."Low-Level Code",TRUE);
        ProdBOM.MODIFY;
      END;
    END;

    PROCEDURE SetHideDialogs@4(NewHideDialogs@1000 : Boolean);
    BEGIN
      HideDialogs := NewHideDialogs;
    END;

    BEGIN
    END.
  }
}
