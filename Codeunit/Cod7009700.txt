OBJECT Codeunit 7009700 Funciones Parametros
{
  OBJECT-PROPERTIES
  {
    Date=01/04/15;
    Time=13:07:34;
    Modified=Yes;
    Version List=AIC2009,COM;
  }
  PROPERTIES
  {
    Permissions=TableData 17=rm,
                TableData 21=rm,
                TableData 25=rm,
                TableData 45=rm,
                TableData 112=rm,
                TableData 114=rm,
                TableData 122=rm,
                TableData 124=rm,
                TableData 254=rm,
                TableData 271=rm,
                TableData 379=rm,
                TableData 380=rm;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text0001@1100217000 : TextConst 'ESP=No se puede modificar este asiento.';
      Text0002@1100217001 : TextConst 'ESP=Confirma que desea cambiar la fecha de registro de este asiento.';
      Text0003@1100217002 : TextConst 'ENU=You cannot changed the document because it has been applied.;ESP=No se puede cambiar el documento porque esta liquidado.';
      Text0004@1100217003 : TextConst 'ESP=Confirma que desea cambiar el numero de documento de este asiento.';
      Text0005@1100217004 : TextConst 'ESP=Confirma que desea cambiar la fecha de emision de este asiento.';
      rDatIns@1100217005 : Record 7009768;
      cCheck@1000000000 : Codeunit 11;
      Text0006@1000000001 : TextConst 'ENU=The posting date is out of the authorized dates.;ESP=La fecha de registro del movimiento esta fuera de las fechas autorizadas.';

    PROCEDURE activar_delegacion@1(rDel@1103355000 : Record 7009718) : Boolean;
    BEGIN
      //IF rDel.Activa THEN
      //  ERROR(Text000);
      //IF rDel."Aeropuerto Local" = '' THEN
      //  ERROR(Text002);
      EXIT(TRUE);
    END;

    PROCEDURE intro_historic@2(par_delegacion@1103355000 : Code[10];interno@1103355001 : Integer;periodo@1103355002 : Integer;reserva@1103355003 : Integer;tipo@1103355004 : Integer;campo@1103355005 : Text[30];anterior@1103355006 : Text[50];nuevo@1103355007 : Text[50]);
    VAR
      rHis@1103355008 : Record 7009751;
      rHis2@1103355009 : Record 7009751;
      rCab@1103355010 : Record 7009741;
    BEGIN
      CLEAR(rHis);

      rHis2.RESET;
      rHis2.SETRANGE(Delegacion    , par_delegacion);
      rHis2.SETRANGE("N§ Interno"  , interno);
      rHis2.SETRANGE("N§ Periodo"  , periodo);
      rHis2.SETRANGE("N§ Reserva"  , reserva);
      rHis2.SETRANGE("Tipo Reserva", tipo);
      IF rHis2.FINDLAST THEN
        rHis."N§ Historico" := rHis2."N§ Historico" + 10;

      rHis.Delegacion       := par_delegacion;
      rHis."N§ Interno"     := interno;
      rHis."N§ Periodo"     := periodo;
      rHis."N§ Reserva"     := reserva;
      rHis."Tipo Reserva"   := tipo;
      rHis.Campo            := campo;
      rHis."Valor anterior" := anterior;
      rHis."Valor nuevo"    := nuevo;
      rHis.Fecha            := TODAY;
      rHis.Hora             := TIME;
      rHis.Usuario          := USERID;
      IF rCab.GET(par_delegacion, interno) THEN
        rHis.Bono := rCab.Bono;
      rHis.INSERT;
    END;

    PROCEDURE intro_historico_contrato@3(Delegacion@1103355000 : Code[10];Contrato@1103355001 : Code[10];Tipo@1103355002 : Integer;Campo@1103355003 : Text[30];Anterior@1103355004 : Text[30];Nuevo@1103355005 : Text[30]);
    VAR
      rHis@1103355006 : Record 7009764;
      rHis2@1103355007 : Record 7009764;
    BEGIN
      CLEAR(rHis);

      rHis2.SETRANGE(Delegacion   , Delegacion);
      rHis2.SETRANGE("N§ Contrato", Contrato);
      rHis2.SETRANGE(Tipo         , Tipo);
      IF rHis2.FINDLAST THEN
        rHis."N§ Historico" := rHis2."N§ Historico" + 10;

      rHis.Delegacion       := Delegacion;
      rHis."N§ Contrato"    := Contrato;
      rHis.Tipo             := Tipo;
      rHis.Campo            := Campo;
      rHis."Valor anterior" := Anterior;
      rHis."Valor nuevo"    := Nuevo;
      rHis.Fecha            := TODAY;
      rHis.Hora             := TIME;
      rHis.Usuario          := USERID;
      rHis.INSERT;
    END;

    PROCEDURE intro_historico_contrato_Lin@1100253000(Delegacion@1103355000 : Code[10];Contrato@1103355001 : Code[10];Tipo@1103355002 : Integer;NoLin@1100253000 : Integer;Campo@1103355003 : Text[30];Anterior@1103355004 : Text[30];Nuevo@1103355005 : Text[30]);
    VAR
      rHis@1103355006 : Record 7009764;
      rHis2@1103355007 : Record 7009764;
    BEGIN
      // intro_historico_contrato_Lin
      // Similar al anterior solo que introducimos n§ linea

      CLEAR(rHis);

      rHis2.RESET;
      rHis2.SETRANGE(Delegacion   , Delegacion);
      rHis2.SETRANGE("N§ Contrato", Contrato);
      rHis2.SETRANGE(Tipo         , Tipo);
      IF rHis2.FINDLAST THEN
        rHis."N§ Historico" := rHis2."N§ Historico" + 10;

      rHis.Delegacion       := Delegacion;
      rHis."N§ Contrato"    := Contrato;
      rHis.Tipo             := Tipo;
      rHis.Campo            := Campo;
      rHis."No Linea"       := NoLin;
      rHis."Valor anterior" := Anterior;
      rHis."Valor nuevo"    := Nuevo;
      rHis.Fecha            := TODAY;
      rHis.Hora             := TIME;
      rHis.Usuario          := USERID;
      rHis.INSERT;
    END;

    PROCEDURE intro_historico_precios@4(Delegacion@1103355000 : Code[10];Contrato@1103355001 : Code[10];Tipo@1103355002 : 'Hotel Compra,Hotel Venta';Codigo@1103355003 : 'Habitacion,Regimen,Suplementos,Extras,Ofertas,AxB';Orden@1103355004 : Integer;Campo@1103355005 : Text[30];Nuevo@1103355006 : Text[30];Anterior@1103355007 : Text[30]);
    VAR
      rHis@1103355008 : Record 7009765;
      rHis2@1103355009 : Record 7009765;
    BEGIN
      // $009
      CLEAR(rHis);

      rHis2.SETRANGE(Delegacion     , Delegacion);
      rHis2.SETRANGE("N§ Contrato"  , Contrato);
      rHis2.SETRANGE(Tipo           , Tipo);
      rHis2.SETRANGE("Codigo Precio", Codigo);
      rHis2.SETRANGE("Orden Precio" , Orden);
      IF rHis2.FINDLAST THEN
        rHis."N§ Historico" := rHis2."N§ Historico" + 10;

      rHis.Delegacion       := Delegacion;
      rHis."N§ Contrato"    := Contrato;
      rHis.Tipo             := Tipo;
      rHis."Codigo Precio"  := Codigo;
      rHis."Orden Precio"   := Orden;
      rHis.Campo            := Campo;
      rHis."Valor anterior" := Anterior;
      rHis."Valor nuevo"    := Nuevo;
      rHis.Fecha            := TODAY;
      rHis.Hora             := TIME;
      rHis.Usuario          := USERID;
      rHis.INSERT;
    END;

    PROCEDURE intro_historico_precios_transf@5(Delegacion@1103355000 : Code[10];Contrato@1103355001 : Code[10];Tipo@1103355002 : 'Compra,Venta';Codigo@1103355003 : 'Precio Base,Suplemento,Precio Ruta';Orden@1103355004 : Integer;Campo@1103355005 : Text[30];Anterior@1103355006 : Text[30];Nuevo@1103355007 : Text[30]);
    VAR
      rHis@1103355008 : Record 7009803;
      rHis2@1103355009 : Record 7009803;
    BEGIN
      CLEAR(rHis);

      rHis2.SETRANGE(Delegacion     , Delegacion);
      rHis2.SETRANGE("N§ Contrato"  , Contrato);
      rHis2.SETRANGE(Tipo           , Tipo);
      rHis2.SETRANGE("Codigo precio", Codigo);
      rHis2.SETRANGE("Orden precio" , Orden);
      IF rHis2.FINDLAST THEN
        rHis."N§ Historico" := rHis2."N§ Historico" + 10;

      rHis.Delegacion       := Delegacion;
      rHis."N§ Contrato"    := Contrato;
      rHis.Tipo             := Tipo;
      rHis."Codigo precio"  := Codigo;
      rHis."Orden precio"   := Orden;
      rHis.Campo            := Campo;
      rHis."Valor anterior" := Anterior;
      rHis."Valor nuevo"    := Nuevo;
      rHis.Fecha            := TODAY;
      rHis.Hora             := TIME;
      rHis.Usuario          := USERID;
      rHis.INSERT;
    END;

    PROCEDURE intro_historico_precios_transp@6(Delegacion@1103355000 : Code[10];Contrato@1103355001 : Code[10];Tipo@1103355002 : 'Compra,Venta';Codigo@1103355003 : 'Precio zona,Suplemento,Precio ruta';Orden@1103355004 : Integer;Campo@1103355005 : Text[30];Anterior@1103355006 : Text[30];Nuevo@1103355007 : Text[30]);
    VAR
      rHis@1103355008 : Record 7010155;
      rHis2@1103355009 : Record 7010155;
    BEGIN
      CLEAR(rHis);

      rHis2.SETRANGE(Delegacion     , Delegacion);
      rHis2.SETRANGE("N§ Contrato"  , Contrato);
      rHis2.SETRANGE(Tipo           , Tipo);
      rHis2.SETRANGE("Codigo precio", Codigo);
      rHis2.SETRANGE("Orden precio" , Orden);
      IF rHis2.FINDLAST THEN
        rHis."N§ Historico" := rHis2."N§ Historico" + 10;

      rHis.Delegacion       := Delegacion;
      rHis."N§ Contrato"    := Contrato;
      rHis.Tipo             := Tipo;
      rHis."Codigo precio"  := Codigo;
      rHis."Orden precio"   := Orden;
      rHis.Campo            := Campo;
      rHis."Valor anterior" := Anterior;
      rHis."Valor nuevo"    := Nuevo;
      rHis.Fecha            := TODAY;
      rHis.Hora             := TIME;
      rHis.Usuario          := USERID;
      rHis.INSERT;
    END;

    PROCEDURE intro_historico_precios_exc@7(Delegacion@1103355000 : Code[10];Contrato@1103355001 : Code[10];Tipo@1103355002 : 'Compra,Venta';Codigo@1103355003 : 'Precio Excursion,Suplemento,Oferta,Promocion';Orden@1103355004 : Integer;Campo@1103355005 : Text[30];Anterior@1103355006 : Text[30];Nuevo@1103355007 : Text[30]);
    VAR
      rHis@1103355008 : Record 7010156;
      rHis2@1103355009 : Record 7010156;
    BEGIN
      CLEAR(rHis);

      rHis2.SETRANGE(Delegacion     , Delegacion);
      rHis2.SETRANGE("N§ Contrato"  , Contrato);
      rHis2.SETRANGE(Tipo           , Tipo);
      rHis2.SETRANGE("Codigo precio", Codigo);
      rHis2.SETRANGE("Orden precio" , Orden);
      IF rHis2.FINDLAST THEN
        rHis."N§ Historico" := rHis2."N§ Historico" + 10;

      rHis.Delegacion       := Delegacion;
      rHis."N§ Contrato"    := Contrato;
      rHis.Tipo             := Tipo;
      rHis."Codigo precio"  := Codigo;
      rHis."Orden precio"   := Orden;
      rHis.Campo            := Campo;
      rHis."Valor anterior" := Anterior;
      rHis."Valor nuevo"    := Nuevo;
      rHis.Fecha            := TODAY;
      rHis.Hora             := TIME;
      rHis.Usuario          := USERID;
      rHis.INSERT;
    END;

    PROCEDURE intro_historico_precios_guia_v@8(Delegacion@1103355000 : Code[10];Contrato@1103355001 : Code[10];Tipo@1103355002 : 'Compra,Venta';Orden@1103355003 : Integer;Campo@1103355004 : Text[30];Anterior@1103355005 : Text[30];Nuevo@1103355006 : Text[30]);
    VAR
      rHis@1103355007 : Record 7010157;
      rHis2@1103355008 : Record 7010157;
    BEGIN
      CLEAR(rHis);

      rHis2.SETRANGE(Delegacion     , Delegacion);
      rHis2.SETRANGE("N§ Contrato"  , Contrato);
      rHis2.SETRANGE(Tipo           , Tipo);
      rHis2.SETRANGE("Orden precio" , Orden);
      IF rHis2.FINDLAST THEN
        rHis."N§ Historico" := rHis2."N§ Historico" + 10;

      rHis.Delegacion       := Delegacion;
      rHis."N§ Contrato"    := Contrato;
      rHis.Tipo             := Tipo;
      rHis."Orden precio"   := Orden;
      rHis.Campo            := Campo;
      rHis."Valor anterior" := Anterior;
      rHis."Valor nuevo"    := Nuevo;
      rHis.Fecha            := TODAY;
      rHis.Hora             := TIME;
      rHis.Usuario          := USERID;
      rHis.INSERT;
    END;

    PROCEDURE intro_historico_precios_TO@9(Delegacion@1103355000 : Code[10];Contrato@1103355001 : Code[10];Tipo@1103355002 : 'Compra,Venta';Orden@1103355003 : Integer;Campo@1103355004 : Text[30];Anterior@1103355005 : Text[30];Nuevo@1103355006 : Text[30]);
    VAR
      rHis@1103355007 : Record 7010158;
      rHis2@1103355008 : Record 7010158;
    BEGIN
      CLEAR(rHis);

      rHis2.SETRANGE(Delegacion     , Delegacion);
      rHis2.SETRANGE("N§ Contrato"  , Contrato);
      rHis2.SETRANGE(Tipo           , Tipo);
      rHis2.SETRANGE("Orden precio" , Orden);
      IF rHis2.FINDLAST THEN
        rHis."N§ Historico" := rHis2."N§ Historico" + 10;

      rHis.Delegacion       := Delegacion;
      rHis."N§ Contrato"    := Contrato;
      rHis.Tipo             := Tipo;
      rHis."Orden precio"   := Orden;
      rHis.Campo            := Campo;
      rHis."Valor anterior" := Anterior;
      rHis."Valor nuevo"    := Nuevo;
      rHis.Fecha            := TODAY;
      rHis.Hora             := TIME;
      rHis.Usuario          := USERID;
      rHis.INSERT;
    END;

    PROCEDURE intro_historico_precios_guia_o@10(Delegacion@1103355000 : Code[10];Contrato@1103355001 : Code[10];Tipo@1103355002 : 'Compra,Venta';Codigo@1103355003 : 'Precio Base,Suplemento';Orden@1103355004 : Integer;Campo@1103355005 : Text[30];Anterior@1103355006 : Text[30];Nuevo@1103355007 : Text[30]);
    VAR
      rHis@1103355008 : Record 7010159;
      rHis2@1103355009 : Record 7010159;
    BEGIN
      CLEAR(rHis);

      rHis2.SETRANGE(Delegacion     , Delegacion);
      rHis2.SETRANGE("N§ Contrato"  , Contrato);
      rHis2.SETRANGE(Tipo           , Tipo);
      rHis2.SETRANGE("Codigo precio", Codigo);
      rHis2.SETRANGE("Orden precio" , Orden);
      IF rHis2.FINDLAST THEN
        rHis."N§ Historico" := rHis2."N§ Historico" + 10;

      rHis.Delegacion       := Delegacion;
      rHis."N§ Contrato"    := Contrato;
      rHis.Tipo             := Tipo;
      rHis."Codigo precio"  := Codigo;
      rHis."Orden precio"   := Orden;
      rHis.Campo            := Campo;
      rHis."Valor anterior" := Anterior;
      rHis."Valor nuevo"    := Nuevo;
      rHis.Fecha            := TODAY;
      rHis.Hora             := TIME;
      rHis.Usuario          := USERID;
      rHis.INSERT;
    END;

    PROCEDURE intro_historico_precios_tarifa@11(Producto@1103355000 : Code[10];Temporada@1103355001 : Code[10];Tipo@1103355002 : 'Compra,Venta';Codigo@1103355003 : 'Precio Base,Suplemento';Orden@1103355004 : Integer;Campo@1103355005 : Text[30];Anterior@1103355006 : Text[30];Nuevo@1103355007 : Text[30];IDTarifa@1100217000 : Integer);
    VAR
      rHis@1103355008 : Record 7010160;
      rHis2@1103355009 : Record 7010160;
    BEGIN
      // intro_historico_precios_tarifa

      CLEAR(rHis);

      rHis2.RESET;
      rHis2.SETRANGE(Producto       , Producto);
      rHis2.SETRANGE(Temporada      , Temporada);
      rHis2.SETRANGE(Tipo           , Tipo);
      rHis2.SETRANGE("Codigo precio", Codigo);
      rHis2.SETRANGE("Orden precio" , Orden);
      //rHis2.SETRANGE("ID Tarifa"    , IDTarifa); //+$001
      IF rHis2.FINDLAST THEN
        rHis."N§ Historico":= rHis2."N§ Historico" + 10;

      rHis.Producto        := Producto;
      rHis.Temporada       := Temporada;
      rHis."ID Tarifa"     := IDTarifa; //+$001
      rHis.Tipo            := Tipo;
      rHis."Codigo precio" := Codigo;
      rHis."Orden precio"  := Orden;
      rHis.Campo           := Campo;
      rHis."Valor anterior":= Anterior;
      rHis."Valor nuevo"   := Nuevo;
      rHis.Fecha           := TODAY;
      rHis.Hora            := TIME;
      rHis.Usuario         := USERID;
      rHis.INSERT;
    END;

    PROCEDURE intro_historico_bono@12(par_delegacion@1103355000 : Code[10];par_touroperador@1103355001 : Code[10];par_bono@1103355002 : Code[10];par_reserva@1103355003 : Integer;par_secuencia@1103355004 : Code[10];par_campo@1103355005 : Text[30];par_anterior@1103355006 : Text[30];par_posterior@1103355007 : Text[30]);
    VAR
      rHis@1103355008 : Record 7010071;
      rHis2@1103355009 : Record 7010071;
    BEGIN
      // intro_historico_bono

      CLEAR(rHis);

      rHis2.SETRANGE(Delegacion    , par_delegacion);
      rHis2.SETRANGE(TourOperador  , par_touroperador);
      rHis2.SETRANGE(Bono          , par_bono);
      rHis2.SETRANGE("N§ Reserva"  , par_reserva);
      rHis2.SETRANGE("N§ Secuencia", par_secuencia);
      IF rHis2.FINDLAST THEN
        rHis."N§ Historico" := rHis2."N§ Historico" + 10
      ELSE
        rHis."N§ Historico" := 1;

      rHis.Delegacion        := par_delegacion;
      rHis.TourOperador      := par_touroperador;
      rHis.Bono              := par_bono;
      rHis."N§ Reserva"      := par_reserva;
      rHis."N§ Secuencia"    := par_secuencia;
      rHis.Campo             := par_campo;
      rHis."Valor anterior"  := par_anterior;
      rHis."Valor posterior" := par_posterior;
      rHis.Fecha             := TODAY;
      rHis.Hora              := TIME;
      rHis.Usuario           := USERID;
      rHis.INSERT;
    END;

    PROCEDURE FieldText@1100253001(VAR pwXField@1100253000 : FieldRef) : Text[250];
    VAR
      lwValTXT@1100253001 : Text[250];
      lwOption@1100253002 : Text[1024];
      lwNum@1100253003 : Integer;
    BEGIN
      // FieldText
      // Devuelve el texto del campo

      CLEAR(lwValTXT);
      // En caso de que sea option devolvemos el valor en modo texto
      lwOption := pwXField.OPTIONCAPTION;
      IF lwOption <> '' THEN BEGIN
        lwNum := pwXField.VALUE;
        // No aseguramos de no exceder el numero de las comas ya que si no, se generaria una excepecion
        IF CarCont(lwOption,',') >= lwNum THEN BEGIN
          lwNum +=1;
          lwValTXT := SELECTSTR(lwNum, lwOption);
        END
        ELSE
          lwValTXT := FORMAT(pwXField.VALUE);
      END
      ELSE
        lwValTXT := FORMAT(pwXField.VALUE);

      EXIT(lwValTXT);
    END;

    PROCEDURE CarCont@1100253002(lwString@1100253000 : Text[1024];lwCar@1100253001 : Char) : Integer;
    VAR
      lwI@1100253002 : Integer;
      lwCnt@1100253003 : Integer;
    BEGIN
      // CarCont
      // Cuenta cuantas veces se repite un raracter en una cadena.

      IF lwString='' THEN
        EXIT;

      lwCnt :=0;
      FOR lwI := 1 TO STRLEN(lwString) DO
        IF lwString[lwI] = lwCar THEN
          lwCnt +=1;

      EXIT(lwCnt);
    END;

    PROCEDURE CambiaFechaAsiento@1100217000(VAR prGLEntry@1100217000 : Record 17);
    VAR
      lrMovCont@1100217008 : Record 17;
      lrMovClie@1100217007 : Record 21;
      lrMovProv@1100217006 : Record 25;
      lrMovBco@1100217005 : Record 271;
      lrMovIVA@1100217004 : Record 254;
      lrRegMovCon@1100217003 : Record 45;
      lrDetCli@1100217002 : Record 379;
      lrDetProv@1100217001 : Record 380;
      lrMovCheque@1100217009 : Record 272;
    BEGIN
      // CambiaFechaAsiento

      //: Cuando se actualiza la fecha de registro se actualizan tambin los movimientos de cliente
      //: proveedor, Banco o IVA.

      prGLEntry.TESTFIELD("Posting Date");

      IF cCheck.DateNotAllowed(prGLEntry."Posting Date") THEN
        ERROR(Text0006);

      IF NOT CONFIRM(Text0002) THEN
        ERROR('');

      IF lrRegMovCon.GET(prGLEntry."Transaction No.") THEN BEGIN
        lrRegMovCon."Posting Date" := prGLEntry."Posting Date";
        lrRegMovCon.MODIFY;

        lrMovCont.RESET;
        lrMovCont.SETCURRENTKEY("Transaction No.");
        lrMovCont.SETRANGE ("Transaction No.", prGLEntry."Transaction No.");
        lrMovCont.SETFILTER("Entry No.", '<>%1', prGLEntry."Entry No.");
        lrMovCont.FINDSET(TRUE);
        lrMovCont.MODIFYALL("Posting Date", prGLEntry."Posting Date", TRUE);

        lrMovClie.SETCURRENTKEY("Transaction No.");
        lrMovClie.SETRANGE ("Transaction No.", lrRegMovCon."No.");
        IF lrMovClie.FINDSET(TRUE) THEN
        BEGIN
          REPEAT
            CLEAR(lrDetCli);
            lrDetCli.SETCURRENTKEY("Cust. Ledger Entry No.", "Posting Date");
            lrDetCli.SETRANGE("Cust. Ledger Entry No.", lrMovClie."Entry No.");
            lrDetCli.SETRANGE("Document No."          , prGLEntry."Document No.");
            IF lrDetCli.FINDSET(TRUE) THEN
              lrDetCli.MODIFYALL("Posting Date", prGLEntry."Posting Date");
          UNTIL lrMovClie.NEXT = 0;
          lrMovClie.MODIFYALL("Posting Date", prGLEntry."Posting Date", TRUE);
        END;

        lrMovProv.SETCURRENTKEY("Transaction No.");
        lrMovProv.SETRANGE ("Transaction No.", lrRegMovCon."No.");
        IF lrMovProv.FINDSET(TRUE) THEN
        BEGIN
          REPEAT
            CLEAR(lrDetProv);
            lrDetProv.SETCURRENTKEY("Vendor Ledger Entry No.", "Posting Date");
            lrDetProv.SETRANGE("Vendor Ledger Entry No.", lrMovProv."Entry No.");
            lrDetProv.SETRANGE("Document No."           , prGLEntry."Document No.");
            IF lrDetProv.FINDSET(TRUE) THEN
              lrDetProv.MODIFYALL("Posting Date", prGLEntry."Posting Date");
          UNTIL lrMovProv.NEXT = 0;
          lrMovProv.MODIFYALL("Posting Date", prGLEntry."Posting Date", TRUE);
        END;

        lrMovBco.SETCURRENTKEY("Transaction No.");
        lrMovBco.SETRANGE ("Transaction No.", lrRegMovCon."No.");
        IF lrMovBco.FINDSET(TRUE) THEN
        BEGIN
          //+$005 <
          lrMovCheque.SETCURRENTKEY("Bank Account Ledger Entry No.");
          REPEAT
            lrMovCheque.SETRANGE("Bank Account Ledger Entry No.", lrMovBco."Entry No.");
            IF lrMovCheque.FINDSET(TRUE) THEN
            BEGIN
              lrMovCheque.MODIFYALL("Posting Date", prGLEntry."Posting Date", TRUE);
              lrMovCheque.MODIFYALL("Check Date"  , prGLEntry."Posting Date", TRUE);
            END;
          UNTIL lrMovBco.NEXT = 0;
          //+$005 >
          lrMovBco.MODIFYALL("Posting Date", prGLEntry."Posting Date", TRUE);
        END;

        lrMovIVA.SETCURRENTKEY("Transaction No.");
        lrMovIVA.SETRANGE ("Transaction No.", lrRegMovCon."No.");
        IF lrMovIVA.FINDSET(TRUE) THEN
          lrMovIVA.MODIFYALL("Posting Date", prGLEntry."Posting Date", TRUE);

        IF prGLEntry."Gen. Posting Type" = prGLEntry."Gen. Posting Type"::Purchase THEN
        BEGIN
          IF prGLEntry."Document Type" = prGLEntry."Document Type"::Invoice THEN
            CambiaFechaFacturaCompra(prGLEntry, 0);

          IF prGLEntry."Document Type" = prGLEntry."Document Type"::"Credit Memo" THEN
            CambiaFechaAbonoCompra(prGLEntry, 0);
        END;

        IF prGLEntry."Gen. Posting Type" = prGLEntry."Gen. Posting Type"::Sale THEN
        BEGIN
          IF prGLEntry."Document Type" = prGLEntry."Document Type"::Invoice THEN
            CambiaFechaFacturaVenta(prGLEntry, 0);

          IF prGLEntry."Document Type" = prGLEntry."Document Type"::"Credit Memo" THEN
            CambiaFechaAbonoVenta(prGLEntry, 0);
        END;

      END
      ELSE
        ERROR(Text0001);
    END;

    PROCEDURE CambiaFechaFacturaCompra@1100217001(prGLEntry@1100217000 : Record 17;pwTipo@1100217002 : 'Registro,Emision');
    VAR
      lrFactura@1100217001 : Record 122;
    BEGIN
      // CambiaFechaFacturaCompra

      IF lrFactura.GET(prGLEntry."Document No.") THEN
      BEGIN
        IF pwTipo = pwTipo::Registro THEN
          lrFactura."Posting Date" := prGLEntry."Posting Date"
        ELSE
          lrFactura."Document Date" := prGLEntry."Document Date";

        lrFactura.MODIFY;
      END;
    END;

    PROCEDURE CambiaFechaAbonoCompra@1100217002(prGLEntry@1100217000 : Record 17;pwTipo@1100217002 : 'Registro,Emision');
    VAR
      lrAbono@1100217001 : Record 124;
    BEGIN
      // CambiaFechaAbonoCompra

      IF lrAbono.GET(prGLEntry."Document No.") THEN
      BEGIN
        IF pwTipo = pwTipo::Registro THEN
          lrAbono."Posting Date" := prGLEntry."Posting Date"
        ELSE
          lrAbono."Document Date" := prGLEntry."Document Date";
        lrAbono.MODIFY;
      END;
    END;

    PROCEDURE CambiaFechaFacturaVenta@1100217003(prGLEntry@1100217000 : Record 17;pwTipo@1100217002 : 'Registro,Emision');
    VAR
      lrFactura@1100217001 : Record 112;
    BEGIN
      // CambiaFechaFacturaVenta

      IF lrFactura.GET(prGLEntry."Document No.") THEN
      BEGIN
        IF pwTipo = pwTipo::Registro THEN
          lrFactura."Posting Date" := prGLEntry."Posting Date"
        ELSE
          lrFactura."Document Date" := prGLEntry."Document Date";
        lrFactura.MODIFY;
      END;
    END;

    PROCEDURE CambiaFechaAbonoVenta@1100217004(prGLEntry@1100217000 : Record 17;pwTipo@1100217002 : 'Registro,Emision');
    VAR
      lrAbono@1100217001 : Record 114;
    BEGIN
      // CambiaFechaAbonoVenta

      IF lrAbono.GET(prGLEntry."Document No.") THEN
      BEGIN
        IF pwTipo = pwTipo::Registro THEN
          lrAbono."Posting Date" := prGLEntry."Posting Date"
        ELSE
          lrAbono."Document Date" := prGLEntry."Document Date";
        lrAbono.MODIFY;
      END;
    END;

    PROCEDURE CambiaDocumentoAsiento@1100217005(VAR prGLEntry@1100217000 : Record 17);
    VAR
      lrMovCont@1100217008 : Record 17;
      lrMovClie@1100217007 : Record 21;
      lrMovProv@1100217006 : Record 25;
      lrMovBco@1100217005 : Record 271;
      lrMovIVA@1100217004 : Record 254;
      lrRegMovCon@1100217003 : Record 45;
      lrDetCli@1100217002 : Record 379;
      lrDetProv@1100217001 : Record 380;
    BEGIN
      // CambiaFechaAsiento

      //: Cuando se actualiza el numero de documento se actualizan tambin los movimientos de cliente
      //: proveedor, Banco o IVA.

      prGLEntry.TESTFIELD("Document No.");

      IF cCheck.DateNotAllowed(prGLEntry."Posting Date") THEN
        ERROR(Text0006);

      IF (prGLEntry."Document Type" = prGLEntry."Document Type"::Invoice) OR
         (prGLEntry."Document Type" = prGLEntry."Document Type"::"Credit Memo") THEN
        ERROR('');

      IF NOT CONFIRM(Text0004) THEN
        ERROR('');

      IF lrRegMovCon.GET(prGLEntry."Transaction No.") THEN BEGIN
        lrMovCont.RESET;
        lrMovCont.SETCURRENTKEY("Transaction No.");
        lrMovCont.SETRANGE ("Transaction No.", prGLEntry."Transaction No.");
        lrMovCont.SETFILTER("Entry No.", '<>%1', prGLEntry."Entry No.");
        lrMovCont.FINDSET(TRUE);
        lrMovCont.MODIFYALL("Document No.", prGLEntry."Document No.", TRUE);

        lrMovClie.SETCURRENTKEY("Transaction No.");
        lrMovClie.SETRANGE ("Transaction No.", lrRegMovCon."No.");
        IF lrMovClie.FINDSET(TRUE) THEN
        BEGIN
          REPEAT
            lrMovClie.CALCFIELDS("Remaining Amount");
            IF lrMovClie."Remaining Amount" <> lrMovClie."Original Amount" THEN
              ERROR(Text0003);

            CLEAR(lrDetCli);
            lrDetCli.SETCURRENTKEY("Cust. Ledger Entry No.", "Posting Date");
            lrDetCli.SETRANGE("Cust. Ledger Entry No.", lrMovClie."Entry No.");
            IF lrDetCli.FINDSET(TRUE) THEN
              lrDetCli.MODIFYALL("Document No.", prGLEntry."Document No.");
          UNTIL lrMovClie.NEXT = 0;
          lrMovClie.MODIFYALL("Document No.", prGLEntry."Document No.", TRUE);
        END;

        lrMovProv.SETCURRENTKEY("Transaction No.");
        lrMovProv.SETRANGE ("Transaction No.", lrRegMovCon."No.");
        IF lrMovProv.FINDSET(TRUE) THEN
        BEGIN
          REPEAT
            lrMovProv.CALCFIELDS("Remaining Amount", "Original Amount");
            IF lrMovProv."Remaining Amount" <> lrMovProv."Original Amount" THEN
              ERROR(Text0003);

            CLEAR(lrDetProv);
            lrDetProv.SETCURRENTKEY("Vendor Ledger Entry No.", "Posting Date");
            lrDetProv.SETRANGE("Vendor Ledger Entry No.", lrMovProv."Entry No.");
            IF lrDetProv.FINDSET(TRUE) THEN
              lrDetProv.MODIFYALL("Document No.", prGLEntry."Document No.");
          UNTIL lrMovProv.NEXT = 0;
          lrMovProv.MODIFYALL("Document No.", prGLEntry."Document No.", TRUE);
        END;

        lrMovBco.SETCURRENTKEY("Transaction No.");
        lrMovBco.SETRANGE ("Transaction No.", lrRegMovCon."No.");
        IF lrMovBco.FINDSET(TRUE) THEN
          lrMovBco.MODIFYALL("Document No.", prGLEntry."Document No.", TRUE);

        lrMovIVA.SETCURRENTKEY("Transaction No.");
        lrMovIVA.SETRANGE ("Transaction No.", lrRegMovCon."No.");
        IF lrMovIVA.FINDSET(TRUE) THEN
          lrMovIVA.MODIFYALL("Document No.", prGLEntry."Document No.", TRUE);

      END
      ELSE
        ERROR(Text0001);
    END;

    PROCEDURE CambiaFechaEmisionAsiento@1100217006(VAR prGLEntry@1100217000 : Record 17);
    VAR
      lrMovCont@1100217008 : Record 17;
      lrMovClie@1100217007 : Record 21;
      lrMovProv@1100217006 : Record 25;
      lrMovBco@1100217005 : Record 271;
      lrMovIVA@1100217004 : Record 254;
      lrRegMovCon@1100217003 : Record 45;
    BEGIN
      // CambiaFechaEmisionAsiento

      //: Cuando se actualiza la fecha de emision se actualizan tambin los movimientos de cliente
      //: proveedor, Banco o IVA.

      prGLEntry.TESTFIELD("Document Date");

      IF cCheck.DateNotAllowed(prGLEntry."Posting Date") THEN
        ERROR(Text0006);

      IF NOT CONFIRM(Text0005) THEN
        ERROR('');

      IF lrRegMovCon.GET(prGLEntry."Transaction No.") THEN BEGIN

        lrMovCont.RESET;
        lrMovCont.SETCURRENTKEY("Transaction No.");
        lrMovCont.SETRANGE ("Transaction No.", prGLEntry."Transaction No.");
        lrMovCont.SETFILTER("Entry No.", '<>%1', prGLEntry."Entry No.");
        lrMovCont.FINDSET(TRUE);
        lrMovCont.MODIFYALL("Document Date", prGLEntry."Document Date", TRUE);

        lrMovClie.SETCURRENTKEY("Transaction No.");
        lrMovClie.SETRANGE ("Transaction No.", lrRegMovCon."No.");
        IF lrMovClie.FINDSET(TRUE) THEN
          lrMovClie.MODIFYALL("Document Date", prGLEntry."Document Date", TRUE);

        lrMovProv.SETCURRENTKEY("Transaction No.");
        lrMovProv.SETRANGE ("Transaction No.", lrRegMovCon."No.");
        IF lrMovProv.FINDSET(TRUE) THEN
          lrMovProv.MODIFYALL("Document Date", prGLEntry."Document Date", TRUE);

        lrMovBco.SETCURRENTKEY("Transaction No.");
        lrMovBco.SETRANGE ("Transaction No.", lrRegMovCon."No.");
        IF lrMovBco.FINDSET(TRUE) THEN
          lrMovBco.MODIFYALL("Document Date", prGLEntry."Document Date", TRUE);

        lrMovIVA.SETCURRENTKEY("Transaction No.");
        lrMovIVA.SETRANGE ("Transaction No.", lrRegMovCon."No.");
        IF lrMovIVA.FINDSET(TRUE) THEN
          lrMovIVA.MODIFYALL("Document Date", prGLEntry."Document Date", TRUE);

        IF prGLEntry."Gen. Posting Type" = prGLEntry."Gen. Posting Type"::Purchase THEN
        BEGIN
          IF prGLEntry."Document Type" = prGLEntry."Document Type"::Invoice THEN
            CambiaFechaFacturaCompra(prGLEntry, 1);

          IF prGLEntry."Document Type" = prGLEntry."Document Type"::"Credit Memo" THEN
            CambiaFechaAbonoCompra(prGLEntry, 1);
        END;

        IF prGLEntry."Gen. Posting Type" = prGLEntry."Gen. Posting Type"::Sale THEN
        BEGIN
          IF prGLEntry."Document Type" = prGLEntry."Document Type"::Invoice THEN
            CambiaFechaFacturaVenta(prGLEntry, 1);

          IF prGLEntry."Document Type" = prGLEntry."Document Type"::"Credit Memo" THEN
            CambiaFechaAbonoVenta(prGLEntry, 1);
        END;

      END
      ELSE
        ERROR(Text0001);
    END;

    PROCEDURE ImprimirFactura@1100217007(prCabFac@1100217000 : Record 7009908);
    VAR
      lrPar@1100217001 : Record 7009700;
      lcFacExc@1100217002 : Codeunit 7010140;
      lcFacHotel@1100217003 : Codeunit 7009725;
    BEGIN
      // ImprimirFactura

      //. Esta funcion lanza la impresi¢n desde la tabla de agencia

      lrPar.FINDFIRST;
      prCabFac.SETRECFILTER;

      CASE prCabFac.Modulo OF
        prCabFac.Modulo::Hotel:
        BEGIN
          rDatIns.FINDFIRST;
          IF rDatIns."Empresa Real" = rDatIns."Empresa Real"::GOC THEN
            lcFacHotel.ImprimirFactura(prCabFac."Tipo documento", prCabFac."No.")
          ELSE
          BEGIN
            lrPar.TESTFIELD("Factura Venta Hotel");
            REPORT.RUN(lrPar."Factura Venta Hotel", TRUE, TRUE, prCabFac);
          END;
        END;
        prCabFac.Modulo::Transfer:
        BEGIN
          lrPar.TESTFIELD("Factura Venta Transfer");
          REPORT.RUN(lrPar."Factura Venta Transfer", TRUE, TRUE, prCabFac);
        END;
        prCabFac.Modulo::Excursion:
        BEGIN
          rDatIns.FINDFIRST;
          IF rDatIns."Empresa Real" = rDatIns."Empresa Real"::GOC THEN
            lcFacExc.ImprimirFacturaStd(prCabFac."No.")
          ELSE
          BEGIN
            lrPar.TESTFIELD("Factura Venta Excursion");
            REPORT.RUN(lrPar."Factura Venta Excursion", TRUE, TRUE, prCabFac);
          END;
        END;
      END;
    END;

    PROCEDURE GetTipoCambio@1100217008(pwFactor@1100217000 : Decimal) : Decimal;
    BEGIN
      // GetTipoCambio

      IF pwFactor = 0 THEN
        EXIT(0);

      EXIT(ROUND(1 / pwFactor, 0.0001) );
    END;

    PROCEDURE CrearSerieEstandar@1000000000(pwCodigo@1000000000 : Code[10];pwDescripcion@1000000001 : Text[50];pwPrimerosDigitos@1000000008 : Code[3];pwIncluyeA¤o@1000000002 : Boolean;pwIncluyeDelegacion@1000000007 : Boolean);
    VAR
      lrPar@1000000011 : Record 7009700;
      lrNoSerie@1000000003 : Record 308;
      lrLineaSerie@1000000004 : Record 309;
      lwFecha@1000000005 : Date;
      lwCodigo@1000000006 : Code[20];
      lwA¤o@1000000010 : Integer;
      lwA¤oTexto@1000000009 : Text[30];
      lwIDLinea@1000000012 : Integer;
    BEGIN
      // CrearSerieEstandar

      //. Creamos registros en la tabla de series del estandar para aquellos procesos que lo requieran

      IF NOT lrNoSerie.GET(pwCodigo) THEN
      BEGIN
        lrNoSerie.INIT;
        lrNoSerie.Code := pwCodigo;
        lrNoSerie.Description := pwDescripcion;
        lrNoSerie."Default Nos." := TRUE;
        lrNoSerie.INSERT(TRUE);
      END;

      lrLineaSerie.RESET;
      lrLineaSerie.SETRANGE("Series Code", lrNoSerie.Code);
      IF pwIncluyeA¤o THEN
      BEGIN
        lwFecha := DMY2DATE(1, 1, DATE2DMY(WORKDATE, 3));
        lrLineaSerie.SETFILTER("Starting Date", '>=%1', lwFecha);
      END;

      IF NOT lrLineaSerie.FINDFIRST THEN
      BEGIN
        lrLineaSerie.RESET;
        lrLineaSerie.SETRANGE("Series Code", lrNoSerie.Code);
        IF lrLineaSerie.FINDLAST THEN
          lwIDLinea := lrLineaSerie."Line No."
        ELSE
          lwIDLinea := 0;
        lwIDLinea += 10000;

        CLEAR(lwCodigo);

        IF pwIncluyeDelegacion THEN
        BEGIN
          lrPar.FINDFIRST;
          lwCodigo := lwCodigo + lrPar.Delegacion;
        END;

        IF pwPrimerosDigitos <> '' THEN
          lwCodigo := lwCodigo + pwPrimerosDigitos;

        IF pwIncluyeA¤o THEN
        BEGIN
          lwA¤o := DATE2DMY(WORKDATE, 3);
          lwA¤oTexto := FORMAT(lwA¤o);
          lwCodigo := lwCodigo + COPYSTR(lwA¤oTexto, 3, 2);
        END;

        IF lwCodigo = '' THEN
          lwCodigo := '0000000001'
        ELSE
          lwCodigo := lwCodigo + '00001';

        lrLineaSerie.INIT;
        lrLineaSerie.VALIDATE("Series Code"  , lrNoSerie.Code);
        lrLineaSerie.VALIDATE("Starting Date", WORKDATE);
        lrLineaSerie.VALIDATE("Starting No." , lwCodigo);
        lrLineaSerie.INSERT(TRUE);
      END;
    END;

    BEGIN
    {
      ## AJF 29/06/09

        .- (09/00319) cambio c¢digos de hotel de code10 a code20.

      $001 AJS 28122012 Cambio de clave primaria en tarifa venta excursiones

      $002 AJS 16052013 Nuevas funciones CambiaFechaAsiento, CambiaFechaFacturaCompra, CambiaFechaAbonoCompra,
                        CambiaFechaFacturaVenta y CambiaFechaAbonoVenta

      $003 AJS 29052013 Nueva funcion CambiaDocumentoAsiento

      $004 AJS 15072013 Nueva funcion ImprimirFactura

      $005 AJS 26092031 Modifico la funcion CambiaFechaAsiento para incluir los movimientos de cheque

      $006 AJS 16032014 Nueva funcion GetTipoCambio para ver el tipo de cambio a partir del factor

      $007 AJS 22032014 Modifico la funcion GetTipoCambio para trabajar con 4 decimales

      $008 AJS 10092014 Agrego un control de fecha en las funciones que cambian datos de asientos registrados

      $009 ARM 15092014 Nuevo tipo precio Promocion CNT-OC-14069

      $010 AJS 28102014 Modifico los parametros Anterior y Nuevo a Text50 en intro_historic

      $011 AJS 16032015 Nueva funcion CrearSeriesEstandar para generar series desde Atennea
    }
    END.
  }
}
