OBJECT Codeunit 7009907 Funciones conciliacion cuenta
{
  OBJECT-PROPERTIES
  {
    Date=02/10/12;
    Time=12:00:00;
    Modified=Yes;
    Version List=AIC2009;
  }
  PROPERTIES
  {
    Permissions=TableData 17=m;
    OnRun=BEGIN
            //Conciliacion_Automatica;
            RehacerMovsCont;
            //PonerFechaConciliacion;
          END;

  }
  CODE
  {
    VAR
      Text100@1000000000 : TextConst 'ENU=Ledger entry      #1########### @2@@@@@@@@@@@\;ESP=Cuenta      #1########### @2@@@@@@@@@@@\';
      Text101@1000000001 : TextConst 'ENU=Company     #3#########################\;ESP=Empresa     #3#########################\';
      Text102@1000000002 : TextConst 'ENU=Movs. proc.  @5@@@@@@@@@@@@@@@@@@@@@@@@@\;ESP=Proc. movs  @5@@@@@@@@@@@@@@@@@@@@@@@@@\';
      Text103@1000000003 : TextConst 'ENU=Movs. conc. #6#########################;ESP=Movs. conc. #6#########################';
      Text104@1000000004 : TextConst 'ENU=Must select some %1 to conciliate;ESP=Debe marcar algun %1 para conciliar.';
      Text105@1000000005 : TextConst 'ENU=Amounts to conciliate must be 0;ESP=La suma de los importes a conciliar debe ser 0.';
      Text106@1000000006 : TextConst 'ENU=Automatic conciliation;ESP=Conciliaci¢n autom tica.';
      Text107@1000000007 : TextConst 'ENU=There are no movements to unsettle;ESP=No hay movimientos para desliquidar.';
      Text108@1000000008 : TextConst 'ENU=" - unconciliate";ESP=" - desconciliacion"';
      Text109@1000000009 : TextConst 'ENU=Sure about to unconciliate selected movements?;ESP=¨Seguro que desea desconciliar los movimientos seleccionados?';
      Text110@1000000010 : TextConst 'ENU=Must specify a ledger entry in order to conciliate IBR;ESP=Debe especificar una cuenta para conciliar FPR';
      Text111@1000000011 : TextConst 'ENU=IBR Ledger entry  #1########### @2@@@@@@@@@@@\;ESP=Cuenta FPR  #1########### @2@@@@@@@@@@@\';
      Text112@1000000012 : TextConst 'ENU=Movs. conc. #3#####;ESP=Movs. conc. #3#####';
      Text113@1000000013 : TextConst 'ENU=Current company,All companys;ESP=Empresa actual,Todas las empresas';
      Text114@1000000014 : TextConst 'ENU=Company      #1#############\;ESP=Empresa      #1#############\';
      Text115@1000000015 : TextConst 'ENU=" Movements @2@@@@@@@@@@@@@";ESP=" Movimientos @2@@@@@@@@@@@@@"';
      Finestra@1000000016 : Dialog;

    PROCEDURE ImporteConciliado@4(par_empresa@1000000000 : Text[30];par_Mov@1000000001 : Integer) : Decimal;
    VAR
      rMovCon@1000000002 : Record 7009990;
      Importe@1000000003 : Decimal;
    BEGIN
      // Importeconciliado
      //
      Importe := 0;

      rMovCon.RESET;
      rMovCon.SETRANGE("N§ Mov.", par_Mov);
      IF NOT (par_empresa IN ['', COMPANYNAME]) THEN
        rMovCon.CHANGECOMPANY(par_empresa);
      IF rMovCon.FIND('-') THEN BEGIN
        rMovCon.CALCSUMS("Importe conciliado");
        Importe := rMovCon."Importe conciliado";
      END;

      IF NOT (par_empresa IN ['', COMPANYNAME]) THEN
        rMovCon.CHANGECOMPANY(COMPANYNAME);

      EXIT(Importe);
    END;

    PROCEDURE Conciliado@5(par_Mov@1000000000 : Integer;par_ImporteDL@1000000001 : Decimal) : Boolean;
    BEGIN
      // Conciliado
      //
      EXIT(ImporteConciliado('', par_Mov) = par_ImporteDL);
    END;

    PROCEDURE Conciliacion_Automatica@3(par_Cuenta@1000000000 : Code[20]);
    VAR
      rEmp@1000000001 : Record 2000000006;
      rCta@1000000002 : Record 15;
      rMov@1000000003 : Record 17;
      rMov2@1000000004 : Record 17;
      rMov3@1000000005 : Record 17;
      rGrConPro@1000000006 : Record 93;
      ImporteConciliadoCon@1000000007 : Decimal;
      ImporteConciliadoCon2@1000000008 : Decimal;
      iEmp@1000000009 : Integer;
      nRegsEmp@1000000010 : Integer;
      iCta@1000000011 : Integer;
      nRegsCta@1000000012 : Integer;
      nCon@1000000013 : Integer;
      i@1000000014 : Integer;
      nRegs@1000000015 : Integer;
      esConciliado@1000000016 : Boolean;
    BEGIN
      // Conciliacion_Automatica
      //
      rCta.RESET;
      // COC2.00 19/09/2001
      IF par_Cuenta <> '' THEN
        rCta.SETRANGE("No.", par_Cuenta)
      ELSE
        rCta.SETRANGE("Conciliacion Automatica", TRUE);
      IF rCta.FIND('-') THEN BEGIN
        Finestra.OPEN(Text100 +
                      Text101 +
                      Text102 +
                      Text103);
        nRegsCta := rCta.COUNT;
        iCta := 0;
        nCon := 0;
        REPEAT
          iCta := iCta + 1;
          Finestra.UPDATE(1, rCta."No.");
          Finestra.UPDATE(2, ROUND((iCta / nRegsCta) * 10000, 1));
          rEmp.RESET;
          rEmp.SETRANGE(Name, COMPANYNAME);
          IF rEmp.FIND('-') THEN BEGIN
            nRegsEmp := rEmp.COUNT;
            iEmp := 0;
            REPEAT
              iEmp := iEmp + 1;
              Finestra.UPDATE(3, rEmp.Name);
              //Finestra.UPDATE(4, ROUND((iEmp / nRegsEmp) * 10000, 1));
              rMov.RESET;
              rMov.CHANGECOMPANY(rEmp.Name);
              rMov.SETCURRENTKEY("G/L Account No.", "Posting Date");
              rMov.SETRANGE("G/L Account No."  ,  rCta."No.");
              rMov.SETRANGE(Pendiente    , TRUE);
              rMov.MODIFYALL("Usuario conciliacion", '');
              rMov.SETRANGE("Usuario conciliacion", '');
              rMov2.RESET;
              rMov2.CHANGECOMPANY(rEmp.Name);
              rMov2.SETCURRENTKEY("G/L Account No.", "Posting Date");
              rMov2.SETRANGE("G/L Account No."  , rCta."No.");
              rMov2.SETRANGE(Pendiente    , TRUE);
              rMov2.SETRANGE("Usuario conciliacion", '');
              rMov3.CHANGECOMPANY(rEmp.Name);
              IF rMov.FIND('-') THEN BEGIN
                i := 0;
                nRegs := rMov.COUNT;
                REPEAT
                  esConciliado := FALSE;
                  i := i + 1;
                  Finestra.UPDATE(5, ROUND((i / nRegs) * 10000, 1));
                  ImporteConciliadoCon := rMov.Amount - rMov."Importe pendiente";
                  //ImporteConciliadoCon := ImporteConciliado(rEmp.Nombre, rMov."N§ mov.");
                  IF rMov.Amount <> ImporteConciliadoCon THEN BEGIN
                    rMov2.SETRANGE("Posting Date");
                    rMov2.SETRANGE("External Document No.", rMov."External Document No.");
                    rMov2.SETFILTER("Entry No.", '<>%1', rMov."Entry No.");
                    IF rMov2.FIND('-') THEN BEGIN
                      REPEAT
                        ImporteConciliadoCon2 := rMov2.Amount - rMov2."Importe pendiente";
                        //ImporteConciliadoCon2 := ImporteConciliado(rEmp.Nombre, rMov2."N§ mov.");
                        IF (rMov2.Amount - ImporteConciliadoCon2) + (rMov.Amount - ImporteConciliadoCon) = 0 THEN BEGIN
                          rMov."Importe a conciliar" := rMov.Amount - ImporteConciliadoCon;
                          rMov."Usuario conciliacion" := USERID;
                          rMov.MODIFY;

                          rMov2."Importe a conciliar" := rMov2.Amount - ImporteConciliadoCon2;
                          rMov2."Usuario conciliacion" := USERID;
                          rMov2.MODIFY;

                          nCon := nCon + 2;
                          Finestra.UPDATE(6, nCon);
                          esConciliado := TRUE;
                        END
                      UNTIL esConciliado OR (rMov2.NEXT = 0);
                      IF NOT esConciliado THEN BEGIN
                        ImporteConciliadoCon := 0;
                        rMov2.SETRANGE("Entry No.");
                        IF rMov2.FIND('-') THEN BEGIN
                          REPEAT
                            ImporteConciliadoCon2 := rMov2.Amount - rMov2."Importe pendiente";
                            //ImporteConciliadoCon2 := ImporteConciliado(rEmp.Nombre, rMov2."N§ mov.");
                            ImporteConciliadoCon  := ImporteConciliadoCon + rMov2.Amount - ImporteConciliadoCon2;
                          UNTIL (ImporteConciliadoCon = 0) OR (rMov2.NEXT = 0);
                          IF ImporteConciliadoCon = 0 THEN BEGIN
                            ImporteConciliadoCon := 0;
                            rMov2.FIND('-');
                            REPEAT
                              ImporteConciliadoCon2 := rMov2.Amount - rMov2."Importe pendiente";
                              //ImporteConciliadoCon2 := ImporteConciliado(rEmp.Nombre, rMov2."N§ mov.");
                              ImporteConciliadoCon := ImporteConciliadoCon + rMov2.Amount - ImporteConciliadoCon2;
                              IF (rMov2.Amount - ImporteConciliadoCon2) <> 0 THEN BEGIN
                                rMov3 := rMov2;
                                rMov3."Importe a conciliar" := rMov2.Amount - ImporteConciliadoCon2;
                                rMov3."Usuario conciliacion" := USERID;
                                rMov3.MODIFY;

                                nCon := nCon + 1;
                                Finestra.UPDATE(6, nCon);
                                esConciliado := TRUE;
                              END;
                            UNTIL (ImporteConciliadoCon = 0) OR (rMov2.NEXT = 0);
                          END;
                        END;
                        IF NOT esConciliado THEN BEGIN
                          rMov2.SETRANGE("Posting Date", rMov."Posting Date", 31129999D);
                          ImporteConciliadoCon := 0;
                          IF rMov2.FIND('-') THEN BEGIN
                            REPEAT
                              IF rMov2."Entry No." >= rMov."Entry No." THEN BEGIN
                                ImporteConciliadoCon2 := rMov2.Amount - rMov2."Importe pendiente";
                                //ImporteConciliadoCon2 := ImporteConciliado(rEmp.Nombre, rMov2."N§ mov.");
                                ImporteConciliadoCon := ImporteConciliadoCon + rMov2.Amount - ImporteConciliadoCon2;
                              END;
                            UNTIL (ImporteConciliadoCon = 0) OR (rMov2.NEXT = 0);
                            IF ImporteConciliadoCon = 0 THEN BEGIN
                              ImporteConciliadoCon := 0;
                              rMov2.FIND('-');
                              REPEAT
                                IF rMov2."Entry No." >= rMov."Entry No." THEN BEGIN
                                  ImporteConciliadoCon2 := rMov2.Amount - rMov2."Importe pendiente";
                                  //ImporteConciliadoCon2 := ImporteConciliado(rEmp.Nombre, rMov2."N§ mov.");
                                  ImporteConciliadoCon := ImporteConciliadoCon + rMov2.Amount - ImporteConciliadoCon2;
                                  IF (rMov2.Amount - ImporteConciliadoCon2) <> 0 THEN BEGIN
                                    rMov3 := rMov2;
                                    rMov3."Importe a conciliar" := rMov2.Amount - ImporteConciliadoCon2;
                                    rMov3."Usuario conciliacion" := USERID;
                                    rMov3.MODIFY;

                                    nCon := nCon + 1;
                                    Finestra.UPDATE(6, nCon);
                                    esConciliado := TRUE;
                                  END;
                                END;
                              UNTIL (ImporteConciliadoCon = 0) OR (rMov2.NEXT = 0);
                            END;
                          END;
                        END;
                      END;
                    END;
                  END;
                  IF esConciliado THEN BEGIN
                    //COMMIT;
                    Conciliar_Registros(rEmp.Name, rMov, FALSE);
                  END;
                UNTIL rMov.NEXT = 0;
              END;
            UNTIL rEmp.NEXT = 0;
          END;
        UNTIL rCta.NEXT = 0;
        Finestra.CLOSE;
      END;
      rMov.CHANGECOMPANY(COMPANYNAME);
      rMov2.CHANGECOMPANY(COMPANYNAME);
      rMov3.CHANGECOMPANY(COMPANYNAME);
    END;

    PROCEDURE Conciliar_Registros@10(par_empresa@1000000000 : Text[30];VAR par_mov@1000000001 : Record 17;par_mostrarVentana@1000000002 : Boolean);
    VAR
      rMov@1000000003 : Record 17;
      rMov2@1000000004 : Record 17;
      rMovCon@1000000005 : Record 7009990;
      rCon@1000000006 : Record 7009991;
      cDiaGenRegLin@1000000007 : Codeunit 12;
      wMin@1000000008 : Integer;
      wMax@1000000009 : Integer;
    BEGIN
      // Conciliar_Registros
      //
      IF NOT (par_empresa IN ['', COMPANYNAME]) THEN BEGIN
        rMov.CHANGECOMPANY(par_empresa);
        rCon.CHANGECOMPANY(par_empresa);
        rMovCon.CHANGECOMPANY(par_empresa);
        rMov2.CHANGECOMPANY(par_empresa);
      END;

      rMov.COPY(par_mov);
      rMov.SETCURRENTKEY("G/L Account No.", "Usuario conciliacion");
      rMov.SETRANGE("G/L Account No.", par_mov."G/L Account No.");
      rMov.SETRANGE("Usuario conciliacion", USERID);
      IF rMov.FIND('-') THEN
        rMov.CALCSUMS("Importe a conciliar")
      ELSE
        ERROR(Text104, rMov.TABLECAPTION);

      IF rMov."Importe a conciliar" <> 0 THEN
        ERROR(Text105);

      cDiaGenRegLin.BuscarMaxMinNoMovExt(wMin, wMax);

      rCon.RESET;
      rCon.SETRANGE("N§", wMin, wMax);
      IF rCon.FIND('+') THEN
        rCon."N§" := rCon."N§" + 1
      ELSE
        rCon."N§" := wMin + 1;
      rCon.Usuario := USERID;
      rCon.Fecha   := TODAY;
      rCon.Hora    := TIME;
      IF NOT par_mostrarVentana THEN
        rCon.Comentario := Text106
      ELSE
        rCon.Comentario := '';
      rCon.INSERT(TRUE);

      IF rMov.FIND('-') THEN
        REPEAT
          rMovCon.INIT;
          rMovCon."N§ Mov."            := rMov."Entry No.";
          rMovCon."N§ Conciliacion"    := rCon."N§";
          rMovCon."Importe conciliado" := rMov."Importe a conciliar";
          rMovCon."N§ cuenta"          := rMov."G/L Account No.";
          // PLB 06/03/2002
          rMovCon."Fecha conciliacion" := rCon.Fecha;
          rMovCon.INSERT(TRUE);
          rMov2 := rMov;
          rMov2."Usuario conciliacion" := '';
          rMov2."Importe pendiente" := rMov2."Importe pendiente" - rMov2."Importe a conciliar";
          rMov2."Importe a conciliar" := 0;
          IF rMov2."Importe pendiente" = 0 THEN
            rMov2.Pendiente := FALSE;
          rMov2.MODIFY;
        UNTIL rMov.NEXT = 0;

      IF par_mostrarVentana THEN BEGIN
        rCon.SETRECFILTER;
        FORM.RUN(FORM::"Ficha Conciliaciones cuenta", rCon);
      END;

      IF NOT (par_empresa IN ['', COMPANYNAME]) THEN BEGIN
        rMov.CHANGECOMPANY(COMPANYNAME);
        rCon.CHANGECOMPANY(COMPANYNAME);
        rMovCon.CHANGECOMPANY(COMPANYNAME);
        rMov2.CHANGECOMPANY(COMPANYNAME);
      END;
    END;

    PROCEDURE Desconciliar_Registros@2(VAR par_mov@1000000000 : Record 17);
    VAR
      rCon@1000000001 : Record 7009991;
      rMovCon@1000000002 : Record 7009990;
      rMovCon2@1000000003 : Record 7009990;
      fFichaCon@1000000004 : Form 7009973;
      rMov@1000000005 : Record 17;
    BEGIN
      // Desconciliar_Registros
      //
      rMovCon.RESET;
      rMovCon.SETRANGE("N§ Mov.", par_mov."Entry No.");
      IF NOT rMovCon.FIND('-') THEN
        ERROR(Text107);

      CLEAR(fFichaCon);
      fFichaCon.SETTABLEVIEW := rMovCon;
      fFichaCon.LOOKUPMODE   := TRUE;
      fFichaCon.CAPTION      := fFichaCon.CAPTION + Text108;
      IF fFichaCon.RUNMODAL = ACTION::LookupOK THEN BEGIN
        fFichaCon.DevolverSeleccionados(rMovCon);
        IF NOT CONFIRM(Text109) THEN
          EXIT;
        IF rMovCon.FIND('-') THEN
          REPEAT
            rMovCon2.RESET;
            rMovCon2.SETRANGE("N§ Conciliacion", rMovCon."N§ Conciliacion");
            IF rMovCon2.FIND('-') THEN
              REPEAT
                rMov.GET(rMovCon2."N§ Mov.");
                rMov."Importe pendiente" := rMov."Importe pendiente" + rMovCon2."Importe conciliado";
                rMov.Pendiente := TRUE;
                rMov.MODIFY;
              UNTIL rMovCon2.NEXT = 0;
            IF rCon.GET(rMovCon."N§ Conciliacion") THEN
              rCon.DELETE(TRUE);
          UNTIL rMovCon.NEXT = 0;
      END;
    END;

    PROCEDURE RehacerMovsCont@12();
    VAR
      rEmp@1000000000 : Record 2000000006;
      rMov@1000000001 : Record 17;
      i@1000000002 : Integer;
      nRegs@1000000003 : Integer;
      ImpCon@1000000004 : Decimal;
      iOpcion@1000000005 : Integer;
    BEGIN
      // RehacerMovsCont
      //

      rEmp.RESET;
      iOpcion := STRMENU(Text113);
      CASE iOpcion OF
        0: EXIT;
        1: rEmp.SETRANGE(Name, COMPANYNAME);
      END;


      IF rEmp.FIND('-') THEN BEGIN
        Finestra.OPEN(Text114 +
                      Text115);
        REPEAT
          Finestra.UPDATE(1, rEmp.Name);
          rMov.RESET;
          rMov.CHANGECOMPANY(rEmp.Name);
          IF rMov.FIND('-') THEN BEGIN
            i := 0;
            nRegs := rMov.COUNT;
            REPEAT
              i := i + 1;
              Finestra.UPDATE(2, ROUND((i / nRegs) * 10000, 1));
              ImpCon := ImporteConciliado(rEmp.Name, rMov."Entry No.");
              IF rMov."Importe pendiente" <> ROUND(rMov.Amount - ImpCon) THEN BEGIN
                rMov."Importe pendiente" := ROUND(rMov.Amount - ImpCon);
                rMov.Pendiente := rMov."Importe pendiente" <> 0;
                rMov.MODIFY;
              END;
            UNTIL rMov.NEXT = 0;
          END;
        UNTIL rEmp.NEXT = 0;
        rMov.CHANGECOMPANY(COMPANYNAME);
        Finestra.CLOSE;
      END;
    END;

    PROCEDURE PonerFechaConciliacion@6();
    VAR
      rMovCon@1000000000 : Record 7009990;
      rMovCon2@1000000001 : Record 7009990;
      rCon@1000000002 : Record 7009991;
      rEmp@1000000003 : Record 2000000006;
      i@1000000004 : Integer;
      nRegs@1000000005 : Integer;
      ImpCon@1000000006 : Decimal;
      iOpcion@1000000007 : Integer;
    BEGIN
      // PonerFechaConciliacion
      //
      rEmp.RESET;
      iOpcion := STRMENU(Text113);
      CASE iOpcion OF
        0: EXIT;
        1: rEmp.SETRANGE(Name, COMPANYNAME);
      END;

      IF rEmp.FIND('-') THEN BEGIN
        Finestra.OPEN(Text114 +
                      Text115);
        rMovCon.RESET;
        rMovCon.SETCURRENTKEY("Fecha conciliacion");
        REPEAT
          Finestra.UPDATE(1, rEmp.Name);
          rMovCon.CHANGECOMPANY(rEmp.Name);
          rMovCon.SETRANGE("Fecha conciliacion", 0D);
          IF rMovCon.FIND('-') THEN BEGIN
            i := 0;
            nRegs := rMovCon.COUNT;
            REPEAT
              i := i + 1;
              Finestra.UPDATE(2, ROUND((i / nRegs) * 10000, 1));
              rCon.GET(rMovCon."N§ Conciliacion");
              rMovCon2 := rMovCon;
              rMovCon2."Fecha conciliacion" := rCon.Fecha;
              rMovCon2.MODIFY;
            UNTIL rMovCon.NEXT = 0;
          END;
        UNTIL rEmp.NEXT = 0;
        rMovCon.CHANGECOMPANY(COMPANYNAME);
        Finestra.CLOSE;
      END;
    END;

    BEGIN
    {
      // COC2.00 - Conciliaci¢n de FPR

      // PLB 06/03/2002
      COC2.01
      Guardar la fecha de conciliaci¢n en los movimientos para poder hacer ver que estaba pendiente a una fecha determinada

      // PLB 17/07/2002
      Conciliaci¢n autom tica para la empresa activa
    }
    END.
  }
}
