OBJECT Codeunit 6529 Item Tracking Navigate Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=NAVW16.00.01;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      ItemLedgEntry@1061 : Record 32;
      ReservEntry@1059 : Record 337;
      MiscArticleInfo@1058 : Record 5214;
      FixedAsset@1057 : Record 5600;
      WhseActivLine@1056 : Record 5767;
      RgstrdWhseActivLine@1055 : Record 5773;
      ServItemLine@1054 : Record 5901;
      Loaner@1053 : Record 5913;
      ServiceItem@1051 : Record 5940;
      ServiceItemComponent@1050 : Record 5941;
      ServContractLine@1049 : Record 5964;
      FiledContractLine@1048 : Record 5971;
      SerialNoInfo@1047 : Record 6504;
      LotNoInfo@1046 : Record 6505;
      WhseEntry@1045 : Record 7312;
      PostedInvtPutAwayLine@1043 : Record 7341;
      PostedInvtPickLine@1042 : Record 7343;
      JobLedgEntry@1063 : Record 169;
      TempPostedWhseRcptLine@1005 : TEMPORARY Record 7319;
      TempPostedWhseShptLine@1004 : TEMPORARY Record 7323;
      TempPurchRcptHeader@1029 : TEMPORARY Record 120;
      TempPurchInvHeader@1028 : TEMPORARY Record 122;
      TempPurchCrMemoHeader@1027 : TEMPORARY Record 124;
      TempSalesShptHeader@1026 : TEMPORARY Record 110;
      TempSalesInvHeader@1025 : TEMPORARY Record 112;
      TempSalesCrMemoHeader@1024 : TEMPORARY Record 114;
      TempServShptHeader@1009 : TEMPORARY Record 5990;
      TempServInvHeader@1007 : TEMPORARY Record 5992;
      TempServCrMemoHeader@1006 : TEMPORARY Record 5994;
      TempReturnShipHeader@1031 : TEMPORARY Record 6650;
      TempReturnRcptHeader@1030 : TEMPORARY Record 6660;
      TempTransShipHeader@1023 : TEMPORARY Record 5744;
      TempTransRcptHeader@1022 : TEMPORARY Record 5746;
      TempProdOrder@1001 : TEMPORARY Record 5405;
      TempSalesLine@1062 : TEMPORARY Record 37;
      TempServLine@1010 : TEMPORARY Record 5902;
      TempReqLine@1060 : TEMPORARY Record 246;
      TempPurchLine@1020 : TEMPORARY Record 39;
      TempItemJnlLine@1019 : TEMPORARY Record 83;
      TempBOMJnlLine@1018 : TEMPORARY Record 89;
      TempProdOrderLine@1017 : TEMPORARY Record 5406;
      TempProdOrderComp@1016 : TEMPORARY Record 5407;
      TempPlanningComponent@1015 : TEMPORARY Record 99000829;
      TempTransLine@1008 : TEMPORARY Record 5741;
      TempRecordBuffer@1000 : TEMPORARY Record 6529;
      TempField@1002 : TEMPORARY Record 2000000041;
      TempJobLedgEntry@1064 : TEMPORARY Record 169;
      LastEntryNo@1003 : Integer;

    PROCEDURE FindTrackingRecords@1(SerialNoFilter@1016 : Code[1000];LotNoFilter@1015 : Code[1000];ItemNoFilter@1023 : Code[1000];VariantFilter@1024 : Code[1000]);
    VAR
      PurchRcptHeader@1025 : Record 120;
      SalesShptHeader@1020 : Record 110;
      ServShptHeader@1018 : Record 5990;
      ReturnShipHeader@1017 : Record 6650;
      ReturnRcptHeader@1014 : Record 6660;
      TransShipHeader@1013 : Record 5744;
      TransRcptHeader@1012 : Record 5746;
      ProdOrder@1011 : Record 5405;
      SalesLine@1010 : Record 37;
      ServLine@1019 : Record 5902;
      ReqLine@1009 : Record 246;
      PurchLine@1008 : Record 39;
      ItemJnlLine@1007 : Record 83;
      BOMJnlLine@1006 : Record 89;
      ProdOrderLine@1004 : Record 5406;
      ProdOrderComp@1003 : Record 5407;
      PlanningComponent@1002 : Record 99000829;
      TransLine@1000 : Record 5741;
      RecRef@1005 : RecordRef;
    BEGIN
      IF (SerialNoFilter = '') AND (LotNoFilter = '') THEN
        EXIT;

      IF ItemLedgEntry.READPERMISSION THEN
        WITH ItemLedgEntry DO BEGIN
          RESET;
          IF LotNoFilter <> '' THEN
            IF SETCURRENTKEY("Lot No.") THEN;
          IF SerialNoFilter <> '' THEN
            IF SETCURRENTKEY("Serial No.") THEN;
          SETFILTER("Lot No.",LotNoFilter);
          SETFILTER("Serial No.",SerialNoFilter);
          SETFILTER("Item No.",ItemNoFilter);
          SETFILTER("Variant Code",VariantFilter);
          IF FINDSET THEN
            REPEAT
              RecRef.GETTABLE(ItemLedgEntry);
              InsertBufferRec(RecRef,"Serial No.","Lot No.","Item No.","Variant Code");

              CASE "Document Type" OF
                "Document Type"::"Sales Shipment":
                  IF SalesShptHeader.READPERMISSION THEN
                    IF SalesShptHeader.GET("Document No.") THEN BEGIN
                      RecRef.GETTABLE(SalesShptHeader);
                      InsertBufferRec(RecRef,"Serial No.","Lot No.","Item No.","Variant Code");

                      TempSalesShptHeader := SalesShptHeader;
                      IF TempSalesShptHeader.INSERT THEN;

                      FindPostedWhseShptLine;

                      // Find Invoice if it exists
                      SearchValueEntries;
                    END;
                "Document Type"::"Sales Invoice":
                  FindSalesInvoice("Document No.");
                "Document Type"::"Service Shipment":
                  IF ServShptHeader.READPERMISSION THEN
                    IF ServShptHeader.GET("Document No.") THEN BEGIN
                      RecRef.GETTABLE(ServShptHeader);
                      InsertBufferRec(RecRef,"Serial No.","Lot No.","Item No.","Variant Code");

                      TempServShptHeader := ServShptHeader;
                      IF TempServShptHeader.INSERT THEN;

                      // Find Invoice if it exists
                      SearchValueEntries;
                    END;
                "Document Type"::"Service Invoice":
                  FindServInvoice("Document No.");
                "Document Type"::"Service Credit Memo":
                  FindServCrMemo("Document No.");
                "Document Type"::"Sales Return Receipt":
                  IF ReturnRcptHeader.READPERMISSION THEN
                    IF ReturnRcptHeader.GET("Document No.") THEN BEGIN
                      RecRef.GETTABLE(ReturnRcptHeader);
                      InsertBufferRec(RecRef,"Serial No.","Lot No.","Item No.","Variant Code");

                      TempReturnRcptHeader := ReturnRcptHeader;
                      IF TempReturnRcptHeader.INSERT THEN;

                      FindPostedWhseRcptLine;

                      // Find CreditMemo if it exists
                      SearchValueEntries;
                    END;
                "Document Type"::"Sales Credit Memo":
                  FindSalesCrMemo("Document No.");
                "Document Type"::"Purchase Receipt":
                  IF PurchRcptHeader.READPERMISSION THEN
                    IF PurchRcptHeader.GET("Document No.") THEN BEGIN
                      RecRef.GETTABLE(PurchRcptHeader);
                      InsertBufferRec(RecRef,"Serial No.","Lot No.","Item No.","Variant Code");

                      TempPurchRcptHeader := PurchRcptHeader;
                      IF TempPurchRcptHeader.INSERT THEN;

                      FindPostedWhseRcptLine;

                      // Find Invoice if it exists
                      SearchValueEntries;
                    END;
                "Document Type"::"Purchase Invoice":
                  FindPurchInvoice("Document No.");
                "Document Type"::"Purchase Return Shipment":
                  IF ReturnShipHeader.READPERMISSION THEN
                    IF ReturnShipHeader.GET("Document No.") THEN BEGIN
                      RecRef.GETTABLE(ReturnShipHeader);
                      InsertBufferRec(RecRef,"Serial No.","Lot No.","Item No.","Variant Code");

                      TempReturnShipHeader := ReturnShipHeader;
                      IF TempReturnShipHeader.INSERT THEN;

                      FindPostedWhseShptLine;

                      // Find CreditMemo if it exists
                      SearchValueEntries;
                    END;
                "Document Type"::"Purchase Credit Memo":
                  FindPurchCrMemo("Document No.");
                "Document Type"::"Transfer Shipment":
                  IF TransShipHeader.READPERMISSION THEN
                    IF TransShipHeader.GET("Document No.") THEN BEGIN
                      RecRef.GETTABLE(TransShipHeader);
                      InsertBufferRec(RecRef,"Serial No.","Lot No.","Item No.","Variant Code");

                      TempTransShipHeader := TransShipHeader;
                      IF TempTransShipHeader.INSERT THEN;

                      FindPostedWhseShptLine;
                    END;
                "Document Type"::"Transfer Receipt":
                  IF TransRcptHeader.READPERMISSION THEN
                    IF TransRcptHeader.GET("Document No.") THEN BEGIN
                      RecRef.GETTABLE(TransRcptHeader);
                      InsertBufferRec(RecRef,"Serial No.","Lot No.","Item No.","Variant Code");

                      TempTransRcptHeader := TransRcptHeader;
                      IF TempTransRcptHeader.INSERT THEN;

                      FindPostedWhseRcptLine;
                    END;
              ELSE
                IF "Entry Type" IN ["Entry Type"::Consumption,"Entry Type"::Output] THEN
                  IF ProdOrder.READPERMISSION THEN BEGIN
                    ProdOrder.SETRANGE(Status,ProdOrder.Status::Released,ProdOrder.Status::Finished);
                    ProdOrder.SETRANGE("No.","Document No.");
                    IF ProdOrder.FIND('-') THEN BEGIN
                      RecRef.GETTABLE(ProdOrder);
                      InsertBufferRec(RecRef,"Serial No.","Lot No.","Item No.","Variant Code");

                      TempProdOrder := ProdOrder;
                      IF TempProdOrder.INSERT THEN;
                    END;
                  END;
              END;
            UNTIL NEXT = 0;
        END;


      IF ReservEntry.READPERMISSION THEN
        WITH ReservEntry DO BEGIN
          RESET;
          IF LotNoFilter <> '' THEN
            IF SETCURRENTKEY("Lot No.") THEN;
          IF SerialNoFilter <> '' THEN
            IF SETCURRENTKEY("Serial No.") THEN;
          SETFILTER("Lot No.",LotNoFilter);
          SETFILTER("Serial No.",SerialNoFilter);
          SETFILTER("Item No.",ItemNoFilter);
          SETFILTER("Variant Code",VariantFilter);
          IF FINDSET THEN
            REPEAT
              RecRef.GETTABLE(ReservEntry);
              InsertBufferRec(RecRef,"Serial No.","Lot No.","Item No.","Variant Code");

              CASE "Source Type" OF
                DATABASE::"Sales Line":
                  IF SalesLine.READPERMISSION THEN
                    IF SalesLine.GET("Source Subtype","Source ID","Source Ref. No.") THEN BEGIN
                      RecRef.GETTABLE(SalesLine);
                      InsertBufferRec(RecRef,"Serial No.","Lot No.","Item No.","Variant Code");

                      TempSalesLine := SalesLine;
                      IF TempSalesLine.INSERT THEN;
                    END;
                DATABASE::"Service Line":
                  IF ServLine.READPERMISSION THEN
                    IF ServLine.GET("Source Subtype","Source ID","Source Ref. No.") THEN BEGIN
                      RecRef.GETTABLE(ServLine);
                      InsertBufferRec(RecRef,"Serial No.","Lot No.","Item No.","Variant Code");

                      TempServLine := ServLine;
                      IF TempServLine.INSERT THEN;
                    END;
                DATABASE::"Purchase Line":
                  IF PurchLine.READPERMISSION THEN
                    IF PurchLine.GET("Source Subtype","Source ID","Source Ref. No.") THEN BEGIN
                      RecRef.GETTABLE(PurchLine);
                      InsertBufferRec(RecRef,"Serial No.","Lot No.","Item No.","Variant Code");

                      TempPurchLine := PurchLine;
                      IF TempPurchLine.INSERT THEN;
                    END;
                DATABASE::"Requisition Line":
                  IF ReqLine.READPERMISSION THEN
                    IF ReqLine.GET("Source ID","Source Batch Name","Source Ref. No.") THEN BEGIN
                      RecRef.GETTABLE(ReqLine);
                      InsertBufferRec(RecRef,"Serial No.","Lot No.","Item No.","Variant Code");

                      TempReqLine := ReqLine;
                      IF TempReqLine.INSERT THEN;
                    END;
                DATABASE::"Planning Component":
                  IF PlanningComponent.READPERMISSION THEN
                    IF PlanningComponent.GET("Source ID","Source Batch Name","Source Prod. Order Line","Source Ref. No.") THEN BEGIN
                      RecRef.GETTABLE(PlanningComponent);
                      InsertBufferRec(RecRef,"Serial No.","Lot No.","Item No.","Variant Code");

                      TempPlanningComponent := PlanningComponent;
                      IF TempPlanningComponent.INSERT THEN;
                    END;
                DATABASE::"BOM Journal Line":
                  IF BOMJnlLine.READPERMISSION THEN
                    IF BOMJnlLine.GET("Source ID","Source Batch Name","Source Ref. No.") THEN BEGIN
                      RecRef.GETTABLE(BOMJnlLine);
                      InsertBufferRec(RecRef,"Serial No.","Lot No.","Item No.","Variant Code");

                      TempBOMJnlLine := BOMJnlLine;
                      IF TempBOMJnlLine.INSERT THEN;
                    END;
                DATABASE::"Item Journal Line":
                  IF ItemJnlLine.READPERMISSION THEN
                    IF ItemJnlLine.GET("Source ID","Source Batch Name","Source Ref. No.") THEN BEGIN
                      RecRef.GETTABLE(ItemJnlLine);
                      InsertBufferRec(RecRef,"Serial No.","Lot No.","Item No.","Variant Code");

                      TempItemJnlLine := ItemJnlLine;
                      IF TempItemJnlLine.INSERT THEN;
                    END;
                DATABASE::"Prod. Order Line":
                  IF ProdOrderLine.READPERMISSION THEN
                    IF ProdOrderLine.GET("Source Subtype","Source ID","Source Prod. Order Line") THEN BEGIN
                      RecRef.GETTABLE(ProdOrderLine);
                      InsertBufferRec(RecRef,"Serial No.","Lot No.","Item No.","Variant Code");

                      TempProdOrderLine := ProdOrderLine;
                      IF TempProdOrderLine.INSERT THEN;
                    END;
                DATABASE::"Prod. Order Component":
                  IF ProdOrderComp.READPERMISSION THEN
                    IF ProdOrderComp.GET("Source Subtype","Source ID","Source Prod. Order Line","Source Ref. No.") THEN BEGIN
                      RecRef.GETTABLE(ProdOrderComp);
                      InsertBufferRec(RecRef,"Serial No.","Lot No.","Item No.","Variant Code");

                      TempProdOrderComp := ProdOrderComp;
                      IF TempProdOrderComp.INSERT THEN;
                    END;
                DATABASE::"Transfer Line":
                  IF TransLine.READPERMISSION THEN
                    IF TransLine.GET("Source ID","Source Ref. No.") THEN BEGIN
                      RecRef.GETTABLE(TransLine);
                      InsertBufferRec(RecRef,"Serial No.","Lot No.","Item No.","Variant Code");

                      TempTransLine := TransLine;
                      IF TempTransLine.INSERT THEN;
                    END;
              END;
            UNTIL NEXT = 0;
        END;


      IF WhseActivLine.READPERMISSION THEN
        WITH WhseActivLine DO BEGIN
          RESET;
          IF LotNoFilter <> '' THEN
            IF SETCURRENTKEY("Lot No.") THEN;
          IF SerialNoFilter <> '' THEN
            IF SETCURRENTKEY("Serial No.") THEN;
          SETFILTER("Lot No.",LotNoFilter);
          SETFILTER("Serial No.",SerialNoFilter);
          SETFILTER("Item No.",ItemNoFilter);
          SETFILTER("Variant Code",VariantFilter);
          IF FINDSET THEN
            REPEAT
              RecRef.GETTABLE(WhseActivLine);
              InsertBufferRec(RecRef,"Serial No.","Lot No.","Item No.","Variant Code");
            UNTIL NEXT = 0;
        END;

      IF RgstrdWhseActivLine.READPERMISSION THEN
        WITH RgstrdWhseActivLine DO BEGIN
          RESET;
          IF LotNoFilter <> '' THEN
            IF SETCURRENTKEY("Lot No.") THEN;
          IF SerialNoFilter <> '' THEN
            IF SETCURRENTKEY("Serial No.") THEN;
          SETFILTER("Lot No.",LotNoFilter);
          SETFILTER("Serial No.",SerialNoFilter);
          SETFILTER("Item No.",ItemNoFilter);
          SETFILTER("Variant Code",VariantFilter);
          IF FINDSET THEN
            REPEAT
              RecRef.GETTABLE(RgstrdWhseActivLine);
              InsertBufferRec(RecRef,"Serial No.","Lot No.","Item No.","Variant Code");
            UNTIL NEXT = 0;
        END;

      IF WhseEntry.READPERMISSION THEN
        WITH WhseEntry DO BEGIN
          RESET;
          IF LotNoFilter <> '' THEN
            IF SETCURRENTKEY("Lot No.") THEN;
          IF SerialNoFilter <> '' THEN
            IF SETCURRENTKEY("Serial No.") THEN;
          SETFILTER("Lot No.",LotNoFilter);
          SETFILTER("Serial No.",SerialNoFilter);
          SETFILTER("Item No.",ItemNoFilter);
          SETFILTER("Variant Code",VariantFilter);
          IF FINDSET THEN
            REPEAT
              RecRef.GETTABLE(WhseEntry);
              InsertBufferRec(RecRef,"Serial No.","Lot No.","Item No.","Variant Code");
            UNTIL NEXT = 0;
        END;

      IF PostedInvtPutAwayLine.READPERMISSION THEN
        WITH PostedInvtPutAwayLine DO BEGIN
          RESET;
          IF LotNoFilter <> '' THEN
            IF SETCURRENTKEY("Lot No.") THEN;
          IF SerialNoFilter <> '' THEN
            IF SETCURRENTKEY("Serial No.") THEN;
          SETFILTER("Lot No.",LotNoFilter);
          SETFILTER("Serial No.",SerialNoFilter);
          SETFILTER("Item No.",ItemNoFilter);
          SETFILTER("Variant Code",VariantFilter);
          IF FINDSET THEN
            REPEAT
              RecRef.GETTABLE(PostedInvtPutAwayLine);
              InsertBufferRec(RecRef,"Serial No.","Lot No.","Item No.","Variant Code");
            UNTIL NEXT = 0;
        END;

      IF PostedInvtPickLine.READPERMISSION THEN
        WITH PostedInvtPickLine DO BEGIN
          RESET;
          IF LotNoFilter <> '' THEN
            IF SETCURRENTKEY("Lot No.") THEN;
          IF SerialNoFilter <> '' THEN
            IF SETCURRENTKEY("Serial No.") THEN;
          SETFILTER("Lot No.",LotNoFilter);
          SETFILTER("Serial No.",SerialNoFilter);
          SETFILTER("Item No.",ItemNoFilter);
          SETFILTER("Variant Code",VariantFilter);
          IF FINDSET THEN
            REPEAT
              RecRef.GETTABLE(PostedInvtPickLine);
              InsertBufferRec(RecRef,"Serial No.","Lot No.","Item No.","Variant Code");
            UNTIL NEXT = 0;
        END;

      // Only LotNos
      IF LotNoFilter <> '' THEN
        IF LotNoInfo.READPERMISSION THEN
          WITH LotNoInfo DO BEGIN
            RESET;
            IF SETCURRENTKEY("Lot No.") THEN;
            SETFILTER("Lot No.",LotNoFilter);
            SETFILTER("Item No.",ItemNoFilter);
            SETFILTER("Variant Code",VariantFilter);
            IF FINDSET THEN
              REPEAT
                RecRef.GETTABLE(LotNoInfo);
                InsertBufferRec(RecRef,'',"Lot No.","Item No.","Variant Code");
              UNTIL NEXT = 0;
          END;


      // Only SerialNos
      IF SerialNoFilter <> '' THEN BEGIN
        IF SerialNoInfo.READPERMISSION THEN
          WITH SerialNoInfo DO BEGIN
            RESET;
            IF SETCURRENTKEY("Serial No.") THEN;
            SETFILTER("Serial No.",SerialNoFilter);
            SETFILTER("Item No.",ItemNoFilter);
            SETFILTER("Variant Code",VariantFilter);
            IF FINDSET THEN
              REPEAT
                RecRef.GETTABLE(SerialNoInfo);
                InsertBufferRec(RecRef,"Serial No.",'',"Item No.","Variant Code");
              UNTIL NEXT = 0;
          END;

        IF MiscArticleInfo.READPERMISSION THEN
          WITH MiscArticleInfo DO BEGIN
            RESET;
            IF SETCURRENTKEY("Serial No.") THEN;
            SETFILTER("Serial No.",SerialNoFilter);
            IF FINDSET THEN
              REPEAT
                RecRef.GETTABLE(MiscArticleInfo);
                InsertBufferRec(RecRef,"Serial No.",'','','');
              UNTIL NEXT = 0;
          END;

        IF FixedAsset.READPERMISSION THEN
          WITH FixedAsset DO BEGIN
            RESET;
            IF SETCURRENTKEY("Serial No.") THEN;
            SETFILTER("Serial No.",SerialNoFilter);
            IF FINDSET THEN
              REPEAT
                RecRef.GETTABLE(FixedAsset);
                InsertBufferRec(RecRef,"Serial No.",'','','');
              UNTIL NEXT = 0;
          END;

        IF ServItemLine.READPERMISSION THEN
          WITH ServItemLine DO BEGIN
            RESET;
            IF SETCURRENTKEY("Serial No.") THEN;
            SETFILTER("Serial No.",SerialNoFilter);
            SETFILTER("Item No.",ItemNoFilter);
            SETFILTER("Variant Code",VariantFilter);
            IF FINDSET THEN
              REPEAT
                RecRef.GETTABLE(ServItemLine);
                InsertBufferRec(RecRef,"Serial No.",'',"Item No.","Variant Code");
              UNTIL NEXT = 0;
          END;

        IF Loaner.READPERMISSION THEN
          WITH Loaner DO BEGIN
            RESET;
            IF SETCURRENTKEY("Serial No.") THEN;
            SETFILTER("Serial No.",SerialNoFilter);
            SETFILTER("Item No.",ItemNoFilter);
            IF FINDSET THEN
              REPEAT
                RecRef.GETTABLE(Loaner);
                InsertBufferRec(RecRef,"Serial No.",'',"Item No.",'');
              UNTIL NEXT = 0;
          END;

        IF ServiceItem.READPERMISSION THEN
          WITH ServiceItem DO BEGIN
            RESET;
            IF SETCURRENTKEY("Serial No.") THEN;
            SETFILTER("Serial No.",SerialNoFilter);
            SETFILTER("Item No.",ItemNoFilter);
            SETFILTER("Variant Code",VariantFilter);
            IF FINDSET THEN
              REPEAT
                RecRef.GETTABLE(ServiceItem);
                InsertBufferRec(RecRef,"Serial No.",'',"Item No.","Variant Code");
              UNTIL NEXT = 0;
          END;

        IF ServiceItemComponent.READPERMISSION THEN
          WITH ServiceItemComponent DO BEGIN
            RESET;
            IF SETCURRENTKEY("Serial No.") THEN;
            SETFILTER("Serial No.",SerialNoFilter);
            SETFILTER("Parent Service Item No.",ItemNoFilter);
            SETFILTER("Variant Code",VariantFilter);
            IF FINDSET THEN
              REPEAT
                RecRef.GETTABLE(ServiceItemComponent);
                InsertBufferRec(RecRef,"Serial No.",'',"Parent Service Item No.","Variant Code");
              UNTIL NEXT = 0;
          END;

        IF ServContractLine.READPERMISSION THEN
          WITH ServContractLine DO BEGIN
            RESET;
            IF SETCURRENTKEY("Serial No.") THEN;
            SETFILTER("Serial No.",SerialNoFilter);
            SETFILTER("Item No.",ItemNoFilter);
            SETFILTER("Variant Code",VariantFilter);
            IF FINDSET THEN
              REPEAT
                RecRef.GETTABLE(ServContractLine);
                InsertBufferRec(RecRef,"Serial No.",'',"Item No.","Variant Code");
              UNTIL NEXT = 0;
          END;

        IF FiledContractLine.READPERMISSION THEN
          WITH FiledContractLine DO BEGIN
            RESET;
            IF SETCURRENTKEY("Serial No.") THEN;
            SETFILTER("Serial No.",SerialNoFilter);
            SETFILTER("Item No.",ItemNoFilter);
            SETFILTER("Variant Code",VariantFilter);
            IF FINDSET THEN
              REPEAT
                RecRef.GETTABLE(FiledContractLine);
                InsertBufferRec(RecRef,"Serial No.",'',"Item No.","Variant Code");
              UNTIL NEXT = 0;
          END;
      END;

      IF JobLedgEntry.READPERMISSION THEN
        WITH JobLedgEntry DO BEGIN
          RESET;
          IF LotNoFilter <> '' THEN
            IF SETCURRENTKEY("Lot No.") THEN;
          IF SerialNoFilter <> '' THEN
            IF SETCURRENTKEY("Serial No.") THEN;
          SETFILTER("Lot No.",LotNoFilter);
          SETFILTER("Serial No.",SerialNoFilter);
          SETFILTER("Variant Code",VariantFilter);
          IF FINDSET THEN
            REPEAT
              RecRef.GETTABLE(JobLedgEntry);
              InsertBufferRec(RecRef,"Serial No.","Lot No.",'',"Variant Code");
              TempJobLedgEntry := JobLedgEntry;
              IF TempJobLedgEntry.INSERT THEN;
            UNTIL NEXT = 0;
        END;
    END;

    LOCAL PROCEDURE SearchValueEntries@15();
    VAR
      ValueEntry@1000 : Record 5802;
    BEGIN
      IF ValueEntry.READPERMISSION THEN
        WITH ValueEntry DO BEGIN
          RESET;
          SETCURRENTKEY("Item Ledger Entry No.");
          SETRANGE("Item Ledger Entry No.",ItemLedgEntry."Entry No.");
          SETRANGE("Entry Type","Entry Type"::"Direct Cost");
          SETFILTER("Document Type",'<>%1',ItemLedgEntry."Document Type");
          IF FINDSET THEN
            REPEAT
              CASE "Document Type" OF
                "Document Type"::"Sales Invoice":
                  FindSalesInvoice("Document No.");
                "Document Type"::"Sales Credit Memo":
                  FindSalesCrMemo("Document No.");
                "Document Type"::"Service Invoice":
                  FindServInvoice("Document No.");
                "Document Type"::"Service Credit Memo":
                  FindServCrMemo("Document No.");
                "Document Type"::"Purchase Invoice":
                  FindPurchInvoice("Document No.");
                "Document Type"::"Purchase Credit Memo":
                  FindPurchCrMemo("Document No.");
              END;
            UNTIL NEXT = 0;
        END;
    END;

    LOCAL PROCEDURE FindSalesInvoice@10(DocumentNo@1002 : Code[20]);
    VAR
      SalesInvHeader@1000 : Record 112;
      RecRef@1001 : RecordRef;
    BEGIN
      IF SalesInvHeader.READPERMISSION THEN
        IF SalesInvHeader.GET(DocumentNo) THEN BEGIN
          RecRef.GETTABLE(SalesInvHeader);
          WITH ItemLedgEntry DO
            InsertBufferRec(RecRef,"Serial No.","Lot No.","Item No.","Variant Code");

          TempSalesInvHeader := SalesInvHeader;
          IF TempSalesInvHeader.INSERT THEN;
        END;
    END;

    LOCAL PROCEDURE FindSalesCrMemo@5(DocumentNo@1000 : Code[20]);
    VAR
      SalesCrMemoHeader@1002 : Record 114;
      RecRef@1001 : RecordRef;
    BEGIN
      IF SalesCrMemoHeader.READPERMISSION THEN
        IF SalesCrMemoHeader.GET(DocumentNo) THEN BEGIN
          RecRef.GETTABLE(SalesCrMemoHeader);
          WITH ItemLedgEntry DO
            InsertBufferRec(RecRef,"Serial No.","Lot No.","Item No.","Variant Code");

          TempSalesCrMemoHeader := SalesCrMemoHeader;
          IF TempSalesCrMemoHeader.INSERT THEN;
        END;
    END;

    LOCAL PROCEDURE FindServInvoice@13(DocumentNo@1002 : Code[20]);
    VAR
      ServInvHeader@1000 : Record 5992;
      RecRef@1001 : RecordRef;
    BEGIN
      IF ServInvHeader.READPERMISSION THEN
        IF ServInvHeader.GET(DocumentNo) THEN BEGIN
          RecRef.GETTABLE(ServInvHeader);
          WITH ItemLedgEntry DO
            InsertBufferRec(RecRef,"Serial No.","Lot No.","Item No.","Variant Code");

          TempServInvHeader := ServInvHeader;
          IF TempServInvHeader.INSERT THEN;
        END;
    END;

    LOCAL PROCEDURE FindServCrMemo@22(DocumentNo@1000 : Code[20]);
    VAR
      ServCrMemoHeader@1002 : Record 5994;
      RecRef@1001 : RecordRef;
    BEGIN
      IF ServCrMemoHeader.READPERMISSION THEN
        IF ServCrMemoHeader.GET(DocumentNo) THEN BEGIN
          RecRef.GETTABLE(ServCrMemoHeader);
          WITH ItemLedgEntry DO
            InsertBufferRec(RecRef,"Serial No.","Lot No.","Item No.","Variant Code");

          TempServCrMemoHeader := ServCrMemoHeader;
          IF TempServCrMemoHeader.INSERT THEN;
        END;
    END;

    LOCAL PROCEDURE FindPurchInvoice@29(DocumentNo@1002 : Code[20]);
    VAR
      PurchInvHeader@1000 : Record 122;
      RecRef@1001 : RecordRef;
    BEGIN
      IF PurchInvHeader.READPERMISSION THEN
        IF PurchInvHeader.GET(DocumentNo) THEN BEGIN
          RecRef.GETTABLE(PurchInvHeader);
          WITH ItemLedgEntry DO
            InsertBufferRec(RecRef,"Serial No.","Lot No.","Item No.","Variant Code");

          TempPurchInvHeader := PurchInvHeader;
          IF TempPurchInvHeader.INSERT THEN;
        END;
    END;

    LOCAL PROCEDURE FindPurchCrMemo@30(DocumentNo@1000 : Code[20]);
    VAR
      PurchCrMemoHeader@1002 : Record 124;
      RecRef@1001 : RecordRef;
    BEGIN
      IF PurchCrMemoHeader.READPERMISSION THEN
        IF PurchCrMemoHeader.GET(DocumentNo) THEN BEGIN
          RecRef.GETTABLE(PurchCrMemoHeader);
          WITH ItemLedgEntry DO
            InsertBufferRec(RecRef,"Serial No.","Lot No.","Item No.","Variant Code");

          TempPurchCrMemoHeader := PurchCrMemoHeader;
          IF TempPurchCrMemoHeader.INSERT THEN;
        END;
    END;

    PROCEDURE FindPostedWhseShptLine@6();
    VAR
      PostedWhseShptLine@1001 : Record 7323;
      RecRef@1000 : RecordRef;
    BEGIN
      IF PostedWhseShptLine.READPERMISSION THEN
        WITH PostedWhseShptLine DO BEGIN
          RESET;
          SETCURRENTKEY("Posted Source No.","Posting Date");
          SETRANGE("Posted Source No.",ItemLedgEntry."Document No.");
          SETRANGE("Posting Date",ItemLedgEntry."Posting Date");
          SETRANGE("Item No.",ItemLedgEntry."Item No.");
          SETRANGE("Variant Code",ItemLedgEntry."Variant Code");
          SETRANGE("Source Line No.",ItemLedgEntry."Document Line No.");
          IF FIND('-') THEN BEGIN
            RecRef.GETTABLE(PostedWhseShptLine);
            WITH ItemLedgEntry DO
              InsertBufferRec(RecRef,"Serial No.","Lot No.","Item No.","Variant Code");

            TempPostedWhseShptLine := PostedWhseShptLine;
            IF TempPostedWhseShptLine.INSERT THEN;
          END;
        END;
    END;

    PROCEDURE FindPostedWhseRcptLine@8();
    VAR
      PostedWhseRcptLine@1001 : Record 7319;
      RecRef@1000 : RecordRef;
    BEGIN
      IF PostedWhseRcptLine.READPERMISSION THEN
        WITH PostedWhseRcptLine DO BEGIN
          RESET;
          SETCURRENTKEY("Posted Source No.","Posting Date");
          SETRANGE("Posted Source No.",ItemLedgEntry."Document No.");
          SETRANGE("Posting Date",ItemLedgEntry."Posting Date");
          SETRANGE("Item No.",ItemLedgEntry."Item No.");
          SETRANGE("Variant Code",ItemLedgEntry."Variant Code");
          SETRANGE("Source Line No.",ItemLedgEntry."Document Line No.");
          IF FIND('-') THEN BEGIN
            RecRef.GETTABLE(PostedWhseRcptLine);
            WITH ItemLedgEntry DO
              InsertBufferRec(RecRef,"Serial No.","Lot No.","Item No.","Variant Code");

            TempPostedWhseRcptLine := PostedWhseRcptLine;
            IF TempPostedWhseRcptLine.INSERT THEN;
          END;
        END;
    END;

    PROCEDURE Show@4(TableNo@1000 : Integer);
    BEGIN
      CASE TableNo OF
        DATABASE::"Item Ledger Entry":
          FORM.RUN(0,ItemLedgEntry);
        DATABASE::"Reservation Entry":
          FORM.RUN(0,ReservEntry);
        DATABASE::"Misc. Article Information":
          FORM.RUN(0,MiscArticleInfo);
        DATABASE::"Fixed Asset":
          FORM.RUN(0,FixedAsset);
        DATABASE::"Warehouse Activity Line":
          FORM.RUN(0,WhseActivLine);
        DATABASE::"Registered Whse. Activity Line":
          FORM.RUN(0,RgstrdWhseActivLine);
        DATABASE::"Service Item Line":
          FORM.RUN(0,ServItemLine);
        DATABASE::Loaner:
          FORM.RUN(0,Loaner);
        DATABASE::"Service Item":
          FORM.RUN(0,ServiceItem);
        DATABASE::"Service Item Component":
          FORM.RUN(0,ServiceItemComponent);
        DATABASE::"Service Contract Line":
          FORM.RUN(0,ServContractLine);
        DATABASE::"Filed Contract Line":
          FORM.RUN(0,FiledContractLine);
        DATABASE::"Serial No. Information":
          FORM.RUN(0,SerialNoInfo);
        DATABASE::"Lot No. Information":
          FORM.RUN(0,LotNoInfo);
        DATABASE::"Warehouse Entry":
          FORM.RUN(0,WhseEntry);
        DATABASE::"Posted Whse. Shipment Line":
          FORM.RUN(0,TempPostedWhseShptLine);
        DATABASE::"Posted Whse. Receipt Line":
          FORM.RUN(0,TempPostedWhseRcptLine);
        DATABASE::"Posted Invt. Put-away Line":
          FORM.RUN(0,PostedInvtPutAwayLine);
        DATABASE::"Posted Invt. Pick Line":
          FORM.RUN(0,PostedInvtPickLine);
        DATABASE::"Purch. Rcpt. Header":
          FORM.RUN(0,TempPurchRcptHeader);
        DATABASE::"Purch. Inv. Header":
          FORM.RUN(0,TempPurchInvHeader);
        DATABASE::"Purch. Cr. Memo Hdr.":
          FORM.RUN(0,TempPurchCrMemoHeader);
        DATABASE::"Sales Shipment Header":
          FORM.RUN(0,TempSalesShptHeader);
        DATABASE::"Sales Invoice Header":
          FORM.RUN(0,TempSalesInvHeader);
        DATABASE::"Sales Cr.Memo Header":
          FORM.RUN(0,TempSalesCrMemoHeader);
        DATABASE::"Service Shipment Header":
          FORM.RUN(0,TempServShptHeader);
        DATABASE::"Service Invoice Header":
          FORM.RUN(0,TempServInvHeader);
        DATABASE::"Service Cr.Memo Header":
          FORM.RUN(0,TempServCrMemoHeader);
        DATABASE::"Transfer Shipment Header":
          FORM.RUN(0,TempTransShipHeader);
        DATABASE::"Return Shipment Header":
          FORM.RUN(0,TempReturnShipHeader);
        DATABASE::"Return Receipt Header":
          FORM.RUN(0,TempReturnRcptHeader);
        DATABASE::"Transfer Receipt Header":
          FORM.RUN(0,TempTransRcptHeader);
        DATABASE::"Production Order":
          FORM.RUN(0,TempProdOrder);
        DATABASE::"Sales Line":
          FORM.RUN(0,TempSalesLine);
        DATABASE::"Service Line":
          FORM.RUN(0,TempServLine);
        DATABASE::"Purchase Line":
          FORM.RUN(0,TempPurchLine);
        DATABASE::"Requisition Line":
          FORM.RUN(0,TempReqLine);
        DATABASE::"Item Journal Line":
          FORM.RUN(0,TempItemJnlLine);
        DATABASE::"BOM Journal Line":
          FORM.RUN(0,TempBOMJnlLine);
        DATABASE::"Prod. Order Line":
          FORM.RUN(0,TempProdOrderLine);
        DATABASE::"Prod. Order Component":
          FORM.RUN(0,TempProdOrderComp);
        DATABASE::"Planning Component":
          FORM.RUN(0,TempPlanningComponent);
        DATABASE::"Transfer Line":
          FORM.RUN(0,TempTransLine);
        DATABASE::"Job Ledger Entry":
          FORM.RUN(0,TempJobLedgEntry);
      END;
    END;

    PROCEDURE InsertBufferRec@3(RecRef@1000 : RecordRef;SerialNo@1007 : Code[20];LotNo@1006 : Code[20];ItemNo@1005 : Code[20];Variant@1004 : Code[10]);
    VAR
      KeyFldRef@1003 : FieldRef;
      KeyRef1@1002 : KeyRef;
      i@1001 : Integer;
    BEGIN
      IF (SerialNo = '') AND (LotNo = '') THEN
        EXIT;

      TempRecordBuffer.SETCURRENTKEY("Search Record ID");
      TempRecordBuffer.SETRANGE("Search Record ID",FORMAT(RecRef.RECORDID));
      TempRecordBuffer.SETRANGE("Serial No.",SerialNo);
      TempRecordBuffer.SETRANGE("Lot No.",LotNo);
      TempRecordBuffer.SETRANGE("Item No.",ItemNo);
      TempRecordBuffer.SETRANGE("Variant Code",Variant);
      IF NOT TempRecordBuffer.FIND('-') THEN BEGIN
        TempRecordBuffer.INIT;
        TempRecordBuffer."Entry No." := LastEntryNo + 10;
        LastEntryNo := TempRecordBuffer."Entry No.";

        TempRecordBuffer."Table No." := RecRef.NUMBER;
        TempRecordBuffer."Table Name" := GetTableCaption(RecRef.NUMBER);
        TempRecordBuffer."Record Identifier" := RecRef.RECORDID;
        TempRecordBuffer."Search Record ID" := FORMAT(TempRecordBuffer."Record Identifier");

        KeyRef1 := RecRef.KEYINDEX(1);
        FOR i := 1 TO KeyRef1.FIELDCOUNT DO BEGIN
          KeyFldRef := KeyRef1.FIELDINDEX(i);
          IF i = 1 THEN
            TempRecordBuffer."Primary Key" :=
              STRSUBSTNO('%1=%2',KeyFldRef.CAPTION,FormatValue(KeyFldRef,RecRef.NUMBER))
          ELSE
            IF MAXSTRLEN(TempRecordBuffer."Primary Key") >
              STRLEN(TempRecordBuffer."Primary Key") +
              STRLEN(STRSUBSTNO(', %1=%2',KeyFldRef.CAPTION,FormatValue(KeyFldRef,RecRef.NUMBER)))
            THEN
              TempRecordBuffer."Primary Key" :=
                COPYSTR(
                  TempRecordBuffer."Primary Key" +
                  STRSUBSTNO(', %1=%2',KeyFldRef.CAPTION,FormatValue(KeyFldRef,RecRef.NUMBER)),
                  1,MAXSTRLEN(TempRecordBuffer."Primary Key"));
          CASE i OF
            1:
              BEGIN
                TempRecordBuffer."Primary Key Field 1 No." := KeyFldRef.NUMBER;
                TempRecordBuffer."Primary Key Field 1 Value" := FormatValue(KeyFldRef,RecRef.NUMBER);
              END;
            2:
              BEGIN
                TempRecordBuffer."Primary Key Field 2 No." := KeyFldRef.NUMBER;
                TempRecordBuffer."Primary Key Field 2 Value" := FormatValue(KeyFldRef,RecRef.NUMBER);
              END;
            3:
              BEGIN
                TempRecordBuffer."Primary Key Field 3 No." := KeyFldRef.NUMBER;
                TempRecordBuffer."Primary Key Field 3 Value" := FormatValue(KeyFldRef,RecRef.NUMBER);
              END;
          END;
        END;

        TempRecordBuffer."Serial No." := SerialNo;
        TempRecordBuffer."Lot No." := LotNo;
        TempRecordBuffer."Item No." := ItemNo;
        TempRecordBuffer."Variant Code" := Variant;

        TempRecordBuffer.INSERT;
      END;
    END;

    PROCEDURE Collect@2(VAR RecordBuffer@1000 : TEMPORARY Record 6529);
    BEGIN
      RecordBuffer.RESET;
      RecordBuffer.DELETEALL;

      TempRecordBuffer.RESET;
      IF TempRecordBuffer.FIND('-') THEN
        REPEAT
          RecordBuffer := TempRecordBuffer;
          RecordBuffer.INSERT;
        UNTIL TempRecordBuffer.NEXT = 0;
    END;

    PROCEDURE GetTableCaption@12(TableNumber@1001 : Integer) : Text[80];
    VAR
      AllObjWithCaption@1000 : Record 2000000058;
    BEGIN
      AllObjWithCaption.RESET;
      AllObjWithCaption.SETRANGE("Object Type",AllObjWithCaption."Object Type"::TableData);
      AllObjWithCaption.SETRANGE("Object ID",TableNumber);
      IF AllObjWithCaption.FIND('-') THEN
        EXIT(AllObjWithCaption."Object Caption")
      ELSE
        EXIT('');
    END;

    LOCAL PROCEDURE FormatValue@17(VAR FldRef@1000 : FieldRef;TableNumber@1005 : Integer) : Text[250];
    VAR
      Field@1004 : Record 2000000041;
      OptionNo@1001 : Integer;
      OptionStr@1002 : Text[1024];
      i@1003 : Integer;
    BEGIN
      GetField(TableNumber,FldRef.NUMBER,Field);
      IF Field.Type = Field.Type::Option THEN BEGIN
        OptionNo := FldRef.VALUE;
        OptionStr := FORMAT(FldRef.OPTIONCAPTION);
        FOR i := 1 TO OptionNo DO
          OptionStr := COPYSTR(OptionStr,STRPOS(OptionStr,',') + 1);
        IF STRPOS(OptionStr,',') > 0 THEN
          IF STRPOS(OptionStr,',') = 1 THEN
            OptionStr := ''
          ELSE
            OptionStr := COPYSTR(OptionStr,1,STRPOS(OptionStr,',') - 1);
        EXIT(OptionStr);
      END ELSE
        EXIT(FORMAT(FldRef.VALUE));
    END;

    LOCAL PROCEDURE GetField@7(TableNumber@1001 : Integer;FieldNumber@1002 : Integer;VAR Field2@1003 : Record 2000000041);
    VAR
      Field@1000 : Record 2000000041;
    BEGIN
      IF NOT TempField.GET(TableNumber,FieldNumber) THEN BEGIN
        Field.GET(TableNumber,FieldNumber);
        TempField := Field;
        TempField.INSERT;
      END;
      Field2 := TempField;
    END;

    BEGIN
    END.
  }
}
