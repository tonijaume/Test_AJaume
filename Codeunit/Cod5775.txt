OBJECT Codeunit 5775 Whse. Management
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=NAVW16.00.01;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=The Source Document is not defined.;ESP=No est  definido el Documento origen.';

    PROCEDURE GetSourceDocument@2(VAR SourceDocument@1000 : ',S. Order,S. Invoice,S. Credit Memo,S. Return Order,P. Order,P. Invoice,P. Credit Memo,P. Return Order,Inb. Transfer,Outb. Transfer,Prod. Consumption,Item Jnl.,Phys. Invt. Jnl.,Reclass. Jnl.,Consumption Jnl.,Output Jnl.,BOM Jnl.,Serv. Order';SourceType@1001 : Integer;SourceSubtype@1002 : '0,1,2,3,4,5,6,7,8,9,10');
    BEGIN
      CASE SourceType OF
        DATABASE::"Sales Line":
          BEGIN
            IF SourceSubtype = 1 THEN
              SourceDocument := SourceDocument::"S. Order";
            IF SourceSubtype = 2 THEN
              SourceDocument := SourceDocument::"S. Invoice";
            IF SourceSubtype = 3 THEN
              SourceDocument := SourceDocument::"S. Credit Memo";
            IF SourceSubtype = 5 THEN
              SourceDocument := SourceDocument::"S. Return Order";
            EXIT;
          END;
        DATABASE::"Purchase Line":
          BEGIN
            IF SourceSubtype = 1 THEN
              SourceDocument := SourceDocument::"P. Order";
            IF SourceSubtype = 2 THEN
              SourceDocument := SourceDocument::"P. Invoice";
            IF SourceSubtype = 3 THEN
              SourceDocument := SourceDocument::"P. Credit Memo";
            IF SourceSubtype = 5 THEN
              SourceDocument := SourceDocument::"P. Return Order";
            EXIT;
          END;

        DATABASE::"Service Line":
          BEGIN
            SourceDocument := SourceDocument::"Serv. Order";
            EXIT;
          END;

        DATABASE::"Prod. Order Component":
          BEGIN
            SourceDocument := SourceDocument::"Prod. Consumption";
            EXIT;
          END;
        DATABASE::"Transfer Line":
          BEGIN
            IF SourceSubtype = 0 THEN
              SourceDocument := SourceDocument::"Outb. Transfer";
            IF SourceSubtype = 1 THEN
              SourceDocument := SourceDocument::"Inb. Transfer";
            EXIT;
          END;

        DATABASE::"Item Journal Line":
          BEGIN
            IF SourceSubtype = 0 THEN
              SourceDocument := SourceDocument::"Item Jnl.";
            IF SourceSubtype = 1 THEN
              SourceDocument := SourceDocument::"Reclass. Jnl.";
            IF SourceSubtype = 2 THEN
              SourceDocument := SourceDocument::"Phys. Invt. Jnl.";
            IF SourceSubtype = 4 THEN
              SourceDocument := SourceDocument::"Consumption Jnl.";
            IF SourceSubtype = 5 THEN
              SourceDocument := SourceDocument::"Output Jnl.";
            EXIT;
          END;
        DATABASE::"BOM Journal Line":
          BEGIN
            SourceDocument := SourceDocument::"BOM Jnl.";
            EXIT;
          END;
      END;
      ERROR(Text000);
    END;

    PROCEDURE GetSourceType@1(WhseWkshLine@1000 : Record 7326) SourceType : Integer;
    BEGIN
      WITH WhseWkshLine DO BEGIN
        CASE "Whse. Document Type" OF
          "Whse. Document Type"::Receipt:
            SourceType := DATABASE::"Posted Whse. Receipt Line";
          "Whse. Document Type"::Shipment:
            SourceType := DATABASE::"Warehouse Shipment Line";
          "Whse. Document Type"::Production:
            SourceType := DATABASE::"Prod. Order Component";
          "Whse. Document Type"::"Internal Put-away":
            SourceType := DATABASE::"Whse. Internal Put-away Line";
          "Whse. Document Type"::"Internal Pick":
            SourceType := DATABASE::"Whse. Internal Pick Line";
        END;
      END;
    END;

    PROCEDURE GetOutboundDocLineQtyOtsdg@3(SourceType@1006 : Integer;SourceSubType@1005 : '0,1,2,3,4,5,6,7,8,9,10';SourceNo@1004 : Code[20];SourceLineNo@1003 : Integer;SourceSubLineNo@1002 : Integer;VAR QtyOutstanding@1000 : Decimal;VAR QtyBaseOutstanding@1001 : Decimal);
    VAR
      WhseShptLine@1009 : Record 7321;
    BEGIN
      WhseShptLine.SETCURRENTKEY("Source Type");
      WhseShptLine.SETRANGE("Source Type",SourceType);
      WhseShptLine.SETRANGE("Source Subtype",SourceSubType);
      WhseShptLine.SETRANGE("Source No.",SourceNo);
      WhseShptLine.SETRANGE("Source Line No.",SourceLineNo);
      IF WhseShptLine.FINDSET THEN BEGIN
        WhseShptLine.CALCSUMS("Qty. Outstanding (Base)","Qty. Outstanding");
        QtyOutstanding := WhseShptLine."Qty. Outstanding";
        QtyBaseOutstanding := WhseShptLine."Qty. Outstanding (Base)";
      END ELSE
        GetSrcDocLineQtyOutstanding(SourceType,SourceSubType,SourceNo,
          SourceLineNo,SourceSubLineNo,QtyOutstanding,QtyBaseOutstanding);
    END;

    PROCEDURE GetSrcDocLineQtyOutstanding@7(SourceType@1006 : Integer;SourceSubType@1005 : '0,1,2,3,4,5,6,7,8,9,10';SourceNo@1004 : Code[20];SourceLineNo@1003 : Integer;SourceSubLineNo@1002 : Integer;VAR QtyOutstanding@1001 : Decimal;VAR QtyBaseOutstanding@1000 : Decimal);
    VAR
      SalesLine@1008 : Record 37;
      PurchaseLine@1009 : Record 39;
      TransferLine@1010 : Record 5741;
      ServiceLine@1013 : Record 5902;
      ProdOrderComp@1011 : Record 5407;
      ProdOrderLine@1012 : Record 5406;
    BEGIN
      CASE SourceType OF
        DATABASE::"Sales Line":
          IF SalesLine.GET(SourceSubType,SourceNo,SourceLineNo) THEN BEGIN
            QtyOutstanding := SalesLine."Outstanding Quantity";
            QtyBaseOutstanding := SalesLine."Outstanding Qty. (Base)";
          END;
        DATABASE::"Purchase Line":
          IF PurchaseLine.GET(SourceSubType,SourceNo,SourceLineNo) THEN BEGIN
            QtyOutstanding := PurchaseLine."Outstanding Quantity";
            QtyBaseOutstanding := PurchaseLine."Outstanding Qty. (Base)";
          END;
        DATABASE::"Transfer Line":
          IF TransferLine.GET(SourceNo,SourceLineNo) THEN
            CASE SourceSubType OF
              0: // Direction = Outbound
                BEGIN
                  QtyOutstanding :=
                    ROUND(TransferLine."Whse Outbnd. Otsdg. Qty (Base)" / (QtyOutstanding / QtyBaseOutstanding),0.00001);
                  QtyBaseOutstanding := TransferLine."Whse Outbnd. Otsdg. Qty (Base)";
                END;
              1: // Direction = Inbound
                BEGIN
                  QtyOutstanding :=
                    ROUND(TransferLine."Whse. Inbnd. Otsdg. Qty (Base)" / (QtyOutstanding / QtyBaseOutstanding),0.00001);
                  QtyBaseOutstanding := TransferLine."Whse. Inbnd. Otsdg. Qty (Base)";
                END;
            END;
        DATABASE::"Service Line":
          IF ServiceLine.GET(SourceSubType,SourceNo,SourceLineNo) THEN BEGIN
            QtyOutstanding := ServiceLine."Outstanding Quantity";
            QtyBaseOutstanding := ServiceLine."Outstanding Qty. (Base)";
          END;
        DATABASE::"Prod. Order Component":
          IF ProdOrderComp.GET(SourceSubType,SourceNo,SourceLineNo,SourceSubLineNo) THEN BEGIN
            QtyOutstanding := ProdOrderComp."Remaining Quantity";
            QtyBaseOutstanding := ProdOrderComp."Remaining Qty. (Base)";
          END;
        DATABASE::"Prod. Order Line":
          IF ProdOrderLine.GET(SourceSubType,SourceNo,SourceLineNo) THEN BEGIN
            QtyOutstanding := ProdOrderLine."Remaining Quantity";
            QtyBaseOutstanding := ProdOrderLine."Remaining Qty. (Base)";
          END;
        ELSE BEGIN
          QtyOutstanding := 0;
          QtyBaseOutstanding := 0;
        END;
      END;
    END;

    BEGIN
    END.
  }
}
