OBJECT Codeunit 6826 EP Delete Head Data Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=25/05/05;
    Time=12:00:00;
    Version List=NAVW14.00.01;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      DecodeXML@1000000000 : Codeunit 6813;
      SupportFunctions@1000000001 : Codeunit 6815;
      Text001@1000 : TextConst 'ENU=DeleteSalesHead - FilterString: %1.;ESP=EliminarCabeceraVentas - CadenaFiltro: %1.';

    PROCEDURE DeleteHeader@1000000005(VAR XMLDocInHead@1000000000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 3.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v3.0'.DOMDocument";TableNo@1000000001 : Integer;UserID@1000000004 : Code[20]) ReturnCode : Integer;
    VAR
      ChangeLogMgt@1000 : Codeunit 423;
      HeadRecordRef@1001 : RecordRef;
    BEGIN
      CASE TableNo OF
        DATABASE::Customer:
          ReturnCode := DeleteCustomer(XMLDocInHead,HeadRecordRef);
        DATABASE::Vendor:
          ReturnCode := DeleteVendor(XMLDocInHead,HeadRecordRef);
        DATABASE::Item:
          ReturnCode := DeleteItem(XMLDocInHead,HeadRecordRef);
        DATABASE::"Sales Header":
          ReturnCode := DeleteSalesHeader(XMLDocInHead,HeadRecordRef);
        DATABASE::"Purchase Header":
          ReturnCode := DeletePurchaseHeader(XMLDocInHead,HeadRecordRef);
        DATABASE::"Production BOM Version":
          ReturnCode := DeleteProdBOMVersion(XMLDocInHead,HeadRecordRef);
        DATABASE::"Routing Version":
          ReturnCode := DeleteRoutingVersion(XMLDocInHead,HeadRecordRef);
      END;

      // Make Change Log Entry
      IF SupportFunctions.CheckChangeLogInLic THEN
        IF ChangeLogMgt.GetTableTriggerMask(HeadRecordRef.NUMBER) IN [4,5,14,15] THEN BEGIN // All Maskvalues for Delete
          ChangeLogMgt.SetLogEmployeePortalActivity(UserID);
          ChangeLogMgt.LogDeletion(HeadRecordRef);
        END;
    END;

    LOCAL PROCEDURE DeleteCustomer@1000000000(VAR XMLDocInHead@1000000000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 3.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v3.0'.DOMDocument";VAR HeadRecordRef@1000000001 : RecordRef) ReturnCode : Integer;
    VAR
      Customer@1000 : Record 18;
      FilterString@1000000002 : Text[1024];
    BEGIN
      ReturnCode := 1000;

      FilterString :=
        STRSUBSTNO('WHERE(1=CONST(%1))',
          DecodeXML.GetValueByFieldIDFromHeadData(XMLDocInHead,Customer.FIELDNO("No.")));

      HeadRecordRef.OPEN(DATABASE::Customer,FALSE);
      HeadRecordRef.SETVIEW(FilterString);
      IF NOT HeadRecordRef.FIND('-') THEN BEGIN
        ReturnCode := 999; // No Customer found
        EXIT;
      END ELSE BEGIN
        IF SupportFunctions.CompareHashValues(DecodeXML.GetHashValue(XMLDocInHead),HeadRecordRef) THEN BEGIN
          HeadRecordRef.DELETE(TRUE);
          ReturnCode := 0;
        END ELSE
          ReturnCode := 20;
      END
    END;

    PROCEDURE DeleteVendor@1000000001(VAR XMLDocInHead@1000000001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 3.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v3.0'.DOMDocument";VAR HeadRecordRef@1000000000 : RecordRef) ReturnCode : Integer;
    VAR
      Vendor@1000 : Record 23;
      FilterString@1000000002 : Text[1024];
    BEGIN
      ReturnCode := 1000;

      FilterString :=
        STRSUBSTNO('WHERE(1=CONST(%1))',
          DecodeXML.GetValueByFieldIDFromHeadData(XMLDocInHead,Vendor.FIELDNO("No.")));

      HeadRecordRef.OPEN(DATABASE::Vendor,FALSE);
      HeadRecordRef.SETVIEW(FilterString);
      IF NOT HeadRecordRef.FIND('-') THEN BEGIN
        ReturnCode := 999; // No Vendor found
        EXIT;
      END ELSE BEGIN
        IF SupportFunctions.CompareHashValues(DecodeXML.GetHashValue(XMLDocInHead),HeadRecordRef) THEN BEGIN
          HeadRecordRef.DELETE(TRUE);
          ReturnCode := 0;
        END ELSE
          ReturnCode := 20;
      END
    END;

    PROCEDURE DeleteItem@2(VAR XMLDocInHead@1000000001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 3.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v3.0'.DOMDocument";VAR HeadRecordRef@1000000000 : RecordRef) ReturnCode : Integer;
    VAR
      Item@1000 : Record 27;
      FilterString@1000000002 : Text[1024];
    BEGIN
      ReturnCode := 1000;

      FilterString :=
        STRSUBSTNO('WHERE(1=CONST(%1))',
          DecodeXML.GetValueByFieldIDFromHeadData(XMLDocInHead,Item.FIELDNO("No.")));

      HeadRecordRef.OPEN(DATABASE::Item,FALSE);
      HeadRecordRef.SETVIEW(FilterString);
      IF NOT HeadRecordRef.FIND('-') THEN BEGIN
        ReturnCode := 999; // No Vendor found
        EXIT;
      END ELSE BEGIN
        IF SupportFunctions.CompareHashValues(DecodeXML.GetHashValue(XMLDocInHead),HeadRecordRef) THEN BEGIN
          HeadRecordRef.DELETE(TRUE);
          ReturnCode := 0;
        END ELSE
          ReturnCode := 20;
      END
    END;

    LOCAL PROCEDURE DeletePurchaseHeader@1(VAR XMLDocInHead@1000000000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 3.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v3.0'.DOMDocument";VAR HeadRecordRef@1000000001 : RecordRef) ReturnCode : Integer;
    VAR
      PurchaseHeader@1000 : Record 38;
      FilterString@1000000002 : Text[1024];
    BEGIN
      ReturnCode := 1000;

      FilterString :=
        STRSUBSTNO('WHERE(1=CONST(%1),3=CONST(%2))',
          DecodeXML.GetValueByFieldIDFromHeadData(XMLDocInHead,PurchaseHeader.FIELDNO("Document Type")),
          DecodeXML.GetValueByFieldIDFromHeadData(XMLDocInHead,PurchaseHeader.FIELDNO("No.")));

      IF SupportFunctions.CheckIfDebug THEN
        MESSAGE(Text001,FilterString);

      HeadRecordRef.OPEN(DATABASE::"Purchase Header",FALSE);
      HeadRecordRef.SETVIEW(FilterString);
      IF NOT HeadRecordRef.FIND('-') THEN BEGIN
        ReturnCode := 999; // No SalesHeader found
        EXIT;
      END ELSE BEGIN
        IF SupportFunctions.CompareHashValues(DecodeXML.GetHashValue(XMLDocInHead),HeadRecordRef) THEN BEGIN
          HeadRecordRef.DELETE(TRUE);
          ReturnCode := 0;
        END ELSE
          ReturnCode := 20;
      END
    END;

    LOCAL PROCEDURE DeleteSalesHeader@1000000003(VAR XMLDocInHead@1000000000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 3.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v3.0'.DOMDocument";VAR HeadRecordRef@1000000001 : RecordRef) ReturnCode : Integer;
    VAR
      SalesHeader@1000 : Record 36;
      FilterString@1000000002 : Text[1024];
    BEGIN
      ReturnCode := 1000;

      FilterString :=
        STRSUBSTNO('WHERE(1=CONST(%1),3=CONST(%2))',
          DecodeXML.GetValueByFieldIDFromHeadData(XMLDocInHead,SalesHeader.FIELDNO("Document Type")),
          DecodeXML.GetValueByFieldIDFromHeadData(XMLDocInHead,SalesHeader.FIELDNO("No.")));

      IF SupportFunctions.CheckIfDebug THEN
        MESSAGE(Text001,FilterString);

      HeadRecordRef.OPEN(DATABASE::"Sales Header",FALSE);
      HeadRecordRef.SETVIEW(FilterString);
      IF NOT HeadRecordRef.FIND('-') THEN BEGIN
        ReturnCode := 999; // No SalesHeader found
        EXIT;
      END ELSE BEGIN
        IF SupportFunctions.CompareHashValues(DecodeXML.GetHashValue(XMLDocInHead),HeadRecordRef) THEN BEGIN
          HeadRecordRef.DELETE(TRUE);
          ReturnCode := 0;
        END ELSE
          ReturnCode := 20;
      END
    END;

    LOCAL PROCEDURE DeleteProdBOMVersion@4(VAR XMLDocInHead@1000000000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 3.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v3.0'.DOMDocument";VAR HeadRecordRef@1000000001 : RecordRef) ReturnCode : Integer;
    VAR
      ProdBOMVersion@1000 : Record 99000779;
      FilterString@1000000002 : Text[1024];
    BEGIN
      ReturnCode := 1000;

      FilterString :=
        STRSUBSTNO('WHERE(1=CONST(%1),2=CONST(%2))',
          DecodeXML.GetValueByFieldIDFromHeadData(XMLDocInHead,ProdBOMVersion.FIELDNO("Production BOM No.")),
          DecodeXML.GetValueByFieldIDFromHeadData(XMLDocInHead,ProdBOMVersion.FIELDNO("Version Code")));

      IF SupportFunctions.CheckIfDebug THEN
        MESSAGE(Text001,FilterString);

      HeadRecordRef.OPEN(DATABASE::"Production BOM Version",FALSE);
      HeadRecordRef.SETVIEW(FilterString);
      IF NOT HeadRecordRef.FIND('-') THEN BEGIN
        ReturnCode := 999; // No SalesHeader found
        EXIT;
      END ELSE BEGIN
        IF SupportFunctions.CompareHashValues(DecodeXML.GetHashValue(XMLDocInHead),HeadRecordRef) THEN BEGIN
          HeadRecordRef.DELETE(TRUE);
          ReturnCode := 0;
        END ELSE
          ReturnCode := 20;
      END
    END;

    LOCAL PROCEDURE DeleteRoutingVersion@5(VAR XMLDocInHead@1000000000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 3.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v3.0'.DOMDocument";VAR HeadRecordRef@1000000001 : RecordRef) ReturnCode : Integer;
    VAR
      RoutingVersion@1000 : Record 99000786;
      FilterString@1000000002 : Text[1024];
    BEGIN
      ReturnCode := 1000;

      FilterString :=
        STRSUBSTNO('WHERE(1=CONST(%1),2=CONST(%2))',
          DecodeXML.GetValueByFieldIDFromHeadData(XMLDocInHead,RoutingVersion.FIELDNO("Routing No.")),
          DecodeXML.GetValueByFieldIDFromHeadData(XMLDocInHead,RoutingVersion.FIELDNO("Version Code")));

      IF SupportFunctions.CheckIfDebug THEN
        MESSAGE(Text001,FilterString);

      HeadRecordRef.OPEN(DATABASE::"Routing Version",FALSE);
      HeadRecordRef.SETVIEW(FilterString);
      IF NOT HeadRecordRef.FIND('-') THEN BEGIN
        ReturnCode := 999; // No SalesHeader found
        EXIT;
      END ELSE BEGIN
        IF SupportFunctions.CompareHashValues(DecodeXML.GetHashValue(XMLDocInHead),HeadRecordRef) THEN BEGIN
          HeadRecordRef.DELETE(TRUE);
          ReturnCode := 0;
        END ELSE
          ReturnCode := 20;
      END
    END;

    BEGIN
    END.
  }
}
