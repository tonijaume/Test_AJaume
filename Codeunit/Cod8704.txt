OBJECT Codeunit 8704 Mobile XML DOM Management
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVW16.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1002 : TextConst 'ENU=XML Parser Error:\;ESP=Error del analizador XML:\';
      Text001@1001 : TextConst 'ENU=Parent node for "%1" is not instantiated.;ESP=No se ha creado la instancia del nodo principal para "%1".';
      Text002@1000 : TextConst 'ENU=The "%1" node could not be found as a child node for the "%2" node.;ESP=No se ha podido encontrar el nodo "%1" como nodo secundario del nodo "%2".';

    PROCEDURE AddElement@5(VAR XMLNode@1001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";NodeName@1002 : Text[250];NodeText@1003 : Text[250];NameSpace@1000 : Text[250];VAR XMLCreatedNode@1005 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode");
    VAR
      XMLNewChildNode@1006 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
    BEGIN
      XMLNewChildNode := XMLNode.ownerDocument.createNode('element',NodeName,NameSpace);

      IF NodeText <> '' THEN
        XMLNewChildNode.text := NodeText;

      XMLNode.appendChild(XMLNewChildNode);
      XMLCreatedNode := XMLNewChildNode;
    END;

    PROCEDURE AddAttribute@6(VAR XMLNode@1001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";Name@1002 : Text[250];Value@1003 : Text[250]);
    VAR
      XMLTempAttribute@1004 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
    BEGIN
      XMLTempAttribute := XMLNode.ownerDocument.createAttribute(Name);
      IF Value <> '' THEN
        XMLTempAttribute.nodeValue := Value;
      XMLNode.attributes.setNamedItem(XMLTempAttribute);
    END;

    PROCEDURE FindNode@2(VAR XMLNode@1000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";NodePath@1001 : Text[250];VAR XMLFoundNode@1002 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode");
    BEGIN
      IF ISCLEAR(XMLNode) THEN
        ERROR(Text000 + Text001,NodePath);

      SetSelectionNamespace(XMLNode,NodePath);
      XMLFoundNode := XMLNode.selectSingleNode(NodePath);

      IF ISCLEAR(XMLFoundNode) THEN
        ERROR(Text000 + Text002,COPYSTR(NodePath,3),XMLNode.nodeName);
    END;

    PROCEDURE FindNodes@4(VAR XMLNode@1000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";NodePath@1001 : Text[250];VAR XMLFoundNodeList@1002 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF82-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNodeList") : Boolean;
    BEGIN
      SetSelectionNamespace(XMLNode,NodePath);
      XMLFoundNodeList := XMLNode.selectNodes(NodePath);

      IF ISCLEAR(XMLFoundNodeList) THEN
        EXIT(FALSE);

      IF XMLFoundNodeList.length <= 0 THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE GetAttribute@7(VAR XMLNode@1001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";AttributeName@1000 : Text[250];VAR AttributeValue@1003 : Text[250]) : Boolean;
    VAR
      XMLAttribute@1002 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF85-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMAttribute";
    BEGIN
      XMLAttribute := XMLNode.selectSingleNode(STRSUBSTNO('@%1',AttributeName));

      IF ISCLEAR(XMLAttribute) THEN
        EXIT(FALSE);

      AttributeValue := XMLAttribute.text;
      EXIT(TRUE);
    END;

    PROCEDURE Base64SaveNode@1(VAR XmlNode@1000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";VAR Base64OutStream@1001 : OutStream);
    VAR
      XMLText@1003 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF87-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMText";
      NextCharNo@1008 : Integer;
      Base64Chars@1002 : Text[64];
      FourChars@1005 : Text[4];
      TrailingEqualSigns@1004 : Integer;
      Char0@1009 : Char;
      Char1@1010 : Char;
      Char2@1011 : Char;
      Char3@1012 : Char;
      Char4@1013 : Char;
    BEGIN
      XMLText := XmlNode.firstChild;
      Base64Chars := 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';

      NextCharNo := 0;
      WHILE NextCharNo < XMLText.length DO BEGIN
        REPEAT
          FourChars[1] := Base64GetNextChar(XMLText,NextCharNo);
        UNTIL (NOT (FourChars[1] IN [9,10,13,32])) OR (NextCharNo = XMLText.length);

        IF NextCharNo < XMLText.length THEN BEGIN
          // First char
          Char1 := STRPOS(Base64Chars,FORMAT(FourChars[1])) - 1;

          // Second char
          FourChars[2] := Base64GetNextChar(XMLText,NextCharNo);
          Char2 := STRPOS(Base64Chars,FORMAT(FourChars[2])) - 1;

          // Third char
          FourChars[3] := Base64GetNextChar(XMLText,NextCharNo);
          TrailingEqualSigns := 0;
          IF FourChars[3] <> '=' THEN
            Char3 := STRPOS(Base64Chars,FORMAT(FourChars[3])) - 1
          ELSE BEGIN
            Char3 := 0;
            TrailingEqualSigns := TrailingEqualSigns + 1;
          END;

          // Fourth char
          FourChars[4] := Base64GetNextChar(XMLText,NextCharNo);
          IF FourChars[4] <> '=' THEN
            Char4 := STRPOS(Base64Chars,FORMAT(FourChars[4])) - 1
          ELSE BEGIN
            Char4 := 0;
            TrailingEqualSigns := TrailingEqualSigns + 1;
          END;

          // First byte
          Char0 := (Char1 * 4) + (Char2 DIV 16);
          Base64OutStream.WRITE(Char0);

          // Second byte
          IF TrailingEqualSigns < 2 THEN BEGIN
            Char0 := ((Char2 MOD 16) * 16) + (Char3 DIV 4);
            Base64OutStream.WRITE(Char0);
          END;

          // Third byte
          IF TrailingEqualSigns = 0 THEN BEGIN
            Char0 := ((Char3 MOD 4) * 64) + Char4;
            Base64OutStream.WRITE(Char0);
          END;
        END;
      END;
    END;

    LOCAL PROCEDURE Base64GetNextChar@3(VAR XMLText@1000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF87-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMText";VAR NextCharNo@1001 : Integer) : Char;
    VAR
      TextChar@1002 : Text[1];
    BEGIN
      TextChar := XMLText.substringData(NextCharNo,1);
      NextCharNo := NextCharNo + 1;
      EXIT(TextChar[1]);
    END;

    PROCEDURE SchemaValidation@9(DocumentType@1001 : Text[50];VAR XMLRequestDoc@1000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60");
    VAR
      MobDocTypeSchema@1002 : Record 8711;
      MobDocSchema@1003 : Record 8710;
      SchemaInstream@1006 : InStream;
      XMLSchemaDoc@1007 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60";
      XMLSchemaCache@1005 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A07-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.XMLSchemaCache60";
      XMLParseError@1004 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{3EFAA426-272F-11D2-836F-0000F87A7782}:'Microsoft XML, v6.0'.IXMLDOMParseError";
    BEGIN
      IF ISCLEAR(XMLSchemaCache) THEN
        CREATE(XMLSchemaCache);
      IF ISCLEAR(XMLSchemaDoc) THEN
        CREATE(XMLSchemaDoc);

      GetBaseDocumentSchema(DocumentType,XMLSchemaDoc);
      XMLSchemaCache.add('http://schemas.microsoft.com/Dynamics/Mobile/2007/04/Documents/Request',XMLSchemaDoc);

      IF DocumentType <> '' THEN BEGIN
        MobDocTypeSchema.SETRANGE("Document Type",DocumentType);
        IF MobDocTypeSchema.FINDSET THEN
          REPEAT
            CLEAR(XMLSchemaDoc);
            CREATE(XMLSchemaDoc);
            MobDocSchema.GET(MobDocTypeSchema."Document Schema Code");
            MobDocSchema.CALCFIELDS(Schema);
            IF MobDocSchema.Schema.HASVALUE THEN BEGIN
              MobDocSchema.Schema.CREATEINSTREAM(SchemaInstream);
              XMLSchemaDoc.load(SchemaInstream);
              XMLSchemaCache.add(MobDocSchema.Namespace,XMLSchemaDoc);
            END;
          UNTIL MobDocTypeSchema.NEXT = 0;
      END;

      XMLRequestDoc.schemas := XMLSchemaCache;

      XMLParseError := XMLRequestDoc.validate;
      IF XMLParseError.errorCode <> 0 THEN
        ERROR(XMLParseError.reason);
    END;

    LOCAL PROCEDURE GetBaseDocumentSchema@8(DocumentType@1000 : Text[50];VAR XMLSchemaDoc@1001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60");
    VAR
      MobDocType@1002 : Record 8704;
      XMLRootNode@1005 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      XMLNode@1007 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      XMLComplexNode@1004 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      XMLSequenceNode@1006 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      XMLChoiceNode@1008 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      StrictSchemaValidation@1003 : Boolean;
    BEGIN
      IF DocumentType = '' THEN
        StrictSchemaValidation := FALSE
      ELSE BEGIN
        MobDocType.GET(DocumentType);
        StrictSchemaValidation := MobDocType."Strict Schema Validation";
      END;

      IF ISCLEAR(XMLSchemaDoc) THEN
        CREATE(XMLSchemaDoc);

      XMLSchemaDoc.loadXML(
        '<?xml version="1.0" encoding="utf-8" ?>' +
        '<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" />');

      XMLRootNode := XMLSchemaDoc.documentElement;
      AddAttribute(XMLRootNode,'xmlns','http://schemas.microsoft.com/Dynamics/Mobile/2007/04/Documents/Request');
      AddAttribute(XMLRootNode,'attributeFormDefault','unqualified');
      AddAttribute(XMLRootNode,'elementFormDefault','qualified');
      AddAttribute(XMLRootNode,'targetNamespace','http://schemas.microsoft.com/Dynamics/Mobile/2007/04/Documents/Request');

      AddElement(XMLRootNode,'xs:element','','http://www.w3.org/2001/XMLSchema',XMLNode);
      AddAttribute(XMLNode,'name','request');
      AddAttribute(XMLNode,'type','request');

      AddElement(XMLRootNode,'xs:complexType','','http://www.w3.org/2001/XMLSchema',XMLComplexNode);
      AddAttribute(XMLComplexNode,'name','requestData');

      AddElement(XMLComplexNode,'xs:sequence','','http://www.w3.org/2001/XMLSchema',XMLSequenceNode);

      AddElement(XMLSequenceNode,'xs:any','','http://www.w3.org/2001/XMLSchema',XMLNode);
      AddAttribute(XMLNode,'minOccurs','0');
      AddAttribute(XMLNode,'maxOccurs','unbounded');
      AddAttribute(XMLNode,'namespace','##any');
      IF StrictSchemaValidation THEN
        AddAttribute(XMLNode,'processContents','strict')
      ELSE
        AddAttribute(XMLNode,'processContents','lax');

      AddElement(XMLComplexNode,'xs:attribute','','http://www.w3.org/2001/XMLSchema',XMLNode);
      AddAttribute(XMLNode,'name','name');
      AddAttribute(XMLNode,'use','required');

      AddElement(XMLRootNode,'xs:complexType','','http://www.w3.org/2001/XMLSchema',XMLComplexNode);
      AddAttribute(XMLComplexNode,'name','request');

      AddElement(XMLComplexNode,'xs:choice','','http://www.w3.org/2001/XMLSchema',XMLChoiceNode);
      AddAttribute(XMLChoiceNode,'minOccurs','1');
      AddAttribute(XMLChoiceNode,'maxOccurs','unbounded');

      AddElement(XMLChoiceNode,'xs:element','','http://www.w3.org/2001/XMLSchema',XMLNode);
      AddAttribute(XMLNode,'minOccurs','0');
      AddAttribute(XMLNode,'maxOccurs','unbounded');
      AddAttribute(XMLNode,'name','requestData');
      AddAttribute(XMLNode,'type','requestData');

      AddElement(XMLChoiceNode,'xs:element','','http://www.w3.org/2001/XMLSchema',XMLNode);
      AddAttribute(XMLNode,'minOccurs','0');
      AddAttribute(XMLNode,'maxOccurs','unbounded');
      AddAttribute(XMLNode,'name','request');
      AddAttribute(XMLNode,'type','request');

      AddElement(XMLComplexNode,'xs:attribute','','http://www.w3.org/2001/XMLSchema',XMLNode);
      AddAttribute(XMLNode,'name','name');
      AddAttribute(XMLNode,'use','required');

      AddElement(XMLComplexNode,'xs:attribute','','http://www.w3.org/2001/XMLSchema',XMLNode);
      AddAttribute(XMLNode,'name','created');
      AddAttribute(XMLNode,'use','required');
    END;

    LOCAL PROCEDURE SetSelectionNamespace@10(VAR XMLNode@1002 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";VAR NodePath@1001 : Text[250]);
    VAR
      XMLDoc@1003 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60";
      NamespaceQualifier@1000 : Text[30];
    BEGIN
      IF XMLNode.namespaceURI = '' THEN
        EXIT;

      NamespaceQualifier := 'n';
      XMLDoc := XMLNode.ownerDocument;
      XMLDoc.setProperty('SelectionNamespaces',STRSUBSTNO('xmlns:%1="%2"',NamespaceQualifier,XMLNode.namespaceURI));
      NodePath := STRSUBSTNO('%1:%2',NamespaceQualifier,NodePath);
    END;

    BEGIN
    END.
  }
}
