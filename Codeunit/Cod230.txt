OBJECT Codeunit 230 GenJnlManagement
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVW16.00,NAVES4.00;
  }
  PROPERTIES
  {
    Permissions=TableData 80=imd,
                TableData 232=imd;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Fixed Asset G/L Journal;ESP=A/F Diario general';
      Text001@1001 : TextConst 'ENU=%1 journal;ESP=Diario %1';
      Text002@1002 : TextConst 'ENU=RECURRING;ESP=PERIODICO';
      Text003@1003 : TextConst 'ENU=Recurring General Journal;ESP=Diario general peri¢dico';
      Text004@1004 : TextConst 'ENU=DEFAULT;ESP=GENERICO';
      Text005@1005 : TextConst 'ENU=Default Journal;ESP=Diario gen‚rico';
      LastGenJnlLine@1006 : Record 81;
      OpenFromBatch@1007 : Boolean;

    PROCEDURE TemplateSelection@1(FormID@1005 : Integer;FormTemplate@1000 : 'General,Sales,Purchases,Cash Receipts,Payments,Assets,Intercompany,Jobs,,,,,Cartera';RecurringJnl@1001 : Boolean;VAR GenJnlLine@1004 : Record 81;VAR JnlSelected@1003 : Boolean);
    VAR
      GenJnlTemplate@1002 : Record 80;
    BEGIN
      JnlSelected := TRUE;

      GenJnlTemplate.RESET;
      GenJnlTemplate.SETRANGE("Form ID",FormID);
      GenJnlTemplate.SETRANGE(Recurring,RecurringJnl);
      IF NOT RecurringJnl THEN
        GenJnlTemplate.SETRANGE(Type,FormTemplate);

      CASE GenJnlTemplate.COUNT OF
        0:
          BEGIN
            GenJnlTemplate.INIT;
            GenJnlTemplate.Type := FormTemplate;
            GenJnlTemplate.Recurring := RecurringJnl;
            IF NOT RecurringJnl THEN BEGIN
              GenJnlTemplate.Name := FORMAT(GenJnlTemplate.Type,MAXSTRLEN(GenJnlTemplate.Name));
              IF FormTemplate = FormTemplate::Assets THEN
                GenJnlTemplate.Description := Text000
              ELSE
                GenJnlTemplate.Description := STRSUBSTNO(Text001,GenJnlTemplate.Type);
            END ELSE BEGIN
              GenJnlTemplate.Name := Text002;
              GenJnlTemplate.Description := Text003;
            END;
            GenJnlTemplate.VALIDATE(Type);
            GenJnlTemplate.INSERT;
            COMMIT;
          END;
        1:
          GenJnlTemplate.FIND('-');
        ELSE
          JnlSelected := FORM.RUNMODAL(0,GenJnlTemplate) = ACTION::LookupOK;
      END;
      IF JnlSelected THEN BEGIN
        GenJnlLine.FILTERGROUP := 2;
        GenJnlLine.SETRANGE("Journal Template Name",GenJnlTemplate.Name);
        GenJnlLine.FILTERGROUP := 0;
        IF OpenFromBatch THEN BEGIN
          GenJnlLine."Journal Template Name" := '';
          FORM.RUN(GenJnlTemplate."Form ID",GenJnlLine);
        END;
      END;
    END;

    PROCEDURE TemplateSelectionFromBatch@9(VAR GenJnlBatch@1000 : Record 232);
    VAR
      GenJnlLine@1002 : Record 81;
      JnlSelected@1001 : Boolean;
      GenJnlTemplate@1003 : Record 80;
    BEGIN
      OpenFromBatch := TRUE;
      GenJnlTemplate.GET(GenJnlBatch."Journal Template Name");
      GenJnlTemplate.TESTFIELD("Form ID");
      GenJnlBatch.TESTFIELD(Name);

      GenJnlLine.FILTERGROUP := 2;
      GenJnlLine.SETRANGE("Journal Template Name",GenJnlTemplate.Name);
      GenJnlLine.FILTERGROUP := 0;

      GenJnlLine."Journal Template Name" := '';
      GenJnlLine."Journal Batch Name" := GenJnlBatch.Name;
      FORM.RUN(GenJnlTemplate."Form ID",GenJnlLine);
    END;

    PROCEDURE OpenJnl@2(VAR CurrentJnlBatchName@1000 : Code[10];VAR GenJnlLine@1001 : Record 81);
    BEGIN
      GenJnlLine.FILTERGROUP := 2;
      IF GenJnlLine.GETFILTER("Journal Batch Name") <> '' THEN
        CurrentJnlBatchName := GenJnlLine.GETRANGEMAX("Journal Batch Name");
      CheckTemplateName(GenJnlLine.GETRANGEMAX("Journal Template Name"),CurrentJnlBatchName);
      GenJnlLine.SETRANGE("Journal Batch Name",CurrentJnlBatchName);
      GenJnlLine.FILTERGROUP := 0;
    END;

    PROCEDURE OpenJnlBatch@10(VAR GenJnlBatch@1000 : Record 232);
    VAR
      GenJnlTemplate@1002 : Record 80;
      GenJnlLine@1004 : Record 81;
      GenJnlBatch2@1001 : Record 232;
      JnlSelected@1003 : Boolean;
    BEGIN
      IF GenJnlBatch.GETFILTER("Journal Template Name") <> '' THEN
        EXIT;
      GenJnlBatch.FILTERGROUP(2);
      IF GenJnlBatch.GETFILTER("Journal Template Name") <> '' THEN BEGIN
        GenJnlBatch.FILTERGROUP(0);
        EXIT;
      END;
      GenJnlBatch.FILTERGROUP(0);

      IF NOT GenJnlBatch.FIND('-') THEN BEGIN
        FOR GenJnlTemplate.Type := GenJnlTemplate.Type::General TO GenJnlTemplate.Type::Jobs DO BEGIN
          GenJnlTemplate.SETRANGE(Type,GenJnlTemplate.Type);
          IF NOT GenJnlTemplate.FIND('-') THEN
            TemplateSelection(0,GenJnlTemplate.Type,FALSE,GenJnlLine,JnlSelected);
          IF GenJnlTemplate.FIND('-') THEN
            CheckTemplateName(GenJnlTemplate.Name,GenJnlBatch.Name);
          IF GenJnlTemplate.Type = GenJnlTemplate.Type::General THEN BEGIN
            GenJnlTemplate.SETRANGE(Recurring,TRUE);
            IF NOT GenJnlTemplate.FIND('-') THEN
              TemplateSelection(0,GenJnlTemplate.Type,TRUE,GenJnlLine,JnlSelected);
            IF GenJnlTemplate.FIND('-') THEN
              CheckTemplateName(GenJnlTemplate.Name,GenJnlBatch.Name);
            GenJnlTemplate.SETRANGE(Recurring);
          END;
        END;
      END;
      GenJnlBatch.FIND('-');
      JnlSelected := TRUE;
      GenJnlBatch.CALCFIELDS("Template Type",Recurring);
      GenJnlTemplate.SETRANGE(Recurring,GenJnlBatch.Recurring);
      IF NOT GenJnlBatch.Recurring THEN
        GenJnlTemplate.SETRANGE(Type,GenJnlBatch."Template Type");
      IF GenJnlBatch.GETFILTER("Journal Template Name") <> '' THEN
         GenJnlTemplate.SETRANGE(Name,GenJnlBatch.GETFILTER("Journal Template Name"));
      CASE GenJnlTemplate.COUNT OF
        1:
          GenJnlTemplate.FIND('-');
        ELSE
          JnlSelected := FORM.RUNMODAL(0,GenJnlTemplate) = ACTION::LookupOK;
      END;
      IF NOT JnlSelected THEN
        ERROR('');

      GenJnlBatch.FILTERGROUP(0);
      GenJnlBatch.SETRANGE("Journal Template Name",GenJnlTemplate.Name);
      GenJnlBatch.FILTERGROUP(2);
    END;

    PROCEDURE CheckTemplateName@3(CurrentJnlTemplateName@1000 : Code[10];VAR CurrentJnlBatchName@1001 : Code[10]);
    VAR
      GenJnlBatch@1002 : Record 232;
    BEGIN
      GenJnlBatch.SETRANGE("Journal Template Name",CurrentJnlTemplateName);
      IF NOT GenJnlBatch.GET(CurrentJnlTemplateName,CurrentJnlBatchName) THEN BEGIN
        IF NOT GenJnlBatch.FIND('-') THEN BEGIN
          GenJnlBatch.INIT;
          GenJnlBatch."Journal Template Name" := CurrentJnlTemplateName;
          GenJnlBatch.SetupNewBatch;
          GenJnlBatch.Name := Text004;
          GenJnlBatch.Description := Text005;
          GenJnlBatch.INSERT(TRUE);
          COMMIT;
        END;
        CurrentJnlBatchName := GenJnlBatch.Name
      END;
    END;

    PROCEDURE CheckName@4(CurrentJnlBatchName@1000 : Code[10];VAR GenJnlLine@1001 : Record 81);
    VAR
      GenJnlBatch@1002 : Record 232;
    BEGIN
      GenJnlBatch.GET(GenJnlLine.GETRANGEMAX("Journal Template Name"),CurrentJnlBatchName);
    END;

    PROCEDURE SetName@5(CurrentJnlBatchName@1000 : Code[10];VAR GenJnlLine@1001 : Record 81);
    BEGIN
      GenJnlLine.FILTERGROUP := 2;
      GenJnlLine.SETRANGE("Journal Batch Name",CurrentJnlBatchName);
      GenJnlLine.FILTERGROUP := 0;
      IF GenJnlLine.FIND('-') THEN;
    END;

    PROCEDURE LookupName@6(VAR CurrentJnlBatchName@1000 : Code[10];VAR GenJnlLine@1001 : Record 81);
    VAR
      GenJnlBatch@1002 : Record 232;
    BEGIN
      COMMIT;
      GenJnlBatch."Journal Template Name" := GenJnlLine.GETRANGEMAX("Journal Template Name");
      GenJnlBatch.Name := GenJnlLine.GETRANGEMAX("Journal Batch Name");
      GenJnlBatch.FILTERGROUP(2);
      GenJnlBatch.SETRANGE("Journal Template Name",GenJnlBatch."Journal Template Name");
      GenJnlBatch.FILTERGROUP(0);
      IF FORM.RUNMODAL(0,GenJnlBatch) = ACTION::LookupOK THEN BEGIN
        CurrentJnlBatchName := GenJnlBatch.Name;
        SetName(CurrentJnlBatchName,GenJnlLine);
      END;
    END;

    PROCEDURE GetAccounts@7(VAR GenJnlLine@1000 : Record 81;VAR AccName@1001 : Text[50];VAR BalAccName@1002 : Text[50]);
    VAR
      GLAcc@1003 : Record 15;
      Cust@1004 : Record 18;
      Vend@1005 : Record 23;
      BankAcc@1006 : Record 270;
      FA@1007 : Record 5600;
      IC@1008 : Record 413;
    BEGIN
      IF (GenJnlLine."Account Type" <> LastGenJnlLine."Account Type") OR
         (GenJnlLine."Account No." <> LastGenJnlLine."Account No.")
      THEN BEGIN
        AccName := '';
        IF GenJnlLine."Account No." <> '' THEN
          CASE GenJnlLine."Account Type" OF
            GenJnlLine."Account Type"::"G/L Account":
              IF GLAcc.GET(GenJnlLine."Account No.") THEN
                AccName := GLAcc.Name;
            GenJnlLine."Account Type"::Customer:
              IF Cust.GET(GenJnlLine."Account No.") THEN
                AccName := Cust.Name;
            GenJnlLine."Account Type"::Vendor:
              IF Vend.GET(GenJnlLine."Account No.") THEN
                AccName := Vend.Name;
            GenJnlLine."Account Type"::"Bank Account":
              IF BankAcc.GET(GenJnlLine."Account No.") THEN
                AccName := BankAcc.Name;
            GenJnlLine."Account Type"::"Fixed Asset":
              IF FA.GET(GenJnlLine."Account No.") THEN
                AccName := FA.Description;
            GenJnlLine."Account Type"::"IC Partner":
              IF IC.GET(GenJnlLine."Account No.") THEN
                AccName := IC.Name;

          END;
      END;

      IF (GenJnlLine."Bal. Account Type" <> LastGenJnlLine."Bal. Account Type") OR
         (GenJnlLine."Bal. Account No." <> LastGenJnlLine."Bal. Account No.") THEN BEGIN
        BalAccName := '';
        IF GenJnlLine."Bal. Account No." <> '' THEN
          CASE GenJnlLine."Bal. Account Type" OF
            GenJnlLine."Bal. Account Type"::"G/L Account":
              IF GLAcc.GET(GenJnlLine."Bal. Account No.") THEN
                BalAccName := GLAcc.Name;
            GenJnlLine."Bal. Account Type"::Customer:
              IF Cust.GET(GenJnlLine."Bal. Account No.") THEN
                BalAccName := Cust.Name;
            GenJnlLine."Bal. Account Type"::Vendor:
              IF Vend.GET(GenJnlLine."Bal. Account No.") THEN
                BalAccName := Vend.Name;
            GenJnlLine."Bal. Account Type"::"Bank Account":
              IF BankAcc.GET(GenJnlLine."Bal. Account No.") THEN
                BalAccName := BankAcc.Name;
            GenJnlLine."Bal. Account Type"::"Fixed Asset":
              IF FA.GET(GenJnlLine."Bal. Account No.") THEN
                BalAccName := FA.Description;
            GenJnlLine."Bal. Account Type"::"IC Partner":
              IF IC.GET(GenJnlLine."Bal. Account No.") THEN
                BalAccName := IC.Name;

          END;
      END;

      LastGenJnlLine := GenJnlLine;
    END;

    PROCEDURE CalcBalance@8(VAR GenJnlLine@1000 : Record 81;LastGenJnlLine@1001 : Record 81;VAR Balance@1002 : Decimal;VAR TotalBalance@1003 : Decimal;VAR ShowBalance@1004 : Boolean;VAR ShowTotalBalance@1005 : Boolean);
    VAR
      TempGenJnlLine@1006 : Record 81;
    BEGIN
      TempGenJnlLine.COPYFILTERS(GenJnlLine);
      ShowTotalBalance := TempGenJnlLine.CALCSUMS("Balance (LCY)");
      IF ShowTotalBalance THEN BEGIN
        TotalBalance := TempGenJnlLine."Balance (LCY)";
        IF GenJnlLine."Line No." = 0 THEN
          TotalBalance := TotalBalance + LastGenJnlLine."Balance (LCY)";
      END;

      IF GenJnlLine."Line No." <> 0 THEN BEGIN
        TempGenJnlLine.SETRANGE("Line No.",0,GenJnlLine."Line No.");
        ShowBalance := TempGenJnlLine.CALCSUMS("Balance (LCY)");
        IF ShowBalance THEN
          Balance := TempGenJnlLine."Balance (LCY)";
      END ELSE BEGIN
        TempGenJnlLine.SETRANGE("Line No.",0,LastGenJnlLine."Line No.");
        ShowBalance := TempGenJnlLine.CALCSUMS("Balance (LCY)");
        IF ShowBalance THEN BEGIN
          Balance := TempGenJnlLine."Balance (LCY)";
          TempGenJnlLine.COPYFILTERS(GenJnlLine);
          TempGenJnlLine := LastGenJnlLine;
          IF TempGenJnlLine.NEXT = 0 THEN
            Balance := Balance + LastGenJnlLine."Balance (LCY)";
        END;
      END;
    END;

    BEGIN
    END.
  }
}
