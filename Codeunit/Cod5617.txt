OBJECT Codeunit 5617 FA Date Calculation
{
  OBJECT-PROPERTIES
  {
    Date=14/02/08;
    Time=12:00:00;
    Version List=NAVW15.00.01;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=is later than %1;ESP=posterior que %1';
      Text001@1001 : TextConst 'ENU=It was not possible to find a %1 in %2.;ESP=No se ha podido encontrar un %1 en %2.';
      DeprBook@1002 : Record 5611;

    PROCEDURE GetFiscalYear@1(DeprBookCode@1000 : Code[10];EndingDate@1001 : Date) : Date;
    VAR
      AccountingPeriod@1002 : Record 50;
      FAJnlLine@1003 : Record 5621;
    BEGIN
      WITH DeprBook DO BEGIN
        GET(DeprBookCode);
        IF "New Fiscal Year Starting Date" > 0D THEN BEGIN
          IF "New Fiscal Year Starting Date" > EndingDate THEN
            FIELDERROR(
              "New Fiscal Year Starting Date",
              STRSUBSTNO(Text000,FAJnlLine.FIELDCAPTION("FA Posting Date")));
          EXIT("New Fiscal Year Starting Date");
        END;
      END;
      WITH AccountingPeriod DO BEGIN
        SETRANGE("New Fiscal Year",TRUE);
        SETRANGE("Starting Date",0D,EndingDate);
        IF FIND('+') THEN
          EXIT("Starting Date")
        ELSE
          ERROR(Text001,FIELDCAPTION("Starting Date"),TABLECAPTION);
      END;
    END;

    PROCEDURE CalculateDate@2(StartingDate@1000 : Date;NumberOfDays@1001 : Integer;Year365Days@1006 : Boolean) : Date;
    VAR
      Years@1002 : Integer;
      Days@1003 : Integer;
      Months@1004 : Integer;
      LocalDate@1005 : Date;
    BEGIN
      IF NumberOfDays <= 0 THEN
        EXIT(StartingDate);
      IF Year365Days THEN
        EXIT(CalculateDate365(StartingDate,NumberOfDays));
      Years := DATE2DMY(StartingDate,3);
      Months := DATE2DMY(StartingDate,2);
      Days := DATE2DMY(StartingDate,1);
      IF DATE2DMY(StartingDate + 1,1) = 1 THEN
        Days := 30;
      Days := Days + NumberOfDays;
      Months := Months + (Days DIV 30);
      Days := Days MOD 30;
      IF Days = 0 THEN BEGIN
        Days   := 30;
        Months := Months - 1;
      END;
      Years  := Years + (Months DIV 12);
      Months := Months MOD 12;
      IF Months = 0 THEN BEGIN
        Months := 12;
        Years  := Years - 1;
      END;
      IF (Months = 2) AND (Days > 28) THEN BEGIN
        Days := 28;
        LocalDate := DMY2DATE(28,2,Years) + 1;
        IF DATE2DMY(LocalDate,1) = 29 THEN
          Days := 29;
      END;
      CASE Months OF
        1,3,5,7,8,10,12:
          IF Days = 30 THEN
            Days := 31;
      END;
      EXIT(DMY2DATE(Days,Months,Years));
    END;

    LOCAL PROCEDURE CalculateDate365@3(StartingDate@1000 : Date;NumberOfDays@1001 : Integer) : Date;
    VAR
      Calendar@1002 : Record 2000000007;
      NoOfDays@1003 : Integer;
      EndingDate@1005 : Date;
      FirstDate@1004 : Boolean;
    BEGIN
      WITH Calendar DO BEGIN
        SETRANGE("Period Type",Calendar."Period Type"::Date);
        SETRANGE("Period Start",StartingDate,31129999D);
        NoOfDays := 1;
        FirstDate := TRUE;
        IF FIND('-') THEN
          REPEAT
            IF (NOT ((DATE2DMY("Period Start",1) = 29) AND (DATE2DMY("Period Start",2) = 2))) OR
              FirstDate
            THEN
              NoOfDays := NoOfDays + 1;
            FirstDate := FALSE;
          UNTIL (NEXT = 0) OR (NumberOfDays < NoOfDays);
        EndingDate := "Period Start";
        IF (DATE2DMY(EndingDate,1) = 29) AND (DATE2DMY(EndingDate,2) = 2) THEN
          EndingDate := EndingDate + 1;
        EXIT(EndingDate);
      END;
    END;

    BEGIN
    END.
  }
}
