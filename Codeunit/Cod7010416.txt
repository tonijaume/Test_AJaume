OBJECT Codeunit 7010416 Funciones Fact. Electronica
{
  OBJECT-PROPERTIES
  {
    Date=05/06/15;
    Time=11:27:19;
    Modified=Yes;
    Version List=TRANSFER,FE;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text001@1103355000 : TextConst 'ENU=You are going to generate the consignment file, continue?;ESP=Va a generar el archivo de la remesa, ¨desea continuar?;ITA=Verr… genererato il registro della spedizione, continuare?';
      Text002@1103355001 : TextConst 'ENU=You are going to cancel the consignment, continue?;ESP=Va a anular la remesa, ¨desea continuar?;ITA=Verr… annullata la spedizione, continuare?';
      Text003@1103355002 : TextConst 'ENU=WARNING, this consignment already has a generated file, would you like to generate it again?;ESP=ATENCIàN, esta remesa ya tiene un archivo generado, ¨desea generarlo de nuevo?;ITA=ATTENZIONE, questa spedizione ha gi… generato un registro, generarlo di nuovo?';

    PROCEDURE InsertarFacturaAbono@14(VAR rPrmLinRemesa@1100000 : Record 7035413);
    VAR
      rLocCabRemesa@1103355000 : Record 7035412;
      rLocCabFactura@1103355001 : Record 36;
      rLocLinRemesa@1103355004 : Record 7035413;
      frmLocA¤adirFacturas@1103355002 : Form 7035380;
      NumLinea@1103355005 : Integer;
    BEGIN

      rPrmLinRemesa.FILTERGROUP(2);
      rPrmLinRemesa.SETRANGE("N£m. Remesa");
      rPrmLinRemesa.FILTERGROUP(0);
      rLocCabRemesa.GET(rPrmLinRemesa.A¤o,
                        rPrmLinRemesa."N£m. Remesa");

      WITH rLocCabFactura DO
      BEGIN
        RESET;
        FILTERGROUP(2);
        SETCURRENTKEY("Fact. Electr¢nica Activada","N§ Remesa Fact. Electr¢nica","No.");
        //SETRANGE(Tipo,Tipo::Real);

        //+012
        ////+010
        //SETRANGE(rLocCabFactura.Destino,rLocCabFactura.Destino::Agencia);
        //SETFILTER(rLocCabFactura.Destino,'%1|%2|%3',rLocCabFactura.Destino::Agencia,
        //                                            rLocCabFactura.Destino::Salas,
        //                                            rLocCabFactura.Destino::Balnearios);
        ////-010
        //-012

        SETRANGE(rLocCabFactura."N§ Remesa Fact. Electr¢nica",0);
        SETRANGE(rLocCabFactura."Fact. Electr¢nica Activada",TRUE);
        FILTERGROUP(0);

        frmLocA¤adirFacturas.SETTABLEVIEW(rLocCabFactura);
        frmLocA¤adirFacturas.LOOKUPMODE(TRUE);
        IF frmLocA¤adirFacturas.RUNMODAL <> ACTION::LookupOK THEN
           EXIT;
        frmLocA¤adirFacturas.MarcarSeleccionados(rLocCabFactura);
        CLEAR(frmLocA¤adirFacturas);
        IF NOT FIND('-') THEN
          EXIT;

        // BUSCAMOS EL éLTIMO N§ DE LINEA UTILIZADO
        //+011
        {
        rLocLinRemesa.RESET;
        rLocLinRemesa.SETRANGE(A¤o,rLocCabRemesa.A¤o);
        rLocLinRemesa.SETRANGE("N£m. Remesa",rLocCabRemesa."N£m. Remesa");
        IF rLocLinRemesa.FIND('+') THEN
           NumLinea := rLocLinRemesa."N§ L¡nea" + 10000
         ELSE
           NumLinea := 10000;
        }
        NumLinea := NumeroLineaRemesa(rLocCabRemesa);
        //-011

        REPEAT
          {+100
          CopiarLinFactura(rLocCabFactura,rLocCabRemesa,NumLinea);
          NumLinea +=10000;
          -100}
          A¤adirLinea(rLocCabFactura,rLocCabRemesa,NumLinea); //100
        UNTIL NEXT=0;

        ASCENDING(FALSE);
        REPEAT
          { +100
          // +007
          // "N§ Remesa Fact. Electr¢nica" := rLocCabRemesa."N£m. Remesa";
          IF (rLocCabRemesa.A¤o <> 0) OR (rLocCabRemesa."N£m. Remesa" <> 0) THEN
            EVALUATE("N§ Remesa Fact. Electr¢nica",FORMAT(rLocCabRemesa.A¤o) + FORMAT(rLocCabRemesa."N£m. Remesa"));
          // -007
          MODIFY;
          -100}
           ActualizarCabFactura(rLocCabRemesa,rLocCabFactura);//100
        UNTIL NEXT=0;
      END;
    END;

    PROCEDURE InsertarFacturasReg@1000000000(VAR rPrmLinRemesa@1100000 : Record 7035413);
    VAR
      rLocCabRemesa@1103355000 : Record 7035412;
      rLocCabFactura@1103355001 : Record 112;
      rLocLinRemesa@1103355004 : Record 7035413;
      frmLocA¤adirFacturas@1103355002 : Form 7010316;
      lcFE@1100002 : Codeunit 7010416;
      lNumLinea@1100001 : Integer;
    BEGIN

      rPrmLinRemesa.FILTERGROUP(2);
      rPrmLinRemesa.SETRANGE("N£m. Remesa");
      rPrmLinRemesa.FILTERGROUP(0);
      rLocCabRemesa.GET(rPrmLinRemesa.A¤o,
                        rPrmLinRemesa."N£m. Remesa");

      WITH rLocCabFactura DO BEGIN

        RESET;
        SETCURRENTKEY("Fact. Electr¢nica Activada","N§ Remesa Fact. Electr¢nica","No.");
        FILTERGROUP(2);
        SETRANGE("Fact. Electr¢nica Activada",TRUE);
        SETRANGE("N§ Remesa Fact. Electr¢nica",0);
        FILTERGROUP(0);

        frmLocA¤adirFacturas.SETTABLEVIEW(rLocCabFactura);
        frmLocA¤adirFacturas.LOOKUPMODE(TRUE);
        IF frmLocA¤adirFacturas.RUNMODAL <> ACTION::LookupOK THEN
           EXIT;

        frmLocA¤adirFacturas.MarcarSeleccionados(rLocCabFactura);
        CLEAR(frmLocA¤adirFacturas);
        IF NOT FIND('-') THEN
          EXIT;

        //... Buscamos el £ltimo n§ de l¡nea utilizado
        lNumLinea := lcFE.NumeroLineaRemesa(rLocCabRemesa);

        REPEAT
          CopiarLinFacturaReg(rLocCabFactura,rLocCabRemesa,lNumLinea);
          lNumLinea +=10000;
        UNTIL NEXT=0;

        ASCENDING(FALSE);
        REPEAT
          "N§ Remesa Fact. Electr¢nica" := rLocCabRemesa."N£m. Remesa";
          MODIFY;
        UNTIL NEXT=0;

      END;
    END;

    PROCEDURE InsertarAbonosReg@1100001(VAR rPrmLinRemesa@1100000 : Record 7035413);
    VAR
      rLocCabRemesa@1103355000 : Record 7035412;
      rLocCabAbono@1103355001 : Record 114;
      rLocLinRemesa@1103355004 : Record 7035413;
      frmLocA¤adirAbonos@1103355002 : Form 7010317;
      lcFE@1100002 : Codeunit 7010416;
      lNumLinea@1100001 : Integer;
    BEGIN

      rPrmLinRemesa.FILTERGROUP(2);
      rPrmLinRemesa.SETRANGE("N£m. Remesa");
      rPrmLinRemesa.FILTERGROUP(0);
      rLocCabRemesa.GET(rPrmLinRemesa.A¤o,
                        rPrmLinRemesa."N£m. Remesa");

      WITH rLocCabAbono DO BEGIN

        RESET;
        SETCURRENTKEY("Fact. Electr¢nica Activada","N§ Remesa Fact. Electr¢nica","No.");
        FILTERGROUP(2);
        SETRANGE("Fact. Electr¢nica Activada",TRUE);
        SETRANGE("N§ Remesa Fact. Electr¢nica",0);
        FILTERGROUP(0);

        frmLocA¤adirAbonos.SETTABLEVIEW(rLocCabAbono);
        frmLocA¤adirAbonos.LOOKUPMODE(TRUE);
        IF frmLocA¤adirAbonos.RUNMODAL <> ACTION::LookupOK THEN
           EXIT;

        frmLocA¤adirAbonos.MarcarSeleccionados(rLocCabAbono);
        CLEAR(frmLocA¤adirAbonos);
        IF NOT FIND('-') THEN
          EXIT;

        //... Buscamos el £ltimo n§ de l¡nea utilizado
        lNumLinea := lcFE.NumeroLineaRemesa(rLocCabRemesa);

        REPEAT
          CopiarLinAbonoReg(rLocCabAbono,rLocCabRemesa,lNumLinea);
          lNumLinea +=10000;
        UNTIL NEXT=0;

        ASCENDING(FALSE);
        REPEAT
          "N§ Remesa Fact. Electr¢nica" := rLocCabRemesa."N£m. Remesa";
          MODIFY;
        UNTIL NEXT=0;

      END;
    END;

    PROCEDURE CopiarLinFactura@1103355003(rPrmCabFactura@1103355000 : Record 36;rPrmCabRemesa@1103355001 : Record 7035412;PrmNumLinea@1103355002 : Integer);
    VAR
      rLocLinRemesa@1103355003 : Record 7035413;
      rLocCliente@1103355004 : Record 18;
      lrTipoCambio@1000000000 : Record 330;
    BEGIN
      WITH rLocLinRemesa DO
      BEGIN
        INIT;
        A¤o              := rPrmCabRemesa.A¤o;
        "N£m. Remesa"    := rPrmCabRemesa."N£m. Remesa";
        "N§ L¡nea"       := PrmNumLinea;
        CASE rPrmCabFactura."Document Type" OF
          rPrmCabFactura."Document Type"::Invoice       :
            rLocLinRemesa."Tipo documento" := rLocLinRemesa."Tipo documento"::Factura;
          rPrmCabFactura."Document Type"::"Credit Memo" :
            rLocLinRemesa."Tipo documento" := rLocLinRemesa."Tipo documento"::Abono;
        END;
        Factura          := rPrmCabFactura."No.";
        "Fecha factura"  := rPrmCabFactura."Posting Date";
        Tipo             := Tipo::Real;
        Cliente          := rPrmCabFactura."Bill-to Customer No.";
      //  "Hotel Factura"  := rPrmCabFactura.Hotel;
      //  TTOO             := rPrmCabFactura.TTOO;
      //  Agencia          := rPrmCabFactura.Agencia;
      //  "Fecha entrada"  := rPrmCabFactura."Fecha entrada";
      //  "Fecha salida"   := rPrmCabFactura."Fecha salida";
        "Nombre cliente" := rPrmCabFactura."Bill-to Name";
        "C.I.F./N.I.F."  := rPrmCabFactura."VAT Registration No.";
        Direcci¢n        := rPrmCabFactura."Bill-to Address";
        "C¢d. postal"    := rPrmCabFactura."Bill-to Post Code";
        Poblaci¢n        := rPrmCabFactura."Bill-to City";
        Provincia        := rPrmCabFactura."Bill-to County";
        Pa¡s             := rPrmCabFactura."Bill-to Country/Region Code";
      //  Habitaci¢n       := rPrmCabFactura.Habitaci¢n;
      //  Destino          := rPrmCabFactura.Destino;
        Divisa           := rPrmCabFactura."Currency Code";
        rLocLinRemesa."Descripci¢n Factura" := COPYSTR(rPrmCabFactura."Posting Description", 1, 40);
        rPrmCabFactura.CALCFIELDS(Amount,"Amount Including VAT");
        "Importe total"    := rPrmCabFactura."Amount Including VAT";
        "Importe neto"     := rPrmCabFactura.Amount;
        "Importe Impuesto" := "Importe total" - "Importe neto";
        IF rPrmCabFactura."Currency Code" = '' THEN
          "Importe total (LOCAL)" := "Importe total"
              ELSE
          "Importe total (LOCAL)" := lrTipoCambio.ExchangeAmtFCYToLCY(rPrmCabFactura."Posting Date",
                                                                       rPrmCabFactura."Currency Code",
                                                                       "Importe total",
                                                                       rPrmCabFactura."Currency Factor");
      //  "Aportaci¢n guias"               := rPrmCabFactura."Aportaci¢n guias";
      //  "Importe pendiente de cobro"     := rPrmCabFactura."Importe pendiente de cobro";
      //  "Importe cobrado"                := rPrmCabFactura."Importe cobrado";
      //  "Importe pendiente cobro(LOCAL)" := rPrmCabFactura."Importe pendiente cobro(LOCAL)";
      //  "Importe cobrado(LOCAL)"         := rPrmCabFactura."Importe cobrado(LOCAL)";
      //  "Referencia Fra."                := rPrmCabFactura."Referencia Fra.";

         // +003
         rLocCliente.GET(rPrmCabFactura."Bill-to Customer No.");
         rLocCliente.TESTFIELD(rLocCliente."Proveedor FE");
         "Proveedor FE"   := rLocCliente."Proveedor FE";

         IF rPrmCabFactura."Amount Including VAT" < 0   THEN
           "Tipo documento" := rLocLinRemesa."Tipo documento"::Abono;
         // -003
        INSERT;
      END;
    END;

    PROCEDURE CopiarLinFacturaReg@1000000001(rPrmCabFactura@1103355000 : Record 112;rPrmCabRemesa@1103355001 : Record 7035412;PrmNumLinea@1103355002 : Integer);
    VAR
      rLocLinRemesa@1103355003 : Record 7035413;
      rLocCliente@1103355004 : Record 18;
      lrTipoCambio@1100001 : Record 330;
    BEGIN
      WITH rLocLinRemesa DO
      BEGIN

        INIT;
        A¤o              := rPrmCabRemesa.A¤o;
        "N£m. Remesa"    := rPrmCabRemesa."N£m. Remesa";
        "N§ L¡nea"       := PrmNumLinea;
        Factura          := rPrmCabFactura."No.";
      //  "Hotel Factura"  := rPrmCabFactura."Cod Hotel";
        "Fecha factura"  := rPrmCabFactura."Posting Date";
        Cliente          := rPrmCabFactura."Bill-to Customer No.";
        "Nombre cliente" := rPrmCabFactura."Bill-to Name";
        "C.I.F./N.I.F."  := rPrmCabFactura."VAT Registration No.";
        Direcci¢n        := rPrmCabFactura."Bill-to Address";
        "C¢d. postal"    := rPrmCabFactura."Bill-to Post Code";
        Poblaci¢n        := rPrmCabFactura."Bill-to City";
        Provincia        := rPrmCabFactura."Bill-to County";
        Pa¡s             := rPrmCabFactura."Ship-to Country/Region Code";
        Divisa           := rPrmCabFactura."Currency Code";

        "Descripci¢n Factura" := COPYSTR(rPrmCabFactura."Posting Description",1,40);

        rPrmCabFactura.CALCFIELDS(Amount,"Amount Including VAT");
        "Importe total"    := rPrmCabFactura."Amount Including VAT";
        "Importe neto"     := rPrmCabFactura.Amount;
        "Importe Impuesto" := "Importe total" - "Importe neto";


        IF rPrmCabFactura."Currency Code" = '' THEN
          "Importe total (LOCAL)" := "Importe total"
              ELSE
          "Importe total (LOCAL)" := lrTipoCambio.ExchangeAmtFCYToLCY(rPrmCabFactura."Posting Date",
                                                                       rPrmCabFactura."Currency Code",
                                                                       "Importe total",
                                                                       rPrmCabFactura."Currency Factor");

        rLocCliente.GET(rPrmCabFactura."Bill-to Customer No.");
        rLocCliente.TESTFIELD(rLocCliente."Proveedor FE");
        "Proveedor FE"   := rLocCliente."Proveedor FE";

        "Tipo documento" := "Tipo documento"::Factura;

        INSERT;

      END;
    END;

    PROCEDURE CopiarLinAbonoReg@1000000002(rPrmCabAbono@1103355000 : Record 114;rPrmCabRemesa@1103355001 : Record 7035412;PrmNumLinea@1103355002 : Integer);
    VAR
      rLocLinRemesa@1103355003 : Record 7035413;
      rLocCliente@1103355004 : Record 18;
      lrTipoCambio@1100001 : Record 330;
    BEGIN
      WITH rLocLinRemesa DO
      BEGIN

        INIT;
        A¤o              := rPrmCabRemesa.A¤o;
        "N£m. Remesa"    := rPrmCabRemesa."N£m. Remesa";
        "N§ L¡nea"       := PrmNumLinea;
        Factura          := rPrmCabAbono."No.";
      //  "Hotel Factura"  := rPrmCabAbono."Cod Hotel";
        "Fecha factura"  := rPrmCabAbono."Posting Date";
        Cliente          := rPrmCabAbono."Bill-to Customer No.";
        "Nombre cliente" := rPrmCabAbono."Bill-to Name";
        "C.I.F./N.I.F."  := rPrmCabAbono."VAT Registration No.";
        Direcci¢n        := rPrmCabAbono."Bill-to Address";
        "C¢d. postal"    := rPrmCabAbono."Bill-to Post Code";
        Poblaci¢n        := rPrmCabAbono."Bill-to City";
        Provincia        := rPrmCabAbono."Bill-to County";
        Pa¡s             := rPrmCabAbono."Ship-to Country/Region Code";
        Divisa           := rPrmCabAbono."Currency Code";

        "Descripci¢n Factura" := COPYSTR(rPrmCabAbono."Posting Description",1,40);

        rPrmCabAbono.CALCFIELDS(Amount,"Amount Including VAT");
        "Importe total"    := rPrmCabAbono."Amount Including VAT";
        "Importe neto"     := rPrmCabAbono.Amount;
        "Importe Impuesto" := "Importe total" - "Importe neto";


        IF rPrmCabAbono."Currency Code" = '' THEN
          "Importe total (LOCAL)" := "Importe total"
              ELSE
          "Importe total (LOCAL)" := lrTipoCambio.ExchangeAmtFCYToLCY(rPrmCabAbono."Posting Date",
                                                                       rPrmCabAbono."Currency Code",
                                                                       "Importe total",
                                                                       rPrmCabAbono."Currency Factor");

        rLocCliente.GET(rPrmCabAbono."Bill-to Customer No.");
        rLocCliente.TESTFIELD(rLocCliente."Proveedor FE");
        "Proveedor FE"   := rLocCliente."Proveedor FE";

        "Tipo documento" := "Tipo documento"::Abono;

        INSERT;

      END;
    END;

    PROCEDURE EliminarFacturaAbono@1103355000(VAR rPrmLinRemesa@1100000 : Record 7035413);
    VAR
      rLocCabFactura@1103355000 : Record 36;
    BEGIN
      WITH rPrmLinRemesa DO
        IF FIND('-') THEN
          REPEAT
            IF "Tipo documento" = "Tipo documento"::Factura THEN BEGIN
              rLocCabFactura.GET(rLocCabFactura."Document Type"::Invoice,rPrmLinRemesa.Factura);
              rLocCabFactura."N§ Remesa Fact. Electr¢nica" := 0;
              rLocCabFactura.MODIFY;
            END
            ELSE BEGIN
              rLocCabFactura.GET(rLocCabFactura."Document Type"::"Credit Memo",rPrmLinRemesa.Factura);
              rLocCabFactura."N§ Remesa Fact. Electr¢nica" := 0;
              rLocCabFactura.MODIFY;
            END;
            DELETE;
          UNTIL NEXT = 0;
    END;

    PROCEDURE EliminarFacturasAbonosReg@1000000003(VAR rPrmLinRemesa@1100000 : Record 7035413);
    VAR
      lrFactura@1103355000 : Record 112;
      lrAbono@1100001 : Record 114;
    BEGIN
      WITH rPrmLinRemesa DO
        IF FIND('-') THEN
          REPEAT
            IF "Tipo documento" = "Tipo documento"::Factura THEN BEGIN
              lrFactura.GET(rPrmLinRemesa.Factura);
              lrFactura."N§ Remesa Fact. Electr¢nica" := 0;
              lrFactura.MODIFY;
            END
            ELSE BEGIN
              lrAbono.GET(rPrmLinRemesa.Factura);
              lrAbono."N§ Remesa Fact. Electr¢nica" := 0;
              lrAbono.MODIFY;
            END;
            DELETE;
          UNTIL NEXT = 0;
    END;

    PROCEDURE AnularRemesaRegis@1103355004(VAR prmCabRemesa@1103355000 : Record 7035412);
    BEGIN
      IF CONFIRM(Text002) THEN
      BEGIN
        prmCabRemesa.TESTFIELD("Fecha Generaci¢n",0D);
        prmCabRemesa.TESTFIELD("Usuario Generaci¢n",'');

        prmCabRemesa.Estado := prmCabRemesa.Estado::Pendiente;
        prmCabRemesa.MODIFY;
      END;
    END;

    PROCEDURE GenerarArchivosM£ltiples@1103355001(prmA¤o@1103355000 : Integer;prmNumRemesa@1103355001 : Integer);
    VAR
      rlRemesa@1103350007 : Record 7035412;
      rlLinRemesa@1103350000 : Record 7035413;
      rlFraVta@1103350005 : Record 36;
      lrFraStd@1103355006 : Record 112;
      lrAboStd@1103355004 : Record 114;
      rlTemp@1103350004 : Record 7035415;
      rProvFE@1103355002 : Record 7035410;
      clFactElec@1100217000 : Codeunit 7010417;
      wlFecha@1103350003 : Date;
      wlCont@1103350002 : Integer;
      wlHora@1103350001 : Time;
      wlArchivoXML@1103350009 : Text[250];
      wSecuencia@1103355003 : Text[3];
      wok@1100001 : Boolean;
      lText001@1100006 : TextConst 'ENU=Configure the FTP Deliveries Path;ESP=Configure la Ruta de Envios FTP;ITA=Configurare il percorso di invio FTP';
      lText002@1100005 : TextConst 'ENU=Configure the Documents Directory in Setup Data;ESP=Configure el Directorio de documentos en Datos Instalaci¢n;ITA=Configurare la Directory dei documenti nei Dati di Installazione';
      lText003@1100004 : TextConst 'ENU=Configure the number of attempts;ESP=Configure el N£mero de intentos;ITA=Impostare il Numero di tentativi';
      lText004@1100003 : TextConst 'ENU="Configure the forward waiting period ";ESP=Configure el tiempo de espera de reenvio;ITA=Configurare il time di attesa di riinvio';
      lText005@1100002 : TextConst 'ENU=Configure no sent files path;ESP=Configure ruta archivos no enviado;ITA="Configurare percorso files non inviati "';
      wCont@1100007 : Integer;
      TextL001@1100008 : TextConst 'ENU=The file %1 to %2 could not be copied;ESP=No se ha podido copiar el fichero %1 a %2;ITA=Impossibile copiare il file %1  a %2';
      lText006@1100009 : TextConst 'ENU=The file %1 could not be tranferred by FTP;ESP=El fichero %1 no ha podido ser transferido por FTP.;ITA=Il file 1 non ha potuto essere trasferito tramite FTP.';
    BEGIN

      rlRemesa.GET(prmA¤o,prmNumRemesa);
      IF rlRemesa.Estado = rlRemesa.Estado::Generado THEN BEGIN
        IF GUIALLOWED THEN //100
          IF NOT CONFIRM(Text003) THEN EXIT;
      END ELSE
          IF GUIALLOWED THEN //100
            IF NOT CONFIRM(Text001) THEN EXIT;

      wlFecha := WORKDATE;
      wlHora  := TIME;

      rProvFE.RESET;
      IF rProvFE.FIND('-') THEN
      REPEAT

        rlLinRemesa.RESET;
        rlLinRemesa.SETCURRENTKEY("Proveedor FE");
        rlLinRemesa.SETRANGE("Proveedor FE",rProvFE.Proveedor);
        rlLinRemesa.SETRANGE(A¤o,prmA¤o);
        rlLinRemesa.SETRANGE("N£m. Remesa", prmNumRemesa);
        IF rlLinRemesa.FIND('-') THEN BEGIN
          REPEAT
            rlTemp.INIT;
            rlTemp."Num documento" := rlLinRemesa.Factura;
            rlTemp.Fecha := wlFecha;
            rlTemp.Usuario := USERID;
            rlTemp.Hora := wlHora;
            rlTemp."Hotel documento" := rlLinRemesa."Hotel Factura";
            rlTemp."Tipo documento"  := rlLinRemesa."Tipo documento";

            //+011
            rlLinRemesa.CALCFIELDS("Tipo Remesa");
            rlTemp."Tipo Remesa" := rlLinRemesa."Tipo Remesa";
            //-011

            rlTemp.INSERT;
          UNTIL rlLinRemesa.NEXT=0;

          CLEAR(clFactElec);

          clFactElec.PasaParam(wlFecha,wlHora,rProvFE.Proveedor);

          IF clFactElec.ExportarMultiplesDocumentos(wlArchivoXML) THEN BEGIN
            //eliminamos los registros de la tabla temporal y marcamos las facturas
            rlTemp.RESET;
            rlTemp.SETRANGE(rlTemp.Usuario, USERID);
            rlTemp.SETRANGE(rlTemp.Fecha, wlFecha);
            rlTemp.SETRANGE(rlTemp.Hora, wlHora);
            IF rlTemp.FIND('-') THEN
              REPEAT

                //+011
                //... A¤adimos el caso de las facturas y abonos est ndar.
                {
                IF rlFraVta.GET(rlTemp."Hotel documento",rlTemp."Num documento") THEN BEGIN
                  rlFraVta."Estado FE" := rlFraVta."Estado FE"::Generada;
                  rlFraVta.MODIFY;
                END;
                }
                CASE rlTemp."Tipo Remesa" OF
                  rlTemp."Tipo Remesa"::Borrador:
                    IF rlTemp."Tipo documento" = rlTemp."Tipo documento"::Factura THEN BEGIN
                      IF rlFraVta.GET(rlFraVta."Document Type"::Invoice,rlTemp."Num documento") THEN BEGIN
                        rlFraVta."Estado FE" := rlFraVta."Estado FE"::"2";
                        rlFraVta.MODIFY;
                      END
                    END
                    ELSE BEGIN
                      IF rlFraVta.GET(rlFraVta."Document Type"::"Credit Memo",rlTemp."Num documento") THEN BEGIN
                        rlFraVta."Estado FE" := rlFraVta."Estado FE"::"2";
                        rlFraVta.MODIFY;
                      END
                    END;
                  rlTemp."Tipo Remesa"::Registrada:
                    IF rlTemp."Tipo documento" = rlTemp."Tipo documento"::Factura THEN BEGIN
                      IF lrFraStd.GET(rlTemp."Num documento") THEN BEGIN
                        lrFraStd."Estado FE" := lrFraStd."Estado FE"::"2";
                        lrFraStd.MODIFY;
                      END
                    END
                    ELSE BEGIN
                      IF lrAboStd.GET(rlTemp."Num documento") THEN BEGIN
                        lrAboStd."Estado FE" := lrAboStd."Estado FE"::"2";
                        lrAboStd.MODIFY;
                      END

                    END;
                END;
                //-011

                //+008
                //rlTemp.DELETE;
                IF rProvFE."Tipo Ruta" = rProvFE."Tipo Ruta"::Normal THEN
                  rlTemp.DELETE;
                //-008
              UNTIL rlTemp.NEXT = 0;

            IF rlRemesa.GET(prmA¤o,prmNumRemesa) THEN BEGIN
              rlRemesa.Estado := rlRemesa.Estado::Generado;
              rlRemesa."Fecha Generaci¢n"   := WORKDATE;
              rlRemesa."Usuario Generaci¢n" := USERID;
              rlRemesa.Fichero := wlArchivoXML;
              rlRemesa.MODIFY;

              //+008
              rlTemp.RESET;
              rlTemp.SETRANGE(rlTemp.Usuario, USERID);
              rlTemp.SETRANGE(rlTemp.Fecha, wlFecha);
              rlTemp.SETRANGE(rlTemp.Hora, wlHora);
              IF rlTemp.FIND('-') THEN BEGIN
                IF rProvFE."Archivo x Documento" THEN BEGIN
                   REPEAT
                     IF rlTemp.Fichero <> '' THEN BEGIN
                       rlLinRemesa.SETRANGE(rlLinRemesa.A¤o,prmA¤o);
                       rlLinRemesa.SETRANGE(rlLinRemesa."N£m. Remesa",prmNumRemesa);
                       rlLinRemesa.SETRANGE(rlLinRemesa.Factura,rlTemp."Num documento");
                       IF rlLinRemesa.FIND('-') THEN BEGIN
                          rlLinRemesa.Archivo := rlTemp.Fichero;
                         rlLinRemesa.MODIFY;
                       END;
                    END;
                   UNTIL rlTemp.NEXT=0;
                END
                ELSE BEGIN
                   rlLinRemesa.SETRANGE(rlLinRemesa.A¤o,prmA¤o);
                   rlLinRemesa.SETRANGE(rlLinRemesa."N£m. Remesa",prmNumRemesa);
                   IF rlLinRemesa.FIND('-') THEN BEGIN
                     REPEAT
                       rlLinRemesa.Archivo := rlTemp.Fichero;
                       rlLinRemesa.MODIFY;
                     UNTIL rlLinRemesa.NEXT=0;
                   END;
                END;
              END;
              //Enviamos por FTP
             {



              IF rProvFE."Tipo Ruta" = rProvFE."Tipo Ruta"::FTP THEN BEGIN
                IF rProvFE."Ruta envios" = '' THEN ERROR(lText001);
                IF rProvFE."N£mero intentos" = 0 THEN ERROR(lText003);
                IF rProvFE."Tiempo de espera reenvio" = 0 THEN ERROR(lText004);
                IF rProvFE."Ruta archivos no enviados" = '' THEN ERROR(lText005);

                rlTemp.RESET;
                rlTemp.SETRANGE(rlTemp.Usuario, USERID);
                rlTemp.SETRANGE(rlTemp.Fecha, wlFecha);
                rlTemp.SETRANGE(rlTemp.Hora, wlHora);
                IF rlTemp.FIND('-') THEN BEGIN
                   IF rProvFE."Archivo x Documento" THEN BEGIN
                      REPEAT
                        IF rlTemp.Fichero <> '' THEN BEGIN
                          wCont := 1;
                          wok := FALSE;
                          WHILE (wCont <= rProvFE."N£mero intentos") AND (NOT wok) DO BEGIN

                             cRut.EnviaFTP(rProvFE."Ruta XML" + USERID,rProvFE."Ruta envios",'',
                                rProvFE."Ruta XML" + rlTemp.Fichero,rProvFE."Usuario FTP",rProvFE."Password FTP",wok);

                            IF NOT wok THEN
                              SLEEP(rProvFE."Tiempo de espera reenvio"*1000);
                            wCont += 1;
                          END;
                          IF wok THEN BEGIN
                            rlLinRemesa.SETRANGE(rlLinRemesa.A¤o,prmA¤o);
                            rlLinRemesa.SETRANGE(rlLinRemesa."N£m. Remesa",prmNumRemesa);
                            rlLinRemesa.SETRANGE(rlLinRemesa.Factura,rlTemp."Num documento");
                            IF rlLinRemesa.FIND('-') THEN BEGIN
                              rlLinRemesa."Enviado FTP" := TRUE;
                              rlLinRemesa.MODIFY;
                            END;
                          END
                          ELSE BEGIN
                             IF NOT COPY(rProvFE."Ruta XML" + rlTemp.Fichero,
                                        rProvFE."Ruta archivos no enviados" + rlTemp.Fichero) THEN
                                ERROR(TextL001,rProvFE."Ruta XML" + rlTemp.Fichero,
                                      rProvFE."Ruta archivos no enviados" + rlTemp.Fichero)
                             ELSE
                               ERASE(rProvFE."Ruta XML" + rlTemp.Fichero);
                             MESSAGE(lText006, rlTemp.Fichero);
                          END;
                        END;
                     UNTIL rlTemp.NEXT = 0;
                   END
                   ELSE BEGIN
                      IF rlTemp.Fichero <> '' THEN BEGIN
                        wCont := 1;
                        wok := FALSE;
                        WHILE (wCont <= rProvFE."N£mero intentos") AND (NOT wok) DO BEGIN
                          cRut.EnviaFTP(rProvFE."Ruta XML" + USERID,rProvFE."Ruta envios",'',
                                rProvFE."Ruta XML" + rlTemp.Fichero,rProvFE."Usuario FTP",rProvFE."Password FTP",wok);

                          IF wok THEN
                            SLEEP(rProvFE."Tiempo de espera reenvio"*1000);
                            wCont += 1;
                        END;
                        IF wok THEN BEGIN
                          rlLinRemesa.SETRANGE(rlLinRemesa.A¤o,prmA¤o);
                          rlLinRemesa.SETRANGE(rlLinRemesa."N£m. Remesa",prmNumRemesa);
                          IF rlLinRemesa.FIND('-') THEN BEGIN
                            REPEAT
                              rlLinRemesa."Enviado FTP" := TRUE;
                              rlLinRemesa.MODIFY;
                            UNTIL rlLinRemesa.NEXT=0;
                          END;
                        END
                        ELSE BEGIN
                          IF NOT COPY(rProvFE."Ruta XML" + rlTemp.Fichero,
                                      rProvFE."Ruta archivos no enviados" + rlTemp.Fichero) THEN
                            ERROR(TextL001,rProvFE."Ruta XML" + rlTemp.Fichero,
                                      rProvFE."Ruta archivos no enviados" + rlTemp.Fichero)
                          ELSE
                            ERASE(rProvFE."Ruta XML" + rlTemp.Fichero);
                          MESSAGE(lText006, rlTemp.Fichero);
                        END;
                      END;
                   END;
                END;
              END;

      }





              IF rlTemp.FIND('-') THEN
                REPEAT
                  rlTemp.DELETE;
                UNTIL rlTemp.NEXT=0;
              //-008
            END;
          END ELSE BEGIN
            //eliminamos los registros de la tabla temporal
            rlTemp.RESET;
            rlTemp.SETRANGE(rlTemp.Usuario, USERID);
            rlTemp.SETRANGE(rlTemp.Fecha, wlFecha);
            rlTemp.SETRANGE(rlTemp.Hora, wlHora);
            IF rlTemp.FIND('-') THEN BEGIN
              REPEAT
                rlTemp.DELETE;
              UNTIL rlTemp.NEXT = 0;
            END;
          END;
        END;
      UNTIL rProvFE.NEXT=0;
    END;

    PROCEDURE ActualizaFacturas@1103355002();
    BEGIN
      {
      // +099
      rLocCabFactura.RESET;
      rLocCabFactura.SETCURRENTKEY("Bill-to Customer No.");
      rLocCabFactura.SETRANGE(rLocCabFactura."Bill-to Customer No.","No.");
      IF rLocCabFactura.FIND('-') THEN
      REPEAT
        rLocCabFactura."Fact. Electr¢nica Activada" := "Permitir Fact. Electr¢nica";
        rLocCabFactura.MODIFY;
      UNTIL rLocCabFactura.NEXT=0;
      }
    END;

    PROCEDURE GenerarMarcadas@1103355005(prmA¤o@1103355004 : Integer;prmNumRemesa@1103355001 : Integer;VAR prmLinRemesa@1103355000 : Record 7035413);
    VAR
      rlRemesa@1103350007 : Record 7035412;
      rlFraVta@1103350005 : Record 36;
      lrFraStd@1103355007 : Record 112;
      lrAboStd@1103355006 : Record 114;
      rlTemp@1103350004 : Record 7035415;
      rProvFE@1103355002 : Record 7035410;
      clFactElec@1103355005 : Codeunit 7010417;
      wlFecha@1103350003 : Date;
      wlCont@1103350002 : Integer;
      wlHora@1103350001 : Time;
      wlArchivoXML@1103350009 : Text[250];
      wSecuencia@1103355003 : Text[3];
      rlLinRemesa@1100000 : Record 7035413;
      wok@1100002 : Boolean;
      wCont@1100001 : Integer;
      lText001@1100010 : TextConst 'ENU=Configure the FTP Deliveries Path;ESP=Configure la Ruta de Envios FTP;ITA=Configurare il percorso di invio FTP';
      lText002@1100009 : TextConst 'ENU=Configure the Documents Directory in Setup Data;ESP=Configure el Directorio de documentos en Datos Instalaci¢n;ITA=Configurare la Directory dei documenti nei Dati di Installazione';
      lText003@1100008 : TextConst 'ENU=Configure the number of attempts;ESP=Configure el N£mero de intentos;ITA=Impostare il Numero di tentativi';
      lText004@1100007 : TextConst 'ENU="Configure the forward waiting period ";ESP=Configure el tiempo de espera de reenvio;ITA=Configurare il time di attesa di riinvio';
      lText005@1100006 : TextConst 'ENU=Configure no sent files path;ESP=Configure ruta archivos no enviado;ITA="Configurare percorso files non inviati "';
      TextL001@1100005 : TextConst 'ENU=The file %1 to %2 could not be copied;ESP=No se ha podido copiar el fichero %1 a %2;ITA=Impossibile copiare il file %1  a %2';
      lText006@1100004 : TextConst 'ENU=The file %1 could not be tranferred by FTP;ESP=El fichero %1 no ha podido ser transferido por FTP.;ITA=Il file 1 non ha potuto essere trasferito tramite FTP.';
    BEGIN
      IF prmLinRemesa.FIND('-') THEN
      BEGIN
        rlRemesa.GET(prmA¤o,prmNumRemesa);
        IF rlRemesa.Estado = rlRemesa.Estado::Generado THEN
        BEGIN
          IF NOT ISSERVICETIER THEN //100
          IF NOT CONFIRM(Text003) THEN EXIT;
        END ELSE
          IF NOT ISSERVICETIER THEN //100
          IF NOT CONFIRM(Text001) THEN EXIT;

        wlFecha := WORKDATE;
        wlHora  := TIME;

        rProvFE.RESET;
        IF rProvFE.FIND('-') THEN
        REPEAT
          prmLinRemesa.SETCURRENTKEY("Proveedor FE");
          prmLinRemesa.SETRANGE("Proveedor FE",rProvFE.Proveedor);
          IF prmLinRemesa.FIND('-') THEN BEGIN
            REPEAT
              rlTemp.INIT;
              rlTemp."Num documento" := prmLinRemesa.Factura;
              rlTemp.Fecha := wlFecha;
              rlTemp.Usuario := USERID;
              rlTemp.Hora := wlHora;
              rlTemp."Hotel documento" := prmLinRemesa."Hotel Factura";
              rlTemp."Tipo documento"  := prmLinRemesa."Tipo documento";

              //+011
              prmLinRemesa.CALCFIELDS("Tipo Remesa");
              rlTemp."Tipo Remesa" := prmLinRemesa."Tipo Remesa";
              //-011

              rlTemp.INSERT;
            UNTIL prmLinRemesa.NEXT=0;


            CLEAR(clFactElec);

            clFactElec.PasaParam(wlFecha,wlHora,rProvFE.Proveedor);
            IF clFactElec.ExportarMultiplesDocumentos(wlArchivoXML) THEN BEGIN
              //eliminamos los registros de la tabla temporal y marcamos las facturas
              rlTemp.RESET;
              rlTemp.SETRANGE(rlTemp.Usuario, USERID);
              rlTemp.SETRANGE(rlTemp.Fecha, wlFecha);
              rlTemp.SETRANGE(rlTemp.Hora, wlHora);
              IF rlTemp.FIND('-') THEN
                REPEAT
                  //+011
                  //... A¤adimos el caso de las facturas y abonos est ndar.
                  {
                  IF rlFraVta.GET(rlTemp."Hotel documento",rlTemp."Num documento") THEN BEGIN
                    rlFraVta."Estado FE" := rlFraVta."Estado FE"::Generada;
                    rlFraVta.MODIFY;
                  END;
                  }
                  CASE rlTemp."Tipo Remesa" OF
                    rlTemp."Tipo Remesa"::Borrador:
                      IF rlTemp."Tipo documento" = rlTemp."Tipo documento"::Factura THEN BEGIN
                        IF rlFraVta.GET(rlFraVta."Document Type"::Invoice,rlTemp."Num documento") THEN BEGIN
                          rlFraVta."Estado FE" := rlFraVta."Estado FE"::"2";
                          rlFraVta.MODIFY;
                        END
                      END
                      ELSE BEGIN
                        IF rlFraVta.GET(rlFraVta."Document Type"::"Credit Memo",rlTemp."Num documento") THEN BEGIN
                          rlFraVta."Estado FE" := rlFraVta."Estado FE"::"2";
                          rlFraVta.MODIFY;
                        END
                      END;
                    rlTemp."Tipo Remesa"::Registrada:
                      IF rlTemp."Tipo documento" = rlTemp."Tipo documento"::Factura THEN BEGIN
                        IF lrFraStd.GET(rlTemp."Num documento") THEN BEGIN
                          lrFraStd."Estado FE" := lrFraStd."Estado FE"::"2";
                          lrFraStd.MODIFY;
                        END
                      END
                      ELSE BEGIN
                        IF lrAboStd.GET(rlTemp."Num documento") THEN BEGIN
                          lrAboStd."Estado FE" := lrAboStd."Estado FE"::"2";
                          lrAboStd.MODIFY;
                        END

                      END;
                  END;
                  //-011

                  //+008
                  //rlTemp.DELETE;
                  IF rProvFE."Tipo Ruta" = rProvFE."Tipo Ruta"::Normal THEN
                    rlTemp.DELETE;
                  //-008
                UNTIL rlTemp.NEXT = 0;

              IF rlRemesa.GET(prmA¤o,prmNumRemesa) THEN BEGIN
                rlRemesa.Estado := rlRemesa.Estado::Generado;
                rlRemesa."Fecha Generaci¢n"   := WORKDATE;
                rlRemesa."Usuario Generaci¢n" := USERID;
                rlRemesa.Fichero := wlArchivoXML;
                rlRemesa.MODIFY;
              END;
              //+008
              rlTemp.RESET;
              rlTemp.SETRANGE(rlTemp.Usuario, USERID);
              rlTemp.SETRANGE(rlTemp.Fecha, wlFecha);
              rlTemp.SETRANGE(rlTemp.Hora, wlHora);
              IF rlTemp.FIND('-') THEN BEGIN
                IF rProvFE."Archivo x Documento" THEN BEGIN
                   REPEAT
                     IF rlTemp.Fichero <> '' THEN BEGIN
                       rlLinRemesa.SETRANGE(rlLinRemesa.A¤o,prmA¤o);
                       rlLinRemesa.SETRANGE(rlLinRemesa."N£m. Remesa",prmNumRemesa);
                       rlLinRemesa.SETRANGE(rlLinRemesa.Factura,rlTemp."Num documento");
                       IF rlLinRemesa.FIND('-') THEN BEGIN
                          rlLinRemesa.Archivo := rlTemp.Fichero;
                         rlLinRemesa.MODIFY;
                       END;
                    END;
                   UNTIL rlTemp.NEXT=0;
                END
                ELSE BEGIN
                   rlLinRemesa.SETRANGE(rlLinRemesa.A¤o,prmA¤o);
                   rlLinRemesa.SETRANGE(rlLinRemesa."N£m. Remesa",prmNumRemesa);
                   IF rlLinRemesa.FIND('-') THEN BEGIN
                     REPEAT
                       rlLinRemesa.Archivo := rlTemp.Fichero;
                       rlLinRemesa.MODIFY;
                     UNTIL rlLinRemesa.NEXT=0;
                   END;
                END;
              END;
              //Enviamos por FTP
      {



              IF rProvFE."Tipo Ruta" = rProvFE."Tipo Ruta"::FTP THEN BEGIN
                IF rProvFE."Ruta envios" = '' THEN ERROR(lText001);
                IF rProvFE."N£mero intentos" = 0 THEN ERROR(lText003);
                IF rProvFE."Tiempo de espera reenvio" = 0 THEN ERROR(lText004);
                IF rProvFE."Ruta archivos no enviados" = '' THEN ERROR(lText005);

                rlTemp.RESET;
                rlTemp.SETRANGE(rlTemp.Usuario, USERID);
                rlTemp.SETRANGE(rlTemp.Fecha, wlFecha);
                rlTemp.SETRANGE(rlTemp.Hora, wlHora);
                IF rlTemp.FIND('-') THEN BEGIN
                   IF rProvFE."Archivo x Documento" THEN BEGIN
                      REPEAT
                        IF rlTemp.Fichero <> '' THEN BEGIN
                          wCont := 1;
                          wok := FALSE;
                          WHILE (wCont <= rProvFE."N£mero intentos") AND (NOT wok) DO BEGIN

                             cRut.EnviaFTP(rProvFE."Ruta XML" + USERID,rProvFE."Ruta envios",'',
                                rProvFE."Ruta XML" + rlTemp.Fichero,rProvFE."Usuario FTP",rProvFE."Password FTP",wok);

                            IF NOT wok THEN
                              SLEEP(rProvFE."Tiempo de espera reenvio"*1000);
                            wCont += 1;
                          END;
                          IF wok THEN BEGIN
                            rlLinRemesa.SETRANGE(rlLinRemesa.A¤o,prmA¤o);
                            rlLinRemesa.SETRANGE(rlLinRemesa."N£m. Remesa",prmNumRemesa);
                            rlLinRemesa.SETRANGE(rlLinRemesa.Factura,rlTemp."Num documento");
                            IF rlLinRemesa.FIND('-') THEN BEGIN
                              rlLinRemesa."Enviado FTP" := TRUE;
                              rlLinRemesa.MODIFY;
                            END;
                          END
                          ELSE BEGIN
                             IF NOT COPY(rProvFE."Ruta XML" + rlTemp.Fichero,
                                        rProvFE."Ruta archivos no enviados" + rlTemp.Fichero) THEN
                                ERROR(TextL001,rProvFE."Ruta XML" + rlTemp.Fichero,
                                      rProvFE."Ruta archivos no enviados" + rlTemp.Fichero)
                             ELSE
                               ERASE(rProvFE."Ruta XML" + rlTemp.Fichero);
                             MESSAGE(lText006, rlTemp.Fichero);
                          END;
                        END;
                     UNTIL rlTemp.NEXT = 0;
                   END
                   ELSE BEGIN
                      IF rlTemp.Fichero <> '' THEN BEGIN
                        wCont := 1;
                        wok := FALSE;
                        WHILE (wCont <= rProvFE."N£mero intentos") AND (NOT wok) DO BEGIN
                          cRut.EnviaFTP(rProvFE."Ruta XML" + USERID,rProvFE."Ruta envios",'',
                                rProvFE."Ruta XML" + rlTemp.Fichero,rProvFE."Usuario FTP",rProvFE."Password FTP",wok);

                          IF wok THEN
                            SLEEP(rProvFE."Tiempo de espera reenvio"*1000);
                            wCont += 1;
                        END;
                        IF wok THEN BEGIN
                          rlLinRemesa.SETRANGE(rlLinRemesa.A¤o,prmA¤o);
                          rlLinRemesa.SETRANGE(rlLinRemesa."N£m. Remesa",prmNumRemesa);
                          IF rlLinRemesa.FIND('-') THEN BEGIN
                            REPEAT
                              rlLinRemesa."Enviado FTP" := TRUE;
                              rlLinRemesa.MODIFY;
                            UNTIL rlLinRemesa.NEXT=0;
                          END;
                        END
                        ELSE BEGIN
                          IF NOT COPY(rProvFE."Ruta XML" + rlTemp.Fichero,
                                      rProvFE."Ruta archivos no enviados" + rlTemp.Fichero) THEN
                            ERROR(TextL001,rProvFE."Ruta XML" + rlTemp.Fichero,
                                      rProvFE."Ruta archivos no enviados" + rlTemp.Fichero)
                          ELSE
                            ERASE(rProvFE."Ruta XML" + rlTemp.Fichero);
                          MESSAGE(lText006, rlTemp.Fichero);
                        END;
                      END;
                   END;
                END;
              END;

      }





              IF rlTemp.FIND('-') THEN
                REPEAT
                  rlTemp.DELETE;
                UNTIL rlTemp.NEXT=0;
              //-008

            END ELSE BEGIN
              //eliminamos los registros de la tabla temporal
              rlTemp.RESET;
              rlTemp.SETRANGE(rlTemp.Usuario, USERID);
              rlTemp.SETRANGE(rlTemp.Fecha, wlFecha);
              rlTemp.SETRANGE(rlTemp.Hora, wlHora);
              IF rlTemp.FIND('-') THEN BEGIN
               REPEAT
                 rlTemp.DELETE;
               UNTIL rlTemp.NEXT = 0;
              END;
            END;
          END;
        UNTIL rProvFE.NEXT=0;
      END;
    END;

    PROCEDURE NumeroLineaRemesa@1100000(lrCabRemesa@1100000 : Record 7035412) : Integer;
    VAR
      lrLinRemesa@1100002 : Record 7035413;
      lResult@1100001 : Integer;
    BEGIN
      //+011

      //... Buscamos el £ltimo n§ de l¡nea utilizado

      lResult := 10000;

      lrLinRemesa.RESET;
      lrLinRemesa.SETCURRENTKEY(A¤o,"N£m. Remesa","N§ L¡nea");
      lrLinRemesa.SETRANGE(A¤o,lrCabRemesa.A¤o);
      lrLinRemesa.SETRANGE("N£m. Remesa",lrCabRemesa."N£m. Remesa");
      IF lrLinRemesa.FIND('+') THEN
        lResult := lrLinRemesa."N§ L¡nea" + 10000;

      EXIT(lResult);
    END;

    PROCEDURE A¤adirLinea@1100253005(rLocCabFactura@1100253001 : Record 36;rLocCabRemesa@1100253002 : Record 7035412;VAR NumLinea@1100253000 : Integer);
    BEGIN
      CopiarLinFactura(rLocCabFactura,rLocCabRemesa,NumLinea);
      NumLinea +=10000;
    END;

    PROCEDURE ActualizarCabFactura@1100253008(rLocCabRemesa@1100253001 : Record 7035412;rLocCabFactura@1100253000 : Record 36);
    BEGIN
      WITH rLocCabFactura DO
      BEGIN

          // +007
          // "N§ Remesa Fact. Electr¢nica" := rLocCabRemesa."N£m. Remesa";
          IF (rLocCabRemesa.A¤o <> 0) OR (rLocCabRemesa."N£m. Remesa" <> 0) THEN
            EVALUATE("N§ Remesa Fact. Electr¢nica",FORMAT(rLocCabRemesa.A¤o) + FORMAT(rLocCabRemesa."N£m. Remesa"));
          // -007
          MODIFY;
      END;
    END;

    PROCEDURE DesmarcarFacturas@1100217002(VAR pCabFactura@1100217000 : Record 36);
    BEGIN
      // +1301
      pCabFactura."Fact. Electr¢nica Activada" := FALSE;
      pCabFactura.MODIFY;
    END;

    PROCEDURE DesmarcarMarcadas@1100217000(VAR pCF@1100217000 : Record 36);
    VAR
      rLocCF@1100217001 : Record 36;
    BEGIN
      pCF.MARKEDONLY(TRUE);

      IF pCF.FIND('-') THEN REPEAT
        rLocCF := pCF;

        DesmarcarFacturas(rLocCF);

      UNTIL pCF.NEXT=0;

      pCF.MARKEDONLY(FALSE);
      pCF.CLEARMARKS;
    END;

    PROCEDURE MuestraFacturaReg@1100253000(pTipoDocumento@1100253002 : 'Factura,Abono';pFactura@1100253003 : Code[20]);
    VAR
      lrFV@1100253001 : Record 112;
      lrAV@1100253000 : Record 114;
    BEGIN
      IF pTipoDocumento = pTipoDocumento::Factura THEN BEGIN
        lrFV.RESET;
        lrFV.SETRANGE("No.",pFactura);
        IF lrFV.FIND('-') THEN
          FORM.RUNMODAL(FORM::"Posted Sales Invoice",lrFV);
      END
      ELSE BEGIN
        lrAV.RESET;
        lrAV.SETRANGE("No.",pFactura);
        IF lrAV.FIND('-') THEN
          FORM.RUNMODAL(FORM::"Posted Sales Credit Memo",lrAV);
      END;
    END;

    PROCEDURE EstableceReferencia@1100010(pNumDoc@1100001 : Code[20];pNumLinea@1100005 : Integer;pTipoDocumento@1100000 : 'Factura Dynamics,Abono Dynamics';VAR pTableRef@1100002 : RecordRef);
    VAR
      lrCabFac@1100003 : Record 112;
      lrCabAbo@1100004 : Record 114;
      lrLinFac@1100006 : Record 113;
      lrLinAbo@1100007 : Record 115;
    BEGIN
      IF pTipoDocumento = pTipoDocumento::"Factura Dynamics" THEN BEGIN
        IF pNumLinea = 0 THEN BEGIN
          lrCabFac.GET(pNumDoc);
          pTableRef.GETTABLE(lrCabFac);
          pTableRef.SETPOSITION(lrCabFac.GETPOSITION);
        END
        ELSE BEGIN
          lrLinFac.GET(pNumDoc,pNumLinea);
          pTableRef.GETTABLE(lrLinFac);
          pTableRef.SETPOSITION(lrLinFac.GETPOSITION);
        END;
      END
      ELSE BEGIN
        IF pNumLinea = 0 THEN BEGIN
          lrCabAbo.GET(pNumDoc);
          pTableRef.GETTABLE(lrCabAbo);
          pTableRef.SETPOSITION(lrCabAbo.GETPOSITION);
        END
        ELSE BEGIN
          lrLinAbo.GET(pNumDoc,pNumLinea);
          pTableRef.GETTABLE(lrLinAbo);
          pTableRef.SETPOSITION(lrLinAbo.GETPOSITION);
        END;
      END;
    END;

    PROCEDURE RetornaDivisa@1100004(pNumDoc@1100000 : Code[20];pTipoDocumento@1100001 : 'Factura Registrada,Abono Registrada') : Text[250];
    VAR
      lrCabFra@1100003 : Record 112;
      lrCabAbo@1100004 : Record 114;
      lrCfg@1100005 : Record 98;
      lResult@1100002 : Text[250];
    BEGIN
      lResult := '';
      CASE pTipoDocumento OF
        pTipoDocumento::"Factura Registrada":
          IF lrCabFra.GET(pNumDoc) THEN
            lResult := lrCabFra."Currency Code";

        pTipoDocumento::"Abono Registrada":
          IF lrCabAbo.GET(pNumDoc) THEN
            lResult := lrCabAbo."Currency Code";
      END;

      IF lResult = '' THEN BEGIN
        lrCfg.FIND('-');
        lrCfg.TESTFIELD("LCY Code");
        lResult := lrCfg."LCY Code";
      END;

      EXIT(lResult);
    END;

    BEGIN
    {
      001 23-11-06 LIS: SGI-114, creaci¢n codeunit.
      002 17-04-07 LIS: SGI-114, modificar clave Cabecera factura y filtros documento (Quitar filtro hotel y a¤adir filtro destino)
      003 18-04-07 LIS: SGI-114, informar campo Proveedor FE
      004 19-04-07 LIS: SGI-114, crear funci¢n Actualizar facturas
      005 20-04-07 LIS: SGI-114, cambiar clave
      006 20-04-07 LIS: SGI-114, crear funci¢n GenenerarMarcadas.
      007 14-05-08 LIS: A¤adir a¤o en n§ remesa en Cabecera Factura
      008 CAT OC-ORZ10101 Envio por FTP, archivos de facturaci¢n electr¢nica
      200 AGC 05/07/10. NHW6.01. Se cambia la referencia de las tablas y formularios  para que apunten a las nuevas
                  /formularios creados.
      009 21-10-10 ACC: INC-52051 Corregido para que no de error al copiar la direcci¢n
      010 01.12.10 RRT: GRB-CAR-10177. Permitir que las facturas de Balnearios y de "Salas y Eventos" se puedan enviar
                        tambi‚n por facturaci¢n electr¢nica.
      011 17-12-10 RRT: GSH-CAR-10101. Adaptacion facturas estandar a facturaci¢n electr¢nica.
      012 24/01/11 PLB: SGI-OC-11022. Todas las facturas pueden ser de facturaci¢n electr¢nica
      100 SRC 03/11/2010 MOdificaciones WS

      1301 09-10-13 LIS: HSJ-OC-13048, crear nuevas funciones Desmarcar Factura y Desmarcar Marcadas
    }
    END.
  }
}
