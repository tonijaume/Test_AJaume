OBJECT Codeunit 5972 Service Info-Pane Management
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVW16.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Cust@1000 : Record 18;
      Item@1001 : Record 27;
      ServHeader@1003 : Record 5900;
      SalesPriceCalcMgt@1002 : Codeunit 7000;

    PROCEDURE CalcNoOfDocuments@1(VAR Cust@1000 : Record 18);
    BEGIN
      Cust.CALCFIELDS(
        "No. of Quotes","No. of Blanket Orders","No. of Orders","No. of Invoices",
        "No. of Return Orders","No. of Credit Memos","No. of Pstd. Shipments",
        "No. of Pstd. Invoices","No. of Pstd. Return Receipts","No. of Pstd. Credit Memos");
    END;

    PROCEDURE CalcTotalNoOfDocuments@2(CustNo@1000 : Code[20]) : Integer;
    BEGIN
      GetCust(CustNo);
      WITH Cust DO BEGIN
        CalcNoOfDocuments(Cust);
        EXIT(
          "No. of Quotes" + "No. of Blanket Orders" + "No. of Orders" + "No. of Invoices" +
          "No. of Return Orders" + "No. of Credit Memos" + "No. of Pstd. Shipments" +
          "No. of Pstd. Invoices" + "No. of Pstd. Return Receipts" + "No. of Pstd. Credit Memos");
      END;
    END;

    PROCEDURE CalcNoOfShipToAddr@5(CustNo@1000 : Code[20]) : Integer;
    BEGIN
      GetCust(CustNo);
      Cust.CALCFIELDS("No. of Ship-to Addresses");
      EXIT(Cust."No. of Ship-to Addresses");
    END;

    PROCEDURE CalcNoOfContacts@3(ServiceHeader@1002 : Record 5900) : Integer;
    VAR
      Cont@1000 : Record 5050;
      ContBusRelation@1001 : Record 5054;
    BEGIN
      Cont.SETCURRENTKEY("Company No.");
      WITH ServiceHeader DO
        IF "Customer No." <> '' THEN BEGIN
          IF Cont.GET("Contact No.") THEN BEGIN
            Cont.SETRANGE("Company No.",Cont."Company No.");
            EXIT(Cont.COUNT);
          END ELSE BEGIN
            ContBusRelation.RESET;
            ContBusRelation.SETCURRENTKEY("Link to Table","No.");
            ContBusRelation.SETRANGE("Link to Table",ContBusRelation."Link to Table"::Customer);
            ContBusRelation.SETRANGE("No.","Customer No.");
            IF ContBusRelation.FINDFIRST THEN BEGIN
              Cont.SETRANGE("Company No.",ContBusRelation."Contact No.");
              EXIT(Cont.COUNT);
            END ELSE
              EXIT(0)
          END;
        END;
    END;

    PROCEDURE CalcAvailableCredit@4(CustNo@1002 : Code[20]) : Decimal;
    VAR
      TotalAmountLCY@1000 : Decimal;
    BEGIN
      GetCust(CustNo);
      WITH Cust DO BEGIN
        SETRANGE("Date Filter",0D,WORKDATE);
        CALCFIELDS("Balance (LCY)","Outstanding Orders (LCY)","Shipped Not Invoiced (LCY)");
        TotalAmountLCY := "Balance (LCY)" + "Outstanding Orders (LCY)" + "Shipped Not Invoiced (LCY)";

        IF "Credit Limit (LCY)" <> 0 THEN
          EXIT("Credit Limit (LCY)" - TotalAmountLCY);
      END;
    END;

    PROCEDURE CalcAvailability@18(VAR ServLine@1000 : Record 5902) : Decimal;
    VAR
      AvailableToPromise@1001 : Codeunit 5790;
      GrossRequirement@1002 : Decimal;
      ScheduledReceipt@1003 : Decimal;
      PeriodType@1006 : 'Day,Week,Month,Quarter,Year';
      AvailabilityDate@1004 : Date;
      LookaheadDateformula@1005 : DateFormula;
    BEGIN
      IF GetItem(ServLine) THEN BEGIN
        AvailabilityDate := WORKDATE;

        Item.RESET;
        Item.SETRANGE("Date Filter",0D,AvailabilityDate);
        Item.SETRANGE("Variant Filter",ServLine."Variant Code");
        Item.SETRANGE("Location Filter",ServLine."Location Code");
        Item.SETRANGE("Drop Shipment Filter",FALSE);

        EXIT(
          AvailableToPromise.QtyAvailabletoPromise(
            Item,
            GrossRequirement,
            ScheduledReceipt,
            AvailabilityDate,
            PeriodType,
            LookaheadDateformula));
      END;
    END;

    PROCEDURE CalcNoOfSubstitutions@20(VAR ServLine@1000 : Record 5902) : Integer;
    BEGIN
      IF GetItem(ServLine) THEN BEGIN
        Item.CALCFIELDS("No. of Substitutes");
        EXIT(Item."No. of Substitutes");
      END;
    END;

    PROCEDURE CalcNoOfSalesPrices@19(VAR ServLine@1000 : Record 5902) : Integer;
    BEGIN
      IF GetItem(ServLine) THEN BEGIN
        GetServHeader(ServLine);
        EXIT(SalesPriceCalcMgt.NoOfServLinePrice(ServHeader,ServLine,TRUE));
      END;
    END;

    PROCEDURE CalcNoOfSalesLineDisc@22(VAR ServLine@1001 : Record 5902) : Integer;
    BEGIN
      IF GetItem(ServLine) THEN BEGIN
        GetServHeader(ServLine);
        EXIT(SalesPriceCalcMgt.NoOfServLineLineDisc(ServHeader,ServLine,TRUE));
      END;
    END;

    PROCEDURE DocExist@16(CurrentServHeader@1005 : Record 5900;CustNo@1000 : Code[20]) : Boolean;
    VAR
      ServInvHeader@1001 : Record 5992;
      ServShptHeader@1002 : Record 5990;
      ServCrMemoHeader@1003 : Record 5994;
      ReturnReceipt@1006 : Record 6660;
      ServHeader@1004 : Record 5900;
    BEGIN
      IF CustNo = '' THEN
        EXIT(FALSE);
      WITH ServInvHeader DO BEGIN
        SETCURRENTKEY("Customer No.");
        SETRANGE("Customer No.",CustNo);
        IF FIND('-') THEN
          EXIT(TRUE);
      END;
      WITH ServShptHeader DO BEGIN
        SETCURRENTKEY("Customer No.");
        SETRANGE("Customer No.",CustNo);
        IF FIND('-') THEN
          EXIT(TRUE);
      END;
      WITH ServCrMemoHeader DO BEGIN
        SETCURRENTKEY("Customer No.");
        SETRANGE("Customer No.",CustNo);
        IF FIND('-') THEN
          EXIT(TRUE);
      END;
      WITH ServHeader DO BEGIN
        SETCURRENTKEY("Customer No.");
        SETRANGE("Customer No.",CustNo);
        IF FIND('-') THEN BEGIN
          IF ("Document Type" <> CurrentServHeader."Document Type") OR
             ("No." <> CurrentServHeader."No.")
          THEN
            EXIT(TRUE);
          IF FIND('>') THEN
            EXIT(TRUE);
        END;
      END;
      WITH ReturnReceipt DO BEGIN
        SETCURRENTKEY("Sell-to Customer No.");
        SETRANGE("Sell-to Customer No.",CustNo);
        IF FIND('-') THEN
          EXIT(TRUE);
      END;
    END;

    PROCEDURE CustCommentExists@8(CustNo@1000 : Code[20]) : Boolean;
    BEGIN
      GetCust(CustNo);
      Cust.CALCFIELDS(Comment);
      EXIT(Cust.Comment);
    END;

    PROCEDURE ItemCommentExists@12(ServLine@1000 : Record 5902) : Boolean;
    BEGIN
      IF GetItem(ServLine) THEN BEGIN
        Item.CALCFIELDS(Comment);
        EXIT(Item.Comment);
      END;
    END;

    PROCEDURE LookupCustServHistory@9(VAR ServHeader@1001 : Record 5900;CustNo@1000 : Code[20];UseBillTo@1003 : Boolean);
    VAR
      CustServHistory@1002 : Form 6035;
    BEGIN
      GetCust(CustNo);
      CustServHistory.SetToServHeader(ServHeader,UseBillTo);
      CustServHistory.SETRECORD(Cust);
      CustServHistory.LOOKUPMODE := TRUE;
      CustServHistory.RUNMODAL;
    END;

    PROCEDURE LookupShipToAddr@10(VAR ServHeader@1000 : Record 5900);
    VAR
      ShipToAddr@1001 : Record 222;
    BEGIN
      WITH ServHeader DO BEGIN
        ShipToAddr.SETRANGE("Customer No.","Customer No.");
        IF FORM.RUNMODAL(0,ShipToAddr) = ACTION::LookupOK THEN BEGIN
          VALIDATE("Ship-to Code",ShipToAddr.Code);
          MODIFY(TRUE);
        END;
      END;
    END;

    PROCEDURE LookupContacts@11(VAR ServHeader@1000 : Record 5900);
    VAR
      Cont@1002 : Record 5050;
      ContBusRelation@1001 : Record 5054;
    BEGIN
      WITH ServHeader DO BEGIN
        IF "Customer No." <> '' THEN BEGIN
          IF Cont.GET("Contact No.") THEN
            Cont.SETRANGE("Company No.",Cont."Company No.")
          ELSE BEGIN
            ContBusRelation.RESET;
            ContBusRelation.SETCURRENTKEY("Link to Table","No.");
            ContBusRelation.SETRANGE("Link to Table",ContBusRelation."Link to Table"::Customer);
            ContBusRelation.SETRANGE("No.","Customer No.");
            IF ContBusRelation.FINDFIRST THEN
              Cont.SETRANGE("Company No.",ContBusRelation."Contact No.")
            ELSE
              Cont.SETRANGE("No.",'');
          END;
      IF Cont.GET("Contact No.") THEN ;
        END ELSE
          Cont.SETRANGE("No.",'');
        IF FORM.RUNMODAL(0,Cont) = ACTION::LookupOK THEN BEGIN
          VALIDATE("Contact No.",Cont."No.");
          MODIFY(TRUE);
        END;
      END;
    END;

    PROCEDURE LookupAvailCredit@15(CustNo@1000 : Code[20]);
    BEGIN
      Cust.RESET;
      Cust.SETRANGE("No.",CustNo);
      FORM.RUNMODAL(FORM::"Available Credit",Cust);
    END;

    PROCEDURE LookupItem@7(ServLine@1000 : Record 5902);
    BEGIN
      ServLine.TESTFIELD(Type,ServLine.Type::Item);
      ServLine.TESTFIELD("No.");
      GetItem(ServLine);
      FORM.RUNMODAL(FORM::"Item Card",Item);
    END;

    PROCEDURE LookupItemComment@14(ServLine@1000 : Record 5902);
    VAR
      CommentLine@1001 : Record 97;
    BEGIN
      IF GetItem(ServLine) THEN BEGIN
        CommentLine.SETRANGE("Table Name",CommentLine."Table Name"::Item);
        CommentLine.SETRANGE("No.",ServLine."No.");
        FORM.RUNMODAL(FORM::"Comment Sheet",CommentLine);
      END;
    END;

    LOCAL PROCEDURE GetCust@6(CustNo@1000 : Code[20]);
    BEGIN
      IF CustNo <> '' THEN BEGIN
        IF CustNo <> Cust."No." THEN
          Cust.GET(CustNo);
      END ELSE
        CLEAR(Cust);
    END;

    LOCAL PROCEDURE GetItem@24(VAR ServLine@1000 : Record 5902) : Boolean;
    BEGIN
      WITH Item DO BEGIN
        IF (ServLine.Type <> ServLine.Type::Item) OR (ServLine."No." = '') THEN
          EXIT(FALSE);

        IF ServLine."No." <> "No." THEN
          GET(ServLine."No.");
        EXIT(TRUE);
      END;
    END;

    LOCAL PROCEDURE GetServHeader@13(ServLine@1000 : Record 5902);
    BEGIN
      IF (ServLine."Document Type" <> ServHeader."Document Type") OR
         (ServLine."Document No." <> ServHeader."No.")
      THEN
        ServHeader.GET(ServLine."Document Type",ServLine."Document No.");
    END;

    PROCEDURE LookupServItemComment@17(ServItemLine@1000 : Record 5901);
    VAR
      ServCommentLine@1001 : Record 5906;
      ServItem@1002 : Record 5940;
    BEGIN
      IF ServItem.GET(ServItemLine."Service Item No.") THEN BEGIN
        ServCommentLine.SETRANGE("Table Name",ServCommentLine."Table Name"::"Service Item");
        ServCommentLine.SETRANGE("Table Subtype",ServCommentLine."Table Subtype"::"0");
        ServCommentLine.SETRANGE("No.",ServItemLine."Service Item No.");
        FORM.RUNMODAL(FORM::"Service Comment Sheet",ServCommentLine);
      END;
    END;

    PROCEDURE ServItemCommentExists@21(ServItemLine@1000 : Record 5901) : Boolean;
    VAR
      ServItem@1001 : Record 5940;
    BEGIN
      IF ServItem.GET(ServItemLine."Service Item No.") THEN BEGIN
        ServItem.CALCFIELDS(Comment);
        EXIT(ServItem.Comment);
      END;
    END;

    PROCEDURE LookupServItem@23(ServItemLine@1000 : Record 5901);
    VAR
      ServItem@1001 : Record 5940;
    BEGIN
      IF ServItem.GET(ServItemLine."Service Item No.") THEN
        FORM.RUNMODAL(FORM::"Service Item Card",ServItem);
    END;

    PROCEDURE CalcNoOfServItemComponents@27(VAR ServItemLine@1000 : Record 5901) : Integer;
    VAR
      ServItem@1002 : Record 5940;
      ServItemComponent@1001 : Record 5941;
    BEGIN
      IF ServItem.GET(ServItemLine."Service Item No.") THEN BEGIN
        ServItemComponent.RESET;
        ServItemComponent.SETRANGE(Active,TRUE);
        ServItemComponent.SETRANGE("Parent Service Item No.",ServItemLine."Service Item No.");
        EXIT(ServItemComponent.COUNT);
      END;
    END;

    PROCEDURE CalcNoOfTroubleshootings@26(VAR ServItemLine@1000 : Record 5901) : Integer;
    VAR
      ServItem@1002 : Record 5940;
      TroubleshootingSetup@1001 : Record 5945;
    BEGIN
      IF ServItem.GET(ServItemLine."Service Item No.") THEN BEGIN
        TroubleshootingSetup.RESET;
        TroubleshootingSetup.SETRANGE(Type,TroubleshootingSetup.Type::"Service Item");
        TroubleshootingSetup.SETRANGE("No.",ServItemLine."Service Item No.");
        EXIT(TroubleshootingSetup.COUNT);
      END;
    END;

    PROCEDURE CalcNoOfSkilledResources@25(VAR ServItemLine@1001 : Record 5901) : Integer;
    VAR
      ServItem@1003 : Record 5940;
      Res@1000 : Record 156;
      ServOrderAllocMgt@1005 : Codeunit 5930;
      NoOfSkilledResources@1002 : Integer;
      ResourceSkillType@1004 : 'Resource,Service Item Group,Item,Service Item';
    BEGIN
      IF ServItem.GET(ServItemLine."Service Item No.") THEN BEGIN
        Res.RESET;
        IF Res.FIND('-') THEN
          REPEAT
            IF ServOrderAllocMgt.ResourceQualified(Res."No.",ResourceSkillType::"Service Item",ServItem."No.") THEN
              NoOfSkilledResources += 1;
          UNTIL Res.NEXT = 0;
        EXIT(NoOfSkilledResources);
      END;
    END;

    PROCEDURE ShowServItemComponents@28(VAR ServItemLine@1000 : Record 5901);
    VAR
      ServItem@1002 : Record 5940;
      ServItemComponent@1001 : Record 5941;
    BEGIN
      IF ServItem.GET(ServItemLine."Service Item No.") THEN BEGIN
        ServItemComponent.RESET;
        ServItemComponent.SETRANGE(Active,TRUE);
        ServItemComponent.SETRANGE("Parent Service Item No.",ServItemLine."Service Item No.");
        FORM.RUNMODAL(FORM::"Service Item Component List",ServItemComponent);
      END;
    END;

    PROCEDURE ShowTroubleshootings@29(VAR ServItemLine@1000 : Record 5901);
    VAR
      ServItem@1002 : Record 5940;
      TroubleshootingSetup@1001 : Record 5945;
    BEGIN
      IF ServItem.GET(ServItemLine."Service Item No.") THEN BEGIN
        TroubleshootingSetup.RESET;
        TroubleshootingSetup.SETRANGE(Type,TroubleshootingSetup.Type::"Service Item");
        TroubleshootingSetup.SETRANGE("No.",ServItemLine."Service Item No.");
        FORM.RUNMODAL(FORM::"Troubleshooting Setup",TroubleshootingSetup);
      END;
    END;

    PROCEDURE ShowSkilledResources@30(VAR ServItemLine@1000 : Record 5901);
    VAR
      ServItem@1002 : Record 5940;
      ResourceSkill@1003 : Record 5956;
      SkilledResourceList@1001 : Form 6023;
    BEGIN
      IF ServItem.GET(ServItemLine."Service Item No.") THEN BEGIN
        CLEAR(SkilledResourceList);
        SkilledResourceList.Initialize(ResourceSkill.Type::"Service Item",ServItem."No.",ServItem.Description);
        SkilledResourceList.RUNMODAL;
      END;
    END;

    BEGIN
    END.
  }
}
