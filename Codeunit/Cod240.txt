OBJECT Codeunit 240 ItemJnlManagement
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVW16.00;
  }
  PROPERTIES
  {
    Permissions=TableData 82=imd,
                TableData 233=imd;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=%1 journal;ESP=Diario %1';
      Text001@1001 : TextConst 'ENU=RECURRING;ESP=PERIODICO';
      Text002@1002 : TextConst 'ENU=Recurring Item Journal;ESP=Diario producto peri¢dico';
      Text003@1003 : TextConst 'ENU=DEFAULT;ESP=GENERICO';
      Text004@1004 : TextConst 'ENU=Default Journal;ESP=Diario gen‚rico';
      OldItemNo@1005 : Code[20];
      OldCapNo@1007 : Code[20];
      OldCapType@1006 : 'Work Center,Machine Center';
      OldProdOrderNo@1009 : Code[20];
      OldOperationNo@1008 : Code[20];
      Text005@1010 : TextConst 'ENU=REC-;ESP=PER-';
      Text006@1011 : TextConst 'ENU="Recurring ";ESP="Peri¢dico "';
      OpenFromBatch@1012 : Boolean;

    PROCEDURE TemplateSelection@1(FormID@1005 : Integer;FormTemplate@1000 : 'Item,Transfer,Phys. Inventory,Revaluation,Consumption,Output,Capacity,Prod.Order';RecurringJnl@1001 : Boolean;VAR ItemJnlLine@1004 : Record 83;VAR JnlSelected@1003 : Boolean);
    VAR
      ItemJnlTemplate@1002 : Record 82;
    BEGIN
      JnlSelected := TRUE;

      ItemJnlTemplate.RESET;
      ItemJnlTemplate.SETRANGE("Form ID",FormID);
      ItemJnlTemplate.SETRANGE(Recurring,RecurringJnl);
      ItemJnlTemplate.SETRANGE(Type,FormTemplate);

      CASE ItemJnlTemplate.COUNT OF
        0:
          BEGIN
            ItemJnlTemplate.INIT;
            ItemJnlTemplate.Recurring := RecurringJnl;
            ItemJnlTemplate.VALIDATE(Type,FormTemplate);
            ItemJnlTemplate.VALIDATE("Form ID");
            IF NOT RecurringJnl THEN BEGIN
              ItemJnlTemplate.Name := FORMAT(ItemJnlTemplate.Type,MAXSTRLEN(ItemJnlTemplate.Name));
              ItemJnlTemplate.Description := STRSUBSTNO(Text000,ItemJnlTemplate.Type);
            END ELSE BEGIN
              IF ItemJnlTemplate.Type = ItemJnlTemplate.Type::Item THEN BEGIN
                ItemJnlTemplate.Name := Text001;
                ItemJnlTemplate.Description := Text002;
              END ELSE BEGIN
                ItemJnlTemplate.Name :=
                  Text005 + FORMAT(ItemJnlTemplate.Type,MAXSTRLEN(ItemJnlTemplate.Name) - STRLEN(Text005));
                ItemJnlTemplate.Description := Text006 + STRSUBSTNO(Text000,ItemJnlTemplate.Type);
              END;
            END;
            ItemJnlTemplate.INSERT;
            COMMIT;
          END;
        1:
          ItemJnlTemplate.FIND('-');
        ELSE
          JnlSelected := FORM.RUNMODAL(0,ItemJnlTemplate) = ACTION::LookupOK;
      END;
      IF JnlSelected THEN BEGIN
        ItemJnlLine.FILTERGROUP := 2;
        ItemJnlLine.SETRANGE("Journal Template Name",ItemJnlTemplate.Name);
        ItemJnlLine.FILTERGROUP := 0;
        IF OpenFromBatch THEN BEGIN
          ItemJnlLine."Journal Template Name" := '';
          FORM.RUN(ItemJnlTemplate."Form ID",ItemJnlLine);
        END;
      END;
    END;

    PROCEDURE TemplateSelectionFromBatch@10(VAR ItemJnlBatch@1000 : Record 233);
    VAR
      ItemJnlLine@1002 : Record 83;
      ItemJnlTemplate@1003 : Record 82;
      JnlSelected@1001 : Boolean;
    BEGIN
      OpenFromBatch := TRUE;
      ItemJnlTemplate.GET(ItemJnlBatch."Journal Template Name");
      ItemJnlTemplate.TESTFIELD("Form ID");
      ItemJnlBatch.TESTFIELD(Name);

      ItemJnlLine.FILTERGROUP := 2;
      ItemJnlLine.SETRANGE("Journal Template Name",ItemJnlTemplate.Name);
      ItemJnlLine.FILTERGROUP := 0;

      ItemJnlLine."Journal Template Name" := '';
      ItemJnlLine."Journal Batch Name" := ItemJnlBatch.Name;
      FORM.RUN(ItemJnlTemplate."Form ID",ItemJnlLine);
    END;

    PROCEDURE OpenJnl@2(VAR CurrentJnlBatchName@1000 : Code[10];VAR ItemJnlLine@1001 : Record 83);
    BEGIN
      CheckTemplateName(ItemJnlLine.GETRANGEMAX("Journal Template Name"),CurrentJnlBatchName);
      ItemJnlLine.FILTERGROUP := 2;
      ItemJnlLine.SETRANGE("Journal Batch Name",CurrentJnlBatchName);
      ItemJnlLine.FILTERGROUP := 0;
    END;

    PROCEDURE OpenJnlBatch@12(VAR ItemJnlBatch@1000 : Record 233);
    VAR
      ItemJnlTemplate@1002 : Record 82;
      ItemJnlLine@1003 : Record 83;
      ItemJnlBatch2@1001 : Record 233;
      JnlSelected@1004 : Boolean;
    BEGIN
      IF ItemJnlBatch.GETFILTER("Journal Template Name") <> '' THEN
        EXIT;
      ItemJnlBatch.FILTERGROUP(2);
      IF ItemJnlBatch.GETFILTER("Journal Template Name") <> '' THEN BEGIN
        ItemJnlBatch.FILTERGROUP(0);
        EXIT;
      END;
      ItemJnlBatch.FILTERGROUP(0);

      IF NOT ItemJnlBatch.FIND('-') THEN BEGIN
        FOR ItemJnlTemplate.Type := ItemJnlTemplate.Type::Item TO ItemJnlTemplate.Type::"Prod.Order" DO BEGIN
          ItemJnlTemplate.SETRANGE(Type,ItemJnlTemplate.Type);
          IF NOT ItemJnlTemplate.FIND('-') THEN
            TemplateSelection(0,ItemJnlTemplate.Type,FALSE,ItemJnlLine,JnlSelected);
          IF ItemJnlTemplate.FIND('-') THEN
            CheckTemplateName(ItemJnlTemplate.Name,ItemJnlBatch.Name);
          IF ItemJnlTemplate.Type IN [ItemJnlTemplate.Type::Item,
                                      ItemJnlTemplate.Type::Consumption,
                                      ItemJnlTemplate.Type::Output,
                                      ItemJnlTemplate.Type::Capacity]
          THEN BEGIN
            ItemJnlTemplate.SETRANGE(Recurring,TRUE);
            IF NOT ItemJnlTemplate.FIND('-') THEN
              TemplateSelection(0,ItemJnlTemplate.Type,TRUE,ItemJnlLine,JnlSelected);
            IF ItemJnlTemplate.FIND('-') THEN
              CheckTemplateName(ItemJnlTemplate.Name,ItemJnlBatch.Name);
            ItemJnlTemplate.SETRANGE(Recurring);
          END;
        END;
      END;
      ItemJnlBatch.FIND('-');
      JnlSelected := TRUE;
      ItemJnlBatch.CALCFIELDS("Template Type",Recurring);
      ItemJnlTemplate.SETRANGE(Recurring,ItemJnlBatch.Recurring);
      IF NOT ItemJnlBatch.Recurring THEN
        ItemJnlTemplate.SETRANGE(Type,ItemJnlBatch."Template Type");
      IF ItemJnlBatch.GETFILTER("Journal Template Name") <> '' THEN
         ItemJnlTemplate.SETRANGE(Name,ItemJnlBatch.GETFILTER("Journal Template Name"));
      CASE ItemJnlTemplate.COUNT OF
        1:
          ItemJnlTemplate.FIND('-');
        ELSE
          JnlSelected := FORM.RUNMODAL(0,ItemJnlTemplate) = ACTION::LookupOK;
      END;
      IF NOT JnlSelected THEN
        ERROR('');

      ItemJnlBatch.FILTERGROUP(2);
      ItemJnlBatch.SETRANGE("Journal Template Name",ItemJnlTemplate.Name);
      ItemJnlBatch.FILTERGROUP(0);
    END;

    PROCEDURE CheckTemplateName@3(CurrentJnlTemplateName@1000 : Code[10];VAR CurrentJnlBatchName@1001 : Code[10]);
    VAR
      ItemJnlBatch@1002 : Record 233;
    BEGIN
      ItemJnlBatch.SETRANGE("Journal Template Name",CurrentJnlTemplateName);
      IF NOT ItemJnlBatch.GET(CurrentJnlTemplateName,CurrentJnlBatchName) THEN BEGIN
        IF NOT ItemJnlBatch.FIND('-') THEN BEGIN
          ItemJnlBatch.INIT;
          ItemJnlBatch."Journal Template Name" := CurrentJnlTemplateName;
          ItemJnlBatch.SetupNewBatch;
          ItemJnlBatch.Name := Text003;
          ItemJnlBatch.Description := Text004;
          ItemJnlBatch.INSERT(TRUE);
          COMMIT;
        END;
        CurrentJnlBatchName := ItemJnlBatch.Name
      END;
    END;

    PROCEDURE CheckName@4(CurrentJnlBatchName@1000 : Code[10];VAR ItemJnlLine@1001 : Record 83);
    VAR
      ItemJnlBatch@1002 : Record 233;
    BEGIN
      ItemJnlBatch.GET(ItemJnlLine.GETRANGEMAX("Journal Template Name"),CurrentJnlBatchName);
    END;

    PROCEDURE SetName@5(CurrentJnlBatchName@1000 : Code[10];VAR ItemJnlLine@1001 : Record 83);
    BEGIN
      ItemJnlLine.FILTERGROUP := 2;
      ItemJnlLine.SETRANGE("Journal Batch Name",CurrentJnlBatchName);
      ItemJnlLine.FILTERGROUP := 0;
      IF ItemJnlLine.FIND('-') THEN;
    END;

    PROCEDURE LookupName@6(VAR CurrentJnlBatchName@1000 : Code[10];VAR ItemJnlLine@1001 : Record 83) : Boolean;
    VAR
      ItemJnlBatch@1002 : Record 233;
    BEGIN
      COMMIT;
      ItemJnlBatch."Journal Template Name" := ItemJnlLine.GETRANGEMAX("Journal Template Name");
      ItemJnlBatch.Name := ItemJnlLine.GETRANGEMAX("Journal Batch Name");
      ItemJnlBatch.FILTERGROUP(2);
      ItemJnlBatch.SETRANGE("Journal Template Name",ItemJnlBatch."Journal Template Name");
      ItemJnlBatch.FILTERGROUP(0);
      IF FORM.RUNMODAL(0,ItemJnlBatch) = ACTION::LookupOK THEN BEGIN
        CurrentJnlBatchName := ItemJnlBatch.Name;
        SetName(CurrentJnlBatchName,ItemJnlLine);
      END;
    END;

    PROCEDURE OnAfterInputItemNo@8(VAR Text@1000 : Text[1024]) : Text[1024];
    VAR
      Item@1002 : Record 27;
      Number@1001 : Integer;
    BEGIN
      IF Text = '' THEN
        EXIT;

      IF EVALUATE(Number,Text) THEN
        EXIT;

      Item."No." := Text;
      IF Item.FIND('=>') THEN
        IF COPYSTR(Item."No.",1,STRLEN(Text)) = UPPERCASE(Text) THEN BEGIN
          Text := Item."No.";
          EXIT;
        END;

      Item.SETCURRENTKEY("Search Description");
      Item."Search Description" := Text;
      Item."No." := '';
      IF Item.FIND('=>') THEN
        IF COPYSTR(Item."Search Description",1,STRLEN(Text)) = UPPERCASE(Text) THEN
          Text := Item."No.";
    END;

    PROCEDURE GetItem@7(ItemNo@1000 : Code[20];VAR ItemDescription@1001 : Text[50]);
    VAR
      Item@1002 : Record 27;
    BEGIN
      IF ItemNo <> OldItemNo THEN BEGIN
        ItemDescription := '';
        IF ItemNo <> '' THEN
          IF Item.GET(ItemNo) THEN
            ItemDescription := Item.Description;
        OldItemNo := ItemNo;
      END;
    END;

    PROCEDURE GetConsump@13(VAR ItemJnlLine@1000 : Record 83;VAR ProdOrderDescription@1001 : Text[50]);
    VAR
      ProdOrder@1002 : Record 5405;
    BEGIN
      IF (ItemJnlLine."Prod. Order No." <> OldProdOrderNo) THEN BEGIN
        ProdOrderDescription := '';
        IF ProdOrder.GET(ProdOrder.Status::Released,ItemJnlLine."Prod. Order No.") THEN
          ProdOrderDescription := ProdOrder.Description;
        OldProdOrderNo := ProdOrder."No.";
      END;
    END;

    PROCEDURE GetOutput@11(VAR ItemJnlLine@1000 : Record 83;VAR ProdOrderDescription@1001 : Text[50];VAR OperationDescription@1002 : Text[50]);
    VAR
      ProdOrder@1003 : Record 5405;
      ProdOrderRtngLine@1004 : Record 5409;
    BEGIN
      IF (ItemJnlLine."Operation No." <> OldOperationNo) OR
         (ItemJnlLine."Prod. Order No." <> OldProdOrderNo)
      THEN BEGIN
        OperationDescription := '';
        IF ProdOrderRtngLine.GET(
            ProdOrder.Status::Released,
            ItemJnlLine."Prod. Order No.",
            ItemJnlLine."Routing Reference No.",
            ItemJnlLine."Routing No.",
            ItemJnlLine."Operation No.")
        THEN
          OperationDescription := ProdOrderRtngLine.Description;
        OldOperationNo := ProdOrderRtngLine."Operation No.";
      END;

      IF (ItemJnlLine."Prod. Order No." <> OldProdOrderNo) THEN BEGIN
        ProdOrderDescription := '';
        IF ProdOrder.GET(ProdOrder.Status::Released,ItemJnlLine."Prod. Order No.") THEN
          ProdOrderDescription := ProdOrder.Description;
        OldProdOrderNo := ProdOrder."No.";
      END;
    END;

    PROCEDURE GetCapacity@9(CapType@1002 : 'Work Center,Machine Center';CapNo@1001 : Code[20];VAR CapDescription@1000 : Text[50]);
    VAR
      WorkCenter@1004 : Record 99000754;
      MachineCenter@1003 : Record 99000758;
    BEGIN
      IF (CapNo <> OldCapNo) OR (CapType <> OldCapType) THEN BEGIN
        CapDescription := '';
        IF CapNo <> '' THEN
          CASE CapType OF
            CapType::"Work Center":
              IF WorkCenter.GET(CapNo) THEN
                CapDescription := WorkCenter.Name;
            CapType::"Machine Center":
              IF MachineCenter.GET(CapNo) THEN
                CapDescription := MachineCenter.Name;
          END;
        OldCapNo := CapNo;
        OldCapType := CapType;
      END;
    END;

    BEGIN
    END.
  }
}
