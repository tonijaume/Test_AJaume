OBJECT Codeunit 7009912 G/L Account-Indent corporative
{
  OBJECT-PROPERTIES
  {
    Date=09/04/15;
    Time=18:11:48;
    Modified=Yes;
    Version List=AIC2009;
  }
  PROPERTIES
  {
    OnRun=BEGIN
            IF NOT CONFIRM(
              Text1100000 +
              Text1100001 +
              Text1100002 +
              Text1100003 +
              Text1100004 +
              Text1100005,TRUE)
            THEN
              EXIT;

            Indent;
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU="This function updates the indentation of all the G/L accounts in the chart of accounts. ";ESP="Esta funci¢n actualiza la indentaci¢n de todas las cuentas del plan de cuentas. "';
      Text001@1001 : TextConst 'ENU="All accounts between a Begin-Total and the matching End-Total are indented one level. ";ESP="Se indentan un nivel todas las cuentas que est‚n entre los valores inicio-total y fin-total. "';
      Text002@1002 : TextConst 'ENU=The Totaling for each End-total is also updated.;ESP=Tambi‚n se actualiza el total de cada fin-total.';
      Text003@1003 : TextConst 'ENU=\\Do you want to indent the chart of accounts?;ESP=\\¨Desea indentar el plan de cuentas?';
      Text004@1004 : TextConst 'ENU=Indenting the Chart of Accounts #1##########;ESP=Indentaci¢n del plan de cuentas #1##########';
      Text005@1005 : TextConst 'ENU=End-Total %1 is missing a matching Begin-Total.;ESP=Fin-Tot %1 est  perdiendo un ajuste de inicio-tot.';
      Text1100000@1100000 : TextConst 'ENU=This function checks the consistency of and completes the Chart of Accounts:\\;ESP=Se comprueba para el plan de cuentas que:\\';
      Text1100001@1100001 : TextConst 'ENU=- Checks that a corresponding heading account exists for every posting account.\;ESP=- Cada cuenta auxiliar tiene su correspondiente cuenta de mayor.\';
      Text1100002@1100002 : TextConst 'ENU=- Checks that all accounts comply with the Chart of Account account length requisites.\;ESP=- Cada cuenta tiene la longitud adecuada.\';
      Text1100003@1100003 : TextConst 'ENU=- Assigns values to the following fields: Income/Balance/Capital, Account Type, Indentation, Totaling and Debit/Credit.\;ESP=- Se asignan los valores a los campos siguientes: Comercial/Balance/Patrimonio neto,Tipo cuenta, Indentar, Sumatorio y Debe/Haber.\';
      Text1100004@1100004 : TextConst 'ENU=- Checks that an Adjustment Account exists for every account of the Income Statement and Capital types. \\;ESP=- Las cuentas de ingresos y gastos y patrimonio tienen una cta. regularizaci¢n asignada. \\';
      Text1100005@1100005 : TextConst 'ENU=Do you wish to check the Chart of Accounts?;ESP=¨Confirma que desea comprobar el plan de cuentas?';
      GLAcc@1006 : Record 7009960;
      GLSetup@1100253000 : Record 98;
      Window@1007 : Dialog;
      AccNo@1008 : ARRAY [10] OF Code[20];
      i@1009 : Integer;
      Text1100006@1100006 : TextConst 'ENU=Checking the Chart of Accounts #1########## @2@@@@@@@@@@@@@;ESP=Comprobando el plan de cuentas #1########## @2@@@@@@@@@@@@@';
      Text1100007@1100007 : TextConst 'ENU=The length of a heading account cannot be greater than 8, account %1;ESP=La longitud de una cuenta de mayor no puede ser mayor que 8, cuenta %1';
      Text1100008@1100008 : TextConst 'ENU=" Missing group %1 - Account No. %2";ESP=" Falta el grupo %1 - N§ cuenta %2"';
      Text1100009@1100009 : TextConst 'ENU=..;ESP=..';
      Text1100010@1100010 : TextConst 'ENU=" Missing group %1 - Account No. %2";ESP=" Falta el grupo %1 - N§ cuenta %2"';
      Text1100011@1100011 : TextConst 'ENU=The length of account %1 cannot be different than the next ones;ESP=La longitud de la cuenta %1 no puede ser diferente de las siguientes';
      Text1100012@1100012 : TextConst 'ENU=The Chart of Accounts is correct.;ESP=El plan de cuentas es correcto.';
      FindAcc@1100020 : Record 7009960;
      HidePrintDialog@1100100 : Boolean;

    PROCEDURE Indent@1();
    VAR
      LineCounter@1100001 : Integer;
      NoOfRecords@1100000 : Integer;
    BEGIN
      Window.OPEN(Text1100006);

      GLSetup.FINDFIRST; //+$001

      WITH GLAcc DO BEGIN
        RESET;
        LineCounter := 0;
        NoOfRecords := COUNT;
        IF NoOfRecords <> 0 THEN BEGIN
          IF FIND('-') THEN
            REPEAT
              Window.UPDATE(1,"No.");

              TESTFIELD(Name);

              IF STRLEN("No.") > 5 THEN
                "Account Type" := "Account Type"::Posting
              ELSE
                "Account Type" := "Account Type"::Heading;

              IF "Account Type" = "Account Type"::Heading THEN BEGIN
                //The length of a heading account cannot be greater than 9
                IF STRLEN("No.") > 8 THEN
                  ERROR(Text1100007,"No.");
                //a heading account must exist at the previous higher level
                IF STRLEN("No.") > 1 THEN
                  IF NOT FindAcc.GET( COPYSTR("No.",1,STRLEN("No.")-1)) THEN
                    ERROR(Text1100008,COPYSTR("No.",1,STRLEN("No.")-1),"No.");
                Totaling := "No." + Text1100009 + PADSTR("No.", 20 - (STRLEN("No.") + 2), '9');
                Indentation  := STRLEN("No.") - 1;
              END ELSE BEGIN
                //the corresponding heading account must exist
                IF NOT FindAcc.GET( COPYSTR("No.",1,3)) THEN
                  ERROR(Text1100010,COPYSTR("No.",1,3),"No.");
                //a posting account must be the same length as the next
                FindAcc := GLAcc;
                IF FindAcc.NEXT <> 0 THEN
                  IF (FindAcc."Account Type" = FindAcc."Account Type"::Posting) AND
                     (STRLEN("No.") <> STRLEN(FindAcc."No.")) THEN
                        ERROR(Text1100011,"No.");

                //+$001
                IF GLSetup."Aplica legislacion NCF" THEN
                BEGIN
                  IF COPYSTR("No.",1,1) IN ['4','5','6','7'] THEN //+$002
                     "Income/Balance" := "Income/Balance"::"Income Statement"
                  ELSE IF COPYSTR("No.",1,1) IN ['8','9'] THEN
                    "Income/Balance" := "Income/Balance"::Capital
                  ELSE
                     "Income/Balance" := "Income/Balance"::"Balance Sheet";
                END
                ELSE
                BEGIN
                  IF COPYSTR("No.",1,1) IN ['6','7'] THEN
                     "Income/Balance" := "Income/Balance"::"Income Statement"
                  ELSE IF COPYSTR("No.",1,1) IN ['8','9'] THEN
                    "Income/Balance" := "Income/Balance"::Capital
                  ELSE
                     "Income/Balance" := "Income/Balance"::"Balance Sheet";
                END;
                //+$001

                IF "Income/Balance" IN ["Income/Balance"::"Income Statement","Income/Balance"::Capital] THEN
                  TESTFIELD("Income Stmt. Bal. Acc.")
                ELSE
                  "Income Stmt. Bal. Acc." := '';
                Indentation := 4;
              END;

              MODIFY;
              LineCounter := LineCounter + 1;
              Window.UPDATE(2,ROUND(LineCounter / NoOfRecords * 10000,1));
            UNTIL NEXT = 0;
        END;
      END;

      Window.CLOSE;
      IF NOT HidePrintDialog THEN
        MESSAGE(Text1100012);
    END;

    BEGIN
    {
      ARM 09042015 CNT-OC-15129 Copia de la codeunt del estandar adaptada al plan de cuenta corporativo

      $001 AJS 06032012 Modifico para incluir el grupo 5 en las cuentas comerciales para RD

      $002 AJS 16062014 Agrego el grupo 4 a las cuentas comerciales para RD
    }
    END.
  }
}
