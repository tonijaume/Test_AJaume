OBJECT Codeunit 7009769 Calculo Costes Varios Transfer
{
  OBJECT-PROPERTIES
  {
    Date=10/02/14;
    Time=12:30:14;
    Modified=Yes;
    Version List=AIC2009;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      rParPer@1100253000 : Record 7009701;

    PROCEDURE CalcOtrosAgrupacion@1100253001(prAgrp@1100253008 : Record 7009796;pwTipoCalc@1100253010 : 'Maletero,Guia Traslado,Asistencia';VAR pwAdultos@1100253000 : ARRAY [2] OF Decimal;VAR pwNi¤os@1100253001 : ARRAY [2] OF Decimal) : Decimal;
    VAR
      lrResTrn@1100253007 : Record 7009744;
      lrTarf@1100253005 : Record 7009901;
      lrPrec@1100253004 : Record 7009902;
      lwEnc@1100253003 : Boolean;
      lwPax@1100253002 : Decimal;
      lwImporte@1100253009 : Decimal;
    BEGIN
      // CalcOtrosAgrupacion

      // pwAdultos y pwNi¤os son parametros de salida
      // tienen dos dimensiones: La primera corresponde a los transportados y la segunda a los aplicados/facturados

      CLEAR(pwAdultos);
      CLEAR(pwNi¤os);
      CLEAR(lwImporte);
      CLEAR(lwPax);

      rParPer.FINDFIRST;

      // Buscamos las tarifa
      CLEAR(lrTarf);
      lrTarf.SETRANGE("Tipo Tarifa"   , pwTipoCalc);
      lrTarf.SETFILTER("Fecha Inicial", '<=%1', prAgrp.Fecha);
      lrTarf.SETFILTER("Fecha Final"  , '>=%1', prAgrp.Fecha);
      lwEnc := lrTarf.FINDFIRST;

      // Buscamos el precio en la tarifa
      IF lwEnc THEN BEGIN
        prAgrp.CALCFIELDS("Personas entrada", "Personas salida");
        lwPax := prAgrp."Personas entrada" + prAgrp."Personas salida";
        lrPrec.BuscaPrecio(lrTarf.ID, prAgrp, prAgrp.Zona, '', lrPrec); //+$001
        lwEnc := (lrPrec."ID Precio" <> 0);

        //-$001CLEAR(lrPrec);
        //-$001lrPrec.SETRANGE("ID Tarifa"       , lrTarf.ID);
        //-$001lrPrec.SETFILTER("Rango desde", '<=%1', lwPax);
        //-$001lrPrec.SETFILTER("Rango Hasta", '>=%1', lwPax);
        //-$001lwEnc := lrPrec.FINDFIRST;
        //-$001IF NOT lwEnc THEN BEGIN
        //-$001  lrPrec.SETRANGE("Rango Hasta", 0);
        //-$001  lwEnc := lrPrec.FINDFIRST;
        //-$001END;
      END;

      //-$002CLEAR(lrResTrn);
      //-$002lrResTrn.SETCURRENTKEY(Delegacion,"Agrupacion entrada","Agrupacion salida",Bono);
      //-$002CASE prAgrp."Tipo transfer" OF
      //-$002  prAgrp."Tipo transfer"::Entrada: lrResTrn.SETRANGE("Agrupacion entrada", prAgrp."N§ Agrupacion");
      //-$002  prAgrp."Tipo transfer"::Salida : lrResTrn.SETRANGE("Agrupacion salida" , prAgrp."N§ Agrupacion");
      //-$002END;
      //-$002IF lrResTrn.FINDSET THEN BEGIN
      //-$002  REPEAT
      //-$002    lrAcom.GET(lrResTrn.Delegacion, lrResTrn."N§ Interno", lrResTrn."N§ Acompa¤ante");
      //-$002    CASE lrAcom."Tipo Persona" OF
      //-$002      rParPer."Codigo Adulto" : BEGIN
      //-$002                                  pwAdultos[1] +=1;
      //-$002                                  IF lwEnc THEN
      //-$002                                    pwAdultos[2] +=1;
      //-$002                                END;
      //-$002      rParPer."Codigo Ni¤o" : BEGIN
      //-$002        pwNi¤os[1] +=1;

      //-$002        IF lwEnc THEN BEGIN
      //-$002          IF (lrTarf."Limite Edad Ni¤os" <> 0) THEN BEGIN
      //-$002
      //-$002            IF lrResTrn.Edad > lrTarf."Limite Edad Ni¤os" THEN
      //-$002              pwAdultos[2] +=1
      //-$002            ELSE
      //-$002              pwNi¤os[2] +=1;
      //-$002          END
      //-$002          ELSE
      //-$002            pwNi¤os[2] +=1;
      //-$002        END;
      //-$002      END;
      //-$002    END;
      //-$002  UNTIL lrResTrn.NEXT = 0;
      //-$002END;

      IF lwEnc THEN
        lwImporte := lrPrec."Precio Servicio"; //+$002
        //-$002lwImporte := (pwAdultos[2] * lrPrec."Precio Adultos") + (pwNi¤os[2] * lrPrec."Precio Ni¤os");

      EXIT(lwImporte);
    END;

    PROCEDURE CalcOtrosAgrupacion2@1100253006(prAgrp@1100253002 : Record 7009796;pwTipoCalc@1100253003 : 'Maletero,Guia Traslado,Asistencia') : Decimal;
    VAR
      lwAdultos@1100253001 : ARRAY [2] OF Decimal;
      lwNi¤os@1100253000 : ARRAY [2] OF Decimal;
    BEGIN
      // CalcOtrosAgrupacion2
      // Es igual que la anterior solo que con menos parametros de entrada
      // Solo devuelve el importe sin informar de los pax

      EXIT(CalcOtrosAgrupacion(prAgrp, pwTipoCalc, lwAdultos,lwNi¤os));
    END;

    BEGIN
    {
      $001 AJS 10022014 Utilizo la funcion de BuscarPrecio de la tabla de precios

      $002 AJS 10022014 Dejamos de buscar la informacion en la tabla Acompa¤ante, los precios son por servicio
    }
    END.
  }
}
