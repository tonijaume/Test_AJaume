OBJECT Codeunit 7009765 Calculo Tarifa concepto hotel
{
  OBJECT-PROPERTIES
  {
    Date=21/11/12;
    Time=11:39:45;
    Modified=Yes;
    Version List=AIC2009,CNT;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      rParP@1100253000 : Record 7009701;
      cCalcRes@1100253001 : Codeunit 7009707;
      wConceptoAplicado@1100217000 : Boolean;

    PROCEDURE CalculoReserva@1100253000(prReserva@1100253000 : Record 7009743;pwConcepto@1100253004 : Code[10]);
    VAR
      lrTar@1100253001 : Record 7009898;
      lrPre@1100253003 : Record 7010091;
      lrRes2@1100253002 : Record 7009743;
    BEGIN
      // CalculoReserva

      rParP.FINDFIRST;

      lrRes2.RESET;
      lrRes2.SETCURRENTKEY(Delegacion,
                         "N§ Responsable",
                         "N§ Reserva");
      lrRes2.SETRANGE(Delegacion      , prReserva.Delegacion);
      lrRes2.SETRANGE("N§ Responsable", prReserva."N§ Reserva");
      lrRes2.SETFILTER("Tipo Persona", '<>%1', rParP."Codigo Infant");
      IF lrRes2.FINDSET THEN BEGIN
        REPEAT
          wConceptoAplicado := FALSE;

          CLEAR(lrTar);
          lrTar.SETRANGE(Concepto         , pwConcepto);
          lrTar.SETRANGE(Touroperador     , lrRes2."TourOperador Venta");
          lrTar.SETFILTER("Fecha Inicial" , '<=%1', lrRes2."Fecha entrada");
          lrTar.SETFILTER("Fecha Final"   , '>=%1', lrRes2."Fecha entrada");
          IF lrTar.FINDSET THEN BEGIN
            REPEAT
              lrPre.RESET;
              lrPre.SETRANGE ("ID Tarifa"    , lrTar."ID Tarifa");
              lrPre.SETFILTER("Fecha Inicial", '<=%1', lrRes2."Fecha entrada");
              lrPre.SETFILTER("Fecha Final"  , '>=%1', lrRes2."Fecha entrada");
              IF lrPre.FINDSET THEN
              BEGIN
                REPEAT
                  IF _ComprobarAplicacion(lrRes2, lrPre) AND (NOT wConceptoAplicado) THEN
                  BEGIN
                    _AplicarRepService(lrRes2, lrPre, lrTar);
                    wConceptoAplicado := TRUE;
                  END;
                UNTIL lrPre.NEXT = 0;
              END;
            UNTIL lrTar.NEXT = 0;
          END;
        UNTIL lrRes2.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE _ComprobarAplicacion@1100253001(prReserva@1100253000 : Record 7009743;prPrecio@1100253001 : Record 7010091) : Boolean;
    VAR
      lwOK@1100253002 : Boolean;
      lrReserva2@1100253003 : Record 7009743;
      lrResTrns@1100253004 : Record 7009744;
      lrPrecio@1100253006 : Record 7010091;
      lwEnc@1100253005 : Boolean;
      lwFechaDesde@1100253008 : Date;
      lwFechaHasta@1100253007 : Date;
    BEGIN
      // _ComprobarAplicacion

      lwOK := TRUE;

      lwFechaDesde := CALCDATE('-1A', prReserva."Fecha entrada");
      lwFechaHasta := CALCDATE('-1D', prReserva."Fecha entrada");

      //. Solo debe aplicarse a la primera estancia del bono
      lrReserva2.SETCURRENTKEY(TourOperador, Bono, Nombre);
      lrReserva2.SETRANGE(TourOperador   , prReserva.TourOperador);
      lrReserva2.SETRANGE(Bono           , prReserva.Bono);
      lrReserva2.SETRANGE("Fecha entrada", lwFechaDesde, lwFechaHasta);
      IF NOT lrReserva2.ISEMPTY THEN
        lwOK := FALSE;

      //. Comprobacion por codigo de hotel del Touroperador
      IF lwOK THEN
      BEGIN
        IF (prPrecio."Hotel TO" <> '') THEN
        BEGIN
          IF (prPrecio."Hotel TO" <> prReserva."Hotel TO") THEN
            lwOK := FALSE;
        END
        //. Cuando revisamos el precio generico para hotel TO hay que comprobar que no exista
        //. un precio especifico para el codigo de hotel TO que tiene la reserva
        ELSE
        BEGIN
          IF prReserva."Hotel TO" <> '' THEN
          BEGIN
            lrPrecio.RESET;
            lrPrecio.SETRANGE ("ID Tarifa"    , prPrecio."ID Tarifa");
            lrPrecio.SETFILTER("ID Detalle"   , '<>%1', prPrecio."ID Detalle");
            lrPrecio.SETFILTER("Fecha Inicial", '<=%1', prReserva."Fecha entrada");
            lrPrecio.SETFILTER("Fecha Final"  , '>=%1', prReserva."Fecha entrada");
            lrPrecio.SETRANGE ("Hotel TO"     , prReserva."Hotel TO");
            lwOK := lrPrecio.ISEMPTY;
          END;
        END;
      END;

      //. Comprobacion si el precio solo tiene que aplicarse a las reservas con/sin transfer
      IF (lwOK) AND (prPrecio."Aplicar a Reservas" <> prPrecio."Aplicar a Reservas"::Todas) THEN BEGIN
        CLEAR(lrResTrns);
        lrResTrns.SETCURRENTKEY(Delegacion,"N§ Interno","N§ Periodo");
        lrResTrns.SETRANGE (Delegacion        , prReserva.Delegacion);
        lrResTrns.SETRANGE ("N§ Interno"      , prReserva."N§ Interno");
        lrResTrns.SETFILTER("Compa¤ia entrada", '<>%1', ''); //+$001

        lwEnc := lrResTrns.FINDFIRST;
        IF (lwEnc <> (prPrecio."Aplicar a Reservas" = prPrecio."Aplicar a Reservas"::"Con Transfer")) THEN
          lwOK := FALSE;
      END;

      EXIT(lwOK);
    END;

    LOCAL PROCEDURE _AplicarRepService@1100253011(prReserva@1100253001 : Record 7009743;prPrecio@1100253000 : Record 7010091;prTarifa@1100253005 : Record 7009898);
    VAR
      lwPrecio@1100253002 : Decimal;
      lrLin@1100253003 : Record 7009736;
    BEGIN
      // _AplicarRepService

      CLEAR(lwPrecio);
      CASE prReserva."Tipo Persona" OF
        rParP."Codigo Adulto" : lwPrecio := prPrecio."Precio Adulto";
        rParP."Codigo Ni¤o"   :
        BEGIN
          IF prTarifa."Maximo edad ni¤os" <> 0 THEN
          BEGIN
            IF prReserva.Edad > prTarifa."Maximo edad ni¤os" THEN
              lwPrecio := prPrecio."Precio Adulto"
            ELSE
              lwPrecio := prPrecio."Precio Ni¤o"
          END
          ELSE
            lwPrecio := prPrecio."Precio Ni¤o"
        END;
        rParP."Codigo Infant" : EXIT;
      END;

      IF lwPrecio = 0 THEN
        EXIT;

       CLEAR(lrLin);
       cCalcRes.inserta_linea_calculo(lrLin, USERID, prTarifa.Concepto, prPrecio."ID Tarifa", lwPrecio,
                                      prReserva."N§ Reserva", prReserva."Fecha entrada", prTarifa.Concepto, 1, lwPrecio,
                                      FALSE, TRUE);
       cCalcRes.fijos_linea_calculo(lrLin, lrLin."Coste/Ingreso"::Ingreso, prReserva.Bono, prReserva."N§ Responsable",
                                    prReserva."Hotel reservado", 3, prReserva."Hotel Factura",
                                    prReserva.Delegacion, FALSE);
    END;

    BEGIN
    {
      JPT 23/04/12 CNT-CAR-12004 HOT-18

      $001 AJS 03052012 La comprobacion de que la reserva tiene transfer debe incluir la columna de Compa¤ia entrada.

      $002 AJS 10052012 He incluido una nueva tabla de precios dependiente de la tarifa

      $003 AJS 21112012 Nuevo control para que solo se pueda aplicar un precio por reserva
    }
    END.
  }
}
