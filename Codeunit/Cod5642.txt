OBJECT Codeunit 5642 FA Reclass. Transfer Line
{
  OBJECT-PROPERTIES
  {
    Date=14/02/08;
    Time=12:00:00;
    Version List=NAVW15.00.01;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=is a %1 and %2 is not a %1.;ESP=es un %1 y %2 no es un %1.';
      Text001@1001 : TextConst 'ENU=is not different than %1.;ESP=no es diferente que %1.';
      Text002@1002 : TextConst 'ENU=%1 is disposed.;ESP=%1 se ha vendido/dado de baja.';
      Text003@1003 : TextConst 'ENU="%2 = 0 for %1.";ESP="%2 = 0 para %1."';
      Text004@1004 : TextConst 'ENU=%2 is greater than %3 for %1.;ESP=%2 es mayor que %3 para %1.';
      FAJnlSetup@1005 : Record 5605;
      OldFA@1006 : Record 5600;
      NewFA@1007 : Record 5600;
      FADeprBook@1008 : Record 5612;
      FADeprBook2@1009 : Record 5612;
      GenJnlLine@1010 : Record 81;
      FAJnlLine@1011 : Record 5621;
      DepreciationCalc@1012 : Codeunit 5616;
      FAGetJnl@1013 : Codeunit 5639;
      FAPostingType@1014 : 'Acquisition,Depr,WriteDown,Appr,Custom1,Custom2,Disposal,Maintenance,Salvage Value';
      TransferToGenJnl@1015 : Boolean;
      TemplateName@1016 : Code[10];
      BatchName@1017 : Code[10];
      FANo@1018 : Code[20];
      TransferType@1019 : ARRAY [9] OF Boolean;
      Amounts@1020 : ARRAY [9] OF Decimal;
      FAJnlNextLineNo@1021 : Integer;
      GenJnlNextLineNo@1022 : Integer;
      i@1023 : Integer;
      j@1024 : Integer;
      OldNewFA@1025 : Integer;
      Sign@1026 : Integer;
      GenJnlUsedOnce@1027 : Boolean;
      FAJnlUsedOnce@1028 : Boolean;
      FAJnlDocumentNo@1029 : Code[20];
      GenJnlDocumentNo@1030 : Code[20];
      Text005@1032 : TextConst 'ENU=It was not possible to find a %1 in %2.;ESP=No se ha podido encontrar un %1 en %2.';
      Text006@1031 : TextConst 'ENU=%1 must be %2 or %3 for %4.;ESP=%1 debe ser %2 o %3 para %4.';
      Text007@1033 : TextConst 'ENU=%1 must be %2 for %3.;ESP=%1 debe ser %2 para %3.';
      Text008@1034 : TextConst 'ENU=must not be used together with %1 in %2 %3.;ESP=no se debe utilizar conjuntamente con la %1 en el %2 %3.';
      Text009@1035 : TextConst 'ENU=%1 cannot be calculated for %2.;ESP=%1 no se puede calcular para %2.';

    PROCEDURE FAReclassLine@3(VAR FAReclassJnlLine@1000 : Record 5624;VAR Done@1001 : Boolean);
    BEGIN
      WITH FAReclassJnlLine DO BEGIN
        IF ("FA No." = '') AND ("New FA No." = '') THEN
          EXIT;
        OldFA.GET("FA No.");
        NewFA.GET("New FA No.");
        FADeprBook.GET("FA No.","Depreciation Book Code");
        FADeprBook2.GET("New FA No.","Depreciation Book Code");
        OldFA.TESTFIELD(Blocked,FALSE);
        NewFA.TESTFIELD(Blocked,FALSE);
        OldFA.TESTFIELD(Inactive,FALSE);
        NewFA.TESTFIELD(Inactive,FALSE);

        IF (OldFA."Budgeted Asset" AND NOT NewFA."Budgeted Asset") THEN
          FIELDERROR(
            "FA No.",STRSUBSTNO(Text000,
            OldFA.FIELDCAPTION("Budgeted Asset"),FIELDCAPTION("New FA No.")));

        IF (NewFA."Budgeted Asset" AND NOT OldFA."Budgeted Asset") THEN
          FIELDERROR(
            "New FA No.",STRSUBSTNO(Text000,
            NewFA.FIELDCAPTION("Budgeted Asset"),FIELDCAPTION("FA No.")));

        IF "FA No." = "New FA No." THEN
          FIELDERROR(
            "FA No.",STRSUBSTNO(Text001,FIELDCAPTION("New FA No.")));

        IF FADeprBook."Disposal Date" > 0D THEN
          ERROR(Text002,FAName(OldFA,"Depreciation Book Code"));

        IF FADeprBook2."Disposal Date" > 0D THEN
          ERROR(Text002,FAName(NewFA,"Depreciation Book Code"));

        SetFAReclassType(FAReclassJnlLine);
        CalcAmounts(FAReclassJnlLine);
        CalcDB1DeprAmount(FAReclassJnlLine);

        FOR OldNewFA := 0 TO 1 DO BEGIN
          j := 0;
          WHILE j < 9 DO BEGIN
            j := j + 1;
            IF j = 7 THEN
              j := 9;
            Convert(OldNewFA,j,FAPostingType,Sign,FANo);
            i := FAPostingType + 1;
            TemplateName := '';
            BatchName := '';
            IF TransferType[i] AND (Amounts[i] <> 0) THEN BEGIN
              FAGetJnl.JnlName(
                "Depreciation Book Code",OldFA."Budgeted Asset",FAPostingType,
                TransferToGenJnl,TemplateName,BatchName);
              SetJnlRange;
              IF TransferToGenJnl THEN
                InsertGenJnlLine(FAReclassJnlLine,FANo,Sign * Amounts[i],"Insert Bal. Account")
              ELSE
                InsertFAJnlLine(FAReclassJnlLine,FANo,Sign * Amounts[i]);
              Done := TRUE;
            END;
          END;
        END;
      END;
    END;

    LOCAL PROCEDURE CalcAmounts@1(VAR FAReclassJnlLine@1000 : Record 5624);
    BEGIN
      WITH FADeprBook DO BEGIN
        CALCFIELDS("Acquisition Cost");
        IF TransferType[2] THEN
          CALCFIELDS(Depreciation);
        IF TransferType[3] THEN
          CALCFIELDS("Write-Down");
        IF TransferType[4] THEN
          CALCFIELDS(Appreciation);
        IF TransferType[5] THEN
          CALCFIELDS("Custom 1");
        IF TransferType[6] THEN
          CALCFIELDS("Custom 2");
        IF TransferType[9] THEN
          CALCFIELDS("Salvage Value");
        Amounts[1] := "Acquisition Cost";
        Amounts[2] := Depreciation;
        Amounts[3] := "Write-Down";
        Amounts[4] := Appreciation;
        Amounts[5] := "Custom 1";
        Amounts[6] := "Custom 2";
        Amounts[9] := "Salvage Value";
        IF Amounts[1] = 0 THEN
          ERROR(Text003,
            FAName(OldFA,"Depreciation Book Code"),FIELDCAPTION("Acquisition Cost"));
      END;

      WITH FAReclassJnlLine DO BEGIN
        IF "Reclassify Acq. Cost Amount" <> 0 THEN BEGIN
          IF "Reclassify Acq. Cost Amount" > Amounts[1] THEN
             ERROR(Text004,
               FAName(OldFA,"Depreciation Book Code"),
               FIELDCAPTION("Reclassify Acq. Cost Amount"),
               FADeprBook.FIELDCAPTION("Acquisition Cost"));
           "Reclassify Acq. Cost %" := "Reclassify Acq. Cost Amount" / Amounts[1] * 100;
         END;
         IF "Reclassify Acq. Cost Amount" <> 0 THEN
           Amounts[1] := "Reclassify Acq. Cost Amount"
         ELSE
           Amounts[1] := ROUND(Amounts[1] * "Reclassify Acq. Cost %" / 100);
         FOR i := 2 TO 9 DO
           Amounts[i] := ROUND(Amounts[i] * "Reclassify Acq. Cost %" / 100);
      END;
    END;

    LOCAL PROCEDURE SetFAReclassType@8(VAR FAReclassJnlLine@1000 : Record 5624);
    BEGIN
      WITH FAReclassJnlLine DO BEGIN
        TransferType[1] := "Reclassify Acquisition Cost";
        TransferType[2] := "Reclassify Depreciation";
        TransferType[3] := "Reclassify Write-Down";
        TransferType[4] := "Reclassify Appreciation";
        TransferType[5] := "Reclassify Custom 1";
        TransferType[6] := "Reclassify Custom 2";
        TransferType[9] := "Reclassify Salvage Value";
      END;
    END;

    LOCAL PROCEDURE SetJnlRange@2();
    BEGIN
      IF (FAJnlNextLineNo = 0) AND NOT TransferToGenJnl THEN BEGIN
        FAJnlLine.LOCKTABLE;
        FAGetJnl.SetFAJnlRange(FAJnlLine,TemplateName,BatchName);
        FAJnlNextLineNo := FAJnlLine."Line No.";
      END;
      IF (GenJnlNextLineNo = 0) AND TransferToGenJnl THEN BEGIN
        GenJnlLine.LOCKTABLE;
        FAGetJnl.SetGenJnlRange(GenJnlLine,TemplateName,BatchName);
        GenJnlNextLineNo := GenJnlLine."Line No.";
      END;
    END;

    LOCAL PROCEDURE Convert@5(OldNewFA@1000 : 'OldFA,NewFA';J@1001 : Integer;VAR FAPostingType@1002 : 'Acquisition,Depr,WriteDown,Appr,Custom1,Custom2,Disposal,Maintenance,Salvage Value';VAR Sign@1003 : Integer;VAR FANo@1004 : Code[20]);
    BEGIN
      IF OldNewFA = OldNewFA::OldFA THEN BEGIN
        Sign := -1;
        FANo := OldFA."No.";
      END ELSE BEGIN
        Sign := 1;
        FANo := NewFA."No.";
      END;
      IF OldNewFA = OldNewFA::OldFA THEN
        CASE J OF
          1: FAPostingType := FAPostingType::"Salvage Value";
          2: FAPostingType := FAPostingType::Depr;
          3: FAPostingType := FAPostingType::WriteDown;
          4: FAPostingType := FAPostingType::Custom1;
          5: FAPostingType := FAPostingType::Custom2;
          6: FAPostingType := FAPostingType::Appr;
          9: FAPostingType := FAPostingType::Acquisition;
        END;
      IF OldNewFA = OldNewFA::NewFA THEN
        CASE J OF
          1: FAPostingType := FAPostingType::Acquisition;
          2: FAPostingType := FAPostingType::"Salvage Value";
          3: FAPostingType := FAPostingType::Appr;
          4: FAPostingType := FAPostingType::WriteDown;
          5: FAPostingType := FAPostingType::Custom1;
          6: FAPostingType := FAPostingType::Custom2;
          9: FAPostingType := FAPostingType::Depr;
        END;
    END;

    LOCAL PROCEDURE InsertFAJnlLine@13(VAR FAReclassJnlLine@1000 : Record 5624;FANo@1001 : Code[20];EntryAmount@1002 : Decimal);
    BEGIN
      IF NOT FAJnlUsedOnce THEN BEGIN;
        FAJnlUsedOnce := TRUE;
        FAJnlDocumentNo:=
          FAJnlSetup.GetFAJnlDocumentNo(FAJnlLine,FAReclassJnlLine."FA Posting Date",FALSE);
      END;

      WITH FAJnlLine DO BEGIN
        INIT;
        "Line No." := 0;
        FAJnlSetup.SetFAJnlTrailCodes(FAJnlLine);
        "FA Posting Type" := FAPostingType;
        VALIDATE("FA No.",FANo);
        "FA Posting Date" := FAReclassJnlLine."FA Posting Date";
        "Posting Date" := FAReclassJnlLine."Posting Date";
        IF "Posting Date" = "FA Posting Date" THEN
          "Posting Date" := 0D;

        "Document No." := FAReclassJnlLine."Document No.";
        IF "Document No." = '' THEN
          "Document No." := FAJnlDocumentNo;
        IF "Document No." = '' THEN
          FAReclassJnlLine.TESTFIELD(FAReclassJnlLine."Document No.");

        "Posting No. Series" := FAJnlSetup.GetFANoSeries(FAJnlLine);
        VALIDATE("Depreciation Book Code",FAReclassJnlLine."Depreciation Book Code");
        VALIDATE(Amount,EntryAmount);
        Description := FAReclassJnlLine.Description;
        "FA Reclassification Entry" := TRUE;
        FAJnlNextLineNo := FAJnlNextLineNo + 10000;
        FAJnlLine."Line No." := FAJnlNextLineNo;
        INSERT(TRUE);
      END;
    END;

    LOCAL PROCEDURE InsertGenJnlLine@14(VAR FAReclassJnlLine@1000 : Record 5624;FANo@1001 : Code[20];EntryAmount@1002 : Decimal;BalAccount@1003 : Boolean);
    VAR
      FAInsertGLAcc@1004 : Codeunit 5601;
    BEGIN
      IF NOT GenJnlUsedOnce THEN BEGIN;
        GenJnlUsedOnce := TRUE;
        GenJnlDocumentNo:=
          FAJnlSetup.GetGenJnlDocumentNo(GenJnlLine,FAReclassJnlLine."FA Posting Date",FALSE);
      END;

      WITH GenJnlLine DO BEGIN
        INIT;
        "Line No." := 0;
        FAJnlSetup.SetGenJnlTrailCodes(GenJnlLine);
        "Account Type" := "Account Type"::"Fixed Asset";
        "FA Posting Type" := FAPostingType + 1;
        VALIDATE("Account No.",FANo);
        VALIDATE("Depreciation Book Code",FAReclassJnlLine."Depreciation Book Code");
        "FA Posting Date" := FAReclassJnlLine."FA Posting Date";
        "Posting Date" := FAReclassJnlLine."Posting Date";
        IF "Posting Date" = 0D THEN
          "Posting Date" := FAReclassJnlLine."FA Posting Date";
        IF "Posting Date" = "FA Posting Date" THEN
          "FA Posting Date" := 0D;

        "Document No." := FAReclassJnlLine."Document No.";
        IF "Document No." = '' THEN
          "Document No." := GenJnlDocumentNo;
        IF "Document No." = '' THEN
          FAReclassJnlLine.TESTFIELD(FAReclassJnlLine."Document No.");

        "Posting No. Series" := FAJnlSetup.GetGenNoSeries(GenJnlLine);
        VALIDATE(Amount,EntryAmount);
        Description := FAReclassJnlLine.Description;
        "FA Reclassification Entry" := TRUE;
        GenJnlNextLineNo := GenJnlNextLineNo + 10000;
        "Line No." := GenJnlNextLineNo;
        INSERT(TRUE);
        IF BalAccount THEN BEGIN
          FAInsertGLAcc.GetBalAcc(GenJnlLine);
          IF FIND('+') THEN ;
          GenJnlNextLineNo := "Line No.";
        END;
      END;
    END;

    PROCEDURE FAName@7(VAR FA@1000 : Record 5600;DeprBookCode@1001 : Code[10]) : Text[200];
    BEGIN
      EXIT(DepreciationCalc.FAName(FA,DeprBookCode));
    END;

    LOCAL PROCEDURE CalcDB1DeprAmount@4(FAReclassJnlLine@1000 : Record 5624);
    VAR
      AccountingPeriod@1008 : Record 50;
      DeprBook@1010 : Record 5611;
      CalculateDepr@1001 : Codeunit 5610;
      DeprAmount@1002 : Decimal;
      DeprAmount2@1012 : Decimal;
      Custom1Amount@1003 : Decimal;
      NumberOfDays@1004 : Integer;
      NumberOfDays2@1013 : Integer;
      Custom1NumberOfDays@1005 : Integer;
      DeprUntilDate@1006 : Date;
      EntryAmounts@1007 : ARRAY [4] OF Decimal;
      FixedAmount@1009 : Decimal;
      FixedAmount2@1014 : Decimal;
      DaysInFiscalYear@1011 : Integer;
    BEGIN
      IF NOT FAReclassJnlLine."Calc. DB1 Depr. Amount" THEN
        EXIT;
      DeprBook.GET(FAReclassJnlLine."Depreciation Book Code");
      DeprBook.TESTFIELD("Use Custom 1 Depreciation",FALSE); // better
      IF (FADeprBook."Depreciation Method" <> FADeprBook."Depreciation Method"::"DB1/SL") AND
         (FADeprBook."Depreciation Method" <> FADeprBook."Depreciation Method"::"Declining-Balance 1")
      THEN BEGIN
        FADeprBook."Depreciation Method" := FADeprBook."Depreciation Method"::"Declining-Balance 1";
        FADeprBook2."Depreciation Method" := FADeprBook."Depreciation Method"::"DB1/SL";
        ERROR(Text006,
          FADeprBook.FIELDCAPTION("Depreciation Method"),
          FADeprBook."Depreciation Method",
          FADeprBook2."Depreciation Method",
          FAName(OldFA,FAReclassJnlLine."Depreciation Book Code"));
      END;
      IF (FADeprBook."Depreciation Method" <> FADeprBook2."Depreciation Method") THEN
        ERROR(Text007,
          FADeprBook.FIELDCAPTION("Depreciation Method"),
          FADeprBook."Depreciation Method",
          FAName(NewFA,FAReclassJnlLine."Depreciation Book Code"));

      IF DeprBook."Use Custom 1 Depreciation" THEN
        FAReclassJnlLine.FIELDERROR("Calc. DB1 Depr. Amount",
          STRSUBSTNO(
            Text008,
            DeprBook.FIELDCAPTION("Use Custom 1 Depreciation"),
            DeprBook.TABLECAPTION,
            DeprBook.Code));

      FADeprBook.TESTFIELD("Temp. Ending Date",0D);
      FADeprBook2.TESTFIELD("Temp. Ending Date",0D);

      WITH AccountingPeriod DO BEGIN
        SETRANGE("New Fiscal Year",TRUE);
        SETRANGE("Starting Date",FAReclassJnlLine."FA Posting Date",31129999D);
        IF FIND('-') THEN BEGIN
          IF "Starting Date" <= 01010000D THEN
            ERROR(Text005,FIELDCAPTION("Starting Date"),TABLECAPTION);
          DeprUntilDate := "Starting Date" - 1
        END ELSE
          ERROR(Text005,FIELDCAPTION("Starting Date"),TABLECAPTION);
      END;

      CalculateDepr.Calculate(
        DeprAmount,Custom1Amount,NumberOfDays,Custom1NumberOfDays,
        FAReclassJnlLine."FA No.",FAReclassJnlLine."Depreciation Book Code",
        DeprUntilDate,EntryAmounts,0D,0);
      IF (DeprAmount >= 0) OR (NumberOfDays <= 0) THEN
        ERROR(Text009,
          FADeprBook.FIELDCAPTION("Temp. Fixed Depr. Amount"),
          FAName(OldFA,FAReclassJnlLine."Depreciation Book Code"));
      CalculateDepr.Calculate(
        DeprAmount2,Custom1Amount,NumberOfDays2,Custom1NumberOfDays,
        FAReclassJnlLine."New FA No.",FAReclassJnlLine."Depreciation Book Code",
        DeprUntilDate,EntryAmounts,0D,0);

      DaysInFiscalYear := DeprBook."No. of Days in Fiscal Year";
      IF DaysInFiscalYear = 0 THEN
        DaysInFiscalYear := 360;

      IF DeprBook."Fiscal Year 365 Days" THEN
        DaysInFiscalYear := 365;

      FixedAmount := ROUND(-DeprAmount / NumberOfDays * DaysInFiscalYear);
      IF NumberOfDays2 > 0 THEN
        FixedAmount2 := ROUND(-DeprAmount2 / NumberOfDays2 * DaysInFiscalYear);

      FADeprBook."Temp. Fixed Depr. Amount" :=
        ROUND(FixedAmount * (100 - FAReclassJnlLine."Reclassify Acq. Cost %") / 100);
      FADeprBook."Temp. Ending Date" := DeprUntilDate;
      FADeprBook.MODIFY;

      FADeprBook2."Temp. Fixed Depr. Amount" :=
        ROUND(FixedAmount2 + FixedAmount - FADeprBook."Temp. Fixed Depr. Amount");
      FADeprBook2."Temp. Ending Date" := FADeprBook."Temp. Ending Date";
      FADeprBook2.MODIFY;
    END;

    BEGIN
    END.
  }
}
