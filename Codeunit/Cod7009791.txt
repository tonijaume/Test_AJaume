OBJECT Codeunit 7009791 Exportar Excel PIM
{
  OBJECT-PROPERTIES
  {
    Date=14/02/15;
    Time=[ 9:20:02];
    Modified=Yes;
    Version List=CNT,TEMPORAL;
  }
  PROPERTIES
  {
    OnRun=BEGIN
            IF NOT CONFIRM(Text001) THEN
              EXIT;

            _GenerarFicheroExcursiones;
          END;

  }
  CODE
  {
    VAR
      rCompany@1000000001 : Record 79;
      rParPer@1000000004 : Record 7009701;
      rPar@1000000005 : Record 7009700;
      cExcel@1000000000 : Codeunit 7009755;
      Text001@1000000002 : TextConst 'ENU=Do you confirm you want to create the excel for PIM;ESP=Confirma que desea generar el excel para PIM';
      wFila@1000000003 : Integer;
      Text002@1000000006 : TextConst 'ENU=Navision Tour Code;ESP=Codigo Navision';
      Text003@1000000007 : TextConst 'ENU=Tour Description;ESP=Descripcion Tour';
      Text004@1000000008 : TextConst 'ENU=Turn;ESP=Turno';
      Text005@1000000009 : TextConst 'ENU=Country;ESP=Pais';
      Text006@1000000010 : TextConst 'ENU=Destination;ESP=Destino';
      Text007@1000000011 : TextConst 'ENU=Duration;ESP=Duracion';
      Text008@1000000012 : TextConst 'ENU=Contract type;ESP=Tipo contrato';
      Text009@1000000013 : TextConst 'ENU=Tour start date;ESP=Fecha inicio excursion';
      Text010@1000000014 : TextConst 'ENU=Tour end date;ESP=Fecha final excursion';
      Text011@1000000015 : TextConst 'ENU=Start contract date;ESP=Fecha inicio contrato';
      Text012@1000000016 : TextConst 'ENU=End contract date;ESP=Fecha final contrato';
      Text013@1000000017 : TextConst 'ENU=Adult price;ESP=Precio adulto';
      Text014@1000000018 : TextConst 'ENU=Exempted adult price;ESP=Precio adulto exento';
      Text015@1000000019 : TextConst 'ENU=Adult cancellation expenses;ESP=Gastos cancelacion adulto';
      Text016@1000000022 : TextConst 'ENU=Child price;ESP=Precio ni¤o';
      Text017@1000000021 : TextConst 'ENU=Exempted child price;ESP=Precio ni¤o exento';
      Text018@1000000020 : TextConst 'ENU=Child cancellation expenses;ESP=Gastos cancelacion ni¤o';
      Text019@1000000025 : TextConst 'ENU=Infant price;ESP=Precio Infant';
      Text020@1000000024 : TextConst 'ENU=Exempted infant price;ESP=Precio infant exento';
      Text021@1000000023 : TextConst 'ENU=Infant cancellation expenses;ESP=Gastos cancelacion infant';
      Text022@1000000026 : TextConst 'ENU=Hotel name;ESP=Nombre hotel';
      Text023@1000000027 : TextConst 'ENU=Zone;ESP=Zona';
      Text024@1000000028 : TextConst 'ENU=Pick up time;ESP=Hora recogida';
      wDialog@1000000029 : Dialog;
      wHoraInicio@1000000030 : Time;
      wActual@1000000031 : Integer;

    LOCAL PROCEDURE _GenerarFicheroExcursiones@1000000000();
    VAR
      lrExcursion@1000000000 : Record 7009710;
      lrCalendario@1000000001 : Record 7010254;
      lrTarifa@1000000002 : Record 7010147;
      lrHorario@1000000012 : Record 7010184;
      lrHotel@1000000013 : Record 7009724;
      lrZonaFisica@1000000014 : Record 7009713;
      lwPrecioAdulto@1000000007 : Decimal;
      lwPrecioNi¤o@1000000006 : Decimal;
      lwPrecioInfant@1000000005 : Decimal;
      lwExentoAdulto@1000000011 : Decimal;
      lwExentoNi¤o@1000000010 : Decimal;
      lwExentoInfant@1000000009 : Decimal;
      lwGastosAdulto@1000000008 : Decimal;
      lwGastosNi¤o@1000000004 : Decimal;
      lwGastosInfant@1000000003 : Decimal;
    BEGIN
      // _GenerarFicheroExcursiones

      rCompany.FINDFIRST;

      rParPer.FINDFIRST;

      rPar.FINDFIRST;

      wDialog.OPEN('EXPORTANDO EXCURSIONES #1################## #2###############################################' + '\' +
                   'INICIO #3######  AHORA #4######' + '\' +
                   'EXCURSIONES #5###   AHORA #6###');


      lrExcursion.RESET;
      lrExcursion.SETRANGE("Tipo Producto", lrExcursion."Tipo Producto"::Excursion);
      lrExcursion.SETRANGE(Caducado       , FALSE);
      IF lrExcursion.FINDSET THEN
      BEGIN
        cExcel.Nuevo;
        wFila   := 0;
        wActual := 0;
        wHoraInicio := TIME;
        wDialog.UPDATE(3, wHoraInicio);
        wDialog.UPDATE(5, lrExcursion.COUNT);
        _TitulosFicheroExcursiones;

        REPEAT
          wDialog.UPDATE(1, lrExcursion.Codigo);
          wDialog.UPDATE(2, lrExcursion.Descripcion);
          wDialog.UPDATE(4, TIME);
          wActual += 1;
          wDialog.UPDATE(6, wActual);

          lrCalendario.RESET;
          lrCalendario.SETRANGE (Excursion    , lrExcursion.Codigo);
          lrCalendario.SETFILTER("Fecha final", '>=%1', TODAY);
          IF lrCalendario.FINDSET THEN
          BEGIN
            REPEAT
              lrTarifa.RESET;
              lrTarifa.SETRANGE (Delegacion   , rPar.Delegacion);
              lrTarifa.SETRANGE (Excursion    , lrExcursion.Codigo);
              lrTarifa.SETFILTER("Fecha Final", '>=%1', TODAY);
              IF lrTarifa.FINDFIRST THEN
              BEGIN
                //. Buscamos el precio del adulto dentro de la tarifa
                _GetPreciosExcursion(lrTarifa, lwPrecioAdulto, lwPrecioNi¤o, lwPrecioInfant, lwExentoAdulto, lwExentoNi¤o,
                                     lwExentoInfant, lwGastosAdulto, lwGastosNi¤o, lwGastosInfant);

                lrHorario.RESET;
                lrHorario.SETCURRENTKEY(Excursion, "Hora recogida");
                lrHorario.SETRANGE(Excursion, lrCalendario.Excursion);
                lrHorario.SETRANGE(Turno    , lrCalendario.Turno);
                IF lrHorario.FINDSET THEN
                BEGIN
                  REPEAT
                    IF NOT lrHotel.GET(lrHorario.Hotel) THEN
                      CLEAR(lrHotel);
                    IF NOT lrZonaFisica.GET(lrHotel."Zona Fisica") THEN
                      CLEAR(lrZonaFisica);

                    wFila += 1;
                    cExcel.ValorCelda2(wFila, 1, lrExcursion.Codigo);
                    cExcel.ValorCelda2(wFila, 2, lrExcursion.Descripcion);
                    cExcel.ValorCelda2(wFila, 3, FORMAT(lrCalendario.Turno));
                    cExcel.ValorCelda2(wFila, 4, rCompany."Country/Region Code");
                    cExcel.ValorCelda2(wFila, 5, lrExcursion.Oficina);
                    cExcel.ValorCelda2(wFila, 6, FORMAT(lrExcursion.Duracion));
                    cExcel.ValorCelda2(wFila, 7, 'EXCURSION');
                    cExcel.ValorCelda2(wFila, 8, FORMAT(lrCalendario."Fecha inicio"));
                    cExcel.ValorCelda2(wFila, 9, FORMAT(lrCalendario."Fecha final"));
                    cExcel.ValorCelda2(wFila, 10, FORMAT(lrTarifa."Fecha Inicio"));
                    cExcel.ValorCelda2(wFila, 11, FORMAT(lrTarifa."Fecha Final"));
                    cExcel.ValorCelda2(wFila, 12, FORMAT(lwPrecioAdulto));
                    cExcel.ValorCelda2(wFila, 13, FORMAT(lwExentoAdulto));
                    cExcel.ValorCelda2(wFila, 14, FORMAT(lwGastosAdulto));
                    cExcel.ValorCelda2(wFila, 15, FORMAT(lwPrecioNi¤o));
                    cExcel.ValorCelda2(wFila, 16, FORMAT(lwExentoNi¤o));
                    cExcel.ValorCelda2(wFila, 17, FORMAT(lwGastosNi¤o));
                    cExcel.ValorCelda2(wFila, 18, FORMAT(lwPrecioInfant));
                    cExcel.ValorCelda2(wFila, 19, FORMAT(lwExentoInfant));
                    cExcel.ValorCelda2(wFila, 20, FORMAT(lwGastosInfant));
                    cExcel.ValorCelda2(wFila, 21, lrHorario."Nombre hotel");
                    cExcel.ValorCelda2(wFila, 22, lrZonaFisica.Descripcion);
                    cExcel.ValorCelda2(wFila, 23, FORMAT(lrHorario."Hora recogida"));
                  UNTIL lrHorario.NEXT = 0;
                END;
              END;
            UNTIL lrCalendario.NEXT = 0;
          END
          ELSE
          BEGIN
             lrTarifa.RESET;
             lrTarifa.SETRANGE (Delegacion   , rPar.Delegacion);
             lrTarifa.SETRANGE (Excursion    , lrExcursion.Codigo);
             lrTarifa.SETFILTER("Fecha Final", '>=%1', TODAY);
             IF lrTarifa.FINDFIRST THEN
             BEGIN
               //. Buscamos el precio del adulto dentro de la tarifa
               _GetPreciosExcursion(lrTarifa, lwPrecioAdulto, lwPrecioNi¤o, lwPrecioInfant, lwExentoAdulto, lwExentoNi¤o,
                                    lwExentoInfant, lwGastosAdulto, lwGastosNi¤o, lwGastosInfant);

               lrHorario.RESET;
               lrHorario.SETCURRENTKEY(Excursion, "Hora recogida");
               lrHorario.SETRANGE (Excursion      , lrExcursion.Codigo);
               lrHorario.SETRANGE (Turno          , 0);
               lrHorario.SETFILTER("Hora recogida", '<>%1', 0T);
               IF lrHorario.FINDSET THEN
               BEGIN
                 REPEAT
                   IF NOT lrHotel.GET(lrHorario.Hotel) THEN
                     CLEAR(lrHotel);
                   IF NOT lrZonaFisica.GET(lrHotel."Zona Fisica") THEN
                     CLEAR(lrZonaFisica);

                   wFila += 1;
                   cExcel.ValorCelda2(wFila, 1, lrExcursion.Codigo);
                   cExcel.ValorCelda2(wFila, 2, lrExcursion.Descripcion);
                   cExcel.ValorCelda2(wFila, 3, '');
                   cExcel.ValorCelda2(wFila, 4, rCompany."Country/Region Code");
                   cExcel.ValorCelda2(wFila, 5, lrExcursion.Oficina);
                   cExcel.ValorCelda2(wFila, 6, FORMAT(lrExcursion.Duracion));
                   cExcel.ValorCelda2(wFila, 7, 'EXCURSION');
                   cExcel.ValorCelda2(wFila, 8, 'NO SCHEDULE');
                   cExcel.ValorCelda2(wFila, 9, 'NO SCHEDULE');
                   cExcel.ValorCelda2(wFila, 10, FORMAT(lrTarifa."Fecha Inicio"));
                   cExcel.ValorCelda2(wFila, 11, FORMAT(lrTarifa."Fecha Final"));
                   cExcel.ValorCelda2(wFila, 12, FORMAT(lwPrecioAdulto));
                   cExcel.ValorCelda2(wFila, 13, FORMAT(lwExentoAdulto));
                   cExcel.ValorCelda2(wFila, 14, FORMAT(lwGastosAdulto));
                   cExcel.ValorCelda2(wFila, 15, FORMAT(lwPrecioNi¤o));
                   cExcel.ValorCelda2(wFila, 16, FORMAT(lwExentoNi¤o));
                   cExcel.ValorCelda2(wFila, 17, FORMAT(lwGastosNi¤o));
                   cExcel.ValorCelda2(wFila, 18, FORMAT(lwPrecioInfant));
                   cExcel.ValorCelda2(wFila, 19, FORMAT(lwExentoInfant));
                   cExcel.ValorCelda2(wFila, 20, FORMAT(lwGastosInfant));
                   cExcel.ValorCelda2(wFila, 21, lrHorario."Nombre hotel");
                   cExcel.ValorCelda2(wFila, 22, lrZonaFisica.Descripcion);
                   cExcel.ValorCelda2(wFila, 23, FORMAT(lrHorario."Hora recogida"));
                 UNTIL lrHorario.NEXT = 0;
               END;
             END;
          END;
        UNTIL lrExcursion.NEXT = 0;
        cExcel.Mostrar;
      END;

      wDialog.CLOSE;
    END;

    LOCAL PROCEDURE _GetPreciosExcursion@1000000005(prTarifa@1000000000 : Record 7010147;VAR pwPrecioAdulto@1000000001 : Decimal;VAR pwPrecioNi¤o@1000000002 : Decimal;VAR pwPrecioInfant@1000000003 : Decimal;VAR pwExentoAdulto@1000000005 : Decimal;VAR pwExentoNi¤o@1000000006 : Decimal;VAR pwExentoInfant@1000000007 : Decimal;VAR pwGastosAdulto@1000000008 : Decimal;VAR pwGastosNi¤o@1000000009 : Decimal;VAR pwGastosInfant@1000000010 : Decimal);
    VAR
      lrPrecio@1000000004 : Record 7010148;
    BEGIN
      // _GetPreciosExcursion

      pwPrecioAdulto := 0;
      pwExentoAdulto := 0;
      pwGastosAdulto := 0;
      pwPrecioNi¤o   := 0;
      pwExentoNi¤o   := 0;
      pwGastosNi¤o   := 0;
      pwPrecioInfant := 0;
      pwExentoInfant := 0;
      pwGastosInfant := 0;

      lrPrecio.RESET;
      lrPrecio.SETRANGE(Delegacion   , prTarifa.Delegacion);
      lrPrecio.SETRANGE("ID Tarifa"  , prTarifa."ID Tarifa");
      lrPrecio.SETRANGE("Tipo precio", lrPrecio."Tipo precio"::"Precio Base");
      lrPrecio.SETRANGE(Codigo       , rParPer."Codigo Adulto");
      IF lrPrecio.FINDLAST THEN
      BEGIN
        pwPrecioAdulto := lrPrecio.Precio;
        pwExentoAdulto := lrPrecio."Precio exento";
        pwGastosAdulto := lrPrecio."Importe Gastos Anulacion";
      END;

      lrPrecio.SETRANGE(Codigo       , rParPer."Codigo Ni¤o");
      IF lrPrecio.FINDLAST THEN
      BEGIN
        pwPrecioNi¤o := lrPrecio.Precio;
        pwExentoNi¤o := lrPrecio."Precio exento";
        pwGastosNi¤o := lrPrecio."Importe Gastos Anulacion";
      END;
    END;

    LOCAL PROCEDURE _TitulosFicheroExcursiones@1000000009();
    BEGIN
      // _TitulosFicheroExcursiones

      wFila += 1;

      cExcel.ValorCelda2(wFila, 1 , Text002); //. Codigo
      cExcel.ValorCelda2(wFila, 2 , Text003); //. Descripcion
      cExcel.ValorCelda2(wFila, 3 , Text004); //. Turno
      cExcel.ValorCelda2(wFila, 4 , Text005); //. Pais
      cExcel.ValorCelda2(wFila, 5 , Text006); //. Destino (Oficina)
      cExcel.ValorCelda2(wFila, 6 , Text007); //. Duracion
      cExcel.ValorCelda2(wFila, 7 , Text008); //. Tipo contrato (EXCURSION)
      cExcel.ValorCelda2(wFila, 8 , Text009); //. Fecha inicio excursion
      cExcel.ValorCelda2(wFila, 9 , Text010); //. Fecha final excursion
      cExcel.ValorCelda2(wFila, 10, Text011); //. Fecha inicio tarifa
      cExcel.ValorCelda2(wFila, 11, Text012); //. Fecha final tarifa
      cExcel.ValorCelda2(wFila, 12, Text013); //. Precio adulto
      cExcel.ValorCelda2(wFila, 13, Text014); //. Precio adulto exento
      cExcel.ValorCelda2(wFila, 14, Text015); //. Gastos cancelacion adulto
      cExcel.ValorCelda2(wFila, 15, Text016); //. Precio ni¤o
      cExcel.ValorCelda2(wFila, 16, Text017); //. Precio ni¤o exento
      cExcel.ValorCelda2(wFila, 17, Text018); //. Gastos cancelacion ni¤o
      cExcel.ValorCelda2(wFila, 18, Text019); //. Precio infant
      cExcel.ValorCelda2(wFila, 19, Text020); //. Precio infant exento
      cExcel.ValorCelda2(wFila, 20, Text021); //. Gastos cancelacion infant
      cExcel.ValorCelda2(wFila, 21, Text022); //. Nombre hotel
      cExcel.ValorCelda2(wFila, 22, Text023); //. Nombre zona fisica
      cExcel.ValorCelda2(wFila, 23, Text024); //. Hora recogida
    END;

    BEGIN
    END.
  }
}
