OBJECT Codeunit 7009778 Transfer - Calculo pickup vuel
{
  OBJECT-PROPERTIES
  {
    Date=27/02/13;
    Time=12:21:52;
    Modified=Yes;
    Version List=AIC2009,CNT-OC-12003;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text001@1100217000 : TextConst 'ENU=Arrivals pickup cannot be calculated.;ESP=No se calcula el pickup en llegada.';
      rParAge@1100217001 : Record 7009700;
      Text002@1100217002 : TextConst 'ENU=Pickup times are calculated for the touroperator flights.;ESP=Se calcula el pickup para los vuelos de un touroperador.';
      Text003@1100217003 : TextConst 'ENU=The flight information must be completed before launching the calculation process.;ESP=Debe completar la informacion del vuelo antes de lanzar el proceso de calculo.';
      Text004@1100217004 : TextConst 'ENU=The pickup times for this flight are already calculated, do you want to re-calculate?;ESP=Este vuelo ya tiene calculado el pickup, desea recalcularlo.';

    PROCEDURE CalcularPickupVuelo@1100217000(prVuelo@1100217000 : Record 7009754);
    VAR
      rHotel@1100217001 : Record 7009724;
      lwExiste@1100217002 : Boolean;
    BEGIN
      // CalcularPickupVuelo

      //. Buscamos los hoteles que tienen rellenado el campo "Tiempo hasta aeropuerto"
      //. Comprobar si el pickup existe

      IF NOT _Comprobaciones(prVuelo) THEN
      BEGIN
        rHotel.RESET;
        rHotel.SETRANGE (NoName                   , FALSE);
        rHotel.SETRANGE (Catalogo                 , TRUE);
        rHotel.SETRANGE ("Hotel Ficticio"         , FALSE);
        rHotel.SETRANGE ("Aeropuerto Asociado"    , prVuelo.Origen);
        rHotel.SETFILTER("Tiempo hasta aeropuerto", '<>%1', 0);
        rHotel.SETFILTER(Touroperadores           , '%1', '*' + prVuelo.TourOperador + '*');
        rHotel.FINDSET;
        REPEAT
          _CalcularRecogidaZonaServicio(prVuelo, rHotel);
        UNTIL rHotel.NEXT = 0;
      END;

      //. PresentarResultados

      COMMIT;
      VisualizarPickupVuelo(prVuelo);
    END;

    LOCAL PROCEDURE _Comprobaciones@1100217001(prVuelo@1100217000 : Record 7009754) : Boolean;
    VAR
      lrPickup@1100217001 : Record 7010246;
    BEGIN
      // _Comprobaciones

      //. Los vuelos de llegada no pasan por este proceso
      IF prVuelo."Entrada/Salida" = prVuelo."Entrada/Salida"::Entrada THEN
        ERROR(Text001);

      IF prVuelo.TourOperador = '' THEN
        ERROR(Text002);

      IF (prVuelo.Origen = '') OR (prVuelo."Hora Salida" = 0T) THEN
        ERROR(Text003);

      //. Verificamos que se haya rellenado el parametro general
      rParAge.FINDFIRST;
      rParAge.TESTFIELD("Salidas - Minutos antes aerop");

      //. Comprobar si ya existe prevision de recogida para este vuelo
      lrPickup.RESET;
      lrPickup.SETRANGE(Compa발a             , prVuelo.Compa발a);
      lrPickup.SETRANGE(Vuelo                , prVuelo.Vuelo);
      lrPickup.SETRANGE("Prevision temporada", TRUE);
      IF lrPickup.FINDFIRST THEN
      BEGIN
        IF CONFIRM(Text004) THEN
        BEGIN
          lrPickup.DELETEALL;

          EXIT(FALSE);
        END
        ELSE
          EXIT(TRUE);
      END
      ELSE
        EXIT(FALSE);
    END;

    LOCAL PROCEDURE _CalcularRecogidaZonaServicio@1100217006(prVuelo@1100217000 : Record 7009754;VAR prHotel@1100217001 : Record 7009724);
    VAR
      lrZonaServ@1100217002 : Record 7009791;
      lwZona@1100217003 : Code[10];
      lwHora@1100217004 : Time;
      lwTiempoHasta@1100217005 : Integer;
    BEGIN
      // _CalcularRecogidaZonaServicio

      //. Buscamos dentro de que zona de servicio esta la zona del hotel
      lrZonaServ.RESET;
      lrZonaServ.SETRANGE("Tipo contrato", lrZonaServ."Tipo contrato"::Servicio);
      lrZonaServ.SETRANGE("Zona fisica"  , prHotel."Zona Fisica");
      lrZonaServ.FINDFIRST;
      lwZona := lrZonaServ.Zona;

      //. Recorrer todas las zonas fisicas
      lrZonaServ.RESET;
      lrZonaServ.SETCURRENTKEY("Orden salida zona");
      lrZonaServ.ASCENDING(FALSE);
      lrZonaServ.SETRANGE("Tipo contrato", lrZonaServ."Tipo contrato"::Servicio);
      lrZonaServ.SETRANGE(Zona           , lwZona);
      IF lrZonaServ.FINDFIRST THEN
      BEGIN
        //. Vamos a calcular el pickup del primer hotel
        lwHora := prVuelo."Hora Salida" - (rParAge."Salidas - Minutos antes aerop" * 60000)
                  - (prHotel."Tiempo hasta aeropuerto" * 60000);
        _RellenarPickup(prVuelo, prHotel.Hotel, lwZona, lwHora);
        lwTiempoHasta := prHotel."Tiempo hasta proximo hotel";
        REPEAT
          lwTiempoHasta := _CalcularRecogidaZonaFisica(prVuelo, lrZonaServ."Zona fisica", prHotel, lwHora, lwTiempoHasta,
                                                       lrZonaServ.Zona);
        UNTIL lrZonaServ.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE _CalcularRecogidaZonaFisica@1100217002(prVuelo@1100217001 : Record 7009754;pwZona@1100217003 : Code[10];VAR prHotel@1100217000 : Record 7009724;VAR pwHora@1100217002 : Time;pwTiempo@1100217006 : Integer;pwZonaServicio@1100217007 : Code[10]) : Integer;
    VAR
      lrHotelZona@1100217004 : Record 7009724;
      lwTiempoHasta@1100217005 : Integer;
    BEGIN
      // _CalcularRecogidaZonaFisica

      lwTiempoHasta := pwTiempo;

      //. Recorremos todos los hoteles de la zona fisica, en orden inverso de salida
      lrHotelZona.RESET;
      lrHotelZona.COPY(prHotel);
      lrHotelZona.SETCURRENTKEY("Zona Fisica", "Orden Salida");
      lrHotelZona.ASCENDING(FALSE);
      lrHotelZona.SETRANGE ("Zona Fisica", pwZona);
      lrHotelZona.SETFILTER(Hotel        , '<>%1', prHotel.Hotel);
      lrHotelZona.SETRANGE ("Tiempo hasta aeropuerto");
      IF lrHotelZona.FINDFIRST THEN
      BEGIN
        REPEAT
          pwHora := pwHora - (lwTiempoHasta * 60000);
          _RellenarPickup(prVuelo, lrHotelZona.Hotel, pwZonaServicio, pwHora);
          lwTiempoHasta := lrHotelZona."Tiempo hasta proximo hotel";
        UNTIL lrHotelZona.NEXT = 0;
      END;

      //. Devolvemos cual es el tiempo desde el ultimo hotel hasta el proximo
      EXIT(lwTiempoHasta);
    END;

    LOCAL PROCEDURE _RellenarPickup@1100217008(prVuelo@1100217001 : Record 7009754;pwHotel@1100217002 : Code[20];pwZona@1100217004 : Code[10];pwHora@1100217003 : Time);
    VAR
      lrPickup@1100217000 : Record 7010246;
    BEGIN
      // _RellenarPickup

      lrPickup.RESET;
      lrPickup.Fecha                 := 0D;
      lrPickup.Compa발a              := prVuelo.Compa발a;
      lrPickup.Vuelo                 := prVuelo.Vuelo;
      lrPickup.Hotel                 := pwHotel;
      lrPickup.Zona                  := pwZona;
      lrPickup."Hora recogida"       := pwHora;
      lrPickup.IATA                  := prVuelo.Destino;
      lrPickup."Hora vuelo"          := prVuelo."Hora Salida";
      lrPickup.Touroperador          := prVuelo.TourOperador;
      lrPickup."Prevision temporada" := TRUE;
      lrPickup.INSERT;
    END;

    PROCEDURE VisualizarPickupVuelo@1100217009(prVuelo@1100217000 : Record 7009754);
    VAR
      lfPickup@1100217001 : Form 7009845;
    BEGIN
      // VisualizarPickupVuelo

      CLEAR(lfPickup);
      lfPickup.PasaParametros(0D, 1, prVuelo);
      lfPickup.RUNMODAL;
    END;

    BEGIN
    END.
  }
}
