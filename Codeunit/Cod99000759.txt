OBJECT Codeunit 99000759 Calendar Absence Management
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=NAVW16.00.01;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Remove@1000 : Boolean;

    PROCEDURE UpdateAbsence@1(VAR CalAbsentEntry@1000 : Record 99000760);
    VAR
      CalendarEntry@1001 : Record 99000757;
      CalendarEntry2@1002 : Record 99000757;
      CalendarEntry3@1003 : Record 99000757;
      AbsenceStartingDateTime@1005 : DateTime;
      Finished@1006 : Boolean;
    BEGIN
      WITH CalAbsentEntry DO BEGIN
        AbsenceStartingDateTime := "Starting Date-Time";
        CalendarEntry.SETCURRENTKEY("Capacity Type","No.","Starting Date-Time");
        CalendarEntry.SETRANGE("Capacity Type","Capacity Type");
        CalendarEntry.SETRANGE("No.","No.");
        CalendarEntry.SETFILTER("Starting Date-Time",'<%1',"Ending Date-Time");
        CalendarEntry.SETFILTER("Ending Date-Time",'>%1',"Starting Date-Time");
        IF Remove THEN
          CalendarEntry.SETFILTER("Absence Capacity",'>%1',0);
        IF CalendarEntry.FIND('-') THEN
          REPEAT
            Finished := FALSE;
            CalendarEntry2 := CalendarEntry;
            CalendarEntry3 := CalendarEntry;
            CalendarEntry.DELETE;
            IF CalendarEntry."Starting Date-Time" < "Starting Date-Time" THEN BEGIN
              CalendarEntry2.VALIDATE("Ending Date-Time","Starting Date-Time");
              CalendarEntry2.INSERT;
            END ELSE
              "Starting Date-Time" := CalendarEntry."Starting Date-Time";

            IF Remove THEN
              IF CalendarEntry2."Absence Capacity" < Capacity THEN
                CalendarEntry2."Absence Capacity" := 0
              ELSE
                CalendarEntry2."Absence Capacity" := CalendarEntry2."Absence Capacity" - Capacity
            ELSE
              IF CalendarEntry2.Capacity > Capacity THEN
                CalendarEntry2."Absence Capacity" := Capacity
              ELSE
                CalendarEntry2."Absence Capacity" := CalendarEntry2.Capacity;

            IF CalendarEntry."Ending Date-Time" < "Ending Date-Time" THEN BEGIN
              CalendarEntry2.VALIDATE("Ending Date-Time",CalendarEntry."Ending Date-Time");
              CalendarEntry2.VALIDATE("Starting Date-Time","Starting Date-Time");
              CalendarEntry2.INSERT;
              CalendarEntry := CalendarEntry2;
              "Starting Date-Time" := CalendarEntry."Ending Date-Time";
            END ELSE BEGIN
              CalendarEntry2.VALIDATE("Ending Date-Time","Ending Date-Time");
              CalendarEntry2.VALIDATE("Starting Date-Time","Starting Date-Time");
              CalendarEntry2.INSERT;
              IF CalendarEntry3."Ending Date-Time" > "Ending Date-Time" THEN BEGIN
                CalendarEntry3.VALIDATE("Starting Date-Time","Ending Date-Time");
                CalendarEntry3.INSERT;
                CalendarEntry := CalendarEntry3;
              END;
              Finished := TRUE;
            END;

          UNTIL (CalendarEntry.NEXT = 0) OR Finished;
      END;

      CalAbsentEntry."Starting Date-Time" := AbsenceStartingDateTime;
      CalAbsentEntry.Updated := NOT Remove;

      IF NOT Remove THEN
        CalAbsentEntry.MODIFY;

      GatherEntries(CalendarEntry3);
    END;

    PROCEDURE RemoveAbsence@2(VAR CalAbsentEntry@1000 : Record 99000760);
    BEGIN
      IF NOT CalAbsentEntry.Updated THEN
        EXIT;
      Remove := TRUE;
      UpdateAbsence(CalAbsentEntry);
      Remove := FALSE;
    END;

    PROCEDURE GatherEntries@3(CalendarEntry@1000 : Record 99000757);
    VAR
      CalendarEntry2@1001 : Record 99000757;
    BEGIN
      WITH CalendarEntry DO BEGIN
        CalendarEntry2.SETCURRENTKEY("Capacity Type","No.","Starting Date-Time");
        CalendarEntry2.SETRANGE("Capacity Type","Capacity Type");
        CalendarEntry2.SETRANGE("No.","No.");
        CalendarEntry2.SETRANGE(Date,Date);
        IF NOT CalendarEntry2.FIND('-') THEN
          EXIT;

        CalendarEntry := CalendarEntry2;
        IF CalendarEntry2.NEXT = 0 THEN
          EXIT;

        REPEAT
          IF (Efficiency = CalendarEntry2.Efficiency) AND
             (Capacity = CalendarEntry2.Capacity) AND
             ("Absence Efficiency" = CalendarEntry2."Absence Efficiency") AND
             ("Absence Capacity" = CalendarEntry2."Absence Capacity") AND
             (Date = CalendarEntry2.Date) AND
             ("Work Shift Code" = CalendarEntry2."Work Shift Code") AND
             ("Ending Date-Time" = CalendarEntry2."Starting Date-Time")
          THEN BEGIN
            CalendarEntry2.DELETE;
            DELETE;
            CalendarEntry2.VALIDATE("Starting Date-Time","Starting Date-Time");
            CalendarEntry2.INSERT;
          END;
          CalendarEntry := CalendarEntry2;
        UNTIL CalendarEntry2.NEXT = 0;
      END;
    END;

    BEGIN
    END.
  }
}
