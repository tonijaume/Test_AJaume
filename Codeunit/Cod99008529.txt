OBJECT Codeunit 99008529 XML Document-Accept
{
  OBJECT-PROPERTIES
  {
    Date=13/02/07;
    Time=12:00:00;
    Version List=NAVW15.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
            IF InboundDocNo <= 0 THEN
              EXIT;

            CASE BizTalkDocumentType OF
              BizTalkDocumentType::Sales:
                Sales;
              BizTalkDocumentType::Purchase:
                Purchase;
              BizTalkDocumentType::"Product Catalog":
                ProductCatalog;
            END;
          END;

  }
  CODE
  {
    VAR
      Text000@1011 : TextConst 'ENU=A %1 has been received and transferred to a %2 with inbound document number %3.;ESP=Se ha recibido un/a %1 y se transferido a un/a %2 con n£mero de documento entrada %3.';
      Text001@1012 : TextConst 'ENU=A %1 has been received and automatically transferred to a %2 with number %3.;ESP=Se ha recibido un/a %1 y se transferido autom ticamente a un/a %2 con n£mero de documento entrada %3.';
      Text002@1013 : TextConst 'ENU=A BizTalk product catalog has been received and automatically imported.;ESP=Se ha recibido un cat logo de productos de BizTalk y se ha importado autm ticamente.';
      Text003@1014 : TextConst 'ENU="An attempt made by the program to automatically accept a %1 has failed. ";ESP="Error en el intento hecho por Navision para aceptar un documento %1. "';
      Text004@1015 : TextConst 'ENU=The document is a %2 as inbound document number %3.;ESP=El documento es un/a %2, con n£mero de documento entrada %3.';
      Text005@1016 : TextConst 'ENU=A BizTalk document has been received from %1.;ESP=Se ha recibido un documento BizTalk proviniente de %1.';
      Text006@1017 : TextConst 'ENU=The inbound sales document %1 has no corresponding partner.;ESP=El documento de venta entrada %1 no tiene ning£n socio relacionado.';
      Text007@1018 : TextConst 'ENU=The inbound sales document %1 has an incorrect BizTalk document type.;ESP=El documento de venta entrada %1 tiene un tipo documento BizTalk incorrecto.';
      Text008@1019 : TextConst 'ENU=The inbound purchase document %1 has no corresponding partner.;ESP=El documento de compra entrada %1 no tiene ning£n socio relacionado.';
      Text009@1020 : TextConst 'ENU=The inbound purchase document %1 has an incorrect BizTalk document type.;ESP=El documento de compra entrada %1  tiene un tipo documento BizTalk incorrecto.';
      Text010@1021 : TextConst 'ENU=The inbound product catalog %1 has no corresponding partner.;ESP=El cat logo de productos entrada %1 no tiene ning£n socio relacionado.';
      Text011@1022 : TextConst 'ENU=The inbound product catalog %1 has an incorrect BizTalk document type.;ESP=El cat logo de productos entrada %1 tiene un tipo documento BizTalk incorrecto.';
      Text012@1023 : TextConst 'ENU=BizTalk sales order;ESP=Pedido de venta BizTalk';
      Text013@1024 : TextConst 'ENU=pending BizTalk sales document;ESP=documento de venta BizTalk pendiente';
      Text014@1025 : TextConst 'ENU=sales order;ESP=pedido de venta';
      Text015@1026 : TextConst 'ENU=BizTalk request for sales quote;ESP=Petici¢n de oferta venta BizTalk';
      Text016@1027 : TextConst 'ENU=sales quote;ESP=oferta de venta';
      Text017@1028 : TextConst 'ENU=BizTalk product catalog;ESP=Cat logo de productos BizTalk';
      Text018@1029 : TextConst 'ENU=pending product catalog;ESP=cat logo de productos pendiente';
      Text019@1030 : TextConst 'ENU=BizTalk purchase quote;ESP=Oferta de compra BizTalk';
      Text020@1031 : TextConst 'ENU=pending BizTalk purchase document;ESP=documento de compra BizTalk pendiente';
      Text021@1032 : TextConst 'ENU=purchase quote;ESP=oferta de compra';
      Text022@1033 : TextConst 'ENU=BizTalk purchase order confirmation;ESP=Confirmaci¢n pedido de compra BizTalk';
      Text023@1034 : TextConst 'ENU=purchase order;ESP=pedido de compra';
      Text024@1035 : TextConst 'ENU=BizTalk purchase invoice;ESP=Factura de compra BizTalk';
      Text025@1036 : TextConst 'ENU=purchase invoice;ESP=factura de compra';
      Text026@1037 : TextConst 'ENU=BizTalk purchase receipt;ESP=Albar n de compra BizTalk';
      Text027@1038 : TextConst 'ENU=BizTalk purchase credit memo;ESP=Abono compra BizTalk';
      Text028@1039 : TextConst 'ENU=purchase credit memos;ESP=abonos de compra';
      BizTalkDocumentType@1000 : 'Sales,Purchase,Product Catalog';
      InboundDocNo@1001 : Integer;
      Mail@1002 : Codeunit 99008527;
      DocName@1003 : Text[100];
      BodyText@1004 : Text[250];
      "E-Mail"@1005 : Text[80];

    PROCEDURE Init@14(DocumentType@1000 : 'Sales,Purchase,Product Catalog';DocumentNo@1001 : Integer);
    BEGIN
      BizTalkDocumentType := DocumentType;
      InboundDocNo := DocumentNo;
    END;

    LOCAL PROCEDURE Sales@1();
    VAR
      InboundSalesDocumentHeader@1000 : Record 99008500;
      PartnerSetupHeader@1001 : Record 99008513;
      ReturnCode@1002 : Boolean;
    BEGIN
      InboundSalesDocumentHeader.GET(InboundDocNo);
      PartnerSetupHeader.SETCURRENTKEY("Partner Type","Partner No.");
      PartnerSetupHeader.SETRANGE("Partner Type",PartnerSetupHeader."Partner Type"::Customer);
      PartnerSetupHeader.SETRANGE("Partner No.",InboundSalesDocumentHeader."Sell-to Customer No.");
      IF NOT PartnerSetupHeader.FIND('-') THEN
        ERROR(STRSUBSTNO(Text006,InboundDocNo));

      CASE InboundSalesDocumentHeader."BizTalk Document Type" OF
        InboundSalesDocumentHeader."BizTalk Document Type"::Order:
          ReturnCode := AcceptSO(PartnerSetupHeader);
        InboundSalesDocumentHeader."BizTalk Document Type"::"Request for Quote":
          ReturnCode := AcceptRSQ(PartnerSetupHeader);
        ELSE
          ERROR(STRSUBSTNO(Text007,InboundDocNo));
      END;
    END;

    LOCAL PROCEDURE Purchase@2();
    VAR
      InboundPurchaseDocumentHeader@1000 : Record 99008502;
      PartnerSetupHeader@1001 : Record 99008513;
      ReturnCode@1002 : Boolean;
    BEGIN
      InboundPurchaseDocumentHeader.GET(InboundDocNo);
      PartnerSetupHeader.SETCURRENTKEY("Partner Type","Partner No.");
      PartnerSetupHeader.SETRANGE("Partner Type",PartnerSetupHeader."Partner Type"::Vendor);
      PartnerSetupHeader.SETRANGE("Partner No.",InboundPurchaseDocumentHeader."Buy-from Vendor No.");
      IF NOT PartnerSetupHeader.FIND('-') THEN
        ERROR(STRSUBSTNO(Text008,InboundDocNo));

      CASE InboundPurchaseDocumentHeader."BizTalk Document Type" OF
        InboundPurchaseDocumentHeader."BizTalk Document Type"::Quote:
          ReturnCode := AcceptPQ(PartnerSetupHeader);
        InboundPurchaseDocumentHeader."BizTalk Document Type"::"Order Confirmation":
          ReturnCode := AcceptPOC(PartnerSetupHeader);
        InboundPurchaseDocumentHeader."BizTalk Document Type"::Invoice:
          ReturnCode := AcceptPI(PartnerSetupHeader);
        InboundPurchaseDocumentHeader."BizTalk Document Type"::Receipt:
          ReturnCode := AcceptPR(PartnerSetupHeader);
        InboundPurchaseDocumentHeader."BizTalk Document Type"::"Credit Memo":
          ReturnCode := AcceptPCM(PartnerSetupHeader);
        ELSE
          ERROR(STRSUBSTNO(Text009,InboundDocNo));
      END;
    END;

    LOCAL PROCEDURE ProductCatalog@3();
    VAR
      InbProdCatalogHeader@1000 : Record 99008504;
      PartnerSetupHeader@1001 : Record 99008513;
      ReturnCode@1002 : Boolean;
    BEGIN
      InbProdCatalogHeader.GET(InboundDocNo);
      PartnerSetupHeader.SETCURRENTKEY("Partner Type","Partner No.");
      PartnerSetupHeader.SETRANGE("Partner Type",PartnerSetupHeader."Partner Type"::Vendor);
      PartnerSetupHeader.SETRANGE("Partner No.",InbProdCatalogHeader."Vendor No.");
      IF NOT PartnerSetupHeader.FIND('-') THEN
        ERROR(STRSUBSTNO(Text010,InboundDocNo));

      CASE InbProdCatalogHeader."BizTalk Document Type" OF
        InbProdCatalogHeader."BizTalk Document Type"::"Product Catalog":
          ReturnCode := AcceptIPC(PartnerSetupHeader);
        ELSE
          ERROR(STRSUBSTNO(Text011,InboundDocNo));
      END;
    END;

    LOCAL PROCEDURE AcceptSO@6(PartnerSetupHeader@1000 : Record 99008513) : Boolean;
    VAR
      BizTalkMgmtSetup@1001 : Record 99008512;
      InboundSalesDocumentHeader@1002 : Record 99008500;
      AcceptSalesOrder@1003 : Codeunit 99008502;
    BEGIN
      DocName := Text012;
      InboundSalesDocumentHeader.GET(InboundDocNo);
      IF NOT BizTalkMgmtSetup.GET THEN
        EXIT(FALSE);

      "E-Mail" := '';
      IF (BizTalkMgmtSetup."Notify Sales Order Rcvd.") AND
         (BizTalkMgmtSetup."Sales Order User E-Mail" <> '')
        THEN BEGIN
          "E-Mail" := BizTalkMgmtSetup."Sales Order User E-Mail";
          BodyText := STRSUBSTNO(Text000,DocName,
            Text013,InboundDocNo);
        END;

      IF PartnerSetupHeader."Auto. Sales Order" THEN BEGIN
        InboundSalesDocumentHeader."Auto. Accept Failed" := TRUE;
        InboundSalesDocumentHeader.MODIFY;
        COMMIT;
        IF AcceptSalesOrder.RUN(InboundSalesDocumentHeader) THEN BEGIN
          InboundSalesDocumentHeader."Auto. Accept Failed" := FALSE;
          InboundSalesDocumentHeader.MODIFY;
          IF "E-Mail" <> '' THEN
            BodyText := STRSUBSTNO(Text001,DocName,
              Text014,InboundSalesDocumentHeader."Corresp. Accepted Document No.");
        END ELSE
          IF "E-Mail" <> '' THEN
            BodyText := STRSUBSTNO(Text003 + Text004,DocName,
              Text013,InboundDocNo);
      END;

      IF "E-Mail" <> '' THEN
        Mail.NewMessage("E-Mail",
          STRSUBSTNO(Text005,InboundSalesDocumentHeader."Sell-to Customer Name"),
            BodyText,'');

      EXIT(TRUE);
    END;

    LOCAL PROCEDURE AcceptRSQ@7(PartnerSetupHeader@1000 : Record 99008513) : Boolean;
    VAR
      BizTalkMgmtSetup@1001 : Record 99008512;
      InboundSalesDocumentHeader@1002 : Record 99008500;
      AcceptRequestSalesQuote@1003 : Codeunit 99008500;
    BEGIN
      DocName := Text015;
      InboundSalesDocumentHeader.GET(InboundDocNo);
      IF NOT BizTalkMgmtSetup.GET THEN
        EXIT(FALSE);

      IF (BizTalkMgmtSetup."Notify Rqst for Sales Qte Rcvd") AND
         (BizTalkMgmtSetup."Rqst for Sales Qte User E-Mail" <> '')
      THEN BEGIN
        "E-Mail" := BizTalkMgmtSetup."Rqst for Sales Qte User E-Mail";
        BodyText := STRSUBSTNO(Text000,DocName,
          Text013,InboundDocNo);
      END;

      IF PartnerSetupHeader."Auto. Rqst. for Sales Quote" THEN BEGIN
        InboundSalesDocumentHeader."Auto. Accept Failed" := TRUE;
        InboundSalesDocumentHeader.MODIFY;
        COMMIT;
        IF AcceptRequestSalesQuote.RUN(InboundSalesDocumentHeader) THEN BEGIN
          InboundSalesDocumentHeader."Auto. Accept Failed" := FALSE;
          InboundSalesDocumentHeader.MODIFY;
          IF "E-Mail" <> '' THEN
            BodyText := STRSUBSTNO(Text001,DocName,
              Text016,InboundSalesDocumentHeader."Corresp. Accepted Document No.");
        END ELSE
          IF "E-Mail" <> '' THEN
            BodyText := STRSUBSTNO(Text003 + Text004,DocName,
              Text013,InboundDocNo);
      END;

      IF "E-Mail" <> '' THEN
        Mail.NewMessage("E-Mail",
          STRSUBSTNO(Text005,InboundSalesDocumentHeader."Sell-to Customer Name"),
            BodyText,'');

      EXIT(TRUE);
    END;

    LOCAL PROCEDURE AcceptIPC@20(PartnerSetupHeader@1000 : Record 99008513) : Boolean;
    VAR
      BizTalkMgmtSetup@1001 : Record 99008512;
      InbProdCatalogHeader@1002 : Record 99008504;
      AcceptProductCatalog@1003 : Codeunit 99008507;
    BEGIN
      DocName := Text017;
      InbProdCatalogHeader.GET(InboundDocNo);
      IF NOT BizTalkMgmtSetup.GET THEN
        EXIT(FALSE);

      IF (BizTalkMgmtSetup."Notify Product Catalog Rcvd.") AND
         (BizTalkMgmtSetup."Product Catalog User E-Mail" <> '')
      THEN BEGIN
        "E-Mail" := BizTalkMgmtSetup."Product Catalog User E-Mail";
        BodyText := STRSUBSTNO(Text000,DocName,
          Text018,InboundDocNo);
      END;

      IF PartnerSetupHeader."Auto. Product Catalog" THEN BEGIN
        InbProdCatalogHeader."Auto. Accept Failed" := TRUE;
        InbProdCatalogHeader.MODIFY;
        COMMIT;
        CLEAR(AcceptProductCatalog);
        AcceptProductCatalog.SetHideDialogBox(TRUE);
        IF AcceptProductCatalog.RUN(InbProdCatalogHeader) THEN BEGIN
          InbProdCatalogHeader."Auto. Accept Failed" := FALSE;
          InbProdCatalogHeader.MODIFY;
          IF "E-Mail" <> '' THEN
            BodyText := Text002;
        END ELSE
          IF "E-Mail" <> '' THEN
            BodyText := STRSUBSTNO(Text003 + Text004,DocName,
              Text018,InboundDocNo);
      END;

      IF "E-Mail" <> '' THEN
        Mail.NewMessage("E-Mail",
          STRSUBSTNO(Text005,InbProdCatalogHeader."Vendor Name"),
            BodyText,'');

      EXIT(TRUE);
    END;

    LOCAL PROCEDURE AcceptPQ@19(PartnerSetupHeader@1000 : Record 99008513) : Boolean;
    VAR
      BizTalkMgmtSetup@1001 : Record 99008512;
      InboundPurchaseDocumentHeader@1002 : Record 99008502;
      AcceptPurchaseQuote@1003 : Codeunit 99008501;
    BEGIN
      DocName := Text019;
      InboundPurchaseDocumentHeader.GET(InboundDocNo);
      IF NOT BizTalkMgmtSetup.GET THEN
        EXIT(FALSE);

      IF (BizTalkMgmtSetup."Notify Purchase Quote Rcvd.") AND
         (BizTalkMgmtSetup."Purchase Quote User E-Mail" <> '')
      THEN BEGIN
        "E-Mail" := BizTalkMgmtSetup."Purchase Quote User E-Mail";
        BodyText := STRSUBSTNO(Text000,DocName,
          Text020,InboundDocNo);
      END;

      IF PartnerSetupHeader."Auto. Purchase Quote" THEN BEGIN
        InboundPurchaseDocumentHeader."Auto. Accept Failed" := TRUE;
        InboundPurchaseDocumentHeader.MODIFY;
        COMMIT;
        IF AcceptPurchaseQuote.RUN(InboundPurchaseDocumentHeader) THEN BEGIN
          InboundPurchaseDocumentHeader."Auto. Accept Failed" := FALSE;
          InboundPurchaseDocumentHeader.MODIFY;
          IF "E-Mail" <> '' THEN
            BodyText := STRSUBSTNO(Text001,DocName,
              Text021,InboundPurchaseDocumentHeader."Corresp. Accepted Document No.");
          END ELSE
            IF "E-Mail" <> '' THEN
              BodyText := STRSUBSTNO(Text003 + Text004,DocName,
                Text020,InboundDocNo);
      END;

      IF "E-Mail" <> '' THEN
        Mail.NewMessage("E-Mail",
          STRSUBSTNO(Text005,InboundPurchaseDocumentHeader."Buy-from Vendor Name"),
            BodyText,'');

      EXIT(TRUE);
    END;

    LOCAL PROCEDURE AcceptPOC@18(PartnerSetupHeader@1000 : Record 99008513) : Boolean;
    VAR
      BizTalkMgmtSetup@1001 : Record 99008512;
      InboundPurchaseDocumentHeader@1002 : Record 99008502;
      AcceptPurchaseOrderConf@1003 : Codeunit 99008503;
    BEGIN
      DocName := Text022;
      InboundPurchaseDocumentHeader.GET(InboundDocNo);
      IF NOT BizTalkMgmtSetup.GET THEN
        EXIT(FALSE);

      IF (BizTalkMgmtSetup."Notify Purch Ord Cnfmn. Rcvd.") AND
         (BizTalkMgmtSetup."Purch Ord Cnfmn. User E-Mail" <> '')
      THEN BEGIN
        "E-Mail" := BizTalkMgmtSetup."Purch Ord Cnfmn. User E-Mail";
        BodyText := STRSUBSTNO(Text000,DocName,
          Text020,InboundDocNo);
      END;

      IF PartnerSetupHeader."Auto. Purch. Order Cnfmn." THEN BEGIN
        InboundPurchaseDocumentHeader."Auto. Accept Failed" := TRUE;
        InboundPurchaseDocumentHeader.MODIFY;
        COMMIT;
        IF AcceptPurchaseOrderConf.RUN(InboundPurchaseDocumentHeader) THEN BEGIN
          InboundPurchaseDocumentHeader."Auto. Accept Failed" := FALSE;
          InboundPurchaseDocumentHeader.MODIFY;
          IF "E-Mail" <> '' THEN
            BodyText := STRSUBSTNO(Text001,DocName,
              Text023,InboundPurchaseDocumentHeader."Corresp. Accepted Document No.");
        END ELSE
          IF "E-Mail" <> '' THEN
            BodyText := STRSUBSTNO(Text003 + Text004,DocName,
              Text020,InboundDocNo);
      END;

      IF "E-Mail" <> '' THEN
        Mail.NewMessage("E-Mail",
          STRSUBSTNO(Text005,InboundPurchaseDocumentHeader."Buy-from Vendor Name"),
            BodyText,'');

      EXIT(TRUE);
    END;

    LOCAL PROCEDURE AcceptPI@17(PartnerSetupHeader@1000 : Record 99008513) : Boolean;
    VAR
      BizTalkMgmtSetup@1001 : Record 99008512;
      InboundPurchaseDocumentHeader@1002 : Record 99008502;
      AcceptPurchaseInvoice@1003 : Codeunit 99008504;
    BEGIN
      DocName := Text024;
      InboundPurchaseDocumentHeader.GET(InboundDocNo);
      IF NOT BizTalkMgmtSetup.GET THEN
        EXIT(FALSE);

      IF (BizTalkMgmtSetup."Notify Purch Invoice Rcvd.") AND
         (BizTalkMgmtSetup."Purchase Invoice User E-Mail" <> '')
      THEN BEGIN
        "E-Mail" := BizTalkMgmtSetup."Purchase Invoice User E-Mail";
        BodyText := STRSUBSTNO(Text000,DocName,
          Text020,InboundDocNo);
      END;

      IF PartnerSetupHeader."Auto. Purchase Invoice" THEN BEGIN
        InboundPurchaseDocumentHeader."Auto. Accept Failed" := TRUE;
        InboundPurchaseDocumentHeader.MODIFY;
        COMMIT;
        IF AcceptPurchaseInvoice.RUN(InboundPurchaseDocumentHeader) THEN BEGIN
          InboundPurchaseDocumentHeader."Auto. Accept Failed" := FALSE;
          InboundPurchaseDocumentHeader.MODIFY;
          IF "E-Mail" <> '' THEN
            BodyText := STRSUBSTNO(Text001,DocName,
              Text025,InboundPurchaseDocumentHeader."Corresp. Accepted Document No.");
        END ELSE
          IF "E-Mail" <> '' THEN
            BodyText := STRSUBSTNO(Text003 + Text004,DocName,
              Text020,InboundDocNo);
      END;

      IF "E-Mail" <> '' THEN
        Mail.NewMessage("E-Mail",
          STRSUBSTNO(Text005,InboundPurchaseDocumentHeader."Buy-from Vendor Name"),
            BodyText,'');

      EXIT(TRUE);
    END;

    LOCAL PROCEDURE AcceptPR@16(PartnerSetupHeader@1000 : Record 99008513) : Boolean;
    VAR
      BizTalkMgmtSetup@1001 : Record 99008512;
      InboundPurchaseDocumentHeader@1002 : Record 99008502;
      AcceptPurchaseReceipt@1003 : Codeunit 99008505;
    BEGIN
      DocName := Text026;
      InboundPurchaseDocumentHeader.GET(InboundDocNo);
      IF NOT BizTalkMgmtSetup.GET THEN
        EXIT(FALSE);

      IF (BizTalkMgmtSetup."Notify Purchase Receipt Rcvd.") AND
         (BizTalkMgmtSetup."Purchase Receipt User E-Mail" <> '')
      THEN BEGIN
        "E-Mail" := BizTalkMgmtSetup."Purchase Receipt User E-Mail";
        BodyText := STRSUBSTNO(Text000,DocName,
          Text020,InboundDocNo);
      END;

      IF PartnerSetupHeader."Auto Purchase Receipt" THEN BEGIN
        InboundPurchaseDocumentHeader."Auto. Accept Failed" := TRUE;
        InboundPurchaseDocumentHeader.MODIFY;
        COMMIT;
        IF AcceptPurchaseReceipt.RUN(InboundPurchaseDocumentHeader) THEN BEGIN
          InboundPurchaseDocumentHeader."Auto. Accept Failed" := FALSE;
          InboundPurchaseDocumentHeader.MODIFY;
          IF "E-Mail" <> '' THEN
            BodyText := STRSUBSTNO(Text001,DocName,
              Text023,InboundPurchaseDocumentHeader."Corresp. Accepted Document No.");
        END ELSE
          IF "E-Mail" <> '' THEN
            BodyText := STRSUBSTNO(Text003 + Text004,DocName,
              Text020,InboundDocNo);
      END;

      IF "E-Mail" <> '' THEN
        Mail.NewMessage("E-Mail",
          STRSUBSTNO(Text005,InboundPurchaseDocumentHeader."Buy-from Vendor Name"),
            BodyText,'');

      EXIT(TRUE);
    END;

    LOCAL PROCEDURE AcceptPCM@15(PartnerSetupHeader@1000 : Record 99008513) : Boolean;
    VAR
      BizTalkMgmtSetup@1001 : Record 99008512;
      InboundPurchaseDocumentHeader@1002 : Record 99008502;
      AcceptPurchaseCrMemo@1003 : Codeunit 99008506;
    BEGIN
      DocName := Text027;
      InboundPurchaseDocumentHeader.GET(InboundDocNo);
      IF NOT BizTalkMgmtSetup.GET THEN
        EXIT(FALSE);

      IF (BizTalkMgmtSetup."Notify Purchase Cr. Memo Rcvd.") AND
         (BizTalkMgmtSetup."Purchase Cr. Memo User E-Mail" <> '')
      THEN BEGIN
        "E-Mail" := BizTalkMgmtSetup."Purchase Cr. Memo User E-Mail";
        BodyText := STRSUBSTNO(Text000,DocName,
          Text020,InboundDocNo);
      END;

      IF PartnerSetupHeader."Auto. Purchase Credit Memo" THEN BEGIN
        InboundPurchaseDocumentHeader."Auto. Accept Failed" := TRUE;
        InboundPurchaseDocumentHeader.MODIFY;
        COMMIT;
        IF AcceptPurchaseCrMemo.RUN(InboundPurchaseDocumentHeader) THEN BEGIN
          InboundPurchaseDocumentHeader."Auto. Accept Failed" := FALSE;
          InboundPurchaseDocumentHeader.MODIFY;
          IF "E-Mail" <> '' THEN
            BodyText := STRSUBSTNO(Text001,DocName,
              Text028,InboundPurchaseDocumentHeader."Corresp. Accepted Document No.");
        END ELSE
          IF "E-Mail" <> '' THEN
            BodyText := STRSUBSTNO(Text003 + Text004,DocName,
              Text020,InboundDocNo);
      END;

      IF "E-Mail" <> '' THEN
        Mail.NewMessage("E-Mail",
          STRSUBSTNO(Text005,InboundPurchaseDocumentHeader."Buy-from Vendor Name"),
            BodyText,'');

      EXIT(TRUE);
    END;

    BEGIN
    END.
  }
}
