OBJECT Codeunit 5309 Outlook Synch. Process Links
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=NAVW16.00.01;
  }
  PROPERTIES
  {
    TableNo=472;
    OnRun=BEGIN
            CLEAR(OResponseXMLTextReader);
            CREATE(OResponseXMLTextReader);

            JQEntry := Rec;
            IF NOT OSynchNAVMgt.GetXMLFromJQEntry(OResponseXMLTextReader,JQEntry) THEN
              ERROR(Text001);

            ProcessOutlookEntryIDResponse("User ID");

            Rec := JQEntry;
          END;

  }
  CODE
  {
    VAR
      OSynchEntity@1021 : Record 5300;
      OSynchLink@1019 : Record 5302;
      OSynchUserSetup@1016 : Record 5305;
      JQEntry@1015 : Record 472;
      OSynchNAVMgt@1004 : Codeunit 5301;
      OSynchTypeConversion@1010 : Codeunit 5302;
      OSynchProcessLine@1011 : Codeunit 5305;
      ErrorXMLWriter@1007 : Automation "{CAF2CEDD-2636-48EC-AE94-3A2E78BDCAA4} 1.0:{25FBE079-487E-44F2-8352-23B354C2AD0E}:Unknown Automation Server.Unknown Class";
      HashCalculator@1006 : Automation "{CAF2CEDD-2636-48EC-AE94-3A2E78BDCAA4} 1.0:{44380697-014C-4AFE-8F9E-F81725E51A2F}:Unknown Automation Server.Unknown Class";
      OResponseXMLTextReader@1005 : Automation "{CAF2CEDD-2636-48EC-AE94-3A2E78BDCAA4} 1.0:{8FC8A753-24F6-495F-98BB-E975695CA4C9}:Unknown Automation Server.Unknown Class";
      StartDateTime@1003 : DateTime;
      RootIterator@1001 : Text[38];
      Text001@1002 : TextConst 'ENU=The synchronization failed because the synchronization data from Microsoft Outlook cannot be processed. Try again later and if the problem persists contact your system administrator.;ESP=La sincronizaci¢n no se pudo realizar porque los datos de sincronizaci¢n de Microsoft Outlook no se pudieron procesar. Vuelva a intentarlo m s tarde y, si el problema persiste, p¢ngase en contacto con el administrador del sistema.';
      Text002@1008 : TextConst 'ENU=The synchronization for an item in the %1 entity completed with an error. Please try to synchronize this item again later. If the problem persists contact your system administrator.;ESP=La sincronizaci¢n para un elemento del objeto %1 se complet¢ con un error. Intente sincronizar este elemento de nuevo m s tarde. Si el problema persiste, p¢ngase en contacto con el administrador del sistema.';
      Text003@1025 : TextConst 'ENU=An Outlook item in the %1 entity was not synchronized because this entity does not exist. Try again later and if the problem persists contact your system administrator.;ESP=Uno de los elementos de Outlook del objeto %1 no se sincroniz¢ porque este objeto no existe. Vuelva a intentarlo m s tarde y, si el problema persiste, p¢ngase en contacto con el administrador del sistema.';
      Text004@1024 : TextConst 'ENU=An Outlook item in the %1 entity was not synchronized because this item could not be found in the synchronization folders. Try again later and if the problem persists contact your system administrator.;ESP=Uno de los elementos de Outlook del objeto %1 no se sincroniz¢ porque este elemento no se encontr¢ dentro de las carpetas de sincronizaci¢n. Vuelva a intentarlo m s tarde y, si el problema persiste, p¢ngase en contacto con el administrador del sistema.';
      Text005@1023 : TextConst 'ENU=An Outlook item in the %1 entity was not synchronized because the synchronization data from Microsoft Outlook cannot be processed. Try again later and if the problem persists contact your system administrator.;ESP=Uno de los elementos de Outlook del objeto %1 no se sincroniz¢ porque los datos de sincronizaci¢n de Microsoft Outlook no se pudieron procesar. Vuelva a intentarlo m s tarde y, si el problema persiste, p¢ngase en contacto con el administrador del sistema.';
      Text006@1022 : TextConst 'ENU=The synchronization failed because the synchronization data could not be sent from Microsoft Dynamics NAV. Try again later and if the problem persists contact your system administrator.;ESP=La sincronizaci¢n no se pudo realizar porque los datos de sincronizaci¢n no se pudieron enviar desde Microsoft Dynamics NAV. Vuelva a intentarlo m s tarde y, si el problema persiste, p¢ngase en contacto con el administrador del sistema.';

    PROCEDURE ProcessOutlookEntryIDResponse@28(UserID@1000 : Code[20]);
    VAR
      EntryIDContainer@1001 : Automation "{CAF2CEDD-2636-48EC-AE94-3A2E78BDCAA4} 1.0:{2884F16D-75BF-4E3D-A1B7-8FFF455F37ED}:Unknown Automation Server.Unknown Class";
      NewEntryIDContainer@1009 : Automation "{CAF2CEDD-2636-48EC-AE94-3A2E78BDCAA4} 1.0:{2884F16D-75BF-4E3D-A1B7-8FFF455F37ED}:Unknown Automation Server.Unknown Class";
      EntityRecRef@1013 : RecordRef;
      EntityRecID@1006 : RecordID;
      SynchEntityCode@1008 : Code[10];
      TagName@1003 : Text[1024];
      EntityIterator@1011 : Text[38];
      OEntryIDHash@1007 : Text[32];
      NewOEntryIDHash@1002 : Text[32];
      RecordIDTextValue@1012 : Text[250];
      StartSynchTimeText@1004 : Text[30];
    BEGIN
      OSynchUserSetup.RESET;
      OSynchUserSetup.SETRANGE("User ID",UserID);
      IF NOT OSynchUserSetup.FIND('-') THEN
        EXIT;

      TagName := OResponseXMLTextReader.RootLocalName;
      IF TagName <> 'PostUpdate' THEN
        ERROR(Text001);

      OResponseXMLTextReader.SelectElements(RootIterator,'PostUpdate');
      StartSynchTimeText := OResponseXMLTextReader.GetCurrentNodeAttribute(RootIterator,'StartSynchTime');
      IF NOT OSynchTypeConversion.TextToDateTime(StartSynchTimeText,StartDateTime) THEN
        ERROR(Text001);

      IF OResponseXMLTextReader.SelectElements(RootIterator,'*') < 1 THEN
        EXIT;

      TagName := OResponseXMLTextReader.GetName(RootIterator);
      IF TagName <> 'BriefOutlookItem' THEN
        ERROR(Text001);

      IF ISCLEAR(ErrorXMLWriter) THEN BEGIN
        CREATE(ErrorXMLWriter);
        ErrorXMLWriter.WriteStartDocument;
        ErrorXMLWriter.WriteStartElement('PostUpdate');
      END;

      IF OResponseXMLTextReader.SelectElements(RootIterator,'child::BriefOutlookItem') > 0 THEN BEGIN
        CLEAR(EntryIDContainer);
        CLEAR(NewEntryIDContainer);
        CREATE(EntryIDContainer);
        CREATE(NewEntryIDContainer);

        REPEAT
          OEntryIDHash := '';
          NewOEntryIDHash := '';
          CLEAR(EntityRecID);

          SynchEntityCode := COPYSTR(
            OResponseXMLTextReader.GetCurrentNodeAttribute(RootIterator,'SynchEntityCode'),1,MAXSTRLEN(SynchEntityCode));
          IF OSynchUserSetup.GET(UserID,SynchEntityCode) THEN BEGIN
            IF OSynchEntity.GET(SynchEntityCode) THEN BEGIN
              RecordIDTextValue := OResponseXMLTextReader.GetCurrentNodeAttribute(RootIterator,'RecordID');
              OResponseXMLTextReader.GetAllCurrentChildNodes(RootIterator,EntityIterator);
              TagName := OResponseXMLTextReader.GetName(EntityIterator);
              IF TagName <> 'EntryID' THEN
                ERROR(Text001);
              OEntryIDHash := GetEntryIDHash(EntryIDContainer,EntityIterator);
              IF OEntryIDHash <> '' THEN BEGIN
                OResponseXMLTextReader.MoveNext(EntityIterator);
                TagName := OResponseXMLTextReader.GetName(EntityIterator);
                NewOEntryIDHash := GetEntryIDHash(NewEntryIDContainer,EntityIterator);
                OSynchLink.RESET;
                OSynchLink.SETRANGE("User ID",UserID);
                OSynchLink.SETRANGE("Outlook Entry ID Hash",OEntryIDHash);
                IF OSynchLink.FIND('-') THEN BEGIN
                  EVALUATE(EntityRecID,FORMAT(OSynchLink."Record ID"));
                  EntityRecRef.OPEN(OSynchEntity."Table No.");
                  IF TagName <> 'NewEntryID' THEN
                    WriteErrorLog(
                      EntityRecID,
                      SynchEntityCode,
                      Text001,
                      StartDateTime,
                      EntryIDContainer);
                  IF NewOEntryIDHash <> '' THEN
                    OSynchLink.PutEntryID(NewEntryIDContainer,NewOEntryIDHash)
                  ELSE
                    WriteErrorLog(
                      EntityRecID,
                      SynchEntityCode,
                      STRSUBSTNO(Text004,SynchEntityCode),
                      StartDateTime,
                      NewEntryIDContainer);
                  EntityRecRef.CLOSE;
                END ELSE BEGIN
                  IF RecordIDTextValue = '' THEN
                    WriteErrorLog(
                      EntityRecID,
                      SynchEntityCode,
                      STRSUBSTNO(Text005,SynchEntityCode),
                      StartDateTime,
                      EntryIDContainer)
                  ELSE BEGIN
                    EVALUATE(EntityRecID,RecordIDTextValue);
                    EntityRecRef.OPEN(EntityRecID.TABLENO);
                    IF EntityRecRef.GET(EntityRecID) THEN BEGIN
                      IF NewOEntryIDHash <> '' THEN
                        OSynchLink.InsertOSynchLink(OSynchUserSetup."User ID",NewEntryIDContainer,EntityRecRef,NewOEntryIDHash)
                      ELSE
                        OSynchLink.InsertOSynchLink(OSynchUserSetup."User ID",EntryIDContainer,EntityRecRef,OEntryIDHash);
                      OSynchProcessLine.UpdateSynchronizationDate(OSynchUserSetup."User ID",EntityRecID);
                    END ELSE
                      WriteErrorLog(
                        EntityRecID,
                        SynchEntityCode,
                        STRSUBSTNO(Text002,SynchEntityCode),
                        StartDateTime,
                        EntryIDContainer);
                    EntityRecRef.CLOSE;
                  END;
                END;
              END ELSE
                WriteErrorLog(
                  EntityRecID,
                  SynchEntityCode,
                  STRSUBSTNO(Text004,SynchEntityCode),
                  StartDateTime,
                  EntryIDContainer);
              OResponseXMLTextReader.RemoveIterator(EntityIterator);
            END ELSE
              WriteErrorLog(
                EntityRecID,
                SynchEntityCode,
                STRSUBSTNO(Text003,SynchEntityCode),
                StartDateTime,
                EntryIDContainer);
          END;
        UNTIL NOT OResponseXMLTextReader.MoveNext(RootIterator);
      END;

      OResponseXMLTextReader.RemoveIterator(RootIterator);
      CLEAR(OResponseXMLTextReader);

      ErrorXMLWriter.WriteEndElement;
      ErrorXMLWriter.WriteEndDocument;

      IF NOT OSynchNAVMgt.PutXMLToJQResponse(JQEntry,ErrorXMLWriter) THEN BEGIN
        CLEAR(ErrorXMLWriter);
        ERROR(Text006);
      END;

      CLEAR(ErrorXMLWriter);
    END;

    PROCEDURE GetEntryIDHash@63(VAR Container@1000 : Automation "{CAF2CEDD-2636-48EC-AE94-3A2E78BDCAA4} 1.0:{2884F16D-75BF-4E3D-A1B7-8FFF455F37ED}:Unknown Automation Server.Unknown Class";EntityIterator@1002 : Text[38]) EntryIDHash : Text[32];
    BEGIN
      IF (OResponseXMLTextReader.GetName(EntityIterator) = 'EntryID') OR
         (OResponseXMLTextReader.GetName(EntityIterator) = 'NewEntryID')
      THEN BEGIN
        Container := OResponseXMLTextReader.GetLongText(EntityIterator);

        IF ISCLEAR(HashCalculator) THEN
          CREATE(HashCalculator);
        EntryIDHash := HashCalculator.CalculateFromLongTextBase64(Container);
      END;
    END;

    LOCAL PROCEDURE WriteErrorLog@14(ErrorRecordID@1005 : RecordID;SynchEntityCode@1003 : Code[10];Description@1002 : Text[1024];StartDateTimeIn@1001 : DateTime;VAR Container@1000 : Automation "{CAF2CEDD-2636-48EC-AE94-3A2E78BDCAA4} 1.0:{2884F16D-75BF-4E3D-A1B7-8FFF455F37ED}:Unknown Automation Server.Unknown Class");
    BEGIN
      ErrorXMLWriter.WriteStartElement('Error');
      ErrorXMLWriter.WriteAttribute('SynchEntityCode',SynchEntityCode);

      ErrorXMLWriter.WriteAttribute('RecordID',FORMAT(ErrorRecordID));
      ErrorXMLWriter.WriteAttribute('OccurrenceTime',OSynchTypeConversion.SetDateTimeFormat(CURRENTDATETIME));
      ErrorXMLWriter.WriteAttribute('Description',Description);

      ErrorXMLWriter.WriteAttribute(
        'LastModificationTime',
        OSynchTypeConversion.SetDateTimeFormat(StartDateTimeIn));

      ErrorXMLWriter.WriteAttribute('RecordID',FORMAT(ErrorRecordID));
      ErrorXMLWriter.WriteStartElement('EntryID');
      ErrorXMLWriter.WriteLongText(Container);
      ErrorXMLWriter.WriteEndElement;

      ErrorXMLWriter.WriteEndElement;
    END;

    BEGIN
    END.
  }
}
