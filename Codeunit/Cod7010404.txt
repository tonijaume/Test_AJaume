OBJECT Codeunit 7010404 Contabilizaci¢n Externa ECOFIN
{
  OBJECT-PROPERTIES
  {
    Date=23/06/15;
    Time=12:21:16;
    Modified=Yes;
    Version List=TRANSFER,INV;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text50000@1103355000 : TextConst 'ESP=ESP';
      Text50001@1103355001 : TextConst 'ESP="No se pudo determinar el tipo de servicio para "';
      Text50002@1103355002 : TextConst 'ESP=Falta asignar un valor a las cuentas de producci¢n';
      Text50003@1103355003 : TextConst 'ESP="Prod "';
      Text50004@1103355004 : TextConst 'ESP=D';
      Text50005@1103355005 : TextConst 'ESP=H';
      Text50006@1103355006 : TextConst 'ESP=No se ha podido determinar el Cliente / TTOO del documento';
      Text50007@1103355007 : TextConst 'ESP=<integer>';
      Text50008@1103355008 : TextConst 'ESP=<year4><month,2><day,2>';
      Text50009@1103355009 : TextConst 'ESP=<day>';
      Text50010@1103355010 : TextConst 'ESP=<month>';
      Text50011@1103355011 : TextConst 'ESP=<year4>';
      Text50012@1103355012 : TextConst 'ESP=N';
      Text50013@1103355013 : TextConst 'ESP=No ha especificado el C¢digo Empresa en la ficha de par metros contabilizaci¢n';
      Text50014@1103355014 : TextConst 'ESP=No ha especificado Diario en la ficha de par metros contabilizaci¢n';
      Text50015@1103355015 : TextConst 'ESP=No ha especificado departamento contable en la ficha de par metros contabilizaci¢n';
      Text50016@1103355016 : TextConst 'ESP=No ha especificado concepto centro productivo en la ficha de par metros contabilizaci¢n';
      Text50017@1103355017 : TextConst 'ESP=No ha especificado la cuenta para los traslados varios';
      Text50018@1103355018 : TextConst 'ESP=No ha especificado la cuenta para los Excursiones Varios';
      Text50019@1103355019 : TextConst 'ESP=S';
      Text50020@1103355020 : TextConst 'ESP=El env¡o %1 no ha sido enviado';
      Text50021@1103355021 : TextConst 'ESP=El env¡o ha sido enviado';
      Text50022@1103355022 : TextConst 'ESP=La factura est  contabilizada';
      Text50023@1103355023 : TextConst 'ESP=No existe Ficha para el garaje %1';
      Text50024@1103355024 : TextConst 'ESP=No ha especificado C¢digo de empresa en la ficha de par metros contabilizaci¢n';
      Text50025@1103355025 : TextConst 'ESP=No ha especificado concepto facturas en la ficha de par metros contabilizaci¢n';
      Text50026@1103355026 : TextConst 'ESP=No ha especificado concepto IVA facturas en la ficha de par metros contabilizaci¢n';
      Text50027@1103355027 : TextConst 'ESP=No ha especificado concepto base IVA facturas en la ficha de par metros contabilizaci¢n';
      Text50028@1103355028 : TextConst 'ESP=No ha especificado concepto abonos en la ficha de par metros contabilizaci¢n';
      Text50029@1103355029 : TextConst 'ESP=No ha especificado concepto IVA abonos en la ficha de par metros contabilizaci¢n';
      Text50030@1103355030 : TextConst 'ESP=No ha especificado concepto base IVA abonos en la ficha de par metros contabilizaci¢n';
      Text50031@1103355031 : TextConst 'ESP=No ha especificado libro registro IVA Fras. Estandar en la ficha de par metros contabilizaci¢n';
      Text50032@1103355032 : TextConst 'ESP=MIXTO';
      Text50033@1103355033 : TextConst 'ESP=EXCURSION';
      Text50034@1103355034 : TextConst 'ESP=TRASLADOS';
      Text50035@1103355035 : TextConst 'ESP="La factura "';
      Text50036@1103355036 : TextConst 'ESP=" tiene m s de un tipo de iva"';
      Text50037@1103355037 : TextConst 'ESP=C';
      Text50038@1103355038 : TextConst 'ESP=GENERAL';
      Text50039@1103355039 : TextConst 'ESP=. Problema al calcular el tipo de servicio.';
      Text50040@1103355040 : TextConst 'ESP=C¢d. Divisa';
      Text50041@1103355041 : TextConst 'ESP=No se ha podido determinar el Tipo de servicio para la factura %1';
      Text50042@1103355042 : TextConst 'ESP=J';
      Text50043@1103355043 : TextConst 'ESP=K';
      Text50044@1103355044 : TextConst 'ESP=L';
      Text50045@1103355045 : TextConst 'ESP=M';
      Text50046@1103355046 : TextConst 'ESP=O';
      Text50047@1103355047 : TextConst 'ESP=P';
      Text50048@1103355048 : TextConst 'ESP=Q';
      Text50049@1103355049 : TextConst 'ESP=R';
      Text50050@1103355050 : TextConst 'ESP="No se han podido determinar todas las cuentas para la factura "';
      vPrecision@1103350000 : Decimal;
      vDivContab@1103350001 : Code[10];
      Text001@1103350002 : TextConst 'ESP=No se ha encontrado la prefactura correspondiente a la factura %1';
      Text002@1103350003 : TextConst 'ESP=No se ha podido calcular el total correcto para la factura %1';
      ID_VARIEDAD@1103350004 : TextConst 'ESP=XXX';

    PROCEDURE ContabProduccion@1(pGaraje@1103350000 : Code[10];pFecIni@1103350001 : Date;pFecFin@1103350002 : Date);
    VAR
      rAgr@1103350003 : Record 7035377;
      rLinD@1103350004 : Record 81;
      MENSAJE1@1103350005 : TextConst 'ESP=¨Contabilizar Producci¢n?';
      MENSAJE2@1103350006 : TextConst 'ESP=Contabilizaci¢n finalizada';
      vDivLocal@1103350007 : Code[10];
      rParams@1103350008 : Record 7010311;
      rPar@1103350009 : Record 7010383;
    BEGIN
      //ContabProduccion
      //Los importes siempre se expresaran en divisa local.

      //Testeamos en primer lugar si la situaci¢n para contabilizar es correcta.
      TestContabProd(pGaraje,rPar);

      //Sabemos que DIVISA LOCAL es el Euro y que puede venir expresado en ptas.
      IF rPar."C¢d. Divisa" = Text50000  THEN BEGIN
        vDivContab := Text50000;
        vPrecision := 1;
      END
      ELSE BEGIN
        vDivContab := '';
        vPrecision := 0.01;
      END;

      //Borramos el contenido de la tabla de agrupaci¢n.
      rAgr.LOCKTABLE;
      rAgr.DELETEALL;

      rParams.FINDFIRST;
      rLinD.SETCURRENTKEY("Journal Template Name","Journal Batch Name","Posting Date");
      rLinD.SETRANGE("Journal Template Name",rParams."Libro diario Previsiones");
      rLinD.SETRANGE("Journal Batch Name",rParams."Seccion Previsiones ingreso");
      rLinD.SETRANGE("Posting Date",pFecIni,pFecFin);

      IF pGaraje <> '' THEN
        rLinD.SETRANGE("Shortcut Dimension 1 Code",pGaraje);

      rLinD.SETRANGE(Traspasado,FALSE);

      IF rLinD.FINDSET(TRUE) THEN REPEAT
        //Realizamos la agrupaci¢n.
        LineaProd(rLinD,rPar);

        //Indicamos que la linea ha sido contabilizada.
        rLinD.Traspasado := TRUE;
        rLinD."Usuario traspaso" := USERID;
        rLinD."Fecha traspaso" := TODAY;
        rLinD."Hora traspaso" := TIME;
        rLinD.MODIFY;
      UNTIL rLinD.NEXT = 0;


      rAgr.RESET;
      IF rAgr.FINDSET THEN REPEAT
        GrabarProducciones(rAgr,rPar);
      UNTIL rAgr.NEXT=0;


      MESSAGE(MENSAJE2);
    END;

    PROCEDURE LineaProd@3(rLinD@1103350000 : Record 81;rPar@1103350001 : Record 7010383);
    VAR
      rAgr@1103350002 : Record 7035377;
      rAgr2@1103350003 : Record 7035377;
      vTS@1103350004 : Code[10];
      vCuenta@1103350005 : Text[13];
      vDia@1103350006 : Date;
      rCont@1103350007 : Record 7010381;
      rTipo@1103350008 : Record 330;
      vImporte@1103350009 : Decimal;
      vDescripci¢n@1103350010 : Text[30];
    BEGIN
      //LineaProd.

      vTS := rLinD."Tipo servicio";

      IF vTS='' THEN
        ERROR(Text50001+FORMAT(rLinD."Line No."));

      //Calculamos la cuenta que le toca.
      ObtenerCuentas(vCuenta,rPar,rLinD,vTS);
      IF vCuenta = '' THEN
        ERROR(Text50002);

      //Revisamos si tenemos la agrupaci¢n.
      IF rPar."Agrupar por Cta. Contable" THEN BEGIN
        vDescripci¢n := Text50003+' '+vCuenta+' - '+vTS;
        rAgr.SETCURRENTKEY(Fecha,Cuenta,"Tipo Servicio",DOH);
        rAgr.SETRANGE(Fecha,rLinD."Posting Date");
        rAgr.SETRANGE(Cuenta,vCuenta);
        rAgr.SETRANGE("Tipo Servicio",vTS);
      END
      ELSE BEGIN
        vDescripci¢n := Text50003+' '+rLinD."Shortcut Dimension 2 Code"+' - '+vTS;
        rAgr.SETCURRENTKEY(Fecha,TTOO,"Tipo Servicio",DOH);
        rAgr.SETRANGE(Fecha,rLinD."Posting Date");
        rAgr.SETRANGE(TTOO,rLinD."Shortcut Dimension 2 Code");
        rAgr.SETRANGE("Tipo Servicio",vTS);
      END;

      IF rLinD."Debit Amount" <> 0 THEN
        rAgr.SETRANGE(DOH,Text50004)
      ELSE
        rAgr.SETRANGE(DOH,Text50005);

      IF NOT rAgr.FINDFIRST THEN BEGIN
        rAgr2.INIT;
        rAgr2.Fecha := rLinD."Posting Date";
        rAgr2.Cuenta := vCuenta;
        rAgr2."Tipo Servicio" := vTS;

        IF rLinD."Debit Amount" <> 0 THEN BEGIN
          rAgr2.DOH := Text50004;
          rAgr2.Importe := rLinD."Debit Amount"
        END
        ELSE BEGIN
          rAgr2.DOH  := Text50005;
          rAgr2.Importe := rLinD."Credit Amount"
        END;

        //Asignamos la cta. agrupaci¢n o el TTOO seg£n como hayamos parametrizado.
        IF NOT rPar."Agrupar por Cta. Contable" THEN
          rAgr2.TTOO := rLinD."Shortcut Dimension 2 Code";

        rAgr2.Descripci¢n := vDescripci¢n;

        rAgr2.INSERT(TRUE);
      END
      ELSE BEGIN
        IF rLinD."Debit Amount" <> 0 THEN
          rAgr.Importe += rLinD."Debit Amount"
        ELSE
          rAgr.Importe += rLinD."Credit Amount";
        rAgr.MODIFY;
      END;
    END;

    PROCEDURE ObtenerCuentas@9(VAR vCuenta@1103350000 : Text[13];rPar@1103350001 : Record 7010383;rLinD@1103350002 : Record 81;pTipoServicio@1103350003 : Code[10]);
    VAR
      rEco@1103350004 : Record 7010380;
      rParGaraje@1103350005 : Record 7010311;
      vExcursion@1103350006 : Boolean;
    BEGIN
      //ObtenerCuentas.
      IF rLinD."Debit Amount" <> 0 THEN BEGIN
        vCuenta := rPar."Cta. Puente Prod/Fact";
        EXIT;
      END;

      //Si es una cuenta de haber entonces buscamos.
      rParGaraje.FINDFIRST;

      vExcursion := FALSE;
      IF pTipoServicio =  rParGaraje."Codigo Tipo Excursiones" THEN
        vExcursion := TRUE;

      IF rEco.GET(rLinD."Source No.",rLinD."Shortcut Dimension 2 Code") THEN BEGIN
        IF vExcursion THEN
          vCuenta := rEco."Cta. Contable Excursiones"
        ELSE
          vCuenta := rEco."Cta. Contable Traslados";
      END
      ELSE
        ERROR(Text50006+rLinD."Document No.");

      //Si han quedado en blanco, asignamos el valor de los parametros generales.
      IF vCuenta = '' THEN BEGIN
        IF vExcursion THEN
          vCuenta := rPar."Excursiones varios"
        ELSE
          vCuenta := rPar."Traslados varios";
      END;
    END;

    PROCEDURE GrabarProducciones@8(rAgr@1103350000 : Record 7035377;rPar@1103350001 : Record 7010383);
    VAR
      rCont@1103350002 : Record 7010381;
      rContAux@1103350003 : Record 7010381;
      cFunBas@1103350004 : Codeunit 7010310;
      vDia@1103350005 : Date;
      vLinea@1103350006 : Integer;
      vValor@1103350007 : Decimal;
    BEGIN
      //GrabarProducciones.
      vDia := rAgr.Fecha;
      rCont.INIT;
      //+001
      //rCont.Empresa:= CONVERTSTR(FORMAT(rPar."C¢d. Empresa",2,'<integer>'),' ','0');
      rCont.Empresa:= CONVERTSTR(FORMAT(rPar."C¢d. Empresa",3,'<integer>'),' ','0');
      //-001
      rCont.Contad := CONVERTSTR(FORMAT(0,5,Text50007),' ','0');
      rCont.Diario := CONVERTSTR(FORMAT(rPar.Diario,3,Text50007),' ','0');
      rCont.Docume := CONVERTSTR(FORMAT(vDia,8,Text50008),' ','0');

      rContAux.RESET;
      rContAux.SETCURRENTKEY(Empresa,Contad,Anyapu,Mesapu,Diario,Docume,L¡nea,Numenv);
      rContAux.SETRANGE(Empresa,rCont.Empresa);
      rContAux.SETRANGE(Contad,rCont.Contad);
      rContAux.SETRANGE(Diario,rCont.Diario);
      rContAux.SETRANGE(Docume,rCont.Docume);
      rContAux.SETRANGE(Numenv,0);

      IF rContAux.FINDLAST THEN
        EVALUATE(vLinea,rContAux.L¡nea)
      ELSE
        vLinea := 0;

      vLinea += 1;

      rCont.L¡nea  := CONVERTSTR(FORMAT(vLinea,5,Text50007),' ','0');
      rCont.Diaapu := CONVERTSTR(FORMAT(vDia,2,Text50009),' ','0');
      rCont.Mesapu := CONVERTSTR(FORMAT(vDia,2,Text50010),' ','0');
      rCont.Anyapu := CONVERTSTR(FORMAT(vDia,4,Text50011),' ','0');
      rCont.Subcta := rAgr.Cuenta;

      rCont.Concep := CONVERTSTR(FORMAT(ROUND(rPar."Concepto Produccion",1,'='),2,Text50007),' ','0');

      IF rAgr.DOH=Text50004 THEN
        rCont.DOH := Text50004
      ELSE
        rCont.DOH := Text50005;

      rCont.Ingpag := Text50012;

      //Hemos realizado las agrupaciones necesarias.
      IF rPar."C¢d. Divisa" <> '' THEN
        vValor := cFunBas.CambiarDLaDE(rAgr.Importe,rPar."C¢d. Divisa",TODAY)
      ELSE
        vValor := rAgr.Importe;

      vValor:= ROUND(vValor, vPrecision,'=')*100;

      IF vValor >= 0 THEN
        rCont.Impapu := CONVERTSTR(FORMAT(vValor,13,Text50007),' ','0')
      ELSE
        rCont.Impapu := ConvImport(vValor,1,13);

      //Como siempre expresamos la produccion en moneda local,....
      rCont.Impmon := CONVERTSTR(FORMAT(0,13,Text50007),' ','0');
      rCont.Moneda := '';
      rCont.Camapu := CONVERTSTR(FORMAT(0,9,Text50007),' ','0');
      //......

      rCont.Divisi := '01';
      rCont.Depart := CONVERTSTR(FORMAT(rPar."Departamento Contable",3,Text50007),' ','0');
      rCont.Carapu := Text50012;
      rCont.Cosapu := Text50012;
      rCont.Auxapu := Text50012;

      //+003
      //rCont.Conamp := COPYSTR(rAgr.Descripci¢n, 1, 20);
      rCont.Conamp := COPYSTR(rAgr.Descripci¢n, 1, 30);
      //-003

      rCont.Diaval := CONVERTSTR(FORMAT(vDia,2,Text50009),' ','0');
      rCont.Mesval := CONVERTSTR(FORMAT(vDia,2,Text50010),' ','0');
      rCont.Anyval := CONVERTSTR(FORMAT(vDia,4,Text50011),' ','0');
      GrabarAuxi(rCont,rPar);
      rCont.INSERT;
    END;

    PROCEDURE TestContabProd@2(pGaraje@1103350000 : Code[10];VAR rPar@1103350001 : Record 7010383);
    VAR
      ERROR1@1103350002 : TextConst 'ESP=El d¡a ya esta contabilizado';
      ERROR2@1103350003 : TextConst 'ESP=Falta introducir la divisa local en la configuraci¢n de contabilidad';
      ERROR3@1103350004 : TextConst 'ESP=Falta introducir la precisi¢n para la divisa %1';
      ERROR4@1103350005 : TextConst 'ESP=No se ha encontrado la ficha de parametros para el garaje %1';
      rParGar@1103350006 : Record 7010311;
      vAux@1103350007 : Code[10];
    BEGIN
      //TestContabProd.
      IF pGaraje<>'' THEN  BEGIN
        IF NOT rPar.GET(pGaraje) THEN
          ERROR(ERROR4,pGaraje);
      END
      ELSE BEGIN
        rParGar.FINDFIRST;
        vAux := rParGar."Todos los garajes";
        IF NOT rPar.GET(vAux) THEN
          ERROR(ERROR4,vAux);
      END;

      IF rPar."C¢d. Empresa" = 0 THEN
        ERROR(Text50013);

      IF rPar.Diario = 0 THEN
        ERROR(Text50014);

      IF rPar."Departamento Contable" = 0 THEN
        ERROR(Text50015);

      IF rPar."Concepto Produccion" = 0 THEN
        ERROR(Text50016);

      IF rPar."Traslados varios" = '' THEN
        ERROR(Text50017);

      IF rPar."Excursiones varios" = '' THEN
        ERROR(Text50018);
    END;

    PROCEDURE GrabarAuxi@4(VAR rCNITCONT@1103350000 : Record 7010381;rPar@1103350001 : Record 7010383);
    VAR
      rAuxi@1103350002 : Record 7010382;
    BEGIN
      //GrabarAuxi();
      //Por cada apunte al grupo 6 ¢ 7 se graba un registro en el fichero TRI-CNITAUXI.

      IF (COPYSTR(rCNITCONT.Subcta,1,1) = '6') OR (COPYSTR(rCNITCONT.Subcta,1,1) = '7') THEN BEGIN
        rAuxi.INIT;
        rAuxi.Empresa := rCNITCONT.Empresa;
        rAuxi.Contad := rCNITCONT.Contad;
        rAuxi.AnyApu := rCNITCONT.Anyapu;
        rAuxi.MesApu := rCNITCONT.Mesapu;
        rAuxi.Diario := rCNITCONT.Diario;
        rAuxi.Docume := rCNITCONT.Docume;
        rAuxi.Linea  := rCNITCONT.L¡nea;
        rAuxi.AuxTip := rPar."Tipo Auxiliar";
        rAuxi.AuxCod := rPar."C¢digo Auxiliar";
        rAuxi.ImpApu := rCNITCONT.Impapu;
        rAuxi.Numenv := rCNITCONT.Numenv;
        rAuxi.INSERT;
        rCNITCONT.Auxapu := Text50019
      END;
    END;

    PROCEDURE CrearEnv¡o@5();
    VAR
      rEnv@1103350000 : Record 7010388;
      rCONT@1103350001 : Record 7010381;
      rRIVA@1103350002 : Record 7010384;
      rCOBR@1103350003 : Record 7010385;
      rPAGO@1103350004 : Record 7010386;
      rAUXI@1103350005 : Record 7010382;
      rrCONT@1103350006 : Record 7010381;
      rrRIVA@1103350007 : Record 7010384;
      rrCOBR@1103350008 : Record 7010385;
      rrPAGO@1103350009 : Record 7010386;
      rrAUXI@1103350010 : Record 7010382;
      ProxEnv¡o@1103350011 : Integer;
    BEGIN
      rEnv.RESET;
      IF rEnv.FINDLAST THEN BEGIN
        IF rEnv."Usuario env¡o" = '' THEN
          ERROR(Text50020,rEnv."N£mero Env¡o");
        ProxEnv¡o := rEnv."N£mero Env¡o" + 1
      END
      ELSE
        ProxEnv¡o := 1;

      rEnv.INIT;

      rCONT.RESET;
      rCONT.SETRANGE(Numenv,0);
      IF rCONT.FINDSET(TRUE) THEN REPEAT
        rrCONT := rCONT;
        rrCONT.Numenv := ProxEnv¡o;
        rEnv."Mov. contabilidad" := rEnv."Mov. contabilidad" + 1;
        rrCONT.INSERT;
      UNTIL rCONT.NEXT = 0;

      rCONT.RESET;
      rCONT.SETRANGE(Numenv,0);
      rCONT.DELETEALL;

      rRIVA.RESET;
      rRIVA.SETRANGE(Numenv,0);
      IF rRIVA.FINDSET(TRUE) THEN REPEAT
        rrRIVA := rRIVA;
        rrRIVA.Numenv := ProxEnv¡o;
        rEnv."Registro Impuesto" := rEnv."Registro Impuesto" + 1;
        rrRIVA.INSERT;
      UNTIL rRIVA.NEXT = 0;

      rRIVA.RESET;
      rRIVA.SETRANGE(Numenv,0);
      rRIVA.DELETEALL;

      rCOBR.RESET;
      rCOBR.SETRANGE(Numenv,0);
      IF rCOBR.FINDSET(TRUE) THEN REPEAT
        rrCOBR := rCOBR;
        rrCOBR.Numenv := ProxEnv¡o;
        rEnv.Cobros := rEnv.Cobros + 1;
        rrCOBR.INSERT;
      UNTIL rCOBR.NEXT = 0;

      rCOBR.RESET;
      rCOBR.SETRANGE(Numenv,0);
      rCOBR.DELETEALL;

      rPAGO.RESET;
      rPAGO.SETRANGE(Numenv,0);
      IF rPAGO.FINDSET(TRUE) THEN REPEAT
        rrPAGO := rPAGO;
        rrPAGO.Numenv := ProxEnv¡o;
        rEnv.Pagos := rEnv.Pagos +1;
        rrPAGO.INSERT;
      UNTIL rPAGO.NEXT = 0;

      rPAGO.RESET;
      rPAGO.SETRANGE(Numenv,0);
      rPAGO.DELETEALL;

      rAUXI.RESET;
      rAUXI.SETRANGE(Numenv,0);
      IF rAUXI.FINDSET(TRUE) THEN REPEAT
        rrAUXI := rAUXI;
        rrAUXI.Numenv := ProxEnv¡o;
        rEnv.Auxiliar := rEnv.Auxiliar +1;
        rrAUXI.INSERT;
      UNTIL rAUXI.NEXT = 0;

      rAUXI.RESET;
      rAUXI.SETRANGE(Numenv,0);
      rAUXI.DELETEALL;

      IF rEnv."Mov. contabilidad" + rEnv."Registro Impuesto" +rEnv.Cobros +
         rEnv.Pagos + rEnv.Auxiliar > 0 THEN BEGIN
        rEnv."N£mero Env¡o" := ProxEnv¡o;
        rEnv."Usuario creaci¢n" := USERID;
        rEnv."Fecha creaci¢n" := TODAY;
        rEnv."Hora creaci¢n" := TIME;
        rEnv.INSERT;
      END;
    END;

    PROCEDURE AnularEnv¡o@6(Rec@1103350000 : Record 7010388);
    VAR
      rEnv@1103350001 : Record 7010388;
      rCONT@1103350002 : Record 7010381;
      rRIVA@1103350003 : Record 7010384;
      rCOBR@1103350004 : Record 7010385;
      rPAGO@1103350005 : Record 7010386;
      rAUXI@1103350006 : Record 7010382;
      rrCONT@1103350007 : Record 7010381;
      rrRIVA@1103350008 : Record 7010384;
      rrCOBR@1103350009 : Record 7010385;
      rrPAGO@1103350010 : Record 7010386;
      rrAUXI@1103350011 : Record 7010382;
      ProxEnv¡o@1103350012 : Integer;
    BEGIN
      IF Rec."Usuario env¡o" <> '' THEN
        ERROR(Text50021);

      rCONT.RESET;
      rCONT.SETRANGE(Numenv,Rec."N£mero Env¡o");
      IF rCONT.FINDSET(TRUE) THEN REPEAT
        rrCONT := rCONT;
        rrCONT.Numenv := 0;
        rCONT.DELETE;
        rrCONT.INSERT;
      UNTIL rCONT.NEXT = 0;

      rRIVA.RESET;
      rRIVA.SETRANGE(Numenv,Rec."N£mero Env¡o");
      IF rRIVA.FINDSET(TRUE) THEN REPEAT
        rrRIVA := rRIVA;
        rrRIVA.Numenv := 0;
        rRIVA.DELETE;
        rrRIVA.INSERT;
      UNTIL rRIVA.NEXT = 0;

      rCOBR.RESET;
      rCOBR.SETRANGE(Numenv,Rec."N£mero Env¡o");
      IF rCOBR.FINDSET(TRUE) THEN REPEAT
        rrCOBR := rCOBR;
        rrCOBR.Numenv := 0;
        rCOBR.DELETE;
        rrCOBR.INSERT;
      UNTIL rCOBR.NEXT = 0;

      rPAGO.RESET;
      rPAGO.SETRANGE(Numenv,Rec."N£mero Env¡o");
      IF rPAGO.FINDSET(TRUE) THEN REPEAT
        rrPAGO := rPAGO;
        rrPAGO.Numenv := 0;
        rPAGO.DELETE;
        rrPAGO.INSERT;
      UNTIL rPAGO.NEXT = 0;

      rAUXI.RESET;
      rAUXI.SETRANGE(Numenv,Rec."N£mero Env¡o");
      IF rAUXI.FINDSET(TRUE) THEN REPEAT
        rrAUXI := rAUXI;
        rrAUXI.Numenv := 0;
        rAUXI.DELETE;
        rrAUXI.INSERT;
      UNTIL rAUXI.NEXT = 0;

      Rec.DELETE;
    END;

    PROCEDURE TestFacturas@14(rCab@1103350000 : Record 36);
    VAR
      rGaraje@1103350001 : Record 7010310;
      rPar@1103350002 : Record 7010383;
    BEGIN
      //TestFacturas()
      IF rCab.Traspasado THEN
        ERROR(Text50022);

      IF NOT rPar.GET(rCab."Shortcut Dimension 1 Code") THEN
        ERROR(Text50023,rCab."Shortcut Dimension 1 Code");

      IF rPar."C¢d. Empresa" = 0 THEN
        ERROR(Text50024);

      IF rPar.Diario = 0 THEN
        ERROR(Text50014);

      IF rPar."Departamento Contable" = 0 THEN
        ERROR(Text50015);

      IF rPar."Concepto Facturas venta" = 0 THEN
        ERROR(Text50025);

      IF rPar."Concepto Imp. fras. venta" = 0 THEN
        ERROR(Text50026);

      IF rPar."Concepto Base Imp. fras. venta" = 0 THEN
        ERROR(Text50027);

      IF rPar."Concepto Abonos venta" = 0 THEN
        ERROR(Text50028);

      IF rPar."Concepto Imp. Abonos venta" = 0 THEN
        ERROR(Text50029);

      IF rPar."Concepto Base Imp. Abo. venta" = 0 THEN
        ERROR(Text50030);

      IF rPar."Libro Imp. Fras. Venta" = '' THEN
        ERROR(Text50031);
    END;

    PROCEDURE ContabFacturas@7(rCab@1103350000 : Record 36);
    VAR
      rParGen@1103350001 : Record 7010311;
      rPar@1103350002 : Record 7010383;
      rConf@1103350003 : Record 325;
      rCliente@1103350004 : Record 18;
      rEco@1103350005 : Record 7010380;
      rLin@1103350006 : Record 7010389;
      rCONT@1103350007 : Record 7010381;
      rRIVA@1103350008 : Record 7010384;
      rCOBR@1103350009 : Record 7010385;
      cFunBas@1103350010 : Codeunit 7010310;
      vFecFac@1103350011 : Date;
      wLinea@1103350012 : Integer;
      ERROR_GRIVA@1103350013 : TextConst 'ESP=No existe configuraci¢n para Grupo Registro IVA negocio %1 y Grupo Registro IVA producto %2';
      wImp@1103350014 : Decimal;
      vCuotaImpuesto@1103350015 : Decimal;
      FALTA_CTA_CTBLE@1103350016 : TextConst 'ESP=Revisa las cuentas contables para el cliente %1';
      FALTA_FICHA_CLIENTE@1103350017 : TextConst 'ESP=No existe ficha de cliente-TTOO (ecoinv): <%1 - %2>';
      FALTA_FICHA_GARAJE@1103350018 : TextConst 'ESP=No existe ficha de par metros contabilizaci¢n para garaje %1';
      FALTA_FORMA_PAGO@1103350019 : TextConst 'ESP=No ha especificado c¢d. forma de pago para el cliente %1';
      FALTA_BANCO@1103350020 : TextConst 'ESP=No ha especificado banco para el cliente %1';
      FALTA_TERMINO_PAGO@1103350021 : TextConst 'ESP=No ha especificado trminos de pago para el cliente %1';
      vTxtServicio@1103350022 : Text[20];
      vServicio@1103350023 : Code[10];
      vconta@1103350024 : Integer;
      vImpTot@1103350025 : Decimal;
      vImpLinea@1103350026 : Decimal;
      lTotalCon@1103350027 : Decimal;
      lPais@1103355000 : Code[3];
    BEGIN
      //ContabFacturas.
      rCab.CALCFIELDS(Amount,"Amount Including VAT");
      IF NOT rPar.GET(rCab."Shortcut Dimension 1 Code") THEN
        ERROR(FALTA_FICHA_GARAJE,rCab."Shortcut Dimension 1 Code");

      //Resolvemos de format total el tema de la divisa.
      //Sabemos que DIVISA LOCAL es el Euro y que puede venir expresado en ptas.
      IF rPar."C¢d. Divisa" = Text50000  THEN BEGIN
        vDivContab := Text50000;
        vPrecision := 1;
      END
      ELSE BEGIN
        vDivContab := '';
        vPrecision := 0.01;
      END;


      rParGen.FINDFIRST;
      vFecFac := rCab."Posting Date";


      IF NOT rEco.GET(rCab."Sell-to Customer No.",rCab."Shortcut Dimension 2 Code") THEN
        ERROR(FALTA_FICHA_CLIENTE,rCab."Sell-to Customer No.",rCab."Shortcut Dimension 2 Code");

      wLinea := 1;

      vServicio := CreaAgrupacion(rCab,lTotalCon);


      IF vServicio = ID_VARIEDAD THEN
        vTxtServicio := Text50032
      ELSE BEGIN
        IF vServicio=rParGen."Codigo Tipo Excursiones" THEN
          vTxtServicio:= Text50033
        ELSE
          vTxtServicio:= Text50034;
      END;

      FacturaNormal(rCab,rCONT,rEco,rPar,vFecFac,vTxtServicio,lTotalCon);

      rLin.RESET;
      rLin.SETRANGE("C¢d. departamento",rCab."Shortcut Dimension 1 Code");
      rLin.SETRANGE(Concepto,rLin.Concepto::Linea);
      IF rLin.FINDSET THEN REPEAT

        wLinea := wLinea + 1;
        rCONT.INIT;
        //+001
        //rCONT.Empresa:= CONVERTSTR(FORMAT(rPar."C¢d. Empresa",2,'<integer>'),' ','0');
        rCONT.Empresa:= CONVERTSTR(FORMAT(rPar."C¢d. Empresa",3,'<integer>'),' ','0');
        //-001
        rCONT.Contad := CONVERTSTR(FORMAT(0,5,Text50007),' ','0');
        rCONT.Diario := CONVERTSTR(FORMAT(rPar.Diario,3,Text50007),' ','0');
        rCONT.Docume := rCab."No.";
        rCONT.L¡nea  := CONVERTSTR(FORMAT(wLinea,5,Text50007),' ','0');

        rCONT.Diaapu := CONVERTSTR(FORMAT(vFecFac,2,Text50009),' ','0');
        rCONT.Mesapu := CONVERTSTR(FORMAT(vFecFac,2,Text50010),' ','0');
        rCONT.Anyapu := CONVERTSTR(FORMAT(vFecFac,4,Text50011),' ','0');

        IF NOT rLin.Maleta THEN BEGIN
          //El valor siguiente depende de si usamos producciones o no.
          IF NOT rPar."Usar Cta. Puente Prod/Fact" THEN BEGIN
            IF rLin."Tipo Servicio" = rParGen."Codigo Tipo Excursiones" THEN
              rCONT.Subcta := ElegirCuenta(rCab."No.",rEco."Cta. Contable Excursiones",rPar."Excursiones varios")
            ELSE
              rCONT.Subcta := ElegirCuenta(rCab."No.",rEco."Cta. Contable Traslados",rPar."Traslados varios");
          END
          ELSE
            rCONT.Subcta := rPar."Cta. Puente Prod/Fact";
        END
        ELSE
          rCONT.Subcta := ElegirCuenta(rCab."No.",rEco."Cta. Contable Maletas",rPar."Cta. genrica maletas");


        IF lTotalCon < 0 THEN
          rCONT.Concep := CONVERTSTR(FORMAT(ROUND(rPar."Concepto Base Imp. Abo. venta",1,'='),2,Text50007),
                                     ' ','0')
        ELSE
          rCONT.Concep := CONVERTSTR(FORMAT(ROUND(rPar."Concepto Base Imp. fras. venta",1,'='),2,Text50007),
                                     ' ','0');

        rCONT.DOH    := Text50005;
        rCONT.Ingpag := Text50012;

        //RRT.
        wImp := ObtenerImporte(rCab."Currency Code",vDivContab,rLin.Importe);
        wImp := ROUND(wImp, vPrecision,'=')*100;

        IF rLin.Importe <> 0 THEN
          IF wImp > 0 THEN
            rCONT.Impapu := CONVERTSTR(FORMAT(wImp,13,Text50007),' ','0')
          ELSE
            rCONT.Impapu := ConvImport(wImp,1,13)
        ELSE
          rCONT.Impapu := CONVERTSTR(FORMAT(0,13,Text50007),' ','0');


        rCONT.Impmon := CONVERTSTR(FORMAT(0,13,Text50007),' ','0');
        rCONT.Moneda := '';
        rCONT.Camapu := CONVERTSTR(FORMAT(0,9,Text50007),' ','0');

        rCONT.Divisi := '01';
        rCONT.Depart := CONVERTSTR(FORMAT(rPar."Departamento Contable",3,Text50007),' ','0');

        rCONT.Carapu := Text50012;

        rCONT.Cosapu := Text50012;

        rCONT.Auxapu := Text50012;

        //+003
        //rCONT.Conamp := COPYSTR(rCab."Bill-to Name",1,20);
        rCONT.Conamp := COPYSTR(rCab."Bill-to Name", 1, 30);
        //-003

        rCONT.Diaval := rCONT.Diaapu;
        rCONT.Mesval := rCONT.Mesapu;
        rCONT.Anyval := rCONT.Anyapu;
        GrabarAuxi(rCONT,rPar);
        rCONT.INSERT;

      UNTIL rLin.NEXT = 0;

      //Registro de IVA.
      vconta:=0;
      rLin.RESET;
      rLin.SETRANGE(Concepto,rLin.Concepto::IVA);
      rLin.SETRANGE("C¢d. departamento",rCab."Shortcut Dimension 1 Code");
      IF rLin.FINDSET THEN REPEAT
        //rrt. chapuza. Ahora bien, bien pensado, s¢lo habr  un tipo de iva. Por tanto no nos
        //complicaremos.
        vconta +=1;
        IF vconta=2 THEN
          ERROR(Text50035+rCab."No."+Text50036);
        // IVA
        wLinea := wLinea + 1;
        rCONT.INIT;

        //+001
        //rCONT.Empresa := CONVERTSTR(FORMAT(rPar."C¢d. Empresa",2,'<integer>'),' ','0');
        rCONT.Empresa := CONVERTSTR(FORMAT(rPar."C¢d. Empresa",3,'<integer>'),' ','0');
        //-001

        rCONT.Contad  := CONVERTSTR(FORMAT(0,5,Text50007),' ','0');
        rCONT.Diario  := CONVERTSTR(FORMAT(rPar.Diario,3,Text50007),' ','0');
        rCONT.Docume  := rCab."No.";
        rCONT.L¡nea   := CONVERTSTR(FORMAT(wLinea,5,Text50007),' ','0');

        rCONT.Diaapu := CONVERTSTR(FORMAT(vFecFac,2,Text50009),' ','0');
        rCONT.Mesapu := CONVERTSTR(FORMAT(vFecFac,2,Text50010),' ','0');
        rCONT.Anyapu := CONVERTSTR(FORMAT(vFecFac,4,Text50011),' ','0');

        rCONT.Subcta := rPar."Cta. Impuesto";

        IF lTotalCon < 0 THEN
          rCONT.Concep := CONVERTSTR(FORMAT(ROUND(rPar."Concepto Imp. Abonos venta",1,'='),2,Text50007),
                                     ' ','0')
        ELSE
          rCONT.Concep := CONVERTSTR(FORMAT(ROUND(rPar."Concepto Imp. fras. venta",1,'='),2,Text50007),
                                     ' ','0');

        rCONT.DOH    := Text50005;
        rCONT.Ingpag := Text50012;

        //Calculo de la parte correspondiente al impuesto.
        //RRT. porque s¢lo habr  un IVA al 7% porque si no esto fallar  por todos los lados.
        //Si no lo hacemos as¡, esto ira fatal. (Es decir, hay que estudiarlo mejor).
        //Como estamos en momento de transito a Euro, ....


        vImpTot  := ObtenerImporte(rCab."Currency Code",vDivContab,lTotalCon);
        vImpLinea:= ObtenerImporte(rCab."Currency Code",vDivContab,rLin.Importe);

        //Ojo porque vCuotaImpuesto queda con los decimales que necesita.
        vCuotaImpuesto := ROUND(vImpTot,vPrecision,'=')- ROUND(vImpLinea,vPrecision,'=');

        wImp := vCuotaImpuesto*100;

        IF vCuotaImpuesto <> 0 THEN
          IF wImp > 0 THEN
            rCONT.Impapu := CONVERTSTR(FORMAT(wImp ,13,Text50007),' ','0')
          ELSE
            rCONT.Impapu := ConvImport(wImp,1,13)
        ELSE
          rCONT.Impapu := CONVERTSTR(FORMAT(0,13,Text50007),' ','0');

        rCONT.Impmon := CONVERTSTR(FORMAT(0,13,Text50007),' ','0');
        rCONT.Moneda := '';
        rCONT.Camapu := CONVERTSTR(FORMAT(0,9,Text50007),' ','0');

        rCONT.Divisi := '01';
        rCONT.Depart := CONVERTSTR(FORMAT(rPar."Departamento Contable",3,Text50007),' ','0');

        rCONT.Carapu := Text50012;

        rCONT.Cosapu := Text50012;
        rCONT.Auxapu := Text50012;

        //+003
        //rCONT.Conamp := COPYSTR(rCab."Bill-to Name",1,20);           //Agencias y Directos
        rCONT.Conamp := COPYSTR(rCab."Bill-to Name", 1, 30);           //Agencias y Directos
        //-003

        rCONT.Diaval := rCONT.Diaapu;
        rCONT.Mesval := rCONT.Mesapu;
        rCONT.Anyval := rCONT.Anyapu;
        GrabarAuxi(rCONT,rPar);
        rCONT.INSERT;

      UNTIL rLin.NEXT = 0;

      //TRI-IVA
      wLinea := 0;
      rLin.RESET;
      rLin.SETRANGE(Concepto,rLin.Concepto::IVA);
      rLin.SETRANGE("C¢d. departamento",rCab."Shortcut Dimension 1 Code");

      IF rLin.FINDSET THEN REPEAT

        IF NOT(rConf.GET(rLin."Grupo registro IVA neg.",rLin."Grupo registro IVA prod.")) THEN
          ERROR(ERROR_GRIVA,rLin."Grupo registro IVA neg.",rLin."Grupo registro IVA prod.");

        wLinea := wLinea + 1;
        rRIVA.INIT;
        //+001
        //rRIVA.Empresa := CONVERTSTR(FORMAT(rPar."C¢d. Empresa",2,'<integer>'),' ','0');
        rRIVA.Empresa := CONVERTSTR(FORMAT(rPar."C¢d. Empresa",3,'<integer>'),' ','0');
        //-001
        rRIVA.Contad := CONVERTSTR(FORMAT(0,5,Text50007),' ','0');

        rRIVA.Mesapu := CONVERTSTR(FORMAT(vFecFac,2,Text50010),' ','0');
        rRIVA.Anyapu := CONVERTSTR(FORMAT(vFecFac,4,Text50011),' ','0');

        rRIVA.Diario := CONVERTSTR(FORMAT(rPar.Diario,3,Text50007),' ','0');
        rRIVA.L¡nea  := CONVERTSTR(FORMAT(1,5,Text50007),' ','0');
        rRIVA.Sublin := CONVERTSTR(FORMAT(wLinea,3,Text50007),' ','0');

        IF rCab."VAT Registration No."<>'' THEN
          rRIVA.Dnicif := COPYSTR(rCab."VAT Registration No.",1,17)
        ELSE
          IF rCliente.GET(rEco.Cliente) THEN
            rRIVA.Dnicif := COPYSTR(rCliente."VAT Registration No.",1,17);


        rRIVA.Subcta := ElegirCuenta(rCab."No.",rEco."Cta. Cliente",rPar."Cta. genrica clientes");

        rRIVA.Origen := Text50037;
        rRIVA.Docume := rCab."No.";

        rRIVA.Diaval := CONVERTSTR(FORMAT(vFecFac,2,Text50009),' ','0');
        rRIVA.Mesval := CONVERTSTR(FORMAT(vFecFac,2,Text50010),' ','0');
        rRIVA.Anyval := CONVERTSTR(FORMAT(vFecFac,4,Text50011),' ','0');

        rRIVA.Moneda := '';
        rRIVA.Camapu := CONVERTSTR(FORMAT(0,9,Text50007),' ','0');

        rRIVA.Relaci := rPar.Relaci¢n;

        rRIVA.Libreg := rPar."Libro Imp. Fras. Venta";


        IF vCuotaImpuesto = 0 THEN
          rRIVA.Claiva := '3'
        ELSE
          rRIVA.Claiva := '1';

        vImpLinea := ObtenerImporte(rCab."Currency Code",vDivContab,rLin.Importe);
        wImp := ROUND(vImpLinea,vPrecision,'=') * 100;

        //wImp := ROUND(rLin.Importe, 1,'=')*100;

        IF wImp >= 0 THEN
          rRIVA.Basimp := CONVERTSTR(FORMAT(wImp, 13, Text50007), ' ', '0')
        ELSE
          rRIVA.Basimp := ConvImport(wImp,1,13);

        IF vImpLinea >= 0 THEN
          rRIVA.Basmon := CONVERTSTR(FORMAT(wImp,13,Text50007),' ','0')
        ELSE
          rRIVA.Basmon := ConvImport(wImp,1,13);

        rRIVA.Tipiva := CONVERTSTR(FORMAT(ROUND(rConf."VAT+EC %" * 100,1,'='),4,Text50007),' ','0');

        IF vCuotaImpuesto >= 0 THEN BEGIN
          rRIVA.Cuota := CONVERTSTR(FORMAT(ROUND(vCuotaImpuesto*100,1,'='),11,Text50007),' ','0');
          rRIVA.Cuomon:= CONVERTSTR(FORMAT(ROUND(vCuotaImpuesto,vPrecision,'=')*100,13,Text50007),' ','0');
        END
        ELSE BEGIN
          rRIVA.Cuota := ConvImport(vCuotaImpuesto*100,1,11);
          rRIVA.Cuomon:= ConvImport(vCuotaImpuesto*100,1,13);
        END;

        rRIVA.Tiprec := '0000';
        rRIVA.Cuorec := '00000000000';
        rRIVA.Cuomor := '00000000000';

        //+002
        lPais := ObtenerPais(rCab);
        rRIVA.Pa¡s := lPais;
        //-002

        rRIVA.INSERT;

      UNTIL rLin.NEXT = 0;

      rCab.Traspasado := TRUE;
      rCab."Usuario Traspaso" := USERID;
      rCab."Fecha Traspaso" := TODAY;
      rCab."Hora Traspaso" := TIME;
      rCab.MODIFY(TRUE);
    END;

    PROCEDURE CreaAgrupacion@13(rCab@1103350000 : Record 36;VAR lTotalCon@1103350014 : Decimal) : Code[10];
    VAR
      rLP@1103350001 : Record 7010417;
      rConf@1103350012 : Record 325;
      rCS@1103350010 : Record 7010320;
      rTemp@1103350002 : Record 7010389;
      lNPrefac@1103350011 : Code[20];
      vIdMaletas@1103350004 : Code[10];
      vStLineaMaletas@1103350005 : Boolean;
      i@1103350006 : Integer;
      vConcepto@1103350007 : 'Linea,IVA';
      vServicio@1103350008 : Code[10];
      vGRIN@1103350009 : Code[10];
      lTotalSin@1103350013 : Decimal;
    BEGIN
      //CreaAgrupacion()

      //Obtenemos el identificativo de maletas.
      vGRIN := Text50038;

      //Inicializamos el temporal
      rTemp.SETCURRENTKEY("C¢d. departamento",Concepto,"Grupo registro IVA neg.","Grupo registro IVA prod.");
      rTemp.SETRANGE("C¢d. departamento",rCab."Shortcut Dimension 1 Code");
      rTemp.DELETEALL(TRUE);

      lNPrefac := ObtenerPrefactura(rCab."No.");

      //Creamos dos tipos de agrupacion: 1 por lineas (desglosando por maletas) y una segunda por IVA.
      FOR i:= 1 TO 2 DO BEGIN

        IF i=1 THEN
          vConcepto := vConcepto::Linea
        ELSE
          vConcepto := vConcepto::IVA;

        rLP.RESET;
        rLP.SETCURRENTKEY("N§ Prefactura");
        rLP.SETRANGE("N§ Prefactura",lNPrefac);

        //Base,Suplemento,Maletas,Comentario,Zona,Resumen Zona,Solo Resumen Zona,Extra
        rLP.SETFILTER(Tipo,'%1|%2|%3|%4|%5',rLP.Tipo::Base,rLP.Tipo::Suplemento,rLP.Tipo::Maletas,
                                              rLP.Tipo::Zona,rLP.Tipo::Extra);

        IF rLP.FINDSET THEN REPEAT

          rTemp.RESET;
          rTemp.SETRANGE("C¢d. departamento" , rCab."Shortcut Dimension 1 Code");
          rTemp.SETRANGE(Concepto,vConcepto);
          rTemp.SETRANGE("Grupo registro IVA neg." , vGRIN);
          rTemp.SETRANGE("Grupo registro IVA prod.", rLP."Grupo registro IVA producto");

          IF (vConcepto = vConcepto::Linea) AND (rLP.Tipo = rLP.Tipo::Maletas) THEN BEGIN
            vStLineaMaletas := TRUE;
            rTemp.SETRANGE(Maleta,TRUE);
          END
          ELSE BEGIN
            vStLineaMaletas := FALSE;
            rTemp.SETRANGE(Maleta,FALSE);
          END;

          //.............
          //Averiguaremos de que servicio se trata, y controlaremos posibles anomalias.
          IF vConcepto=vConcepto::Linea THEN BEGIN
            rCS.GET(rLP."Codigo Servicio");
            IF vServicio = '' THEN
              vServicio := rCS."Tipo servicio"
            ELSE BEGIN
              IF vServicio <> rCS."Tipo servicio" THEN
                IF (vServicio <> '') AND (rCS."Tipo servicio" <> '') THEN
                  vServicio := ID_VARIEDAD
                ELSE
                  ERROR(Text50035+rCab."No."+Text50039);
            END;
          END;
          //.......................

          IF (rLP."Grupo registro IVA producto" <> '') OR (rLP."Importe sin impuestos" <> 0) THEN BEGIN
            //Accedemos al tipo de IVA.
            rConf.GET(vGRIN,rLP."Grupo registro IVA producto");

            IF NOT rTemp.FINDFIRST THEN BEGIN
              //Los importes vienen expresados en DIVISA = Text50040.
              rTemp.INIT;
              rTemp.Concepto                  := vConcepto;
              rTemp."C¢d. departamento"       := rCab."Shortcut Dimension 1 Code";
              rTemp."Grupo registro IVA neg." := vGRIN;
              rTemp."Grupo registro IVA prod.":= rLP."Grupo registro IVA producto";

              IF rCab."Prices Including VAT" THEN BEGIN
                rTemp."Importe IVA incl."       := rLP."Importe con impuestos";
                rTemp.Importe                   := ObtenerImporteSinIVA(rTemp."Importe IVA incl.",rConf."VAT %");
              END
              ELSE BEGIN
                rTemp.Importe                   := rLP."Importe sin impuestos";
                rTemp."Importe IVA incl."       := ObtenerImporteIVAIncluido(rTemp.Importe,rConf."VAT %");
              END;
              rTemp.Maleta                    := vStLineaMaletas;
              rTemp."Tipo Servicio"           := vServicio;
              rTemp.INSERT(TRUE);
            END
            ELSE BEGIN
              IF rCab."Prices Including VAT" THEN BEGIN
                rTemp."Importe IVA incl."       := rTemp."Importe IVA incl." + rLP."Importe con impuestos";
                rTemp.Importe                   := ObtenerImporteSinIVA(rTemp."Importe IVA incl.",rConf."VAT %");
              END
              ELSE BEGIN
                rTemp.Importe                   := rTemp.Importe + rLP."Importe sin impuestos";
                rTemp."Importe IVA incl."       := ObtenerImporteIVAIncluido(rTemp.Importe,rConf."VAT %");
              END;

              rTemp.MODIFY(TRUE);
            END;
          END;
        UNTIL rLP.NEXT=0;

      END;

      IF vServicio = '' THEN
       ERROR(Text50041, rCab."No.");

      IF NOT ChequearTotales(rCab,lTotalSin,lTotalCon) THEN BEGIN
        //Si no cuadra debe ser porque las maletas ya estan incluidas en el precio base.
        ModificaImportesAgrupacion(rCab);
        ChequearTotales(rCab,lTotalSin,lTotalCon);
        //  ERROR(Text002,rCab."No.")
      END;

      EXIT(vServicio);
    END;

    PROCEDURE FacturaNormal@10(rCab@1103350000 : Record 36;rcont@1103350001 : Record 7010381;rEco@1103350002 : Record 7010380;rpar@1103350003 : Record 7010383;pFecFac@1103350004 : Date;pServicio@1103350005 : Text[20];pTotalCon@1103350007 : Decimal);
    VAR
      vImpTot@1103350006 : Decimal;
    BEGIN
      //FacturaNormal()
      //Total de la factura

      rcont.INIT;
      //+001
      //rcont.Empresa := CONVERTSTR(FORMAT(rpar."C¢d. Empresa",2,'<integer>'),' ','0');
      rcont.Empresa := CONVERTSTR(FORMAT(rpar."C¢d. Empresa",3,'<integer>'),' ','0');
      //-001
      rcont.Contad  := CONVERTSTR(FORMAT(0,5,Text50007),' ','0');
      rcont.Diario  := CONVERTSTR(FORMAT(rpar.Diario,3,Text50007),' ','0');
      rcont.Docume  := rCab."No.";
      rcont.L¡nea   := CONVERTSTR(FORMAT(1,5,Text50007),' ','0');

      rcont.Diaapu  := CONVERTSTR(FORMAT(pFecFac,2,Text50009),' ','0');
      rcont.Mesapu  := CONVERTSTR(FORMAT(pFecFac,2,Text50010),' ','0');
      rcont.Anyapu  := CONVERTSTR(FORMAT(pFecFac,4,Text50011),' ','0');


      rcont.Subcta := ElegirCuenta(rCab."No.",rEco."Cta. Cliente",rpar."Cta. genrica clientes");

      vImpTot  := ObtenerImporte(rCab."Currency Code",vDivContab,pTotalCon);

      IF vImpTot < 0 THEN
        rcont.Concep := CONVERTSTR(FORMAT(ROUND(rpar."Concepto Abonos venta",1,'='),2,Text50007),
                                   ' ','0')
      ELSE
        rcont.Concep := CONVERTSTR(FORMAT(ROUND(rpar."Concepto Facturas venta",1,'='),2,Text50007),
                                   ' ','0');


      IF vImpTot >= 0 THEN
        rcont.Impapu := CONVERTSTR(FORMAT(ROUND(vImpTot,vPrecision,'=')*100,13,Text50007),' ','0')
      ELSE
        rcont.Impapu := ConvImport(ROUND(vImpTot,vPrecision,'=')*100,1,13);

      rcont.Impmon := CONVERTSTR(FORMAT(0,13,Text50007),' ','0');
      rcont.Moneda := '';
      rcont.Camapu := CONVERTSTR(FORMAT(0,9,Text50007),' ','0');

      rcont.Divisi := '01';
      rcont.Depart := CONVERTSTR(FORMAT(rpar."Departamento Contable",3,Text50007),' ','0');

      rcont.Carapu := Text50012;

      rcont.Cosapu := Text50012;
      rcont.DOH    := Text50004;
      rcont.Ingpag := Text50019;
      rcont.Auxapu := Text50012;

      //+003
      //rcont.Conamp := COPYSTR(rCab."No." + '-' + pServicio,1,20);
      rcont.Conamp := COPYSTR(rCab."No." + '-' + pServicio, 1, 30);
      //-003

      rcont.Diaval := rcont.Diaapu;
      rcont.Mesval := rcont.Mesapu;
      rcont.Anyval := rcont.Anyapu;

      GrabarAuxi(rcont,rpar);
      rcont.INSERT;
    END;

    PROCEDURE ConvImport@11(Importe@1103350000 : Decimal;Redondeo@1103350001 : Decimal;Longitud@1103350002 : Integer) : Text[30];
    VAR
      wImporte@1103350003 : Integer;
      wText@1103350004 : Text[30];
      pText@1103350005 : Text[30];
    BEGIN
      //ConvImport.
      wText := CONVERTSTR(FORMAT(ROUND(Importe, Redondeo, '='), Longitud, Text50007) , ' ', '0');
      pText := wText;

      CASE COPYSTR(wText,Longitud,1) OF
         '0': pText := COPYSTR(wText,1,Longitud - 1) + '}';
         '1': pText := COPYSTR(wText,1,Longitud - 1) + Text50042;
         '2': pText := COPYSTR(wText,1,Longitud - 1) + Text50043;
         '3': pText := COPYSTR(wText,1,Longitud - 1) + Text50044;
         '4': pText := COPYSTR(wText,1,Longitud - 1) + Text50045;
         '5': pText := COPYSTR(wText,1,Longitud - 1) + Text50012;
         '6': pText := COPYSTR(wText,1,Longitud - 1) + Text50046;
         '7': pText := COPYSTR(wText,1,Longitud - 1) + Text50047;
         '8': pText := COPYSTR(wText,1,Longitud - 1) + Text50048;
         '9': pText := COPYSTR(wText,1,Longitud - 1) + Text50049;
      END;
      EXIT(pText);
    END;

    PROCEDURE ElegirCuenta@15(pNumFact@1103350000 : Code[20];pCta1@1103350001 : Text[13];pCta2@1103350002 : Text[13]) : Text[13];
    BEGIN
      IF pCta1<>'' THEN
        EXIT(pCta1);

      IF pCta2<>'' THEN
        EXIT(pCta2);

      ERROR(Text50050+pNumFact);
    END;

    PROCEDURE ObtenerImporte@17(pDivFact@1103350000 : Code[10];pDivContab@1103350001 : Code[10];pImporte@1103350002 : Decimal) : Decimal;
    VAR
      vFactDivisa@1103350003 : Decimal;
    BEGIN
      //ObtenerImporte.
      //Dado un importe expresado en ESP o en EURO, convertir el importe en la divisa de
      //contabilizaci¢n.

      vFactDivisa := 166.386;
      IF pDivContab=Text50000 THEN BEGIN
        IF pDivFact=Text50000 THEN
          EXIT(pImporte)
        ELSE
          EXIT(pImporte/vFactDivisa);
      END
      ELSE BEGIN
        //Vendr  en Euros.
        IF pDivFact=Text50000 THEN
          EXIT(pImporte/vFactDivisa)
        ELSE
          EXIT(pImporte);
      END;
    END;

    PROCEDURE ObtenerImporteIVAIncluido@1103350000(pImporte@1103350000 : Decimal;pIVA@1103350001 : Decimal) : Decimal;
    VAR
      lResult@1103350002 : Decimal;
    BEGIN
      lResult := ROUND(pImporte,0.01);
      lResult := lResult + (lResult * (pIVA / 100) );
      lResult := ROUND(lResult,0.01);

      EXIT(lResult);
    END;

    PROCEDURE ObtenerImporteSinIVA@1103350001(pImporte@1103350000 : Decimal;pIVA@1103350001 : Decimal) : Decimal;
    VAR
      lResult@1103350002 : Decimal;
    BEGIN
      lResult := ROUND(lResult,0.01);
      lResult := pImporte / ( 1 + (pIVA / 100) );
      lResult := ROUND(lResult,0.01);

      EXIT(lResult);
    END;

    PROCEDURE ObtenerPrefactura@1103350002(pNFac@1103350000 : Code[20]) : Code[20];
    VAR
      rPI@1103350001 : Record 7010415;
    BEGIN
      rPI.SETCURRENTKEY("N§ Factura");
      rPI.SETRANGE("N§ Factura",pNFac);
      IF NOT rPI.FINDFIRST THEN
        ERROR(Text001,pNFac);

      EXIT(rPI."N§ Prefactura");
    END;

    PROCEDURE ModificaImportesAgrupacion@1103350004(rCab@1103350002 : Record 36);
    VAR
      rTemp@1103350000 : Record 7010389;
      rAux@1103350001 : Record 7010389;
    BEGIN
      //ModificaImportesAgrupacion;
      rTemp.RESET;
      rTemp.SETRANGE("C¢d. departamento" , rCab."Shortcut Dimension 1 Code");
      rTemp.SETRANGE(Concepto , rTemp.Concepto::Linea);
      rTemp.SETRANGE(Maleta,TRUE);
      IF rTemp.FINDSET THEN
        REPEAT

          rAux.RESET;
          rAux.SETCURRENTKEY("C¢d. departamento",Concepto,"Grupo registro IVA neg.","Grupo registro IVA prod.",Maleta);
          rAux.SETRANGE("C¢d. departamento" , rTemp."C¢d. departamento");
          rAux.SETRANGE("Grupo registro IVA neg." , rTemp."Grupo registro IVA neg.");
          rAux.SETRANGE("Grupo registro IVA prod.", rTemp."Grupo registro IVA prod.");
          rAux.SETRANGE(Maleta,FALSE);

          IF rAux.FINDSET(TRUE) THEN REPEAT
            rAux.Importe             := rAux.Importe - rTemp.Importe;
            rAux."Importe IVA incl." := rAux."Importe IVA incl." - rTemp."Importe IVA incl.";
            rAux.MODIFY(TRUE);
          UNTIL rAux.NEXT=0;

        UNTIL rTemp.NEXT=0;
    END;

    PROCEDURE ChequearTotales@1103350003(rCab@1103350003 : Record 36;VAR lTotalSin@1103350000 : Decimal;VAR lTotalCon@1103350001 : Decimal) : Boolean;
    VAR
      rTemp@1103350006 : Record 7010389;
      lResult@1103350002 : Boolean;
      lTotalCab@1103350004 : Decimal;
      lTotalIVASin@1103350005 : Decimal;
      lTotalIVACon@1103350007 : Decimal;
    BEGIN
      //ChequearTotales()

      // Nos saltamos el control debido a un error en una factura
      //IF USERID = 'ajs' THEN
      //  EXIT(TRUE);

      lResult   := TRUE;

      lTotalSin := 0;
      lTotalCon := 0;

      rTemp.RESET;
      rTemp.SETCURRENTKEY("C¢d. departamento",Concepto,"Grupo registro IVA neg.","Grupo registro IVA prod.");
      rTemp.SETRANGE("C¢d. departamento",rCab."Shortcut Dimension 1 Code");
      rTemp.SETRANGE(Concepto,rTemp.Concepto::Linea);
      IF rTemp.FINDSET THEN
        REPEAT
          lTotalSin := lTotalSin + rTemp.Importe;
          lTotalCon := lTotalCon + rTemp."Importe IVA incl.";
        UNTIL rTemp.NEXT=0;

      lTotalIVASin := 0;
      lTotalIVACon := 0;

      rTemp.RESET;
      rTemp.SETCURRENTKEY("C¢d. departamento",Concepto,"Grupo registro IVA neg.","Grupo registro IVA prod.");
      rTemp.SETRANGE("C¢d. departamento",rCab."Shortcut Dimension 1 Code");
      rTemp.SETRANGE(Concepto,rTemp.Concepto::IVA);
      IF rTemp.FINDSET THEN
        REPEAT
          lTotalIVASin := lTotalIVASin + rTemp.Importe;
          lTotalIVACon := lTotalIVACon + rTemp."Importe IVA incl.";
        UNTIL rTemp.NEXT=0;

      //Chequeamos que el total que hemos acumulado sea igual a la cabecera.
      //Basicamente lo hacemos porque usamos tablas como "Lineas de prefactura". ----> Para asegurar.
      IF rCab."Prices Including VAT" THEN BEGIN
        IF (rCab."Document Type" = rCab."Document Type"::"Credit Memo") AND (rCab."Amount Including VAT" > 0) THEN
            lTotalCab := -1 * rCab."Amount Including VAT"
        ELSE
          lTotalCab :=  rCab."Amount Including VAT";

        IF (lTotalCon <> lTotalCab) OR (lTotalIVACon <> lTotalCab) THEN
          lResult := FALSE;

      END
      ELSE BEGIN
        IF (rCab."Document Type" = rCab."Document Type"::"Credit Memo") AND (rCab.Amount > 0) THEN
            lTotalCab := -1 * rCab.Amount
        ELSE
          lTotalCab :=  rCab.Amount;

        IF (lTotalSin <> lTotalCab) OR (lTotalIVASin <> lTotalCab) THEN
          lResult := FALSE;

      END;

      EXIT(lResult);
    END;

    PROCEDURE ObtenerPais@1103355000(rCab@1103355003 : Record 36) : Code[3];
    VAR
      rLocCli@1103355000 : Record 18;
      rLocPais@1103355004 : Record 9;
      lPais@1103355001 : Code[10];
      lResult@1103355002 : Code[3];
    BEGIN
      //+002

      lPais := rCab."VAT Country/Region Code";

      //... Si no tenemos el c¢digo de pais en la cabecera de factura, la buscamos en la ficha del cliente.
      IF lPais = '' THEN
        IF rLocCli.GET(rCab."Bill-to Customer No.") THEN
          lPais := rLocCli."Country/Region Code";

      //... Obtenemos el valor del campo "EU Country Code".
      IF lPais <> '' THEN
        IF rLocPais.GET(lPais) THEN
          IF rLocPais."EU Country/Region Code" <> '' THEN
            lPais := rLocPais."EU Country/Region Code";

      lResult := COPYSTR(lPais,1,3);

      EXIT(lResult);
    END;

    BEGIN
    {
      <RRT - 14.03.05> Adaptaci¢n a Finhotel 3.70

      001 21.11.07 RRT, INV-111 (ECO02): El campo <Empresa> pasa a ser de 3 caracteres.
      002 RRT 05.05.10, PC-INV10006: Incluir campo pais en fichero IVA.
      003 04.08.10 RRT, INC-50385: El campo CONAMP pasa de 20 a 30 caracteres.
    }
    END.
  }
}
