OBJECT Codeunit 403 Application Launch Management
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=NAVW16.00.01;
  }
  PROPERTIES
  {
    OnRun=BEGIN
            InsertStyleSheets;
          END;

  }
  CODE
  {
    VAR
      Text001@1001 : TextConst 'ENU=No stylesheet has been imported.;ESP=No se ha importado ninguna hoja de estilos.';
      Text002@1002 : TextConst 'ENU=Stylesheets (*.xslt)|*.xslt;ESP=Hojas de estilos (*.xslt)|*.xslt';
      Text003@1003 : TextConst 'ENU=Dear Sirs,;ESP=Estimado se¤or o se¤ora';
      Text004@1005 : TextConst 'ENU=<The text goes here>;ESP=<The text goes here>';
      Text005@1004 : TextConst 'ENU=Sincerely;ESP=Atentamente,';
      Text006@1006 : TextConst 'ENU=Sales Quote;ESP=Oferta de venta';
      Text007@1007 : TextConst 'ENU=Salesperson;ESP=Vendedor';
      Text008@1008 : TextConst 'ENU=Total Amount;ESP=Importe total';
      Text009@1009 : TextConst 'ENU=Order Confirmation;ESP=Confirmaci¢n pedido';
      Text010@1012 : TextConst 'ENU=Microsoft Word;ESP=Microsoft Word';
      Text011@1011 : TextConst 'ENU=Microsoft Excel;ESP=Microsoft Excel';
      Text012@1010 : TextConst 'ENU=Default;ESP=Gen‚rico';
      Text013@1013 : TextConst 'ENU=Contact Card letter for Microsoft Word;ESP=Carta ficha contacto para Microsoft Word';
      Text014@1014 : TextConst 'ENU=Customer Card letter for Microsoft Word;ESP=Carta ficha cliente para Microsoft Word';
      Text015@1015 : TextConst 'ENU=Sales Order Confirmation for Microsoft Word;ESP=Confirmaci¢n pedido ventas para Microsoft Word';
      Text016@1016 : TextConst 'ENU=Sales Quote for Microsoft Word;ESP=Oferta venta para Microsoft Word';
      Text017@1017 : TextConst 'ENU=Vendor Card letter for Microsoft Word;ESP=Carta ficha proveedor para Microsoft Word';
      Text018@1000 : TextConst 'ENU=Internet Explorer;ESP=Internet Explorer';

    PROCEDURE LaunchApp@116(VAR DataXML@1000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60";StylesheetID@1001 : GUID;VAR ApplicationXML@1010 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60") : Boolean;
    VAR
      AppStylesheet@1002 : Record 2000000066;
      StylesheetXML@1004 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60";
      InStream@1003 : InStream;
      id@1005 : Integer;
    BEGIN
      AppStylesheet.SETRANGE("Style Sheet ID",StylesheetID);
      IF NOT AppStylesheet.FIND('-') THEN
        EXIT(FALSE);

      AppStylesheet.CALCFIELDS("Style Sheet");
      AppStylesheet."Style Sheet".CREATEINSTREAM(InStream);
      CREATE(StylesheetXML);
      StylesheetXML.load(InStream);

      EVALUATE(id,GetAttributeValue(DataXML,'Object','id'));
      CASE id OF
        FORM::"Customer Card": AddCustomerLetter(DataXML);
        FORM::"Vendor Card": AddVendorLetter(DataXML);
        FORM::"Contact Card": AddContactLetter(DataXML);
        FORM::"Sales Quote": AddSalesQuote(DataXML);
        FORM::"Sales Order": AddSalesOrder(DataXML);
      END;
      AddLocaleInfo(DataXML);

      DataXML.transformNodeToObject(StylesheetXML,ApplicationXML);

      EXIT(TRUE);
    END;

    PROCEDURE InsertStyleSheets@16();
    VAR
      SendToProgram@1002 : Record 2000000065;
      WordID@1003 : Text[38];
      ExcelID@1004 : Text[38];
      IExploreID@1000 : Text[38];
    BEGIN
      IF NOT SendToProgram.ISEMPTY THEN
        EXIT;

      WordID := '{000209FF-0000-0000-C000-000000000046}';  // defined in fin.stx
      ExcelID := '{00024500-0000-0000-C000-000000000046}';  // defined in fin.stx
      IExploreID := '{7B2AE575-8FF8-4761-9612-D72C447623B8}';
      InsertSendToProgram(WordID,'WINWORD.EXE','%1',Text010);
      InsertSendToProgram(ExcelID,'EXCEL.EXE','%1',Text011);
      InsertSendToProgram(IExploreID,'IEXPLORE.EXE','%1',Text018);

      // Stylesheets for the C/SIDE client
      InsertFormStyleSheet(WordID,Text012,'NavisionFormToWord.xslt',0);
      InsertFormStyleSheet(ExcelID,Text012,'NavisionFormToExcel.xslt',0);
      InsertFormStyleSheet(IExploreID,Text012,'NavisionFormToHTML.xslt',0);
      InsertFormStyleSheet(WordID,Text013,'ContactLetterToWord.xslt',FORM::"Contact Card");
      InsertFormStyleSheet(WordID,Text014,'CustomerLetterToWord.xslt',FORM::"Customer Card");
      InsertFormStyleSheet(WordID,Text015,'SalesOrderConfirmationToWord.xslt',FORM::"Sales Order");
      InsertFormStyleSheet(WordID,Text016,'SalesQuoteToWord.xslt',FORM::"Sales Quote");
      InsertFormStyleSheet(WordID,Text017,'VendorLetterToWord.xslt',FORM::"Vendor Card");

      // Stylesheets for the Dynamics NAV client
      InsertPageStyleSheet(WordID,Text012,'NavisionFormToWord.xslt',0);
      InsertPageStyleSheet(ExcelID,Text012,'NavisionFormToExcel.xslt',0);
      InsertPageStyleSheet(IExploreID,Text012,'NavisionFormToHTML.xslt',0);
    END;

    LOCAL PROCEDURE InsertSendToProgram@17(ProgID@1000 : Text[38];ExeName@1001 : Text[250];Param@1002 : Text[250];Name@1003 : Text[250]);
    VAR
      SendToProgram@1004 : Record 2000000065;
    BEGIN
      SendToProgram.INIT;
      SendToProgram."Program ID" := ProgID;
      SendToProgram.Executable := ExeName;
      SendToProgram.Parameter := Param;
      SendToProgram.Name := Name;
      SendToProgram.INSERT;
    END;

    LOCAL PROCEDURE InsertFormStyleSheet@20(ProgID@1000 : Text[38];Name@1001 : Text[250];FileName2@1002 : Text[100];FormID@1005 : Integer);
    VAR
      StyleSheet@1004 : Record 2000000066;
      FileName@1003 : Text[250];
      RBAutoMgt@1006 : Codeunit 419;
      BLOBRef@1007 : Record 99008535;
    BEGIN
      FileName := APPLICATIONPATH + 'StyleSheets\' + FileName2;
      IF EXISTS(FileName) THEN BEGIN
        StyleSheet.INIT;
        StyleSheet."Style Sheet ID" := CREATEGUID;
        StyleSheet."Object ID" := FormID;
        StyleSheet."Object Type" := StyleSheet."Object Type"::Form;
        StyleSheet."Program ID" := ProgID;
        StyleSheet.Name := Name;
        StyleSheet.Date := TODAY;
        RBAutoMgt.BLOBImport(BLOBRef,FileName,FALSE);
        StyleSheet."Style Sheet" := BLOBRef.Blob;
        StyleSheet.INSERT;
      END;
    END;

    LOCAL PROCEDURE InsertPageStyleSheet@27(ProgID@1000 : Text[38];Name@1001 : Text[250];FileName2@1002 : Text[100];FormID@1005 : Integer);
    VAR
      StyleSheet@1004 : Record 2000000066;
      FileName@1003 : Text[250];
      RBAutoMgt@1006 : Codeunit 419;
      BLOBRef@1007 : Record 99008535;
    BEGIN
      FileName := APPLICATIONPATH + 'StyleSheets\' + FileName2;
      IF EXISTS(FileName) THEN BEGIN
        StyleSheet.INIT;
        StyleSheet."Style Sheet ID" := CREATEGUID;
        StyleSheet."Object ID" := FormID;
        StyleSheet."Object Type" := StyleSheet."Object Type"::Page;
        StyleSheet."Program ID" := ProgID;
        StyleSheet.Name := Name;
        StyleSheet.Date := TODAY;
        RBAutoMgt.BLOBImport(BLOBRef,FileName,FALSE);
        StyleSheet."Style Sheet" := BLOBRef.Blob;
        StyleSheet.INSERT;
      END;
    END;

    PROCEDURE SelectStyleSheet@117(ObjectType@1000 : Integer;ObjectID@1001 : Integer;VAR StyleSheetID@1002 : GUID) : Boolean;
    VAR
      AppSelection@1003 : Form 693;
    BEGIN
      AppSelection.SetObjectID(ObjectType,ObjectID);
      AppSelection.LOOKUPMODE := TRUE;
      IF AppSelection.RUNMODAL = ACTION::LookupOK THEN BEGIN
        StyleSheetID := AppSelection.GetSelectedStyleSheetID;
        EXIT(TRUE)
      END ELSE
        EXIT(FALSE);
    END;

    PROCEDURE ExportStylesheet@2(VAR Stylesheet@1000 : Record 2000000066);
    VAR
      CommonDlg@1001 : Codeunit 412;
      FileName@1002 : Text[250];
      RBAutoMgt@1004 : Codeunit 419;
      BLOBRef@1003 : Record 99008535;
    BEGIN
      Stylesheet.CALCFIELDS("Style Sheet");
      IF NOT Stylesheet."Style Sheet".HASVALUE THEN
        ERROR(Text001);

      BLOBRef.Blob := Stylesheet."Style Sheet";
      RBAutoMgt.BLOBExport(BLOBRef,Stylesheet.Name+'.xslt',TRUE);
    END;

    PROCEDURE AddCompanyInfo@3(VAR DataXML@1000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60");
    VAR
      CompanyInfo@1002 : Record 79;
      ParentNode@1003 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      ChildNode@1005 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      RecRef@1001 : RecordRef;
      FieldRef@1004 : FieldRef;
    BEGIN
      ParentNode := DataXML.documentElement;
      AddElement(ParentNode,'CompanyInfo','',ChildNode);

      CompanyInfo.GET;

      ParentNode := ChildNode;
      AddElement(ParentNode,'Name',CompanyInfo.Name,ChildNode);
      AddElement(ParentNode,'Address',CompanyInfo.Address,ChildNode);
      AddElement(ParentNode,'Address2',CompanyInfo."Address 2",ChildNode);
      AddElement(ParentNode,'PostCode',CompanyInfo."Post Code",ChildNode);
      AddElement(ParentNode,'City',CompanyInfo.City,ChildNode);
      AddElement(ParentNode,'PhoneNo',CompanyInfo."Phone No.",ChildNode);
      AddAttribute(ChildNode,'caption',CompanyInfo.FIELDCAPTION("Phone No."));
      AddElement(ParentNode,'FaxNo',CompanyInfo."Fax No.",ChildNode);
      AddAttribute(ChildNode,'caption',CompanyInfo.FIELDCAPTION("Fax No."));
      AddElement(ParentNode,'VATRegistrationNo',CompanyInfo."VAT Registration No.",ChildNode);
      AddAttribute(ChildNode,'caption',CompanyInfo.FIELDCAPTION("VAT Registration No."));
      AddElement(ParentNode,'GiroNo',CompanyInfo."Giro No.",ChildNode);
      AddAttribute(ChildNode,'caption',CompanyInfo.FIELDCAPTION("Giro No."));
      AddElement(ParentNode,'BankName',CompanyInfo."Bank Name",ChildNode);
      AddAttribute(ChildNode,'caption',CompanyInfo.FIELDCAPTION("Bank Name"));
      AddElement(ParentNode,'BankAccountNo',CompanyInfo."Bank Account No.",ChildNode);
      AddAttribute(ChildNode,'caption',CompanyInfo.FIELDCAPTION("Bank Account No."));
    END;

    PROCEDURE AddCustomerLetter@18(VAR DataXML@1000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60");
    VAR
      DocumentElement@1001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      ChildNode@1002 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 3.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v3.0'.IXMLDOMNode";
      CustCode@1003 : Code[20];
    BEGIN
      DocumentElement := DataXML.documentElement;

      CustCode := GetAttributeValue(DataXML,'//Object/Control/Control/Row[1]/Control[2]','value');
      AddCustomerInfo(DataXML,CustCode);
      AddElement(DocumentElement,'WorkDate',FORMAT(WORKDATE),ChildNode);
      AddElement(DocumentElement,'Salutation',FORMAT(Text003),ChildNode);
      AddElement(DocumentElement,'LetterBody',FORMAT(Text004),ChildNode);
      AddElement(DocumentElement,'ComplimentaryClose',FORMAT(Text005),ChildNode);
      AddCompanyInfo(DataXML);
    END;

    PROCEDURE AddCustomerInfo@15(VAR DataXML@1000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60";CustCode@1007 : Code[20]);
    VAR
      Cust@1003 : Record 18;
      Country@1005 : Record 9;
      SalesPerson@1006 : Record 13;
      ParentNode@1002 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      ChildNode@1001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
    BEGIN
      ParentNode := DataXML.documentElement;
      AddElement(ParentNode,'Customer','',ChildNode);

      IF NOT Cust.GET(CustCode) THEN
        EXIT;

      ParentNode := ChildNode;
      AddElement(ParentNode,'Name',Cust.Name,ChildNode);
      AddElement(ParentNode,'Address',Cust.Address,ChildNode);
      AddElement(ParentNode,'PostCode',Cust."Post Code",ChildNode);
      AddElement(ParentNode,'City',Cust.City,ChildNode);
      AddElement(ParentNode,'Contact',Cust.Contact,ChildNode);
      AddElement(ParentNode,'VATRegistrationNo',Cust."VAT Registration No.",ChildNode);
      AddAttribute(ChildNode,'caption',Cust.FIELDCAPTION("VAT Registration No."));

      IF Country.GET(Cust."Country/Region Code") THEN
        AddElement(ParentNode,'CountryName',Country.Name,ChildNode);

      IF SalesPerson.GET(Cust."Salesperson Code") THEN BEGIN
        AddElement(ParentNode,'SalespersonName',SalesPerson.Name,ChildNode);
        AddAttribute(ChildNode,'caption',Text007);
      END;
    END;

    PROCEDURE AddVendorLetter@12(VAR DataXML@1000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60");
    VAR
      DocumentElement@1001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      ChildNode@1002 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 3.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v3.0'.IXMLDOMNode";
    BEGIN
      DocumentElement := DataXML.documentElement;

      AddVendorInfo(DataXML);
      AddElement(DocumentElement,'WorkDate',FORMAT(WORKDATE),ChildNode);
      AddElement(DocumentElement,'Salutation',FORMAT(Text003),ChildNode);
      AddElement(DocumentElement,'LetterBody',FORMAT(Text004),ChildNode);
      AddElement(DocumentElement,'ComplimentaryClose',FORMAT(Text005),ChildNode);
      AddCompanyInfo(DataXML);
    END;

    PROCEDURE AddVendorInfo@11(VAR DataXML@1000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60");
    VAR
      Vend@1003 : Record 23;
      Country@1005 : Record 9;
      Purchaser@1006 : Record 13;
      ParentNode@1002 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      ChildNode@1001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      VendCode@1004 : Code[20];
    BEGIN
      ParentNode := DataXML.documentElement;
      AddElement(ParentNode,'Vendor','',ChildNode);

      VendCode := GetAttributeValue(DataXML,'//Object/Control/Control/Row[1]/Control[2]','value');

      IF NOT Vend.GET(VendCode) THEN
        EXIT;

      ParentNode := ChildNode;
      AddElement(ParentNode,'Name',Vend.Name,ChildNode);
      AddElement(ParentNode,'Address',Vend.Address,ChildNode);
      AddElement(ParentNode,'PostCode',Vend."Post Code",ChildNode);
      AddElement(ParentNode,'City',Vend.City,ChildNode);

      IF Country.GET(Vend."Country/Region Code") THEN
        AddElement(ParentNode,'CountryName',Country.Name,ChildNode);

      IF Purchaser.GET(Vend."Purchaser Code") THEN
        AddElement(ParentNode,'PurchaserName',Purchaser.Name,ChildNode);
    END;

    PROCEDURE AddContactLetter@7(VAR DataXML@1000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60");
    VAR
      DocumentElement@1001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      ChildNode@1002 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 3.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v3.0'.IXMLDOMNode";
    BEGIN
      DocumentElement := DataXML.documentElement;

      AddContactInfo(DataXML);
      AddElement(DocumentElement,'WorkDate',FORMAT(WORKDATE),ChildNode);
      AddElement(DocumentElement,'Salutation',FORMAT(Text003),ChildNode);
      AddElement(DocumentElement,'LetterBody',FORMAT(Text004),ChildNode);
      AddElement(DocumentElement,'ComplimentaryClose',FORMAT(Text005),ChildNode);

      AddCompanyInfo(DataXML);
    END;

    PROCEDURE AddContactInfo@6(VAR DataXML@1000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60");
    VAR
      Contact@1003 : Record 5050;
      Country@1005 : Record 9;
      Salesperson@1006 : Record 13;
      ParentNode@1002 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      ChildNode@1001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      ContactCode@1004 : Code[20];
    BEGIN
      ParentNode := DataXML.documentElement;
      AddElement(ParentNode,'Contact','',ChildNode);

      ContactCode := GetAttributeValue(DataXML,'//Object/Control/Control/Row[1]/Control[2]','value');

      IF NOT Contact.GET(ContactCode) THEN
        EXIT;

      ParentNode := ChildNode;
      AddElement(ParentNode,'Name',Contact.Name,ChildNode);
      AddElement(ParentNode,'Address',Contact.Address,ChildNode);
      AddElement(ParentNode,'PostCode',Contact."Post Code",ChildNode);
      AddElement(ParentNode,'City',Contact.City,ChildNode);

      IF Country.GET(Contact."Country/Region Code") THEN
        AddElement(ParentNode,'CountryName',Country.Name,ChildNode);

      IF Salesperson.GET(Contact."Salesperson Code") THEN
        AddElement(ParentNode,'SalespersonName',Salesperson.Name,ChildNode);
    END;

    PROCEDURE AddSalesQuote@5(VAR DataXML@1000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60");
    VAR
      SalesHeader@1007 : Record 36;
      DocumentElement@1002 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      ChildNode@1001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 3.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v3.0'.IXMLDOMNode";
      DocumentType@1004 : 'Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order';
      SalesHeaderNo@1005 : Code[20];
      CustCode@1003 : Code[20];
    BEGIN
      DocumentElement := DataXML.documentElement;

      AddElement(DocumentElement,'SalesQuote',FORMAT(Text006),ChildNode);

      SalesHeaderNo := GetAttributeValue(DataXML,'//Object/Control/Control/Row[1]/Control[2]','value');
      IF NOT SalesHeader.GET(DocumentType::Quote,SalesHeaderNo) THEN
        EXIT;

      AddSalesHeaderInfo(DataXML,DocumentType::Quote,SalesHeader."No.");
      AddSalesLineInfo(DataXML,DocumentType::Quote,SalesHeader."No.",SalesHeader."Currency Code");
      AddCustomerInfo(DataXML,SalesHeader."Sell-to Customer No.");
      AddResponsibilityCenterInfo(DataXML,SalesHeader."Responsibility Center");
      AddPaymentTermsInfo(DataXML,SalesHeader."Payment Terms Code");
      AddShipmentMtdInfo(DataXML,SalesHeader."Shipment Method Code");
      AddCompanyInfo(DataXML);
      AddElement(DocumentElement,'WorkDate',FORMAT(WORKDATE,0,4),ChildNode);
    END;

    PROCEDURE AddSalesOrder@13(VAR DataXML@1000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60");
    VAR
      SalesHeader@1007 : Record 36;
      DocumentElement@1002 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      ChildNode@1001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 3.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v3.0'.IXMLDOMNode";
      DocumentType@1004 : 'Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order';
      SalesHeaderNo@1005 : Code[20];
      CustCode@1003 : Code[20];
    BEGIN
      DocumentElement := DataXML.documentElement;

      AddElement(DocumentElement,'SalesOrder',FORMAT(Text009),ChildNode);

      SalesHeaderNo := GetAttributeValue(DataXML,'//Object/Control/Control/Row[1]/Control[2]','value');
      IF NOT SalesHeader.GET(DocumentType::Order,SalesHeaderNo) THEN
        EXIT;

      AddSalesHeaderInfo(DataXML,DocumentType::Order,SalesHeader."No.");
      AddSalesLineInfo(DataXML,DocumentType::Order,SalesHeader."No.",SalesHeader."Currency Code");
      AddCustomerInfo(DataXML,SalesHeader."Sell-to Customer No.");
      AddResponsibilityCenterInfo(DataXML,SalesHeader."Responsibility Center");
      AddPaymentTermsInfo(DataXML,SalesHeader."Payment Terms Code");
      AddShipmentMtdInfo(DataXML,SalesHeader."Shipment Method Code");
      AddCompanyInfo(DataXML);
      AddElement(DocumentElement,'WorkDate',FORMAT(WORKDATE,0,4),ChildNode);
    END;

    PROCEDURE AddSalesHeaderInfo@14(VAR DataXML@1000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60";DocumentType@1004 : 'Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order';SalesHeaderNo@1005 : Code[20]);
    VAR
      SalesHeader@1006 : Record 36;
      ParentNode@1003 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      ChildNode@1002 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
    BEGIN
      ParentNode := DataXML.documentElement;
      AddElement(ParentNode,'SalesHeader','',ChildNode);

      IF NOT SalesHeader.GET(DocumentType,SalesHeaderNo) THEN
        EXIT;

      ParentNode := ChildNode;

      AddElement(ParentNode,'SalesHeaderNo',FORMAT(SalesHeader."No."),ChildNode);
      AddAttribute(ChildNode,'caption',FORMAT(SalesHeader."Document Type") + ' ' + SalesHeader.FIELDCAPTION("No."));
      AddElement(ParentNode,'BillToCustomerNo',SalesHeader."Bill-to Customer No.",ChildNode);
      AddAttribute(ChildNode,'caption',SalesHeader.FIELDCAPTION("Bill-to Customer No."));
      AddElement(ParentNode,'ShipmentDate',FORMAT(SalesHeader."Shipment Date"),ChildNode);
      AddAttribute(ChildNode,'caption',SalesHeader.FIELDCAPTION("Shipment Date"));
      AddElement(ParentNode,'PriceIncludingVAT',FORMAT(SalesHeader."Prices Including VAT"),ChildNode);
      AddAttribute(ChildNode,'caption',SalesHeader.FIELDCAPTION("Prices Including VAT"));
    END;

    PROCEDURE AddSalesLineInfo@8(VAR DataXML@1000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60";DocumentType@1004 : 'Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order';SalesHeaderNo@1005 : Code[20];CurrencyCode@1009 : Code[10]);
    VAR
      SalesLine@1006 : Record 37;
      Currency@1010 : Record 4;
      ParentNode@1003 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      ChildNode@1002 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      ChildNode1@1001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      LineAmount@1007 : Decimal;
      InvDiscountAmount@1008 : Decimal;
      AmountFormatStr@1011 : Text[50];
    BEGIN
      ParentNode := DataXML.documentElement;
      AddElement(ParentNode,'SalesLines','',ChildNode);

      IF CurrencyCode <> '' THEN
        Currency.GET(CurrencyCode)
      ELSE
        Currency.INIT;
      AmountFormatStr := STRSUBSTNO('<Precision,%1><Standard Format,0>',Currency."Amount Decimal Places");

      SalesLine.SETRANGE("Document Type",DocumentType);
      SalesLine.SETRANGE("Document No.",SalesHeaderNo);

      ParentNode := ChildNode;
      IF SalesLine.FIND('-') THEN BEGIN
        REPEAT
          ParentNode := ChildNode;
          AddElement(ParentNode,'SalesLine','',ChildNode1);
          ParentNode := ChildNode1;
          AddElement(ParentNode,'SalesLineNo',FORMAT(SalesLine."No."),ChildNode1);
          AddAttribute(ChildNode1,'caption',SalesLine.FIELDCAPTION("No."));
          AddElement(ParentNode,'Description',FORMAT(SalesLine.Description),ChildNode1);
          AddAttribute(ChildNode1,'caption',SalesLine.FIELDCAPTION(Description));
          AddElement(ParentNode,'Quantity',FORMAT(SalesLine.Quantity),ChildNode1);
          AddAttribute(ChildNode1,'caption',SalesLine.FIELDCAPTION(Quantity));
          AddElement(ParentNode,'UnitOfMeasure',FORMAT(SalesLine."Unit of Measure"),ChildNode1);
          AddAttribute(ChildNode1,'caption',SalesLine.FIELDCAPTION("Unit of Measure"));
          AddElement(ParentNode,'UnitPrice',FORMAT(SalesLine."Unit Price"),ChildNode1);
          AddAttribute(ChildNode1,'caption',SalesLine.FIELDCAPTION("Unit Price"));
          AddElement(ParentNode,'LineDiscountPercent',FORMAT(SalesLine."Line Discount %"),ChildNode1);
          AddAttribute(ChildNode1,'caption',SalesLine.FIELDCAPTION("Line Discount %"));
          AddElement(ParentNode,'AllowInvoiceDisc',FORMAT(SalesLine."Allow Invoice Disc."),ChildNode1);
          AddAttribute(ChildNode1,'caption',SalesLine.FIELDCAPTION("Allow Invoice Disc."));
          AddElement(ParentNode,'VATIdentifier',FORMAT(SalesLine."VAT Identifier"),ChildNode1);
          AddAttribute(ChildNode1,'caption',SalesLine.FIELDCAPTION("VAT Identifier"));
          AddElement(ParentNode,'Amount',FORMAT(SalesLine."Line Amount",0,AmountFormatStr),ChildNode1);
          AddAttribute(ChildNode1,'caption',SalesLine.FIELDCAPTION(Amount));
          LineAmount := LineAmount + SalesLine."Line Amount";
          InvDiscountAmount := InvDiscountAmount + SalesLine."Inv. Discount Amount";
        UNTIL SalesLine.NEXT = 0;
        AddElement(
          ChildNode,'TotalAmount',FORMAT(LineAmount - InvDiscountAmount,0,AmountFormatStr),ChildNode1);
        AddAttribute(ChildNode1,'caption',Text008);
      END;
    END;

    PROCEDURE AddResponsibilityCenterInfo@41(VAR DataXML@1000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60";ResponsibilityCenterCode@1001 : Code[10]);
    VAR
      ResponsibilityCenter@1004 : Record 5714;
      ParentNode@1003 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      ChildNode@1002 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
    BEGIN
      ParentNode := DataXML.documentElement;
      AddElement(ParentNode,'ResponsibilityCenter','',ChildNode);

      IF NOT ResponsibilityCenter.GET(ResponsibilityCenterCode) THEN
        EXIT;

      ParentNode := ChildNode;
      AddElement(ParentNode,'Name',ResponsibilityCenter.Name,ChildNode);
      AddElement(ParentNode,'Contact',ResponsibilityCenter.Contact,ChildNode);
      AddElement(ParentNode,'Address',ResponsibilityCenter.Address,ChildNode);
      AddElement(ParentNode,'PostCode',ResponsibilityCenter."Post Code",ChildNode);
      AddElement(ParentNode,'City',ResponsibilityCenter.City,ChildNode);
    END;

    PROCEDURE AddPaymentTermsInfo@9(VAR DataXML@1000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60";PaymentTermCode@1001 : Code[10]);
    VAR
      PaymentTerm@1004 : Record 3;
      ParentNode@1003 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      ChildNode@1002 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
    BEGIN
      ParentNode := DataXML.documentElement;
      AddElement(ParentNode,'PaymentTerm','',ChildNode);

      IF NOT PaymentTerm.GET(PaymentTermCode) THEN
        EXIT;

      ParentNode := ChildNode;
      AddElement(ChildNode,'Description',FORMAT(PaymentTerm.Description),ChildNode);
      AddAttribute(ChildNode,'caption',PaymentTerm.TABLECAPTION);
    END;

    PROCEDURE AddShipmentMtdInfo@10(VAR DataXML@1004 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60";ShipmentMethodCode@1003 : Code[10]);
    VAR
      ShipmentMethod@1002 : Record 10;
      ParentNode@1001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      ChildNode@1000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
    BEGIN
      ParentNode := DataXML.documentElement;
      AddElement(ParentNode,'ShipmentMethod','',ChildNode);

      IF NOT ShipmentMethod.GET(ShipmentMethodCode) THEN
        EXIT;

      ParentNode := ChildNode;
      AddElement(ChildNode,'Description',FORMAT(ShipmentMethod.Description),ChildNode);
      AddAttribute(ChildNode,'caption',ShipmentMethod.TABLECAPTION);
    END;

    PROCEDURE AddLocaleInfo@21(VAR DataXML@1000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D969C0-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.Unknown Class");
    VAR
      ParentNode@1003 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      ChildNode@1001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      Date2@1102601000 : Date;
    BEGIN
      ParentNode := DataXML.documentElement;
      ChildNode := DataXML.createElement('DecimalSeparator');
      ChildNode.text := COPYSTR(FORMAT(1.1),2,1);
      ParentNode.appendChild(ChildNode);
      ChildNode := DataXML.createElement('ThousandSeparator');
      ChildNode.text := COPYSTR(FORMAT(1111.1),2,1);
      ParentNode.appendChild(ChildNode);
      Date2 := 111111D;
      ChildNode := DataXML.createElement('DateSeparator1');
      ChildNode.text := COPYSTR(FORMAT(Date2),3,1);
      ParentNode.appendChild(ChildNode);
      ChildNode := DataXML.createElement('DateSeparator2');
      ChildNode.text := COPYSTR(FORMAT(Date2),6,1);
      ParentNode.appendChild(ChildNode);
    END;

    PROCEDURE AddElement@4(VAR ParentNode@1001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";NodeName@1002 : Text[250];NodeText@1003 : Text[250];VAR CreatedChildNode@1004 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode");
    VAR
      ChildNode@1006 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
    BEGIN
      ChildNode := ParentNode.ownerDocument.createNode('element', NodeName, '');
      ChildNode.text := NodeText;
      ParentNode.appendChild(ChildNode);
      CreatedChildNode := ChildNode;
    END;

    PROCEDURE GetAttributeValue@1(VAR DataXML@1000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60";XPath@1001 : Text[250];AttributeName@1005 : Text[250]) : Text[1024];
    VAR
      Node@1004 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      Attributes@1003 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF83-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNamedNodeMap";
      AttributeNode@1002 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
    BEGIN
      Node := DataXML.selectSingleNode(XPath);
      Attributes := Node.attributes();
      AttributeNode := Attributes.getNamedItem(AttributeName);
      EXIT(AttributeNode.text);
    END;

    PROCEDURE AddAttribute@23(VAR DOMNode@1020001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";Name@1020002 : Text[250];Value@1020003 : Text[250]);
    VAR
      TempAttribute@1020004 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
    BEGIN
      TempAttribute := DOMNode.ownerDocument.createAttribute(Name);
      IF Value <> '' THEN
        TempAttribute.nodeValue := Value;
      DOMNode.attributes.setNamedItem(TempAttribute);
      CLEAR(TempAttribute);
    END;

    BEGIN
    END.
  }
}
