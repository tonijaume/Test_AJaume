OBJECT Codeunit 7009718 Funciones contrato transfer
{
  OBJECT-PROPERTIES
  {
    Date=19/03/15;
    Time=17:08:15;
    Modified=Yes;
    Version List=AIC2009,COM;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1103355001 : TextConst 'ENU=Item posting goup must be indicated;ESP=Se debe indicar un Grupo contable producto.';
      Text001@1103355002 : TextConst 'ENU=Payment terms code must be indicated;ESP=Se debe indicar un Codigo de Terminos de pago.';
      Text002@1103355003 : TextConst 'ENU=Payment method must be indicated;ESP=Se debe indicar un Codigo de Formas de pago.';
      Text003@1103355004 : TextConst 'ENU=Serial code must be indicated;ESP=Se debe indicar un codigo de serie.';
      Text004@1103355005 : TextConst 'ENU=Starting date overlaps with the\;ESP=La fecha de inicio de este contrato se solapa con el\';
      Text005@1103355006 : TextConst 'ENU=contract %1-%2;ESP=contrato %1-%2.';
      Text006@1103355007 : TextConst 'ENU=Final date of this contract overlaps with the\;ESP=La fecha de final de este contrato se solapa con el\';
      Text007@1103355008 : TextConst 'ENU=This contract overlaps with the contract %1-%2;ESP=Este contrato se solapa con el contrato %1-%2.';
      Text008@1103355009 : TextConst 'ENU=Must confirm the contract before activate the prices;ESP=Debe confirmar el contrato antes de activar los precios.';
      Text009@1103355010 : TextConst 'ENU=This price overlaps with another entered price;ESP=Este precio se solapa con otro precio ya introducido.';
      Text010@1103355011 : TextConst 'ENU=This price overlaps with another entered price;ESP=Este precio se solapa con otro precioya introducido.';
      Text011@1103355012 : TextConst 'ENU=" NEW PURCHASE CONTRACT\\";ESP=" NUEVO CONTRATO COMPRA\\"';
      Text012@1103355013 : TextConst 'ENU=" Contract.: #1########";ESP=" Contrato.: #1########"';
      Text013@1103355014 : TextConst 'ENU=Contract %1 already exists;ESP=El contrato %1 ya existe.';
      Text014@1103355015 : TextConst 'ENU=Copy purchase contract %1 over the new contract %2?;ESP=Copiar el contrato Compra %1 sobre el nuevo contrato %2?';
      Text015@1103355016 : TextConst 'ENU=" NEW SALE CONTRACT\\";ESP=" NUEVO CONTRATO VENTA\\"';
      Text016@1103355017 : TextConst 'ENU=" Contract: #1########";ESP=" Contrato: #1########"';
      Text017@1103355018 : TextConst 'ENU=Copy sale contract %1 on the new contract %2?;ESP=Copiar contrato Venta %1 sobre el nuevo contrato %2?';
      Ventana@1103355000 : Dialog;
      Text018@1000000000 : TextConst 'ENU=Starting and Ending Contract Date canït be empty.;ESP=Fecha inicio ni Fecha fin contrato pueden estar en blanco.';
      Text019@1000000001 : TextConst 'ENU=Process cancelled;ESP=Proceso cancelado';
      Text020@1000000002 : TextConst 'ENU=Enter the differnet ranges (0 to end): #1#######;ESP=Introduzca los diferentes rangos (0 para acabar): #1#######';
      Text021@1000000003 : TextConst 'ENU=There is no conversion for the zone %1 in the contract.;ESP=No existe conversion para la zona %1 en el contrato.';

    PROCEDURE confirmar_contrato_compra@1(Contrato@1103355000 : Record 7009787) : Boolean;
    VAR
      rConC@1103355001 : Record 7009787;
    BEGIN
      // confirmar_contrato_compra

      IF (Contrato.Proveedor = '') OR
         (Contrato.Transportista = '') OR
         (Contrato."Fecha inicio contrato" = 0D) OR
         (Contrato."Fecha final contrato" = 0D) THEN
        EXIT;

      IF Contrato."Gr. registro IVA Producto" = '' THEN
      BEGIN
        MESSAGE(Text000);
        EXIT;
      END;
      IF Contrato."Cod. Terminos Pago" = '' THEN
      BEGIN
        MESSAGE(Text001);
        EXIT;
      END;
      IF Contrato."Cod. Formas Pago" = '' THEN
      BEGIN
        MESSAGE(Text002);
        EXIT;
      END;

      rConC.RESET;
      rConC.SETRANGE (Delegacion             , Contrato.Delegacion);
      rConC.SETRANGE (Transportista          , Contrato.Transportista);
      rConC.SETFILTER("N§ Contrato compra"   , '<>%1', Contrato."N§ Contrato compra");
      rConC.SETFILTER("Fecha inicio contrato", '<=%1', Contrato."Fecha inicio contrato");
      rConC.SETFILTER("Fecha final contrato" , '>=%1', Contrato."Fecha inicio contrato");
      //-$005rConC.SETRANGE ("OLD_Punto Origen/Destino" , Contrato."OLD_Punto Origen/Destino");
      rConC.SETRANGE (Confirmado             , TRUE);
      IF rConC.FINDFIRST THEN
        ERROR(Text004 +
              Text005, rConC.Delegacion, rConC."N§ Contrato compra");

      rConC.RESET;
      rConC.SETRANGE (Delegacion             , Contrato.Delegacion);
      rConC.SETRANGE (Transportista          , Contrato.Transportista);
      rConC.SETFILTER("N§ Contrato compra"   , '<>%1', Contrato."N§ Contrato compra");
      rConC.SETFILTER("Fecha inicio contrato", '<=%1', Contrato."Fecha final contrato");
      rConC.SETFILTER("Fecha final contrato" , '>=%1', Contrato."Fecha final contrato");
      //-$005rConC.SETRANGE ("OLD_Punto Origen/Destino" , Contrato."OLD_Punto Origen/Destino");
      rConC.SETRANGE (Confirmado             , TRUE);
      IF rConC.FINDFIRST THEN
        ERROR(Text006+
              Text005, rConC.Delegacion, rConC."N§ Contrato compra");

      rConC.RESET;
      rConC.SETRANGE (Delegacion             , Contrato.Delegacion);
      rConC.SETRANGE (Transportista          , Contrato.Transportista);
      rConC.SETFILTER("N§ Contrato compra"   , '<>%1', Contrato."N§ Contrato compra");
      rConC.SETFILTER("Fecha inicio contrato", '>=%1', Contrato."Fecha inicio contrato");
      rConC.SETFILTER("Fecha final contrato" , '<=%1', Contrato."Fecha final contrato");
      //-$005rConC.SETRANGE ("OLD_Punto Origen/Destino" , Contrato."OLD_Punto Origen/Destino");
      rConC.SETRANGE (Confirmado             , TRUE);
      IF rConC.FINDFIRST THEN
        ERROR(Text007, rConC.Delegacion, rConC."N§ Contrato compra");
      EXIT(TRUE);
    END;

    PROCEDURE confirmar_contrato_venta@3(Contrato@1103355000 : Record 7009788) : Boolean;
    VAR
      rConV@1103355001 : Record 7009788;
    BEGIN
      // confirmar_contrato_venta

      IF (Contrato.Cliente = '') OR
         (Contrato.TourOperador = '') OR
         (Contrato."Fecha inicio contrato" = 0D) OR
         (Contrato."Fecha final contrato" = 0D) THEN
        EXIT;

      IF Contrato."Gr. Registro IVA Producto" = '' THEN
      BEGIN
        MESSAGE(Text000);
        EXIT;
      END;

      IF Contrato."Cod. Terminos Pago" = '' THEN
      BEGIN
        MESSAGE(Text001);
        EXIT;
      END;

      IF Contrato."Cod. Formas Pago" = '' THEN
      BEGIN
        MESSAGE(Text002);
        EXIT;
      END;

      //-$009IF Contrato."O_Cod. Serie" = '' THEN
      //-$009BEGIN
      //-$009  MESSAGE(Text003);
      //-$009  EXIT;
      //-$009END;

      rConV.RESET;
      rConV.SETRANGE (Delegacion             , Contrato.Delegacion);
      rConV.SETRANGE (TourOperador           , Contrato.TourOperador);
      rConV.SETFILTER("N§ Contrato Venta"    , '<>%1', Contrato."N§ Contrato Venta");
      rConV.SETFILTER("Fecha inicio contrato", '<=%1', Contrato."Fecha inicio contrato");
      rConV.SETFILTER("Fecha final contrato" , '>=%1', Contrato."Fecha inicio contrato");
      //-$005rConV.SETRANGE ("OLD_Punto Origen/Destino" , Contrato."OLD_Punto Origen/Destino");
      rConV.SETRANGE ("Tipo Precio"          , Contrato."Tipo Precio");
      rConV.SETRANGE (Comercializadora       , Contrato.Comercializadora); //+$011
      rConV.SETRANGE (Confirmado             , TRUE);
      IF rConV.FINDFIRST THEN
        ERROR(Text004+
              Text005, rConV.Delegacion, rConV."N§ Contrato Venta");

      rConV.SETFILTER("Fecha inicio contrato", '<=%1', Contrato."Fecha final contrato");
      rConV.SETFILTER("Fecha final contrato" , '>=%1', Contrato."Fecha final contrato");
      IF rConV.FINDFIRST THEN
        ERROR(Text006+
              Text005, rConV.Delegacion, rConV."N§ Contrato Venta");

      rConV.SETFILTER("Fecha inicio contrato", '>=%1', Contrato."Fecha inicio contrato");
      rConV.SETFILTER("Fecha final contrato" , '<=%1', Contrato."Fecha final contrato");
      IF rConV.FINDFIRST THEN
        ERROR(Text007, rConV.Delegacion, rConV."N§ Contrato Venta");
      EXIT(TRUE);
    END;

    PROCEDURE activar_precio_zona_compra@2(Precio@1103355000 : Record 7009789) : Boolean;
    VAR
      rPrecio@1103355001 : Record 7009789;
      rConC@1103355002 : Record 7009787;
    BEGIN
      // activar_precio_zona_compra

      IF rConC.GET(Precio.Delegacion, Precio."N§ Contrato") THEN
      BEGIN
        IF NOT rConC.Confirmado THEN
          ERROR(Text008);
      END;

      IF (Precio."Fecha desde" = 0D) OR (Precio."Fecha hasta" = 0D) OR
         (Precio.Destino = '') OR (Precio.Origen = '') THEN
        EXIT(FALSE);

      rPrecio.RESET;
      rPrecio.SETRANGE (Delegacion               , Precio.Delegacion);
      rPrecio.SETRANGE ("N§ Contrato"            , Precio."N§ Contrato");
      rPrecio.SETRANGE ("Codigo precio"          , Precio."Codigo precio");
      rPrecio.SETRANGE (Origen                   , Precio.Origen); //+$006
      rPrecio.SETRANGE (Destino                  , Precio.Destino);
      rPrecio.SETRANGE ("Tipo vehiculo"          , Precio."Tipo vehiculo");
      rPrecio.SETRANGE ("Tipo elemento"          , Precio."Tipo elemento");
      rPrecio.SETRANGE ("Tipo servicio"          , Precio."Tipo servicio"); //+$002
      rPrecio.SETRANGE (Activo                   , TRUE);
      rPrecio.SETFILTER("Fecha desde"            , '<=%1', Precio."Fecha desde");
      rPrecio.SETFILTER("Fecha hasta"            , '>=%1', Precio."Fecha desde");
      rPrecio.SETFILTER("Orden precio"           , '<>%1', Precio."Orden precio");
      IF rPrecio.FINDFIRST THEN
      BEGIN
        rPrecio.SETFILTER("Rango desde", '<=%1', Precio."Rango desde");
        rPrecio.SETFILTER("Rango hasta", '>=%1', Precio."Rango desde");
        IF rPrecio.FINDFIRST THEN
          ERROR(Text009);
        rPrecio.SETFILTER("Rango desde", '<=%1', Precio."Rango hasta");
        rPrecio.SETFILTER("Rango hasta", '>=%1', Precio."Rango hasta");
        IF rPrecio.FINDFIRST THEN
          ERROR(Text009);
        rPrecio.SETFILTER("Rango desde", '>=%1', Precio."Rango desde");
        rPrecio.SETFILTER("Rango hasta", '<=%1', Precio."Rango hasta");
        IF rPrecio.FINDFIRST THEN
          ERROR(Text009);
      END;

      rPrecio.RESET;
      rPrecio.SETRANGE (Delegacion               , Precio.Delegacion);
      rPrecio.SETRANGE ("N§ Contrato"            , Precio."N§ Contrato");
      rPrecio.SETRANGE ("Codigo precio"          , Precio."Codigo precio");
      rPrecio.SETRANGE (Origen                   , Precio.Origen); //+$006
      rPrecio.SETRANGE (Destino                  , Precio.Destino);
      rPrecio.SETRANGE ("Tipo vehiculo"          , Precio."Tipo vehiculo");
      rPrecio.SETRANGE ("Tipo elemento"          , Precio."Tipo elemento");
      rPrecio.SETRANGE ("Tipo servicio"          , Precio."Tipo servicio"); //+$002
      rPrecio.SETRANGE (Activo                   , TRUE);
      rPrecio.SETFILTER("Fecha desde"            , '<=%1', Precio."Fecha hasta");
      rPrecio.SETFILTER("Fecha hasta"            , '>=%1', Precio."Fecha hasta");
      rPrecio.SETFILTER("Orden precio"           , '<>%1', Precio."Orden precio");
      IF rPrecio.FINDFIRST THEN
      BEGIN
        rPrecio.SETFILTER("Rango desde", '<=%1', Precio."Rango desde");
        rPrecio.SETFILTER("Rango hasta", '>=%1', Precio."Rango desde");
        IF rPrecio.FINDFIRST THEN
          ERROR(Text009);
        rPrecio.SETFILTER("Rango desde", '<=%1', Precio."Rango hasta");
        rPrecio.SETFILTER("Rango hasta", '>=%1', Precio."Rango hasta");
        IF rPrecio.FINDFIRST THEN
          ERROR(Text009);
        rPrecio.SETFILTER("Rango desde", '>=%1', Precio."Rango desde");
        rPrecio.SETFILTER("Rango hasta", '<=%1', Precio."Rango hasta");
        IF rPrecio.FINDFIRST THEN
          ERROR(Text009);
      END;

      rPrecio.RESET;
      rPrecio.SETRANGE (Delegacion               , Precio.Delegacion);
      rPrecio.SETRANGE ("N§ Contrato"            , Precio."N§ Contrato");
      rPrecio.SETRANGE ("Codigo precio"          , Precio."Codigo precio");
      rPrecio.SETRANGE (Origen                   , Precio.Origen); //+$006
      rPrecio.SETRANGE (Destino                  , Precio.Destino);
      rPrecio.SETRANGE ("Tipo vehiculo"          , Precio."Tipo vehiculo");
      rPrecio.SETRANGE ("Tipo elemento"          , Precio."Tipo elemento");
      rPrecio.SETRANGE ("Tipo servicio"          , Precio."Tipo servicio"); //+$002
      rPrecio.SETRANGE (Activo                   , TRUE);
      rPrecio.SETFILTER("Fecha desde"            , '>=%1', Precio."Fecha desde");
      rPrecio.SETFILTER("Fecha hasta"            , '<=%1', Precio."Fecha hasta");
      rPrecio.SETFILTER("Orden precio"           , '<>%1', Precio."Orden precio");
      IF rPrecio.FINDFIRST THEN
      BEGIN
        rPrecio.SETFILTER("Rango desde", '<=%1', Precio."Rango desde");
        rPrecio.SETFILTER("Rango hasta", '>=%1', Precio."Rango desde");
        IF rPrecio.FINDFIRST THEN
          ERROR(Text009);
        rPrecio.SETFILTER("Rango desde", '<=%1', Precio."Rango hasta");
        rPrecio.SETFILTER("Rango hasta", '>=%1', Precio."Rango hasta");
        IF rPrecio.FINDFIRST THEN
          ERROR(Text009);
        rPrecio.SETFILTER("Rango desde", '>=%1', Precio."Rango desde");
        rPrecio.SETFILTER("Rango hasta", '<=%1', Precio."Rango hasta");
        IF rPrecio.FINDFIRST THEN
          ERROR(Text009);
      END;
      rPrecio.RESET;

      //. Si es el precio por pax activamos tambien los precios relacionados
      //-$006IF (Precio."Tipo aplicacion" = Precio."Tipo aplicacion"::Pax) AND (Precio."Tipo elemento" = '') THEN
      //-$006BEGIN
      //-$006  rPrecio.RESET;
      //-$006  rPrecio.SETRANGE (Delegacion         , Precio.Delegacion);
      //-$006  rPrecio.SETRANGE ("N§ Contrato"      , Precio."N§ Contrato");
      //-$006  rPrecio.SETRANGE ("Codigo precio"    , Precio."Codigo precio");
      //-$006  rPrecio.SETRANGE ("old_Orden dependiente", Precio."Orden precio");
      //-$006  rPrecio.SETFILTER("Tipo elemento"    , '<>%1', '');
      //-$006  IF rPrecio.FINDSET THEN
      //-$006    rPrecio.MODIFYALL(Activo, TRUE);
      //-$006END;

      EXIT(TRUE);
    END;

    PROCEDURE activar_suplemento_compra@4(Precio@1103355000 : Record 7009789) : Boolean;
    VAR
      rPrecio@1103355001 : Record 7009789;
      rConC@1103355002 : Record 7009787;
    BEGIN
      // activar_suplemento_compra

      IF rConC.GET(Precio.Delegacion, Precio."N§ Contrato") THEN
      BEGIN
        IF NOT rConC.Confirmado THEN
          ERROR(Text008);
      END;

      IF (Precio."Fecha desde" = 0D) OR (Precio."Fecha hasta" = 0D) THEN
        EXIT(FALSE);

      rPrecio.RESET;
      rPrecio.SETRANGE (Delegacion     , Precio.Delegacion);
      rPrecio.SETRANGE ("N§ Contrato"  , Precio."N§ Contrato");
      rPrecio.SETRANGE ("Codigo precio", Precio."Codigo precio");
      rPrecio.SETRANGE (Origen         , Precio.Origen); //+$006
      rPrecio.SETRANGE (Destino        , Precio.Destino);
      rPrecio.SETRANGE ("Tipo elemento", Precio."Tipo elemento");
      rPrecio.SETRANGE (Activo         , TRUE);
      rPrecio.SETFILTER("Fecha desde"  , '<=%1', Precio."Fecha desde");
      rPrecio.SETFILTER("Fecha hasta"  , '>=%1', Precio."Fecha desde");
      rPrecio.SETFILTER("Orden precio" , '<>%1', Precio."Orden precio");
      IF rPrecio.FIND('-') THEN
      BEGIN
        rPrecio.SETFILTER("Rango desde", '<=%1', Precio."Rango desde");
        rPrecio.SETFILTER("Rango hasta", '>=%1', Precio."Rango desde");
        IF rPrecio.FIND('-') THEN
          ERROR(Text009);
        rPrecio.SETFILTER("Rango desde", '<=%1', Precio."Rango hasta");
        rPrecio.SETFILTER("Rango hasta", '>=%1', Precio."Rango hasta");
        IF rPrecio.FIND('-') THEN
          ERROR(Text009);
        rPrecio.SETFILTER("Rango desde", '>=%1', Precio."Rango desde");
        rPrecio.SETFILTER("Rango hasta", '<=%1', Precio."Rango hasta");
        IF rPrecio.FIND('-') THEN
          ERROR(Text009);
      END;

      rPrecio.RESET;
      rPrecio.SETRANGE (Delegacion     , Precio.Delegacion);
      rPrecio.SETRANGE ("N§ Contrato"  , Precio."N§ Contrato");
      rPrecio.SETRANGE ("Codigo precio", Precio."Codigo precio");
      rPrecio.SETRANGE (Origen         , Precio.Origen); //+$006
      rPrecio.SETRANGE (Destino         , Precio.Destino);
      rPrecio.SETRANGE ("Tipo elemento", Precio."Tipo elemento");
      rPrecio.SETRANGE (Activo         , TRUE);
      rPrecio.SETFILTER("Fecha desde"  , '<=%1', Precio."Fecha hasta");
      rPrecio.SETFILTER("Fecha hasta"  , '>=%1', Precio."Fecha hasta");
      rPrecio.SETFILTER("Orden precio" , '<>%1', Precio."Orden precio");
      IF rPrecio.FIND('-') THEN
      BEGIN
        rPrecio.SETFILTER("Rango desde", '<=%1', Precio."Rango desde");
        rPrecio.SETFILTER("Rango hasta", '>=%1', Precio."Rango desde");
        IF rPrecio.FIND('-') THEN
          ERROR(Text009);
        rPrecio.SETFILTER("Rango desde", '<=%1', Precio."Rango hasta");
        rPrecio.SETFILTER("Rango hasta", '>=%1', Precio."Rango hasta");
        IF rPrecio.FIND('-') THEN
          ERROR(Text009);
        rPrecio.SETFILTER("Rango desde", '>=%1', Precio."Rango desde");
        rPrecio.SETFILTER("Rango hasta", '<=%1', Precio."Rango hasta");
        IF rPrecio.FIND('-') THEN
          ERROR(Text009);
      END;

      rPrecio.RESET;
      rPrecio.SETRANGE (Delegacion     , Precio.Delegacion);
      rPrecio.SETRANGE ("N§ Contrato"  , Precio."N§ Contrato");
      rPrecio.SETRANGE ("Codigo precio", Precio."Codigo precio");
      rPrecio.SETRANGE (Origen         , Precio.Origen); //+$006
      rPrecio.SETRANGE (Destino        , Precio.Destino);
      rPrecio.SETRANGE ("Tipo elemento", Precio."Tipo elemento");
      rPrecio.SETRANGE (Activo         , TRUE);
      rPrecio.SETFILTER("Fecha desde"  , '>=%1', Precio."Fecha desde");
      rPrecio.SETFILTER("Fecha hasta"  , '<=%1', Precio."Fecha hasta");
      rPrecio.SETFILTER("Orden precio" , '<>%1', Precio."Orden precio");
      IF  rPrecio.FIND('-') THEN
      BEGIN
        rPrecio.SETFILTER("Rango desde", '<=%1', Precio."Rango desde");
        rPrecio.SETFILTER("Rango hasta", '>=%1', Precio."Rango desde");
        IF rPrecio.FIND('-') THEN
          ERROR(Text009);
        rPrecio.SETFILTER("Rango desde", '<=%1', Precio."Rango hasta");
        rPrecio.SETFILTER("Rango hasta", '>=%1', Precio."Rango hasta");
        IF rPrecio.FIND('-') THEN
          ERROR(Text010);
        rPrecio.SETFILTER("Rango desde", '>=%1', Precio."Rango desde");
        rPrecio.SETFILTER("Rango hasta", '<=%1', Precio."Rango hasta");
        IF rPrecio.FIND('-') THEN
          ERROR(Text009);
      END;
      rPrecio.RESET;
      EXIT(TRUE);
    END;

    PROCEDURE activar_precio_zona_venta@8(prPrecio@1103355000 : Record 7009790) : Boolean;
    VAR
      lrPrecio@1103355001 : Record 7009790;
      lrConV@1103355002 : Record 7009788;
    BEGIN
      // activar_precio_zona_venta

      IF lrConV.GET(prPrecio.Delegacion, prPrecio."N§ Contrato") THEN
      BEGIN
        IF NOT lrConV.Confirmado THEN
          ERROR(Text008);
      END;

      IF (prPrecio."Fecha desde" = 0D) OR
         (prPrecio."Fecha hasta" = 0D) OR
         (prPrecio.Destino = '') OR
         (prPrecio.Origen = '') THEN
        EXIT(FALSE);

      lrPrecio.RESET;
      lrPrecio.SETRANGE (Delegacion      , prPrecio.Delegacion);
      lrPrecio.SETRANGE ("N§ Contrato"   , prPrecio."N§ Contrato");
      lrPrecio.SETRANGE ("Codigo precio" , prPrecio."Codigo precio");
      lrPrecio.SETRANGE (Origen          , prPrecio.Origen); //+$004
      lrPrecio.SETRANGE (Destino         , prPrecio.Destino);
      lrPrecio.SETRANGE ("Tipo vehiculo" , prPrecio."Tipo vehiculo");
      lrPrecio.SETRANGE ("Tipo elemento" , prPrecio."Tipo elemento");
      lrPrecio.SETRANGE ("Tipo Traslado" , prPrecio."Tipo Traslado");
      lrPrecio.SETFILTER("Fecha desde"   , '<=%1', prPrecio."Fecha hasta");
      lrPrecio.SETFILTER("Fecha hasta"   , '>=%1', prPrecio."Fecha desde");
      lrPrecio.SETFILTER("Rango desde"   , '<=%1', prPrecio."Rango hasta");
      lrPrecio.SETFILTER("Rango hasta"   , '>=%1', prPrecio."Rango desde");
      lrPrecio.SETFILTER("Orden precio"  , '<>%1', prPrecio."Orden precio");
      lrPrecio.SETRANGE ("Tipo operacion", prPrecio."Tipo operacion"); //+$004
      lrPrecio.SETRANGE (Activo          , TRUE);
      IF lrPrecio.FINDFIRST THEN
        ERROR(Text009);

      EXIT(TRUE);
    END;

    PROCEDURE activar_suplemento_venta@9(prPrecio@1103355000 : Record 7009790) : Boolean;
    VAR
      lrPrecio@1103355001 : Record 7009790;
      lrConV@1103355002 : Record 7009788;
    BEGIN
      // activar_suplemento_venta

      IF lrConV.GET(prPrecio.Delegacion, prPrecio."N§ Contrato") THEN
      BEGIN
        IF NOT lrConV.Confirmado THEN
          ERROR(Text008);
      END;

      IF (prPrecio."Fecha desde" = 0D) OR (prPrecio."Fecha hasta" = 0D) THEN
        EXIT(FALSE);

      lrPrecio.RESET;
      lrPrecio.SETRANGE (Delegacion      , prPrecio.Delegacion);
      lrPrecio.SETRANGE ("N§ Contrato"   , prPrecio."N§ Contrato");
      lrPrecio.SETRANGE ("Codigo precio" , prPrecio."Codigo precio");
      lrPrecio.SETRANGE (Origen          , prPrecio.Origen); //+$004
      lrPrecio.SETRANGE (Destino         , prPrecio.Destino);
      lrPrecio.SETRANGE ("Tipo Traslado" , prPrecio."Tipo Traslado");
      lrPrecio.SETRANGE ("Tipo elemento" , prPrecio."Tipo elemento");
      lrPrecio.SETRANGE (Activo          , TRUE);
      lrPrecio.SETFILTER("Fecha desde"   , '<=%1', prPrecio."Fecha desde");
      lrPrecio.SETFILTER("Fecha hasta"   , '>=%1', prPrecio."Fecha desde");
      lrPrecio.SETFILTER("Orden precio"  , '<>%1', prPrecio."Orden precio");
      lrPrecio.SETRANGE ("Tipo operacion", prPrecio."Tipo operacion"); //+$004
      IF lrPrecio.FINDFIRST THEN
      BEGIN
        lrPrecio.SETFILTER("Rango desde", '<=%1', prPrecio."Rango desde");
        lrPrecio.SETFILTER("Rango hasta", '>=%1', prPrecio."Rango desde");
        IF lrPrecio.FINDFIRST THEN
          ERROR(Text009);

        lrPrecio.SETFILTER("Rango desde", '<=%1', prPrecio."Rango hasta");
        lrPrecio.SETFILTER("Rango hasta", '>=%1', prPrecio."Rango hasta");
        IF lrPrecio.FINDFIRST THEN
          ERROR(Text009);

        lrPrecio.SETFILTER("Rango desde", '>=%1', prPrecio."Rango desde");
        lrPrecio.SETFILTER("Rango hasta", '<=%1', prPrecio."Rango hasta");
        IF lrPrecio.FINDFIRST THEN
          ERROR(Text009);
      END;

      lrPrecio.RESET;
      lrPrecio.SETRANGE (Delegacion      , prPrecio.Delegacion);
      lrPrecio.SETRANGE ("N§ Contrato"   , prPrecio."N§ Contrato");
      lrPrecio.SETRANGE ("Codigo precio" , prPrecio."Codigo precio");
      lrPrecio.SETRANGE (Origen          , prPrecio.Origen); //+$004
      lrPrecio.SETRANGE (Destino         , prPrecio.Destino);
      lrPrecio.SETRANGE ("Tipo Traslado" , prPrecio."Tipo Traslado");
      lrPrecio.SETRANGE ("Tipo elemento" , prPrecio."Tipo elemento");
      lrPrecio.SETRANGE (Activo          , TRUE);
      lrPrecio.SETFILTER("Fecha desde"   , '<=%1', prPrecio."Fecha hasta");
      lrPrecio.SETFILTER("Fecha hasta"   , '>=%1', prPrecio."Fecha hasta");
      lrPrecio.SETFILTER("Orden precio"  , '<>%1', prPrecio."Orden precio");
      lrPrecio.SETRANGE ("Tipo operacion", prPrecio."Tipo operacion"); //+$004
      IF lrPrecio.FINDFIRST THEN
      BEGIN
        lrPrecio.SETFILTER("Rango desde", '<=%1', prPrecio."Rango desde");
        lrPrecio.SETFILTER("Rango hasta", '>=%1', prPrecio."Rango desde");
        IF lrPrecio.FINDFIRST THEN
          ERROR(Text009);

        lrPrecio.SETFILTER("Rango desde", '<=%1', prPrecio."Rango hasta");
        lrPrecio.SETFILTER("Rango hasta", '>=%1', prPrecio."Rango hasta");
        IF lrPrecio.FINDFIRST THEN
          ERROR(Text009);

        lrPrecio.SETFILTER("Rango desde", '>=%1', prPrecio."Rango desde");
        lrPrecio.SETFILTER("Rango hasta", '<=%1', prPrecio."Rango hasta");
        IF lrPrecio.FINDFIRST THEN
          ERROR(Text009);
      END;

      lrPrecio.RESET;
      lrPrecio.SETRANGE (Delegacion      , prPrecio.Delegacion);
      lrPrecio.SETRANGE ("N§ Contrato"   , prPrecio."N§ Contrato");
      lrPrecio.SETRANGE ("Codigo precio" , prPrecio."Codigo precio");
      lrPrecio.SETRANGE (Origen          , prPrecio.Origen); //+$004
      lrPrecio.SETRANGE (Destino         , prPrecio.Destino);
      lrPrecio.SETRANGE ("Tipo Traslado" , prPrecio."Tipo Traslado");
      lrPrecio.SETRANGE ("Tipo elemento" , prPrecio."Tipo elemento");
      lrPrecio.SETRANGE (Activo          , TRUE);
      lrPrecio.SETFILTER("Fecha desde"   , '>=%1', prPrecio."Fecha desde");
      lrPrecio.SETFILTER("Fecha hasta"   , '<=%1', prPrecio."Fecha hasta");
      lrPrecio.SETFILTER("Orden precio"  , '<>%1', prPrecio."Orden precio");
      lrPrecio.SETRANGE ("Tipo operacion", prPrecio."Tipo operacion"); //+$004
      IF lrPrecio.FINDFIRST THEN
      BEGIN
        lrPrecio.SETFILTER("Rango desde", '<=%1', prPrecio."Rango desde");
        lrPrecio.SETFILTER("Rango hasta", '>=%1', prPrecio."Rango desde");
        IF lrPrecio.FINDFIRST THEN
          ERROR(Text009);

        lrPrecio.SETFILTER("Rango desde", '<=%1', prPrecio."Rango hasta");
        lrPrecio.SETFILTER("Rango hasta", '>=%1', prPrecio."Rango hasta");
        IF lrPrecio.FINDFIRST THEN
          ERROR(Text010);

        lrPrecio.SETFILTER("Rango desde", '>=%1', prPrecio."Rango desde");
        lrPrecio.SETFILTER("Rango hasta", '<=%1', prPrecio."Rango hasta");
        IF lrPrecio.FINDFIRST THEN
          ERROR(Text009);
      END;

      EXIT(TRUE);
    END;

    PROCEDURE Copiar_Contrato@6(Delegacion@1103355000 : Code[10];Contrato@1103355001 : Code[10];"Tipo Contrato"@1103355002 : 'Compra,Venta');
    BEGIN
      // copiar_contrato(Delegacion : Code[10];Contrato : Code[10];"Tipo Contrato" : 'Hotel Compra,Hotel Venta')

      CASE "Tipo Contrato" OF
        "Tipo Contrato"::Compra:
        BEGIN
          Copiar_Contrato_Transf_Compra(Delegacion, Contrato);
        END;
        "Tipo Contrato"::Venta:
        BEGIN
          Copiar_Contrato_Transf_Venta(Delegacion, Contrato);
        END;
      END;
    END;

    PROCEDURE Copiar_Contrato_Transf_Compra@7(Delegacion@1103355000 : Code[10];Contrato@1103355001 : Code[10]);
    VAR
      rConC@1103355002 : Record 7009787;
      rConC2@1103355003 : Record 7009787;
      "Nuevo Contrato"@1103355004 : Code[10];
    BEGIN
      // copiar_contrato_transf_compra

      IF rConC.GET(Delegacion, Contrato) THEN
      BEGIN
        //-$003Ventana.OPEN(Text011 +
        //-$003             Text012);
        //-$003Ventana.INPUT(1, "Nuevo Contrato");
        //-$003Ventana.CLOSE;

        //-$003IF ("Nuevo Contrato" <> '') AND rConC2.GET(rConC.Delegacion, "Nuevo Contrato") THEN
        //-$003  ERROR(Text013, "Nuevo Contrato");

        IF NOT CONFIRM(STRSUBSTNO(Text014,
                                  rConC."N§ Contrato compra", "Nuevo Contrato")) THEN
          EXIT;

        Contrato_Compra(rConC, "Nuevo Contrato");
        Precios_Compra(rConC, "Nuevo Contrato");
        Zonas_Transfer(Contrato, 0, "Nuevo Contrato"); // 0 = compra, 1 = venta
      END;
    END;

    PROCEDURE Copiar_Contrato_Transf_Venta@10(Delegacion@1103355000 : Code[10];Contrato@1103355001 : Code[10]);
    VAR
      "Nuevo Contrato"@1103355002 : Code[10];
      rConV@1103355003 : Record 7009788;
      rConV2@1103355004 : Record 7009788;
    BEGIN
      // copiar_contrato_transf_venta

      IF rConV.GET(Delegacion, Contrato) THEN BEGIN
        //-$003Ventana.OPEN(Text015 +
        //-$003             Text016);
        //-$003Ventana.INPUT(1, "Nuevo Contrato");
        //-$003Ventana.CLOSE;

        //-$003IF ("Nuevo Contrato" <> '') AND rConV2.GET(rConV.Delegacion, "Nuevo Contrato") THEN
        //-$003  ERROR(Text013, "Nuevo Contrato");

        IF NOT CONFIRM(STRSUBSTNO(Text017,
                                  rConV."N§ Contrato Venta", "Nuevo Contrato")) THEN
          EXIT;

        Contrato_Venta(rConV, "Nuevo Contrato");
        Precios_Venta(rConV, "Nuevo Contrato");
        Zonas_Transfer(Contrato, 1, "Nuevo Contrato"); // 0 = compra, 1 = venta
      END;
    END;

    PROCEDURE Contrato_Compra@12(ConC@1103355000 : Record 7009787;VAR "Nuevo Contrato"@1103355001 : Code[10]);
    VAR
      ConC2@1103355002 : Record 7009787;
    BEGIN
      // contrato_compra

      ConC2.TRANSFERFIELDS(ConC);
      ConC2."N§ Contrato compra" := "Nuevo Contrato";
      ConC2.Confirmado := FALSE;
      ConC2.INSERT(TRUE);
      IF "Nuevo Contrato" = '' THEN
        "Nuevo Contrato" := ConC2."N§ Contrato compra";
    END;

    PROCEDURE Contrato_Venta@13(ConV@1103355000 : Record 7009788;VAR "Nuevo Contrato"@1103355001 : Code[10]);
    VAR
      ConV2@1103355002 : Record 7009788;
    BEGIN
      // contrato_venta

      ConV2.TRANSFERFIELDS(ConV);
      ConV2."N§ Contrato Venta" := "Nuevo Contrato";
      ConV2.Confirmado := FALSE;
      ConV2.INSERT(TRUE);
      IF "Nuevo Contrato" = '' THEN
        "Nuevo Contrato" := ConV2."N§ Contrato Venta";
    END;

    PROCEDURE Precios_Compra@16(ConC@1103355000 : Record 7009787;"Nuevo Contrato"@1103355001 : Code[10]);
    VAR
      rPreC@1103355002 : Record 7009789;
      rPreC2@1103355003 : Record 7009789;
    BEGIN
      // precios_compra

      rPreC.RESET;
      rPreC.SETRANGE(Delegacion   , ConC.Delegacion);
      rPreC.SETRANGE("N§ Contrato", ConC."N§ Contrato compra");
      IF rPreC.FINDSET THEN
      BEGIN
        REPEAT
          rPreC2.TRANSFERFIELDS(rPreC);
          rPreC2."N§ Contrato" := "Nuevo Contrato";
          rPreC2.Activo := FALSE;
          rPreC2.INSERT;
        UNTIL rPreC.NEXT = 0;
      END;
      rPreC.RESET;
    END;

    PROCEDURE Precios_Venta@17(ConV@1103355000 : Record 7009788;"Nuevo contrato"@1103355001 : Code[10]);
    VAR
      rPreV@1103355002 : Record 7009790;
      rPreV2@1103355003 : Record 7009790;
    BEGIN
      // precios_venta

      rPreV.RESET;
      rPreV.SETRANGE(Delegacion   , ConV.Delegacion);
      rPreV.SETRANGE("N§ Contrato", ConV."N§ Contrato Venta");
      IF rPreV.FINDSET THEN
      BEGIN
        REPEAT
          rPreV2.TRANSFERFIELDS(rPreV);
          rPreV2."N§ Contrato" := "Nuevo contrato";
          rPreV2.Activo := FALSE;
          rPreV2.INSERT;
        UNTIL rPreV.NEXT = 0;
      END;
      rPreV.RESET;
    END;

    PROCEDURE Zonas_Transfer@26(Contrato@1103355000 : Code[10];"Tipo Contrato"@1103355001 : 'Compra,Venta, ';"Nuevo Contrato"@1103355002 : Code[10]);
    VAR
      rZonas@1103355003 : Record 7009791;
      rZonas2@1103355004 : Record 7009791;
    BEGIN
      // Zonas_transfer

      rZonas.RESET;
      rZonas.SETRANGE(Contrato       , Contrato);
      rZonas.SETRANGE("Tipo contrato", "Tipo Contrato");
      IF rZonas.FINDSET THEN
      BEGIN
        REPEAT
          rZonas2.TRANSFERFIELDS(rZonas);
          rZonas2.Contrato := "Nuevo Contrato";
          rZonas2.INSERT;
        UNTIL rZonas.NEXT = 0;
      END;
    END;

    PROCEDURE Proponer_Precios_Compra@1000000000(Deleg@1000000002 : Code[10];ConC@1000000000 : Code[10]);
    VAR
      lrContratoC@1000000001 : Record 7009787;
      lrPrecios@1000000003 : Record 7009789;
      lrAeropuerto@1000000005 : Record 7009704;
      lrZonasT@1000000004 : Record 7009791;
      lrZonasDest@1000000006 : Record 7009791;
      wOrden@1000000007 : Integer;
      aRangos@1000000008 : ARRAY [10] OF Integer;
      finestra@1000000009 : Dialog;
      wAuxRango@1000000010 : Integer;
      i@1000000011 : Integer;
      lwZonaAnterior@1000000012 : Code[10];
    BEGIN
      // Proponer_Precios_Compra
      //$007
      lrContratoC.RESET;
      lrContratoC.GET(Deleg, ConC);
      IF (lrContratoC."Fecha inicio contrato" = 0D) OR (lrContratoC."Fecha final contrato" = 0D) THEN
        ERROR(Text018);

      lrAeropuerto.RESET;
      lrAeropuerto.SETRANGE("Aeropuerto Local", TRUE);
      IF FORM.RUNMODAL(7009704, lrAeropuerto)  <> ACTION::LookupOK THEN
        ERROR(Text019);

      lrPrecios.RESET;
      lrPrecios.SETRANGE(Delegacion,      lrContratoC.Delegacion);
      lrPrecios.SETRANGE("N§ Contrato",   lrContratoC."N§ Contrato compra");
      lrPrecios.SETRANGE("Codigo precio", lrPrecios."Codigo precio"::"Precio base");
      IF lrPrecios.FINDLAST THEN
        wOrden := (lrPrecios."Orden precio" + 1)
      ELSE
        wOrden := 1;

      CLEAR(aRangos);
      i := 1;
      finestra.OPEN(Text020);
      REPEAT
        wAuxRango := 0;
        finestra.INPUT(1, wAuxRango);
        aRangos[i] := wAuxRango;
        i += 1;
      UNTIL wAuxRango = 0;

      lrZonasT.RESET;
      lrZonasT.SETRANGE(Delegacion     , lrContratoC.Delegacion);
      lrZonasT.SETRANGE(Contrato       , lrContratoC."N§ Contrato compra");
      lrZonasT.SETRANGE("Tipo contrato", lrZonasT."Tipo contrato"::Compra);
      lrZonasT.SETRANGE("Zona fisica"  , lrAeropuerto."Zona fisica");
      IF lrZonasT.FINDSET THEN
      BEGIN
        REPEAT
          lrZonasDest.RESET;
          lrZonasDest.SETRANGE(Delegacion     , lrContratoC.Delegacion);
          lrZonasDest.SETRANGE(Contrato       , lrContratoC."N§ Contrato compra");
          lrZonasDest.SETRANGE("Tipo contrato", lrZonasDest."Tipo contrato"::Compra);
          lrZonasDest.SETFILTER("Zona fisica" , '<>%1', lrAeropuerto."Zona fisica");
          IF lrZonasDest.FINDSET THEN
          BEGIN
            lwZonaAnterior := ''; //+$010
            REPEAT
              IF lrZonasDest.Zona <> lwZonaAnterior THEN //+$010
              BEGIN
                lwZonaAnterior := lrZonasDest.Zona;

                i := 1;
                REPEAT

                  lrPrecios.RESET;
                  CLEAR(lrPrecios);
                  lrPrecios.Delegacion      := lrContratoC.Delegacion;
                  lrPrecios."N§ Contrato"   := lrContratoC."N§ Contrato compra";
                  lrPrecios."Codigo precio" := lrPrecios."Codigo precio"::"Precio base";
                  lrPrecios."Orden precio"  := wOrden;
                  wOrden += 1;
                  lrPrecios.INSERT(TRUE);

                  lrPrecios.VALIDATE("Fecha desde"   , lrContratoC."Fecha inicio contrato");
                  lrPrecios.VALIDATE("Fecha hasta"   , lrContratoC."Fecha final contrato");
                  lrPrecios.VALIDATE(Origen          , lrZonasT.Zona);
                  lrPrecios.VALIDATE(Destino         , lrZonasDest.Zona);
                  lrPrecios.VALIDATE("Tipo vehiculo" , '');
                  lrPrecios.VALIDATE("Tipo servicio" , lrPrecios."Tipo servicio"::"Una via");
                  IF i = 1 THEN
                    lrPrecios.VALIDATE("Rango desde" , i)
                  ELSE
                    lrPrecios.VALIDATE("Rango desde" , aRangos[i-1]+1);

                  lrPrecios.VALIDATE("Rango hasta" , aRangos[i]);

                  lrPrecios.MODIFY(TRUE);

                  lrPrecios."Orden precio"  := wOrden;
                  wOrden += 1;
                  lrPrecios.INSERT(TRUE);
                  lrPrecios.VALIDATE("Tipo servicio" , lrPrecios."Tipo servicio"::"Doble via");
                  lrPrecios.MODIFY(TRUE);

                  i += 1;

                UNTIL aRangos[i] = 0;
              END;
            UNTIL lrZonasDest.NEXT = 0;
          END;
        UNTIL lrZonasT.NEXT = 0;
      END
      ELSE
        ERROR(Text021, lrAeropuerto."Zona fisica");
    END;

    PROCEDURE Proponer_Precios_Venta@1000000001(Deleg@1000000002 : Code[10];ConV@1000000000 : Code[10]);
    VAR
      lrContratoV@1000000001 : Record 7009788;
      lrPrecios@1000000011 : Record 7009790;
      lrAeropuerto@1000000010 : Record 7009704;
      lrZonasT@1000000009 : Record 7009791;
      lrZonasDest@1000000008 : Record 7009791;
      wOrden@1000000007 : Integer;
      aRangos@1000000006 : ARRAY [10] OF Integer;
      finestra@1000000005 : Dialog;
      wAuxRango@1000000004 : Integer;
      i@1000000003 : Integer;
      lwZonaAnterior@1000000012 : Code[10];
    BEGIN
      // Proponer_Precios_Venta
      //$008
      lrContratoV.RESET;
      lrContratoV.GET(Deleg, ConV);
      IF (lrContratoV."Fecha inicio contrato" = 0D) OR (lrContratoV."Fecha final contrato" = 0D) THEN
        ERROR(Text018);

      lrAeropuerto.RESET;
      lrAeropuerto.SETRANGE("Aeropuerto Local", TRUE);
      IF FORM.RUNMODAL(7009704, lrAeropuerto)  <> ACTION::LookupOK THEN
      BEGIN
        ERROR(Text019);
      END;

      lrPrecios.RESET;
      lrPrecios.SETRANGE(Delegacion,      lrContratoV.Delegacion);
      lrPrecios.SETRANGE("N§ Contrato",   lrContratoV."N§ Contrato Venta");
      lrPrecios.SETRANGE("Codigo precio", lrPrecios."Codigo precio"::"Precio Base");
      IF lrPrecios.FINDLAST THEN
        wOrden := (lrPrecios."Orden precio"+1)
      ELSE
        wOrden := 1;

      CLEAR(aRangos);
      i := 1;
      finestra.OPEN(Text020);
      REPEAT
        wAuxRango := 0;

        finestra.INPUT(1, wAuxRango);
        aRangos[i] := wAuxRango;
        i += 1;
      UNTIL wAuxRango = 0;

      lrZonasT.RESET;
      lrZonasT.SETRANGE(Delegacion     , lrContratoV.Delegacion);
      lrZonasT.SETRANGE(Contrato       , lrContratoV."N§ Contrato Venta");
      lrZonasT.SETRANGE("Tipo contrato", lrZonasT."Tipo contrato"::Venta);
      lrZonasT.SETRANGE("Zona fisica"  , lrAeropuerto."Zona fisica");
      IF lrZonasT.FINDSET THEN
      BEGIN
        REPEAT
          lrZonasDest.RESET;
          lrZonasDest.SETRANGE(Delegacion     , lrContratoV.Delegacion);
          lrZonasDest.SETRANGE(Contrato,        lrContratoV."N§ Contrato Venta");
          lrZonasDest.SETRANGE("Tipo contrato", lrZonasDest."Tipo contrato"::Venta);
          lrZonasDest.SETFILTER("Zona fisica", '<>%1', lrAeropuerto."Zona fisica");
          IF lrZonasDest.FINDSET THEN
          BEGIN
            lwZonaAnterior := ''; //+$010
            REPEAT
              IF lwZonaAnterior <> lrZonasDest.Zona THEN
              BEGIN
                lwZonaAnterior := lrZonasDest.Zona;
                i := 1;
                REPEAT

                  lrPrecios.RESET;
                  CLEAR(lrPrecios);
                  lrPrecios.Delegacion      := lrContratoV.Delegacion;
                  lrPrecios."N§ Contrato"   := lrContratoV."N§ Contrato Venta";
                  lrPrecios."Codigo precio" := lrPrecios."Codigo precio"::"Precio Base";
                  lrPrecios."Orden precio"  := wOrden;
                  wOrden += 1;
                  lrPrecios.INSERT(TRUE);

                  lrPrecios.VALIDATE("Fecha desde"   , lrContratoV."Fecha inicio contrato");
                  lrPrecios.VALIDATE("Fecha hasta"   , lrContratoV."Fecha final contrato");
                  lrPrecios.VALIDATE(Origen          , lrZonasT.Zona);
                  lrPrecios.VALIDATE(Destino         , lrZonasDest.Zona);
                  lrPrecios.VALIDATE("Tipo vehiculo" , '');

                  lrPrecios.VALIDATE("Tipo Traslado" , lrPrecios."Tipo Traslado"::Compartido);
                  IF i = 1 THEN
                    lrPrecios.VALIDATE("Rango desde" , i)
                  ELSE
                    lrPrecios.VALIDATE("Rango desde" , aRangos[i-1] + 1);

                  lrPrecios.VALIDATE("Rango hasta" , aRangos[i]);

                  lrPrecios.MODIFY(TRUE);

                  lrPrecios."Orden precio"  := wOrden;
                  wOrden += 1;
                  lrPrecios.INSERT(TRUE);
                  lrPrecios.VALIDATE("Tipo Traslado" , lrPrecios."Tipo Traslado"::Privado);
                  lrPrecios.MODIFY(TRUE);

                  i += 1;

                UNTIL aRangos[i] = 0;
              END;
            UNTIL lrZonasDest.NEXT = 0;
          END;
        UNTIL lrZonasT.NEXT = 0;
      END
      ELSE
        ERROR(Text021, lrAeropuerto."Zona fisica");
    END;

    BEGIN
    {
      $001 AJS 10092012 Elimino referencias al campo Precios por de los contratos de compra

      $002 AJS 10092012 Nuevo campo Tipo servicio en los precios, lo incluyo en los controles de solapamiento

      $003 AJS 27122012 Modifico las funciones de copia contrato para que no pidan el numero, no es operativo

      $004 AJS 09062014 CNT-OC-14046, Modifico las funciones activar_precio_zona_venta y activar_suplemento_venta
                        para tener en cuenta los nuevos campos

      $005 AJS 10062014 CNT-OC-14046, Los contratos de venta y compra dejan de ir por Aeropuerto

      $006 AJS 10062014 CNT-OC-14046, Modifico las funciones activar_precio_zona_compra y activar_suplemento_compra
                        para tener en cuenta los nuevos campos

      $007 MNC 14/07/14 CNT-LP-14051. Herramienta proponer lineas precios compra

      $008 MNC 14/07/14 CNT-LP-14050. Herramienta proponer lineas precios venta

      $009 AJS 18072014 Los contratos de venta ya no tienen codigo de serie

      $010 AJS 25092014 Modificar la funcion Proponer_Precios_Compra y Proponer_Precios_Venta para tratar las
                        agrupaciones de zonas de precio

      $011 AJS 13032015 La funcion confirmar_contrato_venta tiene que distinguir los contratos de comercializadora
    }
    END.
  }
}
