OBJECT Codeunit 5055264 LiqDimensionManagement
{
  OBJECT-PROPERTIES
  {
    Date=13/02/07;
    Time=12:00:00;
    Version List=LIQEM5.00;
  }
  PROPERTIES
  {
    Permissions=TableData 80=imd,
                TableData 232=imd,
                TableData 355=imd;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text1140000@1140000 : TextConst 'ENU=This Shortcut Dimension is not defined in the %1.;ESP=Este Shortcut de dimensi¢n no est  def. en el %1.';
      Text1140001@1140001 : TextConst 'ENU=%1 is not an available %2 for that dimension.;ESP=%1 no est  disponible %2 para esa dimensi¢n.';
      Text1140002@1140002 : TextConst 'ENU=Select a %1 for the %2 %3.;ESP=Selecc. %1 para el %2 %3.';
      Text1140003@1140003 : TextConst 'ENU=Select a %1 for the %2 %3 for %4 %5.;ESP=Selecc. %1 para el %2 %3 para %4 %5.';
      Text1140004@1140004 : TextConst 'ENU=Select %1 %2 for the %3 %4.;ESP=Selecc. %1 %2 para el %3 %4.';
      Text1140005@1140005 : TextConst 'ENU=Select %1 %2 for the %3 %4 for %5 %6.;ESP=Selecc. %1 %2 para el %3 %4 para %5 %6.';
      Text1140006@1140006 : TextConst 'ENU=%1 %2 must be blank.;ESP=%1 %2 debe ser blanco.';
      Text1140007@1140007 : TextConst 'ENU=%1 %2 must be blank for %3 %4.;ESP=%1 %2 debe ser blanco para %3 %4.';
      Text1140008@1140008 : TextConst 'ENU=%1 %2 must not be mentioned.;ESP=%1 %2 no debe ser mencionado.';
      Text1140009@1140009 : TextConst 'ENU=%1 %2 must not be mentioned for %3 %4.;ESP=%1 %2 no debe ser mencionado para %3 %4.';
      Text1140010@1140010 : TextConst 'ENU=%1 %2 is blocked.;ESP=%1 %2 est  bloqueado.';
      Text1140011@1140011 : TextConst 'ENU=%1 %2 can''t be found.;ESP=%1 %2 no puede encontrarse.';
      Text1140012@1140012 : TextConst 'ENU=%1 %2 - %3 is blocked.;ESP=%1 %2 - %3 est  bloq.';
      Text1140013@1140013 : TextConst 'ENU=%1 for %2 %3 - %4 must not be %5.;ESP=%1 para %2 %3 - %4 no debe ser %5.';
      Text1140014@1140014 : TextConst 'ENU=%1 for %2 is missing.;ESP=%1 para %2 se pierde.';
      TempDimBuf1@1140015 : TEMPORARY Record 360;
      TempDimBuf2@1140016 : TEMPORARY Record 360;
      ObjTransl@1140017 : Record 377;
      DimCombErr@1140018 : Text[250];
      DimValuePostingErr@1140019 : Text[250];
      DimErr@1140020 : Text[250];
      DocDimConsistencyErr@1140021 : Text[250];
      HasGotGLSetup@1140022 : Boolean;
      GLSetupShortcutDimCode@1140023 : ARRAY [8] OF Code[20];

    LOCAL PROCEDURE GetGLSetup@1140000();
    VAR
      GLSetup@1140000 : Record 98;
    BEGIN
      IF NOT HasGotGLSetup THEN BEGIN
        GLSetup.GET;
        GLSetupShortcutDimCode[1] := GLSetup."Shortcut Dimension 1 Code";
        GLSetupShortcutDimCode[2] := GLSetup."Shortcut Dimension 2 Code";
        GLSetupShortcutDimCode[3] := GLSetup."Shortcut Dimension 3 Code";
        GLSetupShortcutDimCode[4] := GLSetup."Shortcut Dimension 4 Code";
        GLSetupShortcutDimCode[5] := GLSetup."Shortcut Dimension 5 Code";
        GLSetupShortcutDimCode[6] := GLSetup."Shortcut Dimension 6 Code";
        GLSetupShortcutDimCode[7] := GLSetup."Shortcut Dimension 7 Code";
        GLSetupShortcutDimCode[8] := GLSetup."Shortcut Dimension 8 Code";
        HasGotGLSetup := TRUE;
      END;
    END;

    PROCEDURE UpdateDefaultDim@1140001(TableID@1140000 : Integer;Type@1140001 : 'Revenue,Expense';No@1140002 : Code[20];VAR GlobalDim1Code@1140003 : Code[20];VAR GlobalDim2Code@1140004 : Code[20]);
    VAR
      LiqDefaultDim@1140005 : Record 5055268;
    BEGIN
      GetGLSetup;
      IF LiqDefaultDim.GET(TableID,Type,No,GLSetupShortcutDimCode[1]) THEN
        GlobalDim1Code := LiqDefaultDim."Dimension Value Code"
      ELSE
        GlobalDim1Code := '';
      IF LiqDefaultDim.GET(TableID,Type,No,GLSetupShortcutDimCode[2]) THEN
        GlobalDim2Code := LiqDefaultDim."Dimension Value Code"
      ELSE
        GlobalDim2Code := '';
    END;

    PROCEDURE GetDefaultDim@1140002(TableID@1140000 : ARRAY [10] OF Integer;No@1140001 : ARRAY [10] OF Code[20];"Source Code"@1140002 : Code[20];VAR GlobalDim1Code@1140003 : Code[20];VAR GlobalDim2Code@1140004 : Code[20]);
    VAR
      DefaultDimPriority1@1140005 : Record 354;
      DefaultDimPriority2@1140006 : Record 354;
      DefaultDim@1140007 : Record 352;
      i@1140008 : Integer;
      j@1140009 : Integer;
      NoFilter@1140010 : ARRAY [2] OF Code[20];
    BEGIN
      GetGLSetup;
      TempDimBuf2.RESET;
      TempDimBuf2.DELETEALL;
      IF TempDimBuf1.FIND('-') THEN BEGIN
        REPEAT
          TempDimBuf2.INIT;
          TempDimBuf2 := TempDimBuf1;
          TempDimBuf2.INSERT;
        UNTIL TempDimBuf1.NEXT = 0;
      END;
      NoFilter[2] := '';
      FOR i := 1 TO ARRAYLEN(TableID) DO BEGIN
        IF (TableID[i] <> 0) AND (No[i] <> '') THEN BEGIN
          DefaultDim.SETRANGE("Table ID",TableID[i]);
          NoFilter[1] := No[i];
          FOR j := 1 TO 2 DO BEGIN
            DefaultDim.SETRANGE("No.",NoFilter[j]);
            IF DefaultDim.FIND('-') THEN BEGIN
              REPEAT
                IF DefaultDim."Dimension Value Code" <> '' THEN BEGIN
                  TempDimBuf2.SETRANGE("Dimension Code",DefaultDim."Dimension Code");
                  IF NOT TempDimBuf2.FIND('-') THEN BEGIN
                    TempDimBuf2.INIT;
                    TempDimBuf2."Table ID" := DefaultDim."Table ID";
                    TempDimBuf2."Entry No." := 0;
                    TempDimBuf2."Dimension Code" := DefaultDim."Dimension Code";
                    TempDimBuf2."Dimension Value Code" := DefaultDim."Dimension Value Code";
                    TempDimBuf2.INSERT;
                  END ELSE BEGIN
                    IF DefaultDimPriority1.GET("Source Code",DefaultDim."Table ID") THEN BEGIN
                      IF DefaultDimPriority2.GET("Source Code",TempDimBuf2."Table ID") THEN BEGIN
                        IF DefaultDimPriority1.Priority < DefaultDimPriority2.Priority THEN BEGIN
                          TempDimBuf2.RENAME(DefaultDim."Table ID",0,TempDimBuf2."Dimension Code");
                          TempDimBuf2."Dimension Value Code" := DefaultDim."Dimension Value Code";
                          TempDimBuf2.MODIFY;
                        END;
                      END ELSE BEGIN
                        TempDimBuf2.RENAME(DefaultDim."Table ID",0,TempDimBuf2."Dimension Code");
                        TempDimBuf2."Dimension Value Code" := DefaultDim."Dimension Value Code";
                        TempDimBuf2.MODIFY;
                      END;
                    END;
                  END;
                  IF GLSetupShortcutDimCode[1] = TempDimBuf2."Dimension Code" THEN
                    GlobalDim1Code :=  TempDimBuf2."Dimension Value Code";
                  IF GLSetupShortcutDimCode[2] = TempDimBuf2."Dimension Code" THEN
                    GlobalDim2Code :=  TempDimBuf2."Dimension Value Code";
                END;
              UNTIL DefaultDim.NEXT = 0;
            END;
          END;
        END;
      END;
      TempDimBuf2.RESET;
    END;

    PROCEDURE DeleteDefaultDim@1140003(TableID@1140000 : Integer;Type@1140001 : 'Revenue,Expense';No@1140002 : Code[20]);
    VAR
      LiqDefaultDim@1140003 : Record 5055268;
    BEGIN
      LiqDefaultDim.SETRANGE("Table ID",TableID);
      LiqDefaultDim.SETRANGE(Type,Type);
      LiqDefaultDim.SETRANGE("No.",No);
      LiqDefaultDim.DELETEALL;
    END;

    PROCEDURE LookupDimValueCode@1140004(FieldNo@1140000 : Integer;VAR ShortcutDimCode@1140001 : Code[20]);
    VAR
      DimVal@1140002 : Record 349;
      GLSetup@1140003 : Record 98;
    BEGIN
      GetGLSetup;
      IF GLSetupShortcutDimCode[FieldNo] = '' THEN
        ERROR(Text1140000,GLSetup.TABLECAPTION);
      DimVal.SETRANGE("Dimension Code",GLSetupShortcutDimCode[FieldNo]);
      DimVal."Dimension Code" := GLSetupShortcutDimCode[FieldNo];
      DimVal.Code := ShortcutDimCode;
      IF FORM.RUNMODAL(0,DimVal) = ACTION::LookupOK THEN BEGIN
        CheckDim(DimVal."Dimension Code");
        CheckDimValue(DimVal."Dimension Code",DimVal.Code);
        ShortcutDimCode := DimVal.Code;
      END;
    END;

    PROCEDURE ValidateDimValueCode@1140005(FieldNo@1140000 : Integer;VAR ShortcutDimCode@1140001 : Code[20]);
    VAR
      DimVal@1140002 : Record 349;
      GLSetup@1140003 : Record 98;
    BEGIN
      GetGLSetup;
      IF GLSetupShortcutDimCode[FieldNo] = '' THEN
        ERROR(Text1140000,GLSetup.TABLECAPTION);
      DimVal.SETRANGE("Dimension Code",GLSetupShortcutDimCode[FieldNo]);
      IF ShortcutDimCode <> '' THEN BEGIN
        DimVal.SETRANGE(Code,ShortcutDimCode);
        IF NOT DimVal.FIND('-') THEN BEGIN
          DimVal.SETFILTER(Code,STRSUBSTNO('%1*',ShortcutDimCode));
          IF DimVal.FIND('-') THEN
            ShortcutDimCode := DimVal.Code
          ELSE
            ERROR(
              STRSUBSTNO(Text1140001,
              ShortcutDimCode,DimVal.FIELDCAPTION(Code)));
        END;
      END;
    END;

    PROCEDURE ShowDefaultDim@1140006(TableID@1140000 : Integer;No@1140001 : Code[20];VAR ShortcutDimCode@1140002 : ARRAY [8] OF Code[20]);
    VAR
      DefaultDim@1140003 : Record 352;
      i@1140004 : Integer;
    BEGIN
      GetGLSetup;
      FOR i := 3 TO 8 DO BEGIN
        ShortcutDimCode[i] := '';
        IF GLSetupShortcutDimCode[i] <> '' THEN
          IF DefaultDim.GET(TableID,No,GLSetupShortcutDimCode[i]) THEN
            ShortcutDimCode[i] := DefaultDim."Dimension Value Code";
      END;
    END;

    PROCEDURE SaveDefaultDim@1140007(TableID@1140000 : Integer;Type@1140001 : 'Revenue,Expense';No@1140002 : Code[20];FieldNo@1140003 : Integer;ShortcutDimCode@1140004 : Code[20]);
    VAR
      LiqDefaultDim@1140005 : Record 5055268;
    BEGIN
      GetGLSetup;
      IF ShortcutDimCode <> '' THEN BEGIN
        IF LiqDefaultDim.GET(TableID,Type,No,GLSetupShortcutDimCode[FieldNo])
        THEN BEGIN
          LiqDefaultDim.VALIDATE("Dimension Value Code",ShortcutDimCode);
          LiqDefaultDim.MODIFY;
        END ELSE BEGIN
          LiqDefaultDim.INIT;
          LiqDefaultDim.VALIDATE("Table ID",TableID);
          LiqDefaultDim.VALIDATE("No.",No);
          LiqDefaultDim.Type := Type;
          LiqDefaultDim.VALIDATE("Dimension Code",GLSetupShortcutDimCode[FieldNo]);
          LiqDefaultDim.VALIDATE("Dimension Value Code",ShortcutDimCode);
          LiqDefaultDim.INSERT;
        END;
      END ELSE
        IF LiqDefaultDim.GET(TableID,Type,No,GLSetupShortcutDimCode[FieldNo]) THEN BEGIN
          LiqDefaultDim.DELETE;
        END;
    END;

    LOCAL PROCEDURE CheckValuePosting@1140008(TableID@1140000 : ARRAY [10] OF Integer;No@1140001 : ARRAY [10] OF Code[20]) : Boolean;
    VAR
      DefaultDim@1140002 : Record 352;
      i@1140004 : Integer;
      j@1140005 : Integer;
      NoFilter@1006 : ARRAY [2] OF Text[250];
    BEGIN
      DefaultDim.SETFILTER("Value Posting",'<>%1',DefaultDim."Value Posting"::" ");
      NoFilter[2] := '';
      FOR i := 1 TO ARRAYLEN(TableID) DO BEGIN
        IF (TableID[i] <> 0) AND (No[i] <> '') THEN BEGIN
          DefaultDim.SETRANGE("Table ID",TableID[i]);
          NoFilter[1] := No[i];
          FOR j := 1 TO 2 DO BEGIN
            DefaultDim.SETRANGE("No.",NoFilter[j]);
            IF DefaultDim.FIND('-') THEN BEGIN
              REPEAT
                TempDimBuf2.SETRANGE("Dimension Code",DefaultDim."Dimension Code");
                CASE DefaultDim."Value Posting" OF
                  DefaultDim."Value Posting"::"Code Mandatory":
                    BEGIN
                      IF NOT TempDimBuf2.FIND('-') THEN BEGIN
                        IF DefaultDim."No." = '' THEN
                          DimValuePostingErr :=
                            STRSUBSTNO(
                              Text1140002,
                              DefaultDim.FIELDCAPTION("Dimension Value Code"),
                              DefaultDim.FIELDCAPTION("Dimension Code"),DefaultDim."Dimension Code")
                        ELSE
                          DimValuePostingErr :=
                            STRSUBSTNO(
                              Text1140003,
                              DefaultDim.FIELDCAPTION("Dimension Value Code"),
                              DefaultDim.FIELDCAPTION("Dimension Code"),
                              DefaultDim."Dimension Code",
                              ObjTransl.TranslateObject(ObjTransl."Object Type"::Table,DefaultDim."Table ID"),
                              DefaultDim."No.");
                        EXIT(FALSE);
                      END;
                    END;
                  DefaultDim."Value Posting"::"Same Code":
                    BEGIN
                      IF (DefaultDim."Dimension Value Code" <> '') THEN BEGIN
                        IF (NOT TempDimBuf2.FIND('-')) OR
                          (DefaultDim."Dimension Value Code" <> TempDimBuf2."Dimension Value Code")
                        THEN BEGIN
                          IF DefaultDim."No." = '' THEN
                            DimValuePostingErr :=
                              STRSUBSTNO(
                                Text1140004,
                                DefaultDim.FIELDCAPTION("Dimension Value Code"),DefaultDim."Dimension Value Code",
                                DefaultDim.FIELDCAPTION("Dimension Code"),DefaultDim."Dimension Code")
                          ELSE
                            DimValuePostingErr :=
                              STRSUBSTNO(
                                Text1140005,
                                DefaultDim.FIELDCAPTION("Dimension Value Code"),
                                DefaultDim."Dimension Value Code",
                                DefaultDim.FIELDCAPTION("Dimension Code"),
                                DefaultDim."Dimension Code",
                                ObjTransl.TranslateObject(ObjTransl."Object Type"::Table,DefaultDim."Table ID"),
                                DefaultDim."No.");
                          EXIT(FALSE);
                        END;
                      END ELSE BEGIN
                        IF TempDimBuf2.FIND('-') THEN BEGIN
                          IF DefaultDim."No." = '' THEN
                            DimValuePostingErr :=
                              STRSUBSTNO(
                                Text1140006,
                                TempDimBuf2.FIELDCAPTION("Dimension Code"),TempDimBuf2."Dimension Code")
                          ELSE
                            DimValuePostingErr :=
                              STRSUBSTNO(
                                Text1140007,
                                TempDimBuf2.FIELDCAPTION("Dimension Code"),
                                TempDimBuf2."Dimension Code",
                                ObjTransl.TranslateObject(ObjTransl."Object Type"::Table,DefaultDim."Table ID"),
                                DefaultDim."No.");
                          EXIT(FALSE);
                        END;
                      END;
                    END;
                  DefaultDim."Value Posting"::"No Code":
                    BEGIN
                      IF TempDimBuf2.FIND('-') THEN BEGIN
                        IF DefaultDim."No." = '' THEN
                          DimValuePostingErr :=
                            STRSUBSTNO(
                              Text1140008,
                              TempDimBuf2.FIELDCAPTION("Dimension Code"),TempDimBuf2."Dimension Code")
                        ELSE
                          DimValuePostingErr :=
                            STRSUBSTNO(
                              Text1140009,
                              TempDimBuf2.FIELDCAPTION("Dimension Code"),
                              TempDimBuf2."Dimension Code",
                              ObjTransl.TranslateObject(ObjTransl."Object Type"::Table,DefaultDim."Table ID"),
                              DefaultDim."No.");
                        EXIT(FALSE);
                      END;
                    END;
                END;
              UNTIL DefaultDim.NEXT = 0;
              TempDimBuf2.RESET;
            END;
          END;
        END;
      END;
      EXIT(TRUE);
    END;

    PROCEDURE CheckDim@1140009(DimCode@1140000 : Code[20]) : Boolean;
    VAR
      Dim@1140001 : Record 348;
    BEGIN
      IF Dim.GET(DimCode) THEN BEGIN
        IF Dim.Blocked THEN BEGIN
          DimErr :=
            STRSUBSTNO(Text1140010,Dim.TABLECAPTION,DimCode);
          EXIT(FALSE);
        END;
      END ELSE BEGIN
        DimErr :=
          STRSUBSTNO(Text1140011,Dim.TABLECAPTION,DimCode);
        EXIT(FALSE);
      END;
      EXIT(TRUE);
    END;

    PROCEDURE CheckDimValue@1140010(DimCode@1140000 : Code[20];DimValCode@1140001 : Code[20]) : Boolean;
    VAR
      DimVal@1140002 : Record 349;
    BEGIN
      IF (DimCode <> '') AND (DimValCode <> '') THEN BEGIN
        IF DimVal.GET(DimCode,DimValCode) THEN BEGIN
          IF DimVal.Blocked THEN BEGIN
            DimErr :=
              STRSUBSTNO(
                Text1140012,DimVal.TABLECAPTION,DimCode,DimValCode);
            EXIT(FALSE);
          END;
          IF NOT (DimVal."Dimension Value Type" IN
            [DimVal."Dimension Value Type"::Standard,
             DimVal."Dimension Value Type"::"Begin-Total"])
          THEN BEGIN
            DimErr :=
              STRSUBSTNO(Text1140013,DimVal.FIELDCAPTION("Dimension Value Type"),
              DimVal.TABLECAPTION,DimCode,DimValCode,FORMAT(DimVal."Dimension Value Type"));
            EXIT(FALSE);
          END;
        END ELSE BEGIN
          DimErr :=
            STRSUBSTNO(
              Text1140014,DimVal.TABLECAPTION,DimCode);
          EXIT(FALSE);
        END;
      END;
      EXIT(TRUE);
    END;

    PROCEDURE GetDimErr@1140011() : Text[250];
    BEGIN
      EXIT(DimErr);
    END;

    PROCEDURE MoveDocDimToJnlLineDim@1140012(VAR FromDocDim@1140000 : Record 357;VAR ToJnlLineDim@1140001 : Record 356;ToTableID@1140002 : Integer;ToJnlTemplateName@1140003 : Code[10];ToJnlBatchName@1140004 : Code[10];ToJnlLineNo@1140005 : Integer;ToAllocLineNo@1140006 : Integer);
    BEGIN

      WITH FromDocDim DO
        IF FIND('-') THEN
          REPEAT
            ToJnlLineDim."Table ID" := ToTableID;
            ToJnlLineDim."Journal Template Name" := ToJnlTemplateName;
            ToJnlLineDim."Journal Batch Name" := ToJnlBatchName;
            ToJnlLineDim."Journal Line No." := ToJnlLineNo;
            ToJnlLineDim."Allocation Line No." := ToAllocLineNo;
            ToJnlLineDim."Dimension Code" := "Dimension Code";
            ToJnlLineDim."Dimension Value Code" := "Dimension Value Code";
            ToJnlLineDim.INSERT;
          UNTIL NEXT = 0;
    END;

    PROCEDURE MoveDefaultDimToJnlLineDim@1140013(VAR FromDefaultDim@1140000 : Record 352;VAR ToJnlLineDim@1140001 : Record 356;ToTableID@1140002 : Integer;ToJnlTemplateName@1140003 : Code[10];ToJnlBatchName@1140004 : Code[10];ToJnlLineNo@1140005 : Integer;ToAllocLineNo@1140006 : Integer);
    BEGIN

      WITH FromDefaultDim DO
        IF FIND('-') THEN
          REPEAT
            ToJnlLineDim."Table ID" := ToTableID;
            ToJnlLineDim."Journal Template Name" := ToJnlTemplateName;
            ToJnlLineDim."Journal Batch Name" := ToJnlBatchName;
            ToJnlLineDim."Journal Line No." := ToJnlLineNo;
            ToJnlLineDim."Allocation Line No." := ToAllocLineNo;
            ToJnlLineDim."Dimension Code" := "Dimension Code";
            ToJnlLineDim."Dimension Value Code" := "Dimension Value Code";
            ToJnlLineDim.INSERT;
          UNTIL NEXT = 0;
    END;

    PROCEDURE MoveLiqDefaultDimToJnlLineDim@1140014(VAR FromLiqDefaultDim@1140000 : Record 5055268;VAR ToJnlLineDim@1140001 : Record 356;ToTableID@1140002 : Integer;ToJnlTemplateName@1140003 : Code[10];ToJnlBatchName@1140004 : Code[10];ToJnlLineNo@1140005 : Integer;ToAllocLineNo@1140006 : Integer);
    BEGIN

      WITH FromLiqDefaultDim DO
        IF FIND('-') THEN
          REPEAT
            ToJnlLineDim."Table ID" := ToTableID;
            ToJnlLineDim."Journal Template Name" := ToJnlTemplateName;
            ToJnlLineDim."Journal Batch Name" := ToJnlBatchName;
            ToJnlLineDim."Journal Line No." := ToJnlLineNo;
            ToJnlLineDim."Allocation Line No." := ToAllocLineNo;
            ToJnlLineDim."Dimension Code" := "Dimension Code";
            ToJnlLineDim."Dimension Value Code" := "Dimension Value Code";
            ToJnlLineDim.INSERT;
          UNTIL NEXT = 0;
    END;

    PROCEDURE MoveGLBudgDimToJnlLineDim@1140015(VAR FromGLBudgDim@1140000 : Record 361;VAR ToJnlLineDim@1140001 : Record 356;ToTableID@1140002 : Integer;ToJnlTemplateName@1140003 : Code[10];ToJnlBatchName@1140004 : Code[10];ToJnlLineNo@1140005 : Integer;ToAllocLineNo@1140006 : Integer);
    BEGIN

      WITH FromGLBudgDim DO
        IF FIND('-') THEN
          REPEAT
            ToJnlLineDim."Table ID" := ToTableID;
            ToJnlLineDim."Journal Template Name" := ToJnlTemplateName;
            ToJnlLineDim."Journal Batch Name" := ToJnlBatchName;
            ToJnlLineDim."Journal Line No." := ToJnlLineNo;
            ToJnlLineDim."Allocation Line No." := ToAllocLineNo;
            ToJnlLineDim."Dimension Code" := "Dimension Code";
            ToJnlLineDim."Dimension Value Code" := "Dimension Value Code";
            ToJnlLineDim.INSERT;
          UNTIL NEXT = 0;
    END;

    PROCEDURE CheckJnlLineDimValuePosting@1140016(VAR JnlLineDim@1140000 : Record 356;TableID@1140001 : ARRAY [10] OF Integer;No@1140002 : ARRAY [10] OF Code[20]) : Boolean;
    VAR
      i@1140003 : Integer;
    BEGIN
      TempDimBuf2.RESET;
      TempDimBuf2.DELETEALL;
      IF JnlLineDim.FIND('-') THEN BEGIN
        i := 1;
        REPEAT
          IF (NOT CheckDimValue(JnlLineDim."Dimension Code",JnlLineDim."Dimension Value Code")) OR
            (NOT CheckDim(JnlLineDim."Dimension Code"))
          THEN BEGIN
            DimValuePostingErr := DimErr;
            EXIT(FALSE);
          END;
          TempDimBuf2.INIT;
          TempDimBuf2."Table ID" := DATABASE::"Journal Line Dimension";
          TempDimBuf2."Dimension Code" := JnlLineDim."Dimension Code";
          IF JnlLineDim."Dimension Value Code" <> '' THEN BEGIN
            TempDimBuf2."Entry No." := i;
            TempDimBuf2."Dimension Value Code" := JnlLineDim."Dimension Value Code";
            TempDimBuf2.INSERT;
            i := i + 1;
          END;
          IF JnlLineDim."New Dimension Value Code" <> '' THEN BEGIN
            TempDimBuf2."Entry No." := i;
            TempDimBuf2."Dimension Value Code" := JnlLineDim."Dimension Value Code";
            TempDimBuf2.INSERT;
            i := i + 1;
          END;
        UNTIL JnlLineDim.NEXT = 0;
      END;
      EXIT(CheckValuePostingNeutrPaym(TableID,No));
    END;

    LOCAL PROCEDURE CheckValuePostingNeutrPaym@1140017(TableID@1140000 : ARRAY [10] OF Integer;No@1140001 : ARRAY [10] OF Code[20]) : Boolean;
    VAR
      DefaultDim@1140002 : Record 5055268;
      i@1140004 : Integer;
      j@1140005 : Integer;
      NoFilter@1140006 : ARRAY [2] OF Text[250];
    BEGIN
      DefaultDim.SETFILTER("Value Posting",'<>%1',DefaultDim."Value Posting"::" ");
      NoFilter[2] := '';
      FOR i := 1 TO ARRAYLEN(TableID) DO BEGIN
        IF (TableID[i] <> 0) AND (No[i] <> '') THEN BEGIN
          DefaultDim.SETRANGE("Table ID",TableID[i]);
          NoFilter[1] := No[i];
          FOR j := 1 TO 2 DO BEGIN
            DefaultDim.SETRANGE("No.",NoFilter[j]);
            IF DefaultDim.FIND('-') THEN BEGIN
              REPEAT
                TempDimBuf2.SETRANGE("Dimension Code",DefaultDim."Dimension Code");
                CASE DefaultDim."Value Posting" OF
                  DefaultDim."Value Posting"::"Code Mandatory":
                    BEGIN
                      IF NOT TempDimBuf2.FIND('-') THEN BEGIN
                        IF DefaultDim."No." = '' THEN
                          DimValuePostingErr :=
                            STRSUBSTNO(
                              Text1140002,
                              DefaultDim.FIELDCAPTION("Dimension Value Code"),
                              DefaultDim.FIELDCAPTION("Dimension Code"),DefaultDim."Dimension Code")
                        ELSE
                          DimValuePostingErr :=
                            STRSUBSTNO(
                              Text1140003,
                              DefaultDim.FIELDCAPTION("Dimension Value Code"),
                              DefaultDim.FIELDCAPTION("Dimension Code"),
                              DefaultDim."Dimension Code",
                              ObjTransl.TranslateObject(ObjTransl."Object Type"::Table,DefaultDim."Table ID"),
                              DefaultDim."No.");
                        EXIT(FALSE);
                      END;
                    END;
                  DefaultDim."Value Posting"::"Same Code":
                    BEGIN
                      IF (DefaultDim."Dimension Value Code" <> '') THEN BEGIN
                        IF (NOT TempDimBuf2.FIND('-')) OR
                          (DefaultDim."Dimension Value Code" <> TempDimBuf2."Dimension Value Code")
                        THEN BEGIN
                          IF DefaultDim."No." = '' THEN
                            DimValuePostingErr :=
                              STRSUBSTNO(
                                Text1140004,
                                DefaultDim.FIELDCAPTION("Dimension Value Code"),DefaultDim."Dimension Value Code",
                                DefaultDim.FIELDCAPTION("Dimension Code"),DefaultDim."Dimension Code")
                          ELSE
                            DimValuePostingErr :=
                              STRSUBSTNO(
                                Text1140005,
                                DefaultDim.FIELDCAPTION("Dimension Value Code"),
                                DefaultDim."Dimension Value Code",
                                DefaultDim.FIELDCAPTION("Dimension Code"),
                                DefaultDim."Dimension Code",
                                ObjTransl.TranslateObject(ObjTransl."Object Type"::Table,DefaultDim."Table ID"),
                                DefaultDim."No.");
                          EXIT(FALSE);
                        END;
                      END ELSE BEGIN
                        IF TempDimBuf2.FIND('-') THEN BEGIN
                          IF DefaultDim."No." = '' THEN
                            DimValuePostingErr :=
                              STRSUBSTNO(
                                Text1140006,
                                TempDimBuf2.FIELDCAPTION("Dimension Code"),TempDimBuf2."Dimension Code")
                          ELSE
                            DimValuePostingErr :=
                              STRSUBSTNO(
                                Text1140007,
                                TempDimBuf2.FIELDCAPTION("Dimension Code"),
                                TempDimBuf2."Dimension Code",
                                ObjTransl.TranslateObject(ObjTransl."Object Type"::Table,DefaultDim."Table ID"),
                                DefaultDim."No.");
                          EXIT(FALSE);
                        END;
                      END;
                    END;
                  DefaultDim."Value Posting"::"No Code":
                    BEGIN
                      IF TempDimBuf2.FIND('-') THEN BEGIN
                        IF DefaultDim."No." = '' THEN
                          DimValuePostingErr :=
                            STRSUBSTNO(
                              Text1140008,
                              TempDimBuf2.FIELDCAPTION("Dimension Code"),TempDimBuf2."Dimension Code")
                        ELSE
                          DimValuePostingErr :=
                            STRSUBSTNO(
                              Text1140009,
                              TempDimBuf2.FIELDCAPTION("Dimension Code"),
                              TempDimBuf2."Dimension Code",
                              ObjTransl.TranslateObject(ObjTransl."Object Type"::Table,DefaultDim."Table ID"),
                              DefaultDim."No.");
                        EXIT(FALSE);
                      END;
                    END;
                END;
              UNTIL DefaultDim.NEXT = 0;
              TempDimBuf2.RESET;
            END;
          END;
        END;
      END;
      EXIT(TRUE);
    END;

    BEGIN
    END.
  }
}
