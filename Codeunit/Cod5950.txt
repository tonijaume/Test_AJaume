OBJECT Codeunit 5950 Service-Calc. Discount
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=NAVW16.00.01,NAVES5.00;
  }
  PROPERTIES
  {
    TableNo=5902;
    OnRun=VAR
            ServiceLine@1000 : Record 5902;
          BEGIN
            ServiceLine.COPY(Rec);

            TempServHeader.GET("Document Type","Document No.");
            TemporaryHeader := FALSE;
            CalculateInvoiceDiscount(TempServHeader,ServiceLine,TempServiceLine);

            Rec := ServiceLine;
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Service Charge;ESP=Cargo servicio';
      TempServHeader@1001 : Record 5900;
      TempServiceLine@1003 : Record 5902;
      CustInvDisc@1004 : Record 19;
      CustPostingGr@1005 : Record 92;
      Currency@1006 : Record 4;
      InvDiscBase@1008 : Decimal;
      ChargeBase@1009 : Decimal;
      CurrencyDate@1011 : Date;
      TemporaryHeader@1012 : Boolean;
      CustInvDiscFound@1100000 : Boolean;
      GLSetup@1100001 : Record 98;
      InvAllow@1100002 : Boolean;

    LOCAL PROCEDURE CalculateInvoiceDiscount@1(VAR ServHeader@1000 : Record 5900;VAR ServiceLine@1006 : Record 5902;VAR ServiceLine2@1001 : Record 5902);
    VAR
      TempVATAmountLine@1002 : TEMPORARY Record 290;
      ServSetup@1003 : Record 5911;
      SalesSetup@1005 : Record 311;
      ServiceChargeLineNo@1004 : Integer;
      GLAcc@1100000 : Record 15;
    BEGIN
      ServSetup.GET;
      WITH ServiceLine DO BEGIN
        IF RECORDLEVELLOCKING THEN
          LOCKTABLE;
        ServHeader.TESTFIELD("Customer Posting Group");
        CustPostingGr.GET(ServHeader."Customer Posting Group");

        ServiceLine2.RESET;
        ServiceLine2.SETRANGE("Document Type","Document Type");
        ServiceLine2.SETRANGE("Document No.","Document No.");
        ServiceLine2.SETRANGE("System-Created Entry",TRUE);
        ServiceLine2.SETRANGE(Type,ServiceLine2.Type::"G/L Account");
        ServiceLine2.SETRANGE("No.",CustPostingGr."Service Charge Acc.");
        IF ServiceLine2.FIND('+') THEN BEGIN
          ServiceChargeLineNo := ServiceLine2."Line No.";
          ServiceLine2.VALIDATE("Unit Price",0);
          ServiceLine2.MODIFY;
        END;

        ServiceLine2.RESET;
        ServiceLine2.SETRANGE("Document Type","Document Type");
        ServiceLine2.SETRANGE("Document No.","Document No.");
        ServiceLine2.SETFILTER(Type,'<>0');
        IF ServiceLine2.FIND('-') THEN;
        ServiceLine2.CalcVATAmountLines(0,ServHeader,ServiceLine2,TempVATAmountLine, FALSE);
        InvDiscBase :=
          TempVATAmountLine.GetTotalInvDiscBaseAmount(
            ServHeader."Prices Including VAT",ServHeader."Currency Code");
        ChargeBase :=
          TempVATAmountLine.GetTotalLineAmount(
            ServHeader."Prices Including VAT",ServHeader."Currency Code");

        IF NOT TemporaryHeader THEN BEGIN
          IF NOT RECORDLEVELLOCKING THEN
            ServiceLine2.LOCKTABLE(TRUE,TRUE);
          ServHeader.MODIFY;
        END;

        IF ("Document Type" IN ["Document Type"::Quote]) AND
           (ServHeader."Posting Date" = 0D)
        THEN
          CurrencyDate := WORKDATE
        ELSE
          CurrencyDate := ServHeader."Posting Date";

        CustInvDiscFound := FALSE;

        CustInvDisc.GetRec(
          ServHeader."Invoice Disc. Code",ServHeader."Currency Code",CurrencyDate,ChargeBase,CustInvDiscFound);

        IF CustInvDiscFound AND (CustInvDisc."Service Charge" <> 0) THEN BEGIN
          CustPostingGr.TESTFIELD("Service Charge Acc.");
          IF ServHeader."Currency Code" = '' THEN
            Currency.InitRoundingPrecision
          ELSE
            Currency.GET(ServHeader."Currency Code");
          IF TemporaryHeader THEN
            ServiceLine2.SetServHeader(ServHeader);
          IF ServiceChargeLineNo <> 0 THEN BEGIN
            ServiceLine2.GET("Document Type","Document No.",ServiceChargeLineNo);
            IF ServHeader."Prices Including VAT" THEN
              ServiceLine2.VALIDATE(
                "Unit Price",
                ROUND(
                  (1 + ServiceLine2."VAT %" / 100) * CustInvDisc."Service Charge",
                  Currency."Unit-Amount Rounding Precision"))
            ELSE
              ServiceLine2.VALIDATE("Unit Price",CustInvDisc."Service Charge");
            ServiceLine2.MODIFY;
          END ELSE BEGIN
            ServiceLine2.RESET;
            ServiceLine2.SETRANGE("Document Type","Document Type");
            ServiceLine2.SETRANGE("Document No.","Document No.");
            ServiceLine2.FIND('+');
            ServiceLine2.INIT;
            IF TemporaryHeader THEN
              ServiceLine2.SetServHeader(ServHeader);
            ServiceLine2."Line No." := ServiceLine2."Line No." + GetNewServiceLineNoBias(ServiceLine2);
            ServiceLine2.Type := ServiceLine2.Type::"G/L Account";
            ServiceLine2.VALIDATE("No.",CustPostingGr."Service Charge Acc.");
            ServiceLine2.Description := Text000;
            ServiceLine2.VALIDATE(Quantity,1);
            IF ServHeader."Prices Including VAT" THEN
              ServiceLine2.VALIDATE(
                "Unit Price",
                ROUND(
                  (1 + ServiceLine2."VAT %" / 100) * CustInvDisc."Service Charge",
                  Currency."Unit-Amount Rounding Precision"))
            ELSE
              ServiceLine2.VALIDATE("Unit Price",CustInvDisc."Service Charge");
            ServiceLine2."System-Created Entry" := TRUE;
            ServiceLine2.INSERT;
          END;
          ServiceLine2.CalcVATAmountLines(0,ServHeader,ServiceLine2,TempVATAmountLine, FALSE);
        END ELSE
          IF ServiceChargeLineNo <> 0 THEN BEGIN
            ServiceLine2.GET("Document Type","Document No.",ServiceChargeLineNo);
            ServiceLine2.DELETE(TRUE);
          END;

        GLSetup.GET;
        IF GLSetup."Payment Discount Type" <> GLSetup."Payment Discount Type"::"Calc. Pmt. Disc. on Lines"
        THEN
          ServiceLine2.SETRANGE("Allow Invoice Disc.",TRUE);
        IF ServiceLine2.FIND('-') THEN BEGIN
          IF TemporaryHeader THEN
            ServiceLine2.SetServHeader(ServHeader);
          REPEAT
            InvAllow := FALSE;
            IF ServiceLine2.Type = ServiceLine2.Type::"G/L Account" THEN
              InvAllow := GLAcc.InvoiceDiscountAllowed(ServiceLine2."No.");
            IF (ServiceLine2.Quantity <> 0) AND NOT InvAllow THEN BEGIN
              ServiceLine2."Pmt. Disc. Given Amount" := 0;
              ServiceLine2.VALIDATE("Inv. Discount Amount");
              IF ServiceLine2."Allow Invoice Disc." THEN
                CASE GLSetup."Discount Calculation" OF
                  GLSetup."Discount Calculation"::" ",
                  GLSetup."Discount Calculation"::"Line Disc. * Inv. Disc. + Payment Disc.",
                  GLSetup."Discount Calculation"::"Line Disc. * Inv. Disc. * Payment Disc.":
                  ServiceLine2."Inv. Discount Amount" :=
                    ROUND(ServiceLine2."Line Amount" * CustInvDisc."Discount %" / 100,0.000001);
                  GLSetup."Discount Calculation"::"Line Disc. + Inv. Disc. + Payment Disc.",
                  GLSetup."Discount Calculation"::"Line Disc. + Inv. Disc. * Payment Disc.":
                    ServiceLine2."Inv. Discount Amount" :=
                      ROUND(
                        (ServiceLine2."Line Amount" + ServiceLine2."Line Discount Amount" ) *
                        CustInvDisc."Discount %" / 100,0.000001);
                      END;
                  IF GLSetup."Payment Discount Type" =
                     GLSetup."Payment Discount Type"::"Calc. Pmt. Disc. on Lines"
                  THEN BEGIN
                    GLSetup.TESTFIELD("Discount Calculation");
                    CASE GLSetup."Discount Calculation" OF
                      GLSetup."Discount Calculation"::"Line Disc. + Inv. Disc. + Payment Disc.",
                      GLSetup."Discount Calculation"::"Line Disc. * Inv. Disc. + Payment Disc.":
                        ServiceLine2."Pmt. Disc. Given Amount" :=
                          ROUND(
                            (ServiceLine2."Line Amount" + ServiceLine2."Line Discount Amount")
                            * ServHeader."Payment Discount %" / 100,0.01);
                      GLSetup."Discount Calculation"::"Line Disc. + Inv. Disc. * Payment Disc.",
                      GLSetup."Discount Calculation"::"Line Disc. * Inv. Disc. * Payment Disc.":
                        ServiceLine2."Pmt. Disc. Given Amount" :=
                          ROUND(
                            (ServiceLine2."Line Amount" - ServiceLine2."Inv. Discount Amount") *
                            ServHeader."Payment Discount %" / 100,0.01);
                    END;
                  END;

              ServiceLine2.VALIDATE("Inv. Discount Amount");
              ServiceLine2.MODIFY;
            END;
          UNTIL ServiceLine2.NEXT = 0;
        END;

        IF CustInvDiscRecExists(ServHeader."Invoice Disc. Code") THEN BEGIN
          IF InvDiscBase <> ChargeBase THEN
            CustInvDisc.GetRec(
              ServHeader."Invoice Disc. Code",ServHeader."Currency Code",CurrencyDate,InvDiscBase,CustInvDiscFound);

          ServHeader."Invoice Discount Calculation" := ServHeader."Invoice Discount Calculation"::"%";
          ServHeader."Invoice Discount Value" := CustInvDisc."Discount %";
          IF NOT TemporaryHeader THEN
            ServHeader.MODIFY;

          TempVATAmountLine.SetInvoiceDiscountPercent(
            CustInvDisc."Discount %",ServHeader."Currency Code",
            ServHeader."Prices Including VAT",SalesSetup."Calc. Inv. Disc. per VAT ID",
            ServHeader."VAT Base Discount %");

          ServiceLine2.SetServHeader(ServHeader);
          ServiceLine2.UpdateVATOnLines(0,ServHeader,ServiceLine2,TempVATAmountLine);
        END ELSE BEGIN
          ServHeader."Invoice Discount Calculation" := ServHeader."Invoice Discount Calculation"::"%";
          ServHeader."Invoice Discount Value" := CustInvDisc."Discount %";
          IF NOT TemporaryHeader THEN
            ServHeader.MODIFY;

          TempVATAmountLine.SetInvoiceDiscountPercent(
            CustInvDisc."Discount %",ServHeader."Currency Code",
            ServHeader."Prices Including VAT",SalesSetup."Calc. Inv. Disc. per VAT ID",
            ServHeader."VAT Base Discount %");

          ServiceLine2.SetServHeader(ServHeader);
          ServiceLine2.UpdateVATOnLines(0,ServHeader,ServiceLine2,TempVATAmountLine);
        END;
      END;
    END;

    LOCAL PROCEDURE CustInvDiscRecExists@2(InvDiscCode@1000 : Code[20]) : Boolean;
    VAR
      CustInvDisc@1001 : Record 19;
    BEGIN
      CustInvDisc.SETRANGE(Code,InvDiscCode);
      EXIT(CustInvDisc.FIND('-'));
    END;

    PROCEDURE CalculateWithServHeader@24(VAR TempServHeader@1000 : Record 5900;VAR ServiceLine@1003 : Record 5902;VAR TempServiceLine@1001 : Record 5902);
    BEGIN
      TemporaryHeader := TRUE;
      IF ServiceLine.GET(TempServiceLine."Document Type",TempServiceLine."Document No.",TempServiceLine."Line No.") THEN
        CalculateInvoiceDiscount(TempServHeader,ServiceLine,TempServiceLine);
    END;

    PROCEDURE CalculateIncDiscForHeader@3(VAR TempServiceHeader@1000 : Record 5900);
    VAR
      SalesSetup@1003 : Record 311;
      ServiceLine@1002 : Record 5902;
      ServiceLine2@1001 : Record 5902;
    BEGIN
      SalesSetup.GET;
      IF NOT SalesSetup."Calc. Inv. Discount" THEN EXIT;
      WITH TempServiceHeader DO BEGIN
        ServiceLine2."Document Type" := "Document Type";
        ServiceLine2."Document No." := "No.";
        ServiceLine.COPY(ServiceLine2);
        CalculateInvoiceDiscount(TempServiceHeader,ServiceLine2,ServiceLine);
      END;
    END;

    PROCEDURE GetNewServiceLineNoBias@34(ServiceLineParam@1000 : Record 5902) : Integer;
    VAR
      LineAdd@1001 : Integer;
      ServLin@1002 : Record 5902;
    BEGIN
      LineAdd := 10000;
      WHILE ServLin.GET(ServiceLineParam."Document Type",ServiceLineParam."Document No.",ServiceLineParam."Line No." + LineAdd) AND
           (LineAdd > 1)
      DO
        LineAdd := ROUND(LineAdd / 2,1,'<');
      EXIT(LineAdd);
    END;

    BEGIN
    END.
  }
}
