OBJECT Codeunit 701 BA Overview New Element
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=NAVW16.00.01;
  }
  PROPERTIES
  {
    TableNo=703;
    OnRun=BEGIN
            CASE Type OF
              Type::Cube: CreateNewCube(Rec);
              Type::"Virtual Cube": CreateNewVirtCube(Rec);
              Type::Dimension: CreateNewDim(Rec);
              Type::"Numbered List": CreateNewNumList(Rec);
            END;
          END;

  }
  CODE
  {
    VAR
      Text001@1000 : TextConst 'ENU=".,;''`:/\*|?""&%$!-+=()[]{}";ESP=".,;''`:/\*|?""&%$!-+=()[]{}"';
      Text002@1001 : TextConst 'ENU=_________________________;ESP=_________________________';

    LOCAL PROCEDURE CreateNewCube@3(VAR BADefLine@1000 : Record 703);
    VAR
      BACube@1006 : Record 709;
      BACubeRel@1005 : Record 710;
      BACubeMeasure@1004 : Record 711;
      BACubeFunc@1003 : Record 712;
      BACubeDim@1002 : Record 713;
      BACubeCard@1007 : Form 712;
    BEGIN
      BACube."BA Db. Code" := BADefLine."BA Db. Code";
      BACube.SETRANGE("BA Db. Code",BACube."BA Db. Code");
      IF BACube.FIND('+') THEN;
      BACube."Line No." := BACube."Line No." + 10000;
      BACube.INIT;
      BACube.INSERT;
      COMMIT;

      BACube.FILTERGROUP(2);
      BACube.SETRANGE("BA Db. Code",BACube."BA Db. Code");
      BACube.SETRANGE("Line No.",BACube."Line No.");
      BACube.FILTERGROUP(0);
      BACubeCard.SETRECORD(BACube);
      BACubeCard.SETTABLEVIEW(BACube);
      BACubeCard.RUNMODAL;
    END;

    LOCAL PROCEDURE CreateNewVirtCube@7(VAR BADefLine@1000 : Record 703);
    VAR
      BAVirtCube@1006 : Record 714;
      BAVirtCubeCard@1001 : Form 717;
    BEGIN
      BAVirtCube."BA Db. Code" := BADefLine."BA Db. Code";
      BAVirtCube.SETRANGE("BA Db. Code",BAVirtCube."BA Db. Code");
      IF BAVirtCube.FIND('+') THEN;
      BAVirtCube."Line No." := BAVirtCube."Line No." + 10000;
      BAVirtCube.INIT;
      BAVirtCube.INSERT;
      COMMIT;

      BAVirtCube.FILTERGROUP(2);
      BAVirtCube.SETRANGE("BA Db. Code",BAVirtCube."BA Db. Code");
      BAVirtCube.SETRANGE("Line No.",BAVirtCube."Line No.");
      BAVirtCube.FILTERGROUP(0);
      BAVirtCubeCard.SETRECORD(BAVirtCube);
      BAVirtCubeCard.SETTABLEVIEW(BAVirtCube);
      BAVirtCubeCard.RUNMODAL;
    END;

    LOCAL PROCEDURE CreateNewDim@6(VAR BADefLine@1000 : Record 703);
    VAR
      BADim@1006 : Record 706;
      BADimCard@1007 : Form 707;
    BEGIN
      BADim."BA Db. Code" := BADefLine."BA Db. Code";
      BADim.SETRANGE("BA Db. Code",BADim."BA Db. Code");
      IF BADim.FIND('+') THEN;
      BADim."Line No." := BADim."Line No." + 10000;
      BADim.INIT;
      BADim.INSERT;
      COMMIT;

      BADim.FILTERGROUP(2);
      BADim.SETRANGE("BA Db. Code",BADim."BA Db. Code");
      BADim.SETRANGE("Line No.",BADim."Line No.");
      BADim.FILTERGROUP(0);
      BADimCard.SETRECORD(BADim);
      BADimCard.SETTABLEVIEW(BADim);
      BADimCard.RUNMODAL;
    END;

    LOCAL PROCEDURE CreateNewNumList@5(VAR BADefLine@1000 : Record 703);
    VAR
      BANumList@1006 : Record 704;
      BANumListCard@1007 : Form 705;
    BEGIN
      BANumList."BA Db. Code" := BADefLine."BA Db. Code";
      BANumList.SETRANGE("BA Db. Code",BANumList."BA Db. Code");
      IF BANumList.FIND('+') THEN;
      BANumList."Line No." := BANumList."Line No." + 10000;
      BANumList.INIT;
      BANumList.INSERT;
      COMMIT;

      BANumList.FILTERGROUP(2);
      BANumList.SETRANGE("BA Db. Code",BANumList."BA Db. Code");
      BANumList.SETRANGE("Line No.",BANumList."Line No.");
      BANumList.FILTERGROUP(0);
      BANumListCard.SETRECORD(BANumList);
      BANumListCard.SETTABLEVIEW(BANumList);
      BANumListCard.RUNMODAL;
    END;

    PROCEDURE GetDimensionLine@1(BADbCode@1000 : Code[10];Field@1001 : Record 2000000041) : Integer;
    VAR
      BADbDim@1002 : Record 706;
      BANumList@1003 : Record 704;
      BANumListValue@1004 : Record 705;
      AllObjWithCaption@1009 : Record 2000000058;
      Date@1010 : Record 2000000007;
      RecRef@1005 : RecordRef;
      FieldRef@1006 : FieldRef;
      KeyRef@1007 : KeyRef;
      i@1008 : Integer;
      NewDimName@1011 : Text[30];
    BEGIN
      BADbDim.SETRANGE("BA Db. Code",BADbCode);
      IF Field.RelationTableNo <> 0 THEN BEGIN
        BADbDim.SETRANGE("Standard Type",BADbDim."Standard Type"::Table);
        BADbDim.SETRANGE("Table No.",Field.RelationTableNo);
        IF NOT BADbDim.FIND('-') THEN BEGIN
          BADbDim.SETRANGE("Standard Type");
          BADbDim.SETRANGE("Table No.");
          BADbDim."BA Db. Code" := BADbCode;
          IF NOT BADbDim.FIND('+') THEN
            BADbDim."Line No." := 0;
          BADbDim."Line No." := BADbDim."Line No." + 10000;
          BADbDim.INIT;
          BADbDim.Type := BADbDim.Type::Standard;
          BADbDim."Standard Type" := BADbDim."Standard Type"::Table;
          BADbDim."Table No." := Field.RelationTableNo;
          RecRef.OPEN(Field.RelationTableNo);
          KeyRef := RecRef.KEYINDEX(1);
          FOR i := 1 TO KeyRef.FIELDCOUNT DO BEGIN
            FieldRef := KeyRef.FIELDINDEX(i);
            IF BADbDim."Field Numbers" = '' THEN
              BADbDim."Field Numbers" := FORMAT(FieldRef.NUMBER)
            ELSE
              BADbDim."Field Numbers" := BADbDim."Field Numbers" + ',' + FORMAT(FieldRef.NUMBER);
          END;
          BADbDim.CALCFIELDS("Table Name");
          BADbDim.VALIDATE(Name,BADbDim."Table Name");
          BADbDim.INSERT;
        END;
      END ELSE
        CASE Field.Type OF
          Field.Type::Option,Field.Type::Boolean:
            BEGIN
              BANumList.SETRANGE("BA Db. Code",BADbCode);
              BANumList.SETRANGE(Type,BANumList.Type::Field);
              BANumList.SETRANGE("Table No.",Field.TableNo);
              BANumList.SETRANGE("Field No.",Field."No.");
              IF BANumList.FIND('-') THEN BEGIN
                BADbDim.SETRANGE("Standard Type",BADbDim."Standard Type"::"Numbered List");
                BADbDim.SETRANGE("Numbered List Line No.",BANumList."Line No.");
                IF BADbDim.FIND('-') THEN
                  EXIT(BADbDim."Line No.");
              END ELSE BEGIN
                BANumList.SETRANGE(Type);
                BANumList.SETRANGE("Table No.");
                BANumList.SETRANGE("Field No.");
                BANumList."BA Db. Code" := BADbCode;
                IF NOT BANumList.FIND('+') THEN
                  BANumList."Line No." := 0;
                BANumList."Line No." := BANumList."Line No." + 10000;
                BANumList.INIT;
                BANumList.Type := BANumList.Type::Field;
                BANumList."Table No." := Field.TableNo;
                BANumList."Field No." := Field."No.";
                BANumList.CALCFIELDS("Table Name","Field Name");
                IF STRLEN(BANumList."Table Name" + BANumList."Field Name") + 1 > 24 THEN
                  BANumList.VALIDATE(Name,COPYSTR(BANumList."Field Name",1,24))
                ELSE
                  BANumList.VALIDATE(Name,BANumList."Table Name" + ' ' + BANumList."Field Name");
                BANumList.INSERT;
                BANumList.CreateEnumeration;
              END;
              BADbDim."BA Db. Code" := BADbCode;
              BADbDim.SETRANGE("Standard Type");
              BADbDim.SETRANGE("Table No.");
              IF NOT BADbDim.FIND('+') THEN
                BADbDim."Line No." := 0;
              BADbDim."Line No." := BADbDim."Line No." + 10000;
              BADbDim.INIT;
              BADbDim.Type := BADbDim.Type::Standard;
              BADbDim."Standard Type" := BADbDim."Standard Type"::"Numbered List";
              BADbDim."Numbered List Line No." := BANumList."Line No.";
              BADbDim.VALIDATE(Name,BANumList.Name);
              BADbDim.INSERT;
            END;
          Field.Type::Date,Field.Type::DateTime:
            BEGIN
              AllObjWithCaption.GET(AllObjWithCaption."Object Type"::Table,Field.TableNo);
              IF STRLEN(AllObjWithCaption."Object Caption" + Field."Field Caption") + 1 > 24 THEN
                NewDimName := COPYSTR(Field."Field Caption",1,24)
              ELSE
                NewDimName := AllObjWithCaption."Object Caption" + ' ' + Field."Field Caption";
              BADbDim.SETRANGE(Type,BADbDim.Type::Time);
              BADbDim.SETRANGE(Name,NewDimName);
              IF NOT BADbDim.FIND('-') THEN BEGIN
                BADbDim."BA Db. Code" := BADbCode;
                BADbDim.SETRANGE("Standard Type");
                BADbDim.SETRANGE(Type);
                BADbDim.SETRANGE("Table No.");
                BADbDim.SETRANGE(Name);
                IF NOT BADbDim.FIND('+') THEN
                  BADbDim."Line No." := 0;
                BADbDim."Line No." := BADbDim."Line No." + 10000;
                BADbDim.INIT;
                BADbDim.Type := BADbDim.Type::Time;
                BADbDim.VALIDATE(Name,NewDimName);
                BADbDim.INSERT;
              END;
            END;
          ELSE BEGIN  // normal field with no table relation
            BADbDim."BA Db. Code" := BADbCode;
            BADbDim.SETRANGE("Standard Type");
            BADbDim.SETRANGE("Table No.");
            IF NOT BADbDim.FIND('+') THEN
              BADbDim."Line No." := 0;
            BADbDim."Line No." := BADbDim."Line No." + 10000;
            BADbDim.INIT;
            BADbDim.Type := BADbDim.Type::Standard;
            BADbDim."Table No." := Field.TableNo;
            BADbDim."Field Numbers" := FORMAT(Field."No.");
            AllObjWithCaption.GET(AllObjWithCaption."Object Type"::Table,Field.TableNo);
            IF STRLEN(AllObjWithCaption."Object Caption" + Field."Field Caption") + 1 > 24 THEN
              BADbDim.VALIDATE(Name,COPYSTR(Field."Field Caption",1,24))
            ELSE
              BADbDim.VALIDATE(Name,AllObjWithCaption."Object Caption" + ' ' + Field."Field Caption");
            BADbDim.INSERT;
          END;
        END;
      EXIT(BADbDim."Line No.");
    END;

    PROCEDURE GetDimensionLineFromDim@2(BADbCode@1000 : Code[10];DimCode@1001 : Code[20]) : Integer;
    VAR
      Dim@1010 : Record 348;
      BADbDim@1002 : Record 706;
    BEGIN
      BADbDim.SETRANGE("BA Db. Code",BADbCode);
      BADbDim.SETRANGE("Standard Type",BADbDim."Standard Type"::Dimension);
      BADbDim.SETRANGE(BADbDim."Dimension Code",DimCode);
      IF NOT BADbDim.FIND('-') THEN BEGIN
        Dim.GET(DimCode);
        BADbDim.SETRANGE("Standard Type");
        BADbDim.SETRANGE("Dimension Code");
        BADbDim."BA Db. Code" := BADbCode;
        IF NOT BADbDim.FIND('+') THEN
          BADbDim."Line No." := 0;
        BADbDim."Line No." := BADbDim."Line No." + 10000;
        BADbDim.INIT;
        BADbDim.Type := BADbDim.Type::Standard;
        BADbDim."Standard Type" := BADbDim."Standard Type"::Dimension;
        BADbDim."Table No." := DATABASE::Dimension;
        BADbDim."Field Numbers" := '2';
        BADbDim."Dimension Code" := Dim.Code;
        BADbDim.VALIDATE(Name,Dim.Name);
        BADbDim.INSERT;
      END;
      EXIT(BADbDim."Line No.");
    END;

    PROCEDURE ConvToDSOName@4(Name@1000 : Text[50]) : Text[50];
    BEGIN
      EXIT(CONVERTSTR(Name,Text001,Text002));
    END;

    BEGIN
    END.
  }
}
