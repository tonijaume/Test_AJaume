OBJECT Codeunit 7130 Item Budget Management
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=NAVW16.00.01;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text001@1002 : TextConst 'ENU=DEFAULT;ESP=GENERICO';
      Text002@1001 : TextConst 'ENU=Default budget;ESP=Ppto. gen‚rico';
      GLSetup@1007 : Record 98;
      PrevItemBudgetName@1003 : Record 7132;
      Text003@1004 : TextConst 'ENU=Period;ESP=Periodo';
      Text004@1006 : TextConst 'ENU=%1 is not a valid line definition.;ESP=%1 no es una def. de l¡nea v lida.';
      Text005@1005 : TextConst 'ENU=%1 is not a valid column definition.;ESP=%1 no es una def. de columna v lida.';
      GLSetupRead@1008 : Boolean;
      Text006@1009 : TextConst 'ENU=Do you want to delete the budget entries shown?;ESP=¨Confirma que desea borrar los movs. presupuest. mostrados?';
      Text007@1010 : TextConst 'ENU=<Sign><Integer Thousand><Decimals,2>;ESP=<Sign><Integer Thousand><Decimals,2>';

    PROCEDURE BudgetNameSelection@3(CurrentAnalysisArea@1001 : 'Sale,Purchase,Inventory';VAR CurrentItemBudgetName@1000 : Code[10];VAR ItemBudgetName@1002 : Record 7132;VAR ItemStatisticsBuffer@1003 : Record 5821;VAR BudgetDim1Filter@1006 : Code[250];VAR BudgetDim2Filter@1005 : Code[250];VAR BudgetDim3Filter@1004 : Code[250]);
    BEGIN
      IF NOT ItemBudgetName.GET(CurrentAnalysisArea,CurrentItemBudgetName) THEN BEGIN
        ItemBudgetName.FILTERGROUP := 2;
        ItemBudgetName.SETRANGE("Analysis Area",CurrentAnalysisArea);
        ItemBudgetName.FILTERGROUP := 0;
        IF NOT ItemBudgetName.FIND('-') THEN BEGIN
          ItemBudgetName.INIT;
          ItemBudgetName."Analysis Area" := CurrentAnalysisArea;
          ItemBudgetName.Name := Text001;
          ItemBudgetName.Description := Text002;
          ItemBudgetName.INSERT(TRUE);
        END;
        CurrentItemBudgetName := ItemBudgetName.Name;
      END;

      SetItemBudgetName(
        CurrentItemBudgetName,ItemBudgetName,ItemStatisticsBuffer,
        BudgetDim1Filter,BudgetDim2Filter,BudgetDim3Filter);
    END;

    PROCEDURE CheckBudgetName@2(CurrentAnalysisType@1002 : 'Sale,Purchase,Inventory';VAR CurrentItemBudgetName@1001 : Code[10];VAR ItemBudgetName@1000 : Record 7132);
    BEGIN
      ItemBudgetName.GET(CurrentAnalysisType,CurrentItemBudgetName);
    END;

    PROCEDURE SetItemBudgetName@4(VAR CurrentItemBudgetName@1002 : Code[10];VAR ItemBudgetName@1001 : Record 7132;VAR ItemStatisticsBuf@1000 : Record 5821;VAR BudgetDim1Filter@1005 : Code[250];VAR BudgetDim2Filter@1004 : Code[250];VAR BudgetDim3Filter@1003 : Code[250]);
    BEGIN
      ItemStatisticsBuf.SETRANGE("Budget Filter",CurrentItemBudgetName);
      IF PrevItemBudgetName.Name <> '' THEN BEGIN
        IF (ItemBudgetName."Budget Dimension 1 Code" <> PrevItemBudgetName."Budget Dimension 1 Code") THEN
          BudgetDim1Filter := '';
        IF (ItemBudgetName."Budget Dimension 2 Code" <> PrevItemBudgetName."Budget Dimension 2 Code") THEN
          BudgetDim2Filter := '';
        IF (ItemBudgetName."Budget Dimension 3 Code" <> PrevItemBudgetName."Budget Dimension 3 Code") THEN
          BudgetDim3Filter := '';
      END;
      ItemStatisticsBuf.SETFILTER("Dimension 1 Filter",BudgetDim1Filter);
      ItemStatisticsBuf.SETFILTER("Dimension 2 Filter",BudgetDim2Filter);
      ItemStatisticsBuf.SETFILTER("Dimension 3 Filter",BudgetDim3Filter);

      PrevItemBudgetName := ItemBudgetName;
    END;

    PROCEDURE LookupItemBudgetName@5(VAR CurrentItemBudgetName@1005 : Code[10];VAR ItemBudgetName@1004 : Record 7132;VAR ItemStatisticsBuf@1003 : Record 5821;VAR BudgetDim1Filter@1002 : Code[250];VAR BudgetDim2Filter@1001 : Code[250];VAR BudgetDim3Filter@1000 : Code[250]);
    VAR
      ItemBudgetName2@1006 : Record 7132;
    BEGIN
      ItemBudgetName2.COPY(ItemBudgetName);
      ItemBudgetName2.FILTERGROUP := 2;
      ItemBudgetName2.SETRANGE("Analysis Area",ItemBudgetName2."Analysis Area");
      ItemBudgetName2.FILTERGROUP := 0;
      IF FORM.RUNMODAL(0,ItemBudgetName2) = ACTION::LookupOK THEN BEGIN
        ItemBudgetName := ItemBudgetName2;
        CurrentItemBudgetName := ItemBudgetName.Name;
        SetItemBudgetName(
          CurrentItemBudgetName,ItemBudgetName,ItemStatisticsBuf,
          BudgetDim1Filter,BudgetDim2Filter,BudgetDim3Filter);
      END ELSE
        BudgetNameSelection(
          ItemBudgetName."Analysis Area",CurrentItemBudgetName,ItemBudgetName,ItemStatisticsBuf,
          BudgetDim1Filter,BudgetDim2Filter,BudgetDim3Filter);
    END;

    PROCEDURE SetLineAndColDim@6(ItemBudgetName@1005 : Record 7132;VAR LineDimCode@1000 : Text[30];VAR LineDimOption@1006 : 'Item,Customer,Vendor,Period,Location,Global Dimension 1,Global Dimension 2,Budget Dimension 1,Budget Dimension 2,Budget Dimension 3';VAR ColumnDimCode@1003 : Text[30];VAR ColumnDimOption@1001 : 'Item,Customer,Vendor,Period,Location,Global Dimension 1,Global Dimension 2,Budget Dimension 1,Budget Dimension 2,Budget Dimension 3');
    VAR
      Item@1004 : Record 27;
    BEGIN
      IF (LineDimCode = '') AND (ColumnDimCode = '') THEN BEGIN
        LineDimCode := Item.TABLECAPTION;
        ColumnDimCode := Text003;
      END;
      LineDimOption := DimCodeToOption(LineDimCode,ItemBudgetName);
      ColumnDimOption := DimCodeToOption(ColumnDimCode,ItemBudgetName);
    END;

    PROCEDURE FindRec@59(ItemBudgetName@1022 : Record 7132;DimOption@1000 : 'Item,Customer,Vendor,Period,Location,Global Dimension 1,Global Dimension 2,Budget Dimension 1,Budget Dimension 2,Budget Dimension 3,Budget Dimension 4';VAR DimCodeBuf@1001 : Record 367;Which@1002 : Text[250];ItemFilter@1011 : Code[250];SourceNoFilter@1012 : Code[250];PeriodType@1016 : 'Day,Week,Month,Quarter,Year,Accounting Period';VAR DateFilter@1014 : Text[30];VAR PeriodInitialized@1013 : Boolean;VAR InternalDateFilter@1015 : Text[30];GlobalDim1Filter@1021 : Code[250];GlobalDim2Filter@1020 : Code[250];BudgetDim1Filter@1019 : Code[250];BudgetDim2Filter@1018 : Code[250];BudgetDim3Filter@1017 : Code[250]) : Boolean;
    VAR
      Item@1003 : Record 27;
      Cust@1009 : Record 18;
      Vend@1010 : Record 23;
      Location@1004 : Record 14;
      Period@1005 : Record 2000000007;
      PeriodFormMgt@1007 : Codeunit 359;
      Found@1008 : Boolean;
    BEGIN
      GetGLSetup;
      CASE DimOption OF
        DimOption::Item:
          BEGIN
            Item."No." := DimCodeBuf.Code;
            IF ItemFilter <> '' THEN
              Item.SETFILTER("No.",ItemFilter);
            Found := Item.FIND(Which);
            IF Found THEN
              CopyItemToBuf(Item,DimCodeBuf);
          END;
        DimOption::Customer:
          BEGIN
            Cust."No." := DimCodeBuf.Code;
            IF SourceNoFilter <> '' THEN
              Cust.SETFILTER("No.",SourceNoFilter);
            Found := Cust.FIND(Which);
            IF Found THEN
              CopyCustToBuf(Cust,DimCodeBuf);
          END;
        DimOption::Vendor:
          BEGIN
            Vend."No." := DimCodeBuf.Code;
            IF SourceNoFilter <> '' THEN
              Vend.SETFILTER("No.",SourceNoFilter);
            Found := Vend.FIND(Which);
            IF Found THEN
              CopyVendToBuf(Vend,DimCodeBuf);
          END;
        DimOption::Period:
          BEGIN
            Period."Period Start" := DimCodeBuf."Period Start";
            IF DateFilter <> '' THEN
              Period.SETFILTER("Period Start",DateFilter)
            ELSE
              IF NOT PeriodInitialized AND (InternalDateFilter <> '') THEN
                Period.SETFILTER("Period Start",InternalDateFilter);
            Found := PeriodFormMgt.FindDate(Which,Period,PeriodType);
            IF Found THEN
              CopyPeriodToBuf(Period,DimCodeBuf,DateFilter);
            PeriodInitialized := TRUE;
          END;
        DimOption::Location:
          BEGIN
            Location.Code := DimCodeBuf.Code;
            IF SourceNoFilter <> '' THEN
              Location.SETFILTER(Code,SourceNoFilter);
            Found := Location.FIND(Which);
            IF Found THEN
              CopyLocationToBuf(Location,DimCodeBuf);
          END;
        DimOption::"Global Dimension 1":
            Found := FindDim(DimCodeBuf,Which,GlobalDim1Filter,GLSetup."Global Dimension 1 Code");
        DimOption::"Global Dimension 2":
            Found := FindDim(DimCodeBuf,Which,GlobalDim2Filter,GLSetup."Global Dimension 2 Code");
        DimOption::"Budget Dimension 1":
            Found := FindDim(DimCodeBuf,Which,BudgetDim1Filter,ItemBudgetName."Budget Dimension 1 Code");
        DimOption::"Budget Dimension 2":
            Found := FindDim(DimCodeBuf,Which,BudgetDim2Filter,ItemBudgetName."Budget Dimension 2 Code");
        DimOption::"Budget Dimension 3":
            Found := FindDim(DimCodeBuf,Which,BudgetDim3Filter,ItemBudgetName."Budget Dimension 3 Code");
      END;
      EXIT(Found);
    END;

    LOCAL PROCEDURE FindDim@27(VAR DimCodeBuf@1003 : Record 367;Which@1004 : Text[250];DimFilter@1000 : Code[250];DimCode@1001 : Code[20]) : Boolean;
    VAR
      DimVal@1002 : Record 349;
    BEGIN
      IF DimFilter <> '' THEN
       DimVal.SETFILTER(Code,DimFilter);
      DimVal."Dimension Code" := DimCode;
      DimVal.SETRANGE("Dimension Code",DimVal."Dimension Code");
      DimVal.Code := DimCodeBuf.Code;
      IF DimVal.FIND(Which) THEN BEGIN
        CopyDimValToBuf(DimVal,DimCodeBuf);
        EXIT(TRUE);
      END
    END;

    PROCEDURE NextRec@60(ItemBudgetName@1022 : Record 7132;DimOption@1000 : 'Item,Customer,Vendor,Period,Location,Global Dimension 1,Global Dimension 2,Budget Dimension 1,Budget Dimension 2,Budget Dimension 3,Budget Dimension 4';VAR DimCodeBuf@1001 : Record 367;Steps@1002 : Integer;ItemFilter@1021 : Code[250];SourceNoFilter@1020 : Code[250];PeriodType@1019 : 'Day,Week,Month,Quarter,Year,Accounting Period';VAR DateFilter@1018 : Text[30];GlobalDim1Filter@1015 : Code[250];GlobalDim2Filter@1014 : Code[250];BudgetDim1Filter@1013 : Code[250];BudgetDim2Filter@1012 : Code[250];BudgetDim3Filter@1011 : Code[250]) : Integer;
    VAR
      Item@1003 : Record 27;
      Cust@1009 : Record 18;
      Vend@1010 : Record 23;
      Location@1004 : Record 14;
      Period@1005 : Record 2000000007;
      PeriodFormMgt@1007 : Codeunit 359;
      ResultSteps@1008 : Integer;
    BEGIN
      GetGLSetup;
      CASE DimOption OF
        DimOption::Item:
          BEGIN
            Item."No." := DimCodeBuf.Code;
            IF ItemFilter <> '' THEN
              Item.SETFILTER("No.",ItemFilter);
            ResultSteps := Item.NEXT(Steps);
            IF ResultSteps <> 0 THEN
              CopyItemToBuf(Item,DimCodeBuf);
          END;
        DimOption::Customer:
          BEGIN
            Cust."No." := DimCodeBuf.Code;
            IF SourceNoFilter <> '' THEN
              Cust.SETFILTER("No.",SourceNoFilter);
            ResultSteps := Cust.NEXT(Steps);
            IF ResultSteps <> 0 THEN
              CopyCustToBuf(Cust,DimCodeBuf);
          END;
        DimOption::Vendor:
          BEGIN
            Vend."No." := DimCodeBuf.Code;
            IF SourceNoFilter <> '' THEN
              Vend.SETFILTER("No.",SourceNoFilter);
            ResultSteps := Vend.NEXT(Steps);
            IF ResultSteps <> 0 THEN
              CopyVendToBuf(Vend,DimCodeBuf);
          END;
        DimOption::Period:
          BEGIN
            IF DateFilter <> '' THEN
              Period.SETFILTER("Period Start",DateFilter);
            Period."Period Start" := DimCodeBuf."Period Start";
            ResultSteps := PeriodFormMgt.NextDate(Steps,Period,PeriodType);
            IF ResultSteps <> 0 THEN
              CopyPeriodToBuf(Period,DimCodeBuf,DateFilter);
          END;
        DimOption::Location:
          BEGIN
            Location.Code := DimCodeBuf.Code;
            IF SourceNoFilter <> '' THEN
              Location.SETFILTER(Code,SourceNoFilter);
            ResultSteps := Location.NEXT(Steps);
            IF ResultSteps <> 0 THEN
              CopyLocationToBuf(Location,DimCodeBuf);
          END;
        DimOption::"Global Dimension 1":
          ResultSteps := NextDim(DimCodeBuf,Steps,GlobalDim1Filter,GLSetup."Global Dimension 1 Code");
        DimOption::"Global Dimension 2":
          ResultSteps := NextDim(DimCodeBuf,Steps,GlobalDim2Filter,GLSetup."Global Dimension 2 Code");
        DimOption::"Budget Dimension 1":
          ResultSteps := NextDim(DimCodeBuf,Steps,BudgetDim1Filter,ItemBudgetName."Budget Dimension 1 Code");
        DimOption::"Budget Dimension 2":
          ResultSteps := NextDim(DimCodeBuf,Steps,BudgetDim2Filter,ItemBudgetName."Budget Dimension 2 Code");
        DimOption::"Budget Dimension 3":
          ResultSteps := NextDim(DimCodeBuf,Steps,BudgetDim3Filter,ItemBudgetName."Budget Dimension 3 Code");
      END;
      EXIT(ResultSteps);
    END;

    LOCAL PROCEDURE NextDim@31(VAR DimCodeBuf@1003 : Record 367;Steps@1004 : Integer;DimFilter@1000 : Code[250];DimCode@1001 : Code[20]) : Integer;
    VAR
      DimVal@1002 : Record 349;
      ActualSteps@1005 : Integer;
    BEGIN
      IF DimFilter <> '' THEN
       DimVal.SETFILTER(Code,DimFilter);
      DimVal."Dimension Code" := DimCode;
      DimVal.SETRANGE("Dimension Code",DimVal."Dimension Code");
      DimVal.Code := DimCodeBuf.Code;
      ActualSteps := DimVal.NEXT(Steps);
      IF ActualSteps <> 0 THEN
        CopyDimValToBuf(DimVal,DimCodeBuf);
      EXIT(ActualSteps);
    END;

    PROCEDURE SetCommonFilters@15(VAR ItemStatisticsBuf@1000 : Record 5821;ItemBudgetName@1001 : Record 7132;ItemFilter@1002 : Code[250];SourceTypeFilter@1004 : ' ,Customer,Vendor,Item';SourceNoFilter@1003 : Code[250];DateFilter@1005 : Text[30];GlobalDim1Filter@1010 : Code[250];GlobalDim2Filter@1009 : Code[250];BudgetDim1Filter@1008 : Code[250];BudgetDim2Filter@1007 : Code[250];BudgetDim3Filter@1006 : Code[250]);
    BEGIN
      WITH ItemStatisticsBuf DO BEGIN
        RESET;
        SETRANGE("Analysis Area Filter",ItemBudgetName."Analysis Area");
        SETRANGE("Budget Filter",ItemBudgetName.Name);
        IF ItemFilter <> '' THEN
          SETFILTER("Item Filter",ItemFilter);
        IF SourceNoFilter <> '' THEN BEGIN
          SETFILTER("Source Type Filter",'%1',SourceTypeFilter);
          SETFILTER("Source No. Filter",SourceNoFilter);
        END;
        IF DateFilter <> '' THEN
          SETFILTER("Date Filter",DateFilter);
        IF GlobalDim1Filter <> '' THEN
          SETFILTER("Global Dimension 1 Filter",GlobalDim1Filter);
        IF GlobalDim2Filter <> '' THEN
          SETFILTER("Global Dimension 2 Filter",GlobalDim2Filter);
        IF BudgetDim1Filter <> '' THEN
          SETFILTER("Dimension 1 Filter",BudgetDim1Filter);
        IF BudgetDim2Filter <> '' THEN
          SETFILTER("Dimension 2 Filter",BudgetDim2Filter);
        IF BudgetDim3Filter <> '' THEN
          SETFILTER("Dimension 3 Filter",BudgetDim3Filter);
      END;
    END;

    PROCEDURE SetDimFilters@17(VAR ItemStatisticsBuf@1000 : Record 5821;DimOption@1002 : 'Item,Customer,Vendor,Period,Location,Global Dimension 1,Global Dimension 2,Budget Dimension 1,Budget Dimension 2,Budget Dimension 3,Budget Dimension 4';DimCodeBuf@1003 : Record 367);
    BEGIN
      WITH ItemStatisticsBuf DO
        CASE DimOption OF
          DimOption::Item:
            ItemStatisticsBuf.SETRANGE("Item Filter",DimCodeBuf.Code);
          DimOption::Customer:
            BEGIN
              SETRANGE("Source Type Filter","Source Type Filter"::Customer);
              SETRANGE("Source No. Filter",DimCodeBuf.Code);
            END;
          DimOption::Vendor:
            BEGIN
              SETRANGE("Source Type Filter","Source Type Filter"::Vendor);
              SETRANGE("Source No. Filter",DimCodeBuf.Code);
            END;
          DimOption::Location:
            SETRANGE("Location Filter",DimCodeBuf.Code);
          DimOption::Period:
            SETRANGE("Date Filter",DimCodeBuf."Period Start",DimCodeBuf."Period End");
          DimOption::"Global Dimension 1":
            IF DimCodeBuf.Totaling <> '' THEN
              SETFILTER("Global Dimension 1 Filter",DimCodeBuf.Totaling)
            ELSE
              SETRANGE("Global Dimension 1 Filter",DimCodeBuf.Code);
          DimOption::"Global Dimension 2":
            IF DimCodeBuf.Totaling <> '' THEN
              SETFILTER("Global Dimension 2 Filter",DimCodeBuf.Totaling)
            ELSE
              SETRANGE("Global Dimension 2 Filter",DimCodeBuf.Code);
          DimOption::"Budget Dimension 1":
            IF DimCodeBuf.Totaling <> '' THEN
              SETFILTER("Dimension 1 Filter",DimCodeBuf.Totaling)
            ELSE
              SETRANGE("Dimension 1 Filter",DimCodeBuf.Code);
          DimOption::"Budget Dimension 2":
            IF DimCodeBuf.Totaling <> '' THEN
              SETFILTER("Dimension 2 Filter",DimCodeBuf.Totaling)
            ELSE
              SETRANGE("Dimension 2 Filter",DimCodeBuf.Code);
          DimOption::"Budget Dimension 3":
            IF DimCodeBuf.Totaling <> '' THEN
              SETFILTER("Dimension 3 Filter",DimCodeBuf.Totaling)
            ELSE
              SETRANGE("Dimension 3 Filter",DimCodeBuf.Code);
        END;
    END;

    LOCAL PROCEDURE DimCodeToOption@21(DimCode@1000 : Code[20];ItemBudgetName@1006 : Record 7132) : Integer;
    VAR
      Location@1001 : Record 14;
      Item@1002 : Record 27;
      Cust@1003 : Record 18;
      Vend@1004 : Record 23;
    BEGIN
      GetGLSetup;
      CASE DimCode OF
        '' :
          EXIT(-1);
        UPPERCASE(Item.TABLECAPTION):
          EXIT(0);
        UPPERCASE(Cust.TABLECAPTION):
          EXIT(1);
        UPPERCASE(Vend.TABLECAPTION):
          EXIT(2);
        UPPERCASE(Text003):
          EXIT(3);
        UPPERCASE(Location.TABLECAPTION):
          EXIT(4);
        GLSetup."Global Dimension 1 Code":
          EXIT(5);
        GLSetup."Global Dimension 2 Code":
          EXIT(6);
        ItemBudgetName."Budget Dimension 1 Code":
          EXIT(7);
        ItemBudgetName."Budget Dimension 2 Code":
          EXIT(8);
        ItemBudgetName."Budget Dimension 3 Code":
          EXIT(9);
        ELSE
          EXIT(-1);
      END;
    END;

    PROCEDURE GetDimSelection@8(OldDimSelCode@1000 : Text[30];ItemBudgetName@1006 : Record 7132) : Text[30];
    VAR
      Item@1001 : Record 27;
      Cust@1003 : Record 18;
      Vend@1004 : Record 23;
      Location@1005 : Record 14;
      DimSelection@1002 : Form 568;
    BEGIN
      GetGLSetup;
      DimSelection.InsertDimSelBuf(FALSE,Item.TABLECAPTION,Item.TABLECAPTION);
      DimSelection.InsertDimSelBuf(FALSE,Cust.TABLECAPTION,Cust.TABLECAPTION);
      DimSelection.InsertDimSelBuf(FALSE,Location.TABLECAPTION,Location.TABLECAPTION);
      DimSelection.InsertDimSelBuf(FALSE,Vend.TABLECAPTION,Vend.TABLECAPTION);
      DimSelection.InsertDimSelBuf(FALSE,Text003,Text003);
      IF GLSetup."Global Dimension 1 Code" <> '' THEN
        DimSelection.InsertDimSelBuf(FALSE,GLSetup."Global Dimension 1 Code",'');
      IF GLSetup."Global Dimension 2 Code" <> '' THEN
        DimSelection.InsertDimSelBuf(FALSE,GLSetup."Global Dimension 2 Code",'');
      IF ItemBudgetName."Budget Dimension 1 Code" <> '' THEN
        DimSelection.InsertDimSelBuf(FALSE,ItemBudgetName."Budget Dimension 1 Code",'');
      IF ItemBudgetName."Budget Dimension 2 Code" <> '' THEN
        DimSelection.InsertDimSelBuf(FALSE,ItemBudgetName."Budget Dimension 2 Code",'');
      IF ItemBudgetName."Budget Dimension 3 Code" <> '' THEN
        DimSelection.InsertDimSelBuf(FALSE,ItemBudgetName."Budget Dimension 3 Code",'');

      DimSelection.LOOKUPMODE := TRUE;
      IF DimSelection.RUNMODAL = ACTION::LookupOK THEN
        EXIT(DimSelection.GetDimSelCode);
      EXIT(OldDimSelCode);
    END;

    PROCEDURE ValidateLineDimCode@19(ItemBudgetName@1006 : Record 7132;VAR LineDimCode@1004 : Text[30];VAR LineDimOption@1007 : 'Item,Customer,Vendor,Period,Business Unit,Global Dimension 1,Global Dimension 2,Budget Dimension 1,Budget Dimension 2,Budget Dimension 3,Budget Dimension 4';ColumnDimOption@1010 : 'Item,Customer,Vendor,Period,Business Unit,Global Dimension 1,Global Dimension 2,Budget Dimension 1,Budget Dimension 2,Budget Dimension 3,Budget Dimension 4';VAR InternalDateFilter@1005 : Text[30];VAR DateFilter@1008 : Text[30];VAR ItemStatisticsBuf@1009 : Record 5821;VAR PeriodInitialized@1011 : Boolean);
    BEGIN
      IF DimCodeNotAllowed(LineDimCode,ItemBudgetName) THEN BEGIN
        MESSAGE(Text004,LineDimCode);
        LineDimCode := '';
      END;
      LineDimOption := DimCodeToOption(LineDimCode,ItemBudgetName);
      InternalDateFilter := ItemStatisticsBuf.GETFILTER("Date Filter");
      IF (LineDimOption <> LineDimOption::Period) AND (ColumnDimOption <> ColumnDimOption::Period) THEN BEGIN
        DateFilter := InternalDateFilter;
        IF STRPOS(DateFilter,'&') > 1 THEN
          DateFilter := COPYSTR(DateFilter,1,STRPOS(DateFilter,'&') - 1);
      END ELSE
        PeriodInitialized := FALSE;
    END;

    PROCEDURE ValidateColumnDimCode@10(ItemBudgetName@1006 : Record 7132;VAR ColumnDimCode@1004 : Text[30];VAR ColumnDimOption@1007 : 'Item,Customer,Vendor,Period,Business Unit,Global Dimension 1,Global Dimension 2,Budget Dimension 1,Budget Dimension 2,Budget Dimension 3,Budget Dimension 4';LineDimOption@1010 : 'Item,Customer,Vendor,Period,Business Unit,Global Dimension 1,Global Dimension 2,Budget Dimension 1,Budget Dimension 2,Budget Dimension 3,Budget Dimension 4';VAR InternalDateFilter@1005 : Text[30];VAR DateFilter@1008 : Text[30];VAR ItemStatisticsBuf@1009 : Record 5821;VAR PeriodInitialized@1011 : Boolean);
    BEGIN
      IF DimCodeNotAllowed(ColumnDimCode,ItemBudgetName) THEN BEGIN
        MESSAGE(Text005,ColumnDimCode);
        ColumnDimCode := '';
      END;
      ColumnDimOption := DimCodeToOption(ColumnDimCode,ItemBudgetName);
      InternalDateFilter := ItemStatisticsBuf.GETFILTER("Date Filter");
      IF (ColumnDimOption <> ColumnDimOption::Period) AND (LineDimOption <> LineDimOption::Period) THEN BEGIN
        DateFilter := InternalDateFilter;
        IF STRPOS(DateFilter,'&') > 1 THEN
          DateFilter := COPYSTR(DateFilter,1,STRPOS(DateFilter,'&') - 1);
      END ELSE
        PeriodInitialized := FALSE;
    END;

    PROCEDURE DimCodeNotAllowed@7(DimCode@1000 : Text[30];ItemBudgetName@1001 : Record 7132) : Boolean;
    VAR
      Item@1003 : Record 27;
      Cust@1004 : Record 18;
      Vend@1005 : Record 23;
      Location@1006 : Record 14;
    BEGIN
      GetGLSetup;
      EXIT(
        NOT (UPPERCASE(DimCode) IN
            [UPPERCASE(Item.TABLECAPTION),
             UPPERCASE(Cust.TABLECAPTION),
             UPPERCASE(Vend.TABLECAPTION),
             UPPERCASE(Location.TABLECAPTION),
             UPPERCASE(Text003),
             ItemBudgetName."Budget Dimension 1 Code",
             ItemBudgetName."Budget Dimension 2 Code",
             ItemBudgetName."Budget Dimension 3 Code",
             GLSetup."Global Dimension 1 Code",
             GLSetup."Global Dimension 2 Code",
             '']));
    END;

    PROCEDURE FormatAmount@23(VAR Text@1005 : Text[250];RoundingFactor@1002 : 'None,1,1000,1000000');
    VAR
      Amount@1001 : Decimal;
    BEGIN
      IF (Text = '') OR (RoundingFactor = RoundingFactor::None) THEN
        EXIT;
      EVALUATE(Amount,Text);
      CASE RoundingFactor OF
        RoundingFactor::"1":
          Amount := ROUND(Amount,1);
        RoundingFactor::"1000":
          Amount := ROUND(Amount / 1000,0.1);
        RoundingFactor::"1000000":
          Amount := ROUND(Amount / 1000000,0.1);
      END;
      IF Amount = 0 THEN
        Text := ''
      ELSE
        CASE RoundingFactor OF
          RoundingFactor::"1":
            Text := FORMAT(Amount);
          RoundingFactor::"1000",RoundingFactor::"1000000":
            Text := FORMAT(Amount,0,Text007);
        END;
    END;

    PROCEDURE EvaluateAmount@20(VAR Text@1000 : Text[250];VAR InputError@1002 : Boolean;VAR InputErrorText@1003 : Text[250];RoundingFactor@1004 : 'None,1,1000,1000000');
    VAR
      Amount@1001 : Decimal;
    BEGIN
      IF DELCHR(Text) IN ['','-'] THEN
        Text := '0';
      IF Text[STRLEN(Text)] = '-' THEN
        Text := '-' + COPYSTR(Text,1,STRLEN(Text) - 1);

      InputError := NOT EVALUATE(Amount,Text);
      IF InputError THEN
        InputErrorText := Text
      ELSE
        CASE RoundingFactor OF
          RoundingFactor::"1000":
            Amount := Amount * 1000;
          RoundingFactor::"1000000":
            Amount := Amount * 1000000;
        END;
      Text := FORMAT(Amount);
    END;

    PROCEDURE BudgetDrillDown@30(ItemBudgetName@1001 : Record 7132;ItemFilter@1010 : Code[250];SourceTypeFilter@1009 : ' ,Customer,Vendor,Item';SourceNoFilter@1008 : Code[250];DateFilter@1007 : Text[30];GlobalDim1Filter@1006 : Code[250];GlobalDim2Filter@1005 : Code[250];BudgetDim1Filter@1004 : Code[250];BudgetDim2Filter@1003 : Code[250];BudgetDim3Filter@1002 : Code[250];RowDimOption@1015 : 'Item,Customer,Vendor,Period,Location,Global Dimension 1,Global Dimension 2,Budget Dimension 1,Budget Dimension 2,Budget Dimension 3,Budget Dimension 4';RowDimCodeBuf@1014 : Record 367;ColDimOption@1013 : 'Item,Customer,Vendor,Period,Location,Global Dimension 1,Global Dimension 2,Budget Dimension 1,Budget Dimension 2,Budget Dimension 3,Budget Dimension 4';ColDimCodeBuf@1012 : Record 367;ValueType@1018 : 'Sales Amount,Cost Amount,Quantity';LinesOnly@1016 : Boolean);
    VAR
      ItemStatisticsBuf@1011 : Record 5821;
      ItemBudgetEntry@1000 : Record 7134;
    BEGIN
      SetCommonFilters(
        ItemStatisticsBuf,ItemBudgetName,
        ItemFilter,SourceTypeFilter,SourceNoFilter,DateFilter,
        GlobalDim1Filter,GlobalDim2Filter,BudgetDim1Filter,BudgetDim2Filter,BudgetDim3Filter);
      SetDimFilters(ItemStatisticsBuf,RowDimOption,RowDimCodeBuf);
      IF NOT LinesOnly THEN
        SetDimFilters(ItemStatisticsBuf,ColDimOption,ColDimCodeBuf);

      ItemBudgetEntry.SETRANGE("Analysis Area",ItemBudgetName."Analysis Area");
      ItemBudgetEntry.SETRANGE("Budget Name",ItemBudgetName.Name);

      IF ItemStatisticsBuf.GETFILTER("Item Filter") <> '' THEN
        ItemStatisticsBuf.COPYFILTER("Item Filter",ItemBudgetEntry."Item No.");
      IF ItemStatisticsBuf.GETFILTER("Global Dimension 1 Filter") <> '' THEN
        ItemStatisticsBuf.COPYFILTER("Global Dimension 1 Filter",ItemBudgetEntry."Global Dimension 1 Code");
      IF ItemStatisticsBuf.GETFILTER("Global Dimension 2 Filter") <> '' THEN
        ItemStatisticsBuf.COPYFILTER("Global Dimension 2 Filter",ItemBudgetEntry."Global Dimension 2 Code");
      IF ItemStatisticsBuf.GETFILTER("Dimension 1 Filter") <> '' THEN
        ItemStatisticsBuf.COPYFILTER("Dimension 1 Filter",ItemBudgetEntry."Budget Dimension 1 Code");
      IF ItemStatisticsBuf.GETFILTER("Dimension 2 Filter") <> '' THEN
        ItemStatisticsBuf.COPYFILTER("Dimension 2 Filter",ItemBudgetEntry."Budget Dimension 2 Code");
      IF ItemStatisticsBuf.GETFILTER("Dimension 3 Filter") <> '' THEN
        ItemStatisticsBuf.COPYFILTER("Dimension 3 Filter",ItemBudgetEntry."Budget Dimension 3 Code");
      IF ItemStatisticsBuf.GETFILTER("Location Filter") <> '' THEN
        ItemStatisticsBuf.COPYFILTER("Location Filter",ItemBudgetEntry."Location Code");
      IF ItemStatisticsBuf.GETFILTER("Date Filter") <> '' THEN
        ItemStatisticsBuf.COPYFILTER("Date Filter",ItemBudgetEntry.Date)
      ELSE
        ItemBudgetEntry.SETRANGE(Date,0D,31129999D);

      IF ItemStatisticsBuf.GETFILTER("Source No. Filter") <> '' THEN BEGIN
        ItemStatisticsBuf.COPYFILTER("Source Type Filter",ItemBudgetEntry."Source Type");
        ItemStatisticsBuf.COPYFILTER("Source No. Filter",ItemBudgetEntry."Source No.");
        ItemBudgetEntry.SETCURRENTKEY("Analysis Area","Budget Name","Source Type","Source No.","Item No.");
      END ELSE
        ItemBudgetEntry.SETCURRENTKEY("Analysis Area","Budget Name","Item No.");

      CASE ValueType OF
        ValueType::"Sales Amount":
          FORM.RUN(0,ItemBudgetEntry,ItemBudgetEntry."Sales Amount");
        ValueType::"Cost Amount":
          FORM.RUN(0,ItemBudgetEntry,ItemBudgetEntry."Cost Amount");
        ValueType::Quantity:
          FORM.RUN(0,ItemBudgetEntry,ItemBudgetEntry.Quantity);
      END;
    END;

    PROCEDURE DeleteBudget@1(AnalysisArea@1002 : Integer;ItemBudgetName@1003 : Code[10];ItemFilter@1004 : Code[250];DateFilter@1005 : Text[30];SourceTypeFilter@1012 : ' ,Customer,Vendor,Item';SourceNoFilter@1011 : Code[250];GlobalDim1Filter@1006 : Code[250];GlobalDim2Filter@1007 : Code[250];BudgetDim1Filter@1008 : Code[250];BudgetDim2Filter@1009 : Code[250];BudgetDim3Filter@1010 : Code[250]);
    VAR
      ItemBudgetEntry@1000 : Record 7134;
      UpdateItemAnalysisView@1001 : Codeunit 7150;
    BEGIN
      IF CONFIRM(Text006) THEN
        WITH ItemBudgetEntry DO BEGIN
          SETRANGE("Analysis Area",AnalysisArea);
          SETRANGE("Budget Name",ItemBudgetName);
          IF ItemFilter <> '' THEN
            SETFILTER("Item No.",ItemFilter);
          IF DateFilter <> '' THEN
            SETFILTER(Date,DateFilter);
          IF SourceNoFilter <> '' THEN BEGIN
            SETRANGE("Source Type",SourceTypeFilter);
            SETFILTER("Source No.",SourceNoFilter);
          END;
          IF GlobalDim1Filter <> '' THEN
            SETFILTER("Global Dimension 1 Code",GlobalDim1Filter);
          IF GlobalDim2Filter <> '' THEN
            SETFILTER("Global Dimension 2 Code",GlobalDim2Filter);
          IF BudgetDim1Filter <> '' THEN
            SETFILTER("Budget Dimension 1 Code",BudgetDim1Filter);
          IF BudgetDim2Filter <> '' THEN
            SETFILTER("Budget Dimension 2 Code",BudgetDim2Filter);
          IF BudgetDim3Filter <> '' THEN
            SETFILTER("Budget Dimension 3 Code",BudgetDim3Filter);
          SETCURRENTKEY("Entry No.");
          IF FIND('-') THEN
            UpdateItemAnalysisView.SetLastBudgetEntryNo(ItemBudgetEntry."Entry No." - 1);
          SETCURRENTKEY("Analysis Area","Budget Name");
          DELETEALL(TRUE);
        END;
    END;

    LOCAL PROCEDURE GetGLSetup@9();
    BEGIN
      IF GLSetupRead THEN
        EXIT;
      GLSetup.GET;
      GLSetupRead := TRUE;
    END;

    LOCAL PROCEDURE CopyItemToBuf@14(VAR Item@1000 : Record 27;VAR DimCodeBuf@1001 : Record 367);
    BEGIN
      WITH DimCodeBuf DO BEGIN
        INIT;
        Code := Item."No.";
        Name := Item.Description;
      END;
    END;

    LOCAL PROCEDURE CopyCustToBuf@18(VAR Cust@1000 : Record 18;VAR DimCodeBuf@1001 : Record 367);
    BEGIN
      WITH DimCodeBuf DO BEGIN
        INIT;
        Code := Cust."No.";
        Name := Cust.Name;
      END;
    END;

    LOCAL PROCEDURE CopyVendToBuf@22(VAR Vend@1000 : Record 23;VAR DimCodeBuf@1001 : Record 367);
    BEGIN
      WITH DimCodeBuf DO BEGIN
        INIT;
        Code := Vend."No.";
        Name := Vend.Name;
      END;
    END;

    LOCAL PROCEDURE CopyPeriodToBuf@13(VAR Period@1000 : Record 2000000007;VAR DimCodeBuf@1001 : Record 367;DateFilter@1003 : Text[30]);
    VAR
      Period2@1002 : Record 2000000007;
    BEGIN
      WITH DimCodeBuf DO BEGIN
        INIT;
        Code := FORMAT(Period."Period Start");
        "Period Start" := Period."Period Start";
        "Period End" := Period."Period End";
        IF DateFilter <> '' THEN BEGIN
          Period2.SETFILTER("Period End",DateFilter);
          IF Period2.GETRANGEMAX("Period End") < "Period End" THEN
            "Period End" := Period2.GETRANGEMAX("Period End");
        END;
        Name := Period."Period Name";
      END;
    END;

    LOCAL PROCEDURE CopyLocationToBuf@12(VAR Location@1000 : Record 14;VAR DimCodeBuf@1001 : Record 367);
    BEGIN
      WITH DimCodeBuf DO BEGIN
        INIT;
        Code := Location.Code;
        IF Location.Name <> '' THEN
          Name := Location.Name
      END;
    END;

    LOCAL PROCEDURE CopyDimValToBuf@11(VAR DimVal@1000 : Record 349;VAR DimCodeBuf@1001 : Record 367);
    BEGIN
      WITH DimCodeBuf DO BEGIN
        INIT;
        Code := DimVal.Code;
        Name := DimVal.Name;
        Totaling := DimVal.Totaling;
        Indentation := DimVal.Indentation;
        "Show in Bold" :=
          DimVal."Dimension Value Type" <> DimVal."Dimension Value Type"::Standard;
      END;
    END;

    PROCEDURE CalcAmount@16(ValueType@1015 : 'Sales Amount,Cost Amount,Quantity';SetColumnFilter@1014 : Boolean;VAR ItemStatisticsBuf@1013 : Record 5821;ItemBudgetName@1012 : Record 7132;ItemFilter@1011 : Code[250];SourceTypeFilter@1010 : ' ,Customer,Vendor,Item';SourceNoFilter@1009 : Code[250];DateFilter@1008 : Text[30];GlobalDim1Filter@1007 : Code[250];GlobalDim2Filter@1006 : Code[250];BudgetDim1Filter@1005 : Code[250];BudgetDim2Filter@1004 : Code[250];BudgetDim3Filter@1003 : Code[250];RowDimOption@1002 : 'Item,Customer,Vendor,Period,Location,Global Dimension 1,Global Dimension 2,Budget Dimension 1,Budget Dimension 2,Budget Dimension 3,Budget Dimension 4';RowDimCodeBuf@1001 : Record 367;ColDimOption@1016 : 'Item,Customer,Vendor,Period,Location,Global Dimension 1,Global Dimension 2,Budget Dimension 1,Budget Dimension 2,Budget Dimension 3,Budget Dimension 4';ColDimCodeBuf@1000 : Record 367) : Decimal;
    BEGIN
      SetCommonFilters(
        ItemStatisticsBuf,
        ItemBudgetName,
        ItemFilter,
        SourceTypeFilter,
        SourceNoFilter,
        DateFilter,
        GlobalDim1Filter,
        GlobalDim2Filter,
        BudgetDim1Filter,
        BudgetDim2Filter,
        BudgetDim3Filter);
      SetDimFilters(ItemStatisticsBuf,RowDimOption,RowDimCodeBuf);
      IF SetColumnFilter THEN
        SetDimFilters(ItemStatisticsBuf,ColDimOption,ColDimCodeBuf);

      CASE ValueType OF
        ValueType::"Sales Amount":
          BEGIN
            ItemStatisticsBuf.CALCFIELDS("Budgeted Sales Amount");
            EXIT(ItemStatisticsBuf."Budgeted Sales Amount");
          END;
        ValueType::"Cost Amount":
          BEGIN
            ItemStatisticsBuf.CALCFIELDS("Budgeted Cost Amount");
            EXIT(ItemStatisticsBuf."Budgeted Cost Amount");
          END;
        ValueType::Quantity:
          BEGIN
            ItemStatisticsBuf.CALCFIELDS("Budgeted Quantity");
            EXIT(ItemStatisticsBuf."Budgeted Quantity");
          END;
      END;
    END;

    PROCEDURE UpdateAmount@24(ValueType@1015 : 'Sales Amount,Cost Amount,Quantity';SetColumnFilter@1014 : Boolean;VAR ItemStatisticsBuf@1013 : Record 5821;ItemBudgetName@1012 : Record 7132;ItemFilter@1011 : Code[250];SourceTypeFilter@1010 : ' ,Customer,Vendor,Item';SourceNoFilter@1009 : Code[250];DateFilter@1008 : Text[30];GlobalDim1Filter@1007 : Code[250];GlobalDim2Filter@1006 : Code[250];BudgetDim1Filter@1005 : Code[250];BudgetDim2Filter@1004 : Code[250];BudgetDim3Filter@1003 : Code[250];RowDimOption@1002 : 'Item,Customer,Vendor,Period,Location,Global Dimension 1,Global Dimension 2,Budget Dimension 1,Budget Dimension 2,Budget Dimension 3,Budget Dimension 4';RowDimCodeBuf@1001 : Record 367;ColDimOption@1016 : 'Item,Customer,Vendor,Period,Location,Global Dimension 1,Global Dimension 2,Budget Dimension 1,Budget Dimension 2,Budget Dimension 3,Budget Dimension 4';ColDimCodeBuf@1000 : Record 367;NewAmount@1017 : Decimal);
    BEGIN
      SetCommonFilters(
        ItemStatisticsBuf,
        ItemBudgetName,
        ItemFilter,
        SourceTypeFilter,
        SourceNoFilter,
        DateFilter,
        GlobalDim1Filter,
        GlobalDim2Filter,
        BudgetDim1Filter,
        BudgetDim2Filter,
        BudgetDim3Filter);
      SetDimFilters(ItemStatisticsBuf,RowDimOption,RowDimCodeBuf);
      IF SetColumnFilter THEN
        SetDimFilters(ItemStatisticsBuf,ColDimOption,ColDimCodeBuf);

      CASE ValueType OF
        ValueType::"Sales Amount":
          BEGIN
            ItemStatisticsBuf.CALCFIELDS("Budgeted Sales Amount");
            ItemStatisticsBuf.VALIDATE("Budgeted Sales Amount",NewAmount);
          END;
        ValueType::"Cost Amount":
          BEGIN
            ItemStatisticsBuf.CALCFIELDS("Budgeted Cost Amount");
            ItemStatisticsBuf.VALIDATE("Budgeted Cost Amount",NewAmount);
          END;
        ValueType::Quantity:
          BEGIN
            ItemStatisticsBuf.CALCFIELDS("Budgeted Quantity");
            ItemStatisticsBuf.VALIDATE("Budgeted Quantity",NewAmount);
          END;
      END;
    END;

    BEGIN
    END.
  }
}
