OBJECT Codeunit 375 Bank Acc. Entry Set Recon.-No.
{
  OBJECT-PROPERTIES
  {
    Date=08/06/01;
    Time=12:00:00;
    Version List=NAVW13.00;
  }
  PROPERTIES
  {
    Permissions=TableData 271=rm,
                TableData 272=rm;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      CheckLedgEntry@1000 : Record 272;

    PROCEDURE ToggleReconNo@5(VAR BankAccLedgEntry@1000 : Record 271;VAR BankAccReconLine@1001 : Record 274;ChangeAmount@1002 : Boolean);
    BEGIN
      BankAccLedgEntry.LOCKTABLE;
      CheckLedgEntry.LOCKTABLE;
      BankAccReconLine.LOCKTABLE;
      BankAccReconLine.FIND;
      IF BankAccLedgEntry."Statement No." = '' THEN BEGIN
        SetReconNo(BankAccLedgEntry,BankAccReconLine);
        BankAccReconLine."Applied Amount" :=
          BankAccReconLine."Applied Amount" + BankAccLedgEntry."Remaining Amount";
        BankAccReconLine."Applied Entries" := BankAccReconLine."Applied Entries" + 1;
      END ELSE BEGIN
        RemoveReconNo(BankAccLedgEntry,BankAccReconLine,TRUE);
        BankAccReconLine."Applied Amount" :=
          BankAccReconLine."Applied Amount" - BankAccLedgEntry."Remaining Amount";
        BankAccReconLine."Applied Entries" := BankAccReconLine."Applied Entries" - 1;
      END;
      IF ChangeAmount THEN
        BankAccReconLine.VALIDATE("Statement Amount",BankAccReconLine."Applied Amount")
      ELSE
        BankAccReconLine.VALIDATE("Statement Amount");
      BankAccReconLine.MODIFY;
    END;

    PROCEDURE SetReconNo@2(VAR BankAccLedgEntry@1000 : Record 271;VAR BankAccReconLine@1001 : Record 274);
    BEGIN
      BankAccLedgEntry.TESTFIELD(Open,TRUE);
      BankAccLedgEntry.TESTFIELD("Statement Status",BankAccLedgEntry."Statement Status"::Open);
      BankAccLedgEntry.TESTFIELD("Statement No.",'');
      BankAccLedgEntry.TESTFIELD("Statement Line No.",0);
      BankAccLedgEntry.TESTFIELD("Bank Account No.",BankAccReconLine."Bank Account No.");
      BankAccLedgEntry."Statement Status" :=
        BankAccLedgEntry."Statement Status"::"Bank Acc. Entry Applied";
      BankAccLedgEntry."Statement No." := BankAccReconLine."Statement No.";
      BankAccLedgEntry."Statement Line No." := BankAccReconLine."Statement Line No.";
      BankAccLedgEntry.MODIFY;

      CheckLedgEntry.RESET;
      CheckLedgEntry.SETCURRENTKEY("Bank Account Ledger Entry No.");
      CheckLedgEntry.SETRANGE("Bank Account Ledger Entry No.",BankAccLedgEntry."Entry No.");
      CheckLedgEntry.SETRANGE(CheckLedgEntry.Open,TRUE);
      IF CheckLedgEntry.FIND('-') THEN
        REPEAT
          CheckLedgEntry.TESTFIELD("Statement Status",CheckLedgEntry."Statement Status"::Open);
          CheckLedgEntry.TESTFIELD("Statement No.",'');
          CheckLedgEntry.TESTFIELD("Statement Line No.",0);
          CheckLedgEntry."Statement Status" :=
            CheckLedgEntry."Statement Status"::"Bank Acc. Entry Applied";
          CheckLedgEntry."Statement No." := '';
          CheckLedgEntry."Statement Line No." := 0;
          CheckLedgEntry.MODIFY;
        UNTIL CheckLedgEntry.NEXT = 0;
    END;

    PROCEDURE RemoveReconNo@3(VAR BankAccLedgEntry@1000 : Record 271;VAR BankAccReconLine@1001 : Record 274;Test@1002 : Boolean);
    BEGIN
      BankAccLedgEntry.TESTFIELD(Open,TRUE);
      IF Test THEN BEGIN
        BankAccLedgEntry.TESTFIELD(
          "Statement Status",BankAccLedgEntry."Statement Status"::"Bank Acc. Entry Applied");
        BankAccLedgEntry.TESTFIELD("Statement No.",BankAccReconLine."Statement No.");
        BankAccLedgEntry.TESTFIELD("Statement Line No.",BankAccReconLine."Statement Line No.");
      END;
      BankAccLedgEntry.TESTFIELD("Bank Account No.",BankAccReconLine."Bank Account No.");
      BankAccLedgEntry."Statement Status" := BankAccLedgEntry."Statement Status"::Open;
      BankAccLedgEntry."Statement No." := '';
      BankAccLedgEntry."Statement Line No." := 0;
      BankAccLedgEntry.MODIFY;

      CheckLedgEntry.RESET;
      CheckLedgEntry.SETCURRENTKEY("Bank Account Ledger Entry No.");
      CheckLedgEntry.SETRANGE("Bank Account Ledger Entry No.",BankAccLedgEntry."Entry No.");
      CheckLedgEntry.SETRANGE(Open,TRUE);
      IF CheckLedgEntry.FIND('-') THEN
        REPEAT
          IF Test THEN BEGIN
            CheckLedgEntry.TESTFIELD(
              "Statement Status",CheckLedgEntry."Statement Status"::"Bank Acc. Entry Applied");
            CheckLedgEntry.TESTFIELD("Statement No.",'');
            CheckLedgEntry.TESTFIELD("Statement Line No.",0);
          END;
          CheckLedgEntry."Statement Status" := CheckLedgEntry."Statement Status"::Open;
          CheckLedgEntry."Statement No." := '';
          CheckLedgEntry."Statement Line No." := 0;
          CheckLedgEntry.MODIFY;
        UNTIL CheckLedgEntry.NEXT = 0;
    END;

    BEGIN
    END.
  }
}
