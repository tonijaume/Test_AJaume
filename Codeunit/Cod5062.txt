OBJECT Codeunit 5062 SegCriteriaManagement
{
  OBJECT-PROPERTIES
  {
    Date=08/06/01;
    Time=12:00:00;
    Version List=NAVW13.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {

    PROCEDURE InsertContact@2(SegmentNo@1000 : Code[20];ContactNo@1001 : Code[20]);
    VAR
      Cont@1002 : Record 5050;
    BEGIN
      Cont.SETRANGE("No.",ContactNo);

      InsertCriteriaAction(SegmentNo,REPORT::"Add Contacts",FALSE,FALSE,FALSE,FALSE,FALSE);
      InsertCriteriaFilter(SegmentNo,DATABASE::Contact,Cont.GETFILTERS,Cont.GETVIEW(FALSE));
    END;

    PROCEDURE DeleteContact@3(SegmentNo@1000 : Code[20];ContactNo@1001 : Code[20]);
    VAR
      Cont@1002 : Record 5050;
    BEGIN
      Cont.SETRANGE("No.",ContactNo);

      InsertCriteriaAction(SegmentNo,REPORT::"Remove Contacts - Reduce",FALSE,FALSE,FALSE,FALSE,FALSE);
      InsertCriteriaFilter(SegmentNo,DATABASE::Contact,Cont.GETFILTERS,Cont.GETVIEW(FALSE));
    END;

    PROCEDURE InsertReuseLogged@5(SegmentNo@1000 : Code[20];LoggedSegmentEntryNo@1001 : Integer);
    VAR
      InteractLogEntry@1002 : Record 5065;
    BEGIN
      InteractLogEntry.SETCURRENTKEY("Logged Segment Entry No.");
      InteractLogEntry.SETRANGE("Logged Segment Entry No.",LoggedSegmentEntryNo);

      InsertCriteriaAction(SegmentNo,REPORT::"Add Contacts",TRUE,FALSE,FALSE,FALSE,FALSE);
      InsertCriteriaFilter(
        SegmentNo,DATABASE::"Interaction Log Entry",InteractLogEntry.GETFILTERS,InteractLogEntry.GETVIEW(FALSE));
    END;

    PROCEDURE InsertCriteriaAction@1(SegmentNo@1000 : Code[20];CalledFromReportNo@1001 : Integer;AllowExistingContacts@1002 : Boolean;ExpandContact@1003 : Boolean;AllowCompanyWithPersons@1004 : Boolean;IgnoreExclusion@1005 : Boolean;EntireCompanies@1006 : Boolean);
    VAR
      SegCriteriaLine@1007 : Record 5097;
      NextLineNo@1008 : Integer;
    BEGIN
      SegCriteriaLine.LOCKTABLE;
      SegCriteriaLine.SETRANGE("Segment No.",SegmentNo);
      IF SegCriteriaLine.FIND('+') THEN
        NextLineNo := SegCriteriaLine."Line No." + 1
      ELSE
        NextLineNo := 1;

      SegCriteriaLine.INIT;
      SegCriteriaLine."Segment No." := SegmentNo;
      SegCriteriaLine."Line No." := NextLineNo;
      SegCriteriaLine.Type := SegCriteriaLine.Type::Action;
      CASE CalledFromReportNo OF
        REPORT::"Add Contacts": SegCriteriaLine.Action := SegCriteriaLine.Action::"Add Contacts";
        REPORT::"Remove Contacts - Reduce": SegCriteriaLine.Action := SegCriteriaLine.Action::"Remove Contacts (Reduce)";
        REPORT::"Remove Contacts - Refine": SegCriteriaLine.Action := SegCriteriaLine.Action::"Remove Contacts (Refine)";
      END;
      SegCriteriaLine."Allow Existing Contacts" := AllowExistingContacts;
      SegCriteriaLine."Expand Contact" := ExpandContact;
      SegCriteriaLine."Allow Company with Persons" := AllowCompanyWithPersons;
      SegCriteriaLine."Ignore Exclusion" := IgnoreExclusion;
      SegCriteriaLine."Entire Companies" := EntireCompanies;
      SegCriteriaLine.INSERT;
    END;

    PROCEDURE InsertCriteriaFilter@4(SegmentNo@1000 : Code[20];TableNo@1001 : Integer;Filter@1002 : Text[250];View@1003 : Text[250]);
    VAR
      SegCriteriaLine@1004 : Record 5097;
      NextLineNo@1005 : Integer;
    BEGIN
      IF Filter = '' THEN
        EXIT;

      SegCriteriaLine.SETRANGE("Segment No.",SegmentNo);
      IF SegCriteriaLine.FIND('+') THEN
        NextLineNo := SegCriteriaLine."Line No." + 1
      ELSE
        NextLineNo := 1;

      SegCriteriaLine.INIT;
      SegCriteriaLine."Segment No." := SegmentNo;
      SegCriteriaLine."Line No." := NextLineNo;
      SegCriteriaLine.Type := SegCriteriaLine.Type::Filter;
      SegCriteriaLine."Table No." := TableNo;
      SegCriteriaLine.View := View;
      SegCriteriaLine.INSERT;

      SegCriteriaLine.RESET;
      SegCriteriaLine.SETCURRENTKEY("Segment No.",Type);
      SegCriteriaLine.SETRANGE("Segment No.",SegmentNo);
      SegCriteriaLine.SETRANGE(Type,SegCriteriaLine.Type::Action);
      SegCriteriaLine.FIND('+');
      SegCriteriaLine."No. of Filters" := SegCriteriaLine."No. of Filters" + 1;
      SegCriteriaLine.MODIFY;
    END;

    PROCEDURE SegCriteriaFilter@6(TableNo@1000 : Integer;View@1001 : Text[250]) : Text[250];
    VAR
      Cont@1002 : Record 5050;
      ContProfileAnswer@1003 : Record 5089;
      ContMailingGrp@1004 : Record 5056;
      InteractLogEntry@1005 : Record 5065;
      ContJobResp@1006 : Record 5067;
      ContIndustGrp@1007 : Record 5058;
      ContBusRel@1008 : Record 5054;
      ValueEntry@1009 : Record 5802;
      ProfileQuestionnaireLine@1010 : Record 5088;
    BEGIN
      CASE TableNo OF
        DATABASE::Contact:
          BEGIN
            Cont.SETVIEW(View);
            EXIT(Cont.GETFILTERS);
          END;
        DATABASE::"Contact Profile Answer":
          BEGIN
            ContProfileAnswer.SETVIEW(View);
            ContProfileAnswer.COPYFILTER(
              "Profile Questionnaire Code",ProfileQuestionnaireLine."Profile Questionnaire Code");
            ContProfileAnswer.COPYFILTER("Line No.",ProfileQuestionnaireLine."Line No.");
            IF ProfileQuestionnaireLine.COUNT = 1 THEN BEGIN
              ProfileQuestionnaireLine.FIND('-');
              EXIT(SELECTSTR(1,ContProfileAnswer.GETFILTERS) + ', ' +
                ProfileQuestionnaireLine.Question  + ': ' + ProfileQuestionnaireLine.Description);
            END ELSE
              EXIT(ContProfileAnswer.GETFILTERS);
          END;
        DATABASE::"Contact Mailing Group":
          BEGIN
            ContMailingGrp.SETVIEW(View);
            EXIT(ContMailingGrp.GETFILTERS);
          END;
        DATABASE::"Interaction Log Entry":
          BEGIN
            InteractLogEntry.SETVIEW(View);
            EXIT(InteractLogEntry.GETFILTERS);
          END;
        DATABASE::"Contact Job Responsibility":
          BEGIN
            ContJobResp.SETVIEW(View);
            EXIT(ContJobResp.GETFILTERS);
          END;
        DATABASE::"Contact Industry Group":
          BEGIN
            ContIndustGrp.SETVIEW(View);
            EXIT(ContIndustGrp.GETFILTERS);
          END;
        DATABASE::"Contact Business Relation":
          BEGIN
            ContBusRel.SETVIEW(View);
            EXIT(ContBusRel.GETFILTERS);
          END;
        DATABASE::"Value Entry":
          BEGIN
            ValueEntry.SETVIEW(View);
            EXIT(ValueEntry.GETFILTERS);
          END;
      END;
    END;

    BEGIN
    END.
  }
}
