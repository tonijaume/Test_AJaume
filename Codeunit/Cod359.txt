OBJECT Codeunit 359 PeriodFormManagement
{
  OBJECT-PROPERTIES
  {
    Date=08/06/01;
    Time=12:00:00;
    Version List=NAVW13.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=<Week>.<Year4>;ESP=<Week>.<Year4>';
      Text001@1001 : TextConst 'ENU=<Month Text,3> <Year4>;ESP=<Month Text,3> <Year4>';
      Text002@1002 : TextConst 'ENU=<Quarter>/<Year4>;ESP=<Quarter>/<Year4>';
      Text003@1003 : TextConst 'ENU=<Year4>;ESP=<Year4>';
      AccountingPeriod@1004 : Record 50;

    PROCEDURE FindDate@2(SearchString@1000 : Text[3];VAR Calendar@1001 : Record 2000000007;PeriodType@1002 : 'Day,Week,Month,Quarter,Year,Accounting Period') : Boolean;
    VAR
      Found@1003 : Boolean;
    BEGIN
      Calendar.SETRANGE("Period Type",PeriodType);
      Calendar."Period Type" := PeriodType;
      IF Calendar."Period Start" = 0D THEN
        Calendar."Period Start" := WORKDATE;
      IF SearchString IN ['','=><'] THEN
        SearchString := '=<>';
      IF PeriodType = PeriodType::"Accounting Period" THEN BEGIN
        SetAccountingPeriodFilter(Calendar);
        Found := AccountingPeriod.FIND(SearchString);
        IF Found THEN
          CopyAccountingPeriod(Calendar);
      END ELSE BEGIN
        Found := Calendar.FIND(SearchString);
        IF Found THEN
          Calendar."Period End" := NORMALDATE(Calendar."Period End");
      END;
      EXIT(Found);
    END;

    PROCEDURE NextDate@3(NextStep@1000 : Integer;VAR Calendar@1001 : Record 2000000007;PeriodType@1002 : 'Day,Week,Month,Quarter,Year,Accounting Period') : Integer;
    BEGIN
      Calendar.SETRANGE("Period Type",PeriodType);
      Calendar."Period Type" := PeriodType;
      IF PeriodType = PeriodType::"Accounting Period" THEN BEGIN
        SetAccountingPeriodFilter(Calendar);
        NextStep := AccountingPeriod.NEXT(NextStep);
        IF NextStep <> 0 THEN
          CopyAccountingPeriod(Calendar);
      END ELSE BEGIN
        NextStep := Calendar.NEXT(NextStep);
        IF NextStep <> 0 THEN
          Calendar."Period End" := NORMALDATE(Calendar."Period End");
      END;
      EXIT(NextStep);
    END;

    PROCEDURE CreatePeriodFormat@4(PeriodType@1000 : 'Day,Week,Month,Quarter,Year,Accounting Period';Date@1001 : Date) : Text[10];
    BEGIN
      CASE PeriodType OF
        PeriodType::Day:
          EXIT(FORMAT(Date));
        PeriodType::Week:
          BEGIN
            IF DATE2DWY(Date,2) = 1 THEN
              Date := Date + 7 - DATE2DWY(Date,1);
            EXIT(FORMAT(Date,0,Text000));
          END;
        PeriodType::Month:
          EXIT(FORMAT(Date,0,Text001));
        PeriodType::Quarter:
          EXIT(FORMAT(Date,0,Text002));
        PeriodType::Year:
          EXIT(FORMAT(Date,0,Text003));
        PeriodType::"Accounting Period":
          EXIT(FORMAT(Date));
      END;
    END;

    LOCAL PROCEDURE SetAccountingPeriodFilter@5(VAR Calendar@1000 : Record 2000000007);
    BEGIN
      AccountingPeriod.SETFILTER("Starting Date",Calendar.GETFILTER("Period Start"));
      AccountingPeriod.SETFILTER(Name,Calendar.GETFILTER("Period Name"));
      AccountingPeriod."Starting Date" := Calendar."Period Start";
    END;

    LOCAL PROCEDURE CopyAccountingPeriod@6(VAR Calendar@1000 : Record 2000000007);
    BEGIN
      Calendar.INIT;
      Calendar."Period Start" := AccountingPeriod."Starting Date";
      Calendar."Period Name" := AccountingPeriod.Name;
      IF AccountingPeriod.NEXT = 0 THEN
        Calendar."Period End" := 31129999D
      ELSE
        Calendar."Period End" := AccountingPeriod."Starting Date" - 1;
    END;

    BEGIN
    END.
  }
}
