OBJECT Codeunit 99008524 BizTalk Sales Shipment Notif.
{
  OBJECT-PROPERTIES
  {
    Date=13/02/07;
    Time=12:00:00;
    Version List=NAVW15.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=The sales shipment notification number %1 has already been sent as a BizTalk document.;ESP=Ya se ha enviado la notificaci¢n de env¡o de venta n£mero %1 como documento BizTalk.';
      Text001@1001 : TextConst 'ENU=There are no lines to send.;ESP=No hay l¡neas para enviar.';

    PROCEDURE ValidateData@3(SalesShipmentHeader@1000 : Record 110);
    VAR
      SalesShipmentLine@1001 : Record 111;
    BEGIN
      IF SalesShipmentHeader."BizTalk Shipment Notification" THEN
        ERROR(Text000,SalesShipmentHeader."No.");
      SalesShipmentLine.SETCURRENTKEY("Document No.");
      SalesShipmentLine.SETRANGE("Document No.",SalesShipmentHeader."No.");
      IF NOT SalesShipmentLine.FIND('-') THEN
        ERROR(Text001);
    END;

    PROCEDURE TransferData@2(SalesShipmentHeader@1001 : Record 110) NextOutboundNo@1000 : Integer;
    VAR
      GeneralLedgerSetup@1002 : Record 98;
      OutboundSalesDocumentHeader@1003 : Record 99008506;
      OutboundSalesDocumentLine@1004 : Record 99008507;
      SalesShipmentLine@1005 : Record 111;
      Item@1006 : Record 27;
      NextLineNo@1007 : Integer;
    BEGIN
      OutboundSalesDocumentLine.LOCKTABLE;
      OutboundSalesDocumentHeader.LOCKTABLE;
      IF OutboundSalesDocumentHeader.FIND('+') THEN
        NextOutboundNo := OutboundSalesDocumentHeader."Outbound Document No." + 1
      ELSE
        NextOutboundNo := 1;
      WITH OutboundSalesDocumentHeader DO BEGIN
        INIT;
        "Outbound Document No." := NextOutboundNo;
        "No." := SalesShipmentHeader."No.";
        "Sell-to Customer No." := SalesShipmentHeader."Sell-to Customer No.";
        "Bill-to Customer No." := SalesShipmentHeader."Bill-to Customer No.";
        "Bill-to Name" := SalesShipmentHeader."Bill-to Name";
        "Bill-to Name 2" := SalesShipmentHeader."Bill-to Name 2";
        "Bill-to Address" := SalesShipmentHeader."Bill-to Address";
        "Bill-to Address 2" := SalesShipmentHeader."Bill-to Address 2";
        "Bill-to City" := SalesShipmentHeader."Bill-to City";
        "Bill-to Contact" := SalesShipmentHeader."Bill-to Contact";
        "Your Reference" := SalesShipmentHeader."Your Reference";
        "Ship-to Code" := SalesShipmentHeader."Ship-to Code";
        "Ship-to Name" := SalesShipmentHeader."Ship-to Name";
        "Ship-to Name 2" := SalesShipmentHeader."Ship-to Name 2";
        "Ship-to Address" := SalesShipmentHeader."Ship-to Address";
        "Ship-to Address 2" := SalesShipmentHeader."Ship-to Address 2";
        "Ship-to City" := SalesShipmentHeader."Ship-to City";
        "Ship-to Contact" := SalesShipmentHeader."Ship-to Contact";
        "Order Date" := SalesShipmentHeader."Order Date";
        "Posting Date" := SalesShipmentHeader."Posting Date";
        "Shipment Date" := SalesShipmentHeader."Shipment Date";
        "Posting Description" := SalesShipmentHeader."Posting Description";
        "Payment Terms Code" := SalesShipmentHeader."Payment Terms Code";
        "Due Date" := SalesShipmentHeader."Due Date";
        "Payment Discount %" := SalesShipmentHeader."Payment Discount %";
        "Pmt. Discount Date" := SalesShipmentHeader."Pmt. Discount Date";
        "Shipment Method Code" := SalesShipmentHeader."Shipment Method Code";
        "Location Code" := SalesShipmentHeader."Location Code";
        "Shortcut Dimension 1 Code" := SalesShipmentHeader."Shortcut Dimension 1 Code";
        "Shortcut Dimension 2 Code" := SalesShipmentHeader."Shortcut Dimension 2 Code";
        "Customer Posting Group" := SalesShipmentHeader."Customer Posting Group";
        IF SalesShipmentHeader."Currency Code" <> '' THEN
          "Currency Code" := SalesShipmentHeader."Currency Code"
        ELSE BEGIN
          GeneralLedgerSetup.FIND('-');
          "Currency Code" := GeneralLedgerSetup."LCY Code"
        END;
        "Currency Factor" := SalesShipmentHeader."Currency Factor";
        "Price Group Code" := SalesShipmentHeader."Customer Price Group";
        "Prices Including VAT" := SalesShipmentHeader."Prices Including VAT";
        "Invoice Disc. Code" := SalesShipmentHeader."Invoice Disc. Code";
        "Cust./Item Disc. Gr." := SalesShipmentHeader."Customer Disc. Group";
        "Language Code" := SalesShipmentHeader."Language Code";
        "Salesperson Code" := SalesShipmentHeader."Salesperson Code";
        "Order No." := SalesShipmentHeader."Order No.";
        "No. Printed" := SalesShipmentHeader."No. Printed";
        "On Hold" := SalesShipmentHeader."On Hold";
        "Applies-to Doc. Type" := SalesShipmentHeader."Applies-to Doc. Type";
        "Applies-to Doc. No." := SalesShipmentHeader."Applies-to Doc. No.";
        "Bal. Account No." := SalesShipmentHeader."Bal. Account No.";
        "VAT Registration No." := SalesShipmentHeader."VAT Registration No.";
        "Reason Code" := SalesShipmentHeader."Reason Code";
        "Gen. Bus. Posting Group" := SalesShipmentHeader."Gen. Bus. Posting Group";
        "EU 3-Party Trade" := SalesShipmentHeader."EU 3-Party Trade";
        "Transaction Type" := SalesShipmentHeader."Transaction Type";
        "Transport Method" := SalesShipmentHeader."Transport Method";
        "VAT Country/Region Code" := SalesShipmentHeader."VAT Country/Region Code";
        "Sell-to Customer Name" := SalesShipmentHeader."Sell-to Customer Name";
        "Sell-to Customer Name 2" := SalesShipmentHeader."Sell-to Customer Name 2";
        "Sell-to Address" := SalesShipmentHeader."Sell-to Address";
        "Sell-to Address 2" := SalesShipmentHeader."Sell-to Address 2";
        "Sell-to City" := SalesShipmentHeader."Sell-to City";
        "Sell-to Contact" := SalesShipmentHeader."Sell-to Contact";
        "Bill-to Post Code" := SalesShipmentHeader."Bill-to Post Code";
        "Bill-to County" := SalesShipmentHeader."Bill-to County";
        "Bill-to Country/Region Code" := SalesShipmentHeader."Bill-to Country/Region Code";
        "Sell-to Post Code" := SalesShipmentHeader."Sell-to Post Code";
        "Sell-to County" := SalesShipmentHeader."Sell-to County";
        "Sell-to Country/Region Code" := SalesShipmentHeader."Sell-to Country/Region Code";
        "Ship-to Post Code" := SalesShipmentHeader."Ship-to Post Code";
        "Ship-to County" := SalesShipmentHeader."Ship-to County";
        "Ship-to Country/Region Code" := SalesShipmentHeader."Ship-to Country/Region Code";
        "Bal. Account Type" := SalesShipmentHeader."Bal. Account Type";
        "Exit Point" := SalesShipmentHeader."Exit Point";
        Correction := SalesShipmentHeader.Correction;
        "Document Date" := SalesShipmentHeader."Document Date";
        "External Document No." := SalesShipmentHeader."External Document No.";
        Area := SalesShipmentHeader.Area;
        "Transaction Specification" := SalesShipmentHeader."Transaction Specification";
        "Payment Method Code" := SalesShipmentHeader."Payment Method Code";
        "Shipping Agent Code" := SalesShipmentHeader."Shipping Agent Code";
        "Package Tracking No." := SalesShipmentHeader."Package Tracking No.";
        "No. Series" := SalesShipmentHeader."No. Series";
        "Order No. Series" := SalesShipmentHeader."Order No. Series";
        "User ID" := SalesShipmentHeader."User ID";
        "Source Code" := SalesShipmentHeader."Source Code";
        "Tax Area Code" := SalesShipmentHeader."Tax Area Code";
        "Tax Liable" := SalesShipmentHeader."Tax Liable";
        "VAT Bus. Posting Group" := SalesShipmentHeader."VAT Bus. Posting Group";
        "VAT Base Discount %" := SalesShipmentHeader."VAT Base Discount %";
        "Customer Order No." := SalesShipmentHeader."Customer Order No.";
        Comment := SalesShipmentHeader.Comment;
        Status := Status::Unsent;
        "BizTalk Document Type" := "BizTalk Document Type"::"Shipment Notification";
        INSERT;

        OutboundSalesDocumentLine.SETCURRENTKEY("Outbound Document No.");
        OutboundSalesDocumentLine.SETRANGE("Outbound Document No.",NextOutboundNo);
        IF OutboundSalesDocumentLine.FIND('+') THEN
          NextLineNo := OutboundSalesDocumentLine."Line No."
        ELSE
          NextLineNo := 0;
        WITH OutboundSalesDocumentLine DO BEGIN
          SalesShipmentLine.SETCURRENTKEY("Document No.");
          SalesShipmentLine.SETRANGE("Document No.",SalesShipmentHeader."No.");
          IF SalesShipmentLine.FIND('-') THEN
          REPEAT
            INIT;
            NextLineNo := NextLineNo +1;
            "Line No." := NextLineNo;
            "Outbound Document No." := NextOutboundNo;
            "Document No." := SalesShipmentLine."Document No.";
            "Sell-to Customer No." := SalesShipmentLine."Sell-to Customer No.";
            Type := SalesShipmentLine.Type;
            "No." := SalesShipmentLine."No.";
            IF Item.GET(SalesShipmentLine."No.") THEN BEGIN
              "Vendor Item No." := Item."Vendor Item No.";
              "Common Item No." := Item."Common Item No.";
            END;
            "Location Code" := SalesShipmentLine."Location Code";
            "Posting Group" := SalesShipmentLine."Posting Group";
            "Shipment Date" := SalesShipmentLine."Shipment Date";
            Description := SalesShipmentLine.Description;
            "Description 2" := SalesShipmentLine."Description 2";
            "Unit of Measure" := SalesShipmentLine."Unit of Measure";
            Quantity := SalesShipmentLine.Quantity;
            "Unit Price" := SalesShipmentLine."Unit Price";
            "Unit Cost (LCY)" := SalesShipmentLine."Unit Cost (LCY)";
            "VAT %" := SalesShipmentLine."VAT %";
            "Line Discount %" := SalesShipmentLine."Line Discount %";
            "Allow Invoice Disc." := SalesShipmentLine."Allow Invoice Disc.";
            "Gross Weight" := SalesShipmentLine."Gross Weight";
            "Net Weight" := SalesShipmentLine."Net Weight";
            "Units per Parcel" := SalesShipmentLine."Units per Parcel";
            "Unit Volume" := SalesShipmentLine."Unit Volume";
            "Appl.-to Item Entry" := SalesShipmentLine."Appl.-to Item Entry";
            "Item Shpt. Entry No." := SalesShipmentLine."Item Shpt. Entry No.";
            "Shortcut Dimension 1 Code" := SalesShipmentLine."Shortcut Dimension 1 Code";
            "Shortcut Dimension 2 Code" := SalesShipmentLine."Shortcut Dimension 2 Code";
            "Price Group Code" := SalesShipmentLine."Customer Price Group";
            "Job No." := SalesShipmentLine."Job No.";
            "Work Type Code" := SalesShipmentLine."Work Type Code";
            "Quantity Invoiced" := SalesShipmentLine."Quantity Invoiced";
            "Order No." := SalesShipmentLine."Order No.";
            "Order Line No." := SalesShipmentLine."Order Line No.";
            "Purchase Order No." := SalesShipmentLine."Purchase Order No.";
            "Purch. Order Line No." := SalesShipmentLine."Purch. Order Line No.";
            "Drop Shipment" := SalesShipmentLine."Drop Shipment";
            "Gen. Bus. Posting Group" := SalesShipmentLine."Gen. Bus. Posting Group";
            "Gen. Prod. Posting Group" := SalesShipmentLine."Gen. Prod. Posting Group";
            "VAT Calculation Type" := SalesShipmentLine."VAT Calculation Type";
            "Transaction Type" := SalesShipmentLine."Transaction Type";
            "Transport Method" := SalesShipmentLine."Transport Method";
            "Attached to Line No." := SalesShipmentLine."Attached to Line No.";
            "Exit Point" := SalesShipmentLine."Exit Point";
            Area := SalesShipmentLine.Area;
            "Transaction Specification" :=SalesShipmentLine."Transaction Specification";
            "Tax Area Code" := SalesShipmentLine."Tax Area Code";
            "Tax Liable" := SalesShipmentLine."Tax Liable";
            "Tax Group Code" := SalesShipmentLine."Tax Group Code";
            "VAT Bus. Posting Group" := SalesShipmentLine."VAT Bus. Posting Group";
            "VAT Prod. Posting Group" := SalesShipmentLine."VAT Prod. Posting Group";
            "Blanket Order No." := SalesShipmentLine."Blanket Order No.";
            "Blanket Order Line No." := SalesShipmentLine."Blanket Order Line No.";
            "VAT Base Amount" := SalesShipmentLine."VAT Base Amount";
            "Unit Cost" := SalesShipmentLine."Unit Cost";
            "Variant Code" := SalesShipmentLine."Variant Code";
            "Bin Code" := SalesShipmentLine."Bin Code";
            "Qty. per Unit of Measure" := SalesShipmentLine."Qty. per Unit of Measure";
            "Unit of Measure Code" := SalesShipmentLine."Unit of Measure Code";
            "Quantity (Base)" := SalesShipmentLine."Quantity (Base)";
            "Qty. Invoiced (Base)" := SalesShipmentLine."Qty. Invoiced (Base)";
            "Planned Delivery Date" := SalesShipmentLine."Planned Delivery Date";
            INSERT;
          UNTIL SalesShipmentLine.NEXT = 0;
        END;
      END;
    END;

    BEGIN
    END.
  }
}
