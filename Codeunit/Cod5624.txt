OBJECT Codeunit 5624 Cancel FA Ledger Entries
{
  OBJECT-PROPERTIES
  {
    Date=08/06/01;
    Time=12:00:00;
    Version List=NAVW13.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text001@1000 : TextConst 'ENU=must be the same in all canceled ledger entries;ESP=debe ser igual en todos los movimientos que se han cancelado.';
      Text002@1001 : TextConst 'ENU="%1 = %2 has already been canceled.";ESP="%1 = %2 ya se ha cancelado."';
      Text003@1002 : TextConst 'ENU=The ledger entries have been transferred to the journal.;ESP=Los movimientos se han transferido al diario.';
      Text004@1003 : TextConst 'ENU="%1 = %2 cannot be canceled. Use %3 = %4.";ESP="%1 = %2 no puede cancelarse. Utilice %3 = %4."';
      JnlLineDimTmp@1004 : TEMPORARY Record 356;
      FAJnlSetup@1005 : Record 5605;
      DeprBook@1006 : Record 5611;
      GenJnlLine@1007 : Record 81;
      FAJnlLine@1008 : Record 5621;
      FA@1009 : Record 5600;
      GLIntegration@1010 : ARRAY [9] OF Boolean;
      FAJnlNextLineNo@1011 : Integer;
      GenJnlNextLineNo@1012 : Integer;
      DeprBookCode@1013 : Code[10];
      GenJnlUsedOnce@1014 : Boolean;
      FAJnlUsedOnce@1015 : Boolean;
      FAJnlDocumentNo@1016 : Code[20];
      GenJnlDocumentNo@1017 : Code[20];

    PROCEDURE TransferLine@1(VAR FALedgEntry@1000 : Record 5601;BalAccount@1001 : Boolean;NewPostingDate@1002 : Date);
    BEGIN
      CLEARALL;
      WITH FALedgEntry DO BEGIN
        IF FIND('+') THEN
          REPEAT
            IF DeprBookCode = '' THEN
              DeprBookCode := "Depreciation Book Code";
            IF DeprBookCode <> "Depreciation Book Code" THEN
              FIELDERROR("Depreciation Book Code",Text001);
            IF "FA No." = '' THEN
              ERROR(Text002,FIELDCAPTION("Entry No."),"Entry No.");
            FA.GET("FA No.");
            DeprBook.GET("Depreciation Book Code");
            DeprBook.IndexGLIntegration(GLIntegration);
            CheckType(FALedgEntry);
            IF NewPostingDate > 0D THEN BEGIN
              "Posting Date" := NewPostingDate;
              DeprBook.TESTFIELD("Use Same FA+G/L Posting Dates",FALSE);
            END;
            IF GLIntegration[ConvertPostingType + 1] AND NOT FA."Budgeted Asset" THEN
              InsertGenJnlLine(FALedgEntry,BalAccount)
            ELSE
              InsertFAJnlLine(FALedgEntry);
          UNTIL NEXT(-1) = 0;
      END;
      MESSAGE(Text003);
    END;

    LOCAL PROCEDURE CheckType@4(VAR FALedgEntry@1000 : Record 5601);
    BEGIN
      WITH FALedgEntry DO BEGIN
        IF ("FA Posting Type" > "FA Posting Type"::"Salvage Value") OR
           ("FA Posting Category" <> "FA Posting Category"::" ")
        THEN BEGIN
          "FA Posting Type" := "FA Posting Type"::"Proceeds on Disposal";
          ERROR(
            Text004,
            FIELDCAPTION("Entry No."),"Entry No.",FIELDCAPTION("FA Posting Type"),"FA Posting Type");
        END;
      END;
    END;

    LOCAL PROCEDURE InsertFAJnlLine@6(VAR FALedgEntry@1000 : Record 5601);
    BEGIN
      IF NOT FAJnlUsedOnce THEN BEGIN;
        FAJnlLine.LOCKTABLE;
        FAJnlSetup.FAJnlName(DeprBook,FAJnlLine,FAJnlNextLineNo);
        FAJnlUsedOnce := TRUE;
        FAJnlDocumentNo:=
          FAJnlSetup.GetFAJnlDocumentNo(FAJnlLine,FALedgEntry."FA Posting Date",FALSE);
      END;

      FALedgEntry.MoveToFAJnl(FAJnlLine);
      WITH FAJnlLine DO BEGIN
        "Document No." := FAJnlDocumentNo;
        "Document Type" := "Document Type"::" ";
        "External Document No." := '';
        "Shortcut Dimension 1 Code" := FALedgEntry."Global Dimension 1 Code";
        "Shortcut Dimension 2 Code" := FALedgEntry."Global Dimension 2 Code";
        "FA Error Entry No." := FALedgEntry."Entry No.";
        "Posting No. Series" := FAJnlSetup.GetFANoSeries(FAJnlLine);
        VALIDATE(Amount,-Amount);
         VALIDATE(Correction,DeprBook."Mark Errors as Corrections");
        "Line No." := "Line No." + 10000;
        INSERT(TRUE);
        CopyFALedgDimToJnlLineDim(
          DATABASE::"FA Journal Line","Journal Template Name",
          "Journal Batch Name","Line No.",FALedgEntry."Entry No.");
      END;
    END;

    LOCAL PROCEDURE InsertGenJnlLine@7(VAR FALedgEntry@1000 : Record 5601;BalAccount@1001 : Boolean);
    VAR
      FAInsertGLAcc@1002 : Codeunit 5601;
    BEGIN
      IF NOT GenJnlUsedOnce THEN BEGIN;
        GenJnlLine.LOCKTABLE;
        FAJnlSetup.GenJnlName(DeprBook,GenJnlLine,GenJnlNextLineNo);
        GenJnlUsedOnce := TRUE;
        GenJnlDocumentNo:=
          FAJnlSetup.GetGenJnlDocumentNo(GenJnlLine,FALedgEntry."FA Posting Date",FALSE);
      END;

      FALedgEntry.MoveToGenJnl(GenJnlLine);
      WITH GenJnlLine DO BEGIN
        "Document No." := GenJnlDocumentNo;
        "Document Type" := "Document Type"::" ";
        "External Document No." := '';
        "Shortcut Dimension 1 Code" := FALedgEntry."Global Dimension 1 Code";
        "Shortcut Dimension 2 Code" := FALedgEntry."Global Dimension 2 Code";
        "FA Error Entry No." := FALedgEntry."Entry No.";
        VALIDATE(Amount,-Amount);
        VALIDATE(Correction,DeprBook."Mark Errors as Corrections");
        "Posting No. Series" := FAJnlSetup.GetGenNoSeries(GenJnlLine);
        "Line No." := "Line No." + 10000;
        INSERT(TRUE);
        CopyFALedgDimToJnlLineDim(
          DATABASE::"Gen. Journal Line","Journal Template Name",
          "Journal Batch Name","Line No.",FALedgEntry."Entry No.");
        IF BalAccount THEN
          FAInsertGLAcc.GetBalAcc(GenJnlLine);
      END;
    END;

    PROCEDURE CopyFALedgDimToJnlLineDim@2(TableID@1000 : Integer;TemplateName@1001 : Code[10];BatchName@1002 : Code[10];LineNo@1003 : Integer;EntryNo@1004 : Integer);
    VAR
      FADimMgt@1005 : Codeunit 5674;
    BEGIN
      FADimMgt.CopyFALedgEntryDimToJnlLineDim(
        DATABASE::"FA Ledger Entry",EntryNo,JnlLineDimTmp);
      FADimMgt.InsertJnlLineDim(
        TableID,TemplateName,BatchName,LineNo,JnlLineDimTmp);
    END;

    BEGIN
    END.
  }
}
