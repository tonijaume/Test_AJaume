OBJECT Codeunit 418 Login Management
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVW16.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=%1 %2 does not exist.;ESP=No existe %1 %2.';

    PROCEDURE ValidateUserID@6(VAR UserID@1000 : Code[20]);
    VAR
      DatabaseLogin@1001 : Record 2000000002;
      SIDConversion@1002 : Record 2000000055;
    BEGIN
      IF UserID <> '' THEN
        IF NOT DatabaseLogin.GET(UserID) THEN BEGIN
          SIDConversion.SETCURRENTKEY(ID);
          SIDConversion.ID := UserID;
          IF NOT SIDConversion.FIND THEN
            ERROR(
              Text000,
              DatabaseLogin.FIELDCAPTION("User ID"),
              UserID);
          UserID := ShortUserID(SIDConversion.ID);
        END;
    END;

    PROCEDURE LookupUserID@1(VAR UserID@1000 : Code[20]) : Boolean;
    VAR
      WindowsSID@1002 : Text[119];
    BEGIN
      EXIT(LookupUser(UserID,WindowsSID,TRUE));
    END;

    PROCEDURE LookupWindowsUserID@3(VAR UserID@1000 : Code[20]) : Boolean;
    VAR
      WindowsSID@1002 : Text[119];
    BEGIN
      EXIT(LookupUser(UserID,WindowsSID,FALSE));
    END;

    PROCEDURE LookupUser@1102601000(VAR UserID@1000 : Code[20];VAR SID@1005 : Text[119];IncludeDatabaseLogin@1002 : Boolean) : Boolean;
    VAR
      TempLogin@1001 : TEMPORARY Record 387;
      WindowsLogin@1003 : Record 2000000054;
      DatabaseLogin@1006 : Record 2000000002;
    BEGIN
      IF WindowsLogin.FINDSET THEN
        REPEAT
          TempLogin.INIT;
          WindowsLogin.CALCFIELDS(ID,Name);
          TempLogin."User ID" := ShortUserID(WindowsLogin.ID);
          IF TempLogin."User ID" <> '' THEN BEGIN
            TempLogin."Windows Login" := TRUE;
            TempLogin."Windows Login ID" := WindowsLogin.ID;
            TempLogin.Name := WindowsLogin.Name;
            TempLogin."Windows Login SID" := WindowsLogin.SID;
            TempLogin.INSERT;
          END;
        UNTIL WindowsLogin.NEXT = 0;

      IF IncludeDatabaseLogin THEN
        IF DatabaseLogin.FINDSET THEN
          REPEAT
            TempLogin.INIT;
            TempLogin."User ID" := DatabaseLogin."User ID";
            TempLogin."Windows Login" := FALSE;
            TempLogin."Windows Login ID" := '';
            TempLogin.Name := DatabaseLogin.Name;
            TempLogin.INSERT;
          UNTIL DatabaseLogin.NEXT = 0;

      CLEAR(TempLogin);
      TempLogin.SETCURRENTKEY("User ID");
      TempLogin."User ID" := UserID;
      IF TempLogin.FIND('=><') THEN;
      IF FORM.RUNMODAL(FORM::Logins,TempLogin) = ACTION::LookupOK THEN BEGIN
        UserID := TempLogin."User ID";
        SID := TempLogin."Windows Login SID";
        EXIT(TRUE);
      END;

      EXIT(FALSE);
    END;

    PROCEDURE ShortUserID@4(VAR UserID@1000 : Text[100]) : Code[20];
    BEGIN
      IF STRPOS(UserID,'\') IN [0,STRLEN(UserID)] THEN
        IF STRLEN(UserID) <= 20 THEN
          EXIT(UserID)
        ELSE
          EXIT('')
      ELSE
        EXIT(COPYSTR(UserID,STRPOS(UserID,'\') + 1,20));
    END;

    BEGIN
    END.
  }
}
