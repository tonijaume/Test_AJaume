OBJECT Codeunit 99008506 Purchase Credit Memo-Accept
{
  OBJECT-PROPERTIES
  {
    Date=13/02/07;
    Time=12:00:00;
    Version List=NAVW15.00;
  }
  PROPERTIES
  {
    TableNo=99008502;
    OnRun=VAR
            InboundPurchaseDocumentHeader@1000 : Record 99008502;
          BEGIN
            InboundPurchaseDocumentHeader := Rec;
            IF NOT Validation(InboundPurchaseDocumentHeader) THEN
              EXIT;
            CreatePurchaseDocument(InboundPurchaseDocumentHeader);
            IF NOT HideDialogBox THEN
              MESSAGE(Text000 + Text001,InboundPurchaseDocumentHeader."Corresp. Accepted Document No.");
            Rec := InboundPurchaseDocumentHeader;
          END;

  }
  CODE
  {
    VAR
      BizTalkPartnerSetup@1000 : Record 99008513;
      Text000@1001 : TextConst 'ENU="A purchase credit memo number %1 that is based on ";ESP="Creado n£mero de abono de compra %1 basado en "';
      Text001@1002 : TextConst 'ENU=" the BizTalk purchase credit memo has been created.";ESP=" el abono de compra de BizTalk."';
      Text002@1003 : TextConst 'ENU=BizTalk partner number %1 does not exist.;ESP=No existe el socio BizTalk n£mero %1.';
      Text003@1004 : TextConst 'ENU=A purchase credit memo has already been created from a similar BizTalk purchase credit memo.;ESP=Ya se hab¡a creado un abono de compra basado en un abono BizTalk similar.';
      Text004@1005 : TextConst 'ENU=A posted purchase credit memo with a reference to a similar BizTalk purchase credit memo exists.;ESP=Existe un abono de compra registrado con una referencia a un abono de compra BizTalk similar.';
      Text005@1006 : TextConst 'ENU=Commerce Gateway does not support the acceptance of a %1 whose %2 is %3;ESP=Commerce Gateway no permite aceptar un documento %1 en el que %2 es %3';
      Text007@1008 : TextConst 'ENU=The currency code on the inbound purchase document header does not map to any currency specified for the Partner.;ESP=El c¢digo de divisa en la cabecera del documento de compra saliente no tiene equivalencia con ninguna divisa especificada para el socio.';
      Text008@1009 : TextConst 'ENU="You must specify %1 for %2 %3 = ''''%4'''' in order to accept a %5 with a %6";ESP="Debe especificar %1 para %2 %3 = ''''%4'''' para aceptar un(a) %5 con %6"';
      HideDialogBox@1007 : Boolean;

    PROCEDURE Validation@1(InboundPurchaseDocumentHeader@1000 : Record 99008502) : Boolean;
    VAR
      PurchaseHeader@1001 : Record 38;
      PostedPurchaseHeader@1002 : Record 124;
    BEGIN
      BizTalkPartnerSetup.SETCURRENTKEY("Partner Type","Partner No.");
      BizTalkPartnerSetup.SETRANGE("Partner Type", BizTalkPartnerSetup."Partner Type"::Vendor);
      BizTalkPartnerSetup.SETRANGE("Partner No.", InboundPurchaseDocumentHeader."Buy-from Vendor No.");
      IF NOT BizTalkPartnerSetup.FIND('-') THEN
        ERROR(Text002,InboundPurchaseDocumentHeader."Buy-from Vendor No.");

      IF InboundPurchaseDocumentHeader."Vendor Cr. Memo No."  <> '' THEN BEGIN
        PurchaseHeader.SETCURRENTKEY("Document Type","Buy-from Vendor No.");
        PurchaseHeader.SETRANGE("Document Type",PurchaseHeader."Document Type"::"Credit Memo");
        PurchaseHeader.SETRANGE("Buy-from Vendor No.",InboundPurchaseDocumentHeader."Buy-from Vendor No.");
        PurchaseHeader.SETRANGE("Vendor Cr. Memo No.",InboundPurchaseDocumentHeader."Vendor Cr. Memo No.");
        IF PurchaseHeader.FIND('-') THEN
          ERROR(Text003);

        PostedPurchaseHeader.SETRANGE("Buy-from Vendor No.",InboundPurchaseDocumentHeader."Buy-from Vendor No.");
        PostedPurchaseHeader.SETRANGE("Vendor Cr. Memo No.",InboundPurchaseDocumentHeader."Vendor Cr. Memo No.");
        IF PostedPurchaseHeader.FIND('-') THEN
          ERROR(Text004);
      END;

      EXIT(TRUE);
    END;

    PROCEDURE CreatePurchaseDocument@2(VAR InboundPurchaseDocumentHeader@1000 : Record 99008502);
    VAR
      PurchaseHeader@1001 : Record 38;
      InboundPurchaseDocumentLine@1002 : Record 99008503;
      PurchaseLine@1003 : Record 39;
      BizTalkPartnerCurrencyMap@1004 : Record 99008532;
      BizTalkReservEntry@1008 : Record 99008533;
      Item@1010 : Record 27;
      BizTalkManagement@1005 : Codeunit 99008508;
      CreateReservEntry@1009 : Codeunit 99000830;
      ItemNo@1006 : Code[20];
      NextLineNo@1007 : Integer;
    BEGIN
      PurchaseLine.LOCKTABLE;
      PurchaseHeader.LOCKTABLE;
      PurchaseHeader.INIT;
      PurchaseHeader."Document Type" := PurchaseHeader."Document Type"::"Credit Memo";
      PurchaseHeader.INSERT(TRUE);

      IF (InboundPurchaseDocumentHeader."Pay-to Vendor No." <> '') THEN
        PurchaseHeader.VALIDATE("Pay-to Vendor No.", InboundPurchaseDocumentHeader."Pay-to Vendor No.");
      IF (InboundPurchaseDocumentHeader."Ship-to Code" <> '') THEN
        PurchaseHeader.VALIDATE("Ship-to Code", InboundPurchaseDocumentHeader."Ship-to Code");
      IF (InboundPurchaseDocumentHeader."Sell-to Customer No." <> '') THEN
        PurchaseHeader.VALIDATE("Sell-to Customer No.",InboundPurchaseDocumentHeader."Sell-to Customer No.");
      IF (InboundPurchaseDocumentHeader."Buy-from Vendor No." <> '') THEN
        PurchaseHeader.VALIDATE("Buy-from Vendor No.",InboundPurchaseDocumentHeader."Buy-from Vendor No.");

      IF (InboundPurchaseDocumentHeader."Buy-from Vendor Name" <> '') THEN
        PurchaseHeader.VALIDATE("Buy-from Vendor Name",InboundPurchaseDocumentHeader."Buy-from Vendor Name");
      IF  (InboundPurchaseDocumentHeader."Buy-from Vendor Name 2" <> '') THEN
        PurchaseHeader.VALIDATE("Buy-from Vendor Name 2",InboundPurchaseDocumentHeader."Buy-from Vendor Name 2");
      IF (InboundPurchaseDocumentHeader."Buy-from Address" <> '') THEN
        PurchaseHeader.VALIDATE("Buy-from Address",InboundPurchaseDocumentHeader."Buy-from Address");
      IF (InboundPurchaseDocumentHeader."Buy-from Address 2" <> '') THEN
        PurchaseHeader.VALIDATE("Buy-from Address 2",InboundPurchaseDocumentHeader."Buy-from Address 2");
      IF (InboundPurchaseDocumentHeader."Buy-from Contact" <> '') THEN
        PurchaseHeader.VALIDATE("Buy-from Contact",InboundPurchaseDocumentHeader."Buy-from Contact");
      IF (InboundPurchaseDocumentHeader."Buy-from County" <> '') THEN
        PurchaseHeader.VALIDATE("Buy-from County",InboundPurchaseDocumentHeader."Buy-from County");
      IF (InboundPurchaseDocumentHeader."Buy-from Country/Region Code" <> '') THEN
        PurchaseHeader.VALIDATE("Buy-from Country/Region Code",InboundPurchaseDocumentHeader."Buy-from Country/Region Code");

      IF (InboundPurchaseDocumentHeader."Ship-to Name" <> '') THEN
        PurchaseHeader.VALIDATE("Ship-to Name",InboundPurchaseDocumentHeader."Ship-to Name");
      IF (InboundPurchaseDocumentHeader."Ship-to Name 2" <> '') THEN
        PurchaseHeader.VALIDATE("Ship-to Name 2",InboundPurchaseDocumentHeader."Ship-to Name 2");
      IF (InboundPurchaseDocumentHeader."Ship-to Address" <> '') THEN
        PurchaseHeader.VALIDATE("Ship-to Address",InboundPurchaseDocumentHeader."Ship-to Address");
      IF (InboundPurchaseDocumentHeader."Ship-to Address 2" <> '') THEN
        PurchaseHeader.VALIDATE("Ship-to Address 2",InboundPurchaseDocumentHeader."Ship-to Address 2");
      IF (InboundPurchaseDocumentHeader."Ship-to County" <> '') THEN
        PurchaseHeader.VALIDATE("Ship-to County",InboundPurchaseDocumentHeader."Ship-to County");
      IF (InboundPurchaseDocumentHeader."Ship-to Country/Region Code" <> '') THEN
        PurchaseHeader.VALIDATE("Ship-to Country/Region Code",InboundPurchaseDocumentHeader."Ship-to Country/Region Code");
      IF (InboundPurchaseDocumentHeader."Ship-to Contact" <> '') THEN
        PurchaseHeader.VALIDATE("Ship-to Contact",InboundPurchaseDocumentHeader."Ship-to Contact");

      IF (InboundPurchaseDocumentHeader."Pay-to Name" <> '') THEN
        PurchaseHeader.VALIDATE("Pay-to Name",InboundPurchaseDocumentHeader."Pay-to Name");
      IF (InboundPurchaseDocumentHeader."Pay-to Name 2" <> '') THEN
        PurchaseHeader.VALIDATE("Pay-to Name 2",InboundPurchaseDocumentHeader."Pay-to Name 2");
      IF (InboundPurchaseDocumentHeader."Pay-to Address" <> '') THEN
        PurchaseHeader.VALIDATE("Pay-to Address",InboundPurchaseDocumentHeader."Pay-to Address");
      IF (InboundPurchaseDocumentHeader."Pay-to Address 2" <> '') THEN
        PurchaseHeader.VALIDATE("Pay-to Address 2",InboundPurchaseDocumentHeader."Pay-to Address 2");
      IF (InboundPurchaseDocumentHeader."Pay-to Contact" <> '') THEN
        PurchaseHeader.VALIDATE("Pay-to Contact",InboundPurchaseDocumentHeader."Pay-to Contact");
      IF (InboundPurchaseDocumentHeader."Pay-to County" <> '') THEN
        PurchaseHeader.VALIDATE("Pay-to County",InboundPurchaseDocumentHeader."Pay-to County");
      IF (InboundPurchaseDocumentHeader."Pay-to Country/Region Code" <> '') THEN
        PurchaseHeader.VALIDATE("Pay-to Country/Region Code",InboundPurchaseDocumentHeader."Pay-to Country/Region Code");
      IF (InboundPurchaseDocumentHeader."Your Reference" <> '') THEN
        PurchaseHeader.VALIDATE("Your Reference",InboundPurchaseDocumentHeader."Your Reference");

      IF (InboundPurchaseDocumentHeader."Order Date" <> 0D) THEN
        PurchaseHeader.VALIDATE("Order Date",InboundPurchaseDocumentHeader."Order Date");
      IF (InboundPurchaseDocumentHeader."Shortcut Dimension 1 Code" <> '') THEN
        PurchaseHeader.VALIDATE("Shortcut Dimension 1 Code",InboundPurchaseDocumentHeader."Shortcut Dimension 1 Code");
      IF (InboundPurchaseDocumentHeader."Shortcut Dimension 2 Code" <> '') THEN
        PurchaseHeader.VALIDATE("Shortcut Dimension 2 Code",InboundPurchaseDocumentHeader."Shortcut Dimension 2 Code");
      IF (InboundPurchaseDocumentHeader."Transaction Type" <> '') THEN
        PurchaseHeader.VALIDATE("Transaction Type",InboundPurchaseDocumentHeader."Transaction Type");
      IF (InboundPurchaseDocumentHeader."Transport Method" <> '') THEN
        PurchaseHeader.VALIDATE("Transport Method",InboundPurchaseDocumentHeader."Transport Method");
      IF (InboundPurchaseDocumentHeader."Document Date" <> 0D) THEN
        PurchaseHeader.VALIDATE("Document Date",InboundPurchaseDocumentHeader."Document Date");

      IF (InboundPurchaseDocumentHeader."Purchaser Code" <> '') THEN
        PurchaseHeader.VALIDATE("Purchaser Code",InboundPurchaseDocumentHeader."Purchaser Code");
      IF (InboundPurchaseDocumentHeader."Expected Receipt Date" <> 0D) THEN
        PurchaseHeader.VALIDATE("Expected Receipt Date",InboundPurchaseDocumentHeader."Expected Receipt Date");
      IF (InboundPurchaseDocumentHeader."VAT Registration No." <> '') THEN
        PurchaseHeader.VALIDATE("VAT Registration No.",InboundPurchaseDocumentHeader."VAT Registration No.");
      IF (InboundPurchaseDocumentHeader."Vendor Cr. Memo No." <> '') THEN
        PurchaseHeader.VALIDATE("Vendor Cr. Memo No.",InboundPurchaseDocumentHeader."Vendor Cr. Memo No.");

      IF InboundPurchaseDocumentHeader."Currency Code" <> '' THEN BEGIN
        IF BizTalkPartnerCurrencyMap.GET(
          BizTalkPartnerSetup."BizTalk Partner No.",InboundPurchaseDocumentHeader."Currency Code") THEN
          PurchaseHeader.VALIDATE("Currency Code",BizTalkPartnerCurrencyMap."Currency Code")
        ELSE
          ERROR(Text007);
      END;

      PurchaseHeader.VALIDATE("Date Received",InboundPurchaseDocumentHeader."Date Received");
      PurchaseHeader.VALIDATE("Time Received",InboundPurchaseDocumentHeader."Time Received");
      PurchaseHeader.VALIDATE("BizTalk Purchase Credit Memo",TRUE);
      IF (InboundPurchaseDocumentHeader."Buy-from Post Code" <> '') THEN
        PurchaseHeader.VALIDATE("Buy-from Post Code",InboundPurchaseDocumentHeader."Buy-from Post Code");
      IF (InboundPurchaseDocumentHeader."Buy-from City" <> '') THEN
        PurchaseHeader.VALIDATE("Buy-from City",InboundPurchaseDocumentHeader."Buy-from City");
      IF (InboundPurchaseDocumentHeader."Ship-to Post Code" <> '') THEN
        PurchaseHeader.VALIDATE("Ship-to Post Code",InboundPurchaseDocumentHeader."Ship-to Post Code");
      IF (InboundPurchaseDocumentHeader."Ship-to City" <> '') THEN
        PurchaseHeader.VALIDATE("Ship-to City",InboundPurchaseDocumentHeader."Ship-to City");
      IF (InboundPurchaseDocumentHeader."Pay-to Post Code" <> '') THEN
        PurchaseHeader.VALIDATE("Pay-to Post Code",InboundPurchaseDocumentHeader."Pay-to Post Code");
      IF (InboundPurchaseDocumentHeader."Pay-to City" <> '') THEN
        PurchaseHeader.VALIDATE("Pay-to City",InboundPurchaseDocumentHeader."Pay-to City");
      PurchaseHeader.MODIFY;

      NextLineNo := 10000;
      InboundPurchaseDocumentLine.SETCURRENTKEY("Inbound Document No.");
      InboundPurchaseDocumentLine.SETRANGE("Inbound Document No.", InboundPurchaseDocumentHeader."Inbound Document No.");
      IF InboundPurchaseDocumentLine.FIND('-') THEN
        REPEAT
          PurchaseLine.INIT;
          PurchaseLine."Document Type" := PurchaseHeader."Document Type";
          PurchaseLine."Document No." := PurchaseHeader."No.";
          PurchaseLine."Line No." := NextLineNo;
          NextLineNo := NextLineNo + 10000;
          PurchaseLine.VALIDATE(Type,InboundPurchaseDocumentLine.Type);
          PurchaseLine.INSERT(TRUE);
          CASE InboundPurchaseDocumentLine.Type OF
            InboundPurchaseDocumentLine.Type::" ":
              PurchaseLine.Description := InboundPurchaseDocumentLine.Description;
            InboundPurchaseDocumentLine.Type::Item:
              BEGIN
                CASE BizTalkPartnerSetup."Purchase Item Number Type" OF
                  BizTalkPartnerSetup."Purchase Item Number Type"::"Internal Item No.":
                    BEGIN
                      InboundPurchaseDocumentLine.TESTFIELD("No.");
                      ItemNo := InboundPurchaseDocumentLine."No.";
                    END;
                  BizTalkPartnerSetup."Purchase Item Number Type"::"Vendor Item No.":
                    BEGIN
                      InboundPurchaseDocumentHeader.TESTFIELD("Buy-from Vendor No.");
                      InboundPurchaseDocumentLine.TESTFIELD("Vendor Item No.");
                      ItemNo := BizTalkManagement.ConvertVendorItemNo(
                        InboundPurchaseDocumentLine."Vendor Item No.",
                        InboundPurchaseDocumentHeader."Buy-from Vendor No.");
                    END;
                  BizTalkPartnerSetup."Purchase Item Number Type"::"Common Item No.":
                    BEGIN
                      InboundPurchaseDocumentLine.TESTFIELD("Common Item No.");
                      ItemNo := BizTalkManagement.ConvertCommonItemNo(InboundPurchaseDocumentLine."Common Item No.");
                    END;
                END;
                PurchaseLine.VALIDATE("No.",ItemNo);

                IF (InboundPurchaseDocumentLine.Quantity <> 0) THEN
                  PurchaseLine.VALIDATE(Quantity,InboundPurchaseDocumentLine.Quantity);
                IF (InboundPurchaseDocumentLine."Gross Weight" <> 0) THEN
                  PurchaseLine.VALIDATE("Gross Weight",InboundPurchaseDocumentLine."Gross Weight");
                IF (InboundPurchaseDocumentLine."Net Weight" <> 0) THEN
                  PurchaseLine.VALIDATE("Net Weight",InboundPurchaseDocumentLine."Net Weight");
                IF (InboundPurchaseDocumentLine."Unit Volume" <> 0) THEN
                  PurchaseLine.VALIDATE("Unit Volume",InboundPurchaseDocumentLine."Unit Volume");
                IF (InboundPurchaseDocumentLine."Unit of Measure" <> '') THEN
                  PurchaseLine.VALIDATE("Unit of Measure",InboundPurchaseDocumentLine."Unit of Measure");
                IF (InboundPurchaseDocumentLine."Unit of Measure Code" <> '') THEN
                  PurchaseLine.VALIDATE("Unit of Measure Code",InboundPurchaseDocumentLine."Unit of Measure Code");
                IF (InboundPurchaseDocumentLine."Line Discount %" <> 0) THEN
                  PurchaseLine.VALIDATE("Line Discount %",InboundPurchaseDocumentLine."Line Discount %");
                IF (InboundPurchaseDocumentLine."Line Discount Amount" <> 0) THEN
                  PurchaseLine.VALIDATE("Line Discount Amount",InboundPurchaseDocumentLine."Line Discount Amount");
                IF (InboundPurchaseDocumentLine."Inv. Discount Amount" <> 0) THEN
                  PurchaseLine.VALIDATE("Inv. Discount Amount",InboundPurchaseDocumentLine."Inv. Discount Amount");
                IF (InboundPurchaseDocumentLine."Amount Including VAT" <> 0) THEN
                  PurchaseLine.VALIDATE("Amount Including VAT",InboundPurchaseDocumentLine."Amount Including VAT");
                IF (InboundPurchaseDocumentLine."Units per Parcel" <> 0) THEN
                  PurchaseLine.VALIDATE("Units per Parcel",InboundPurchaseDocumentLine."Units per Parcel");

                IF (InboundPurchaseDocumentLine.Description <> '') THEN
                  PurchaseLine.VALIDATE(Description,InboundPurchaseDocumentLine.Description);
                IF (InboundPurchaseDocumentLine."Description 2" <> '') THEN
                  PurchaseLine.VALIDATE("Description 2",InboundPurchaseDocumentLine."Description 2");
                IF (InboundPurchaseDocumentLine."Shortcut Dimension 1 Code" <> '') THEN
                  PurchaseLine.VALIDATE("Shortcut Dimension 1 Code",InboundPurchaseDocumentLine."Shortcut Dimension 1 Code");
                IF (InboundPurchaseDocumentLine."Shortcut Dimension 2 Code" <> '') THEN
                  PurchaseLine.VALIDATE("Shortcut Dimension 2 Code",InboundPurchaseDocumentLine."Shortcut Dimension 2 Code");
                IF (InboundPurchaseDocumentLine."Job No." <> '') THEN
                  PurchaseLine.VALIDATE("Job No.",InboundPurchaseDocumentLine."Job No.");

                IF (InboundPurchaseDocumentLine."Variant Code" <> '') THEN
                  PurchaseLine.VALIDATE("Variant Code",InboundPurchaseDocumentLine."Variant Code");

                IF (InboundPurchaseDocumentLine."Expected Receipt Date" <> 0D) THEN
                  PurchaseLine.VALIDATE("Expected Receipt Date",InboundPurchaseDocumentLine."Expected Receipt Date");
                IF (InboundPurchaseDocumentLine."Direct Unit Cost" <> 0) THEN
                  PurchaseLine.VALIDATE("Direct Unit Cost",InboundPurchaseDocumentLine."Direct Unit Cost");
                IF (InboundPurchaseDocumentLine.Amount <> 0) THEN
                  PurchaseLine.VALIDATE(Amount,InboundPurchaseDocumentLine.Amount);
                IF (InboundPurchaseDocumentLine."Vendor Item No." <> '') THEN
                  PurchaseLine.VALIDATE("Vendor Item No.",InboundPurchaseDocumentLine."Vendor Item No.");
                IF (InboundPurchaseDocumentLine."Bin Code" <> '') THEN
                  PurchaseLine.VALIDATE("Bin Code",InboundPurchaseDocumentLine."Bin Code");
                IF (InboundPurchaseDocumentLine."Unit Price (LCY)" <> 0) THEN
                  PurchaseLine.VALIDATE("Unit Price (LCY)",InboundPurchaseDocumentLine."Unit Price (LCY)");
                IF (InboundPurchaseDocumentLine."Pay-to Vendor No." <> '') THEN
                  PurchaseLine.VALIDATE("Pay-to Vendor No.",InboundPurchaseDocumentLine."Pay-to Vendor No.");
              END;
            ELSE
              ERROR(Text005,PurchaseLine.TABLECAPTION,PurchaseLine.FIELDCAPTION(Type),FORMAT(PurchaseLine.Type));
          END;
          PurchaseLine.MODIFY;

          BizTalkReservEntry.SETRANGE("BizTalk Document No.",
            InboundPurchaseDocumentHeader."Inbound Document No.");
          BizTalkReservEntry.SETRANGE("Biztalk Document Direction",
            BizTalkReservEntry."Biztalk Document Direction"::Inbound);
          BizTalkReservEntry.SETRANGE("Source Type",DATABASE::"Purchase Line");
          BizTalkReservEntry.SETRANGE("BizTalk Document Line No.",
            InboundPurchaseDocumentLine."Line No.");
          IF BizTalkReservEntry.FIND('-') THEN
            REPEAT
              Item.GET(ItemNo);
              IF Item."Item Tracking Code" = '' THEN
                ERROR(Text008,Item.FIELDCAPTION("Item Tracking Code"),Item.TABLECAPTION,Item.FIELDCAPTION("No."),
                  Item."No.",FORMAT(PurchaseHeader."Document Type"),BizTalkReservEntry.TABLECAPTION);
              CreateReservEntry.CreateReservEntryFor(
                DATABASE::"Purchase Line",PurchaseLine."Document Type",
                PurchaseLine."Document No.",'',0,PurchaseLine."Line No.",PurchaseLine."Qty. per Unit of Measure",
                BizTalkReservEntry.Quantity,BizTalkReservEntry."Serial No.",BizTalkReservEntry."Lot No.");
              CreateReservEntry.CreateEntry(ItemNo,
                PurchaseLine."Variant Code",PurchaseLine."Location Code",
                BizTalkReservEntry.Description,
                BizTalkReservEntry."Expected Receipt Date",
                BizTalkReservEntry."Shipment Date",0,BizTalkReservEntry."Reservation Status");
            UNTIL BizTalkReservEntry.NEXT = 0;

        UNTIL InboundPurchaseDocumentLine.NEXT = 0;
      InboundPurchaseDocumentHeader.Status := InboundPurchaseDocumentHeader.Status::Accepted;
      InboundPurchaseDocumentHeader."Date Processed" := TODAY;
      InboundPurchaseDocumentHeader."Time Processed" := TIME;
      InboundPurchaseDocumentHeader."Corresp. Accepted Document No." := PurchaseHeader."No.";
      InboundPurchaseDocumentHeader.MODIFY;
    END;

    PROCEDURE SetHideDialogBox@5(NewHideDialogBox@1000 : Boolean);
    BEGIN
      HideDialogBox := NewHideDialogBox;
    END;

    BEGIN
    END.
  }
}
