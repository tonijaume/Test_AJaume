OBJECT Codeunit 7010175 Excursiones - Booking position
{
  OBJECT-PROPERTIES
  {
    Date=19/12/14;
    Time=10:18:50;
    Modified=Yes;
    Version List=AIC2009;
  }
  PROPERTIES
  {
    OnRun=BEGIN
            PrepararDatos;

            CLEAR(lfConsulta);
            lfConsulta.RUN;
          END;

  }
  CODE
  {
    VAR
      Text001@1000000000 : TextConst 'ENU=Allotment;ESP=Cupo';
      Text002@1000000001 : TextConst 'ENU=Reserved;ESP=Reservado';
      Text003@1000000002 : TextConst 'ENU=Available;ESP=Disponible';
      lfConsulta@1000000003 : Form 7010184;

    PROCEDURE PrepararDatos@1000000000();
    VAR
      lrExcursion@1000000001 : Record 7009710;
      lrCalendario@1000000002 : Record 7010254;
      lrBooking@1000000000 : Record 7010270;
    BEGIN
      // PrepararDatos

      lrExcursion.RESET;
      lrExcursion.SETRANGE("Tipo Producto", lrExcursion."Tipo Producto"::Excursion);
      lrExcursion.SETRANGE("Venta libre"  , FALSE);
      lrExcursion.SETRANGE(Caducado       , FALSE);
      IF lrExcursion.FINDSET THEN
      BEGIN
        REPEAT
          lrCalendario.RESET;
          lrCalendario.SETRANGE (Excursion     , lrExcursion.Codigo);
          lrCalendario.SETFILTER("Fecha inicio", '<=%1', TODAY);
          lrCalendario.SETFILTER("Fecha final" , '>=%1', TODAY);
          IF lrCalendario.FINDSET THEN
          BEGIN
            REPEAT
              IF NOT lrBooking.GET(lrExcursion.Codigo, lrCalendario.Turno, lrBooking."Tipo linea"::Codigo) THEN
                CrearExcursion(lrExcursion, lrCalendario, lrBooking);
            UNTIL lrCalendario.NEXT = 0;
          END
          ELSE
          BEGIN
            CLEAR(lrCalendario);
            IF NOT lrBooking.GET(lrExcursion.Codigo, lrCalendario.Turno, lrBooking."Tipo linea"::Codigo) THEN
              CrearExcursion(lrExcursion, lrCalendario, lrBooking);
          END;
        UNTIL lrExcursion.NEXT = 0;
      END;
    END;

    PROCEDURE CrearExcursion@1000000002(prExcursion@1000000001 : Record 7009710;prCalendario@1000000002 : Record 7010254;prBooking@1000000000 : Record 7010270);
    BEGIN
      CLEAR(prBooking);
      prBooking.Excursion          := prExcursion.Codigo;
      prBooking.Turno              := prCalendario.Turno;
      prBooking."Tipo linea"       := prBooking."Tipo linea"::Codigo;
      IF prCalendario.Turno = 0 THEN
        prBooking.Descripcion := prExcursion.Descripcion
      ELSE
        prBooking.Descripcion := prExcursion.Descripcion + ' ' + prBooking.FIELDCAPTION(Turno) + ' ' + FORMAT(prCalendario.Turno);
      prBooking."Oficina venta"    := prExcursion.Oficina;
      prBooking."Venta x Vehiculo" := prExcursion."Venta x vehiculo";
      prBooking.Indentacion        := 0;
      prBooking.INSERT;

      CLEAR(prBooking);
      prBooking.Excursion          := prExcursion.Codigo;
      prBooking.Turno              := prCalendario.Turno;
      prBooking."Tipo linea"       := prBooking."Tipo linea"::Cupo;
      prBooking.Descripcion        := Text001;
      prBooking."Oficina venta"    := prExcursion.Oficina;
      prBooking."Venta x Vehiculo" := prExcursion."Venta x vehiculo";
      prBooking.Indentacion        := 2;
      prBooking.INSERT;

      CLEAR(prBooking);
      prBooking.Excursion          := prExcursion.Codigo;
      prBooking.Turno              := prCalendario.Turno;
      prBooking."Tipo linea"       := prBooking."Tipo linea"::Reservas;
      prBooking.Descripcion        := Text002;
      prBooking."Oficina venta"    := prExcursion.Oficina;
      prBooking."Venta x Vehiculo" := prExcursion."Venta x vehiculo";
      prBooking.Indentacion        := 2;
      prBooking.INSERT;

      CLEAR(prBooking);
      prBooking.Excursion          := prExcursion.Codigo;
      prBooking.Turno              := prCalendario.Turno;
      prBooking."Tipo linea"       := prBooking."Tipo linea"::Libre;
      prBooking.Descripcion        := Text003;
      prBooking."Oficina venta"    := prExcursion.Oficina;
      prBooking."Venta x Vehiculo" := prExcursion."Venta x vehiculo";
      prBooking.Indentacion        := 2;
      prBooking.INSERT;
    END;

    PROCEDURE CalcularResultado@1000000001(prBooking@1000000000 : Record 7010270;pwFechaInicio@1000000001 : Date;pwFechaFinal@1000000002 : Date;pwTouroperador@1000000008 : Text[1024]) : Decimal;
    VAR
      lrExcursion@1000000007 : Record 7009710;
      lrCupo@1000000003 : Record 7010265;
      lwDia@1000000004 : Date;
      lwCupo@1000000005 : Decimal;
      lwReservado@1000000006 : Decimal;
    BEGIN
      // CalcularResultado

      IF prBooking."Tipo linea" = prBooking."Tipo linea"::Codigo THEN
        EXIT(0);

      lwCupo      := 0;
      lwReservado := 0;
      IF (prBooking."Tipo linea" = prBooking."Tipo linea"::Cupo) OR
         (prBooking."Tipo linea" = prBooking."Tipo linea"::Libre) THEN
      BEGIN
        FOR lwDia :=  pwFechaInicio TO pwFechaFinal DO
        BEGIN
          lrCupo.RESET;
          lrCupo.SETCURRENTKEY(Excursion, Turno, Touroperador, "Fecha desde");
          lrCupo.SETRANGE (Excursion    , prBooking.Excursion);
          lrCupo.SETRANGE (Turno        , prBooking.Turno);
          IF pwTouroperador <> '' THEN
            lrCupo.SETFILTER(Touroperador, '%1|%2', pwTouroperador, '');
          lrCupo.SETFILTER("Fecha desde", '<=%1', lwDia);
          lrCupo.SETFILTER("Fecha hasta", '>=%1', lwDia);
          IF lrCupo.FINDFIRST THEN
          BEGIN
            lrCupo.CALCSUMS(Cupo);
            lwCupo += lrCupo.Cupo;
          END;
        END;
      END;

      IF (prBooking."Tipo linea" = prBooking."Tipo linea"::Reservas) OR
         (prBooking."Tipo linea" = prBooking."Tipo linea"::Libre) THEN
      BEGIN
        IF prBooking."Venta x Vehiculo" THEN
        BEGIN
          lrExcursion.GET(prBooking.Excursion);
          lwReservado := lrExcursion.GetVehiculosRsvServicio(prBooking.Excursion, prBooking.Turno, pwTouroperador,
                                                             pwFechaInicio, pwFechaFinal); //+$001
        END
        ELSE
        BEGIN
          lrExcursion.GET(prBooking.Excursion);
          lwReservado := lrExcursion.GetPersonasRsvServicio(prBooking.Excursion, prBooking.Turno, pwTouroperador,
                                                            pwFechaInicio, pwFechaFinal); //+$001
        END;
      END;

      CASE prBooking."Tipo linea" OF
        prBooking."Tipo linea"::Cupo: EXIT(lwCupo);
        prBooking."Tipo linea"::Reservas: EXIT(lwReservado);
        prBooking."Tipo linea"::Libre: EXIT(lwCupo - lwReservado);
      END;
    END;

    BEGIN
    {
      $001 AJS 19122014 Modifico la funcion CalcularResultado para pasar un periodo de fechas a las funciones de calculo de
                        personas/vehiculos
    }
    END.
  }
}
