OBJECT Codeunit 7009706 Gestion Macros
{
  OBJECT-PROPERTIES
  {
    Date=18/05/15;
    Time=11:32:14;
    Modified=Yes;
    Version List=AIC2009,COM;
  }
  PROPERTIES
  {
    OnRun=VAR
            cFunAuto@1000000000 : Codeunit 7009789;
          BEGIN
            cFunSeg.RUN;

            IniciarPlantilla;

            EjecutarFuncionesAutomaticas;

            IF NOT rDatInst.FINDFIRST THEN
            BEGIN
              rDatInst.ID := 0;
              rDatInst.INSERT;
            END;

            rDatInst."Ultima actualizacion" := TODAY;
            //rDatInst.MODIFY;

            cFunAuto.CrearLineasFuncion;   // +$003

            MESSAGE(Text005);
          END;

  }
  CODE
  {
    VAR
      rMacros@1100253000 : Record 7009767;
      Text001@1100253001 : TextConst 'ENU=Delete old contracts/reservations history;ESP=Eliminar historicos contratos/reservas antiguos';
      Text002@1100253002 : TextConst 'ENU=Will delete all records from the tables of the historical of modifications in reserves and contracts with more than 3 years old;ESP=Se borraran todos los registros de las tablas de historicos de modificaciones de reservas y contratos con mas de 3 a§os de antigÅedad';
      Text003@1100253003 : TextConst 'ENU=Process: %1 is going to be executed, do you wish to carry on?;ESP=Se va a ejecutar la macro: %1, desea continuar?';
      Text004@1100253004 : TextConst 'ENU=Process completed;ESP=Proceso finalizado';
      Text005@1100253005 : TextConst 'ENU=Update completed;ESP=Actualizacion completada.';
      Text006@1100253006 : TextConst 'ESP=Iniciar delegacion';
      Text007@1100253007 : TextConst 'ESP=Se van a crear registros de las tablas de parametros basicos';
      rDatInst@1100253008 : Record 7009768;
      Text008@1100253009 : TextConst 'ESP=Rellena el campo Facturado en Bonos';
      Text009@1100253010 : TextConst 'ESP=Creas Lineas Factura Handlin Fee';
      Text010@1100253011 : TextConst 'ESP=Inicia campo Temporada en reserva hotel.';
      Text011@1100253012 : TextConst 'ENU=Initiate new table Excursions reservacion - Economic Detail;ESP=Iniciar nueva tabla Detalle economico excursiones';
      Text012@1100217000 : TextConst 'ESP=Rellenar orden dependiente en precios transfer';
      rPar@1100217050 : Record 7009700;
      cFunSeg@1100217001 : Codeunit 7009751;
      Text013@1100217002 : TextConst 'ENU=Historical Data Erase;ESP=Borrar Datos Historicos';
      Text014@1100217003 : TextConst 'ENU=Removes all records before a date;ESP=Elimina todos los registros de Atennea Incoming anteriores a una fecha';
      Text015@1100217004 : TextConst 'ENU=Clean reservations interface;ESP=Depurar interface reservas';
      Text016@1100217005 : TextConst 'ENU=Delete all data from the reservations interface with more than one year old;ESP=Eliminar todos los datos del interface de reservas anteriores con mas de un a§o de antigÅedad';
      Text017@1100217006 : TextConst 'ENU=Change reservation touroperator.;ESP=Cambiar touroperador reserva.';
      Text018@1100217007 : TextConst 'ENU=Delegation. Change the touroperator of a closed reservation.;ESP=Delegacion. Cambiar el Touroperador de una reserva ya cerrada.';
      Text019@1100217008 : TextConst 'ENU=Delete a voucher in Hotel Payment;ESP=Borrar bono en Hotel Payment';
      Text020@1100217009 : TextConst 'ENU=Delete all the information for a voucher in the hotel payment company;ESP=Elimina toda la informacion de un bono en la empresa de Hotel Payment';
      Text021@1100217010 : TextConst 'ESP=Rellena nuevo campo "Importe divisa Reservas" en "Cobros Reserva Excursion"';
      Text022@1100217011 : TextConst 'ESP=Iniciar contratos SWG - MEX';
      Text023@1100217012 : TextConst 'ESP=Rellenar guia venta en contrato compra';
      Text024@1100217013 : TextConst 'ESP=Vaciar parametros obsoletos';
      Text025@1100217014 : TextConst 'ESP="Vaciar campos obsoletos en servicio excursion "';
      Text026@1100217015 : TextConst 'ESP=Vaciar campos obsoletos en reserva excursion';
      Text027@1100217016 : TextConst 'ESP=Reserva Excursion - Cambiar divisa y fecha cambio';
      Text028@1100217017 : TextConst 'ESP=Reserva Excursion - Cambiar forma pago';
      Text029@1100217018 : TextConst 'ESP=Vaciar fecha cambio en cobro reserva excursion';
      Text030@1100217019 : TextConst 'ESP=Reserva Excursion - Recalcular excursiones';
      Text031@1100217020 : TextConst 'ESP=Vaciar campos obsoletos tabla Liquidaciones';
      Text032@1100217021 : TextConst 'ESP=Permite recalcular las reservas no liquidadas ni facturadas de una excursion que se seleccione.';
      Text033@1100217022 : TextConst 'ESP=Llevar precio dto TTOO a detalle economico';
      Text034@1100217023 : TextConst 'ESP=Inicializar ID Tarifa excursiones';
      Text035@1100217024 : TextConst 'ESP=Reserva Excursion - Anular reserva liquidada guia venta';
      Text036@1100217025 : TextConst 'ESP=Permite marcar como anulada una reserva que ya esta liquidada. Tiene que tener importe cero';
      Text037@1100217026 : TextConst 'ESP=Excursiones - Retroceder liquidacion guia venta';
      Text038@1100217027 : TextConst 'ESP=Permite desmarcar las reservas y eliminar los registros asociados.';
      Text039@1100217028 : TextConst 'ESP=Excursiones - Recalcula comision Guia Venta';
      Text040@1100217029 : TextConst 'ESP=Recalcular comision GV de una excursion. No incluye reembolsadas ni anuladas.';
      Text041@1100217030 : TextConst 'ENU=Excursion Reservation - Cancel reservation refund;ESP=Reserva Excursion - Retroceder reembolso reserva';
      Text042@1100217031 : TextConst 'ENU=Excursion Reservation - Change Tour operator;ESP=Reserva Excursion - Cambiar Touroperador';
      Text043@1100217032 : TextConst 'ESP=Rellenar fecha venta cobro excursiones';
      Text044@1100217033 : TextConst 'ESP=Rellenar parametro divisa venta excursiones';
      Text045@1100217035 : TextConst 'ENU=Excursion Reservation - Change Tour operator;ESP=Reserva Excursion - Cambiar Fecha servicio';
      Text046@1100217034 : TextConst 'ESP=Marcar liquidaciones prefacturadas';
      Text047@1100217036 : TextConst 'ESP=Revisa si todas las reservas de la liquidacion estan prefacturadas y pone la marca en la liquidacion.';
      Text048@1100217037 : TextConst 'ESP=Reserva Excursion - Cambiar excursion';
      Text049@1100217038 : TextConst 'ENU=Complete new fields in economic detail;ESP=Rellenar nuevos campos Detalle economico';
      Text050@1100217039 : TextConst 'ENU=Excursions reservation - Change hotel;ESP=Reserva Excursion - Cambiar hotel';
      Text051@1100217040 : TextConst 'ESP=Rellenar campo Reembolsado en cobros';
      Text052@1100217041 : TextConst 'ESP=Interface - Depura errores no manejados';
      Text053@1100217042 : TextConst 'ESP=Rellenar campo Reserva a credito en reservas';
      Text054@1100217043 : TextConst 'ESP=Vaciar campos DL en precios de compra excursiones';
      Text055@1100217044 : TextConst 'ESP=Rellenar campo Tipo pago en los cobros de excursiones';
      Text056@1100217045 : TextConst 'ESP=Vaciar tabla Maestro de claves';
      Text057@1100217046 : TextConst 'ESP=Vaciar tabla Elemento transportar excursion';
      Text058@1100217047 : TextConst 'ESP=Excursiones - Recalcula comision Touroperador';
      Text059@1100217048 : TextConst 'ESP=Recalcular la comision de todas las reservas de un touroperador a partir de una fecha de venta';
      Text060@1100217049 : TextConst 'ESP=Desmarcar el campo BD Contabilidad de Parametros agencia';
      Text061@1100217051 : TextConst 'ENU=Fullfill the field private transfer in the transfer costs;ESP=Rellenar el campo Transfer privado en los costes de traslados';
      Text062@1100217052 : TextConst 'ENU=Empty EBB report tables;ESP=Vaciar tablas de informe EBB';
      Text063@1100217053 : TextConst 'ENU=Mark the field Send Touroperator confirmation;ESP=Marcar el campo de Enviar confirmacion touroperador';
      Text064@1100217054 : TextConst 'ESP=Rellenar Transfer privado salida';
      Text065@1100217055 : TextConst 'ESP=Rellenar Precio x persona transfer';
      Text066@1100217056 : TextConst 'ESP=Rellenar Origen precio transfer';
      Text067@1100217057 : TextConst 'ESP=Rellenar Origen en coste/ingreso transfer';
      Text068@1100217058 : TextConst 'ESP=Rellenar Venta libre en excursiones';
      Text069@1100217059 : TextConst 'ESP=Series de facturacion';
      Text070@1000000000 : TextConst 'ESP=Rellenar Importe base impuesto en costes excursiones';
      Text071@1000000001 : TextConst 'ENU=Fullfill currency exchange in transfer cost table;ESP=Rellenar Tipo cambio en la tabla de costes de transfer';
      Text072@1000000002 : TextConst 'ESP=Rellenar tipo servicio transportista';
      Text073@1000000003 : TextConst 'ESP=Rellenar tipo servicio transfer';
      Text074@1000000004 : TextConst 'ESP=Rellenar campos invitados compra.';
      Text075@1000000005 : TextConst 'ENU=Delete old change log;ESP=Eliminar log de cambios obsoletos';
      Text076@1000000006 : TextConst 'ENU=Rellenar campo Fecha vuelo datetime en Acumulado x Hotel x Vuelo;ESP=Rellenar campo Fecha vuelo datetime en Acumulado x Hotel x Vuelo';
      Text077@1000000007 : TextConst 'ENU=Rename hotel codes;ESP=Renombrar codigos de hotel';
      Text078@1000000008 : TextConst 'ENU=Create new hotel codes, based on Destination and Zone ID;ESP=Crear nuevos codigos de hotel, basados en delegacion y el ID de zona fisica';
      Text079@1000000010 : TextConst 'ENU=Rename excursion codes;ESP=Renombrar codigos de excursiones';
      Text080@1000000009 : TextConst 'ENU=Create new excursion codes, based on Destination and office code;ESP=Crear nuevos codigos de excursiones, basados en delegacion y codigo de oficina';
      Text081@1000000011 : TextConst 'ESP=Rellenar el campo Delegacion en la tabla Zonas transfer';
      Text082@1000000012 : TextConst 'ESP=Fusionar contratos excursiones guia venta';
      Text083@1000000013 : TextConst 'ESP=Rellenar cuenta corporativa en contabilidad y presupuestos';
      Text084@1000000014 : TextConst 'ESP=Rellenar el campo Vuelo en Acumulado x hotel x vuelo';
      Text085@1000000015 : TextConst 'ENU=Rename excursion codes;ESP=Marcar excursiones como Voucher impreso';

    PROCEDURE IniciarPlantilla@1100253000();
    BEGIN
      // IniciarPlantilla

      //.          ID| Descripcion| Automatica| Ejecucion Unica| Empresa Real| Explicacion | MultiEmpresa | Fecha

      CrearFuncion( 1 , Text001    , FALSE     , FALSE          , 0           , Text002    , FALSE, 010112D);
      CrearFuncion( 2 , Text006    , FALSE     , TRUE           , 0           , Text007    , FALSE, 010112D);
      CrearFuncion( 3 , Text008    , TRUE      , TRUE           , 0           , Text008    , FALSE, 010112D);
      CrearFuncion( 4 , Text009    , TRUE      , TRUE           , 0           , Text009    , FALSE, 010112D);
      CrearFuncion( 5 , Text011    , TRUE      , TRUE           , 1           , Text011    , FALSE, 010112D);
      CrearFuncion( 6 , Text012    , TRUE      , TRUE           , 0           , Text012    , FALSE, 010112D);
      CrearFuncion( 7 , Text013    , FALSE     , FALSE          , 0           , Text014    , FALSE, 010112D);
      CrearFuncion( 8 , Text015    , FALSE     , FALSE          , 0           , Text016    , FALSE, 010112D);
      CrearFuncion( 9 , Text017    , FALSE     , FALSE          , 0           , Text018    , FALSE, 010112D);
      CrearFuncion(10 , Text019    , FALSE     , FALSE          , 0           , Text020    , FALSE, 010112D);
      CrearFuncion(11 , Text021    , TRUE      , TRUE           , 0           , Text021    , FALSE, 010112D);
      CrearFuncion(12 , Text022    , FALSE     , TRUE           , 2           , Text022    , FALSE, 010112D);
      CrearFuncion(13 , Text023    , TRUE      , TRUE           , 0           , Text023    , FALSE, 010112D);
      CrearFuncion(14 , Text024    , TRUE      , TRUE           , 0           , Text024    , FALSE, 010112D);
      CrearFuncion(15 , Text025    , TRUE      , TRUE           , 0           , Text025    , FALSE, 010112D);
      CrearFuncion(16 , Text026    , TRUE      , TRUE           , 0           , Text026    , FALSE, 010112D);
      CrearFuncion(17 , Text027    , FALSE     , FALSE          , 0           , Text027    , FALSE, 010112D);
      CrearFuncion(18 , Text028    , FALSE     , FALSE          , 0           , Text028    , FALSE, 010112D);
      CrearFuncion(19 , Text029    , TRUE      , TRUE           , 0           , Text029    , TRUE , 121212D);
      CrearFuncion(20 , Text030    , FALSE     , FALSE          , 0           , Text032    , FALSE, 131212D);
      CrearFuncion(21 , Text031    , TRUE      , TRUE           , 0           , Text031    , TRUE , 181212D);  //.
      CrearFuncion(22 , Text033    , TRUE      , TRUE           , 0           , Text033    , TRUE , 281212D);  //.
      CrearFuncion(23 , Text034    , TRUE      , TRUE           , 0           , Text034    , TRUE , 281212D);  //.
      CrearFuncion(24 , Text035    , FALSE     , FALSE          , 0           , Text036    , TRUE , 311212D);  //.
      CrearFuncion(25 , Text037    , FALSE     , FALSE          , 0           , Text038    , FALSE, 030113D);  //.
      CrearFuncion(26 , Text039    , FALSE     , FALSE          , 0           , Text040    , FALSE, 140113D);  //.
      CrearFuncion(27 , Text041    , FALSE     , FALSE          , 0           , Text041    , FALSE, 010213D);  //.
      //.          ID| Descripcion| Automatica| Ejecucion Unica| Empresa Real| Explicacion | MultiEmpresa | Fecha
      CrearFuncion(28 , Text042    , FALSE     , FALSE          , 0           , Text042    , FALSE, 020213D);  //.
      CrearFuncion(29 , Text043    , TRUE      , TRUE           , 0           , Text043    , FALSE, 070213D);  //.
      CrearFuncion(30 , Text044    , TRUE      , TRUE           , 0           , Text044    , FALSE, 070213D);  //.
      //CrearFuncion(31 , Text045    , FALSE     , FALSE          , 0           , Text045    , FALSE, 150213D);  //.
      CrearFuncion(32 , Text046    , TRUE      , TRUE           , 2           , Text047    , FALSE, 040313D);  //.
      CrearFuncion(33 , Text048    , FALSE     , FALSE          , 0           , Text048    , FALSE, 080313D);  //.
      CrearFuncion(34 , Text049    , TRUE      , TRUE           , 0           , Text049    , FALSE, 190313D);  //.
      CrearFuncion(35 , Text050    , FALSE     , FALSE          , 0           , Text050    , FALSE, 230313D);  //.
      CrearFuncion(36 , Text051    , TRUE      , TRUE           , 0           , Text051    , FALSE, 160613D);  //.
      CrearFuncion(37 , Text052    , FALSE     , FALSE          , 2           , Text052    , FALSE, 190613D);  //.
      CrearFuncion(38 , Text053    , TRUE      , TRUE           , 0           , Text053    , FALSE, 090713D);  //.
      CrearFuncion(39 , Text054    , TRUE      , TRUE           , 0           , Text054    , FALSE, 230713D);  //.
      CrearFuncion(40 , Text055    , TRUE      , TRUE           , 0           , Text055    , FALSE, 120813D);  //.
      CrearFuncion(41 , Text056    , TRUE      , TRUE           , 0           , Text056    , FALSE, 260813D);  //.
      CrearFuncion(42 , Text057    , TRUE      , TRUE           , 0           , Text057    , TRUE , 300813D);  //.
      CrearFuncion(43 , Text058    , FALSE     , FALSE          , 0           , Text059    , FALSE, 050913D);  //.
      CrearFuncion(44 , Text060    , TRUE      , TRUE           , 0           , Text060    , TRUE , 131113D);  //.
      CrearFuncion(45 , Text061    , TRUE      , TRUE           , 0           , Text061    , FALSE, 240214D);  //.
      CrearFuncion(46 , Text062    , TRUE      , TRUE           , 0           , Text062    , FALSE, 260214D);  //.
      CrearFuncion(47 , Text063    , TRUE      , TRUE           , 0           , Text063    , TRUE , 180314D);  //.
      CrearFuncion(48 , Text064    , TRUE      , TRUE           , 0           , Text064    , FALSE, 300514D);  //.
      CrearFuncion(49 , Text065    , TRUE      , TRUE           , 0           , Text065    , FALSE, 100614D);  //.
      CrearFuncion(50 , Text066    , FALSE     , TRUE           , 0           , Text066    , FALSE, 100614D);  //.
      CrearFuncion(51 , Text067    , FALSE     , TRUE           , 0           , Text067    , FALSE, 110614D);  //.
      CrearFuncion(52 , Text068    , TRUE      , TRUE           , 0           , Text068    , FALSE, 230614D);  //.
      CrearFuncion(53 , Text069    , TRUE      , TRUE           , 0           , Text069    , FALSE, 230614D);  //.
      CrearFuncion(54 , Text070    , TRUE      , TRUE           , 0           , Text070    , FALSE, 210814D);  //.
      //.          ID| Descripcion| Automatica| Ejecucion Unica| Empresa Real| Explicacion | MultiEmpresa | Fecha
      CrearFuncion(55 , Text071    , TRUE      , TRUE           , 0           , Text071    , FALSE, 020914D);
      CrearFuncion(56 , Text072    , TRUE      , TRUE           , 0           , Text072    , FALSE, 290914D);
      CrearFuncion(57 , Text073    , TRUE      , TRUE           , 0           , Text073    , FALSE, 300914D);
      CrearFuncion(58 , Text074    , TRUE      , TRUE           , 0           , Text074    , FALSE, 241114D);
      CrearFuncion(59 , Text075    , FALSE     , FALSE          , 0           , Text075    , FALSE, 091214D);
      CrearFuncion(60 , Text076    , TRUE      , TRUE           , 0           , Text076    , FALSE, 030315D);
      CrearFuncion(61 , Text077    , FALSE     , TRUE           , 0           , Text078    , FALSE, 090315D);
      CrearFuncion(62 , Text079    , FALSE     , TRUE           , 0           , Text080    , FALSE, 090315D);
      CrearFuncion(63 , Text081    , TRUE      , TRUE           , 0           , Text081    , FALSE, 130315D);
      CrearFuncion(64 , Text082    , TRUE      , TRUE           , 0           , Text082    , FALSE, 310315D);
      CrearFuncion(65 , Text083    , FALSE     , TRUE           , 0           , Text083    , FALSE, 310315D);
      CrearFuncion(66 , Text084    , TRUE      , TRUE           , 0           , Text084    , FALSE, 160515D);
      CrearFuncion(67 , Text085    , FALSE     , FALSE          , 0           , Text085    , FALSE, 180515D);
    END;

    PROCEDURE CrearFuncion@1100253001(pwID@1100253004 : Integer;pwDescripcion@1100253000 : Text[80];pwAutomatica@1100253001 : Boolean;pwEjecucion@1100253002 : Boolean;pwEmpresaReal@1100253003 : Integer;pwExplicacion@1100253005 : Text[250];pwMultiEmpresa@1100217000 : Boolean;pwFechaDefinicion@1100217002 : Date);
    VAR
      lrCompany@1100217001 : Record 2000000006;
    BEGIN
      // CrearFuncion

      lrCompany.FINDSET;
      REPEAT
        rMacros.CHANGECOMPANY(lrCompany.Name);
        IF NOT rMacros.GET(pwID) THEN BEGIN
          CLEAR(rMacros);
          rMacros.CHANGECOMPANY(lrCompany.Name);
          rMacros.ID                 := pwID;
          rMacros.Descripcion        := pwDescripcion;
          rMacros.Automatica         := pwAutomatica;
          rMacros."Ejecucion unica"  := pwEjecucion;
          rMacros."Empresa Real"     := pwEmpresaReal;
          rMacros.Explicacion        := pwExplicacion;
          rMacros."Multi Empresa"    := pwMultiEmpresa;
          rMacros."Fecha definicion" := pwFechaDefinicion; //+$001
          rMacros.INSERT(TRUE);
        END;
      UNTIL lrCompany.NEXT = 0;
    END;

    PROCEDURE EjecutarFuncion@1100253002(VAR prMacro@1100253000 : Record 7009767);
    VAR
      loccMacros@1100253001 : Codeunit 7009754;
      loccMacrosExc@1100217000 : Codeunit 7010145;
      loccCompany@1100217001 : Record 2000000006;
      loccMacro@1100217002 : Record 7009767;
      loccSerie@1100217003 : Record 7009921;
    BEGIN
      // EjecutarFuncion

      IF prMacro.Finalizada THEN
        EXIT;

      rDatInst.FINDFIRST;
      IF (prMacro."Empresa Real" <> 0) AND
         ((prMacro."Empresa Real" - 1) <> rDatInst."Empresa Real") THEN
        EXIT;

      rPar.FINDFIRST;
      rPar.TESTFIELD("Fecha creacion");
      IF (rPar."Fecha creacion" <= prMacro."Fecha definicion") OR
         (NOT prMacro.Automatica) THEN
      BEGIN
        IF NOT CONFIRM(Text003, FALSE, prMacro.Descripcion) THEN
          EXIT;

        CASE prMacro.ID OF
          1 : loccMacros.BorrarHistoricosOld;
          2 : loccMacros.Iniciar_empresa;
          3 : loccMacros.RellenaBonoFacturado;
          4 : loccMacros.CrearLineasFacturaInc;
          5 : loccMacros.RellenarDetalleEcoExc;
          6 : loccMacros.RellenarOrdenDependiente;
          7 : FORM.RUN(7009942);
          8 : loccMacros.DepurarInterfaseReservas;
          9 : loccMacros.CambiaTouroperadorReserva;
          10: loccMacros.BorrarBonoHotelPayment;
          11: loccMacros.RellenaNuevoCampo_LinCobroExc;
          12: loccMacros.RellenarContratosCNT;
          13: loccMacros.RellenarGuiaVentaContrato;
          14: loccMacros.VaciarParametros_OLD;
          15: loccMacros.VaciarObsolServicioExcursion;
          16: loccMacros.Vaciar_OldReservaExcursion;
          17: loccMacrosExc.ModFechaCambio;
          18: loccMacrosExc.ModFormaPago;
          19: loccMacros.VaciaFechaCambioCobro;
          20: loccMacrosExc.RecalculaExcursion;
          21: loccMacros.VaciarCamposLiquidaciones;
          22: loccMacros.RellenaPreDtoTTOODet;
          23: loccMacros.RellenaIDTarifaExc;
          24: loccMacrosExc.AnulaTicketLiquidado;
          25: loccMacrosExc.RetrocedeLiquidacion;
          26: loccMacrosExc.RecalculaComisionGuiaVenta;
          27: loccMacrosExc.RetrocedeReembolso;
          28: loccMacrosExc.ModTouroperador;
          29: loccMacros.RellenaFechaVentaCobro;
          30: loccMacrosExc.RellenarParametroDivisa;
          31: loccMacrosExc.ModFechaExcursion;
          32: loccMacrosExc.MarcarLiquidacionPrefacturada;
          33: loccMacrosExc.ModExcursionReserva;
          34: loccMacrosExc.RellenaDetalleEconomico;
          35: loccMacrosExc.ModHotel;
          36: loccMacrosExc.RellenaReembolsadoCobro;
          37: CODEUNIT.RUN(78625);
          38: loccMacrosExc.RellenaReservaCredito;
          39: loccMacros.VaciarCamposDLExcursiones;
          40: loccMacros.RellenaTipoPagoCobro;
          41: loccMacros.VaciarMaestrodeClaves;
          42: loccMacrosExc.VaciarElementoTransportExc;
          43: loccMacrosExc.RecalculaComisionTouroperador;
          44: loccMacros.CampoBDContabilidad;
          45: loccMacros.RellenarTransferPrivadoCoste;
          46: loccMacros.VaciarTablasEBB;
          47: loccMacros.EnviarConfirmacionTouroperador;
          48: loccMacros.NuevoTransferPrivado;
          49: loccMacros.RellenaPrecioPersonaTransfer;
          50: loccMacros.RellenaOrigenPrecioTransfer;
          51: loccMacros.RellenaOrigenCITransfer;
          52: loccMacrosExc.RellenaVentaLibre;
          53: loccSerie.CrearSeries;
          54: loccMacrosExc.RellenaImporteBaseCostes;
          55: loccMacros.RellenarTipoCambioTransfer;
          56: loccMacros.RellenaTipoServicioTransportis;
          57: loccMacros.RellenaTipoServicioTransfer;
          58: loccMacrosExc.RellenaInvitadosCompra;
          59: REPORT.RUNMODAL(510);
          60: loccMacros.RellenaDatetimeAcumulado;
          61: loccMacros.NuevoCodigoHotel;
          62: loccMacros.NuevoCodigoExcursion;
          63: loccMacros.DelegacionZonasTransfer;
          64: loccMacros.FusionaContratosGuiaVenta;
          65: loccMacros.RellenarCtaCorporativa;
          66: loccMacros.RellenaVueloAcumulados;
          67: loccMacrosExc.MarcarVoucherPrinted;
        END;
      END;

      IF prMacro."Multi Empresa" THEN
      BEGIN
        loccCompany.RESET;
        loccCompany.FINDSET;
        REPEAT
          loccMacro.CHANGECOMPANY(loccCompany.Name);
          loccMacro.GET(prMacro.ID);

          loccMacro.VALIDATE(Ejecutada, TRUE);
          loccMacro."Ultima ejecucion"  := CURRENTDATETIME;
          loccMacro."Usuario ejecucion" := USERID;
          loccMacro.MODIFY;
        UNTIL loccCompany.NEXT = 0;
      END
      ELSE
      BEGIN
        prMacro.VALIDATE(Ejecutada, TRUE);
        prMacro."Ultima ejecucion"  := CURRENTDATETIME;
        prMacro."Usuario ejecucion" := USERID;
        prMacro.MODIFY;
      END;

      COMMIT;
      MESSAGE(Text004);
    END;

    PROCEDURE EjecutarFuncionesAutomaticas@1100253005();
    VAR
      locrMacros@1100253000 : Record 7009767;
    BEGIN
      // EjecutarFuncionesAutomaticas

      locrMacros.RESET;
      locrMacros.SETRANGE(Automatica, TRUE);
      locrMacros.SETRANGE(Finalizada, FALSE);
      IF locrMacros.FINDSET THEN
      BEGIN
        REPEAT
          EjecutarFuncion(locrMacros);
        UNTIL locrMacros.NEXT = 0;
      END;
    END;

    BEGIN
    {
      //. Empresa Real
      //. 0 = Todas
      //. 1 = GOC
      //. 2 = CNT

      $001 AJS 15022014 Agrego un campo Fecha definicion para rellenar el momento en que se creo cada macro

      $002 AJS 24092014 Cancelo la Macro 31 porque podia provocar demasiados problemas

      $003 ARM 24112014 CNT-OC-14052 Llamada  a la funci¢n para rellenar la tabla de funciones autom†ticas

      $004 ARM 24112014 CNT-OC-14055 Rellenar campos de invitados compra

      $005 AJS 09122014 Llamar al report estandar de vaciado del log de cambios
    }
    END.
  }
}
