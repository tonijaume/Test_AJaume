OBJECT Codeunit 8610 Questionnaire Management
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVW16.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=The value of key field %1 has not been filled in for Questionnaire %2.;ESP=El valor del campo de clave %1 no se ha cumplimentado para el cuestionario %2.';
      QuestionnaireXML@1004 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60";
      XlApp@1013 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00024500-0000-0000-C000-000000000046}:Unknown Automation Server.Application";
      XlBook@1012 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";
      XlSheet@1011 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020820-0000-0000-C000-000000000046}:Unknown Automation Server.Worksheet";
      Window@1003 : Dialog;
      TotalNoOfQuestions@1002 : Integer;
      MigratedQuestions@1001 : Integer;
      Text001@1008 : TextConst 'ENU=Exporting Questionnaire...\;ESP=Exportando cuestionario...\';
      Text002@1009 : TextConst 'ENU=Importing Questionnaire...\;ESP=Importando cuestionario...\';
      Text003@1007 : TextConst 'ENU=Question Area #1######################\;ESP=µrea preguntas#1######################\';
      Text004@1006 : TextConst 'ENU=@3################################;ESP=@3################################';
      Text005@1010 : TextConst 'ENU=Could not create XML Schema.;ESP=No se pudo crear el esquema XML.';
      Text006@1015 : TextConst 'ENU=Questionnaire has been imported successfully.;ESP=El cuestionario se ha importado correctamente.';
      Text019@1017 : TextConst 'ENU=Could not create Excel instance.;ESP=No se pudo crear una instancia en Excel.';
      Text020@1014 : TextConst 'ENU=Excel does not contain XML Schema.;ESP=Excel no contiene un esquema XML.';
      Text021@1016 : TextConst 'ENU=%1 value ''%2'' does not exist.;ESP=El valor de %1 ''%2'' no existe.';
      Text022@1005 : TextConst 'ENU=Creating Excel Worksheet...\;ESP=Creando hoja de Excel...\';
      ExportToExcel@1018 : Boolean;
      Text023@1019 : TextConst 'ENU=Selected file %1 is not a valid Setup Questionnaire XML.;ESP=El archivo seleccionado %1 no es un cuestionario configuraci¢n XML v lido.';
      Text024@1020 : TextConst 'ENU=Download;ESP=Descargar';
      Text025@1021 : TextConst 'ENU=*.*|*.*;ESP=*.*|*.*';
      Text026@1022 : TextConst 'ENU=Default;ESP=Gen‚rico';
      "3TierMngt"@1023 : Codeunit 419;

    PROCEDURE UpdateQuestions@1(QuestionArea@1000 : Record 8611);
    VAR
      Question@1002 : Record 8612;
      MigrationMgt@1001 : Codeunit 8611;
      RecRef@1004 : RecordRef;
      Field@1003 : FieldRef;
      NextQuestionNo@1007 : Integer;
      NoOfFields@1005 : Integer;
    BEGIN
      IF QuestionArea.TableID = 0 THEN
        EXIT;

      Question.SETRANGE("Questionnaire Code",QuestionArea."Questionnaire Code");
      Question.SETRANGE("Question Area Code",QuestionArea.Code);
      IF Question.FIND('+') THEN
        NextQuestionNo := Question."No." + 1
      ELSE
        NextQuestionNo := 1;

      RecRef.OPEN(QuestionArea.TableID);
      FOR NoOfFields := 2 TO RecRef.FIELDCOUNT DO BEGIN
        Field := RecRef.FIELDINDEX(NoOfFields);
        IF MigrationMgt.IsNormalField(Field) THEN BEGIN
          CLEAR(Question);
          Question."Questionnaire Code" := QuestionArea."Questionnaire Code";
          Question."Question Area Code" := QuestionArea.Code;
          Question."No." := NextQuestionNo;
          Question.TableID := QuestionArea.TableID;
          Question.FieldID := Field.NUMBER;
          IF NOT QuestionExist(Question) THEN BEGIN
            UpdateQuestion(Question);
            Question."Answer Option" := BuildAnswerOption(QuestionArea.TableID,Field.NUMBER);
            Question.INSERT;
            NextQuestionNo := NextQuestionNo + 1;
          END;
        END;
      END;
    END;

    PROCEDURE UpdateQuestion@2(VAR QuestionLine@1000 : Record 8612);
    VAR
      RecRef@1002 : RecordRef;
      Field@1003 : FieldRef;
    BEGIN
      WITH QuestionLine DO BEGIN
        IF Question <> '' THEN
          EXIT;
        IF TableID = 0 THEN
          EXIT;
        RecRef.OPEN(TableID);
        Field := RecRef.FIELD(QuestionLine.FieldID);
        Question := Field.CAPTION + '?';
      END;
    END;

    PROCEDURE UpdateQuestionnaire@3(SetupQuestion@1000 : Record 8610);
    VAR
      QuestionArea@1001 : Record 8611;
    BEGIN
      IF SetupQuestion.Code = '' THEN
        EXIT;
      QuestionArea.SETRANGE("Questionnaire Code",SetupQuestion.Code);
      IF QuestionArea.FIND('-') THEN
        REPEAT
          UpdateQuestions(QuestionArea);
        UNTIL QuestionArea.NEXT = 0;
    END;

    PROCEDURE QuestionExist@12(Question@1000 : Record 8612) : Boolean;
    VAR
      Question2@1001 : Record 8612;
    BEGIN
      Question2.SETCURRENTKEY("Questionnaire Code","Question Area Code",FieldID);
      Question2.SETRANGE("Questionnaire Code",Question."Questionnaire Code");
      Question2.SETRANGE("Question Area Code",Question."Question Area Code");
      Question2.SETRANGE(FieldID,Question.FieldID);
      EXIT(Question2.FIND('-'))
    END;

    PROCEDURE BuildAnswerOption@8(TableID@1007 : Integer;FieldID@1006 : Integer) : Text[1024];
    VAR
      Field@1008 : Record 2000000041;
      RecRef@1001 : RecordRef;
      FieldRef@1000 : FieldRef;
      Option@1003 : Text[30];
      BooleanText@1002 : Text[30];
    BEGIN
      Field.SETRANGE(TableNo,TableID);
      Field.SETRANGE("No.",FieldID);

      IF NOT Field.FIND('-') THEN
        EXIT;

      CASE Field.Type OF
        Field.Type::Option:
          BEGIN
            RecRef.OPEN(Field.TableNo);
            FieldRef := RecRef.FIELD(Field."No.");
            EXIT(FieldRef.OPTIONCAPTION);
          END;
        Field.Type::Boolean:
          BEGIN
            BooleanText := FORMAT(TRUE) + ',' + FORMAT(FALSE);
            EXIT(BooleanText)
          END;
        ELSE
          EXIT(FORMAT(Field.Type));
      END;
    END;

    PROCEDURE ApplyAnswers@1000000000(SetupQuest@1000000000 : Record 8610);
    VAR
      QuestArea@1000000001 : Record 8611;
    BEGIN
      QuestArea.SETRANGE("Questionnaire Code",SetupQuest.Code);
      IF QuestArea.FIND('-') THEN
        REPEAT
          ApplyAnswer(QuestArea);
        UNTIL QuestArea.NEXT = 0;
    END;

    PROCEDURE ApplyAnswer@7(QuestionArea@1001 : Record 8611);
    VAR
      RecRef@1000 : RecordRef;
    BEGIN
      IF QuestionArea.TableID = 0 THEN
        EXIT;

      RecRef.OPEN(QuestionArea.TableID);
      RecRef.INIT;

      InsertRecordWithKeyFields(RecRef,QuestionArea);
      ModifyRecordWithOtherFields(RecRef,QuestionArea);
    END;

    LOCAL PROCEDURE InsertRecordWithKeyFields@40(VAR RecRef@1000 : RecordRef;QuestionArea@1002 : Record 8611);
    VAR
      QuestionLine@1001 : Record 8612;
      MigrationMgt@1007 : Codeunit 8611;
      RecRef1@1006 : RecordRef;
      KeyRef@1003 : KeyRef;
      FieldRef@1004 : FieldRef;
      KeyFieldCount@1005 : Integer;
    BEGIN
      QuestionLine.SETRANGE("Questionnaire Code",QuestionArea."Questionnaire Code");
      QuestionLine.SETRANGE("Question Area Code",QuestionArea.Code);

      KeyRef := RecRef.KEYINDEX(1);
      FOR KeyFieldCount := 1 TO KeyRef.FIELDCOUNT DO BEGIN
        FieldRef := KeyRef.FIELDINDEX(KeyFieldCount);
        QuestionLine.SETRANGE(FieldID,FieldRef.NUMBER);
        IF QuestionLine.FIND('-') THEN BEGIN
          MigrationMgt.ValidateFieldValue(RecRef,FieldRef,QuestionLine.Answer);
        END ELSE
          IF KeyRef.FIELDCOUNT <> 1 THEN
            ERROR(STRSUBSTNO(Text000,FieldRef.NAME,QuestionArea.Code));
      END;

      RecRef1 := RecRef.DUPLICATE;

      IF RecRef1.FIND('=') THEN BEGIN
        RecRef := RecRef1;
        EXIT
      END;

      RecRef.INSERT(TRUE);
    END;

    LOCAL PROCEDURE ModifyRecordWithOtherFields@39(VAR RecRef@1004 : RecordRef;QuestionArea@1002 : Record 8611);
    VAR
      QuestionLine@1003 : Record 8612;
      MigrationMgt@1005 : Codeunit 8611;
      FieldRef@1001 : FieldRef;
    BEGIN
      QuestionLine.SETRANGE("Questionnaire Code",QuestionArea."Questionnaire Code");
      QuestionLine.SETRANGE("Question Area Code",QuestionArea.Code);

      IF QuestionLine.FIND('-') THEN
        REPEAT
          IF QuestionLine.Answer <> '' THEN BEGIN
            FieldRef := RecRef.FIELD(QuestionLine.FieldID);
            MigrationMgt.ValidateFieldValue(RecRef,FieldRef,QuestionLine.Answer);
            IF NOT MigrationMgt.ValidateTableRelation(FieldRef) THEN
              ERROR(Text021,FieldRef.CAPTION,FORMAT(FieldRef.VALUE));
          END;
        UNTIL QuestionLine.NEXT = 0;
      RecRef.MODIFY(TRUE);
    END;

    PROCEDURE ExportQuestionnaireAsXML@4(XMLDataFile@1000 : Text[1024];VAR Questionnaire@1001 : Record 8610) : Boolean;
    VAR
      QuestionArea@1002 : Record 8611;
      DocumentElement@1004 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      FieldNode@1003 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      RecRef@1005 : RecordRef;
      RBAutoMgt@1008 : Codeunit 419;
      ToFile@1007 : Text[1024];
      FileName@1006 : Text[1024];
    BEGIN
      IF ISCLEAR(QuestionnaireXML) THEN
        CREATE(QuestionnaireXML);
      QuestionnaireXML.loadXML(
        '<?xml version="1.0" encoding="UTF-16" standalone="yes"?><Questionnaire></Questionnaire>');
      DocumentElement := QuestionnaireXML.documentElement;

      RecRef.GETTABLE(Questionnaire);
      CreateFieldSubtree(RecRef,DocumentElement);

      QuestionArea.SETRANGE("Questionnaire Code",Questionnaire.Code);
      InitialiseProgressWindow(QuestionArea.COUNTAPPROX,Text001);

      IF QuestionArea.FIND('-') THEN
        REPEAT
          UpdateProgressWindow(QuestionArea.Code);
          CreateQuestionNodes(QuestionArea);
        UNTIL QuestionArea.NEXT = 0;

      IF NOT ExportToExcel THEN BEGIN
        FileName := XMLDataFile + '.xml';
        ToFile := Text026 + '.xml';

        IF ISSERVICETIER THEN BEGIN
          FileName := RBAutoMgt.EnvironFileName('','xml');
          QuestionnaireXML.save(FileName);
          DOWNLOAD(FileName,Text024,'',Text025,ToFile);
        END ELSE
          QuestionnaireXML.save(FileName);
      END ELSE BEGIN
        FileName := XMLDataFile;
        QuestionnaireXML.save(FileName);
      END;

      Window.CLOSE;
      EXIT(TRUE);
    END;

    PROCEDURE ImportQuestionnaireAsXML@5(XMLDataFile@1000 : Text[1024]) : Boolean;
    VAR
      SetupQuestionnaire@1003 : Record 8610;
      QuestionArea@1007 : Record 8611;
      Question@1011 : Record 8612;
      QuestionAreaNodes@1002 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF82-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNodeList";
      QuestionAreaNode@1004 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      QuestionNodes@1001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF82-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNodeList";
      QuestionNode@1005 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      FieldNode@1006 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      QuestionnaireNode@1008 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      NodeCount@1009 : Integer;
      NodeCount1@1010 : Integer;
    BEGIN
      IF ISCLEAR(QuestionnaireXML) THEN
        CREATE(QuestionnaireXML,TRUE,TRUE);

      IF NOT QuestionnaireXML.load(XMLDataFile) THEN
        EXIT;

      QuestionnaireNode := QuestionnaireXML.selectSingleNode('//Questionnaire');

      IF ISCLEAR(QuestionnaireNode) THEN
        ERROR(Text023,XMLDataFile);

      UpdateInsertQuestionnaireField(SetupQuestionnaire,QuestionnaireNode);

      QuestionAreaNodes := QuestionnaireNode.selectNodes('child::*[position() >= 3]');

      InitialiseProgressWindow(QuestionAreaNodes.length,Text002);

      FOR NodeCount := 0 TO (QuestionAreaNodes.length - 1) DO BEGIN
        QuestionAreaNode := QuestionAreaNodes.item(NodeCount);
        UpdateProgressWindow(GetNodeValue(QuestionAreaNode,'Code'));
        QuestionArea."Questionnaire Code" := SetupQuestionnaire.Code;
        UpdateInsertQuestionAreaFields(QuestionArea,QuestionAreaNode);

        QuestionNodes := QuestionAreaNode.selectNodes('Question');
        FOR NodeCount1 := 0 TO (QuestionNodes.length - 1) DO BEGIN
          Question.INIT;
          Question."Questionnaire Code" := QuestionArea."Questionnaire Code";
          Question."Question Area Code" := QuestionArea.Code;
          Question.TableID := QuestionArea.TableID;
          UpdateInsertQuestionFields(Question,QuestionNodes.item(NodeCount1))
        END;
      END;

      Window.CLOSE;
      EXIT(TRUE);
    END;

    PROCEDURE ExportQuestionnaireToExcel@9(ExcelFile@1001 : Text[1024];VAR Questionnaire@1000 : Record 8610) : Boolean;
    VAR
      Questionnaire1@1019 : Record 8610;
      QuestionArea@1018 : Record 8611;
      Question@1002 : Record 8612;
      SetupQuestionnaireSchema@1017 : XMLport 8611;
      OStream@1016 : OutStream;
      TempFile@1021 : File;
      TempSchemaFile@1015 : File;
      TempSetupQuestionnaireFile@1014 : File;
      TempSetupQuestionnaireFileName@1013 : Text[1024];
      TempSetupQuestionnaireFNCL@1020 : Text[1024];
      TempSchemaFileName@1022 : Text[1024];
      TempSchemaFileNameCL@1012 : Text[1024];
      XMLMap@1011 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";
      XMLMaps@1010 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{0002447C-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMaps";
      ListObjects@1009 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00024470-0000-0000-C000-000000000046}:Unknown Automation Server.ListObjects";
      ListObject@1008 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00024471-0000-0000-C000-000000000046}:Unknown Automation Server.ListObject";
      ListColumns@1007 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00024472-0000-0000-C000-000000000046}:Unknown Automation Server.ListColumns";
      ListColumn@1006 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00024473-0000-0000-C000-000000000046}:Unknown Automation Server.ListColumn";
      Range@1005 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";
      XPath@1004 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{0002447E-0000-0000-C000-000000000046}:Unknown Automation Server.XPath";
      i@1003 : Integer;
    BEGIN
      Questionnaire1.SETRANGE(Code,Questionnaire.Code);
      TempSchemaFile.CREATETEMPFILE;
      TempSchemaFileName := TempSchemaFile.NAME + '.xsd';
      TempSchemaFile.CLOSE;

      TempSchemaFile.CREATE(TempSchemaFileName);
      TempSchemaFile.CREATEOUTSTREAM(OStream);
      SetupQuestionnaireSchema.SETDESTINATION(OStream);
      SetupQuestionnaireSchema.SETTABLEVIEW(Questionnaire1);
      IF NOT SetupQuestionnaireSchema.EXPORT THEN
        ERROR(Text005);

      TempSchemaFile.CLOSE;

      TempSetupQuestionnaireFile.CREATETEMPFILE;
      TempSetupQuestionnaireFileName := TempSetupQuestionnaireFile.NAME + '.xml';
      TempSetupQuestionnaireFile.CLOSE;

      ExportToExcel := TRUE;
      ExportQuestionnaireAsXML(TempSetupQuestionnaireFileName,Questionnaire);
      ExportToExcel := FALSE;

      IF ISSERVICETIER THEN BEGIN
        TempSetupQuestionnaireFNCL := "3TierMngt".DownloadTempFile(TempSetupQuestionnaireFileName);
        TempSchemaFileNameCL := "3TierMngt".DownloadTempFile(TempSchemaFileName);
      END ELSE BEGIN
        TempSetupQuestionnaireFNCL := TempSetupQuestionnaireFileName;
        TempSchemaFileNameCL := TempSchemaFileName;
      END;

      CreateBook;
      XlApp.DisplayAlerts(FALSE);

      XlBook.XmlMaps.Add(TempSchemaFileNameCL);

      XMLMap := XlBook.XmlMaps.Item(1);

      XlSheet := XlBook.Worksheets.Add;
      IF Questionnaire.Description <> '' THEN
        XlSheet.Name := Questionnaire.Description
      ELSE
        XlSheet.Name := Questionnaire.Code;

      Range := XlSheet.Range('A1');
      Range.Value := Questionnaire.Code;
      Range.XPath.SetValue(XMLMap,'/Questionnaire/' + GetElementName(Questionnaire.FIELDNAME(Code)) );

      Range := XlSheet.Range('B1');
      Range.Value := Questionnaire.Description;
      Range.XPath.SetValue(XMLMap,'/Questionnaire/' + GetElementName(Questionnaire.FIELDNAME(Description)) );

      QuestionArea.SETRANGE("Questionnaire Code",Questionnaire.Code);
      InitialiseProgressWindow(QuestionArea.COUNT,Text022);
      i := 0;
      IF QuestionArea.FIND('-') THEN BEGIN
        REPEAT
          UpdateProgressWindow(QuestionArea.Code);
          Question.SETRANGE("Questionnaire Code",QuestionArea."Questionnaire Code");
          Question.SETRANGE("Question Area Code",QuestionArea.Code);

          XlSheet := XlBook.Worksheets.Add;
          IF QuestionArea.Description <> '' THEN
            XlSheet.Name := QuestionArea.Description
          ELSE
            IF QuestionArea.Code <> QuestionArea."Questionnaire Code" THEN
              XlSheet.Name := QuestionArea.Code
            ELSE
              XlSheet.Name := QuestionArea."Questionnaire Code"+' '+QuestionArea.Code;

          Range := XlSheet.Range('A1');
          Range.Value := QuestionArea.Code;
          Range.XPath.SetValue(XMLMap,'/Questionnaire/' + GetElementName(QuestionArea.Code) + 'Questions/'
            + GetElementName(QuestionArea.FIELDNAME(Code)) );

          Range := XlSheet.Range('B1');
          Range.Value := QuestionArea.Description;
          Range.XPath.SetValue(XMLMap,'/Questionnaire/' + GetElementName(QuestionArea.Code) + 'Questions/'
            + GetElementName(QuestionArea.FIELDNAME(Description)) );

          Range := XlSheet.Range('C1');
          Range.Value := QuestionArea.TableID;
          Range.XPath.SetValue(XMLMap,'/Questionnaire/' + GetElementName(QuestionArea.Code) + 'Questions/'
            + GetElementName(QuestionArea.FIELDNAME(TableID)) );

          IF Question.FIND('-') THEN BEGIN
            Range := XlSheet.Range('A2',FORMAT(GetXLColumnID(7)) + '2');
            Range.Select;

            ListObject := XlSheet.ListObjects.Add;
            ListColumns := ListObject.ListColumns;

            ListColumn := ListColumns.Item(1);
            ListColumn.Name := Question.FIELDCAPTION("No.");
            ListColumn.XPath.SetValue(
              XMLMap,'/Questionnaire/' + (GetElementName(QuestionArea.Code) + 'Questions/') + 'Question/' +
              GetElementName(Question.FIELDNAME("No.")));

            ListColumn := ListColumns.Item(2);
            ListColumn.Name := Question.FIELDCAPTION(Question);
            ListColumn.XPath.SetValue(
              XMLMap,'/Questionnaire/' + (GetElementName(QuestionArea.Code) + 'Questions/') + 'Question/' +
              GetElementName(Question.FIELDNAME(Question)));

            ListColumn := ListColumns.Item(3);
            ListColumn.Name := Question.FIELDCAPTION("Answer Option");
            ListColumn.XPath.SetValue(
              XMLMap,'/Questionnaire/' + (GetElementName(QuestionArea.Code) + 'Questions/') + 'Question/' +
              GetElementName(Question.FIELDNAME("Answer Option")));

            ListColumn := ListColumns.Item(4);
            ListColumn.Name := Question.FIELDCAPTION(Answer);
            ListColumn.XPath.SetValue(
              XMLMap,'/Questionnaire/' + (GetElementName(QuestionArea.Code) + 'Questions/') + 'Question/' +
              GetElementName(Question.FIELDNAME(Answer)));

            ListColumn := ListColumns.Item(5);
            ListColumn.Name := Question.FIELDCAPTION(Comment);
            ListColumn.XPath.SetValue(
              XMLMap,'/Questionnaire/' + (GetElementName(QuestionArea.Code) + 'Questions/') + 'Question/' +
              GetElementName(Question.FIELDNAME(Comment)));

            ListColumn := ListColumns.Item(6);
            ListColumn.Name := Question.FIELDCAPTION(FieldID);
            ListColumn.XPath.SetValue(
              XMLMap,'/Questionnaire/' + (GetElementName(QuestionArea.Code) + 'Questions/') + 'Question/' +
              GetElementName(Question.FIELDNAME(FieldID)));

            ListColumn := ListColumns.Item(7);
            ListColumn.Name := Question.FIELDCAPTION("Question Origin");
            ListColumn.XPath.SetValue(
              XMLMap,'/Questionnaire/' + (GetElementName(QuestionArea.Code) + 'Questions/') + 'Question/' +
              GetElementName(Question.FIELDNAME("Question Origin")));

            XMLMap.Import(TempSetupQuestionnaireFNCL,TRUE);
          END;

          XlSheet.Columns.Range('F:F').EntireColumn.Hidden := TRUE;
        UNTIL QuestionArea.NEXT = 0;
      END;

      XlBook._SaveAs(ExcelFile);

      CLEAR(XlSheet);
      XlBook.Close(FALSE);
      CLEAR(XlBook);
      XlApp.Quit();
      CLEAR(XlApp);

      FILE.ERASE(TempSchemaFileName);
      FILE.ERASE(TempSetupQuestionnaireFileName);

      Window.CLOSE;

      EXIT(TRUE);
    END;

    PROCEDURE ImportQuestionnaireFromExcel@24(XLSDataFile@1000 : Text[1024]);
    VAR
      TmpXmlFile@1005 : File;
      XmlMaps@1002 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{0002447C-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMaps";
      XmlMap@1003 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";
      XMLDataFileClient@1004 : Text[1024];
    BEGIN
      IF ISCLEAR(XlApp) THEN
        IF NOT CREATE(XlApp,TRUE,TRUE) THEN
          ERROR(Text019);

      XlApp.Workbooks._Open(XLSDataFile);
      XlBook := XlApp.ActiveWorkbook;

      XMLDataFileClient := "3TierMngt".ClientTempFileName(Text026,'.xml');

      XmlMaps := XlBook.XmlMaps;
      IF XmlMaps.Count <> 0 THEN BEGIN
        XmlMap := XmlMaps.Item(1);
        XmlMap.Export(XMLDataFileClient,TRUE);
        IF ImportQuestionnaireAsXML(XMLDataFileClient) THEN
            MESSAGE(Text006);
      END ELSE
        ERROR(Text020);

      XlBook.Close(FALSE);
      CLEAR(XlBook);
      XlApp.Quit();
      CLEAR(XlApp);
    END;

    LOCAL PROCEDURE InitialiseProgressWindow@21(Count@1000 : Integer;MigrationText@1001 : Text[1024]);
    BEGIN
      MigratedQuestions := 0;
      TotalNoOfQuestions := Count;

      Window.OPEN(MigrationText + Text003 + Text004);
    END;

    LOCAL PROCEDURE UpdateProgressWindow@19(TableCaption@1000 : Text[1024]);
    BEGIN
      MigratedQuestions := MigratedQuestions + 1;

      Window.UPDATE(1,TableCaption);
      Window.UPDATE(3,ROUND(MigratedQuestions / TotalNoOfQuestions * 10000,1));
    END;

    PROCEDURE CreateQuestionNodes@10(QuestionArea@1000 : Record 8611);
    VAR
      Field@1010 : Record 2000000041;
      Question@1001 : Record 8612;
      DocumentElement@1005 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      QuestionAreaNode@1004 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      FieldNode@1006 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      QuestionNode@1002 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      RecRef@1012 : RecordRef;
      QuestionRef@1007 : RecordRef;
      QuestionFieldRef@1008 : FieldRef;
      i@1009 : Integer;
      OptionInt@1011 : Integer;
    BEGIN
      DocumentElement := QuestionnaireXML.documentElement;
      QuestionAreaNode := QuestionnaireXML.createElement(GetElementName(QuestionArea.Code + 'Questions'));
      DocumentElement.appendChild(QuestionAreaNode);

      RecRef.GETTABLE(QuestionArea);
      CreateFieldSubtree(RecRef,QuestionAreaNode);

      Question.SETRANGE("Questionnaire Code",QuestionArea."Questionnaire Code");
      Question.SETRANGE("Question Area Code",QuestionArea.Code);
      IF Question.FIND('-') THEN
        REPEAT
          QuestionNode := QuestionnaireXML.createElement(GetElementName(Question.TABLENAME));
          QuestionAreaNode.appendChild(QuestionNode);

          QuestionRef.GETTABLE(Question);
          CreateFieldSubtree(QuestionRef,QuestionNode);
        UNTIL Question.NEXT = 0;
    END;

    PROCEDURE GetElementName@22(NameIn@1000 : Text[250]) : Text[250];
    BEGIN
      NameIn := DELCHR(NameIn,'=','ï''`');
      NameIn := DELCHR(CONVERTSTR(NameIn,'<>,./\+-&()%','            '),'=',' ');
      NameIn := DELCHR(NameIn,'=',' ');
      EXIT(NameIn);
    END;

    PROCEDURE GetOptionValue@17(Position@1000 : Integer;OptionString@1001 : Text[250]) : Text[250];
    VAR
      Option@1002 : Text[50];
      CommaPos@1003 : Integer;
    BEGIN
      IF Position <= 0 THEN
        EXIT(Option);

      WHILE (Position >= 1) DO BEGIN
        CommaPos := STRPOS(OptionString,',');
        IF (CommaPos - 1 > 0) THEN BEGIN
          Option := COPYSTR(OptionString,1,CommaPos - 1);
          OptionString := DELSTR(OptionString,1,CommaPos);
        END ELSE BEGIN
          IF (CommaPos = 1) AND (Position = 1) THEN
            EXIT('');
          IF (CommaPos = 1) THEN
            OptionString := DELSTR(OptionString,1,CommaPos);
          Option := OptionString;
        END;
        Position := Position - 1;
      END;

      EXIT(Option);
    END;

    PROCEDURE CreateFieldSubtree@6(VAR RecRef@1001 : RecordRef;VAR Node@1000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode");
    VAR
      Field@1006 : Record 2000000041;
      FieldRef@1003 : FieldRef;
      XmlDom@1004 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60";
      FieldNode@1005 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      i@1002 : Integer;
      OptionInt@1007 : Integer;
    BEGIN
      CREATE(XmlDom);
      FOR i := 1 TO RecRef.FIELDCOUNT DO BEGIN
        FieldRef := RecRef.FIELDINDEX(i);
        IF NOT FieldException(RecRef.NUMBER,FieldRef.NUMBER) THEN BEGIN
          FieldNode := XmlDom.createElement(GetElementName(FieldRef.NAME));

          IF Field.GET(RecRef.NUMBER,FieldRef.NUMBER) THEN BEGIN
            IF Field.Class = Field.Class::FlowField THEN
              FieldRef.CALCFIELD;
            FieldNode.text := FORMAT(FieldRef.VALUE);
            IF Field.Type = Field.Type::Option THEN BEGIN
              OptionInt := FieldRef.VALUE;
              FieldNode.text := FORMAT(GetOptionValue(OptionInt+1,FieldRef.OPTIONCAPTION));
            END;
            AddAttribute(FieldNode,'fieldlength',FORMAT(Field.Len));
          END;
          Node.appendChild(FieldNode);
        END;
      END;
    END;

    PROCEDURE GetNodeValue@26(VAR RecordNode@1000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";FieldNodeName@1001 : Text[250]) : Text[1024];
    VAR
      FieldNode@1002 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
    BEGIN
      FieldNode := RecordNode.selectSingleNode(FieldNodeName);
      EXIT(FieldNode.text);
    END;

    PROCEDURE UpdateInsertQuestionnaireField@18(VAR Questionnaire@1011 : Record 8610;RecordNode@1001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode") : Boolean;
    VAR
      Question@1012 : Record 8612;
      Field@1010 : Record 2000000041;
      RecRef@1000 : RecordRef;
      RecRef1@1009 : RecordRef;
      KeyRef@1007 : KeyRef;
      FieldRef@1006 : FieldRef;
      KeyFieldCount@1005 : Integer;
    BEGIN
      RecRef.OPEN(DATABASE::"Setup Questionnaire");

      KeyRef := RecRef.KEYINDEX(1);
      FOR KeyFieldCount := 1 TO KeyRef.FIELDCOUNT DO BEGIN
        FieldRef := KeyRef.FIELDINDEX(KeyFieldCount);
        IF FieldNodeExists(RecordNode,GetElementName(FieldRef.NAME)) THEN
          ValidateFieldValue(RecRef,FieldRef,GetNodeValue(RecordNode,GetElementName(FieldRef.NAME)));
      END;

      RecRef1 := RecRef.DUPLICATE;
      IF NOT RecRef1.FIND('=') THEN
        RecRef.INSERT(TRUE);

      Field.SETRANGE(TableNo,RecRef.NUMBER);
      IF Field.FIND('-') THEN
        REPEAT
          FieldRef := RecRef.FIELD(Field."No.");
          IF FieldNodeExists(RecordNode,GetElementName(FieldRef.NAME)) THEN
            ValidateFieldValue(RecRef,FieldRef,GetNodeValue(RecordNode,GetElementName(FieldRef.NAME)))
        UNTIL Field.NEXT = 0;

      RecRef.MODIFY(TRUE);

      RecRef.SETTABLE(Questionnaire);
    END;

    PROCEDURE UpdateInsertQuestionAreaFields@25(VAR QuestionArea@1002 : Record 8611;RecordNode@1001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode") : Boolean;
    VAR
      Field@1010 : Record 2000000041;
      NodeCount@1003 : Integer;
      RecRef@1000 : RecordRef;
      RecRef1@1009 : RecordRef;
      KeyRef@1007 : KeyRef;
      FieldRef@1006 : FieldRef;
      KeyFieldCount@1005 : Integer;
    BEGIN
      RecRef.GETTABLE(QuestionArea);

      KeyRef := RecRef.KEYINDEX(1);
      FOR KeyFieldCount := 1 TO KeyRef.FIELDCOUNT DO BEGIN
        FieldRef := KeyRef.FIELDINDEX(KeyFieldCount);
        IF FieldNodeExists(RecordNode,GetElementName(FieldRef.NAME)) THEN
          ValidateFieldValue(RecRef,FieldRef,GetNodeValue(RecordNode,GetElementName(FieldRef.NAME)));
      END;

      RecRef1 := RecRef.DUPLICATE;
      IF NOT RecRef1.FIND('=') THEN
        RecRef.INSERT(TRUE);

      Field.SETRANGE(TableNo,RecRef.NUMBER);
      IF Field.FIND('-') THEN
        REPEAT
          FieldRef := RecRef.FIELD(Field."No.");
          IF FieldNodeExists(RecordNode,GetElementName(FieldRef.NAME)) THEN
            ValidateFieldValue(RecRef,FieldRef,GetNodeValue(RecordNode,GetElementName(FieldRef.NAME)))
        UNTIL Field.NEXT = 0;

      RecRef.MODIFY(TRUE);
      RecRef.SETTABLE(QuestionArea);
    END;

    PROCEDURE UpdateInsertQuestionFields@27(VAR Question@1011 : Record 8612;RecordNode@1001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode") : Boolean;
    VAR
      Field@1010 : Record 2000000041;
      RecRef@1000 : RecordRef;
      RecRef1@1009 : RecordRef;
      RelatedRecRef@1008 : RecordRef;
      KeyRef@1007 : KeyRef;
      FieldRef@1006 : FieldRef;
      KeyFieldCount@1005 : Integer;
      OptionInt@1013 : Integer;
      NodeCount@1002 : Integer;
    BEGIN
      RecRef.GETTABLE(Question);

      KeyRef := RecRef.KEYINDEX(1);
      FOR KeyFieldCount := 1 TO KeyRef.FIELDCOUNT DO BEGIN
        FieldRef := KeyRef.FIELDINDEX(KeyFieldCount);
        IF FieldNodeExists(RecordNode,GetElementName(FieldRef.NAME)) THEN
          ValidateFieldValue(RecRef,FieldRef,GetNodeValue(RecordNode,GetElementName(FieldRef.NAME)));
      END;

      IF (RecRef.NUMBER = DATABASE::"Question Area") THEN BEGIN

      END;

      RecRef1 := RecRef.DUPLICATE;
      IF NOT RecRef1.FIND('=') THEN
        RecRef.INSERT(TRUE);

      Field.SETRANGE(TableNo,RecRef.NUMBER);
      IF Field.FIND('-') THEN
        REPEAT
          FieldRef := RecRef.FIELD(Field."No.");
          IF FieldNodeExists(RecordNode,GetElementName(FieldRef.NAME)) THEN
            ValidateFieldValue(RecRef,FieldRef,GetNodeValue(RecordNode,GetElementName(FieldRef.NAME)))
        UNTIL Field.NEXT = 0;

      RecRef.MODIFY(TRUE);

      RecRef.SETTABLE(Question);

      Field.SETRANGE(TableNo,Question.TableID);
      Field.SETRANGE("No.",Question.FieldID);
      IF Field.FIND('-') THEN BEGIN
        IF (Field.Type = Field.Type::Option) THEN
          IF (Question.Answer <> '') THEN BEGIN
            GetOption(Question.Answer,Question."Answer Option",OptionInt);
            Question."Answer Option" := BuildAnswerOption(Question.TableID, Question.FieldID);
            Question.Answer := SelectString(OptionInt + 1,Question."Answer Option");
          END ELSE BEGIN
            Question.Answer := '';
            Question."Answer Option" := BuildAnswerOption(Question.TableID, Question.FieldID);
          END;

        Question.MODIFY;
      END;
    END;

    PROCEDURE FieldNodeExists@36(VAR RecordNode@1000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";FieldNodeName@1001 : Text[250]) : Boolean;
    VAR
      FieldNode@1002 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
    BEGIN
      FieldNode := RecordNode.selectSingleNode(FieldNodeName);

      IF NOT ISCLEAR(FieldNode) THEN
        EXIT(TRUE);
    END;

    PROCEDURE ValidateFieldValue@16(VAR RecRef@1015 : RecordRef;VAR FieldRef@1000 : FieldRef;Value@1001 : Text[1024]);
    VAR
      Field@1014 : Record 2000000041;
      OptionAsInteger@1002 : Integer;
    BEGIN
      Field.GET(RecRef.NUMBER,FieldRef.NUMBER);

      IF Field.Class <> Field.Class::Normal THEN
        EXIT;

      IF Field.Type <> Field.Type::Option THEN
        EVALUATE(FieldRef,Value)
      ELSE
        IF GetOption(Value,FieldRef.OPTIONCAPTION,OptionAsInteger) THEN
          FieldRef.VALUE := OptionAsInteger;

      IF NOT TestRelation(FieldRef) THEN
        FieldRef.VALIDATE;
    END;

    PROCEDURE GetOption@20(Value@1007 : Text[250];OptionString@1006 : Text[400];VAR OptionInteger@1002 : Integer) Valid : Boolean;
    VAR
      Option@1003 : Text[400];
      CommaPos@1004 : Integer;
      OptionPos@1000 : Integer;
      ValueInOptionString@1001 : Boolean;
    BEGIN
      IF Value = '' THEN
        EXIT;
      IF EVALUATE(OptionInteger,Value) THEN
        EXIT(TRUE);

      ValueInOptionString := FALSE;

      CommaPos := STRPOS(OptionString,',');

      WHILE NOT ValueInOptionString AND (CommaPos > 0) DO BEGIN
        IF STRPOS(OptionString,',') <> 0 THEN
          Option := COPYSTR(OptionString,1,STRPOS(OptionString,',')-1)
        ELSE
          Option := OptionString;
        IF Option = Value THEN
          ValueInOptionString := TRUE
        ELSE
          OptionPos := OptionPos + 1;
        OptionString := DELSTR(OptionString,1,CommaPos);
        CommaPos := STRPOS(OptionString,',');
      END;

      IF OptionString = Value THEN
        ValueInOptionString := TRUE;

      OptionInteger := OptionPos;
      EXIT(ValueInOptionString);
    END;

    PROCEDURE TestRelation@52(VAR FieldRef@1000 : FieldRef) : Boolean;
    VAR
      Field@1002 : Record 2000000041;
      RecRef@1001 : RecordRef;
    BEGIN
      RecRef := FieldRef.RECORD;
      IF Field.GET(RecRef.NUMBER,FieldRef.NUMBER) THEN
        EXIT(Field.RelationTableNo <> 0);
    END;

    LOCAL PROCEDURE CreateBook@1000000003();
    BEGIN
      IF ISCLEAR(XlApp) THEN
        IF NOT CREATE(XlApp,TRUE,TRUE) THEN
          ERROR(Text019);
      XlApp.Visible(FALSE);
      XlBook := XlApp.Workbooks.Add(-4167);
    END;

    PROCEDURE GetXLColumnID@14(ColumnNo@1003 : Integer) : Text[10];
    VAR
      ExcelBuf@1102601000 : Record 370;
    BEGIN
      ExcelBuf.VALIDATE("Column No.", ColumnNo);
      EXIT(ExcelBuf.xlColID);
    END;

    PROCEDURE FieldException@11(TableID@1000 : Integer;FieldID@1001 : Integer) : Boolean;
    VAR
      Questionnaire@1002 : Record 8610;
      QuestionArea@1004 : Record 8611;
      Question@1005 : Record 8612;
      ret@1003 : Boolean;
    BEGIN
      CASE TableID OF
        DATABASE::"Setup Questionnaire":
          EXIT(FALSE);
        DATABASE::"Question Area":
          EXIT(FieldID IN [QuestionArea.FIELDNO("Questionnaire Code"),QuestionArea.FIELDNO("Table Name")]);
        DATABASE::Question:
          EXIT(FieldID IN [Question.FIELDNO("Questionnaire Code"),Question.FIELDNO("Question Area Code"),Question.FIELDNO(TableID)]);
      END;
    END;

    PROCEDURE AddAttribute@23(VAR DOMNode@1020001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";Name@1020002 : Text[250];Value@1020003 : Text[250]);
    VAR
      TempAttribute@1020004 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
    BEGIN
      TempAttribute := DOMNode.ownerDocument.createAttribute(Name);
      IF Value <> '' THEN
        TempAttribute.nodeValue := Value;
      DOMNode.attributes.setNamedItem(TempAttribute);
      CLEAR(TempAttribute);
    END;

    PROCEDURE SelectString@28(Number@1000 : Integer;CommaString@1001 : Text[1024]) : Text[100];
    VAR
      pos@1002 : Integer;
    BEGIN
      IF CommaString = '' THEN
        EXIT('');

      IF STRPOS(CommaString,',') = 1 THEN
        CommaString := ' ' + CommaString;

      IF COPYSTR(CommaString,STRLEN(CommaString),1) = ',' THEN
        CommaString := CommaString + ' ';

      pos := STRPOS(CommaString,',,');
      IF pos > 0 THEN BEGIN
        CommaString := DELSTR(CommaString, pos, 2);
        CommaString := INSSTR(CommaString, ', ,', pos);
      END;

      EXIT(SELECTSTR(Number, CommaString));
    END;

    EVENT QuestionnaireXML@1004::ondataavailable@198();
    BEGIN
    END;

    EVENT QuestionnaireXML@1004::onreadystatechange@-609();
    BEGIN
    END;

    EVENT XlSheet@1011::SelectionChange@1543(Target@1000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT XlSheet@1011::BeforeDoubleClick@1537(Target@1001 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";VAR Cancel@1000 : Boolean);
    BEGIN
    END;

    EVENT XlSheet@1011::BeforeRightClick@1534(Target@1001 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";VAR Cancel@1000 : Boolean);
    BEGIN
    END;

    EVENT XlSheet@1011::Activate@304();
    BEGIN
    END;

    EVENT XlSheet@1011::Deactivate@1530();
    BEGIN
    END;

    EVENT XlSheet@1011::Calculate@279();
    BEGIN
    END;

    EVENT XlSheet@1011::Change@1545(Target@1000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT XlSheet@1011::FollowHyperlink@1470(Target@1000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00024431-0000-0000-C000-000000000046}:Unknown Automation Server.Hyperlink");
    BEGIN
    END;

    EVENT XlSheet@1011::PivotTableUpdate@2156(Target@1000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT XlBook@1012::Open@1923();
    BEGIN
    END;

    EVENT XlBook@1012::Activate@304();
    BEGIN
    END;

    EVENT XlBook@1012::Deactivate@1530();
    BEGIN
    END;

    EVENT XlBook@1012::BeforeClose@1546(VAR Cancel@1000 : Boolean);
    BEGIN
    END;

    EVENT XlBook@1012::BeforeSave@1547(SaveAsUI@1001 : Boolean;VAR Cancel@1000 : Boolean);
    BEGIN
    END;

    EVENT XlBook@1012::BeforePrint@1549(VAR Cancel@1000 : Boolean);
    BEGIN
    END;

    EVENT XlBook@1012::NewSheet@1550(Sh@1000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT XlBook@1012::AddinInstall@1552();
    BEGIN
    END;

    EVENT XlBook@1012::AddinUninstall@1553();
    BEGIN
    END;

    EVENT XlBook@1012::WindowResize@1554(Wn@1000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020893-0000-0000-C000-000000000046}:Unknown Automation Server.Window");
    BEGIN
    END;

    EVENT XlBook@1012::WindowActivate@1556(Wn@1000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020893-0000-0000-C000-000000000046}:Unknown Automation Server.Window");
    BEGIN
    END;

    EVENT XlBook@1012::WindowDeactivate@1557(Wn@1000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020893-0000-0000-C000-000000000046}:Unknown Automation Server.Window");
    BEGIN
    END;

    EVENT XlBook@1012::SheetSelectionChange@1558(Sh@1001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT XlBook@1012::SheetBeforeDoubleClick@1559(Sh@1002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1001 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";VAR Cancel@1000 : Boolean);
    BEGIN
    END;

    EVENT XlBook@1012::SheetBeforeRightClick@1560(Sh@1002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1001 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";VAR Cancel@1000 : Boolean);
    BEGIN
    END;

    EVENT XlBook@1012::SheetActivate@1561(Sh@1000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT XlBook@1012::SheetDeactivate@1562(Sh@1000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT XlBook@1012::SheetCalculate@1563(Sh@1000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT XlBook@1012::SheetChange@1564(Sh@1001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT XlBook@1012::SheetFollowHyperlink@1854(Sh@1001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00024431-0000-0000-C000-000000000046}:Unknown Automation Server.Hyperlink");
    BEGIN
    END;

    EVENT XlBook@1012::SheetPivotTableUpdate@2157(Sh@1001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT XlBook@1012::PivotTableCloseConnection@2158(Target@1000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT XlBook@1012::PivotTableOpenConnection@2159(Target@1000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT XlBook@1012::Sync@2266(SyncEventType@1000 : Integer);
    BEGIN
    END;

    EVENT XlBook@1012::BeforeXmlImport@2283(Map@1003 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";Url@1002 : Text[1024];IsRefresh@1001 : Boolean;VAR Cancel@1000 : Boolean);
    BEGIN
    END;

    EVENT XlBook@1012::AfterXmlImport@2285(Map@1002 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";IsRefresh@1001 : Boolean;Result@1000 : Integer);
    BEGIN
    END;

    EVENT XlBook@1012::BeforeXmlExport@2287(Map@1002 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";Url@1001 : Text[1024];VAR Cancel@1000 : Boolean);
    BEGIN
    END;

    EVENT XlBook@1012::AfterXmlExport@2288(Map@1002 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";Url@1001 : Text[1024];Result@1000 : Integer);
    BEGIN
    END;

    EVENT XlApp@1013::NewWorkbook@1565(Wb@1000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook");
    BEGIN
    END;

    EVENT XlApp@1013::SheetSelectionChange@1558(Sh@1001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT XlApp@1013::SheetBeforeDoubleClick@1559(Sh@1002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1001 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";VAR Cancel@1000 : Boolean);
    BEGIN
    END;

    EVENT XlApp@1013::SheetBeforeRightClick@1560(Sh@1002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1001 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";VAR Cancel@1000 : Boolean);
    BEGIN
    END;

    EVENT XlApp@1013::SheetActivate@1561(Sh@1000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT XlApp@1013::SheetDeactivate@1562(Sh@1000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT XlApp@1013::SheetCalculate@1563(Sh@1000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT XlApp@1013::SheetChange@1564(Sh@1001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT XlApp@1013::WorkbookOpen@1567(Wb@1000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook");
    BEGIN
    END;

    EVENT XlApp@1013::WorkbookActivate@1568(Wb@1000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook");
    BEGIN
    END;

    EVENT XlApp@1013::WorkbookDeactivate@1569(Wb@1000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook");
    BEGIN
    END;

    EVENT XlApp@1013::WorkbookBeforeClose@1570(Wb@1001 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";VAR Cancel@1000 : Boolean);
    BEGIN
    END;

    EVENT XlApp@1013::WorkbookBeforeSave@1571(Wb@1002 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";SaveAsUI@1001 : Boolean;VAR Cancel@1000 : Boolean);
    BEGIN
    END;

    EVENT XlApp@1013::WorkbookBeforePrint@1572(Wb@1001 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";VAR Cancel@1000 : Boolean);
    BEGIN
    END;

    EVENT XlApp@1013::WorkbookNewSheet@1573(Wb@1001 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Sh@1000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT XlApp@1013::WorkbookAddinInstall@1574(Wb@1000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook");
    BEGIN
    END;

    EVENT XlApp@1013::WorkbookAddinUninstall@1575(Wb@1000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook");
    BEGIN
    END;

    EVENT XlApp@1013::WindowResize@1554(Wb@1001 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Wn@1000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020893-0000-0000-C000-000000000046}:Unknown Automation Server.Window");
    BEGIN
    END;

    EVENT XlApp@1013::WindowActivate@1556(Wb@1001 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Wn@1000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020893-0000-0000-C000-000000000046}:Unknown Automation Server.Window");
    BEGIN
    END;

    EVENT XlApp@1013::WindowDeactivate@1557(Wb@1001 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Wn@1000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020893-0000-0000-C000-000000000046}:Unknown Automation Server.Window");
    BEGIN
    END;

    EVENT XlApp@1013::SheetFollowHyperlink@1854(Sh@1001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00024431-0000-0000-C000-000000000046}:Unknown Automation Server.Hyperlink");
    BEGIN
    END;

    EVENT XlApp@1013::SheetPivotTableUpdate@2157(Sh@1001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT XlApp@1013::WorkbookPivotTableCloseConnect@2160(Wb@1001 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Target@1000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT XlApp@1013::WorkbookPivotTableOpenConnecti@2161(Wb@1001 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Target@1000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT XlApp@1013::WorkbookSync@2289(Wb@1001 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";SyncEventType@1000 : Integer);
    BEGIN
    END;

    EVENT XlApp@1013::WorkbookBeforeXmlImport@2290(Wb@1004 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Map@1003 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";Url@1002 : Text[1024];IsRefresh@1001 : Boolean;VAR Cancel@1000 : Boolean);
    BEGIN
    END;

    EVENT XlApp@1013::WorkbookAfterXmlImport@2291(Wb@1003 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Map@1002 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";IsRefresh@1001 : Boolean;Result@1000 : Integer);
    BEGIN
    END;

    EVENT XlApp@1013::WorkbookBeforeXmlExport@2292(Wb@1003 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Map@1002 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";Url@1001 : Text[1024];VAR Cancel@1000 : Boolean);
    BEGIN
    END;

    EVENT XlApp@1013::WorkbookAfterXmlExport@2293(Wb@1003 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Map@1002 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";Url@1001 : Text[1024];Result@1000 : Integer);
    BEGIN
    END;

    BEGIN
    END.
  }
}
