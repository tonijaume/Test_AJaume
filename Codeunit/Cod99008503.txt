OBJECT Codeunit 99008503 Purchase Order Cnfmn.-Accept
{
  OBJECT-PROPERTIES
  {
    Date=13/02/07;
    Time=12:00:00;
    Version List=NAVW15.00;
  }
  PROPERTIES
  {
    TableNo=99008502;
    OnRun=VAR
            InboundPurchaseDocumentHeader@1000 : Record 99008502;
          BEGIN
            InboundPurchaseDocumentHeader := Rec;
            IF NOT Validation(InboundPurchaseDocumentHeader) THEN
              EXIT;
            IF UpdatePurchaseDocument(InboundPurchaseDocumentHeader) AND NOT HideDialogBox THEN
              MESSAGE(Text000);
            Rec := InboundPurchaseDocumentHeader;
          END;

  }
  CODE
  {
    VAR
      Text000@1002 : TextConst 'ENU=The referenced purchase order has been updated with the BizTalk purchase order confirmation.;ESP=Se ha actualizado el pedido de compra referido con la confirmaci¢n de pedido BizTalk.';
      Text001@1003 : TextConst 'ENU=A BizTalk partner with the number %1 does not exist.;ESP=No existe un socio BizTalk con el n£mero %1.';
      Text002@1004 : TextConst 'ENU=The referenced purchase order does not exist.;ESP=El pedido de compra referido no existe.';
      Text003@1005 : TextConst 'ENU=There is no reference to a purchase order in the BizTalk purchase order.;ESP=No existe ninguna referencia a un pedido de compra en el pedido de compra BizTalk.';
      Text004@1006 : TextConst 'ENU=The referenced purchase order cannot be updated because it already contains a vendor order number.;ESP=No se puede actualizar el pedido de compra referido porque ya tiene un n£mero de pedido de proveedor.';
      Text005@1007 : TextConst 'ENU=The currency code on the inbound purchase document header does not map to any currency specified for the Partner.;ESP=El c¢digo de divisa en la cabecera del documento de compra saliente no tiene equivalencia con ninguna divisa especificada para el socio.';
      Text006@1008 : TextConst 'ENU=There is a discrepancy with the %1 in the %2.;ESP=Existe una discrepancia con la %1 en %2.';
      Text007@1009 : TextConst 'ENU=\Do you want to continue?;ESP=\¨Confirma que desea continuar?';
      Text010@1012 : TextConst 'ENU=Commerce Gateway does not support the acceptance of a %1 whose %2 is %3;ESP=Commerce Gateway no permite aceptar un documento %1 en el que %2 es %3';
      Text012@1014 : TextConst 'ENU=There is a discrepancy with the %1 in line number %2.;ESP=Existe una discrepancia con la %1 en la l¡nea n£mero %2.';
      Text013@1015 : TextConst 'ENU=There are discrepancies between the inbound quote lines and the referenced quote lines.;ESP=Existen discrepancias entre las l¡neas de la oferta entrada y las l¡neas de la oferta referida.';
      Text017@1019 : TextConst 'ENU=A vendor item number is not defined for item number %1;ESP=No se ha definido un n£mero de producto proveedor para el producto n£mero %1.';
      Text018@1020 : TextConst 'ENU=The corresponding vendor item number %1 in quote line no. %2 \;ESP=No se puede encontrar el n£mero producto proveedor %1 correspondiente en la l¡nea de oferta n£m %2 \';
      Text019@1021 : TextConst 'ENU=could not be found in the BizTalk purchase order confirmation;ESP=no se encuentra en la confirmaci¢n de pedido compra BizTalk';
      Text020@1022 : TextConst 'ENU=A common item number is not defined for item number %1;ESP=No se definido un n£mero producto com£n  para el producto n£mero %1.';
      Text021@1023 : TextConst 'ENU=The corresponding common item number %1 in quote line no. %2 \;ESP=No se puede encontrar el n£mero producto com£n %1 correspondiente en la l¡nea de oferta n£m %2 \';
      BizTalkPartnerSetup@1000 : Record 99008513;
      PurchOrderHeader@1001 : Record 38;
      Text022@1024 : TextConst 'ENU=There is no %1 specified for %2 for the %3 on the %4 %5;ESP=No hay ning£n %1 especificado para %2 para el %3 en %4 %5';
      Text023@1025 : TextConst 'ENU="You must specify %1 for %2 %3 = ''''%4'''' in order to accept a %5 with a %6";ESP="Debe especificar %1 para %2 %3 = ''''%4'''' para aceptar un(a) %5 con %6"';
      HideDialogBox@1010 : Boolean;

    PROCEDURE Validation@1(VAR InboundPurchaseDocumentHeader@1000 : Record 99008502) : Boolean;
    VAR
      BizTalkPartnerCurrencyMap@1001 : Record 99008532;
    BEGIN
      BizTalkPartnerSetup.SETCURRENTKEY("Partner Type","Partner No.");
      BizTalkPartnerSetup.SETRANGE("Partner Type", BizTalkPartnerSetup."Partner Type"::Vendor);
      BizTalkPartnerSetup.SETRANGE("Partner No.", InboundPurchaseDocumentHeader."Buy-from Vendor No.");
      IF NOT BizTalkPartnerSetup.FIND('-') THEN
        ERROR(Text001,InboundPurchaseDocumentHeader."Buy-from Vendor No.");

      IF InboundPurchaseDocumentHeader."Reference Order No." <> '' THEN BEGIN
        PurchOrderHeader.SETCURRENTKEY("Document Type","Buy-from Vendor No.");
        PurchOrderHeader.SETRANGE("Document Type",PurchOrderHeader."Document Type"::Order);
        PurchOrderHeader.SETRANGE("Buy-from Vendor No.",InboundPurchaseDocumentHeader."Buy-from Vendor No.");
        PurchOrderHeader.SETRANGE("No.",InboundPurchaseDocumentHeader."Reference Order No.");
        IF NOT PurchOrderHeader.FIND('-') THEN
          ERROR(Text002);
      END ELSE
        ERROR(Text003);

      IF PurchOrderHeader."Vendor Order No." <> '' THEN
        ERROR(Text004);

      IF InboundPurchaseDocumentHeader."Currency Code" <> '' THEN BEGIN
        IF BizTalkPartnerCurrencyMap.GET(
          BizTalkPartnerSetup."BizTalk Partner No.",InboundPurchaseDocumentHeader."Currency Code") THEN BEGIN
          InboundPurchaseDocumentHeader."Currency Code" := BizTalkPartnerCurrencyMap."Currency Code";
        END ELSE
          ERROR(Text005);
      END;

      EXIT(TRUE);
    END;

    PROCEDURE UpdatePurchaseDocument@4(VAR InboundPurchaseDocumentHeader@1000 : Record 99008502) : Boolean;
    VAR
      InboundPurchaseDocumentLine@1001 : Record 99008503;
      PurchOrderLine@1002 : Record 39;
      Currency@1003 : Record 4;
      CurrencyExchRate@1010 : ARRAY [2] OF Record 330;
      ReservEntry@1014 : Record 337;
      BizTalkReservEntry@1013 : Record 99008533;
      Item@1016 : Record 27;
      AuxCommentPurchLine@1017 : Record 39;
      BizTalkManagement@1004 : Codeunit 99008508;
      CreateReservEntry@1015 : Codeunit 99000830;
      ItemNo@1005 : Code[20];
      LineNo@1006 : Code[4];
      PreviousItemNo@1012 : Code[20];
      PreviousLineNo@1011 : Integer;
      LastLineNo@1018 : Integer;
      RoundedAmount@1008 : Decimal;
      ValidateQuantity@1007 : Boolean;
      IgnoreComments@1009 : Boolean;
    BEGIN
      PurchOrderHeader.VALIDATE("Date Received",InboundPurchaseDocumentHeader."Date Received");
      PurchOrderHeader.VALIDATE("Time Received",InboundPurchaseDocumentHeader."Time Received");
      PurchOrderHeader.VALIDATE("BizTalk Purch. Order Cnfmn.",TRUE);
      PurchOrderHeader.VALIDATE("Vendor Order No.",InboundPurchaseDocumentHeader."Vendor Order No.");
      PurchOrderHeader.VALIDATE("Currency Code",InboundPurchaseDocumentHeader."Currency Code");
      IF InboundPurchaseDocumentHeader."Expected Receipt Date" <> 0D THEN
        CASE BizTalkPartnerSetup."Purch Ord Cnfmn. Expd Rcpt D" OF

          BizTalkPartnerSetup."Purch Ord Cnfmn. Expd Rcpt D"::Validate:
            IF (PurchOrderHeader."Expected Receipt Date" <> InboundPurchaseDocumentHeader."Expected Receipt Date") THEN BEGIN
              IF NOT HideDialogBox THEN BEGIN
                IF NOT CONFIRM(Text006 + Text007,FALSE,
                  PurchOrderHeader.FIELDCAPTION("Expected Receipt Date"),PurchOrderHeader.TABLECAPTION) THEN
                  EXIT(FALSE);
                PurchOrderHeader.VALIDATE("Expected Receipt Date",InboundPurchaseDocumentHeader."Expected Receipt Date");
              END ELSE
                ERROR(Text006,PurchOrderHeader.FIELDCAPTION("Expected Receipt Date"),PurchOrderHeader.TABLECAPTION);
            END;

          BizTalkPartnerSetup."Purch Ord Cnfmn. Expd Rcpt D"::Adjust:
            PurchOrderHeader.VALIDATE("Expected Receipt Date",InboundPurchaseDocumentHeader."Expected Receipt Date");
        END;

      CheckLines(InboundPurchaseDocumentHeader);

      PurchOrderLine.SETCURRENTKEY("Document Type","Document No.");
      PurchOrderLine.SETRANGE("Document Type", PurchOrderHeader."Document Type");
      PurchOrderLine.SETRANGE("Document No.", PurchOrderHeader."No.");

      CASE BizTalkPartnerSetup."Purchase Item Number Type" OF
        BizTalkPartnerSetup."Purchase Item Number Type"::"Internal Item No.":
          InboundPurchaseDocumentLine.SETCURRENTKEY("Inbound Document No.","No.");
        BizTalkPartnerSetup."Purchase Item Number Type"::"Vendor Item No.":
          InboundPurchaseDocumentLine.SETCURRENTKEY("Inbound Document No.","Vendor Item No.");
        BizTalkPartnerSetup."Purchase Item Number Type"::"Common Item No.":
          InboundPurchaseDocumentLine.SETCURRENTKEY("Inbound Document No.","Common Item No.");
      END;
      InboundPurchaseDocumentLine.SETRANGE("Inbound Document No.", InboundPurchaseDocumentHeader."Inbound Document No.");

      IgnoreComments := BizTalkPartnerSetup."Update Purchase Comments" =
        BizTalkPartnerSetup."Update Purchase Comments"::"Ignore New and Modified";
      IF NOT IgnoreComments THEN BEGIN
        PurchOrderLine.SETRANGE(Type,PurchOrderLine.Type::" ");
        PurchOrderLine.DELETEALL;
        PurchOrderLine.SETRANGE(Type);
        AuxCommentPurchLine.COPYFILTERS(PurchOrderLine);
        IF AuxCommentPurchLine.FIND('+') THEN
          LastLineNo := AuxCommentPurchLine."Line No." + 10000;
      END;

      LineNo := '0';
      IF InboundPurchaseDocumentLine.FIND('-') THEN
        REPEAT
          LineNo := INCSTR(LineNo);
          CASE InboundPurchaseDocumentLine.Type OF
            InboundPurchaseDocumentLine.Type::" ":
              IF NOT IgnoreComments THEN BEGIN
                AuxCommentPurchLine.INIT;
                AuxCommentPurchLine."Document Type" := PurchOrderHeader."Document Type";
                AuxCommentPurchLine."Document No." := PurchOrderHeader."No.";
                AuxCommentPurchLine."Line No." := LastLineNo;
                AuxCommentPurchLine.Description := InboundPurchaseDocumentLine.Description;
                AuxCommentPurchLine.INSERT;
                LastLineNo := LastLineNo + 10000;
              END;
            InboundPurchaseDocumentLine.Type::Item:
              BEGIN
                CASE BizTalkPartnerSetup."Purchase Item Number Type" OF
                  BizTalkPartnerSetup."Purchase Item Number Type"::"Internal Item No.":
                    BEGIN
                      InboundPurchaseDocumentHeader.TESTFIELD("No.");
                      ItemNo := InboundPurchaseDocumentLine."No.";
                    END;
                  BizTalkPartnerSetup."Purchase Item Number Type"::"Vendor Item No.":
                    BEGIN
                      InboundPurchaseDocumentHeader.TESTFIELD("Buy-from Vendor No.");
                      InboundPurchaseDocumentLine.TESTFIELD("Vendor Item No.");
                      ItemNo := BizTalkManagement.ConvertVendorItemNo(
                        InboundPurchaseDocumentLine."Vendor Item No.",
                        InboundPurchaseDocumentHeader."Buy-from Vendor No.");
                    END;
                  BizTalkPartnerSetup."Purchase Item Number Type"::"Common Item No.":
                    BEGIN
                      InboundPurchaseDocumentLine.TESTFIELD("Common Item No.");
                      ItemNo := BizTalkManagement.ConvertCommonItemNo(
                        InboundPurchaseDocumentLine."Common Item No.");
                    END;
                END;
                IF PreviousItemNo <> ItemNo THEN
                  PreviousLineNo := 0;
                PreviousItemNo := ItemNo;

                PurchOrderLine.SETRANGE("No.",ItemNo);
                PurchOrderLine.SETFILTER("Line No.",'>%1',PreviousLineNo);
                IF PurchOrderLine.FIND('-') THEN BEGIN
                  IF InboundPurchaseDocumentLine."Expected Receipt Date" <> 0D THEN BEGIN
                    CASE BizTalkPartnerSetup."Purch Ord Cnfmn. Expd Rcpt D" OF
                      BizTalkPartnerSetup."Purch Ord Cnfmn. Expd Rcpt D"::Validate:
                        BEGIN
                          IF (PurchOrderLine."Expected Receipt Date" <> InboundPurchaseDocumentLine."Expected Receipt Date") THEN
                            IF NOT HideDialogBox THEN BEGIN
                              IF NOT CONFIRM(Text012 + Text007,FALSE,
                                InboundPurchaseDocumentLine.FIELDCAPTION("Expected Receipt Date"),LineNo) THEN
                                EXIT(FALSE);
                            END ELSE
                              ERROR(Text012,InboundPurchaseDocumentLine.FIELDCAPTION("Expected Receipt Date"),LineNo);
                          PurchOrderLine.VALIDATE("Expected Receipt Date",InboundPurchaseDocumentLine."Expected Receipt Date");
                        END;
                      BizTalkPartnerSetup."Purch Ord Cnfmn. Expd Rcpt D"::Adjust:
                        PurchOrderLine.VALIDATE("Expected Receipt Date",InboundPurchaseDocumentLine."Expected Receipt Date");
                    END;
                  END;

                  ValidateQuantity := FALSE;
                  IF InboundPurchaseDocumentLine.Quantity <> 0 THEN BEGIN
                    CASE BizTalkPartnerSetup."Purch. Order Cnfmn. (Qty)" OF
                      BizTalkPartnerSetup."Purch. Order Cnfmn. (Qty)"::Validate:
                        BEGIN
                          IF PurchOrderLine.Quantity <> InboundPurchaseDocumentLine.Quantity THEN BEGIN
                            ValidateQuantity := TRUE;
                            IF NOT HideDialogBox THEN BEGIN
                              IF NOT CONFIRM(Text012 + Text007,FALSE,
                                InboundPurchaseDocumentLine.FIELDCAPTION(Quantity),LineNo) THEN
                                EXIT(FALSE);
                            END ELSE
                              ERROR(Text012,InboundPurchaseDocumentLine.FIELDCAPTION(Quantity),LineNo);
                          END;
                        END;
                      BizTalkPartnerSetup."Purch. Order Cnfmn. (Qty)"::Adjust:
                        IF PurchOrderLine.Quantity <> InboundPurchaseDocumentLine.Quantity THEN
                          ValidateQuantity := TRUE;
                    END;
                  END;
                  IF ValidateQuantity AND (PurchOrderHeader."Currency Code" <> '') THEN BEGIN
                    CurrencyExchRate[1].SETRANGE("Currency Code",PurchOrderHeader."Currency Code");
                    CurrencyExchRate[1].SETRANGE("Starting Date",0D,PurchOrderHeader."Posting Date");
                    IF NOT CurrencyExchRate[1].FIND('+') THEN
                      ERROR(Text022,CurrencyExchRate[1].TABLECAPTION,PurchOrderHeader."Currency Code",
                        PurchOrderHeader.FIELDCAPTION("Posting Date"),InboundPurchaseDocumentHeader.FIELDCAPTION("Reference Order No."),
                        InboundPurchaseDocumentHeader."Reference Order No.");
                  END;

                  CASE BizTalkPartnerSetup."Ord Cnfmn Combd Amt/Cost/Disc." OF
                    BizTalkPartnerSetup."Ord Cnfmn Combd Amt/Cost/Disc."::Validate:
                    BEGIN
                      IF PurchOrderLine."Direct Unit Cost" <> InboundPurchaseDocumentLine."Direct Unit Cost" THEN
                        IF NOT HideDialogBox THEN BEGIN
                          IF NOT CONFIRM(Text012 + Text007,FALSE,
                            InboundPurchaseDocumentLine.FIELDCAPTION("Direct Unit Cost"),LineNo) THEN
                            EXIT(FALSE);
                        END ELSE
                          ERROR(Text012,InboundPurchaseDocumentLine.FIELDCAPTION("Direct Unit Cost"),LineNo);
                      IF PurchOrderHeader."Currency Code" = '' THEN
                        Currency.InitRoundingPrecision
                      ELSE
                        Currency.GET(PurchOrderHeader."Currency Code");
                      Currency.TESTFIELD("Amount Rounding Precision");
                      IF PurchOrderLine."Line Discount %" <> InboundPurchaseDocumentLine."Line Discount %" THEN
                        IF NOT HideDialogBox THEN BEGIN
                          IF NOT CONFIRM(Text012 + Text007,FALSE,
                            InboundPurchaseDocumentLine.FIELDCAPTION("Line Discount %"),LineNo)
                          THEN
                            EXIT(FALSE);
                        END ELSE
                          ERROR(Text012,InboundPurchaseDocumentLine.FIELDCAPTION("Line Discount %"),LineNo);
                      IF ValidateQuantity THEN
                        PurchOrderLine.VALIDATE(Quantity,InboundPurchaseDocumentLine.Quantity);
                      PurchOrderLine.VALIDATE("Direct Unit Cost",InboundPurchaseDocumentLine."Direct Unit Cost");
                      PurchOrderLine.VALIDATE("Line Discount %",InboundPurchaseDocumentLine."Line Discount %");
                    END;
                    BizTalkPartnerSetup."Ord Cnfmn Combd Amt/Cost/Disc."::Adjust:
                    BEGIN
                      IF ValidateQuantity THEN
                        PurchOrderLine.VALIDATE(Quantity,InboundPurchaseDocumentLine.Quantity);
                      PurchOrderLine.VALIDATE("Direct Unit Cost",InboundPurchaseDocumentLine."Direct Unit Cost");
                      PurchOrderLine.VALIDATE("Line Discount %",InboundPurchaseDocumentLine."Line Discount %");
                    END;
                  END;

                  PurchOrderLine.MODIFY;
                  PreviousLineNo := PurchOrderLine."Line No.";

                  BizTalkReservEntry.SETRANGE("BizTalk Document No.",
                    InboundPurchaseDocumentHeader."Inbound Document No.");
                  BizTalkReservEntry.SETRANGE("Biztalk Document Direction",
                  BizTalkReservEntry."Biztalk Document Direction"::Inbound);
                  BizTalkReservEntry.SETRANGE("Source Type",DATABASE::"Purchase Line");
                  BizTalkReservEntry.SETRANGE("BizTalk Document Line No.",
                    InboundPurchaseDocumentLine."Line No.");
                  IF BizTalkReservEntry.FIND('-') THEN
                    BEGIN
                      ReservEntry.SETCURRENTKEY(
                        "Source ID","Source Ref. No.","Source Type","Source Subtype",
                        "Source Batch Name","Source Prod. Order Line","Reservation Status");
                      ReservEntry.SETRANGE("Source ID",PurchOrderLine."No.");
                      ReservEntry.SETRANGE("Source Type",DATABASE::"Purchase Line");
                      ReservEntry.SETRANGE("Source Subtype",PurchOrderLine."Document Type");
                      ReservEntry.DELETEALL(TRUE);
                      REPEAT
                        Item.GET(ItemNo);
                        IF Item."Item Tracking Code" = '' THEN
                          ERROR(Text023,Item.FIELDCAPTION("Item Tracking Code"),Item.TABLECAPTION,Item.FIELDCAPTION("No."),
                            Item."No.",FORMAT(PurchOrderHeader."Document Type"),BizTalkReservEntry.TABLECAPTION);
                        CreateReservEntry.CreateReservEntryFor(
                          DATABASE::"Purchase Line",PurchOrderLine."Document Type",
                          PurchOrderHeader."No.",'',0,PurchOrderLine."Line No.",PurchOrderLine."Qty. per Unit of Measure",
                          BizTalkReservEntry.Quantity,BizTalkReservEntry."Serial No.",BizTalkReservEntry."Lot No.");
                        CreateReservEntry.CreateEntry(ItemNo,
                          PurchOrderLine."Variant Code",PurchOrderLine."Location Code",
                          BizTalkReservEntry.Description,
                          BizTalkReservEntry."Expected Receipt Date",
                          BizTalkReservEntry."Shipment Date",0,BizTalkReservEntry."Reservation Status");
                      UNTIL BizTalkReservEntry.NEXT = 0;
                    END;
                END ELSE
                  ERROR(Text013);
              END;
            ELSE
              ERROR(Text010,PurchOrderLine.TABLECAPTION,PurchOrderLine.FIELDCAPTION(Type),FORMAT(PurchOrderLine.Type));
          END;
        UNTIL InboundPurchaseDocumentLine.NEXT = 0;
      InboundPurchaseDocumentHeader.Status := InboundPurchaseDocumentHeader.Status::Accepted;
      InboundPurchaseDocumentHeader."Date Processed" := TODAY;
      InboundPurchaseDocumentHeader."Time Processed" := TIME;
      InboundPurchaseDocumentHeader."Corresp. Accepted Document No." := PurchOrderHeader."No.";
      InboundPurchaseDocumentHeader.MODIFY;
      PurchOrderHeader.MODIFY;
      EXIT(TRUE);
    END;

    PROCEDURE CheckLines@3(InboundPurchaseDocumentHeader@1000 : Record 99008502);
    VAR
      InboundPurchaseDocumentLine@1001 : Record 99008503;
      PurchOrderLine@1002 : Record 39;
      BizTalkManagement@1003 : Codeunit 99008508;
      LineNo@1004 : Code[4];
      ItemNo@1005 : Code[20];
      VendorItemNo@1006 : Text[20];
      CommonItemNo@1007 : Code[20];
    BEGIN
      LineNo := '0';
      PurchOrderLine.SETRANGE("Document Type",PurchOrderHeader."Document Type");
      PurchOrderLine.SETRANGE("Document No.", PurchOrderHeader."No.");
      PurchOrderLine.FIND('-');
      REPEAT
        LineNo := INCSTR(LineNo);
        CASE PurchOrderLine.Type OF
          PurchOrderLine.Type::" ":;
          PurchOrderLine.Type::Item:
            BEGIN
              InboundPurchaseDocumentLine.SETCURRENTKEY("Inbound Document No.");
              InboundPurchaseDocumentLine.SETRANGE("Inbound Document No.", InboundPurchaseDocumentHeader."Inbound Document No.");
              CASE BizTalkPartnerSetup."Purchase Item Number Type" OF
                BizTalkPartnerSetup."Purchase Item Number Type"::"Internal Item No.":
                  InboundPurchaseDocumentLine.SETRANGE("No.",PurchOrderLine."No.");
                BizTalkPartnerSetup."Purchase Item Number Type"::"Vendor Item No.":
                  BEGIN
                    VendorItemNo := BizTalkManagement.GetVendorItemNumber(
                      PurchOrderLine."No.",PurchOrderHeader."Buy-from Vendor No.");
                    IF VendorItemNo = '' THEN
                      ERROR(Text017,PurchOrderLine."No.");
                    InboundPurchaseDocumentLine.SETRANGE("Vendor Item No.",VendorItemNo);
                    IF NOT InboundPurchaseDocumentLine.FIND('-') THEN
                      ERROR(Text018 + Text019,VendorItemNo,LineNo);
                  END;
                BizTalkPartnerSetup."Purchase Item Number Type"::"Common Item No.":
                  BEGIN
                    CommonItemNo := BizTalkManagement.GetCommonItemNumber(PurchOrderLine."No.");
                    IF CommonItemNo = '' THEN
                      ERROR(Text020,PurchOrderLine."No.");
                    InboundPurchaseDocumentLine.SETRANGE("Common Item No.",CommonItemNo);
                    IF NOT InboundPurchaseDocumentLine.FIND('-') THEN
                      ERROR(Text021 + Text019,CommonItemNo,LineNo);
                  END;
              END;
            END;
          ELSE
            ERROR(Text010,PurchOrderLine.TABLECAPTION,PurchOrderLine.FIELDCAPTION(Type),FORMAT(PurchOrderLine.Type));
        END;
      UNTIL PurchOrderLine.NEXT = 0;
    END;

    PROCEDURE SetHideDialogBox@2(NewHideDialogBox@1000 : Boolean);
    BEGIN
      HideDialogBox := NewHideDialogBox;
    END;

    BEGIN
    END.
  }
}
