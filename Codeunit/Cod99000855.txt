OBJECT Codeunit 99000855 Planning-Get Parameters
{
  OBJECT-PROPERTIES
  {
    Date=14/02/08;
    Time=12:00:00;
    Version List=NAVW15.00.01;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      GlobalSKU@1001 : Record 5700;
      Item@1002 : Record 27;
      MfgSetup@1003 : Record 99000765;
      HasGotMfgSetUp@1004 : Boolean;

    PROCEDURE AtSKU@1(VAR SKU@1000 : Record 5700;ItemNo@1001 : Code[20];VariantCode@1002 : Code[10];LocationCode@1003 : Code[10]);
    BEGIN
      GetMfgSetUp;
      WITH GlobalSKU DO BEGIN
        IF (ItemNo <> "Item No.") OR
           (VariantCode <> "Variant Code") OR
           (LocationCode <> "Location Code")
        THEN BEGIN
          CLEAR(GlobalSKU);
          SETRANGE("Item No.",ItemNo);
          SETRANGE("Variant Code",VariantCode);
          SETRANGE("Location Code",LocationCode);
          IF NOT FINDFIRST THEN BEGIN
            GetItem(ItemNo);
            "Item No." := ItemNo;
            "Variant Code" := VariantCode;
            "Location Code" := LocationCode;
            "Vendor No." := Item."Vendor No.";
            "Vendor Item No." := Item."Vendor Item No.";
            "Lead Time Calculation" := Item."Lead Time Calculation";
            "Reorder Point" := Item."Reorder Point";
            "Maximum Inventory" := Item."Maximum Inventory";
            "Reorder Quantity" := Item."Reorder Quantity";
            "Reordering Policy" := Item."Reordering Policy";
            "Include Inventory" := Item."Include Inventory";
            "Manufacturing Policy" := Item."Manufacturing Policy";
            "Minimum Order Quantity" := Item."Minimum Order Quantity";
            "Maximum Order Quantity" := Item."Maximum Order Quantity";
            "Safety Stock Quantity" := Item."Safety Stock Quantity";
            "Order Multiple" := Item."Order Multiple";
            "Safety Lead Time" := Item."Safety Lead Time";
            "Flushing Method" := Item."Flushing Method";
            "Replenishment System" := Item."Replenishment System";
            "Reorder Cycle" := Item."Reorder Cycle";
            "Lot Size" := Item."Lot Size";
            "Last Direct Cost" := Item."Last Direct Cost";
          END;
          IF "Components at Location" = '' THEN BEGIN
            IF MfgSetup."Components at Location" <> '' THEN
              "Components at Location" := MfgSetup."Components at Location"
            ELSE
              "Components at Location" := LocationCode;
          END;
        END;
        IF FORMAT("Safety Lead Time") = '' THEN
          IF FORMAT(MfgSetup."Default Safety Lead Time") <> '' THEN
            "Safety Lead Time" := MfgSetup."Default Safety Lead Time"
          ELSE
            EVALUATE("Safety Lead Time",'<0D>');
        AdjustInvalidSettings(GlobalSKU);
      END;
      SKU := GlobalSKU;
    END;

    LOCAL PROCEDURE GetItem@6(ItemNo@1000 : Code[20]);
    BEGIN
      IF Item."No." <> ItemNo THEN
        Item.GET(ItemNo);
    END;

    LOCAL PROCEDURE GetMfgSetUp@2();
    BEGIN
      IF NOT HasGotMfgSetUp THEN
        HasGotMfgSetUp := MfgSetup.GET;
    END;

    PROCEDURE SetUpPlanningControls@4(ReorderingPolicy@1001 : ' ,Fixed Reorder Qty.,Maximum Qty.,Order,Lot-for-Lot';IncludeInventory@1012 : Boolean;VAR ReorderCycleEnabled@1009 : Boolean;VAR SafetyLeadTimeEnabled@1008 : Boolean;VAR SafetyStockQtyEnabled@1007 : Boolean;VAR ReorderPointEnabled@1006 : Boolean;VAR ReorderQuantityEnabled@1005 : Boolean;VAR MaximumInventoryEnabled@1004 : Boolean;VAR MinimumOrderQtyEnabled@1003 : Boolean;VAR MaximumOrderQtyEnabled@1002 : Boolean;VAR OrderMultipleEnabled@1000 : Boolean;VAR IncludeInventoryEnabled@1011 : Boolean);
    VAR
      ParamArray@1010 : ARRAY [10] OF Boolean;
    BEGIN
      CASE ReorderingPolicy OF
        ReorderingPolicy::" ":
          AssignToArray(ParamArray,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE);
        ReorderingPolicy::"Fixed Reorder Qty.":
          AssignToArray(ParamArray,TRUE,TRUE,TRUE,TRUE,TRUE,FALSE,TRUE,TRUE,TRUE,FALSE);
        ReorderingPolicy::"Maximum Qty.":
          AssignToArray(ParamArray,TRUE,TRUE,TRUE,TRUE,FALSE,TRUE,TRUE,TRUE,TRUE,FALSE);
        ReorderingPolicy::Order:
          AssignToArray(ParamArray,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE);
        ReorderingPolicy::"Lot-for-Lot":
          AssignToArray(ParamArray,TRUE,TRUE,IncludeInventory,FALSE,FALSE,FALSE,TRUE,TRUE,TRUE,TRUE);
      END;

      ReorderCycleEnabled := ParamArray[1];
      SafetyLeadTimeEnabled := ParamArray[2];
      SafetyStockQtyEnabled := ParamArray[3];
      ReorderPointEnabled := ParamArray[4];
      ReorderQuantityEnabled := ParamArray[5];
      MaximumInventoryEnabled := ParamArray[6];
      MinimumOrderQtyEnabled := ParamArray[7];
      MaximumOrderQtyEnabled := ParamArray[8];
      OrderMultipleEnabled := ParamArray[9];
      IncludeInventoryEnabled := ParamArray[10];
    END;

    LOCAL PROCEDURE AssignToArray@3(VAR ParamArray@1009 : ARRAY [10] OF Boolean;Bool1@1008 : Boolean;Bool2@1007 : Boolean;Bool3@1006 : Boolean;Bool4@1005 : Boolean;Bool5@1004 : Boolean;Bool6@1003 : Boolean;Bool7@1002 : Boolean;Bool8@1001 : Boolean;Bool9@1000 : Boolean;Bool10@1010 : Boolean);
    BEGIN
      ParamArray[1] := Bool1;
      ParamArray[2] := Bool2;
      ParamArray[3] := Bool3;
      ParamArray[4] := Bool4;
      ParamArray[5] := Bool5;
      ParamArray[6] := Bool6;
      ParamArray[7] := Bool7;
      ParamArray[8] := Bool8;
      ParamArray[9] := Bool9;
      ParamArray[10] := Bool10;
    END;

    PROCEDURE AdjustInvalidSettings@5(VAR SKU@1000 : Record 5700);
    VAR
      ReorderCycleEnabled@1010 : Boolean;
      SafetyLeadTimeEnabled@1009 : Boolean;
      SafetyStockQtyEnabled@1008 : Boolean;
      ReorderPointEnabled@1007 : Boolean;
      ReorderQuantityEnabled@1006 : Boolean;
      MaximumInventoryEnabled@1005 : Boolean;
      MinimumOrderQtyEnabled@1004 : Boolean;
      MaximumOrderQtyEnabled@1003 : Boolean;
      OrderMultipleEnabled@1002 : Boolean;
      IncludeInventoryEnabled@1001 : Boolean;
    BEGIN
      SetUpPlanningControls(SKU."Reordering Policy",SKU."Include Inventory",
        ReorderCycleEnabled,SafetyLeadTimeEnabled,SafetyStockQtyEnabled,
        ReorderPointEnabled,ReorderQuantityEnabled,MaximumInventoryEnabled,
        MinimumOrderQtyEnabled,MaximumOrderQtyEnabled,OrderMultipleEnabled,IncludeInventoryEnabled);

      IF NOT ReorderCycleEnabled THEN
        EVALUATE(SKU."Reorder Cycle",'<0D>');
      IF NOT SafetyLeadTimeEnabled THEN
        EVALUATE(SKU."Safety Lead Time",'<0D>');
      IF NOT SafetyStockQtyEnabled THEN
        SKU."Safety Stock Quantity" := 0;
      IF NOT ReorderPointEnabled THEN
        SKU."Reorder Point" := 0;
      IF NOT ReorderQuantityEnabled THEN
        SKU."Reorder Quantity" := 0;
      IF NOT MaximumInventoryEnabled THEN
        SKU."Maximum Inventory" := 0;
      IF NOT MinimumOrderQtyEnabled THEN
        SKU."Minimum Order Quantity" := 0;
      IF NOT MaximumOrderQtyEnabled THEN
        SKU."Maximum Order Quantity" := 0;
      IF NOT OrderMultipleEnabled THEN
        SKU."Order Multiple" := 0;

      AdjustInvalidValues(SKU);
    END;

    PROCEDURE AdjustInvalidValues@7(VAR SKU@1000 : Record 5700);
    BEGIN
      IF SKU."Reorder Point" < 0 THEN
        SKU."Reorder Point" := 0;

      IF SKU."Safety Stock Quantity" < 0 THEN
        SKU."Safety Stock Quantity" := 0;

      IF SKU."Reorder Point" <= SKU."Safety Stock Quantity" THEN
        SKU."Reorder Point" := 0;

      IF SKU."Maximum Order Quantity" < 0 THEN
        SKU."Maximum Order Quantity" := 0;

      IF SKU."Minimum Order Quantity" < 0 THEN
        SKU."Minimum Order Quantity" := 0;

      IF SKU."Maximum Order Quantity" <> 0 THEN
        IF (SKU."Maximum Order Quantity" < SKU."Minimum Order Quantity") THEN
          SKU."Maximum Order Quantity" := SKU."Minimum Order Quantity";

      IF (SKU."Maximum Inventory" < SKU."Safety Stock Quantity") OR
         (SKU."Maximum Inventory" < SKU."Reorder Point")
      THEN
        SKU."Maximum Inventory" := 0;
    END;

    PROCEDURE LotForLot@8(VAR SKU@1000 : Record 5700;ItemNo@1001 : Code[20];VariantCode@1002 : Code[10];LocationCode@1003 : Code[10]);
    BEGIN
      GetMfgSetUp;
      WITH GlobalSKU DO BEGIN
        IF (ItemNo <> "Item No.") OR
           (VariantCode <> "Variant Code") OR
           (LocationCode <> "Location Code")
        THEN BEGIN
          CLEAR(GlobalSKU);
          SETRANGE("Item No.",ItemNo);
          SETRANGE("Variant Code",VariantCode);
          SETRANGE("Location Code",LocationCode);
          IF NOT FINDFIRST THEN BEGIN
            GetItem(ItemNo);
            "Item No." := ItemNo;
            "Variant Code" := VariantCode;
            "Location Code" := LocationCode;
            "Vendor No." := Item."Vendor No.";
            "Vendor Item No." := Item."Vendor Item No.";
            "Lead Time Calculation" := Item."Lead Time Calculation";
            "Reorder Point" := 0;
            "Maximum Inventory" := 0;
            "Reorder Quantity" := 0;
            CASE Item."Reordering Policy" OF
              "Reordering Policy"::" ": "Reordering Policy" := "Reordering Policy"::" ";
              "Reordering Policy"::Order: "Reordering Policy" := "Reordering Policy"::Order;
              "Reordering Policy"::"Lot-for-Lot": "Reordering Policy" := "Reordering Policy"::"Lot-for-Lot";
              ELSE "Reordering Policy" := "Reordering Policy"::"Lot-for-Lot";
            END;
            IF "Reordering Policy" = "Reordering Policy"::"Lot-for-Lot" THEN
              "Include Inventory" := TRUE
            ELSE
              "Include Inventory" := Item."Include Inventory";
            "Manufacturing Policy" := Item."Manufacturing Policy";
            "Minimum Order Quantity" := 0;
            "Maximum Order Quantity" := 0;
            "Safety Stock Quantity" := 0;
            "Order Multiple" := 0;
            "Safety Lead Time" := Item."Safety Lead Time";
            "Flushing Method" := Item."Flushing Method";
            "Replenishment System" := Item."Replenishment System";
            "Reorder Cycle" := Item."Reorder Cycle";
            "Lot Size" := Item."Lot Size";
            "Last Direct Cost" := Item."Last Direct Cost";
          END;
          IF "Components at Location" = '' THEN BEGIN
            IF MfgSetup."Components at Location" <> '' THEN
              "Components at Location" := MfgSetup."Components at Location"
            ELSE
              "Components at Location" := LocationCode;
          END;
        END;
        IF FORMAT("Safety Lead Time") = '' THEN
          IF FORMAT(MfgSetup."Default Safety Lead Time") <> '' THEN
            "Safety Lead Time" := MfgSetup."Default Safety Lead Time"
          ELSE
            EVALUATE("Safety Lead Time",'<0D>');
        AdjustInvalidSettings(GlobalSKU);
      END;
      SKU := GlobalSKU;
    END;

    BEGIN
    END.
  }
}
