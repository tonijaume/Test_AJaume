OBJECT Codeunit 802 Online Map Management
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVW16.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text001@1000 : TextConst 'ENU=&This address,&Directions from my company,Directions to my &company,Directions from &another address,Directions to an&other address;ESP=Es&ta direcci¢n,&Desde mi empresa,A mi &empresa,Des&de otros destinos,&A otros destinos';
      Text002@1001 : TextConst 'ENU=There is no default Map setup.;ESP=No hay ninguna configuraci¢n de mapa predeterminada.';
      Text003@1002 : TextConst 'ENU=%1 must not be blank.;ESP=%1 no debe estar en blanco.';
      Text004@1102601000 : TextConst 'ENU=Select an online map:;ESP=Seleccione un mapa en l¡nea:';

    PROCEDURE ProcessMap@50(TableNo@1000 : Integer;ToRecPosition@1001 : Text[1000]);
    VAR
      OnlineMapMgt@1003 : Codeunit 800;
      URL@1004 : Text[200];
    BEGIN
      IF GetWebStatus THEN
        OnlineMapMgt.ProcessWebMap(TableNo,ToRecPosition,URL);
    END;

    PROCEDURE ProcessDirections@51(FromNo@1002 : Integer;FromRecPosition@1003 : Text[1000];ToNo@1004 : Integer;ToRecPosition@1005 : Text[1000];Distance@1000 : 'Miles,Kilometres';Route@1001 : 'Quickest,Shortest');
    VAR
      OnlineMapMgt@1007 : Codeunit 800;
      URL@1008 : Text[200];
    BEGIN
      IF GetWebStatus THEN
        OnlineMapMgt.ProcessWebDirections(FromNo,FromRecPosition,ToNo,ToRecPosition,URL,Distance,Route);
    END;

    PROCEDURE GetWebStatus@52() : Boolean;
    BEGIN
      EXIT(GetDefaultWebStatus);
    END;

    PROCEDURE GetUserWebStatus@53() : Boolean;
    BEGIN
      EXIT(GetDefaultWebStatus);
    END;

    PROCEDURE GetDefaultWebStatus@54() : Boolean;
    VAR
      Map@1002 : Record 800;
    BEGIN
      IF NOT Map.GET THEN
        ERROR(Text002);
      EXIT(TRUE);
    END;

    PROCEDURE FromCompany@55(TableNo@1001 : Integer;RecPosition@1002 : Text[1000]);
    VAR
      CompanyInfo@1003 : Record 79;
      OnlineMapSetup@1000 : Record 800;
    BEGIN
      CompanyInfo.GET;
      OnlineMapSetup.GET;
      ProcessDirections(DATABASE::"Company Information",CompanyInfo.GETPOSITION,TableNo,RecPosition,
        OnlineMapSetup."Distance In",OnlineMapSetup.Route);
    END;

    PROCEDURE SelectAddress@56(TableNo@1004 : Integer;RecPosition@1005 : Text[1000];Direction@1006 : 'To Other,From Other,To Company,From Company';Distance@1003 : 'Miles,Kilometres';Route@1000 : 'Quickest,Shortest');
    VAR
      CompanyInfo@1002 : Record 79;
      OnlineMapSetup@1001 : Record 800;
      OnlineMapAddressSelector@1007 : Form 802;
      MapMgt@1009 : Codeunit 802;
    BEGIN
      IF Direction IN [Direction::"To Other",Direction::"From Other"] THEN BEGIN
        OnlineMapAddressSelector.RUNMODAL;
        OnlineMapAddressSelector.Getdefaults(Distance,Route);
      END ELSE BEGIN
        OnlineMapSetup.GET;
        CompanyInfo.GET;
      END;

      CASE Direction OF
        Direction::"To Other":
          BEGIN
            ProcessDirections(
              TableNo,RecPosition,
              OnlineMapAddressSelector.GetTableNo,OnlineMapAddressSelector.GetRecPosition,
              Distance,Route)
          END;
        Direction::"From Other":
          BEGIN
            ProcessDirections(
              OnlineMapAddressSelector.GetTableNo,OnlineMapAddressSelector.GetRecPosition,
              TableNo,RecPosition,
              Distance,Route);
          END;
        Direction::"To Company":
          BEGIN
            ProcessDirections(
              TableNo,RecPosition,
              DATABASE::"Company Information",CompanyInfo.GETPOSITION,
              OnlineMapSetup."Distance In",OnlineMapSetup.Route);
          END;
        Direction::"From Company":
          BEGIN
            ProcessDirections(
              DATABASE::"Company Information",CompanyInfo.GETPOSITION,
              TableNo,RecPosition,
              OnlineMapSetup."Distance In",OnlineMapSetup.Route);
          END;
      END;
    END;

    PROCEDURE TestSetup@1() : Boolean;
    VAR
      OnlineMap@1000 : Record 800;
    BEGIN
      IF OnlineMap.FIND('-') THEN
        EXIT(TRUE);
    END;

    PROCEDURE MakeSelection@2(TableID@1008 : Integer;Position@1009 : Text[1000]);
    VAR
      MapSetup@1006 : Record 800;
      Selection@1001 : Integer;
      Route@1011 : 'Miles,Kilometres';
      Distance@1010 : 'Quickest,Shortest';
    BEGIN
      MapSetup.GET;
      IF MapSetup."Default Language Code" = '' THEN
        ERROR(STRSUBSTNO(Text003,MapSetup.FIELDCAPTION("Default Language Code")));

      Selection := STRMENU(Text001,1,Text004);
      IF Selection = 0 THEN
        EXIT;

      CASE Selection OF
        1: ProcessMap(TableID,Position);
        2: SelectAddress(TableID,Position,3,MapSetup."Distance In",MapSetup.Route);
        3: SelectAddress(TableID,Position,2,MapSetup."Distance In",MapSetup.Route);
        4: SelectAddress(TableID,Position,1,MapSetup."Distance In",MapSetup.Route);
        5: SelectAddress(TableID,Position,0,MapSetup."Distance In",MapSetup.Route);
      END;
    END;

    BEGIN
    END.
  }
}
