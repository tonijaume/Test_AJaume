OBJECT Codeunit 99008525 BizTalk Sales Credit Memo
{
  OBJECT-PROPERTIES
  {
    Date=13/02/07;
    Time=12:00:00;
    Version List=NAVW15.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=The sales credit memo number %1 has already been sent as a BizTalk document.;ESP=Ya se ha enviado el abono de venta n£mero %1 como documento BizTalk.';
      Text001@1001 : TextConst 'ENU=There are no lines to send.;ESP=No hay l¡neas para enviar.';

    PROCEDURE ValidateData@3(SalesCrMemoHeader@1000 : Record 114);
    VAR
      SalesCreditMemoLine@1001 : Record 115;
    BEGIN
      IF SalesCrMemoHeader."BizTalk Sales Credit Memo" THEN
        ERROR(Text000,SalesCrMemoHeader."No.");
      SalesCreditMemoLine.SETCURRENTKEY("Document No.");
      SalesCreditMemoLine.SETRANGE("Document No.",SalesCrMemoHeader."No.");
      IF NOT SalesCreditMemoLine.FIND('-') THEN
        ERROR(Text001);
      SalesCreditMemoLine.SETRANGE(Type,SalesCreditMemoLine.Type::Resource);
      IF SalesCreditMemoLine.FIND('-') THEN
        SalesCreditMemoLine.FIELDERROR(Type);
    END;

    PROCEDURE TransferData@2(SalesCrMemoHeader@1001 : Record 114) NextOutboundNo@1000 : Integer;
    VAR
      GeneralLedgerSetup@1002 : Record 98;
      OutboundSalesDocumentHeader@1003 : Record 99008506;
      OutboundSalesDocumentLine@1004 : Record 99008507;
      SalesCreditMemoLine@1005 : Record 115;
      Item@1006 : Record 27;
      NextLineNo@1007 : Integer;
    BEGIN
      OutboundSalesDocumentLine.LOCKTABLE;
      OutboundSalesDocumentHeader.LOCKTABLE;
      IF OutboundSalesDocumentHeader.FIND('+') THEN
        NextOutboundNo := OutboundSalesDocumentHeader."Outbound Document No." + 1
      ELSE
        NextOutboundNo := 1;
      WITH OutboundSalesDocumentHeader DO BEGIN
        INIT;
        "Outbound Document No." := NextOutboundNo;
        "No." := SalesCrMemoHeader."No.";
        "Sell-to Customer No." := SalesCrMemoHeader."Sell-to Customer No.";
        "Bill-to Customer No." := SalesCrMemoHeader."Bill-to Customer No.";
        "Bill-to Name" := SalesCrMemoHeader."Bill-to Name";
        "Bill-to Name 2" := SalesCrMemoHeader."Bill-to Name 2";
        "Bill-to Address" := SalesCrMemoHeader."Bill-to Address";
        "Bill-to Address 2" := SalesCrMemoHeader."Bill-to Address 2";
        "Bill-to City" := SalesCrMemoHeader."Bill-to City";
        "Bill-to Contact" := SalesCrMemoHeader."Bill-to Contact";
        "Your Reference" := SalesCrMemoHeader."Your Reference";
        "Ship-to Code" := SalesCrMemoHeader."Ship-to Code";
        "Ship-to Name" := SalesCrMemoHeader."Ship-to Name";
        "Ship-to Name 2" := SalesCrMemoHeader."Ship-to Name 2";
        "Ship-to Address" := SalesCrMemoHeader."Ship-to Address";
        "Ship-to Address 2" := SalesCrMemoHeader."Ship-to Address 2";
        "Ship-to City" := SalesCrMemoHeader."Ship-to City";
        "Ship-to Contact" := SalesCrMemoHeader."Ship-to Contact";
        "Posting Date" := SalesCrMemoHeader."Posting Date";
        "Shipment Date" := SalesCrMemoHeader."Shipment Date";
        "Posting Description" := SalesCrMemoHeader."Posting Description";
        "Payment Terms Code" := SalesCrMemoHeader."Payment Terms Code";
        "Due Date" := SalesCrMemoHeader."Due Date";
        "Payment Discount %" := SalesCrMemoHeader."Payment Discount %";
        "Pmt. Discount Date" := SalesCrMemoHeader."Pmt. Discount Date";
        "Shipment Method Code" := SalesCrMemoHeader."Shipment Method Code";
        "Location Code" := SalesCrMemoHeader."Location Code";
        "Shortcut Dimension 1 Code" := SalesCrMemoHeader."Shortcut Dimension 1 Code";
        "Shortcut Dimension 2 Code" := SalesCrMemoHeader."Shortcut Dimension 2 Code";
        "Customer Posting Group" := SalesCrMemoHeader."Customer Posting Group";
        IF SalesCrMemoHeader."Currency Code" <> '' THEN
          "Currency Code" := SalesCrMemoHeader."Currency Code"
        ELSE BEGIN
          GeneralLedgerSetup.FIND('-');
          "Currency Code" := GeneralLedgerSetup."LCY Code"
        END;
        "Currency Factor" := SalesCrMemoHeader."Currency Factor";
        "Price Group Code" := SalesCrMemoHeader."Customer Price Group";
        "Prices Including VAT" := SalesCrMemoHeader."Prices Including VAT";
        "Invoice Disc. Code" := SalesCrMemoHeader."Invoice Disc. Code";
        "Cust./Item Disc. Gr." := SalesCrMemoHeader."Customer Disc. Group";
        "Language Code" := SalesCrMemoHeader."Language Code";
        "Salesperson Code" := SalesCrMemoHeader."Salesperson Code";
        "No. Printed" := SalesCrMemoHeader."No. Printed";
        "On Hold" := SalesCrMemoHeader."On Hold";
        "Applies-to Doc. Type" := SalesCrMemoHeader."Applies-to Doc. Type";
        "Applies-to Doc. No." := SalesCrMemoHeader."Applies-to Doc. No.";
        "Bal. Account No." := SalesCrMemoHeader."Bal. Account No.";
        "VAT Registration No." := SalesCrMemoHeader."VAT Registration No.";
        "Reason Code" := SalesCrMemoHeader."Reason Code";
        "Gen. Bus. Posting Group" := SalesCrMemoHeader."Gen. Bus. Posting Group";
        "EU 3-Party Trade" := SalesCrMemoHeader."EU 3-Party Trade";
        "Transaction Type" := SalesCrMemoHeader."Transaction Type";
        "Transport Method" := SalesCrMemoHeader."Transport Method";
        "VAT Country/Region Code" := SalesCrMemoHeader."VAT Country/Region Code";
        "Sell-to Customer Name" := SalesCrMemoHeader."Sell-to Customer Name";
        "Sell-to Customer Name 2" := SalesCrMemoHeader."Sell-to Customer Name 2";
        "Sell-to Address" := SalesCrMemoHeader."Sell-to Address";
        "Sell-to Address 2" := SalesCrMemoHeader."Sell-to Address 2";
        "Sell-to City" := SalesCrMemoHeader."Sell-to City";
        "Sell-to Contact" := SalesCrMemoHeader."Sell-to Contact";
        "Bill-to Post Code" := SalesCrMemoHeader."Bill-to Post Code";
        "Bill-to County" := SalesCrMemoHeader."Bill-to County";
        "Bill-to Country/Region Code" := SalesCrMemoHeader."Bill-to Country/Region Code";
        "Sell-to Post Code" := SalesCrMemoHeader."Sell-to Post Code";
        "Sell-to County" := SalesCrMemoHeader."Sell-to County";
        "Sell-to Country/Region Code" := SalesCrMemoHeader."Sell-to Country/Region Code";
        "Ship-to Post Code" := SalesCrMemoHeader."Ship-to Post Code";
        "Ship-to County" := SalesCrMemoHeader."Ship-to County";
        "Ship-to Country/Region Code" := SalesCrMemoHeader."Ship-to Country/Region Code";
        "Bal. Account Type" := SalesCrMemoHeader."Bal. Account Type";
        "Exit Point" := SalesCrMemoHeader."Exit Point";
        Correction := SalesCrMemoHeader.Correction;
        "Document Date" := SalesCrMemoHeader."Document Date";
        "External Document No." := SalesCrMemoHeader."External Document No.";
        Area := SalesCrMemoHeader.Area;
        "Transaction Specification" := SalesCrMemoHeader."Transaction Specification";
        "Payment Method Code" := SalesCrMemoHeader."Payment Method Code";
        "Pre-Assigned No. Series" := SalesCrMemoHeader."Pre-Assigned No. Series";
        "No. Series" := SalesCrMemoHeader."No. Series";
        "Pre-Assigned No." := SalesCrMemoHeader."Pre-Assigned No.";
        "User ID" := SalesCrMemoHeader."User ID";
        "Source Code" := SalesCrMemoHeader."Source Code";
        "Tax Area Code" := SalesCrMemoHeader."Tax Area Code";
        "Tax Liable" := SalesCrMemoHeader."Tax Liable";
        "VAT Bus. Posting Group" := SalesCrMemoHeader."VAT Bus. Posting Group";
        "VAT Base Discount %" := SalesCrMemoHeader."VAT Base Discount %";
        Comment := SalesCrMemoHeader.Comment;
        Amount := SalesCrMemoHeader.Amount;
        "Amount Including VAT" := SalesCrMemoHeader."Amount Including VAT";
        Status := Status::Unsent;
        "BizTalk Document Type" := "BizTalk Document Type"::"Credit Memo";
        INSERT;

        OutboundSalesDocumentLine.SETCURRENTKEY("Outbound Document No.");
        OutboundSalesDocumentLine.SETRANGE("Outbound Document No.",NextOutboundNo);
        IF OutboundSalesDocumentLine.FIND('+') THEN
          NextLineNo := OutboundSalesDocumentLine."Line No."
        ELSE
          NextLineNo := 0;
        WITH OutboundSalesDocumentLine DO BEGIN
          SalesCreditMemoLine.SETCURRENTKEY("Document No.");
          SalesCreditMemoLine.SETRANGE("Document No.",SalesCrMemoHeader."No.");
          IF SalesCreditMemoLine.FIND('-') THEN
          REPEAT
            INIT;
            NextLineNo := NextLineNo +1;
            "Line No." := NextLineNo;
            "Outbound Document No." := NextOutboundNo;
            "Document No." := SalesCreditMemoLine."Document No.";
            "Sell-to Customer No." := SalesCreditMemoLine."Sell-to Customer No.";
            Type := SalesCreditMemoLine.Type;
            "No." := SalesCreditMemoLine."No.";
            IF Item.GET(SalesCreditMemoLine."No.") THEN BEGIN
              "Vendor Item No." := Item."Vendor Item No.";
              "Common Item No." := Item."Common Item No.";
            END;
            "Location Code" := SalesCreditMemoLine."Location Code";
            "Posting Group" := SalesCreditMemoLine."Posting Group";
            "Shipment Date" := SalesCreditMemoLine."Shipment Date";
            Description := SalesCreditMemoLine.Description;
            "Description 2" := SalesCreditMemoLine."Description 2";
            "Unit of Measure" := SalesCreditMemoLine."Unit of Measure";
            Quantity := SalesCreditMemoLine.Quantity;
            "Unit Price" := SalesCreditMemoLine."Unit Price";
            "Unit Cost (LCY)" := SalesCreditMemoLine."Unit Cost (LCY)";
            "VAT %" := SalesCreditMemoLine."VAT %";
            "Line Discount %" := SalesCreditMemoLine."Line Discount %";
            "Line Discount Amount" := SalesCreditMemoLine."Line Discount Amount";
            Amount := SalesCreditMemoLine.Amount;
            "Amount Including VAT" := SalesCreditMemoLine."Amount Including VAT";
            "Allow Invoice Disc." := SalesCreditMemoLine."Allow Invoice Disc.";
            "Gross Weight" := SalesCreditMemoLine."Gross Weight";
            "Net Weight" := SalesCreditMemoLine."Net Weight";
            "Units per Parcel" := SalesCreditMemoLine."Units per Parcel";
            "Unit Volume" := SalesCreditMemoLine."Unit Volume";
            "Appl.-to Item Entry" := SalesCreditMemoLine."Appl.-to Item Entry";
            "Shortcut Dimension 1 Code" := SalesCreditMemoLine."Shortcut Dimension 1 Code";
            "Shortcut Dimension 2 Code" := SalesCreditMemoLine."Shortcut Dimension 2 Code";
            "Price Group Code" := SalesCreditMemoLine."Customer Price Group";
            "Job No." := SalesCreditMemoLine."Job No.";
            "Work Type Code" := SalesCreditMemoLine."Work Type Code";
            "Inv. Discount Amount" := SalesCreditMemoLine."Inv. Discount Amount";
            "Gen. Bus. Posting Group" := SalesCreditMemoLine."Gen. Bus. Posting Group";
            "Gen. Prod. Posting Group" := SalesCreditMemoLine."Gen. Prod. Posting Group";
            "VAT Calculation Type" := SalesCreditMemoLine."VAT Calculation Type";
            "Transaction Type" := SalesCreditMemoLine."Transaction Type";
            "Transport Method" := SalesCreditMemoLine."Transport Method";
            "Attached to Line No." := SalesCreditMemoLine."Attached to Line No.";
            "Exit Point" := SalesCreditMemoLine."Exit Point";
            Area := SalesCreditMemoLine.Area;
            "Transaction Specification" :=SalesCreditMemoLine."Transaction Specification";
            "Tax Area Code" := SalesCreditMemoLine."Tax Area Code";
            "Tax Liable" := SalesCreditMemoLine."Tax Liable";
            "Tax Group Code" := SalesCreditMemoLine."Tax Group Code";
            "VAT Bus. Posting Group" := SalesCreditMemoLine."VAT Bus. Posting Group";
            "VAT Prod. Posting Group" := SalesCreditMemoLine."VAT Prod. Posting Group";
            "Blanket Order No." := SalesCreditMemoLine."Blanket Order No.";
            "Blanket Order Line No." := SalesCreditMemoLine."Blanket Order Line No.";
            "VAT Base Amount" := SalesCreditMemoLine."VAT Base Amount";
            "Unit Cost" := SalesCreditMemoLine."Unit Cost";
            "Variant Code" := SalesCreditMemoLine."Variant Code";
            "Bin Code" := SalesCreditMemoLine."Bin Code";
            "Qty. per Unit of Measure" := SalesCreditMemoLine."Qty. per Unit of Measure";
            "Unit of Measure Code" := SalesCreditMemoLine."Unit of Measure Code";
            "Quantity (Base)" := SalesCreditMemoLine."Quantity (Base)";
            INSERT;
          UNTIL SalesCreditMemoLine.NEXT = 0;
        END;
      END;
    END;

    BEGIN
    END.
  }
}
