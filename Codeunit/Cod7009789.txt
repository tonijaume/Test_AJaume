OBJECT Codeunit 7009789 Funciones Automaticas
{
  OBJECT-PROPERTIES
  {
    Date=11/06/15;
    Time=16:00:02;
    Modified=Yes;
    Version List=AIC2009;
  }
  PROPERTIES
  {
    TableNo=7009930;
    OnRun=VAR
            cICD@1000000000 : Codeunit 7010174;
            cExcelICD@1000000001 : Codeunit 7009783;
            cMacroExc@1000000002 : Codeunit 7010145;
            cMacro@1000000003 : Codeunit 7009754;
          BEGIN
            IF NOT Procesando THEN
            BEGIN
              Procesando := TRUE;
              MODIFY;
              COMMIT;

              CASE Funcion OF
                1: cICD.ExcursionNuevoPeriodo(TRUE);
                2: cICD.TransferNuevoPeriodo(TRUE);
                3: cExcelICD.GenerarExcursionesAutomatico;
                4: cExcelICD.GenerarTransferAutomatico;
                5: cMacroExc.CancelarPetWebColgadas;
                6: cMacro.DepurarAcumulados;
              END;

              Rec.GET(Funcion);
              IF "Hora lanzamiento" <> 0T THEN
                "Ultima Llamada" := CREATEDATETIME(TODAY, "Hora lanzamiento")
              ELSE
                "Ultima Llamada" := CURRENTDATETIME;
              Procesando       := FALSE;
              MODIFY(TRUE);
              COMMIT;
            END;
          END;

  }
  CODE
  {
    VAR
      Text001@1000000000 : TextConst 'ESP=Generar ICD Excusiones';
      Text002@1000000001 : TextConst 'ESP=Generar ICD Transfer';
      Text003@1000000002 : TextConst 'ESP=Generar Excel Reporting Excursiones';
      Text004@1000000003 : TextConst 'ESP=Generar Excel Reporting Transfer';
      Text005@1000000004 : TextConst 'ESP=Cancelar peticiones web caducadas.';
      Text006@1000000005 : TextConst 'ENU=Delete old transfer groups;ESP=Depurar acumulados antiguos';

    PROCEDURE CrearLineasFuncion@1100253019();
    VAR
      lrFunAuto@1000000000 : Record 7009930;
    BEGIN
      // Creamos las l¡neas de funci¢n autom ticamente en la tabla

      InsertarFuncion(1, Text001,  1, lrFunAuto."Unidad Periodicidad"::Dias   ,      0T);
      InsertarFuncion(2, Text002,  1, lrFunAuto."Unidad Periodicidad"::Dias   ,      0T);
      InsertarFuncion(3, Text003,  1, lrFunAuto."Unidad Periodicidad"::Dias   ,      0T);
      InsertarFuncion(4, Text004,  1, lrFunAuto."Unidad Periodicidad"::Dias   ,      0T);
      InsertarFuncion(5, Text005,  1, lrFunAuto."Unidad Periodicidad"::Dias   ,      0T);
      InsertarFuncion(6, Text006,  1, lrFunAuto."Unidad Periodicidad"::Dias   ,      0T);
    END;

    PROCEDURE InsertarFuncion@1100253001(pwFuncNo@1100253001 : Integer;pwDesc@1100253002 : Text[50];pwPeriodicidad@1100253003 : Integer;pwUnidad@1100253004 : Integer;pwHoraInicio@1100253006 : Time);
    VAR
      lrFunAuto@1100253000 : Record 7009930;
    BEGIN
      // InsertarFuncion.

      lrFunAuto.RESET;
      lrFunAuto.SETRANGE(Funcion, pwFuncNo);
      IF lrFunAuto.FINDFIRST THEN
        EXIT;

      CLEAR(lrFunAuto);
      lrFunAuto.Funcion               := pwFuncNo;
      lrFunAuto.Descripcion           := pwDesc;
      lrFunAuto.Periodicidad          := pwPeriodicidad;
      lrFunAuto."Unidad Periodicidad" := pwUnidad;
      lrFunAuto."Hora lanzamiento"    := pwHoraInicio;
      lrFunAuto.Activa                := FALSE;
      lrFunAuto.INSERT(TRUE);
    END;

    BEGIN
    END.
  }
}
