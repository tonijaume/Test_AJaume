OBJECT Codeunit 5931 Resource Skill Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVW16.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1001 : TextConst 'ENU=Do you want to update the skill code on the related items and service items?;ESP=¨Desea actualizar el c¢digo de cualificaci¢n de los productos y productos de servicio relacionados?';
      Text001@1000 : TextConst 'ENU=Do you want to update the skill code on the related service items?;ESP=¨Desea actualizar el c¢digo de cualificaci¢n de los productos de servicio relacionados?';
      Text002@1002 : TextConst 'ENU=Do you want to assign the skill codes of %1 %2 to %3 %4?;ESP=¨Desea asignar los c¢digos de cualificaci¢n de %1 %2 a %3 %4?';
      Text003@1003 : TextConst 'ENU=Do you want to delete skill codes on the related items and service items?;ESP=¨Desea eliminar los c¢digos de cualificaci¢n de los productos y productos de servicio relacionados?';
      Text004@1004 : TextConst 'ENU=Do you want to delete skill codes on the related service items?;ESP=¨Desea eliminar los c¢digos de cualificaci¢n de los productos de servicio relacionados?';
      Text005@1005 : TextConst 'ENU=You have changed the skill code on the item.;ESP=Ha cambiado el c¢digo de cualificaci¢n del producto.';
      Text006@1006 : TextConst 'ENU=How do you want to update the resource skill codes on the related service items?;ESP=¨C¢mo desea actualizar los c¢digos de cualif. de recursos en productos de servicio relacionados?';
      Text007@1007 : TextConst 'ENU=Change the skill codes to the selected value.;ESP=Cambiar los c¢digos de capacidad al valor seleccionado.';
      Text008@1008 : TextConst 'ENU=Delete the skill codes or update their relation.;ESP=Eliminar los c¢digos de capacidad o actualizar su relaci¢n.';
      Text010@1010 : TextConst 'ENU=You have changed the skill code on the service item group.;ESP=Ha cambiado el c¢digo de cualificaci¢n en el grupo de productos de servicio.';
      Text011@1011 : TextConst 'ENU=How do you want to update the resource skill codes on the related items and service items?;ESP=¨C¢mo desea actualizar los c¢digos de cualif. de recursos en productos relacionados y de servicio?';
      Text012@1012 : TextConst 'ENU=Change the skill codes to the selected value.;ESP=Cambiar los c¢digos de capacidad al valor seleccionado.';
      Text013@1013 : TextConst 'ENU=Delete the skill codes or update their relation.;ESP=Eliminar los c¢digos de capacidad o actualizar su relaci¢n.';
      Text015@1015 : TextConst 'ENU=You have deleted the skill code(s) on the item.;ESP=Ha eliminado los c¢digos de cualificaci¢n del producto.';
      Text016@1016 : TextConst 'ENU=How do you want to update the resource skill codes on the related service items?;ESP=¨C¢mo desea actualizar los c¢digos de cualif. de recursos en productos de servicio relacionados?';
      Text017@1017 : TextConst 'ENU=Delete all the related skill codes.;ESP=Eliminar todos los c¢digos de cualificaci¢n relacionados.';
      Text018@1018 : TextConst 'ENU=Leave all the related skill codes.;ESP=Conservar todos los c¢digos de cualificaci¢n relacionados.';
      Text019@1019 : TextConst 'ENU=You have deleted the skill code(s) on the service item group.;ESP=Ha eliminado los c¢digos de cualificaci¢n del grupo de productos de servicio.';
      Text020@1020 : TextConst 'ENU=How do you want to update the resource skill codes on the related items and service items?;ESP=¨C¢mo desea actualizar los c¢digos de cualif. de recursos en productos relacionados y de servicio?';
      Text021@1021 : TextConst 'ENU=Delete all the related skill codes.;ESP=Eliminar todos los c¢digos de cualificaci¢n relacionados.';
      Text022@1022 : TextConst 'ENU=Leave all the related skill codes.;ESP=Conservar todos los c¢digos de cualificaci¢n relacionados.';
      Text023@1023 : TextConst 'ENU=How do you want to update the resource skill codes assigned from Item and Service Item Group?;ESP=¨C¢mo desea actualizar los c¢digos de cualif. de recursos asignados desde grupo prod. y prod. servicio?';
      Text024@1024 : TextConst 'ENU=Delete old skill codes and assign new.;ESP=Eliminar los c¢digos de cualificaci¢n antiguos y asignar nuevos.';
      Text025@1025 : TextConst 'ENU=Leave old skill codes and do not assign new.;ESP=Mantener los c¢digos de cualificaci¢n antiguos sin asignar nuevos.';
      Text026@1026 : TextConst 'ENU=You have changed the service item group assigned to this service item/item.;ESP=Ha cambiado el grupo de productos de servicio asignado a este producto o producto de servicio.';
      Text027@1027 : TextConst 'ENU=You have changed Item No. on this service item.;ESP=Ha cambiado el n§ de producto de este producto de servicio.';
      Text028@1033 : TextConst 'ENU=Do you want to assign the skill codes of the item and its service item group to service item?;ESP=¨Desea asignar al producto de servicio los c¢digos de cualificaci¢n del producto y de su grupo de productos de servicio?';
      Text029@1031 : TextConst 'ENU=How do you want to update the resource skill codes assigned from Service Item Group?;ESP=¨C¢mo desea actualizar los c¢digos de cualif. de recursos asignados desde grupo prod. servicio?';
      SkipValidationDialog@1029 : Boolean;
      Update2@1028 : Boolean;
      AssignCodesWithUpdate@1030 : Boolean;

    PROCEDURE AddResSkill@3(VAR ResSkill@1000 : Record 5956);
    BEGIN
      WITH ResSkill DO BEGIN
        IF (Type = Type::"Service Item Group") OR
           (Type = Type::Item)
        THEN BEGIN
          IF IsRelatedObjectsExist(ResSkill) THEN BEGIN
            IF NOT SkipValidationDialog THEN
              CASE Type OF
                Type::"Service Item Group":
                  IF NOT CONFIRM(Text000,TRUE) THEN
                    EXIT;
                Type::Item:
                  IF NOT CONFIRM(Text001,TRUE) THEN
                    EXIT;
              END;
            AddResSkillWithUpdate(ResSkill);
          END;
        END;
      END;
    END;

    PROCEDURE AddResSkillWithUpdate@6(VAR ResSkill@1001 : Record 5956);
    BEGIN
      CASE ResSkill.Type OF
        ResSkill.Type::"Service Item Group": BEGIN
          AddResSkillToServItems(ResSkill);
          AddResSkillToItems(ResSkill);
        END;
        ResSkill.Type::Item:
          AddResSkillToServItems(ResSkill)
      END;
    END;

    PROCEDURE AddResSkillToServItems@16(VAR ResSkill@1000 : Record 5956);
    VAR
      ServiceItem@1001 : Record 5940;
    BEGIN
      WITH ResSkill DO BEGIN
        CASE Type OF
          Type::"Service Item Group":
            ServiceItem.SETRANGE("Service Item Group Code","No.");
          Type::Item:
            ServiceItem.SETRANGE("Item No.","No.");
        END;
        IF ServiceItem.FIND('-') THEN
          REPEAT
            UnifyResSkillCode(Type::"Service Item",ServiceItem."No.",ResSkill);
          UNTIL ServiceItem.NEXT = 0;
      END;
    END;

    PROCEDURE AddResSkillToItems@9(VAR ResSkill@1001 : Record 5956);
    VAR
      Item@1003 : Record 27;
      AddedResSkill@1000 : Record 5956;
    BEGIN
      WITH Item DO BEGIN
        SETRANGE("Service Item Group",ResSkill."No.");
        IF FIND('-') THEN
          REPEAT
            IF UnifyResSkillCode(ResSkill.Type::Item,"No.",ResSkill) THEN BEGIN
              IF AddedResSkill.GET(AddedResSkill.Type::Item,"No.",ResSkill."Skill Code") THEN
                AddResSkillToServItems(AddedResSkill);
            END;
          UNTIL Item.NEXT = 0;
      END;
    END;

    PROCEDURE UnifyResSkillCode@18(ObjectType@1000 : Integer;ObjectNo@1001 : Code[20];VAR UnifiedResSkill@1004 : Record 5956) : Boolean;
    VAR
      NewResSkill@1003 : Record 5956;
      ExistingResSkill@1006 : Record 5956;
    BEGIN
      WITH NewResSkill DO BEGIN
        IF NOT ExistingResSkill.GET(ObjectType,ObjectNo,UnifiedResSkill."Skill Code") THEN BEGIN
          INIT;
          Type := ObjectType;
          "No." :=  ObjectNo;
          "Skill Code" :=  UnifiedResSkill."Skill Code";

          IF UnifiedResSkill.Type = Type::Item THEN
            "Assigned From" := "Assigned From"::Item;
          IF UnifiedResSkill.Type = Type::"Service Item Group" THEN
            "Assigned From" := "Assigned From"::"Service Item Group";

          IF UnifiedResSkill."Source Type" = "Source Type"::" " THEN BEGIN
            "Source Code" := UnifiedResSkill."No.";
            IF UnifiedResSkill.Type = UnifiedResSkill.Type::Item THEN
              "Source Type" := "Source Type"::Item;
            IF UnifiedResSkill.Type = Type::"Service Item Group" THEN
              "Source Type" := "Source Type"::"Service Item Group";
          END ELSE BEGIN
            "Source Code" := UnifiedResSkill."Source Code";
            "Source Type" := UnifiedResSkill."Source Type";
          END;

          INSERT;
          EXIT(TRUE);
        END;
        EXIT;
      END;
    END;

    PROCEDURE RemoveResSkill@5(VAR ResSkill@1000 : Record 5956) : Boolean;
    VAR
      SelectedOption@1002 : Integer;
      RelatedResSkillsExist@1005 : Boolean;
      Update@1001 : Boolean;
    BEGIN
      RelatedResSkillsExist := IsRelatedResSkillsExist(ResSkill);

      IF NOT SkipValidationDialog THEN BEGIN
        IF RelatedResSkillsExist THEN BEGIN
          CASE ResSkill.Type OF
            ResSkill.Type::Item:
              SelectedOption := RunOptionDialog(Text015,Text016,Text017,Text018);
            ResSkill.Type::"Service Item Group":
              SelectedOption := RunOptionDialog(Text019,Text020,Text021,Text022);
          END;

          CASE SelectedOption OF
            0:
              Update := TRUE;
            1:
              Update := FALSE;
            2:
            BEGIN
              SkipValidationDialog := FALSE;
              Update2 := FALSE;
              ERROR('');
            END;

          END;
        END;
      END ELSE
        Update := Update2;

      IF RelatedResSkillsExist THEN BEGIN
        CASE ResSkill.Type OF
          ResSkill.Type::Item:
            RemoveItemResSkill(ResSkill,Update,FALSE);
          ResSkill.Type::"Service Item Group":
            RemoveServItemGroupResSkill(ResSkill,Update);
        END;
        EXIT(TRUE);
      END;
    END;

    PROCEDURE PrepareRemoveMultipleResSkills@34(VAR ResSkill@1000 : Record 5956);
    VAR
      SelectedOption@1002 : Integer;
    BEGIN
      IF NOT SkipValidationDialog THEN
        IF ResSkill.FIND('-') THEN
          REPEAT
            IF IsRelatedResSkillsExist(ResSkill) THEN BEGIN
              SkipValidationDialog := TRUE;
              CASE ResSkill.Type OF
                ResSkill.Type::Item:
                  SelectedOption := RunOptionDialog(Text015,Text016,Text017,Text018);
                ResSkill.Type::"Service Item Group":
                  SelectedOption := RunOptionDialog(Text019,Text020,Text021,Text022);
              END;

              CASE SelectedOption OF
                0:
                  Update2 := TRUE;
                1:
                  Update2 := FALSE;
                2:
                BEGIN
                  SkipValidationDialog := FALSE;
                  Update2 := FALSE;
                  ERROR('');
                END;
              END;
              EXIT
            END;
          UNTIL ResSkill.NEXT = 0;
    END;

    PROCEDURE RemoveItemResSkill@1(VAR ResSkill@1001 : Record 5956;Update@1002 : Boolean;IsReassigned@1005 : Boolean);
    VAR
      ExistingResSkill@1000 : Record 5956;
      ExistingResSkill2@1004 : Record 5956;
      ServItem@1003 : Record 5940;
    BEGIN
      WITH ExistingResSkill DO BEGIN
        IF NOT IsReassigned THEN BEGIN
          SETCURRENTKEY("Assigned From","Source Type","Source Code");
          SETRANGE("Assigned From","Assigned From"::Item);
          SETRANGE("Source Type","Source Type"::Item);
          SETRANGE("Source Code",ResSkill."No.");
          SETRANGE(Type,Type::"Service Item");
          SETRANGE("Skill Code",ResSkill."Skill Code");
          IF FIND('-') THEN
            IF Update THEN
              DELETEALL
            ELSE
              ConvertResSkillsToOriginal(ExistingResSkill);
        END;

        ServItem.SETCURRENTKEY("Item No.");
        ServItem.SETRANGE("Item No.",ResSkill."No.");
        IF ServItem.FIND('-') THEN
          REPEAT
            RESET;
            SETCURRENTKEY("Assigned From","Source Type","Source Code");
            SETRANGE("Assigned From","Assigned From"::Item);
            SETRANGE("Source Type","Source Type"::"Service Item Group");
            SETRANGE(Type,Type::"Service Item");
            SETRANGE("No.",ServItem."No.");
            SETRANGE("Skill Code",ResSkill."Skill Code");
            IF FIND('-') THEN
              REPEAT
                ExistingResSkill2 := ExistingResSkill;
                IF ServItem."Service Item Group Code" = "Source Code" THEN BEGIN
                  ExistingResSkill2."Assigned From" := "Assigned From"::"Service Item Group";
                  ExistingResSkill2.MODIFY;
                END ELSE BEGIN
                  IF Update THEN
                    ExistingResSkill2.DELETE
                  ELSE
                    IF IsReassigned THEN BEGIN
                      ExistingResSkill2."Source Type" := "Source Type"::Item;
                      ExistingResSkill2."Source Code" := ResSkill."No.";
                      ExistingResSkill2.MODIFY;
                    END ELSE
                      ConvertResSkillToOriginal(ExistingResSkill2,TRUE)
                END;
              UNTIL NEXT = 0;
          UNTIL ServItem.NEXT = 0;
      END;
    END;

    PROCEDURE RemoveServItemGroupResSkill@2(VAR ResSkill@1001 : Record 5956;Update@1000 : Boolean);
    VAR
      ExistingResSkill@1006 : Record 5956;
      ExistingResSkill2@1002 : Record 5956;
      ServItem@1008 : Record 5940;
    BEGIN
      WITH ExistingResSkill DO BEGIN
        IF Update THEN BEGIN
          SETCURRENTKEY("Source Type","Source Code");
          SETRANGE("Source Type","Source Type"::"Service Item Group");
          SETRANGE("Source Code",ResSkill."No.");
          SETRANGE("Skill Code",ResSkill."Skill Code");
          DELETEALL;
        END ELSE BEGIN
          SETCURRENTKEY("Assigned From","Source Type","Source Code");
          SETRANGE("Assigned From","Assigned From"::"Service Item Group");
          SETRANGE("Source Code",ResSkill."No.");
          SETRANGE("Skill Code",ResSkill."Skill Code");
          ConvertResSkillsToOriginal(ExistingResSkill);

          RESET;
          SETCURRENTKEY("Assigned From","Source Type","Source Code");
          SETRANGE("Assigned From","Assigned From"::Item);
          SETRANGE("Source Type","Source Type"::"Service Item Group");
          SETRANGE("Source Code",ResSkill."No.");
          SETRANGE("Skill Code",ResSkill."Skill Code");
          IF FIND('-') THEN
            REPEAT
              IF ServItem.GET("No.") THEN BEGIN
                ExistingResSkill2 := ExistingResSkill;
                ExistingResSkill2."Source Type" := "Source Type"::Item;
                ExistingResSkill2."Source Code" := ServItem."Item No.";
                ExistingResSkill2.MODIFY;
              END;
            UNTIL NEXT = 0;
        END;
      END;
    END;

    PROCEDURE ChangeResSkill@7(VAR ResSkill@1001 : Record 5956;OldSkillCode@1002 : Code[10]) : Boolean;
    VAR
      OldResSkill@1004 : TEMPORARY Record 5956;
      SelectedOption@1003 : Integer;
      Update@1000 : Boolean;
    BEGIN
      OldResSkill := ResSkill;
      OldResSkill."Skill Code" := OldSkillCode;
      WITH ResSkill DO BEGIN
        IF ("Assigned From" <> "Assigned From"::" ") OR
           ("Source Type" <> "Source Type"::" ")
        THEN
          ConvertResSkillToOriginal(ResSkill,FALSE);

        IF IsRelatedResSkillsExist(OldResSkill) THEN BEGIN
          CASE OldResSkill.Type OF
            Type::Item:
              SelectedOption := RunOptionDialog(Text005,Text006,Text007,Text008);
            Type::"Service Item Group":
              SelectedOption := RunOptionDialog(Text010,Text011,Text012,Text013);
            Type::"Service Item":
              SelectedOption := 1;
          END;

          CASE SelectedOption OF
            0:
              Update := TRUE;
            1:
              Update := FALSE;
            2:
            BEGIN
              EXIT;
            END
          END;

          IF Type <> Type::"Service Item" THEN
            IF Update THEN BEGIN
              CASE Type OF
                Type::"Service Item Group":
                  ChangeServItemGroupResSkill(ResSkill,OldSkillCode);
                Type::Item:
                  ChangeItemResSkill(ResSkill,OldSkillCode);
              END;
            END ELSE
              RemoveResSkill(OldResSkill)
        END;
      END;

      EXIT(TRUE);
    END;

    PROCEDURE ChangeServItemGroupResSkill@19(VAR ResSkill@1001 : Record 5956;OldSkillCode@1000 : Code[10]);
    VAR
      ExistingResSkill@1002 : Record 5956;
      ExistingResSkill2@1003 : Record 5956;
      ExistingResSkill3@1004 : Record 5956;
    BEGIN
      WITH ExistingResSkill DO BEGIN
        SETRANGE("Skill Code",OldSkillCode);
        SETRANGE("Source Type","Source Type"::"Service Item Group");
        SETRANGE("Source Code",ResSkill."No.");
        IF FIND('-') THEN
          REPEAT
            ExistingResSkill3 := ExistingResSkill;
            IF NOT ExistingResSkill2.GET(Type,"No.",ResSkill."Skill Code") THEN
              ExistingResSkill3.RENAME(Type,"No.",ResSkill."Skill Code")
            ELSE
              ExistingResSkill3.DELETE;
          UNTIL NEXT = 0;
      END;
    END;

    PROCEDURE ChangeItemResSkill@8(VAR ResSkill@1000 : Record 5956;OldSkillCode@1001 : Code[10]);
    VAR
      ExistingResSkill@1002 : Record 5956;
      ExistingResSkill2@1004 : Record 5956;
      ServItem@1003 : Record 5940;
    BEGIN
      WITH ExistingResSkill DO BEGIN
        ServItem.SETCURRENTKEY("Item No.");
        ServItem.SETRANGE("Item No.",ResSkill."No.");
        IF ServItem.FIND('-') THEN
          REPEAT
            SETRANGE(Type,Type::"Service Item");
            SETRANGE("No.",ServItem."No.");
            SETRANGE("Skill Code",OldSkillCode);
            SETRANGE("Assigned From","Assigned From"::Item);
            IF FIND('-') THEN
              IF NOT ExistingResSkill2.GET(Type,"No.",ResSkill."Skill Code") THEN BEGIN
                RENAME(Type,"No.",ResSkill."Skill Code");
                "Source Type" := "Source Type"::Item;
                "Source Code" := ResSkill."No.";
                MODIFY;
              END ELSE
                DELETE
          UNTIL ServItem.NEXT = 0;
      END;
    END;

    PROCEDURE AssignServItemResSkills@35(VAR ServItem@1000 : Record 5940);
    VAR
      ResSkill@1003 : Record 5956;
      SrcType@1006 : Integer;
    BEGIN
      SrcType := ResSkill.Type::"Service Item";
      AssignRelationWithUpdate(SrcType,ServItem."No.",ResSkill.Type::Item,ServItem."Item No.");
      AssignRelationWithUpdate(SrcType,ServItem."No.",ResSkill.Type::"Service Item Group",ServItem."Service Item Group Code");
    END;

    PROCEDURE AssignRelationConfirmation@22(SrcType@1009 : Integer;SrcCode@1008 : Code[20];DestType@1007 : Integer;DestCode@1006 : Code[20]) : Boolean;
    VAR
      ServItemGroup@1003 : Record 5904;
      ServItem@1002 : Record 5940;
      Item@1001 : Record 27;
      ResSkill@1000 : Record 5956;
      SrcTypeText@1005 : Text[30];
      DestTypeText@1004 : Text[30];
    BEGIN
      WITH ResSkill DO BEGIN
        SETRANGE(Type,DestType);
        SETRANGE("No.",DestCode);
        IF FIND('-') THEN BEGIN
          CASE DestType OF
            Type::"Service Item Group":
              DestTypeText := ServItemGroup.TABLECAPTION;
            Type::Item:
              DestTypeText := Item.TABLECAPTION;
          END;

          CASE SrcType OF
            Type::Item:
              SrcTypeText := Item.TABLECAPTION;
            Type::"Service Item":
              SrcTypeText := ServItem.TABLECAPTION;
          END;

          EXIT(CONFIRM(Text002,TRUE,DestTypeText,DestCode,SrcTypeText,SrcCode));
        END;
      END;
    END;

    PROCEDURE AssignRelationWithUpdate@11(SrcType@1000 : Integer;SrcCode@1001 : Code[20];DestType@1004 : Integer;DestCode@1005 : Code[20]);
    VAR
      OriginalResSkill@1003 : Record 5956;
      AddedResSkill@1007 : Record 5956;
    BEGIN
      WITH OriginalResSkill DO BEGIN
        SETRANGE(Type,DestType);
        SETRANGE("No.",DestCode);
        IF FIND('-') THEN
          REPEAT
            IF UnifyResSkillCode(SrcType,SrcCode,OriginalResSkill) THEN
              IF SrcType = Type::Item THEN BEGIN
                IF AddedResSkill.GET(SrcType,SrcCode,"Skill Code") THEN
                  AddResSkillToServItems(AddedResSkill);
              END;
          UNTIL NEXT = 0
      END;
    END;

    PROCEDURE DeleteItemResSkills@13(ItemNo@1000 : Code[20]);
    VAR
      ExistingResSkill@1001 : Record 5956;
      ExistingResSkill2@1004 : Record 5956;
      ServiceItem@1003 : Record 5940;
      Update@1002 : Boolean;
    BEGIN
      WITH ExistingResSkill DO BEGIN
        SETCURRENTKEY("Source Type","Source Code");
        SETRANGE("Source Type","Source Type"::Item);
        SETRANGE("Source Code",ItemNo);
        IF FIND('-') THEN
          Update := CONFIRM(Text004,TRUE)
        ELSE
          Update := TRUE;

        LOCKTABLE;
        RESET;
        SETRANGE(Type,Type::Item);
        SETRANGE("No.",ItemNo);
        IF FIND('-') THEN BEGIN
          REPEAT
            ExistingResSkill2 := ExistingResSkill;
            RemoveItemResSkill(ExistingResSkill2,Update,FALSE);
            ExistingResSkill2.DELETE;
          UNTIL NEXT = 0;

          ServiceItem.RESET;
          ServiceItem.SETRANGE("Item No.",ItemNo);
          IF ServiceItem.FIND('-') THEN
          REPEAT
            RemoveServItemGroupRelation(
              ServiceItem."No.",
              Update,
              Type::"Service Item");
          UNTIL ServiceItem.NEXT = 0;
        END;
      END;
    END;

    PROCEDURE DeleteServItemGrResSkills@14(ServItemGrCode@1001 : Code[10]);
    VAR
      ExistingResSkill@1003 : Record 5956;
      ExistingResSkill2@1000 : Record 5956;
      Update@1002 : Boolean;
    BEGIN
      WITH ExistingResSkill DO BEGIN
        SETCURRENTKEY("Source Type","Source Code");
        SETRANGE("Source Type","Source Type"::"Service Item Group");
        SETRANGE("Source Code",ServItemGrCode);
        IF FIND('-') THEN
          Update := CONFIRM(Text003,TRUE)
        ELSE
          Update := TRUE;

        LOCKTABLE;
        RESET;
        SETRANGE(Type,Type::"Service Item Group");
        SETRANGE("No.",ServItemGrCode);
        IF FIND('-') THEN
          REPEAT
            ExistingResSkill2 := ExistingResSkill;
            RemoveServItemGroupResSkill(ExistingResSkill2,Update);
            ExistingResSkill2.DELETE;
          UNTIL NEXT = 0;
      END;
    END;

    PROCEDURE DeleteServItemResSkills@17(ServItemNo@1000 : Code[20]);
    VAR
      ExistingResSkill@1001 : Record 5956;
    BEGIN
      WITH ExistingResSkill DO BEGIN
        LOCKTABLE;
        SETRANGE(Type,Type::"Service Item");
        SETRANGE("No.",ServItemNo);
        DELETEALL;
      END;
    END;

    PROCEDURE ChangeRelationWithItem@29(SrcType@1004 : Integer;SrcCode@1003 : Code[20];RelationType@1002 : Integer;DestCode@1001 : Code[20];OriginalCode@1000 : Code[20];ServItemGroupCode@1015 : Code[10]) : Boolean;
    VAR
      Item@1014 : Record 27;
      ExistingResSkill@1008 : Record 5956;
      SelectedOption@1007 : Integer;
      RemoveWithUpdate@1012 : Boolean;
      AssignWithUpdate@1011 : Boolean;
      ResSkillCodesExistRelatedItem@1009 : Boolean;
      ResSkillCodesExistRelatedSIG@1005 : Boolean;
      ResSkillCodesItemExist@1006 : Boolean;
    BEGIN
      IF NOT SkipValidationDialog THEN BEGIN
        WITH ExistingResSkill DO BEGIN
          IF OriginalCode <> '' THEN BEGIN
            SETRANGE(Type,Type::"Service Item");
            SETRANGE("No.",SrcCode);
            SETRANGE("Assigned From","Assigned From"::Item);
            ResSkillCodesExistRelatedItem := FIND('-');
          END;
          IF ServItemGroupCode <> '' THEN BEGIN
            SETRANGE("Assigned From","Assigned From"::"Service Item Group");
            ResSkillCodesExistRelatedSIG := FIND('-');
          END;
          IF ResSkillCodesExistRelatedItem OR ResSkillCodesExistRelatedSIG THEN BEGIN
            SelectedOption := RunOptionDialog(Text027,Text023,Text024,Text025);
            CASE SelectedOption OF
              0:
                RemoveWithUpdate := TRUE;
              1:
                RemoveWithUpdate := FALSE;
              2:
                EXIT;
            END;
            AssignWithUpdate := RemoveWithUpdate;
          END ELSE BEGIN
            IF DestCode <> '' THEN BEGIN
              RESET;
              SETRANGE(Type,Type::Item);
              SETRANGE("No.",DestCode);
              ResSkillCodesItemExist := FIND('-');
              IF NOT ResSkillCodesItemExist THEN
                IF Item.GET(DestCode) THEN
                  IF Item."Service Item Group" <> '' THEN BEGIN
                    SETRANGE(Type,Type::"Service Item Group");
                    SETRANGE("No.",Item."Service Item Group");
                    ResSkillCodesItemExist := FIND('-');
                  END;
              IF ResSkillCodesItemExist THEN
                 AssignWithUpdate := CONFIRM(Text028,TRUE);
            END;
            IF Item.GET(DestCode) AND AssignWithUpdate THEN
              IF Item."Service Item Group" <> '' THEN
                AssignCodesWithUpdate := TRUE;
          END;
        END;
      END ELSE
        AssignWithUpdate := AssignCodesWithUpdate;

      IF ResSkillCodesExistRelatedItem THEN
        RemoveItemRelation(SrcCode,RemoveWithUpdate);

      IF ResSkillCodesExistRelatedSIG THEN
        RemoveServItemGroupRelation(SrcCode,RemoveWithUpdate,SrcType);

      IF (DestCode <> '') AND AssignWithUpdate THEN
        AssignRelationWithUpdate(SrcType,SrcCode,RelationType,DestCode);

      EXIT(TRUE);
    END;

    PROCEDURE ChangeRelationWithGroup@30(SrcType@1004 : Integer;SrcCode@1003 : Code[20];RelationType@1002 : Integer;DestCode@1001 : Code[20];OriginalCode@1000 : Code[20]) : Boolean;
    VAR
      ExistingResSkill@1008 : Record 5956;
      SelectedOption@1007 : Integer;
      AssignWithUpdate@1011 : Boolean;
      RelatedResSkillCodesExist@1009 : Boolean;
      RemoveWithUpdate@1012 : Boolean;
    BEGIN
      IF NOT SkipValidationDialog THEN BEGIN
        WITH ExistingResSkill DO BEGIN
          IF OriginalCode <> '' THEN BEGIN
            SETRANGE(Type,SrcType);
            SETRANGE("No.",SrcCode);
            SETRANGE("Assigned From","Assigned From"::"Service Item Group");
            RelatedResSkillCodesExist := FIND('-');
          END;
          IF RelatedResSkillCodesExist THEN BEGIN
            SelectedOption := RunOptionDialog(Text026,Text029,Text024,Text025);
            CASE SelectedOption OF
              0:
                RemoveWithUpdate := TRUE;
              1:
                RemoveWithUpdate := FALSE;
              2:
                EXIT;
            END;
            AssignWithUpdate := RemoveWithUpdate;
          END ELSE
            IF DestCode <> '' THEN
              AssignWithUpdate := AssignRelationConfirmation(SrcType,SrcCode,RelationType,DestCode);
        END;

      END ELSE
        AssignWithUpdate := AssignCodesWithUpdate;

      IF RelatedResSkillCodesExist THEN
        RemoveServItemGroupRelation(SrcCode,RemoveWithUpdate,SrcType);

      IF (DestCode <> '') AND AssignWithUpdate THEN
        AssignRelationWithUpdate(SrcType,SrcCode,RelationType,DestCode);

      EXIT(TRUE);
    END;

    PROCEDURE RemoveItemRelation@26(SrcCode@1004 : Code[20];RemoveWithUpdate@1002 : Boolean);
    VAR
      ExistingResSkill@1007 : Record 5956;
      ExistingResSkill2@1000 : Record 5956;
      ServItem@1012 : Record 5940;
    BEGIN
      WITH ExistingResSkill DO BEGIN
        SETRANGE(Type,Type::"Service Item");
        SETRANGE("No.",SrcCode);
        SETRANGE("Assigned From","Assigned From"::Item);
        IF FIND('-') THEN
          REPEAT
            ExistingResSkill2 := ExistingResSkill;
            IF ("Source Type" = "Source Type"::Item) THEN BEGIN
              IF RemoveWithUpdate THEN
                ExistingResSkill2.DELETE
              ELSE
                ConvertResSkillsToOriginal(ExistingResSkill);
            END ELSE BEGIN
              IF ServItem.GET("No.") THEN BEGIN
                IF ServItem."Service Item Group Code" = "Source Code" THEN BEGIN
                  ExistingResSkill2."Assigned From" := "Assigned From"::"Service Item Group";
                  ExistingResSkill2.MODIFY;
                END ELSE BEGIN
                  IF RemoveWithUpdate THEN
                    ExistingResSkill2.DELETE
                  ELSE
                    ConvertResSkillToOriginal(ExistingResSkill2,TRUE);
                END;
              END;
            END;
          UNTIL NEXT = 0;
      END;
    END;

    PROCEDURE RemoveServItemGroupRelation@27(SrcCode@1006 : Code[20];RemoveWithUpdate@1004 : Boolean;SrcType@1000 : Integer);
    VAR
      ServItem@1002 : Record 5940;
      ExistingResSkill@1003 : Record 5956;
      ExistingResSkill2@1001 : Record 5956;
    BEGIN
      WITH ExistingResSkill DO BEGIN
        SETRANGE(Type,SrcType);
        SETRANGE("No.",SrcCode);
        SETRANGE("Assigned From","Assigned From"::"Service Item Group");
        IF FIND('-') THEN
          REPEAT
            ExistingResSkill2 := ExistingResSkill;
            IF SrcType = Type::Item THEN
              RemoveItemResSkill(ExistingResSkill2,RemoveWithUpdate,TRUE);
            IF RemoveWithUpdate THEN
              ExistingResSkill2.DELETE
            ELSE BEGIN
              ConvertResSkillToOriginal(ExistingResSkill,TRUE)
            END;
          UNTIL NEXT = 0;
      END;
    END;

    PROCEDURE ConvertResSkillToOriginal@15(VAR ResSkill@1000 : Record 5956;AllowModify@1001 : Boolean);
    BEGIN
      WITH ResSkill DO BEGIN
        "Assigned From" := "Assigned From"::" ";
        "Source Type" := "Source Type"::" ";
        "Source Code" := '';
        IF AllowModify THEN
          MODIFY;
      END;
    END;

    PROCEDURE ConvertResSkillsToOriginal@20(VAR ResSkill@1000 : Record 5956);
    BEGIN
      WITH ResSkill DO BEGIN
        IF FIND('-') THEN
          REPEAT
            ConvertResSkillToOriginal(ResSkill,TRUE);
          UNTIL NEXT = 0
      END;
    END;

    PROCEDURE IsRelatedObjectsExist@4(VAR ResSkill@1000 : Record 5956) : Boolean;
    VAR
      Item@1001 : Record 27;
      ServItem@1002 : Record 5940;
    BEGIN
      WITH ResSkill DO BEGIN
        CASE Type OF
          Type::"Service Item Group": BEGIN
            ServItem.SETCURRENTKEY("Service Item Group Code");
            ServItem.SETRANGE("Service Item Group Code","No.");
            IF ServItem.FIND('-') THEN
              EXIT(TRUE);

            Item.SETCURRENTKEY("Service Item Group");
            Item.SETRANGE("Service Item Group","No.");
            EXIT(Item.FIND('-'));
          END;
          Type::Item: BEGIN
            ServItem.SETCURRENTKEY("Item No.");
            ServItem.SETRANGE("Item No.","No.");
            EXIT(ServItem.FIND('-'));
          END;
        END;
        EXIT
      END;
    END;

    PROCEDURE IsRelatedResSkillsExist@10(VAR ResSkill@1000 : Record 5956) : Boolean;
    VAR
      ExistingResSkill@1001 : Record 5956;
      ServItem@1002 : Record 5940;
    BEGIN
      WITH ExistingResSkill DO BEGIN
        CASE ResSkill.Type OF
          Type::Item:
          BEGIN
            SETCURRENTKEY("Assigned From","Source Type","Source Code");
            SETRANGE("Assigned From","Assigned From"::Item);
            SETRANGE("Source Type","Source Type"::Item);
            SETRANGE("Source Code",ResSkill."No.");
            SETRANGE("Skill Code",ResSkill."Skill Code");
            SETRANGE(Type,Type::"Service Item");
            IF FIND('-') THEN
              EXIT(TRUE);

            ServItem.SETCURRENTKEY("Item No.");
            ServItem.SETRANGE("Item No.",ResSkill."No.");
            IF ServItem.FIND('-') THEN
              REPEAT
                RESET;
                SETCURRENTKEY("Assigned From","Source Type","Source Code");
                SETRANGE("Assigned From","Assigned From"::Item);
                SETRANGE("Source Type","Source Type"::"Service Item Group");
                SETRANGE(Type,Type::"Service Item");
                SETRANGE("No.",ServItem."No.");
                SETRANGE("Skill Code",ResSkill."Skill Code");
                IF FIND('-') THEN
                  EXIT(TRUE);
              UNTIL ServItem.NEXT = 0;
          END;
          Type::"Service Item Group":
          BEGIN
            SETCURRENTKEY("Source Type","Source Code");
            SETRANGE("Source Type","Source Type"::"Service Item Group");
            SETRANGE("Source Code",ResSkill."No.");
            SETRANGE("Skill Code",ResSkill."Skill Code");
            IF FIND('-') THEN
              EXIT(TRUE);
          END;
        END;
      END;
    END;

    PROCEDURE RunOptionDialog@28(ProblemDescription@1004 : Text[200];SolutionProposition@1003 : Text[200];FirstStrategy@1002 : Text[200];SecondStrategy@1001 : Text[200]) : Integer;
    VAR
      SelectedOption@1000 : Integer;
    BEGIN
      SelectedOption := STRMENU(FirstStrategy + ',' + SecondStrategy,0,ProblemDescription + '\ \' + SolutionProposition);

      IF SelectedOption = 0 THEN
        EXIT(2);

      EXIT(SelectedOption - 1);
    END;

    PROCEDURE RevalidateRelation@24(SrcType@1003 : Integer;SrcCode@1002 : Code[20];DestType@1001 : Integer;DestCode@1000 : Code[20]) Confirmation : Boolean;
    VAR
      ResSkill@1004 : Record 5956;
      AssignRelation@1005 : Boolean;
    BEGIN
      IF IsNewCodesAdded(SrcType,SrcCode,DestType,DestCode) THEN BEGIN
        IF NOT SkipValidationDialog THEN
          AssignRelation := RevalidateRelationConfirmation(SrcType,SrcCode,DestType,DestCode)
        ELSE BEGIN
          AssignRelation := TRUE;
        END;
        IF AssignRelation THEN BEGIN
          AssignRelationWithUpdate(SrcType,SrcCode,DestType,DestCode);
          EXIT(TRUE)
        END;
      END;
    END;

    PROCEDURE RevalidateRelationConfirmation@25(SrcType@1003 : Integer;SrcCode@1002 : Code[20];DestType@1001 : Integer;DestCode@1000 : Code[20]) : Boolean;
    VAR
      ServItemGroup@1007 : Record 5904;
      ServItem@1006 : Record 5940;
      Item@1005 : Record 27;
      ResSkill@1004 : Record 5956;
      SrcTypeText@1009 : Text[30];
      DestTypeText@1008 : Text[30];
    BEGIN
      WITH ResSkill DO BEGIN
        CASE DestType OF
          Type::"Service Item Group":
            DestTypeText := ServItemGroup.TABLECAPTION;
          Type::Item:
            DestTypeText := Item.TABLECAPTION;
        END;

        CASE SrcType OF
          Type::Item:
            SrcTypeText := Item.TABLECAPTION;
          Type::"Service Item":
            SrcTypeText := ServItem.TABLECAPTION;
        END;

        EXIT(CONFIRM(Text002,TRUE,DestTypeText,DestCode,SrcTypeText,SrcCode));
      END;
    END;

    PROCEDURE IsNewCodesAdded@32(SrcType@1003 : Integer;SrcCode@1002 : Code[20];DestType@1001 : Integer;DestCode@1000 : Code[20]) : Boolean;
    VAR
      DestResSkill@1004 : Record 5956;
      SrcResSkill@1005 : Record 5956;
    BEGIN
      WITH DestResSkill DO BEGIN
        SETRANGE(Type,DestType);
        SETRANGE("No.",DestCode);
        IF FIND('-') THEN
          REPEAT
            SrcResSkill.SETRANGE(Type,SrcType);
            SrcResSkill.SETRANGE("No.",SrcCode);
            SrcResSkill.SETRANGE("Skill Code","Skill Code");
            IF NOT SrcResSkill.FIND('-') THEN
              EXIT(TRUE);
          UNTIL NEXT = 0
      END;
    END;

    PROCEDURE DropGlobals@21();
    BEGIN
      SkipValidationDialog := FALSE;
      Update2 := FALSE;
    END;

    PROCEDURE SkipValidationDialogs@31();
    BEGIN
      SkipValidationDialog := TRUE;
    END;

    PROCEDURE CloneObjectResourceSkills@33(ObjectType@1000 : Integer;SrcCode@1001 : Code[20];DestCode@1002 : Code[20]);
    VAR
      ResSkill@1003 : Record 5956;
      NewResSkill@1004 : Record 5956;
    BEGIN
      WITH ResSkill DO BEGIN
        SETRANGE(Type,ObjectType);
        SETRANGE("No.",SrcCode);
        IF FIND('-') THEN
          REPEAT
            NewResSkill.INIT;
            NewResSkill := ResSkill;
            NewResSkill."No." := DestCode;
            NewResSkill.INSERT;
          UNTIL NEXT = 0;
      END;
    END;

    BEGIN
    END.
  }
}
