OBJECT Codeunit 7009755 Excel
{
  OBJECT-PROPERTIES
  {
    Date=27/05/15;
    Time=15:42:14;
    Modified=Yes;
    Version List=AIC2009;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      xlApp@1103355004 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00024500-0000-0000-C000-000000000046}:Unknown Automation Server.Application";
      xlLibro@1103355003 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";
      xlHoja@1103355002 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020820-0000-0000-C000-000000000046}:Unknown Automation Server.Worksheet";
      xlRange@1103355001 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";
      xlRange2@1100000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";
      xlRange3@1100003 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";
      xlChart@1100253000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020821-0000-0000-C000-000000000046}:Unknown Automation Server.Chart";
      xlPageSetup@1100253001 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{000208B4-0000-0000-C000-000000000046}:Unknown Automation Server.PageSetup";
      xlCenter@1103355009 : Integer;
      xlEdgeTop@1103355018 : Integer;
      xlEdgeBottom@1103355008 : Integer;
      xlEdgeRight@1103355000 : Integer;
      xlEdgeLeft@1103355017 : Integer;
      xlContinuous@1103355007 : Integer;
      xlThin@1103355020 : Integer;
      xlMedium@1103355006 : Integer;
      xlThick@1103355021 : Integer;
      xlMaxNoCol@1103355005 : Integer;
      txtErrorParRuta@1103355013 : TextConst 'ENU=There has not defined parameter route folder templates;ESP=No se ha definido par metro Ruta Carpeta Plantillas';
      txtErrorFichero@1103355012 : TextConst 'ENU=The file " %1 " does not exist;ESP=El fichero "%1" no existe';
      txtErrorRutaWrk@1103355011 : TextConst 'ENU=Has not defined parameter route folder work;ESP=No se ha definido par metro Ruta Carpeta Trabajo';
      xlPasteFormats@1100001 : Integer;
      xlNone@1100002 : Integer;
      vRutaPlt@1103355015 : Text[1024];
      vRutaTrb@1103355014 : Text[1024];
      txtErroNoPar@1103355016 : TextConst 'ENU=There are no cleared parameters;ESP=No hay par metros definidos';

    PROCEDURE Abrir@1100253003(pwRuta@1100253000 : Text[1024]);
    BEGIN

      IniConstantes;

      CREATE(xlApp);
      xlApp.Visible(FALSE);
      xlLibro := xlApp.Workbooks.Add(pwRuta);
      xlHoja  := xlLibro.Worksheets.Item(1);
      xlRange := xlHoja.Range('A1');
    END;

    PROCEDURE Nuevo@1103355001();
    BEGIN
      // Inicializamos las variables de Excel

      IniConstantes;

      CREATE(xlApp);
      xlApp.Visible(FALSE);
      xlLibro := xlApp.Workbooks.Add;
      xlHoja := xlLibro.Worksheets.Add;
      xlRange := xlHoja.Range('A1');
    END;

    PROCEDURE Guardar@1103355008(pRuta@1103355000 : Text[1024]);
    BEGIN
      // Guardar.
      // Guarda el Excel

      IF EXISTS(pRuta) THEN
        ERASE(pRuta);

      xlApp.Visible(TRUE);
      xlLibro.SaveAs := pRuta;
      CLEARALL;
    END;

    PROCEDURE GuardaryCerrar@1100253001(pRuta@1100253000 : Text[1024]);
    BEGIN
      // GuardaryCerrar.

      IF EXISTS(pRuta) THEN
        ERASE(pRuta);

      xlLibro.SaveAs := pRuta;
      xlApp.Workbooks.Close;
      xlApp.Quit;
      CLEARALL;
    END;

    PROCEDURE Mostrar@1103355002();
    BEGIN
      xlApp.Visible(TRUE);
      xlApp.UserControl(TRUE);
      CLEARALL;
    END;

    PROCEDURE Limpiar@1100011();
    BEGIN
      // Limpiar

      CLEARALL;
    END;

    PROCEDURE CerrarLibro@1100014();
    BEGIN
      // CerrarLibro

      xlLibro.Close;
    END;

    PROCEDURE NuevaHoja@1103355006(par_Nombre@1103355000 : Text[250]);
    BEGIN
      xlHoja := xlLibro.Worksheets.Add;
      IF par_Nombre <> '' THEN
        xlHoja.Name := par_Nombre;
      //xlRange := xlHoja.Range('A1');
    END;

    PROCEDURE NombreHoja@1103355015(par_Nombre@1103355000 : Text[250]);
    BEGIN
      xlHoja.Name := par_Nombre;
    END;

    PROCEDURE ValorCelda@1103355009(par_Fila@1103355000 : Integer;par_Columna@1103355001 : Integer;par_Valor@1103355002 : Text[1024];par_Negrita@1103355003 : Boolean;par_Cursiva@1103355004 : Boolean;par_Subrayado@1103355005 : Boolean);
    BEGIN
      xlRange := xlHoja.Range('A1').Offset(par_Fila-1,par_Columna-1);
      xlRange.Value := par_Valor;
      IF par_Negrita OR par_Cursiva THEN BEGIN
        IF par_Negrita THEN
          xlRange.Font.Bold := 1;
        IF par_Cursiva THEN
          xlRange.Font.Italic := 1;
      END;
      IF par_Subrayado THEN BEGIN
        xlRange.Borders.Item(xlEdgeBottom).LineStyle := xlContinuous;
        xlRange.Borders.Item(xlEdgeBottom).Weight := xlMedium;
      END;
    END;

    PROCEDURE ValorCelda2@1100002(par_Fila@1103355000 : Integer;par_Columna@1103355001 : Integer;par_Valor@1103355002 : Text[1024]);
    BEGIN
      // ValorCelda2
      // M s simple que el anterior

      xlRange := xlHoja.Range('A1').Offset(par_Fila-1,par_Columna-1);
      xlRange.Value := par_Valor;
    END;

    PROCEDURE Celda@1103355010(par_Fila@1103355001 : Integer;par_Columna@1103355000 : Integer);
    BEGIN
      xlRange := xlHoja.Range('A1').Offset(par_Fila-1,par_Columna-1);
    END;

    PROCEDURE CeldaNombre@1100253000(pwNombre@1100253000 : Text[30]);
    BEGIN

      xlRange := xlHoja.Range(pwNombre);
    END;

    PROCEDURE Rango@1103355005(par_DesdeFil@1103355000 : Integer;par_DesdeCol@1103355001 : Integer;par_HastaFil@1103355002 : Integer;par_HastaCol@1103355003 : Integer);
    BEGIN
      xlRange2 := xlHoja.Range('A1').Offset(par_DesdeFil-1,par_DesdeCol-1);
      xlRange3 := xlHoja.Range('A1').Offset(par_HastaFil-1,par_HastaCol-1);
      xlRange := xlHoja.Range(xlRange2,xlRange3);
    END;

    PROCEDURE Valor@1103355011(par_Valor@1103355000 : Text[100]);
    BEGIN
      xlRange.Value := par_Valor;
    END;

    PROCEDURE GetValor@1100010() : Text[250];
    BEGIN
      // GetValor
      // Devuelve el valor en modo texto de la celda

      EXIT(xlRange.Text);
    END;

    PROCEDURE GetValorCelda@1100013(par_Fila@1100001 : Integer;par_Columna@1100000 : Integer) : Text[250];
    BEGIN
      // GetValorCelda
      // Devuelve el valor en modo texto de la celda indicada

      Celda(par_Fila, par_Columna);
      EXIT(GetValor);
    END;

    PROCEDURE Formula@1100003(pwText@1100000 : Text[1024]);
    BEGIN
      // Formula

      xlRange.FormulaR1C1 := pwText;
    END;

    PROCEDURE NumberFormat@1100005(pwText@1100000 : Text[250]);
    BEGIN
      // NumberFormat

      xlRange.NumberFormat := pwText
    END;

    PROCEDURE Negrita@1103355012(par_Valor@1103355000 : Boolean);
    BEGIN
      xlRange.Font.Bold := par_Valor;
    END;

    PROCEDURE Cursiva@1103355013(par_Valor@1103355000 : Boolean);
    BEGIN
      xlRange.Font.Italic := par_Valor;
    END;

    PROCEDURE Subrayado@1103355014();
    BEGIN
      xlRange.Borders.Item(xlEdgeBottom).LineStyle := xlContinuous;
      xlRange.Borders.Item(xlEdgeBottom).Weight := xlMedium;
    END;

    PROCEDURE ColorLetra@1103355033(pwColor@1103355000 : Integer);
    BEGIN
      xlRange.Font.Color := pwColor;
    END;

    PROCEDURE LineaArriba@1103355017(par_Line@1103355000 : Integer);
    BEGIN
      xlRange.Borders.Item(xlEdgeTop).LineStyle := xlContinuous;
      xlRange.Borders.Item(xlEdgeTop).Weight := par_Line;
    END;

    PROCEDURE LineaAbajo@1103355007(par_Line@1103355000 : Integer);
    BEGIN
      xlRange.Borders.Item(xlEdgeBottom).LineStyle := xlContinuous;
      xlRange.Borders.Item(xlEdgeBottom).Weight := par_Line;
    END;

    PROCEDURE LineaDerecha@1103355016(par_Line@1103355000 : Integer);
    BEGIN
      xlRange.Borders.Item(xlEdgeRight).LineStyle := xlContinuous;
      xlRange.Borders.Item(xlEdgeRight).Weight := par_Line;
    END;

    PROCEDURE LineaIzquierda@1103355022(par_Line@1103355000 : Integer);
    BEGIN
      xlRange.Borders.Item(xlEdgeLeft).LineStyle := xlContinuous;
      xlRange.Borders.Item(xlEdgeLeft).Weight := par_Line;
    END;

    PROCEDURE LineaFina@1103355027() : Integer;
    BEGIN
      EXIT(xlThin);
    END;

    PROCEDURE LineaMedia@1103355028() : Integer;
    BEGIN
      EXIT(xlMedium);
    END;

    PROCEDURE LineaGruesa@1103355029() : Integer;
    BEGIN
      EXIT(xlThick);
    END;

    PROCEDURE CentrarTexto@1103355019();
    BEGIN
      xlRange.HorizontalAlignment := xlCenter;
    END;

    PROCEDURE AjustarTexto@1103355021();
    BEGIN
      xlRange.WrapText := TRUE;
    END;

    PROCEDURE FormatoTexto@1103355030(Tipo@1103355004 : Text[100];Identa@1103355001 : Integer;Color@1103355002 : Integer;Tama¤o@1103355003 : Integer;AlHorizontal@1103355005 : Integer;AlVertical@1103355006 : Integer);
    BEGIN
      IF Tipo <> '' THEN
        xlRange.Font.Name := Tipo;
      IF Identa <> 0 THEN
        xlRange.InsertIndent(Identa);
      IF Color <> 0 THEN
        xlRange.Font.Color  := Color;
      IF Tama¤o <> 0 THEN
        xlRange.Font.Size := Tama¤o;
      IF AlHorizontal <> 0 THEN
        xlRange.HorizontalAlignment := AlHorizontal; // 2: izquierda 3 Centro  4 Derecha
      IF AlVertical <> 0 THEN
        xlRange.VerticalAlignment   := AlVertical;
    END;

    PROCEDURE CombinarCeldas@1103355018();
    BEGIN
      xlRange.MergeCells := TRUE;
      xlRange.HorizontalAlignment := xlCenter;
      xlRange.VerticalAlignment := xlCenter;
    END;

    PROCEDURE CombinarSinCentrar@1103355031();
    BEGIN
      xlRange.MergeCells := TRUE;
      //xlRange.VerticalAlignment := xlCenter;
    END;

    PROCEDURE AnchoColumna@1103355020(par_Valor@1103355000 : Decimal);
    BEGIN
      CASE TRUE OF
        par_Valor = 0: xlRange.EntireColumn.AutoFit;
        par_Valor < 0: xlRange.EntireColumn.ColumnWidth := xlHoja.StandardWidth;
        ELSE
          xlRange.ColumnWidth := par_Valor;
      END;
    END;

    PROCEDURE AltoFila@1103355032(par_Valor@1103355000 : Decimal);
    BEGIN
      CASE TRUE OF
        par_Valor = 0: xlRange.EntireRow.AutoFit;
        par_Valor < 0: xlRange.EntireRow.RowHeight := xlHoja.StandardHeight;
        ELSE
          xlRange.RowHeight := par_Valor;
      END;
    END;

    LOCAL PROCEDURE IniConstantes@1103355004();
    BEGIN
      xlCenter := -4108;
      xlEdgeTop := 8;
      xlEdgeBottom := 9;
      xlEdgeRight := 10;
      xlEdgeLeft := 7;
      xlContinuous := 1;
      xlThin := 2;
      xlMedium := -4138;
      xlThick := 4;
      xlMaxNoCol := 256;
      xlPasteFormats := -4122;
      xlNone := -4142;
    END;

    PROCEDURE CopiarRango@1100000(par_aFil@1100003 : Integer;par_aCol@1100002 : Integer);
    BEGIN
      xlRange2 := xlHoja.Range('A1').Offset(par_aFil-1,par_aCol-1);
      xlRange.Copy(xlRange2);
    END;

    PROCEDURE CopiarFormato@1100001(par_aFil@1100001 : Integer;par_aCol@1100000 : Integer);
    BEGIN
      //CopiarRango(par_aFil,par_aCol);
      //xlRange2.ClearContents;

      //xlRange2 := xlHoja.Range(
      //  xlHoja.Range('A1').Offset(par_aFil-1,par_aaCol-1));
      //xlRange2.PasteSpecial(xlPasteFormats, xlNone, FALSE, FALSE);

      xlRange.Copy;
      xlRange2 := xlHoja.Range('A1').Offset(par_aFil-1,par_aCol-1);
      xlRange2.PasteSpecial(xlPasteFormats, xlNone, FALSE, FALSE);
      xlApp.CutCopyMode(0);
    END;

    PROCEDURE ColorFondo@1103355023(pwColor@1103355000 : Integer);
    BEGIN
      xlRange.Interior.Color := pwColor;
    END;

    PROCEDURE ColorIndexFondo@1103355024(pwColor@1103355000 : Integer);
    BEGIN
      xlRange.Interior.ColorIndex := pwColor;
    END;

    PROCEDURE BorraHojas@1103355025();
    VAR
      lwCont@1103355000 : Integer;
    BEGIN
      // borra las hojas existentes. Todas menos una, ya que ha de quedar por lo menos una

      FOR lwCont:= xlLibro.Worksheets.Count DOWNTO 2  DO BEGIN
        xlHoja := xlLibro.Worksheets.Item(lwCont);
        xlHoja.Select;
        xlHoja.Delete;
      END;

      // Seleccionamos la ultima que queda
      xlHoja := xlLibro.Worksheets.Item(1);
      xlHoja.Select;
    END;

    PROCEDURE Bordes@1103355026(pwTipoLinea@1103355000 : Integer;pwGrueso@1103355001 : Integer;pwColor@1103355002 : Integer);
    BEGIN
      // Bordes

      xlRange._BorderAround(pwTipoLinea, pwGrueso, pwColor);
    END;

    PROCEDURE CambiaHoja@1103355034(vHoja@1103355000 : Integer);
    BEGIN
      xlHoja := xlLibro.Worksheets.Item(vHoja);
      xlRange := xlHoja.Range('A1');
    END;

    PROCEDURE LineaDerechaDoble@1103355035(par_Line@1103355000 : Integer);
    BEGIN
      xlRange.Borders.Item(xlEdgeRight).LineStyle := 9.12;
      xlRange.Borders.Item(xlEdgeRight).Weight := par_Line;
    END;

    PROCEDURE ProtegerHoja@1103355036(Password@1103355000 : Text[30]);
    BEGIN
      xlHoja._Protect(Password,1,1,1)
    END;

    PROCEDURE JustificarHoja@1100253002();
    BEGIN

      xlHoja.Columns().AutoFit();
    END;

    PROCEDURE InsertaFila@1100253004(pwDonde@1100253000 : 'Arriba,Abajo');
    VAR
      lwShit@1100253001 : Integer;
      lwCopyOrrign@1100253002 : Integer;
    BEGIN
      // InsertaFila

      CASE pwDonde OF
        pwDonde::Arriba : BEGIN
                            lwShit       := -4162; // xlDoup
                            lwCopyOrrign := 1;  // xlFormatFromRightOrBelow
                          END;
        pwDonde::Abajo  : BEGIN
                            lwShit       := -4121; // xlDown
                            lwCopyOrrign := 0; // xlFormatFromLeftOrAbove
                          END;
      END;

      xlRange2 := xlRange.EntireRow;
      xlRange2.Insert(lwShit, lwCopyOrrign);
    END;

    PROCEDURE GetRangeInf@1100007(pwTipo@1100000 : 'Left,Top,Widht,Height') : Decimal;
    VAR
      lwVal@1100001 : Decimal;
    BEGIN
      // GetRangeInf
      // Devuelve la posici¢nes en pixels del rango seleccionado

      CLEAR(lwVal);
      CASE pwTipo OF
        pwTipo::Left  : lwVal := xlRange.Left;
        pwTipo::Top   : lwVal := xlRange.Top;
        pwTipo::Widht : lwVal := xlRange.Width;
        pwTipo::Height: lwVal := xlRange.Height;
      END;

      EXIT(lwVal);
    END;

    PROCEDURE TEXT_Subrayado@1100006(pwVal@1100000 : Boolean);
    BEGIN
      // TEXT_Subrayado
      // Hace un subrayado de texto

      xlRange.Font.Underline := pwVal;
    END;

    PROCEDURE CHART_CreaGrafico@1100004(pwTipo@1100001 : Integer;pwLeft@1100002 : Decimal;pwTop@1100003 : Decimal;pwWidth@1100004 : Decimal;pwHeight@1100005 : Decimal);
    BEGIN
      // CHART_CreaGrafico
      //  pwTipo
      // "Columna apilada" = 52

      xlChart := xlHoja.Shapes.AddChart(pwTipo,pwLeft,pwTop,pwWidth,pwHeight).Chart;
    END;

    PROCEDURE CHART_OrigenDatos@1100009(pwModo@1100000 : 'Fila,Columna');
    BEGIN
      // CHART_OrigenDatos
      // El origen de datos apuntando al rango seleccionado

      xlChart.SetSourceData(xlRange, pwModo+1);
    END;

    PROCEDURE CHART_Tipo@1100012(pwTipo@1100000 : Integer);
    BEGIN
      // CHART_Tipo
      //
      // "Columna apilada" = 52

      xlChart.ChartType := pwTipo;
    END;

    PROCEDURE CHART_Rotulo@1100008(pwTexto@1100000 : Text[1024]);
    VAR
      xlTit@1100001 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020849-0000-0000-C000-000000000046}:Unknown Automation Server.ChartTitle";
    BEGIN
      // CHART_Rotulo

      xlChart.SetElement(2);
      xlChart.ChartTitle.Text:=pwTexto;
    END;

    PROCEDURE AjustaImpresionHoja@14(par_Area@1103350000 : Text[30];par_Filas@1103350001 : Text[30];par_Columnas@1103350002 : Text[30];par_Zoom@1103350003 : Integer;par_Orientacion@1103350004 : Integer;pwFitToPagesWide@1100253000 : Integer;pwFitToPagesTall@1100253001 : Integer);
    BEGIN


      xlPageSetup := xlHoja.PageSetup;
      IF ISCLEAR(xlPageSetup) THEN
        EXIT;

      WITH xlPageSetup DO BEGIN
        IF par_Area <> '' THEN
          PrintArea := par_Area; //"$B$4:$U$39"
        IF par_Filas <> '' THEN
          PrintTitleRows := par_Filas; // "$1:$3"
        IF par_Columnas <> '' THEN
          PrintTitleColumns := par_Columnas; // "$A:$B"
        IF par_Zoom <> 0 THEN
          Zoom := par_Zoom //56
        ELSE
          Zoom := FALSE;
        IF par_Orientacion <> 0 THEN
          Orientation := par_Orientacion; // xlLandscape=2, Portrait=1
        IF pwFitToPagesWide <> 0 THEN
          FitToPagesWide := pwFitToPagesWide;
        IF pwFitToPagesTall <> 0 THEN
          FitToPagesTall := pwFitToPagesTall;

      END;
    END;

    PROCEDURE GetNombreHoja@1000000000() : Text[250];
    BEGIN
      EXIT(xlHoja.Name);
    END;

    EVENT xlApp@1103355004::NewWorkbook@1565(Wb@1100000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook");
    BEGIN
    END;

    EVENT xlApp@1103355004::SheetSelectionChange@1558(Sh@1100001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1100000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT xlApp@1103355004::SheetBeforeDoubleClick@1559(Sh@1100002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1100001 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";VAR Cancel@1100000 : Boolean);
    BEGIN
    END;

    EVENT xlApp@1103355004::SheetBeforeRightClick@1560(Sh@1100002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1100001 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";VAR Cancel@1100000 : Boolean);
    BEGIN
    END;

    EVENT xlApp@1103355004::SheetActivate@1561(Sh@1100000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT xlApp@1103355004::SheetDeactivate@1562(Sh@1100000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT xlApp@1103355004::SheetCalculate@1563(Sh@1100000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT xlApp@1103355004::SheetChange@1564(Sh@1100001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1100000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT xlApp@1103355004::WorkbookOpen@1567(Wb@1100000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook");
    BEGIN
    END;

    EVENT xlApp@1103355004::WorkbookActivate@1568(Wb@1100000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook");
    BEGIN
    END;

    EVENT xlApp@1103355004::WorkbookDeactivate@1569(Wb@1100000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook");
    BEGIN
    END;

    EVENT xlApp@1103355004::WorkbookBeforeClose@1570(Wb@1100001 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";VAR Cancel@1100000 : Boolean);
    BEGIN
    END;

    EVENT xlApp@1103355004::WorkbookBeforeSave@1571(Wb@1100002 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";SaveAsUI@1100001 : Boolean;VAR Cancel@1100000 : Boolean);
    BEGIN
    END;

    EVENT xlApp@1103355004::WorkbookBeforePrint@1572(Wb@1100001 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";VAR Cancel@1100000 : Boolean);
    BEGIN
    END;

    EVENT xlApp@1103355004::WorkbookNewSheet@1573(Wb@1100001 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Sh@1100000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT xlApp@1103355004::WorkbookAddinInstall@1574(Wb@1100000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook");
    BEGIN
    END;

    EVENT xlApp@1103355004::WorkbookAddinUninstall@1575(Wb@1100000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook");
    BEGIN
    END;

    EVENT xlApp@1103355004::WindowResize@1554(Wb@1100001 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Wn@1100000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020893-0000-0000-C000-000000000046}:Unknown Automation Server.Window");
    BEGIN
    END;

    EVENT xlApp@1103355004::WindowActivate@1556(Wb@1100001 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Wn@1100000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020893-0000-0000-C000-000000000046}:Unknown Automation Server.Window");
    BEGIN
    END;

    EVENT xlApp@1103355004::WindowDeactivate@1557(Wb@1100001 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Wn@1100000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020893-0000-0000-C000-000000000046}:Unknown Automation Server.Window");
    BEGIN
    END;

    EVENT xlApp@1103355004::SheetFollowHyperlink@1854(Sh@1100001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1100000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00024431-0000-0000-C000-000000000046}:Unknown Automation Server.Hyperlink");
    BEGIN
    END;

    EVENT xlApp@1103355004::SheetPivotTableUpdate@2157(Sh@1100001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1100000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT xlApp@1103355004::WorkbookPivotTableCloseConnect@2160(Wb@1100001 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Target@1100000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT xlApp@1103355004::WorkbookPivotTableOpenConnecti@2161(Wb@1100001 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Target@1100000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT xlApp@1103355004::WorkbookSync@2289(Wb@1100001 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";SyncEventType@1100000 : Integer);
    BEGIN
    END;

    EVENT xlApp@1103355004::WorkbookBeforeXmlImport@2290(Wb@1100004 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Map@1100003 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";Url@1100002 : Text[1024];IsRefresh@1100001 : Boolean;VAR Cancel@1100000 : Boolean);
    BEGIN
    END;

    EVENT xlApp@1103355004::WorkbookAfterXmlImport@2291(Wb@1100003 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Map@1100002 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";IsRefresh@1100001 : Boolean;Result@1100000 : Integer);
    BEGIN
    END;

    EVENT xlApp@1103355004::WorkbookBeforeXmlExport@2292(Wb@1100003 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Map@1100002 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";Url@1100001 : Text[1024];VAR Cancel@1100000 : Boolean);
    BEGIN
    END;

    EVENT xlApp@1103355004::WorkbookAfterXmlExport@2293(Wb@1100003 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Map@1100002 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";Url@1100001 : Text[1024];Result@1100000 : Integer);
    BEGIN
    END;

    EVENT xlLibro@1103355003::Open@1923();
    BEGIN
    END;

    EVENT xlLibro@1103355003::Activate@304();
    BEGIN
    END;

    EVENT xlLibro@1103355003::Deactivate@1530();
    BEGIN
    END;

    EVENT xlLibro@1103355003::BeforeClose@1546(VAR Cancel@1100000 : Boolean);
    BEGIN
    END;

    EVENT xlLibro@1103355003::BeforeSave@1547(SaveAsUI@1100001 : Boolean;VAR Cancel@1100000 : Boolean);
    BEGIN
    END;

    EVENT xlLibro@1103355003::BeforePrint@1549(VAR Cancel@1100000 : Boolean);
    BEGIN
    END;

    EVENT xlLibro@1103355003::NewSheet@1550(Sh@1100000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT xlLibro@1103355003::AddinInstall@1552();
    BEGIN
    END;

    EVENT xlLibro@1103355003::AddinUninstall@1553();
    BEGIN
    END;

    EVENT xlLibro@1103355003::WindowResize@1554(Wn@1100000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020893-0000-0000-C000-000000000046}:Unknown Automation Server.Window");
    BEGIN
    END;

    EVENT xlLibro@1103355003::WindowActivate@1556(Wn@1100000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020893-0000-0000-C000-000000000046}:Unknown Automation Server.Window");
    BEGIN
    END;

    EVENT xlLibro@1103355003::WindowDeactivate@1557(Wn@1100000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020893-0000-0000-C000-000000000046}:Unknown Automation Server.Window");
    BEGIN
    END;

    EVENT xlLibro@1103355003::SheetSelectionChange@1558(Sh@1100001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1100000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT xlLibro@1103355003::SheetBeforeDoubleClick@1559(Sh@1100002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1100001 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";VAR Cancel@1100000 : Boolean);
    BEGIN
    END;

    EVENT xlLibro@1103355003::SheetBeforeRightClick@1560(Sh@1100002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1100001 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";VAR Cancel@1100000 : Boolean);
    BEGIN
    END;

    EVENT xlLibro@1103355003::SheetActivate@1561(Sh@1100000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT xlLibro@1103355003::SheetDeactivate@1562(Sh@1100000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT xlLibro@1103355003::SheetCalculate@1563(Sh@1100000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT xlLibro@1103355003::SheetChange@1564(Sh@1100001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1100000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT xlLibro@1103355003::SheetFollowHyperlink@1854(Sh@1100001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1100000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00024431-0000-0000-C000-000000000046}:Unknown Automation Server.Hyperlink");
    BEGIN
    END;

    EVENT xlLibro@1103355003::SheetPivotTableUpdate@2157(Sh@1100001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1100000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT xlLibro@1103355003::PivotTableCloseConnection@2158(Target@1100000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT xlLibro@1103355003::PivotTableOpenConnection@2159(Target@1100000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT xlLibro@1103355003::Sync@2266(SyncEventType@1100000 : Integer);
    BEGIN
    END;

    EVENT xlLibro@1103355003::BeforeXmlImport@2283(Map@1100003 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";Url@1100002 : Text[1024];IsRefresh@1100001 : Boolean;VAR Cancel@1100000 : Boolean);
    BEGIN
    END;

    EVENT xlLibro@1103355003::AfterXmlImport@2285(Map@1100002 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";IsRefresh@1100001 : Boolean;Result@1100000 : Integer);
    BEGIN
    END;

    EVENT xlLibro@1103355003::BeforeXmlExport@2287(Map@1100002 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";Url@1100001 : Text[1024];VAR Cancel@1100000 : Boolean);
    BEGIN
    END;

    EVENT xlLibro@1103355003::AfterXmlExport@2288(Map@1100002 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";Url@1100001 : Text[1024];Result@1100000 : Integer);
    BEGIN
    END;

    EVENT xlHoja@1103355002::SelectionChange@1543(Target@1100000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT xlHoja@1103355002::BeforeDoubleClick@1537(Target@1100001 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";VAR Cancel@1100000 : Boolean);
    BEGIN
    END;

    EVENT xlHoja@1103355002::BeforeRightClick@1534(Target@1100001 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";VAR Cancel@1100000 : Boolean);
    BEGIN
    END;

    EVENT xlHoja@1103355002::Activate@304();
    BEGIN
    END;

    EVENT xlHoja@1103355002::Deactivate@1530();
    BEGIN
    END;

    EVENT xlHoja@1103355002::Calculate@279();
    BEGIN
    END;

    EVENT xlHoja@1103355002::Change@1545(Target@1100000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT xlHoja@1103355002::FollowHyperlink@1470(Target@1100000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00024431-0000-0000-C000-000000000046}:Unknown Automation Server.Hyperlink");
    BEGIN
    END;

    EVENT xlHoja@1103355002::PivotTableUpdate@2156(Target@1100000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT xlChart@1100253000::Activate@304();
    BEGIN
    END;

    EVENT xlChart@1100253000::Deactivate@1530();
    BEGIN
    END;

    EVENT xlChart@1100253000::Resize@256();
    BEGIN
    END;

    EVENT xlChart@1100253000::MouseDown@1531(Button@1100253003 : Integer;Shift@1100253002 : Integer;x@1100253001 : Integer;y@1100253000 : Integer);
    BEGIN
    END;

    EVENT xlChart@1100253000::MouseUp@1532(Button@1100253003 : Integer;Shift@1100253002 : Integer;x@1100253001 : Integer;y@1100253000 : Integer);
    BEGIN
    END;

    EVENT xlChart@1100253000::MouseMove@1533(Button@1100253003 : Integer;Shift@1100253002 : Integer;x@1100253001 : Integer;y@1100253000 : Integer);
    BEGIN
    END;

    EVENT xlChart@1100253000::BeforeRightClick@1534(VAR Cancel@1100253000 : Boolean);
    BEGIN
    END;

    EVENT xlChart@1100253000::BeforeDoubleClick@1537(ElementID@1100253003 : Integer;Arg1@1100253002 : Integer;Arg2@1100253001 : Integer;VAR Cancel@1100253000 : Boolean);
    BEGIN
    END;

    EVENT xlChart@1100253000::Select@235(ElementID@1100253002 : Integer;Arg1@1100253001 : Integer;Arg2@1100253000 : Integer);
    BEGIN
    END;

    EVENT xlChart@1100253000::SeriesChange@1538(SeriesIndex@1100253001 : Integer;PointIndex@1100253000 : Integer);
    BEGIN
    END;

    EVENT xlChart@1100253000::Calculate@279();
    BEGIN
    END;

    BEGIN
    {
      Esta codeunit est  pensada para generar los excels  . La idea es aislar en esta codeunit todos los Automations
      necesarios para generar un EXCEL de modo que en el objeto que se desee crear un excel s¢lo har  falta declarar esta codeunit.

      Se puede consultar un ejemplo de como se utiliza en la funci¢n ListadoResCargoFac de la codeunit 7041688 "Funciones varias Cargo".

      Abrir                  Abre la plantilla
      Nuevo                  Crea un excel nuevo no basada en plantilla (no puede utilizarse la funci¢n "Guardar")
      Guardar                Guarda el fichero excel, antes si existe lo borra
      Mostrar                Muestra el excel sin guardar (necesario si se utiliza la funci¢n "Nuevo")
      ValorCelda             Entrada r pida de valores en celdas con formateo b sico (negrita, cursiva y subrayado)
      Celda                  Se selecciona una celda
      Rango                  Se selecciona un rango
      Valor                  Se asigna un valor al rango seleccionado
      Negrita                Se pone en negrita el rango seleccionado
      Cursiva                Se pone en cursiva el rango seleccionado
      Subrayado              Se subraya el rango seleccionado (realmente se establece una raya en la parte de abajo)
      CentrarTexto           Se centra el texto en el rango seleccionado
      AjustarTexto           Se ajusta el texto en el rango seleccionado (si es necesario se divide el contenido el lineas)
      CombinarCeldas         Se combinan las celdas del rango seleccionado
      AnchoColumna           Se establece el ancho de la columna:
                                0 -> autoajustar al rango
                               <0 -> valor por defecto del ancho de la columna
                               >0 -> nuevo ancho de la columna
      IniConstantes          Funci¢n interna: se establecen las constantes necesarias para aplicar los atributos. En esta
                             funci¢n se a¤adiran las variables que se copien de las macros del excel para facilitar su
                             lectura
      CopiarRango            Se realiza despus de seleccionar un rango o una celda, copia el contenido del rango a la nueva
                             celda (se copia tanto el formato como el contenido)
      CopiarFormato          Se realiza despus de seleccionar un rango o una celda, copia el formato del rango a la nueva
                             celda

      ColorFondo             Rellena el fondo con el color RGB pasado por parametro
      ColorIndexFondo        Rellena el fondo con el color indexado pasado por parametro
      BorraHojas             Borra todas las hojas menos una
      Bordes                 Dibuja los bordes al rango
      FormatoTexto           Tiene 6 parametros

      $001 AJS 18122014 Nueva funcion GetNombreHoja para devolver el nombre de la hoja que estamos actualizando
    }
    END.
  }
}
