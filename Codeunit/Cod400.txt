OBJECT Codeunit 400 SMTP Mail
{
  OBJECT-PROPERTIES
  {
    Date=26/05/15;
    Time=[ 9:26:18];
    Modified=Yes;
    Version List=AIC2009,NAVW15.00.01,PS58334;
  }
  PROPERTIES
  {
    Permissions=TableData 409=r;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      SMTPMailSetup@1003 : Record 409;
      Mail@1000 : Automation "{68AEAA7B-9523-3511-AF5F-F2381D2C6F04} 1.0:{F9DAE2A4-D2F8-37C3-86D5-E4FFE166D860}:Unknown Automation Server.Unknown Class";
      Text001@1001 : TextConst 'ENU=The email address "%1" is invalid.;ESP=La direcci¢n de correo electr¢nico "%1" no es v lida.';
      Text002@1002 : TextConst 'ENU=Attachment %1 does not exist or can not be accessed from the program.;ESP=El adjunto %1 no existe o no se puede obtener acceso a ‚ste desde el programa.';
      Text003@1005 : TextConst 'ENU=The SMTP mail system returned the following error: %1;ESP=El sistema de correo SMTP devolvi¢ el siguiente error: %1';
      ClientSideAutomation@1100217000 : Boolean;

    PROCEDURE CreateMessage@1(SenderName@1008 : Text[100];SenderAddress@1000 : Text[50];Recipients@1001 : Text[1024];Subject@1004 : Text[200];Body@1005 : Text[1024];HtmlFormatted@1006 : Boolean);
    BEGIN
      IF Recipients <> '' THEN
        CheckValidEmailAddresses(Recipients);
      CheckValidEmailAddresses(SenderAddress);
      SMTPMailSetup.GET;
      SMTPMailSetup.TESTFIELD("SMTP Server");
      IF ISCLEAR(Mail) THEN
      // PS58334.BEGIN
        IF NOT ClientSideAutomation THEN
          CREATE(Mail,TRUE,FALSE)
        ELSE
          CREATE(Mail,TRUE,TRUE);
        //-$001CREATE(Mail);
      Mail.FromName := SenderName;
      Mail.FromAddress := SenderAddress;
      Mail."To" := Recipients;
      Mail.Subject := Subject;
      Mail.Body := Body;
      Mail.HtmlFormatted := HtmlFormatted;
    END;

    PROCEDURE Send@3();
    VAR
      Result@1000 : Text[1024];
    BEGIN
      WITH SMTPMailSetup DO
        Result :=
          Mail.Send(
            "SMTP Server",Authentication <> SMTPMailSetup.Authentication::Anonymous,"User ID", Password);
      CLEAR(Mail);
      IF Result <> '' THEN
        ERROR(Text003,Result);
    END;

    PROCEDURE AddRecipients@4(Recipients@1000 : Text[1024]);
    VAR
      Result@1001 : Text[1024];
    BEGIN
      CheckValidEmailAddresses(Recipients);
      Result := Mail.AddRecipients(Recipients);
      IF Result <> '' THEN
        ERROR(Text003,Result);
    END;

    PROCEDURE AddCC@5(Recipients@1000 : Text[1024]);
    VAR
      Result@1001 : Text[1024];
    BEGIN
      CheckValidEmailAddresses(Recipients);
      Result := Mail.AddCC(Recipients);
      IF Result <> '' THEN
        ERROR(Text003,Result);
    END;

    PROCEDURE AddBCC@6(Recipients@1000 : Text[1024]);
    VAR
      Result@1001 : Text[1024];
    BEGIN
      CheckValidEmailAddresses(Recipients);
      Result := Mail.AddBCC(Recipients);
      IF Result <> '' THEN
        ERROR(Text003,Result);
    END;

    PROCEDURE AppendBody@7(BodyPart@1000 : Text[1024]);
    VAR
      Result@1001 : Text[1024];
    BEGIN
      Result := Mail.AppendBody(BodyPart);
      IF Result <> '' THEN
        ERROR(Text003,Result);
    END;

    PROCEDURE AddAttachment@2(Attachment@1000 : Text[260]);
    VAR
      Result@1001 : Text[1024];
    BEGIN
      IF Attachment = '' THEN
        EXIT;
      IF NOT EXISTS(Attachment) THEN
        ERROR(Text002,Attachment);
      Result := Mail.AddAttachments(Attachment);
      IF Result <> '' THEN
        ERROR(Text003,Result);
    END;

    LOCAL PROCEDURE CheckValidEmailAddresses@8(Recipients@1000 : Text[1024]);
    VAR
      s@1002 : Text[1024];
    BEGIN
      IF Recipients = '' THEN
        ERROR(Text001,Recipients);

      s := Recipients;
      WHILE STRPOS(s,';') > 1 DO BEGIN
        CheckValidEmailAddress(COPYSTR(s,1,STRPOS(s,';') - 1));
        s := COPYSTR(s,STRPOS(s,';') + 1);
      END;
      CheckValidEmailAddress(s);
    END;

    LOCAL PROCEDURE CheckValidEmailAddress@12(EmailAddress@1000 : Text[250]);
    VAR
      i@1001 : Integer;
      NoOfAtSigns@1002 : Integer;
    BEGIN
      IF EmailAddress = '' THEN
        ERROR(Text001,EmailAddress);

      IF (EmailAddress[1] = '@') OR (EmailAddress[STRLEN(EmailAddress)] = '@') THEN
        ERROR(Text001,EmailAddress);

      FOR i := 1 TO STRLEN(EmailAddress) DO BEGIN
        IF EmailAddress[i] = '@' THEN
          NoOfAtSigns := NoOfAtSigns + 1;
        IF NOT (
          ((EmailAddress[i] >='a') AND (EmailAddress[i] <='z')) OR
          ((EmailAddress[i] >='A') AND (EmailAddress[i] <='Z')) OR
          ((EmailAddress[i] >='0') AND (EmailAddress[i] <='9')) OR
          (EmailAddress[i] IN ['@','.','-','_']))
        THEN
          ERROR(Text001,EmailAddress);
      END;

      IF NoOfAtSigns <> 1 THEN
        ERROR(Text001,EmailAddress);
    END;

    PROCEDURE SetClientSideAutomation@1020000(ClientSideAutomationParam@1020000 : Boolean);
    BEGIN
      // PS58334.BEGIN
      ClientSideAutomation := ClientSideAutomationParam;
      // PS58334.END
    END;

    BEGIN
    {
      $001 AJS 26052015 La funcion CreateMessage tenia un error creando dos veces el automation
    }
    END.
  }
}
