OBJECT Codeunit 7035328 Funciones Importacion IBZ
{
  OBJECT-PROPERTIES
  {
    Date=11/06/15;
    Time=15:49:36;
    Modified=Yes;
    Version List=TRANSFER,IBZ;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      rPar@1103355002 : Record 7010311;
      rParImp@1103355003 : Record 7010433;
      Nodo@1103355001 : ARRAY [10] OF Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 4.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v4.0'.IXMLDOMNode";
      XML@1103355000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 4.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v4.0'.DOMDocument";
      Text0001@1103355004 : TextConst 'ESP=No se encuentra Archivo %1';
      cImpTRN@1103355005 : Codeunit 7010402;
      wCodCli@1103355006 : Code[10];

    PROCEDURE ImportaXMLIBERO@1103355003(pwNombreArchivo@1103355000 : Text[150]) : Integer;
    VAR
      lrImp@1103355001 : Record 7035333;
      lrLin@1103355003 : Record 7010432;
      lrCab@1103355002 : Record 7010431;
      lrVue@1103355022 : Record 7035391;
      lwCont@1103355004 : ARRAY [10] OF Integer;
      lwTotalP@1103355005 : Integer;
      lwTotalP2@1103355010 : Integer;
      lwTotalLin@1103355023 : Integer;
      lwNoVuel@1103355025 : Integer;
      lwOk@1103355006 : Boolean;
      lText0001@1103355007 : TextConst 'ESP=ProvidersOperative';
      lwOk2@1103355008 : Boolean;
      lText0002@1103355009 : TextConst 'ESP=TransferId';
      lText0003@1103355011 : TextConst 'ESP=Vehicle';
      lText0004@1103355012 : TextConst 'ESP=VehicleType';
      lText0005@1103355013 : TextConst 'ESP=CustomerCode';
      lwSuba@1103355014 : Code[21];
      lwCodSer@1103355017 : Code[10];
      lwGuia@1103355019 : Text[250];
      lwText@1103355015 : Text[1024];
      lText0006@1103355016 : TextConst 'ESP=TransferDate';
      lText0007@1103355018 : TextConst 'ESP=RouteType';
      lText0008@1103355020 : TextConst 'ESP=GuideName';
      lText0009@1103355021 : TextConst 'ESP=Observation';
      lText0010@1103355024 : TextConst 'ESP=Flight';
      lText0011@1103355026 : TextConst 'ESP=CompleteCode';
      lText0012@1103355027 : TextConst 'ESP=FlightDate';
      lText0013@1103355028 : TextConst 'ESP=FlightTime';
      lText0014@1103355029 : TextConst 'ESP=CodeOriginDestiny';
      lText0015@1103355030 : TextConst 'ESP=Action';
      lText0016@1103355031 : TextConst 'ESP=TransferVehicleStop';
      lText0017@1103355032 : TextConst 'ESP=TimePickup';
      lText0018@1103355033 : TextConst 'ESP=LocalizationName';
      lText0019@1103355034 : TextConst 'ESP=PaxBreakDown';
      lText0020@1103355035 : TextConst 'ESP=Action';
      lText0021@1103355036 : TextConst 'ESP=Observations';
      lwCliente@1103355038 : Code[20];
      lwTTOO@1103355037 : Code[10];
      lwCod@1103355039 : Code[20];
      lText0022@1103355040 : TextConst 'ESP=ORIDES_Type';
      lText0023@1103355041 : TextConst 'ESP=VehicleNumber';
      lwCodLin@1103355042 : Code[10];
    BEGIN
      // ImportaXMLIBERO
      // Devuelve el numero de importacion creado

      rPar.FINDFIRST;
      rParImp.GET;

      IF NOT EXISTS(pwNombreArchivo) THEN
        ERROR(Text0001, pwNombreArchivo);

      IF ISCLEAR(XML) THEN
        CREATE(XML);

      IF NOT XML.load(pwNombreArchivo) THEN
        ERROR(Text0001, pwNombreArchivo);

      //  Se crea Historico Importacion
      lrImp.RESET;
      lrImp.INIT;
      lrImp.Archivo := cImpTRN.Extractfilename(pwNombreArchivo);
      lrImp.Tipo    := lrImp.Tipo::Reserva;
      lrImp.INSERT(TRUE);

      lrLin.RESET;

      CLEAR(lwCont);

      Nodo[1] := XML.documentElement;
      lwTotalP := Nodo[1].childNodes.length;
      lwOk := lwTotalP > 0;

      IF lwOk THEN BEGIN
        FOR lwCont[1] := 0 TO (lwTotalP-1) DO BEGIN
          Nodo[2]:= Nodo[1].childNodes.item(lwCont[1]);
          lwOk2 := Nodo[2].nodeName = lText0001;
          IF lwOk2 THEN BEGIN
            lwSuba := LeeNodo(Nodo[2], lText0005);
            lwTTOO:= CreaCodigo(3, lwSuba,'','','');
            wCodCli := lwSuba; // le pongo el mismo codigo de cliente que de ttoo
            lwCliente:= CreaCodigo(2,wCodCli,'','','');

            lrCab.Subagencia    := lwSuba;
            lwTotalP2 := Nodo[2].childNodes.length;
            FOR lwCont[2] := 0 TO (lwTotalP2-1) DO BEGIN
              Nodo[3]:= Nodo[2].childNodes.item(lwCont[2]);
              lwOk2 := Nodo[3].nodeName = lText0003;
              IF lwOk2 THEN BEGIN
                CLEAR(lwNoVuel);
                // *** CABECERA
                CLEAR(lrCab);
                lrCab.Importacion   := lrImp."No Importacion";
                // A la referencia le a¤adimos el numero de vehiculo para hacerla unica
                lwCodLin            := LeeNodo(Nodo[3], lText0023);
                lwText              := LeeNodo(Nodo[3], lText0002);
                lwText              += lwCodLin;
                lrCab.Servicio      := lwText;

                lrCab.Referencia    := lrCab.Servicio;
                lwText              := LeeNodo(Nodo[3], lText0009);
                lwText              := COPYSTR(lwText,1,MAXSTRLEN(lrCab.Observaciones));
                lrCab.Observaciones := lwText;
                lrCab.Agencia       := wCodCli;
                lrCab.Subagencia    := lwSuba;
                lwText              := LeeNodo(Nodo[3], lText0006);
                lrCab.Fecha         := PasaFecha(lwText);
                lrCab.INSERT(TRUE);

                lwCodSer := LeeNodo(Nodo[3], lText0007);
                lwGuia   := LeeNodo(Nodo[3], lText0008);

                lwTotalLin := Nodo[3].childNodes.length;
                FOR lwCont[3] := 0 TO (lwTotalLin-1) DO BEGIN
                  Nodo[4]:= Nodo[3].childNodes.item(lwCont[3]);
                  CASE Nodo[4].nodeName OF
                    // *** VUELOS
                    lText0010 : BEGIN
                      CLEAR(lrVue);
                      lrVue.Importacion    := lrCab.Importacion;
                      lrVue."No. Cabecera" := lrCab."No.";
                      lwNoVuel +=1;
                      lrVue."No. Vuelo"      := lwNoVuel;
                      lrVue."Num Vuelo"      := LeeNodo(Nodo[4], lText0011);
                      lwText                 := LeeNodo(Nodo[4], lText0012);
                      lrVue.Fecha            := PasaFecha(lwText);
                      lwText                 := LeeNodo(Nodo[4], lText0013);
                      lrVue.Hora             := PasaHora(lwText);
                      lrVue.Touroperador     := lwSuba;
                      lwText                 := LeeNodo(Nodo[4], lText0015);
                      IF lwText='S' THEN
                        lrVue."Entrada/Salida" := lrVue."Entrada/Salida"::Salida;
                      lrVue."Fecha llegada vuelo" := lrVue.Fecha;
                      lrVue.IATA             := LeeNodo(Nodo[4], lText0014);
                      AjustaIATA(lrVue);
                      lrVue.INSERT;

                      IF lrCab."Origen/Destino" = '' THEN BEGIN
                        lwText                 := LeeNodo(Nodo[4], lText0022);
                        lrCab."Origen/Destino" := COPYSTR(lwText,1,MAXSTRLEN(lrCab."Origen/Destino"));

                        lrCab.MODIFY;
                      END;
                    END;

                    lText0016 : BEGIN // *** LINEAS DE RECOGIDA
                      CLEAR(lrLin);
                      lrLin.Emp                 := GarajeUsuario;
                      lrLin.Importacion         := lrCab.Importacion;
                      lrLin."No Cabecera"       := lrCab."No.";
                      lrLin.Agencia             := lrCab.Agencia;
                      lrLin.Subagencia          := lrCab.Subagencia;
                      lwText                    := LeeNodo(Nodo[4], lText0017);
                      lrLin."Hora Presentacion" := PasaHora(lwText);
                      lrLin."Nombre Hotel"      := LeeNodo(Nodo[4], lText0018);
                      // JPT 02/06/08 Deciden eliminar la letra del vehiculo en importacion
                      //lrLin.Letra               := lwCodLin;
                      CLEAR(lwCod);
                      CreaCodigo(5, lwCod ,lwCliente,lwTTOO,lrLin."Nombre Hotel");
                      lwText                    := LeeNodo(Nodo[4], lText0019);
                      PasaPax(lwText, lrLin."Numero Adultos", lrLin."Numero Ni¤os");
                      lrLin."Agencia Viaje"     := LeeNodo(Nodo[4], lText0020); // Codigo Servicio
                      CreaCodigo(1,lrLin."Agencia Viaje",lwCliente,lwTTOO,'');
                      lrLin."Observaciones B"   := LeeNodo(Nodo[4], lText0021);
                      lrLin."Nombre Guia"       := COPYSTR(lwGuia,1,MAXSTRLEN(lrLin."Nombre Guia"));
                      lrLin.INSERT(TRUE);
                    END;
                  END;
                END;
              END;
            END;
          END;
        END;
      END;

      cImpTRN.MueveArchivo(lrImp."No Importacion",pwNombreArchivo);
      CLEAR(XML);
      // Devuelve el numero de importacion
      EXIT(lrImp."No Importacion");
    END;

    PROCEDURE LeeNodo@1100222007(VAR NodoEntrada@1100222000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 4.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v4.0'.IXMLDOMNode";pwNombre@1100222001 : Text[30]) : Text[100];
    VAR
      Nodo@1100222003 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 4.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v4.0'.IXMLDOMNode";
    BEGIN

      Nodo := NodoEntrada.selectSingleNode(pwNombre);
      IF NOT ISCLEAR(Nodo) THEN
        EXIT(Nodo.text)
      ELSE
        EXIT('');
      CLEAR(Nodo);
    END;

    PROCEDURE LeeAtributo@1100222017(VAR NodoEntrada@1100222001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 4.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v4.0'.IXMLDOMNode";pwNombre@1100222000 : Text[30]) : Text[250];
    VAR
      Nodo@1100222002 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 4.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v4.0'.IXMLDOMNode";
      TempAttribute@1100222003 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 4.0:{2933BF83-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v4.0'.IXMLDOMNamedNodeMap";
      lwText@1103355000 : Text[250];
    BEGIN
      // LeeAtributo
      Nodo :=  NodoEntrada.attributes.getNamedItem(pwNombre);
      IF NOT ISCLEAR(Nodo) THEN BEGIN
        lwText := Nodo.nodeValue;
        EXIT(lwText);
      END
      ELSE
        EXIT('');
      CLEAR(Nodo);
    END;

    PROCEDURE LeeAtributoTrnc@1103355001(VAR NodoEntrada@1100222001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 4.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v4.0'.IXMLDOMNode";pwNombre@1100222000 : Text[30];pwMax@1103355001 : Integer) : Text[250];
    VAR
      lwText@1103355000 : Text[250];
    BEGIN
      // LeeAtributoTrnc
      // Lee Atributo Truncando. pwMax indica el m ximo de caracteres

      lwText := LeeAtributo(NodoEntrada, pwNombre);
      IF pwMax <> 0 THEN
        lwText := COPYSTR(lwText,1,pwMax);
      EXIT(lwText);
    END;

    PROCEDURE PasaFecha@1103355009(pwText@1103355000 : Text[250]) : Date;
    VAR
      lwFecha@1103355001 : Date;
      lwText2@1103355002 : Text[30];
    BEGIN
      // PasaFecha

      CLEAR(lwFecha);

      lwText2 := COPYSTR(pwText, 9,2) + COPYSTR(pwText, 6,2) + COPYSTR(pwText, 1,4);
      IF NOT EVALUATE(lwFecha, lwText2) THEN
        CLEAR(lwFecha);

      EXIT(lwFecha);
    END;

    PROCEDURE PasaHora@1103355015(pwText@1103355000 : Text[250]) : Time;
    VAR
      lwHora@1103355001 : Time;
      lwText2@1103355002 : Text[30];
    BEGIN
      // PasaHora

      CLEAR(lwHora);

      lwText2 := COPYSTR(pwText, 12,8);
      IF NOT EVALUATE(lwHora, lwText2) THEN
        CLEAR(lwHora);

      EXIT(lwHora);
    END;

    PROCEDURE PasaPax@1103355017(pwText@1103355000 : Text[250];VAR pwAdultos@1103355001 : Integer;VAR pwNi¤os@1103355002 : Integer);
    VAR
      lwText@1103355003 : Text[30];
      lwText2@1103355004 : Text[30];
      lwPos@1103355005 : Integer;
      lwTotal@1103355006 : Integer;
      lwCont@1103355007 : Integer;
    BEGIN
      // PasaPax

      lwText := pwText;

      FOR lwCont := 1 TO 2 DO BEGIN
        CLEAR(lwText2);
        lwPos := STRPOS(lwText,'/');
        IF lwPos <> 0 THEN BEGIN
          IF lwPos > 1 THEN
            lwText2 := COPYSTR(lwText,1, lwPos-1);
          lwText  := COPYSTR(lwText, lwPos+1);
          IF NOT EVALUATE(lwTotal, lwText2) THEN
            CLEAR(lwTotal);

           CASE lwCont OF
             1: pwAdultos := lwTotal;
             2: pwNi¤os   := lwTotal;
           END;
        END;
      END;
    END;

    PROCEDURE CreaCodigo@1103355000(pwTipo@1103355004 : 'Garaje,Codigo Servicio,Cliente,TTOO,Suplemento,Hotel,Extra';VAR pwCodigo@1103355003 : Code[21];pwCliente@1103355002 : Code[20];pwTTOO@1103355001 : Code[10];pwNombre@1103355000 : Text[50]) : Code[20];
    BEGIN
      // CreaCodigo

      EXIT(cImpTRN.CreaCodigo(pwTipo,pwCodigo,pwCliente,pwTTOO,pwNombre));
    END;

    PROCEDURE GarajeUsuario@1103355002() : Code[10];
    VAR
      lrUser@1103355000 : Record 7010420;
      lwGaraje@1103355001 : Code[10];
    BEGIN
      // GarajeUsuario

      CLEAR(lrUser);
      lrUser.GET(USERID);
      lrUser.TESTFIELD("Garaje de trabajo");
      lwGaraje := lrUser."Garaje de trabajo";
      IF lwGaraje = rPar."Todos los garajes" THEN BEGIN
        lrUser.TESTFIELD("Garaje por defecto");
        lwGaraje:= lrUser."Garaje por defecto";
      END;

      EXIT(lwGaraje);
    END;

    PROCEDURE AjustaIATA@1103355007(VAR prVue@1103355000 : Record 7035391);
    VAR
      lwIata@1103355001 : Code[10];
      lwPos@1103355002 : Integer;
      lrSerPar@1103355003 : Record 7010359;
      lwVuelo@1103355004 : Text[30];
    BEGIN
      // AjustaIATA

      lwIata := prVue.IATA;

      lwPos := STRPOS(lwIata,'-');
      CASE prVue."Entrada/Salida" OF
        prVue."Entrada/Salida"::Entrada : lwIata := COPYSTR(lwIata,1,lwPos-1);
        prVue."Entrada/Salida"::Salida  : lwIata := COPYSTR(lwIata,lwPos+1);
      END;

      prVue.IATA := lwIata;
    END;

    EVENT XML@1103355000::ondataavailable@198();
    BEGIN
    END;

    EVENT XML@1103355000::onreadystatechange@-609();
    BEGIN
    END;

    BEGIN
    END.
  }
}
