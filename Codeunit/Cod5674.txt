OBJECT Codeunit 5674 FADimensionManagement
{
  OBJECT-PROPERTIES
  {
    Date=08/06/01;
    Time=12:00:00;
    Version List=NAVW13.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=The combination of dimensions used in %1 %2, %3, %4 is blocked. %5;ESP=La combin. de dimensiones utilizada en %1 %2, %3, %4 est  bloq. %5';
      Text001@1001 : TextConst 'ENU=A dimension used in %1 %2, %3, %4 has caused an error. %5;ESP=La dimensi¢n util. en %1 %2, %3, %4 ha causado error. %5';
      TempJnlLineDim@1002 : TEMPORARY Record 356;
      TempSelectedDim@1003 : TEMPORARY Record 369;
      TempSelectedDim2@1004 : TEMPORARY Record 369;
      TempSelectedDim3@1005 : TEMPORARY Record 369;

    PROCEDURE InsertJnlLineDim@14(TableID@1000 : Integer;TemplateName@1001 : Code[10];BatchName@1002 : Code[10];LineNo@1003 : Integer;VAR TempJnlLineDim@1004 : Record 356);
    VAR
      JnlLineDim@1005 : Record 356;
    BEGIN
      WITH JnlLineDim DO BEGIN
        SETRANGE("Table ID",TableID);
        SETRANGE("Journal Template Name",TemplateName);
        SETRANGE("Journal Batch Name",BatchName);
        SETRANGE("Journal Line No.",LineNo);
        SETRANGE("Allocation Line No.",0);
        DELETEALL(TRUE);
        "Table ID" := TableID;
        "Journal Template Name" := TemplateName;
        "Journal Batch Name" := BatchName;
        "Journal Line No." := LineNo;
        "Allocation Line No." := 0;
        IF TempJnlLineDim.FIND('-') THEN
          REPEAT
            "Dimension Code" := '';
            VALIDATE("Dimension Code",TempJnlLineDim."Dimension Code");
            VALIDATE("Dimension Value Code",TempJnlLineDim."Dimension Value Code");
            INSERT(TRUE);
          UNTIL TempJnlLineDim.NEXT = 0;
      END;
    END;

    PROCEDURE CopyFALedgEntryDimToJnlLineDim@44(TableID@1000 : Integer;EntryNo@1001 : Integer;VAR ToJnlLineDim@1002 : Record 356);
    VAR
      FromLedgEntryDim@1003 : Record 355;
    BEGIN
      ToJnlLineDim.DELETEALL;
      WITH FromLedgEntryDim DO BEGIN
        SETRANGE("Table ID",TableID);
        SETRANGE("Entry No.",EntryNo);
        IF FIND('-') THEN
          REPEAT
            ToJnlLineDim."Dimension Code" := "Dimension Code";
            ToJnlLineDim."Dimension Value Code" := "Dimension Value Code";
            ToJnlLineDim.INSERT;
          UNTIL NEXT = 0;
      END;
    END;

    PROCEDURE GetSelectedDim@2(VAR SelectedDim@1000 : Record 369);
    BEGIN
      CLEAR(TempSelectedDim);
      TempSelectedDim.RESET;
      TempSelectedDim.DELETEALL;
      IF SelectedDim.FIND('-') THEN
        REPEAT
          TempSelectedDim."Dimension Code" := SelectedDim."Dimension Code";
          TempSelectedDim.INSERT;
        UNTIL SelectedDim.NEXT = 0;
    END;

    PROCEDURE GetFALedgEntryDim@1(Type@1000 : Integer;EntryNo@1001 : Integer);
    VAR
      LedgEntryDim@1002 : Record 355;
    BEGIN
      IF Type = 0 THEN BEGIN
        CLEAR(TempSelectedDim2);
        TempSelectedDim2.RESET;
        TempSelectedDim2.DELETEALL;
      END;
      IF Type = 1 THEN BEGIN
        CLEAR(TempSelectedDim3);
        TempSelectedDim3.RESET;
        TempSelectedDim3.DELETEALL;
      END;
      WITH LedgEntryDim DO BEGIN
        SETRANGE("Table ID",DATABASE::"FA Ledger Entry");
        SETRANGE("Entry No.",EntryNo);
        IF FIND('-') THEN
          REPEAT
            TempSelectedDim.SETRANGE("Dimension Code","Dimension Code");
            IF TempSelectedDim.FIND('-') THEN BEGIN
              IF Type = 0 THEN BEGIN
                TempSelectedDim2."Dimension Code" := LedgEntryDim."Dimension Code";
                TempSelectedDim2."New Dimension Value Code" := LedgEntryDim."Dimension Value Code";
                TempSelectedDim2.INSERT;
              END;
              IF Type = 1 THEN BEGIN
                TempSelectedDim3."Dimension Code" := LedgEntryDim."Dimension Code";
                TempSelectedDim3."New Dimension Value Code" := LedgEntryDim."Dimension Value Code";
                TempSelectedDim3.INSERT;
              END;
            END;
          UNTIL NEXT = 0;
      END;
    END;

    PROCEDURE TestEqualFALedgEntryDim@3(EntryNo@1000 : Integer) : Boolean;
    BEGIN
      GetFALedgEntryDim(1,EntryNo);
      IF TempSelectedDim2.COUNT <> TempSelectedDim3.COUNT THEN
        EXIT(FALSE);
      IF TempSelectedDim2.FIND('-') THEN
        REPEAT
          TempSelectedDim3.SETRANGE("Dimension Code",TempSelectedDim2."Dimension Code");
          IF NOT TempSelectedDim3.FIND('-') THEN
            EXIT(FALSE);
          IF TempSelectedDim2."New Dimension Value Code" <> TempSelectedDim3."New Dimension Value Code" THEN
            EXIT(FALSE);
        UNTIL TempSelectedDim2.NEXT = 0;
      EXIT(TRUE);
    END;

    PROCEDURE GetDimensions@4(VAR DimBuf@1000 : Record 360);
    BEGIN
      IF TempSelectedDim2.FIND('-') THEN
        REPEAT
          DimBuf."Dimension Code" := TempSelectedDim2."Dimension Code";
          DimBuf."Dimension Value Code" := TempSelectedDim2."New Dimension Value Code";
          DimBuf.INSERT;
        UNTIL TempSelectedDim2.NEXT = 0;
    END;

    PROCEDURE CheckFAAllocDim@5(VAR FAAlloc@1000 : Record 5615);
    VAR
      DimMgt@1001 : Codeunit 408;
      FAAllocDim@1002 : Record 5648;
      TableID@1003 : ARRAY [10] OF Integer;
      No@1004 : ARRAY [10] OF Code[20];
    BEGIN
      TempJnlLineDim.DELETEALL;
      FAAllocDim.SETRANGE(Code,FAAlloc.Code);
      FAAllocDim.SETRANGE("Allocation Type",FAAlloc."Allocation Type");
      FAAllocDim.SETRANGE("Line No.",FAAlloc."Line No.");
      IF FAAllocDim.FIND('-') THEN
        REPEAT
          TempJnlLineDim."Dimension Code" := FAAllocDim."Dimension Code";
          TempJnlLineDim."Dimension Value Code" := FAAllocDim."Dimension Value Code";
          TempJnlLineDim.INSERT;
        UNTIL FAAllocDim.NEXT = 0;
      IF NOT DimMgt.CheckJnlLineDimComb(TempJnlLineDim) THEN
        ERROR(
          Text000,
          FAAlloc.TABLECAPTION,FAAlloc.Code,FAAlloc."Allocation Type",FAAlloc."Line No.",
          DimMgt.GetDimCombErr);

      TableID[1] := DimMgt.TypeToTableID1(0);
      No[1] := FAAlloc."Account No.";

      IF NOT DimMgt.CheckJnlLineDimValuePosting(TempJnlLineDim,TableID,No) THEN
        ERROR(
          Text001,
          FAAlloc.TABLECAPTION,FAAlloc.Code,FAAlloc."Allocation Type",FAAlloc."Line No.",
          DimMgt.GetDimValuePostingErr);
    END;

    BEGIN
    END.
  }
}
