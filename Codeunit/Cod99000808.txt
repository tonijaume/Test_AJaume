OBJECT Codeunit 99000808 PlanningRoutingManagement
{
  OBJECT-PROPERTIES
  {
    Date=08/06/01;
    Time=12:00:00;
    Version List=NAVW13.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Circular reference in line %1 when calculating %2. Counted sequences %3. Max. sequences %4.;ESP=Referencia circular en linea %1 al calcular %2. Secuencias contadas %3. Num. m ximo de secuencias %4.';
      Text001@1001 : TextConst 'ENU=back;ESP=atr s';
      Text002@1002 : TextConst 'ENU=Actual number of termination processes in line %1 is %2. They should be 1. Check %3.;ESP=N§ real de procesos de finalizaci¢n en linea %1 es %2. Deberia ser 1. Compruebe %3';
      Text003@1003 : TextConst 'ENU=Actual number of start processes in line %1 is %2. They should be 1. Check %3.;ESP=N§ real de procesos de inicio en linea %1 es %2. Deberia ser 1. Compruebe %3.';
      Text004@1004 : TextConst 'ENU=Not all routing lines are sequenced backwards on line %1. Check %2.;ESP=No todas las l¡neas de ruta se ordenan hacia atr s en ruta %1. Compruebe %2.';
      Text005@1005 : TextConst 'ENU=Not all routing lines are sequenced forward on line %1. Check %3.;ESP=No todas las l¡neas de ruta se ordenan hacia adelante en linea %1. Compruebe %3.';
      Text006@1006 : TextConst 'ENU=Previous operations for %1 cannot be found.;ESP=No se encontraron operaciones anteriores para %1.';
      Text007@1007 : TextConst 'ENU=Next operations for %1 cannot be found.;ESP=No se encontraron operaciones posteriores para %1.';
      ErrList@1008 : Text[50];

    PROCEDURE NeedsCalculation@8(WkShName@1000 : Code[10];BatchName@1001 : Code[10];LineNo@1002 : Integer) : Boolean;
    VAR
      PlanningRtngLine@1003 : Record 99000830;
    BEGIN
      PlanningRtngLine.SETRANGE("Worksheet Template Name", WkShName);
      PlanningRtngLine.SETRANGE("Worksheet Batch Name", BatchName);
      PlanningRtngLine.SETRANGE("Worksheet Line No.", LineNo);
      PlanningRtngLine.SETRANGE(Recalculate, TRUE);

      EXIT(PlanningRtngLine.FIND('-'));
    END;

    PROCEDURE ErrorInRouting@1(LineNo@1000 : Integer;Direction@1001 : Text[20];"Actual Sequence"@1002 : Integer;"Max. Sequences"@1003 : Integer);
    BEGIN
      ERROR(
        Text000,
        LineNo,Direction,"Actual Sequence","Max. Sequences");
    END;

    PROCEDURE InsertInErrList@10(PlanningRtngLine@1000 : Record 99000830);
    BEGIN
      IF (STRLEN(ErrList) + STRLEN(PlanningRtngLine."Operation No.") + 1) > MAXSTRLEN(ErrList) THEN
        EXIT;

      IF STRLEN(ErrList) > 0 THEN
        ErrList := ErrList + ',' + PlanningRtngLine."Operation No."
      ELSE
        ErrList := PlanningRtngLine."Operation No.";
    END;

    PROCEDURE SetRtngLineSequenceBack@6(RoutingType@1000 : 'Serial,Parallel';PlanningRtngLine@1001 : Record 99000830;Maxsequences@1002 : Integer;Actsequences@1003 : Integer;TotalCalculation@1004 : Boolean);
    VAR
      PlanningRtngLine2@1005 : Record 99000830;
      SequenceNo@1006 : Integer;
    BEGIN
      IF RoutingType = RoutingType::Parallel THEN BEGIN
        IF (Actsequences - 1) > Maxsequences THEN
          ErrorInRouting(
            PlanningRtngLine."Worksheet Line No.",Text001,Actsequences,Maxsequences);

        IF TotalCalculation THEN
          PlanningRtngLine."Sequence No.(Backward)" := 1
        ELSE
          PlanningRtngLine."Sequence No. (Actual)" := 1;

        PlanningRtngLine2.SETRANGE("Worksheet Template Name", PlanningRtngLine."Worksheet Template Name");
        PlanningRtngLine2.SETRANGE("Worksheet Batch Name", PlanningRtngLine."Worksheet Batch Name");
        PlanningRtngLine2.SETRANGE("Worksheet Line No.", PlanningRtngLine."Worksheet Line No.");
        IF PlanningRtngLine."Next Operation No." <> '' THEN BEGIN
          PlanningRtngLine2.SETFILTER("Operation No.", PlanningRtngLine."Next Operation No.");
          IF PlanningRtngLine2.FIND('-') THEN
            REPEAT
              IF TotalCalculation THEN BEGIN
                IF (PlanningRtngLine2."Sequence No.(Backward)" + 1) > PlanningRtngLine."Sequence No.(Backward)" THEN
                  PlanningRtngLine."Sequence No.(Backward)" := PlanningRtngLine2."Sequence No.(Backward)" + 1;
              END ELSE BEGIN
                IF (PlanningRtngLine2."Sequence No. (Actual)" + 1) > PlanningRtngLine."Sequence No. (Actual)" THEN
                  PlanningRtngLine."Sequence No. (Actual)" := PlanningRtngLine2."Sequence No. (Actual)" + 1;
              END;
            UNTIL PlanningRtngLine2.NEXT = 0;
        END;
        PlanningRtngLine.MODIFY;

        IF PlanningRtngLine."Previous Operation No." <> '' THEN BEGIN
          PlanningRtngLine2.SETFILTER("Operation No.",PlanningRtngLine."Previous Operation No.");
          IF PlanningRtngLine2.FIND('-') THEN
            REPEAT
              SetRtngLineSequenceBack(
                RoutingType,
                PlanningRtngLine2,
                Maxsequences,
                Actsequences + 1,
                TotalCalculation);
            UNTIL PlanningRtngLine2.NEXT = 0;
        END;
      END ELSE BEGIN
        SequenceNo := 1;
        PlanningRtngLine2 := PlanningRtngLine;
        PlanningRtngLine2.SETRANGE("Worksheet Template Name", PlanningRtngLine."Worksheet Template Name");
        PlanningRtngLine2.SETRANGE("Worksheet Batch Name", PlanningRtngLine."Worksheet Batch Name");
        PlanningRtngLine2.SETRANGE("Worksheet Line No.", PlanningRtngLine."Worksheet Line No.");
        IF PlanningRtngLine2.FIND THEN REPEAT
          IF TotalCalculation THEN
            PlanningRtngLine2."Sequence No.(Backward)" := SequenceNo
          ELSE
            PlanningRtngLine2."Sequence No. (Actual)" := SequenceNo;
          PlanningRtngLine2.MODIFY;
          SequenceNo := SequenceNo + 1;
        UNTIL PlanningRtngLine2.NEXT(-1) = 0;
      END;
    END;

    PROCEDURE SetRtngLineSequenceForward@7(RoutingType@1000 : 'Serial,Parallel';PlanningRtngLine@1001 : Record 99000830;MaxSequences@1002 : Integer;ActSequences@1003 : Integer;TotalCalculation@1004 : Boolean);
    VAR
      PlanningRtngLine2@1005 : Record 99000830;
      SequenceNo@1006 : Integer;
    BEGIN
      IF RoutingType = RoutingType::Parallel THEN BEGIN
        IF ActSequences > MaxSequences THEN
          ErrorInRouting(
            PlanningRtngLine."Worksheet Line No.",Text001,ActSequences,MaxSequences);

        IF TotalCalculation THEN
          PlanningRtngLine."Sequence No.(Forward)" := 1
        ELSE
          PlanningRtngLine."Sequence No. (Actual)" := 1;

        PlanningRtngLine2.SETRANGE("Worksheet Template Name",PlanningRtngLine."Worksheet Template Name");
        PlanningRtngLine2.SETRANGE("Worksheet Batch Name",PlanningRtngLine."Worksheet Batch Name");
        PlanningRtngLine2.SETRANGE("Worksheet Line No.",PlanningRtngLine."Worksheet Line No.");
        IF PlanningRtngLine."Previous Operation No." <> '' THEN BEGIN
          PlanningRtngLine2.SETFILTER("Operation No.",PlanningRtngLine."Previous Operation No.");
          IF PlanningRtngLine2.FIND('-') THEN
            REPEAT
              IF TotalCalculation THEN BEGIN
                IF (PlanningRtngLine2."Sequence No.(Forward)" + 1) > PlanningRtngLine."Sequence No.(Forward)" THEN
                  PlanningRtngLine."Sequence No.(Forward)" := PlanningRtngLine2."Sequence No.(Forward)" + 1;
              END ELSE BEGIN
                IF (PlanningRtngLine2."Sequence No. (Actual)" + 1) > PlanningRtngLine."Sequence No. (Actual)" THEN
                  PlanningRtngLine."Sequence No. (Actual)" := PlanningRtngLine2."Sequence No. (Actual)" + 1;
              END;
            UNTIL PlanningRtngLine2.NEXT = 0;
        END;
        PlanningRtngLine.MODIFY;

        IF PlanningRtngLine."Next Operation No." <> '' THEN BEGIN
          PlanningRtngLine2.SETFILTER("Operation No.",PlanningRtngLine."Next Operation No.");
          IF PlanningRtngLine2.FIND('-') THEN
            REPEAT
              SetRtngLineSequenceForward(
                RoutingType,
                PlanningRtngLine2,
                MaxSequences,
                ActSequences + 1,
                TotalCalculation);
            UNTIL PlanningRtngLine2.NEXT = 0;
        END;
      END ELSE BEGIN
        SequenceNo := 1;
        PlanningRtngLine2 := PlanningRtngLine;
        PlanningRtngLine2.SETRANGE("Worksheet Template Name", PlanningRtngLine."Worksheet Template Name");
        PlanningRtngLine2.SETRANGE("Worksheet Batch Name", PlanningRtngLine."Worksheet Batch Name");
        PlanningRtngLine2.SETRANGE("Worksheet Line No.", PlanningRtngLine."Worksheet Line No.");
        IF PlanningRtngLine2.FIND THEN REPEAT
          IF TotalCalculation THEN
            PlanningRtngLine2."Sequence No.(Forward)" := SequenceNo
          ELSE
            PlanningRtngLine2."Sequence No. (Actual)" := SequenceNo;
          PlanningRtngLine2.MODIFY;
          SequenceNo := SequenceNo + 1;
        UNTIL PlanningRtngLine2.NEXT = 0;
      END;
    END;

    PROCEDURE "Calc. Sequence Back"@2(ReqLine@1000 : Record 246);
    VAR
      PlanningRtngLine@1001 : Record 99000830;
      MaxSeq@1002 : Integer;
    BEGIN
      PlanningRtngLine.SETRANGE("Worksheet Template Name",ReqLine."Worksheet Template Name");
      PlanningRtngLine.SETRANGE("Worksheet Batch Name",ReqLine."Journal Batch Name");
      PlanningRtngLine.SETRANGE("Worksheet Line No.",ReqLine."Line No.");

      PlanningRtngLine.MODIFYALL("Sequence No.(Backward)",0);
      PlanningRtngLine.MODIFYALL("Fixed Scrap Qty. (Accum.)",0);
      PlanningRtngLine.MODIFYALL("Scrap Factor % (Accumulated)",0);

      MaxSeq := PlanningRtngLine.COUNT;

      PlanningRtngLine.SETFILTER(PlanningRtngLine."Next Operation No.",'%1','');
      PlanningRtngLine.FIND('-');
      SetRtngLineSequenceBack(ReqLine."Routing Type",PlanningRtngLine,MaxSeq,1,TRUE);
    END;

    PROCEDURE "Calc. Sequence Forward"@3(ReqLine@1000 : Record 246);
    VAR
      PlanningRtngLine@1001 : Record 99000830;
      MaxSeq@1002 : Integer;
    BEGIN
      PlanningRtngLine.SETRANGE("Worksheet Template Name",ReqLine."Worksheet Template Name");
      PlanningRtngLine.SETRANGE("Worksheet Batch Name",ReqLine."Journal Batch Name");
      PlanningRtngLine.SETRANGE("Worksheet Line No.",ReqLine."Line No.");

      PlanningRtngLine.MODIFYALL("Sequence No.(Forward)", 0);

      MaxSeq := PlanningRtngLine.COUNT;

      PlanningRtngLine.SETFILTER(PlanningRtngLine."Previous Operation No.", '%1', '');
      PlanningRtngLine.FIND('-');
      SetRtngLineSequenceForward(ReqLine."Routing Type",PlanningRtngLine,MaxSeq,1,TRUE);
    END;

    PROCEDURE "Calc. Sequence From Actual"@9(PlanningRtngLine@1000 : Record 99000830;Direction@1001 : 'Forward,Backward');
    VAR
      ReqLine@1002 : Record 246;
      PlanningRtngLine2@1003 : Record 99000830;
      MaxSeq@1004 : Integer;
    BEGIN
      ReqLine.GET(
        PlanningRtngLine."Worksheet Template Name",
        PlanningRtngLine."Worksheet Batch Name",
        PlanningRtngLine."Worksheet Line No.");

      IF NeedsCalculation(
           ReqLine."Worksheet Template Name",
           ReqLine."Journal Batch Name",
           ReqLine."Line No.")
      THEN
        Calculate(ReqLine);

      PlanningRtngLine2.SETRANGE("Worksheet Template Name",ReqLine."Worksheet Template Name");
      PlanningRtngLine2.SETRANGE("Worksheet Batch Name",ReqLine."Journal Batch Name");
      PlanningRtngLine2.SETRANGE("Worksheet Line No.",ReqLine."Line No.");
      PlanningRtngLine2.MODIFYALL("Sequence No. (Actual)",0);

      MaxSeq := PlanningRtngLine2.COUNT;

      CASE Direction OF
        Direction::Forward:
          SetRtngLineSequenceForward(ReqLine."Routing Type",PlanningRtngLine,MaxSeq,1,FALSE);
        Direction::Backward:
          SetRtngLineSequenceBack(ReqLine."Routing Type",PlanningRtngLine,MaxSeq,1,FALSE);
      END;
    END;

    PROCEDURE Calculate@4(ReqLine@1000 : Record 246);
    VAR
      PlanningRtngLine@1001 : Record 99000830;
      PlanningRtngLine2@1002 : Record 99000830;
      CalcScrapFactor@1003 : Decimal;
      CalcScrapQty@1004 : Decimal;
      ScrapFactorThis@1005 : Decimal;
      ScrapQtyThis@1006 : Decimal;
    BEGIN
      "Calc. Sequence Back"(ReqLine);
      "Calc. Sequence Forward"(ReqLine);

      PlanningRtngLine.SETCURRENTKEY(
        "Worksheet Template Name",
        "Worksheet Batch Name",
        "Worksheet Line No.",
        "Sequence No.(Backward)");
      PlanningRtngLine.SETRANGE("Worksheet Template Name",ReqLine."Worksheet Template Name");
      PlanningRtngLine.SETRANGE("Worksheet Batch Name",ReqLine."Journal Batch Name");
      PlanningRtngLine.SETRANGE("Worksheet Line No.",ReqLine."Line No.");
      IF PlanningRtngLine.FIND('-') THEN
        REPEAT
          IF PlanningRtngLine."Next Operation No." <> '' THEN BEGIN
            PlanningRtngLine2.SETRANGE("Worksheet Template Name",ReqLine."Worksheet Template Name");
            PlanningRtngLine2.SETRANGE("Worksheet Batch Name",ReqLine."Journal Batch Name");
            PlanningRtngLine2.SETRANGE("Worksheet Line No.",ReqLine."Line No.");
            PlanningRtngLine2.SETFILTER("Operation No.",PlanningRtngLine."Next Operation No.");
            CalcScrapFactor := 0;
            CalcScrapQty := 0;
            IF PlanningRtngLine2.FIND('-') THEN
              REPEAT
                ScrapFactorThis :=
                  PlanningRtngLine2."Scrap Factor % (Accumulated)";
                ScrapQtyThis :=
                  PlanningRtngLine2."Fixed Scrap Qty. (Accum.)";
                CalcScrapFactor := CalcScrapFactor + ScrapFactorThis;
                CalcScrapQty := CalcScrapQty + ScrapQtyThis;
              UNTIL PlanningRtngLine2.NEXT = 0;
          END;
          IF (CalcScrapFactor <> 0) THEN BEGIN
            IF PlanningRtngLine."Scrap Factor %" <> 0 THEN
              CalcScrapFactor :=
                ROUND(((1 + CalcScrapFactor) *
                  (1 + PlanningRtngLine."Scrap Factor %" / 100)), 0.00001) - 1;
          END ELSE
            CalcScrapFactor :=
              ROUND((1 + PlanningRtngLine."Scrap Factor %" / 100), 0.00001) - 1;
          CalcScrapQty := CalcScrapQty + PlanningRtngLine."Fixed Scrap Quantity";
          PlanningRtngLine."Fixed Scrap Qty. (Accum.)" := CalcScrapQty;
          PlanningRtngLine."Scrap Factor % (Accumulated)" := CalcScrapFactor;
          PlanningRtngLine.MODIFY;
        UNTIL PlanningRtngLine.NEXT = 0;

      PlanningRtngLine.MODIFYALL(Recalculate,FALSE);
      Check(ReqLine);
    END;

    PROCEDURE Check@5(ReqLine@1000 : Record 246);
    VAR
      PlanningRtngLine@1001 : Record 99000830;
      PlanningRtngLine2@1002 : Record 99000830;
      NoOfProcesses@1003 : Integer;
    BEGIN
      PlanningRtngLine.SETRANGE("Worksheet Template Name",ReqLine."Worksheet Template Name");
      PlanningRtngLine.SETRANGE("Worksheet Batch Name",ReqLine."Journal Batch Name");
      PlanningRtngLine.SETRANGE("Worksheet Line No.",ReqLine."Line No.");

      PlanningRtngLine.SETFILTER("Next Operation No.",'%1','');

      NoOfProcesses := PlanningRtngLine.COUNT;
      IF NoOfProcesses <> 1 THEN BEGIN
        REPEAT
          InsertInErrList(PlanningRtngLine);
        UNTIL PlanningRtngLine.NEXT = 0;
        ERROR(
          Text002,
          ReqLine."Line No.",
          NoOfProcesses,
          ErrList);
      END;

      PlanningRtngLine.SETFILTER("Previous Operation No.",'%1','');
      PlanningRtngLine.SETRANGE("Next Operation No.");
      NoOfProcesses := PlanningRtngLine.COUNT;
      IF NoOfProcesses <> 1 THEN BEGIN
        REPEAT
          InsertInErrList(PlanningRtngLine);
        UNTIL PlanningRtngLine.NEXT = 0;
        ERROR(
          Text003,
          ReqLine."Line No.",
          NoOfProcesses,
          ErrList);
      END;
      PlanningRtngLine.SETRANGE("Previous Operation No.");

      PlanningRtngLine.SETRANGE("Sequence No.(Backward)", 0);
      IF PlanningRtngLine.FIND('-') THEN BEGIN
        REPEAT
          InsertInErrList(PlanningRtngLine);
        UNTIL PlanningRtngLine.NEXT = 0;
        ERROR(
          Text004,
          ReqLine."Line No.",
          ErrList);
      END;
      PlanningRtngLine.SETRANGE("Sequence No.(Backward)");

      PlanningRtngLine.SETRANGE("Sequence No.(Forward)",0);
      IF PlanningRtngLine.FIND('-') THEN BEGIN
        REPEAT
          InsertInErrList(PlanningRtngLine);
        UNTIL PlanningRtngLine.NEXT = 0;
        ERROR(
          Text005,
          ReqLine."Line No.",
          ErrList);
      END;
      PlanningRtngLine.SETRANGE("Sequence No.(Forward)");

      PlanningRtngLine.SETCURRENTKEY(
        "Worksheet Template Name",
        "Worksheet Batch Name",
        "Worksheet Line No.",
        "Sequence No.(Backward)");
      PlanningRtngLine.SETFILTER("Previous Operation No.",'<>%1','');

      IF PlanningRtngLine.FIND('-') THEN
        REPEAT
          PlanningRtngLine2.SETRANGE("Worksheet Template Name",ReqLine."Worksheet Template Name");
          PlanningRtngLine2.SETRANGE("Worksheet Batch Name",ReqLine."Journal Batch Name");
          PlanningRtngLine2.SETRANGE("Worksheet Line No.",ReqLine."Line No.");
          PlanningRtngLine2.SETFILTER("Operation No.",PlanningRtngLine."Previous Operation No.");
          IF NOT PlanningRtngLine2.FIND('-') THEN
            ERROR(
              Text006,
              PlanningRtngLine."Operation No.");
        UNTIL PlanningRtngLine.NEXT = 0;

      PlanningRtngLine.SETCURRENTKEY(
        "Worksheet Template Name",
        "Worksheet Batch Name",
        "Worksheet Line No.",
        "Sequence No.(Backward)");

      PlanningRtngLine.SETFILTER("Next Operation No.",'<>%1','');
      PlanningRtngLine.SETRANGE("Operation No.");

      IF PlanningRtngLine.FIND('-') THEN
        REPEAT
          PlanningRtngLine2.SETRANGE("Worksheet Template Name",ReqLine."Worksheet Template Name");
          PlanningRtngLine2.SETRANGE("Worksheet Batch Name",ReqLine."Journal Batch Name");
          PlanningRtngLine2.SETRANGE("Worksheet Line No.",ReqLine."Line No.");
          PlanningRtngLine2.SETFILTER("Operation No.",PlanningRtngLine."Next Operation No.");
          IF NOT PlanningRtngLine2.FIND('-') THEN
            ERROR(Text007,PlanningRtngLine."Worksheet Line No.");
        UNTIL PlanningRtngLine.NEXT = 0;
    END;

    BEGIN
    END.
  }
}
