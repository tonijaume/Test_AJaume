OBJECT Codeunit 7009783 Generar Excel Reporting ICD
{
  OBJECT-PROPERTIES
  {
    Date=11/06/15;
    Time=[ 7:13:36];
    Modified=Yes;
    Version List=AIC2009,OC-14044;
  }
  PROPERTIES
  {
    Permissions=TableData 79=r,
                TableData 2000000006=r;
    OnRun=VAR
            lrPeriodo@1100217000 : Record 7010264;
          BEGIN
            //GenerarExcursionesAutomatico;

            lrPeriodo.SETRANGE("Tipo periodo", lrPeriodo."Tipo periodo"::Transfer);
            IF lrPeriodo.FINDLAST THEN
              GenerarExcelTransfer(lrPeriodo, 2, TRUE);
          END;

  }
  CODE
  {
    VAR
      rCompany@1100217041 : Record 2000000006;
      rPar@1100217052 : Record 7009700;
      rParPer@1100217054 : Record 7009701;
      Text001@1100217001 : TextConst 'ENU=Select the period of dates;ESP=Introduzca periodo de fechas';
      Text002@1100217002 : TextConst 'ENU=Date From #1########;ESP=Fecha desde #1########';
      Text003@1100217003 : TextConst 'ENU=To date #2########;ESP=Fecha hasta #2########';
      Text004@1100217004 : TextConst 'ENU=Sale Date;ESP=Fecha venta';
      Text005@1100217005 : TextConst 'ENU=Touroperator;ESP=Touroperador';
      Text006@1100217006 : TextConst 'ENU=Touroperator Name;ESP=Nombre Touroperador';
      Text007@1100217007 : TextConst 'ENU=Ticket;ESP=Ticket';
      Text008@1100217008 : TextConst 'ENU=Sale Person;ESP=Representante';
      Text009@1100217009 : TextConst 'ENU=Sale Guide name;ESP=Nombre guia venta';
      Text010@1100217010 : TextConst 'ENU=Excursion;ESP=Excursion';
      Text011@1100217011 : TextConst 'ENU=Excursion Name;ESP=Nombre excursion';
      Text012@1100217012 : TextConst 'ENU=Service date;ESP=Fecha Excursion';
      Text013@1100217013 : TextConst 'ENU=Language;ESP=Idioma';
      Text014@1100217014 : TextConst 'ENU=Market;ESP=Mercado';
      Text015@1100217015 : TextConst 'ENU=Adults;ESP=Adultos';
      Text016@1100217016 : TextConst 'ENU=Childs;ESP=Ni¤os';
      Text017@1100217017 : TextConst 'ENU=Hotel;ESP=Hotel';
      Text018@1100217018 : TextConst 'ENU=Hotel name;ESP=Nombre hotel';
      Text019@1100217019 : TextConst 'ENU=Hotel zone;ESP=Zona hotel';
      Text020@1100217020 : TextConst 'ENU=Adult price;ESP=Precio adulto';
      Text021@1100217021 : TextConst 'ENU=Child price;ESP=Precio ni¤o';
      Text022@1100217022 : TextConst 'ENU=Reservation income;ESP=Ingreso reserva';
      Text023@1100217023 : TextConst 'ENU=Net reservation income;ESP=Ingreso reserva neto';
      Text024@1100217024 : TextConst 'ENU=Free adults;ESP=Adultos invitados';
      Text025@1100217025 : TextConst 'ENU=Free childs;ESP=Ni¤os invitados';
      Text026@1100217026 : TextConst 'ENU=Liquidated Sale guide;ESP=Liquidado Guia venta';
      Text027@1100217027 : TextConst 'ENU=Liquidation No.;ESP=Num. Liquidacion';
      Text028@1100217028 : TextConst 'ENU=Liquidation Date;ESP=Fecha liquidacion';
      Text029@1100217029 : TextConst 'ENU=Refund;ESP=Reembolsada';
      Text030@1100217030 : TextConst 'ENU=Liquidation refund;ESP=Liquidacion reembolso';
      Text031@1100217031 : TextConst 'ENU=Refund liquidation date;ESP=Fecha liquidacion reembolso';
      Text032@1100217032 : TextConst 'ENU=Net cost;ESP=Coste neto';
      Text033@1100217033 : TextConst 'ENU=Touroperator commission;ESP=Comision Touroperador';
      Text034@1100217034 : TextConst 'ENU=Commission discount over invoice;ESP=Comision descuenta en factura';
      Text035@1100217035 : TextConst 'ENU=Credit Sale;ESP=Venta a credito';
      Text036@1100217036 : TextConst 'ENU=Sale Person commission;ESP=Comision Representante';
      Text037@1100217037 : TextConst 'ENU=Vendor name;ESP=Nombre proveedor';
      Text038@1100217038 : TextConst 'ENU=Sale office;ESP=Oficina de venta';
      Text039@1100217039 : TextConst 'ENU=Invoice No.;ESP=Factura venta';
      Text040@1100217040 : TextConst 'ENU=Credit memo Refund;ESP=Abono reembolso';
      Text041@1100217042 : TextConst 'ENU=Refund date;ESP=Fecha Reembolso';
      rPeriodo@1000000000 : Record 7010264;
      cExcel@1100217082 : Codeunit 7009755;
      wLinea@1100217043 : Integer;
      Text042@1100217044 : TextConst 'ENU=Sale country;ESP=Pais venta';
      Text043@1100217045 : TextConst 'ENU=Zone name;ESP=Nombre zona';
      wTotal@1100217046 : Integer;
      wActual@1100217047 : Integer;
      Text044@1100217048 : TextConst 'ESP=Preparando datos de #1############################';
      Text045@1100217049 : TextConst 'ENU=Refund amount;ESP=Importe Reembolsado';
      Text046@1100217050 : TextConst 'ENU=Company;ESP=Compa¤ia';
      Text047@1100217051 : TextConst 'ENU=Confirmed cost;ESP=Coste confirmado';
      Text048@1100217055 : TextConst 'ENU=Arrival date;ESP=Fecha entrada';
      Text049@1100217056 : TextConst 'ENU=Airline;ESP=Compa¤ia aerea';
      Text050@1100217057 : TextConst 'ENU=Flight Number;ESP=Numero Vuelo';
      Text051@1100217058 : TextConst 'ENU=Flight;ESP=Vuelo';
      Text052@1100217059 : TextConst 'ENU=Private transfer;ESP=Transfer privado';
      Text053@1100217060 : TextConst 'ENU=Arrival Adults;ESP=Adultos entrada';
      Text054@1100217061 : TextConst 'ENU=Arrival Childs;ESP=Ni¤os entrada';
      Text055@1100217062 : TextConst 'ENU=Sale Zone;ESP=Zona venta';
      Text056@1100217063 : TextConst 'ENU=Purchase zone;ESP=Zona compra';
      Text057@1100217064 : TextConst 'ENU=Arrival Incomes;ESP=Ingresos entrada';
      Text058@1100217065 : TextConst 'ENU=Arrival Costs;ESP=Costes entrada';
      Text059@1100217066 : TextConst 'ENU=Airport;ESP=Aeropuerto';
      Text060@1100217067 : TextConst 'ENU=Validated cost;ESP=Coste Validado';
      Text061@1100217068 : TextConst 'ENU=Cost manual adjustments;ESP=Ajustes manuales de coste';
      Text062@1100217072 : TextConst 'ENU=Departure Adults;ESP=Adultos salida';
      Text063@1100217071 : TextConst 'ENU=Departure Childs;ESP=Ni¤os salida';
      Text064@1100217074 : TextConst 'ENU=Departure Incomes;ESP=Ingresos salida';
      Text065@1100217073 : TextConst 'ENU=Departure Costs;ESP=Costes salida';
      Text066@1100217075 : TextConst 'ENU=Arrival;ESP=Llegada';
      Text067@1100217076 : TextConst 'ENU=Separated;ESP=Separado';
      Text068@1100217077 : TextConst 'ENU=Billing Method;ESP=Tipo facturacion';
      Text069@1100217078 : TextConst 'ENU=Liquidation date;ESP=Fecha liquidacion';
      Text070@1100217079 : TextConst 'ENU=Invoice Posting date;ESP=Fecha registro factura';
      Text071@1100217080 : TextConst 'ESP=Llegadas hotel';
      Text072@1100217081 : TextConst 'ENU=Transfers in destination;ESP=Traslados en destino';
      Text073@1100217083 : TextConst 'ENU=Reservations Quantity;ESP=Cantidad Reservas';

    PROCEDURE GenerarExcelExcursiones@1100217000(prPeriodo@1100217000 : Record 7010264;pwOpcion@1100217002 : 'Completo,Pais,Empresa';pwGuardar@1000000000 : Boolean);
    VAR
      lrICDIngreso@1100217011 : Record 7010261;
      lrICDCosteTMP@1100217014 : TEMPORARY Record 7010262;
      lrICDEstanciaTMP@1100217017 : TEMPORARY Record 7010263;
      lrCompanyInfo@1100217004 : Record 79;
      lrCompanyActual@1100217003 : Record 79;
      lwDialog@1100217001 : Dialog;
      lwID@1100217012 : Integer;
      lwValidado@1100217015 : Decimal;
      lwAjustes@1100217016 : Decimal;
      lwNombreFichero@1000000001 : Text[30];
    BEGIN
      // GenerarExcelExcursiones

      lrICDCosteTMP.RESET;
      lrICDCosteTMP.DELETEALL;

      lrICDEstanciaTMP.RESET;
      lrICDEstanciaTMP.DELETEALL;

      //. Buscamos los datos de informacion empresa para poder hacer la seleccion por pais si es necesario
      lrCompanyActual.FINDFIRST;

      //. Para cada empresa exportamos la informacion
      rCompany.RESET;
      IF pwOpcion = pwOpcion::Empresa THEN
        rCompany.SETRANGE(Name, COMPANYNAME);
      rCompany.FINDSET;
      _LineaCabecera;
      REPEAT
        lrCompanyInfo.CHANGECOMPANY(rCompany.Name);
        IF NOT lrCompanyInfo.FINDFIRST THEN
          CLEAR(lrCompanyInfo);

        IF (pwOpcion = pwOpcion::Completo) OR
           (lrCompanyActual."Country/Region Code" = lrCompanyInfo."Country/Region Code") THEN
        BEGIN
          lwDialog.OPEN(Text044 + '\' + '@2@@@@@@@@@@@@@@@@@@');
          lwDialog.UPDATE(1, rCompany.Name);

          rPar.CHANGECOMPANY(rCompany.Name);
          rPar.FINDFIRST;

          rParPer.CHANGECOMPANY(rCompany.Name);
          rParPer.FINDFIRST;

          //. Recorremos la tabla temporal para exportar a excel

          lrICDIngreso.RESET;
          lrICDIngreso.CHANGECOMPANY(rCompany.Name);
          lrICDIngreso.SETRANGE("Fecha excursion", prPeriodo."Fecha inicio", prPeriodo."Fecha final");

          wTotal  := lrICDIngreso.COUNT;
          wActual := 0;

          IF lrICDIngreso.FINDSET THEN
          BEGIN
            REPEAT
              wActual += 1;
              lwDialog.UPDATE(2, ROUND(wActual / wTotal * 10000, 1));

              wLinea += 1;

              cExcel.ValorCelda2(wLinea, 1, FORMAT(lrICDIngreso."Fecha venta"));
              cExcel.ValorCelda2(wLinea, 2, lrICDIngreso.Touroperador);
              cExcel.ValorCelda2(wLinea, 3, lrICDIngreso."Nombre touroperador");
              cExcel.ValorCelda2(wLinea, 4, lrICDIngreso.Mercado);
              cExcel.ValorCelda2(wLinea, 5, lrICDIngreso.Representante);
              cExcel.ValorCelda2(wLinea, 6, lrICDIngreso."Nombre representante");
              cExcel.ValorCelda2(wLinea, 7, lrICDIngreso.Excursion);
              cExcel.ValorCelda2(wLinea, 8, lrICDIngreso."Nombre excursion");
              cExcel.ValorCelda2(wLinea, 9, FORMAT(lrICDIngreso."Fecha excursion"));
              cExcel.ValorCelda2(wLinea, 10, lrICDIngreso."Idioma cliente");
              cExcel.ValorCelda2(wLinea, 11, FORMAT(lrICDIngreso.Adultos));
              cExcel.ValorCelda2(wLinea, 12, FORMAT(lrICDIngreso.Ni¤os));
              cExcel.ValorCelda2(wLinea, 13, lrICDIngreso."Hotel cliente");
              cExcel.ValorCelda2(wLinea, 14, lrICDIngreso."Nombre hotel");
              cExcel.ValorCelda2(wLinea, 15, lrICDIngreso."Zona hotel");
              cExcel.ValorCelda2(wLinea, 16, FORMAT(lrICDIngreso."Ingreso reserva"));
              cExcel.ValorCelda2(wLinea, 17, FORMAT(lrICDIngreso."Ingreso reserva neto"));
              cExcel.ValorCelda2(wLinea, 18, FORMAT(lrICDIngreso."Invitados adultos"));
              cExcel.ValorCelda2(wLinea, 19, FORMAT(lrICDIngreso."Invitados ni¤os"));
              cExcel.ValorCelda2(wLinea, 20, FORMAT(lrICDIngreso."Coste previsto"));
              cExcel.ValorCelda2(wLinea, 21, FORMAT(-1 * lrICDIngreso."Comision Touroperador"));
              cExcel.ValorCelda2(wLinea, 22, FORMAT(lrICDIngreso."Comision descuenta en factura"));
              cExcel.ValorCelda2(wLinea, 23, FORMAT(lrICDIngreso."Venta credito"));
              cExcel.ValorCelda2(wLinea, 24, FORMAT(lrICDIngreso."Comision Representante"));
              cExcel.ValorCelda2(wLinea, 25, lrICDIngreso."Nombre proveedor");
              cExcel.ValorCelda2(wLinea, 26, lrICDIngreso."Oficina venta");
              cExcel.ValorCelda2(wLinea, 27, lrICDIngreso."Num. Factura");
              cExcel.ValorCelda2(wLinea, 28, lrICDIngreso."Num. Abono");
              cExcel.ValorCelda2(wLinea, 29, lrICDIngreso."Pais empresa");
              cExcel.ValorCelda2(wLinea, 30, lrICDIngreso."Nombre zona hotel");
              cExcel.ValorCelda2(wLinea, 31, FORMAT(lrICDIngreso."Importe reembolsado"));
              cExcel.ValorCelda2(wLinea, 32, lrICDIngreso.Empresa);
              cExcel.ValorCelda2(wLinea, 33, FORMAT(_BuscarCosteExcursion(lrICDCosteTMP, lrICDIngreso, lwValidado, lwAjustes)));
              cExcel.ValorCelda2(wLinea, 34, FORMAT(lwValidado));
              cExcel.ValorCelda2(wLinea, 35, FORMAT(lwAjustes));
              cExcel.ValorCelda2(wLinea, 36, FORMAT(lrICDIngreso."Fecha liquidacion Rep."));
              cExcel.ValorCelda2(wLinea, 37, FORMAT(lrICDIngreso."Fecha registro"));
              cExcel.ValorCelda2(wLinea, 38, FORMAT(_BuscarEntradas(lrICDEstanciaTMP, lrICDIngreso)));
              cExcel.ValorCelda2(wLinea, 39, FORMAT(lrICDIngreso.Reservas));
            UNTIL lrICDIngreso.NEXT = 0;
          END;
          lwDialog.CLOSE;

        END;
      UNTIL rCompany.NEXT = 0;

      cExcel.NombreHoja('EXCURSIONES');
      IF (pwGuardar) AND (rPar."Carpeta plantillas atennea" <> '') THEN
      BEGIN
        CASE pwOpcion OF
          0: lwNombreFichero := 'EXC_MONTH_' + FORMAT(prPeriodo."Fecha inicio", 0, '<Month Text>') +
                                FORMAT(DATE2DMY(prPeriodo."Fecha inicio", 3)) + '.xlsx';
          1: lwNombreFichero := 'EXC_MONTH_' + lrICDIngreso."Pais empresa" + FORMAT(prPeriodo."Fecha inicio", 0, '<Month Text>') +
                                FORMAT(DATE2DMY(prPeriodo."Fecha inicio", 3)) + '.xlsx';
          2: lwNombreFichero := 'EXC_MONTH_' + COMPANYNAME + FORMAT(prPeriodo."Fecha inicio", 0, '<Month Text>') +
                                FORMAT(DATE2DMY(prPeriodo."Fecha inicio", 3)) + '.xlsx';
        END;
        cExcel.GuardaryCerrar(rPar."Carpeta plantillas atennea" + '\' + lwNombreFichero);
      END
      ELSE
        cExcel.Mostrar;
    END;

    LOCAL PROCEDURE _LineaCabecera@1100217017();
    BEGIN
      wLinea := 1;

      cExcel.Nuevo;
      cExcel.ValorCelda2(wLinea,  1, Text004);
      cExcel.ValorCelda2(wLinea,  2, Text005);
      cExcel.ValorCelda2(wLinea,  3, Text006);
      cExcel.ValorCelda2(wLinea,  4, Text014);
      cExcel.ValorCelda2(wLinea,  5, Text008);
      cExcel.ValorCelda2(wLinea,  6, Text009);
      cExcel.ValorCelda2(wLinea,  7, Text010);
      cExcel.ValorCelda2(wLinea,  8, Text011);
      cExcel.ValorCelda2(wLinea,  9, Text012);
      cExcel.ValorCelda2(wLinea, 10, Text013);
      cExcel.ValorCelda2(wLinea, 11, Text015);
      cExcel.ValorCelda2(wLinea, 12, Text016);
      cExcel.ValorCelda2(wLinea, 13, Text017);
      cExcel.ValorCelda2(wLinea, 14, Text018);
      cExcel.ValorCelda2(wLinea, 15, Text019);
      cExcel.ValorCelda2(wLinea, 16, Text022);
      cExcel.ValorCelda2(wLinea, 17, Text023);
      cExcel.ValorCelda2(wLinea, 18, Text024);
      cExcel.ValorCelda2(wLinea, 19, Text025);
      cExcel.ValorCelda2(wLinea, 20, Text032);
      cExcel.ValorCelda2(wLinea, 21, Text033);
      cExcel.ValorCelda2(wLinea, 22, Text034);
      cExcel.ValorCelda2(wLinea, 23, Text035);
      cExcel.ValorCelda2(wLinea, 24, Text036);
      cExcel.ValorCelda2(wLinea, 25, Text037);
      cExcel.ValorCelda2(wLinea, 26, Text038);
      cExcel.ValorCelda2(wLinea, 27, Text039);
      cExcel.ValorCelda2(wLinea, 28, Text040);
      cExcel.ValorCelda2(wLinea, 29, Text042);
      cExcel.ValorCelda2(wLinea, 30, Text043);
      cExcel.ValorCelda2(wLinea, 31, Text045);
      cExcel.ValorCelda2(wLinea, 32, Text046);
      cExcel.ValorCelda2(wLinea, 33, Text047);
      cExcel.ValorCelda2(wLinea, 34, Text060);
      cExcel.ValorCelda2(wLinea, 35, Text061);
      cExcel.ValorCelda2(wLinea, 36, Text069);
      cExcel.ValorCelda2(wLinea, 37, Text070);
      cExcel.ValorCelda2(wLinea, 38, Text071);
      cExcel.ValorCelda2(wLinea, 39, Text073);
    END;

    LOCAL PROCEDURE _BuscarEntradas@1100217029(VAR prICDEstanciaTMP@1100217000 : TEMPORARY Record 7010263;prICDIngreso@1100217002 : Record 7010261) : Integer;
    VAR
      lrICDEstancia@1100217003 : Record 7010263;
    BEGIN
      // _BuscarEntradas

      lrICDEstancia.SETRANGE("ID Periodo", prICDIngreso."ID Periodo");
      lrICDEstancia.SETRANGE(Hotel       , prICDIngreso."Hotel cliente");
      IF lrICDEstancia.FINDFIRST THEN
      BEGIN
        prICDEstanciaTMP.SETRANGE("ID Periodo", prICDIngreso."ID Periodo");
        prICDEstanciaTMP.SETRANGE(Hotel       , prICDIngreso."Hotel cliente");
        IF NOT prICDEstanciaTMP.FINDFIRST THEN
        BEGIN
          prICDEstanciaTMP.TRANSFERFIELDS(lrICDEstancia);

          EXIT(lrICDEstancia.Personas)
        END;
      END;
    END;

    LOCAL PROCEDURE _BuscarCosteExcursion@1100217022(VAR prICDCosteTMP@1100217000 : TEMPORARY Record 7010262;prICDIngreso@1100217001 : Record 7010261;VAR pwValidado@1100217002 : Decimal;VAR pwAjustes@1100217003 : Decimal) : Decimal;
    VAR
      lrICDCoste@1100217004 : Record 7010262;
    BEGIN
      // _BuscarCosteExcursion

      pwValidado := 0;
      pwAjustes  := 0;

      lrICDCoste.RESET;
      lrICDCoste.SETRANGE(Touroperador    , prICDIngreso.Touroperador);
      lrICDCoste.SETRANGE(Excursion       , prICDIngreso.Excursion);
      lrICDCoste.SETRANGE("Fecha servicio", prICDIngreso."Fecha excursion");
      IF lrICDCoste.FINDFIRST THEN
      BEGIN
        prICDCosteTMP.RESET;
        prICDCosteTMP.SETRANGE(Touroperador    , prICDIngreso.Touroperador);
        prICDCosteTMP.SETRANGE(Excursion       , prICDIngreso.Excursion);
        prICDCosteTMP.SETRANGE("Fecha servicio", prICDIngreso."Fecha excursion");
        IF NOT prICDCosteTMP.FINDFIRST THEN
        BEGIN
          prICDCosteTMP.TRANSFERFIELDS(lrICDCoste);
          prICDCosteTMP.INSERT;

          pwValidado := lrICDCoste."Coste validado";
          pwAjustes  := lrICDCoste."Ajustes manuales";

          EXIT(lrICDCoste."Coste confirmado");
        END;
      END;
    END;

    PROCEDURE GenerarExcelTransfer@1100217003(prPeriodo@1100217003 : Record 7010264;pwOpcion@1000000002 : 'Completo,Pais,Empresa';pwGuardar@1000000000 : Boolean);
    VAR
      lrICDPersonasT@1100217004 : Record 7009918;
      lrICDIngresoTMP@1100217006 : TEMPORARY Record 7009919;
      lrICDCosteTMP@1100217007 : TEMPORARY Record 7009920;
      lrCompanyActual@1000000003 : Record 79;
      lrCompanyInfo@1000000004 : Record 79;
      lwDialog@1100217000 : Dialog;
      lwFecha@1100217015 : Date;
      lwEntradas@1100217001 : Decimal;
      lwSalidas@1100217002 : Decimal;
      lwNombreFichero@1000000001 : Text[30];
    BEGIN
      // GenerarExcelTransfer

      lrICDIngresoTMP.RESET;
      lrICDIngresoTMP.DELETEALL;

      lrICDCosteTMP.RESET;
      lrICDCosteTMP.DELETEALL;

      lrCompanyActual.FINDFIRST;

      rCompany.FINDSET;
      IF pwOpcion = pwOpcion::Empresa THEN
        rCompany.SETRANGE(Name, COMPANYNAME);

      _LineaCabeceraTransfer;
      REPEAT
        lrCompanyInfo.CHANGECOMPANY(rCompany.Name);
        IF NOT lrCompanyInfo.FINDFIRST THEN
          CLEAR(lrCompanyInfo);

        IF (pwOpcion = pwOpcion::Completo) OR
           (lrCompanyActual."Country/Region Code" = lrCompanyInfo."Country/Region Code") THEN
        BEGIN
          rPar.CHANGECOMPANY(rCompany.Name);
          rPar.FINDFIRST;

          rParPer.CHANGECOMPANY(rCompany.Name);
          rParPer.FINDFIRST;

          //. Este es el recorrido para pasar a excel
          lrICDPersonasT.RESET;
          lrICDPersonasT.CHANGECOMPANY(rCompany.Name);
          lrICDPersonasT.SETRANGE(Dia, prPeriodo."Fecha inicio", prPeriodo."Fecha final");
          IF lrICDPersonasT.FINDSET THEN
          BEGIN
            REPEAT
              wLinea += 1;

              cExcel.ValorCelda2(wLinea, 1, lrICDPersonasT.Touroperador);
              cExcel.ValorCelda2(wLinea, 2, lrICDPersonasT."Nombre Touroperador");
              cExcel.ValorCelda2(wLinea, 3, lrICDPersonasT.Mercado);
              cExcel.ValorCelda2(wLinea, 4, lrICDPersonasT.Hotel);
              cExcel.ValorCelda2(wLinea, 5, lrICDPersonasT."Nombre hotel");
              cExcel.ValorCelda2(wLinea, 6, lrICDPersonasT."Zona fisica");
              cExcel.ValorCelda2(wLinea, 7, FORMAT(lrICDPersonasT.Dia));
              cExcel.ValorCelda2(wLinea, 8, lrICDPersonasT.Aerolinea);
              cExcel.ValorCelda2(wLinea, 9, lrICDPersonasT.Vuelo);
              cExcel.ValorCelda2(wLinea, 10, lrICDPersonasT.Aerolinea + lrICDPersonasT.Vuelo);
              cExcel.ValorCelda2(wLinea, 11, lrICDPersonasT.IATA);
              cExcel.ValorCelda2(wLinea, 12, FORMAT(lrICDPersonasT."Transfer privado"));

              cExcel.ValorCelda2(wLinea, 13, FORMAT(lrICDPersonasT."Adultos llegada"));
              cExcel.ValorCelda2(wLinea, 14, FORMAT(lrICDPersonasT."Ni¤os llegada"));
              cExcel.ValorCelda2(wLinea, 15, FORMAT(lrICDPersonasT."Adultos salida"));
              cExcel.ValorCelda2(wLinea, 16, FORMAT(lrICDPersonasT."Ni¤os salida"));
              cExcel.ValorCelda2(wLinea, 17, lrICDPersonasT."Zona venta");
              cExcel.ValorCelda2(wLinea, 18, lrICDPersonasT."Zona compra");

              _BuscarIngresosTransfer(lrICDIngresoTMP, lrICDPersonasT, lwEntradas, lwSalidas);
              cExcel.ValorCelda2(wLinea, 19, FORMAT(lwEntradas));
              cExcel.ValorCelda2(wLinea, 20, FORMAT(lwSalidas));

              _BuscarCosteTransfer(lrICDCosteTMP, lrICDPersonasT, lwEntradas, lwSalidas);
              cExcel.ValorCelda2(wLinea, 21, FORMAT(lwEntradas));
              cExcel.ValorCelda2(wLinea, 22, FORMAT(lwSalidas));

              cExcel.ValorCelda2(wLinea, 23, lrICDPersonasT.Empresa);

              cExcel.ValorCelda2(wLinea, 24, lrICDPersonasT."Tipo facturacion");
              cExcel.ValorCelda2(wLinea, 25, FORMAT(lrICDPersonasT."Traslado en destino"));
              cExcel.ValorCelda2(wLinea, 26, lrICDPersonasT.Pais);
            UNTIL lrICDPersonasT.NEXT = 0;
          END;
        END;
      UNTIL rCompany.NEXT = 0;

      cExcel.NombreHoja('TRANSFERS');
      IF (pwGuardar) AND (rPar."Carpeta plantillas atennea" <> '') THEN
      BEGIN
        CASE pwOpcion OF
          0: lwNombreFichero := 'TRF_MONTH_' + FORMAT(prPeriodo."Fecha inicio", 0, '<Month Text>') +
                                FORMAT(DATE2DMY(prPeriodo."Fecha inicio", 3)) + '.xlsx';
          1: lwNombreFichero := 'TRF_MONTH_' + lrICDPersonasT.Pais + FORMAT(prPeriodo."Fecha inicio", 0, '<Month Text>') +
                                FORMAT(DATE2DMY(prPeriodo."Fecha inicio", 3)) + '.xlsx';
          2: lwNombreFichero := 'TRF_MONTH_' + COMPANYNAME + FORMAT(prPeriodo."Fecha inicio", 0, '<Month Text>') +
                                FORMAT(DATE2DMY(prPeriodo."Fecha inicio", 3)) + '.xlsx';
        END;
        cExcel.GuardaryCerrar(rPar."Carpeta plantillas atennea" + '\' + lwNombreFichero);
      END
      ELSE
        cExcel.Mostrar;
    END;

    LOCAL PROCEDURE _BuscarCosteTransfer@1100217013(VAR prICDCosteTMP@1100217001 : TEMPORARY Record 7009920;prICDPersonasT@1100217000 : Record 7009918;VAR pwEntradas@1100217003 : Decimal;VAR pwSalidas@1100217002 : Decimal);
    VAR
      lrICDCoste@1100217004 : Record 7009920;
    BEGIN
      // _BuscarCosteTransfer

      pwEntradas := 0;
      pwSalidas  := 0;

      lrICDCoste.RESET;
      lrICDCoste.SETRANGE(Dia                  , prICDPersonasT.Dia);
      lrICDCoste.SETRANGE(Touroperador         , prICDPersonasT.Touroperador);
      lrICDCoste.SETRANGE("Zona compra"        , prICDPersonasT."Zona compra");
      lrICDCoste.SETRANGE("Transfer privado"   , prICDPersonasT."Transfer privado");
      lrICDCoste.SETRANGE("Tipo transfer"      , prICDPersonasT."Tipo transfer"::Llegada);
      lrICDCoste.SETRANGE("Traslado en destino", prICDPersonasT."Traslado en destino");
      IF lrICDCoste.FINDFIRST THEN
      BEGIN
        REPEAT
          prICDCosteTMP.RESET;
          prICDCosteTMP.SETRANGE(Dia                  , prICDPersonasT.Dia);
          prICDCosteTMP.SETRANGE(Touroperador         , prICDPersonasT.Touroperador);
          prICDCosteTMP.SETRANGE("Zona compra"        , prICDPersonasT."Zona compra");
          prICDCosteTMP.SETRANGE("Transfer privado"   , prICDPersonasT."Transfer privado");
          prICDCosteTMP.SETRANGE("Tipo transfer"      , prICDPersonasT."Tipo transfer"::Llegada);
          prICDCosteTMP.SETRANGE("Traslado en destino", prICDPersonasT."Traslado en destino");
          IF NOT prICDCosteTMP.FINDFIRST THEN
          BEGIN
            prICDCosteTMP.TRANSFERFIELDS(lrICDCoste);
            prICDCosteTMP.INSERT;

            pwEntradas += lrICDCoste.Importe;
          END;
        UNTIL lrICDCoste.NEXT = 0;
      END;

      lrICDCoste.RESET;
      lrICDCoste.SETRANGE(Dia                  , prICDPersonasT.Dia);
      lrICDCoste.SETRANGE(Touroperador         , prICDPersonasT.Touroperador);
      lrICDCoste.SETRANGE("Zona compra"        , prICDPersonasT."Zona compra");
      lrICDCoste.SETRANGE("Transfer privado"   , prICDPersonasT."Transfer privado");
      lrICDCoste.SETRANGE("Tipo transfer"      , prICDPersonasT."Tipo transfer"::Salida);
      lrICDCoste.SETRANGE("Traslado en destino", prICDPersonasT."Traslado en destino");
      IF lrICDCoste.FINDFIRST THEN
      BEGIN
        REPEAT
          prICDCosteTMP.RESET;
          prICDCosteTMP.SETRANGE(Dia                  , prICDPersonasT.Dia);
          prICDCosteTMP.SETRANGE(Touroperador         , prICDPersonasT.Touroperador);
          prICDCosteTMP.SETRANGE("Zona compra"        , prICDPersonasT."Zona compra");
          prICDCosteTMP.SETRANGE("Transfer privado"   , prICDPersonasT."Transfer privado");
          prICDCosteTMP.SETRANGE("Tipo transfer"      , prICDPersonasT."Tipo transfer"::Salida);
          prICDCosteTMP.SETRANGE("Traslado en destino", prICDPersonasT."Traslado en destino");
          IF NOT prICDCosteTMP.FINDFIRST THEN
          BEGIN
            prICDCosteTMP.TRANSFERFIELDS(lrICDCoste);
            prICDCosteTMP.INSERT;

            pwSalidas  += lrICDCoste.Importe;
          END;
        UNTIL lrICDCoste.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE _BuscarIngresosTransfer@1100217014(VAR prICDIngresoTMP@1100217003 : TEMPORARY Record 7009919;prICDPersonasT@1100217002 : Record 7009918;VAR pwEntradas@1100217001 : Decimal;VAR pwSalidas@1100217000 : Decimal);
    VAR
      lrICDIngreso@1100217004 : Record 7009919;
    BEGIN
      // _BuscarIngresosTransfer

      pwEntradas := 0;
      pwSalidas  := 0;

      lrICDIngreso.RESET;
      lrICDIngreso.SETRANGE(Dia                  , prICDPersonasT.Dia);
      lrICDIngreso.SETRANGE(Touroperador         , prICDPersonasT.Touroperador);
      lrICDIngreso.SETRANGE("Zona venta"         , prICDPersonasT."Zona venta");
      lrICDIngreso.SETRANGE("Transfer privado"   , prICDPersonasT."Transfer privado");
      lrICDIngreso.SETRANGE("Tipo transfer"      , prICDPersonasT."Tipo transfer"::Llegada);
      lrICDIngreso.SETRANGE("Traslado en destino", prICDPersonasT."Traslado en destino");
      IF lrICDIngreso.FINDFIRST THEN
      BEGIN
        prICDIngresoTMP.RESET;
        prICDIngresoTMP.SETRANGE(Dia                  , prICDPersonasT.Dia);
        prICDIngresoTMP.SETRANGE(Touroperador         , prICDPersonasT.Touroperador);
        prICDIngresoTMP.SETRANGE("Zona venta"         , prICDPersonasT."Zona venta");
        prICDIngresoTMP.SETRANGE("Transfer privado"   , prICDPersonasT."Transfer privado");
        prICDIngresoTMP.SETRANGE("Tipo transfer"      , prICDPersonasT."Tipo transfer"::Llegada);
        prICDIngresoTMP.SETRANGE("Traslado en destino", prICDPersonasT."Traslado en destino");
        IF NOT prICDIngresoTMP.FINDFIRST THEN
        BEGIN
          prICDIngresoTMP.TRANSFERFIELDS(lrICDIngreso);
          prICDIngresoTMP.INSERT;

          pwEntradas := lrICDIngreso.Importe;
        END;
      END;

      lrICDIngreso.RESET;
      lrICDIngreso.SETRANGE(Dia                  , prICDPersonasT.Dia);
      lrICDIngreso.SETRANGE(Touroperador         , prICDPersonasT.Touroperador);
      lrICDIngreso.SETRANGE("Zona venta"         , prICDPersonasT."Zona venta");
      lrICDIngreso.SETRANGE("Transfer privado"   , prICDPersonasT."Transfer privado");
      lrICDIngreso.SETRANGE("Tipo transfer"      , prICDPersonasT."Tipo transfer"::Salida);
      lrICDIngreso.SETRANGE("Traslado en destino", prICDPersonasT."Traslado en destino");
      IF lrICDIngreso.FINDFIRST THEN
      BEGIN
        prICDIngresoTMP.RESET;
        prICDIngresoTMP.SETRANGE(Dia                  , prICDPersonasT.Dia);
        prICDIngresoTMP.SETRANGE(Touroperador         , prICDPersonasT.Touroperador);
        prICDIngresoTMP.SETRANGE("Zona venta"         , prICDPersonasT."Zona venta");
        prICDIngresoTMP.SETRANGE("Transfer privado"   , prICDPersonasT."Transfer privado");
        prICDIngresoTMP.SETRANGE("Tipo transfer"      , prICDPersonasT."Tipo transfer"::Salida);
        prICDIngresoTMP.SETRANGE("Traslado en destino", prICDPersonasT."Traslado en destino");
        IF prICDIngresoTMP.FINDFIRST THEN
        BEGIN
          prICDIngresoTMP.TRANSFERFIELDS(lrICDIngreso);
          prICDIngresoTMP.INSERT;

          pwSalidas  := lrICDIngreso.Importe;
        END;
      END;
    END;

    LOCAL PROCEDURE _LineaCabeceraTransfer@1100217005();
    BEGIN
      wLinea := 1;

      cExcel.Nuevo;
      cExcel.ValorCelda2(wLinea, 1, Text005);
      cExcel.ValorCelda2(wLinea, 2, Text006);
      cExcel.ValorCelda2(wLinea, 3, Text014);
      cExcel.ValorCelda2(wLinea, 4, Text017);
      cExcel.ValorCelda2(wLinea, 5, Text018);
      cExcel.ValorCelda2(wLinea, 6, Text019);
      cExcel.ValorCelda2(wLinea, 7, Text048);
      cExcel.ValorCelda2(wLinea, 8, Text049);
      cExcel.ValorCelda2(wLinea, 9, Text050);
      cExcel.ValorCelda2(wLinea, 10, Text051);
      cExcel.ValorCelda2(wLinea, 11, Text059);
      cExcel.ValorCelda2(wLinea, 12, Text052);
      cExcel.ValorCelda2(wLinea, 13, Text053);
      cExcel.ValorCelda2(wLinea, 14, Text054);
      cExcel.ValorCelda2(wLinea, 15, Text062);
      cExcel.ValorCelda2(wLinea, 16, Text063);
      cExcel.ValorCelda2(wLinea, 17, Text055);
      cExcel.ValorCelda2(wLinea, 18, Text056);
      cExcel.ValorCelda2(wLinea, 19, Text057);
      cExcel.ValorCelda2(wLinea, 20, Text064);
      cExcel.ValorCelda2(wLinea, 21, Text058);
      cExcel.ValorCelda2(wLinea, 22, Text065);
      cExcel.ValorCelda2(wLinea, 23, Text046);
      cExcel.ValorCelda2(wLinea, 24, Text068);
      cExcel.ValorCelda2(wLinea, 25, Text072);
      cExcel.ValorCelda2(wLinea, 26, Text042);
    END;

    PROCEDURE ReportingExcursionesEmpresa@1100217020(prPeriodo@1100217000 : Record 7010264);
    BEGIN
      // ReportingExcursionesEmpresa

      GenerarExcelExcursiones(prPeriodo, 2, FALSE);
    END;

    PROCEDURE ReportingExcursionesPais@1100217021(prPeriodo@1100217000 : Record 7010264);
    BEGIN
      // ReportingExcursionesPais

      GenerarExcelExcursiones(prPeriodo, 1, FALSE);
    END;

    PROCEDURE GenerarExcursionesAutomatico@1000000000();
    VAR
      lrPeriodo@1000000000 : Record 7010264;
    BEGIN
      // $003
      lrPeriodo.SETRANGE("Tipo periodo", lrPeriodo."Tipo periodo"::Excursiones);
      lrPeriodo.SETRANGE(lrPeriodo."Fecha inicio",DMY2DATE(1,DATE2DMY(TODAY,2),DATE2DMY(TODAY,3)));
      IF lrPeriodo.FINDLAST THEN
        GenerarExcelExcursiones(lrPeriodo, 2, TRUE); //. 2 = Empresa
    END;

    PROCEDURE GenerarTransferAutomatico@1000000002();
    VAR
      lrPeriodo@1000000000 : Record 7010264;
    BEGIN
      // $003
      lrPeriodo.SETRANGE("Tipo periodo", lrPeriodo."Tipo periodo"::Transfer);
      lrPeriodo.SETRANGE(lrPeriodo."Fecha inicio",DMY2DATE(1,DATE2DMY(TODAY,2),DATE2DMY(TODAY,3)));
      IF lrPeriodo.FINDLAST THEN
        GenerarExcelTransfer(lrPeriodo, 2, TRUE); //. 2 = Empresa
    END;

    BEGIN
    {
      $001 AJS 30052014 Generar el excel a partir de las tablas de ICD ya procesadas

      $002 AJS 04092014 Agrego permisos explicitos de lectura en las tablas Company Information y Company para evitar
                        problemas de permisos de usuario

      $003 ARM 24112014 CNT-OC-14052 Llamada desde funciones autom ticas
    }
    END.
  }
}
