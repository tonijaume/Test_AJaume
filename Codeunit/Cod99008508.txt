OBJECT Codeunit 99008508 BizTalkManagement
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=NAVW16.00.01;
  }
  PROPERTIES
  {
    Permissions=TableData 110=m,
                TableData 112=m,
                TableData 114=m;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      OutboundDocument@1000 : Record 99008511;
      SendXMLDocument@1001 : Codeunit 99008514;
      BizTalkMessage@1002 : Codeunit 99008513;
      DocumentType@1003 : 'Purchase,Sales,Product Catalog,BizTalk Request';
      PartnerType@1004 : ' ,Vendor,Customer';
      OutboundDocumentNo@1005 : Integer;
      ReturnCode@1006 : Integer;
      Text000@1007 : TextConst 'ENU=The BizTalk document has been sent.;ESP=Se ha enviado el documento BizTalk.';
      Text001@1011 : TextConst 'ENU=The BizTalk document has been resent.;ESP=Se ha reenviado el documento BizTalk.';
      Text002@1010 : TextConst 'ENU=The vendor number %1 is not registered in the BizTalk Partner Setup.;ESP=El n£mero de proveedor %1 no est  registrado en la Configuraci¢n socio BizTalk.';
      Text003@1009 : TextConst 'ENU=The customer number %1 is not registered in the BizTalk Partner Setup.;ESP=El n£mero de cliente %1 no est  registrado en la Configuraci¢n socio BizTalk.';
      Text004@1008 : TextConst 'ENU=The BizTalk partner number %1 does not have any active %2 agreement.;ESP=El socio BizTalk n£mero %1 no tiene ning£n acuerdo %2 activo.';
      Text005@1015 : TextConst 'ENU=More items that are based on %1 %2 exists.;ESP=Existen m s productos basados en %1 %2.';
      Text006@1014 : TextConst 'ENU=The item number that are based on %1 %2 does not exist.;ESP=No existe el n£mero producto basado en %1 %2.';
      Text008@1012 : TextConst 'ENU=More common item numbers that are based on %1 %2 exists.;ESP=Existen m s n£meros producto com£n basados en %1 %2';
      HideDialogBox@1016 : Boolean;

    PROCEDURE SendReqforPurchQuote@2(PurchaseHeader@1000 : Record 38);
    VAR
      BizTalkPartnerNo@1001 : Integer;
      OutboundNo@1002 : Integer;
      OutboundDocumentNo@1003 : Integer;
      BizTalkRqstforPurhcQuote@1004 : Codeunit 99008519;
    BEGIN
      BizTalkPartnerNo := GetBizTalkPartnerNo(PartnerType::Vendor,PurchaseHeader."Buy-from Vendor No.");
      IF IsPartnerAgreementActive(BizTalkPartnerNo,'RPQ') THEN BEGIN
        BizTalkRqstforPurhcQuote.ValidateData(PurchaseHeader);
        OutboundNo := BizTalkRqstforPurhcQuote.TransferData(PurchaseHeader);
        OutboundDocumentNo :=
          InsertOutboundDocument(DocumentType::Purchase,OutboundNo,PartnerType::Vendor,PurchaseHeader."Buy-from Vendor No.");
        PurchaseHeader."BizTalk Request for Purch. Qte" := TRUE;
        PurchaseHeader.MODIFY;
        COMMIT;
        ReturnCode := SendXMLDocument.SendXMLDocument(OutboundNo,DocumentType::Purchase,PurchaseHeader."Buy-from Vendor No.");
        IF ReturnCode <> 0 THEN
          BizTalkMessage.ShowMessage(ReturnCode)
        ELSE
          MESSAGE(Text000);
      END;
    END;

    PROCEDURE SendSalesQuote@3(SalesHeader@1000 : Record 36);
    VAR
      BizTalkPartnerNo@1001 : Integer;
      OutboundNo@1002 : Integer;
      OutboundDocumentNo@1003 : Integer;
      BizTalkSalesQuote@1004 : Codeunit 99008520;
    BEGIN
      BizTalkPartnerNo := GetBizTalkPartnerNo(PartnerType::Customer,SalesHeader."Sell-to Customer No.");
      IF IsPartnerAgreementActive(BizTalkPartnerNo,'SQ') THEN BEGIN
        BizTalkSalesQuote.ValidateData(SalesHeader);
        OutboundNo := BizTalkSalesQuote.TransferData(SalesHeader);
        OutboundDocumentNo :=
          InsertOutboundDocument(DocumentType::Sales,OutboundNo,PartnerType::Customer,SalesHeader."Sell-to Customer No.");
        SalesHeader."BizTalk Sales Quote" := TRUE;
        SalesHeader.MODIFY;
        COMMIT;
        ReturnCode := SendXMLDocument.SendXMLDocument(OutboundNo,DocumentType::Sales,SalesHeader."Sell-to Customer No.");
        IF ReturnCode <> 0 THEN
          BizTalkMessage.ShowMessage(ReturnCode)
        ELSE
          MESSAGE(Text000);
      END;
    END;

    PROCEDURE SendPurchaseOrder@4(PurchaseHeader@1000 : Record 38);
    VAR
      BizTalkPartnerNo@1001 : Integer;
      OutboundNo@1002 : Integer;
      OutboundDocumentNo@1003 : Integer;
      BizTalkPurchaseOrder@1004 : Codeunit 99008521;
    BEGIN
      BizTalkPartnerNo := GetBizTalkPartnerNo(PartnerType::Vendor,PurchaseHeader."Buy-from Vendor No.");
      IF IsPartnerAgreementActive(BizTalkPartnerNo,'PO') THEN BEGIN
        BizTalkPurchaseOrder.ValidateData(PurchaseHeader);
        OutboundNo := BizTalkPurchaseOrder.TransferData(PurchaseHeader);
        OutboundDocumentNo :=
          InsertOutboundDocument(DocumentType::Purchase,OutboundNo,PartnerType::Vendor,PurchaseHeader."Buy-from Vendor No.");
        PurchaseHeader."BizTalk Purchase Order" := TRUE;
        PurchaseHeader.MODIFY;
        COMMIT;
        ReturnCode := SendXMLDocument.SendXMLDocument(OutboundNo,DocumentType::Purchase,PurchaseHeader."Buy-from Vendor No.");
        IF NOT HideDialogBox THEN BEGIN
          IF ReturnCode <> 0 THEN
            BizTalkMessage.ShowMessage(ReturnCode)
          ELSE
            MESSAGE(Text000);
        END;
      END;
    END;

    PROCEDURE SendSalesOrderConf@5(SalesHeader@1000 : Record 36);
    VAR
      OutboundNo@1001 : Integer;
      BizTalkPartnerNo@1002 : Integer;
      BizTalkSalesOrderConfirmn@1003 : Codeunit 99008522;
    BEGIN
      BizTalkPartnerNo := GetBizTalkPartnerNo(PartnerType::Customer,SalesHeader."Sell-to Customer No.");
      IF IsPartnerAgreementActive(BizTalkPartnerNo,'SOC') THEN BEGIN
        BizTalkSalesOrderConfirmn.ValidateData(SalesHeader);
        OutboundNo := BizTalkSalesOrderConfirmn.TransferData(SalesHeader);
        OutboundDocumentNo :=
          InsertOutboundDocument(DocumentType::Sales,OutboundNo,PartnerType::Customer,SalesHeader."Sell-to Customer No.");
        SalesHeader."BizTalk Sales Order Cnfmn." := TRUE;
        SalesHeader.MODIFY;
        COMMIT;
        ReturnCode := SendXMLDocument.SendXMLDocument(OutboundNo,DocumentType::Sales,SalesHeader."Sell-to Customer No.");
        IF NOT HideDialogBox THEN BEGIN
          IF ReturnCode <> 0 THEN
            BizTalkMessage.ShowMessage(ReturnCode)
          ELSE
            MESSAGE(Text000);
        END;
      END;
    END;

    PROCEDURE SendSalesInvoice@6(SalesInvoiceHeader@1000 : Record 112);
    VAR
      BizTalkPartnerNo@1001 : Integer;
      OutboundNo@1002 : Integer;
      OutboundDocumentNo@1003 : Integer;
      BizTalkSalesInvoice@1004 : Codeunit 99008523;
    BEGIN
      BizTalkPartnerNo := GetBizTalkPartnerNo(PartnerType::Customer,SalesInvoiceHeader."Sell-to Customer No.");
      IF IsPartnerAgreementActive(BizTalkPartnerNo,'SI') THEN BEGIN
        BizTalkSalesInvoice.ValidateData(SalesInvoiceHeader);
        OutboundNo := BizTalkSalesInvoice.TransferData(SalesInvoiceHeader);
        OutboundDocumentNo :=
          InsertOutboundDocument(DocumentType::Sales,OutboundNo,PartnerType::Customer,SalesInvoiceHeader."Sell-to Customer No.");
        SalesInvoiceHeader."BizTalk Sales Invoice" := TRUE;
        SalesInvoiceHeader.MODIFY;
        COMMIT;
        ReturnCode := SendXMLDocument.SendXMLDocument(OutboundNo,DocumentType::Sales,SalesInvoiceHeader."Sell-to Customer No.");
        IF ReturnCode <> 0 THEN
          BizTalkMessage.ShowMessage(ReturnCode)
        ELSE
          MESSAGE(Text000);
      END;
    END;

    PROCEDURE SendShipmentNotification@7(SalesShipmentHeader@1000 : Record 110);
    VAR
      BizTalkPartnerNo@1001 : Integer;
      OutboundNo@1002 : Integer;
      OutboundDocumentNo@1003 : Integer;
      BizTalkSalesShipmentNotif@1004 : Codeunit 99008524;
    BEGIN
      BizTalkPartnerNo := GetBizTalkPartnerNo(PartnerType::Customer,SalesShipmentHeader."Sell-to Customer No.");
      IF IsPartnerAgreementActive(BizTalkPartnerNo,'SN') THEN BEGIN
        BizTalkSalesShipmentNotif.ValidateData(SalesShipmentHeader);
        OutboundNo := BizTalkSalesShipmentNotif.TransferData(SalesShipmentHeader);
        OutboundDocumentNo :=
          InsertOutboundDocument(DocumentType::Sales,OutboundNo,PartnerType::Customer,SalesShipmentHeader."Sell-to Customer No.");
        SalesShipmentHeader."BizTalk Shipment Notification" := TRUE;
        SalesShipmentHeader.MODIFY;
        COMMIT;
        ReturnCode := SendXMLDocument.SendXMLDocument(OutboundNo,DocumentType::Sales,SalesShipmentHeader."Sell-to Customer No.");
        IF ReturnCode <> 0 THEN
          BizTalkMessage.ShowMessage(ReturnCode)
        ELSE
          MESSAGE(Text000);
      END;
    END;

    PROCEDURE SendSalesCreditMemo@8(SalesCrMemoHeader@1000 : Record 114);
    VAR
      BizTalkPartnerNo@1001 : Integer;
      OutboundNo@1002 : Integer;
      OutboundDocumentNo@1003 : Integer;
      BizTalkSalesCreditMemo@1004 : Codeunit 99008525;
    BEGIN
      BizTalkPartnerNo := GetBizTalkPartnerNo(PartnerType::Customer,SalesCrMemoHeader."Sell-to Customer No.");
      IF IsPartnerAgreementActive(BizTalkPartnerNo,'SCM') THEN BEGIN
        BizTalkSalesCreditMemo.ValidateData(SalesCrMemoHeader);
        OutboundNo := BizTalkSalesCreditMemo.TransferData(SalesCrMemoHeader);
        OutboundDocumentNo :=
          InsertOutboundDocument(DocumentType::Sales,OutboundNo,PartnerType::Customer,SalesCrMemoHeader."Sell-to Customer No.");
        SalesCrMemoHeader."BizTalk Sales Credit Memo" := TRUE;
        SalesCrMemoHeader.MODIFY;
        COMMIT;
        ReturnCode := SendXMLDocument.SendXMLDocument(OutboundNo,DocumentType::Sales,SalesCrMemoHeader."Sell-to Customer No.");
        IF ReturnCode <> 0 THEN
          BizTalkMessage.ShowMessage(ReturnCode)
        ELSE
          MESSAGE(Text000);
      END;
    END;

    PROCEDURE SendProductCatalog@9(BizTalkPartnerNo@1000 : Integer;OutboundNo@1001 : Integer;PartnerNo@1002 : Code[20]);
    BEGIN
      IF IsPartnerAgreementActive(BizTalkPartnerNo,'EPC') THEN BEGIN
        OutboundDocumentNo := InsertOutboundDocument(DocumentType::"Product Catalog",OutboundNo,PartnerType::Customer,PartnerNo);
        ReturnCode := SendXMLDocument.SendXMLDocument(OutboundNo,DocumentType::"Product Catalog",PartnerNo);
        IF ReturnCode <> 0 THEN
          BizTalkMessage.ShowMessage(ReturnCode)
        ELSE
          MESSAGE(Text000);
      END;
    END;

    PROCEDURE ResendBizTalkDocument@13(OutboundDocumentNo@1000 : Integer;DocumentType@1001 : 'Purchase,Sales,Product Catalog,BizTalk Request';PartnerNo@1002 : Code[20]);
    BEGIN
      ReturnCode := SendXMLDocument.SendXMLDocument(OutboundDocumentNo,DocumentType,PartnerNo);
      IF ReturnCode <> 0 THEN
        BizTalkMessage.ShowMessage(ReturnCode)
      ELSE
        MESSAGE(Text001);
    END;

    PROCEDURE InsertOutboundDocument@1(DocumentType@1000 : 'Purchase,Sales,Product Catalog,BizTalk Request';OutboundNo@1001 : Integer;PartnerType@1002 : ' ,Vendor,Customer';PartnerNo@1003 : Code[10]) : Integer;
    VAR
      OutboundDocument@1004 : Record 99008511;
      NextEntryNo@1005 : Integer;
    BEGIN
      OutboundDocument.LOCKTABLE;
      IF OutboundDocument.FIND('+') THEN
        NextEntryNo := OutboundDocument."Entry No." + 1
      ELSE
        NextEntryNo := 1;
      OutboundDocument.INIT;
      OutboundDocument."Entry No." := NextEntryNo;
      OutboundDocument."Outbound Document Type" := DocumentType;
      OutboundDocument."Outbound Document No." := OutboundNo;
      OutboundDocument."Partner Type" := PartnerType;
      OutboundDocument."Partner No." := PartnerNo;
      OutboundDocument.Status := OutboundDocument.Status::Processing;
      OutboundDocument."Date Processed" := TODAY;
      OutboundDocument."Time Processed" := TIME;
      OutboundDocument."NAV GUID" := CREATEGUID;
      OutboundDocument.INSERT;
      EXIT(NextEntryNo);
    END;

    PROCEDURE GetBizTalkPartnerNo@11(PartnerType@1001 : ' ,Vendor,Customer';PartnerNo@1002 : Code[20]) BizTalkPartnerNo@1000 : Integer;
    VAR
      BizTalkPartnerSetup@1003 : Record 99008513;
    BEGIN
      BizTalkPartnerSetup.SETCURRENTKEY("Partner Type","Partner No.");
      BizTalkPartnerSetup.SETRANGE("Partner Type",PartnerType);
      BizTalkPartnerSetup.SETRANGE("Partner No.",PartnerNo);
      IF BizTalkPartnerSetup.FIND('-') THEN
        BizTalkPartnerNo := BizTalkPartnerSetup."BizTalk Partner No."
      ELSE BEGIN
        IF PartnerType = PartnerType::Vendor THEN
          ERROR(Text002,PartnerNo)
        ELSE
          ERROR(Text003,PartnerNo);
      END;
    END;

    PROCEDURE IsPartnerAgreementActive@10(BizTalkPartnerNo@1000 : Integer;AgreementTypeCode@1001 : Text[30]) : Boolean;
    VAR
      BizTalkPartnerSetupLine@1002 : Record 99008516;
      AgreementType@1004 : Record 99008520;
    BEGIN
      AgreementType.GET(AgreementTypeCode);
      BizTalkPartnerSetupLine.SETCURRENTKEY("BizTalk Partner No.","Agreement Type");
      BizTalkPartnerSetupLine.SETRANGE("BizTalk Partner No.",BizTalkPartnerNo);
      BizTalkPartnerSetupLine.SETRANGE("Agreement Type",AgreementType."Agreement Type");
      BizTalkPartnerSetupLine.SETRANGE(Active,TRUE);
      IF NOT BizTalkPartnerSetupLine.FIND('-') THEN
        MESSAGE(Text004,
                 BizTalkPartnerNo,
                 AgreementType."Agreement Type");
      EXIT(BizTalkPartnerSetupLine.Active);
    END;

    PROCEDURE GetDocumentTypeCode@12(DocumentName@1000 : Text[30]) : Text[30];
    VAR
      RestOfString@1001 : Text[30];
      DocumentTypeCode@1002 : Text[30];
      UnderscorePosition@1003 : Integer;
    BEGIN
      // Extract agreement type code from the document name
      DocumentTypeCode := '';
      UnderscorePosition := STRPOS(DocumentName,'_');
      IF UnderscorePosition > 0 THEN BEGIN
        RestOfString := COPYSTR(
          DocumentName,UnderscorePosition + 1,
          STRLEN(DocumentName) - UnderscorePosition + 1);
        UnderscorePosition := STRPOS(RestOfString,'_');
        IF UnderscorePosition > 0 THEN
          DocumentTypeCode := COPYSTR(RestOfString,1,UnderscorePosition - 1);
      END;
      EXIT(UPPERCASE(DocumentTypeCode));
    END;

    PROCEDURE InitializeAgreementType@14();
    VAR
      AgreementType@1000 : Record 99008520;
    BEGIN
      IF AgreementType.FIND('-') THEN
        REPEAT
          AgreementType.DELETE;
        UNTIL AgreementType.NEXT = 0;
      AgreementType."Agreement Type Code" := 'RPQ';
      AgreementType."Agreement Type" := 'Request Purchase Quote';
      AgreementType."BizTalk Schema Name" := 'Navision_RPQ_1';
      AgreementType.INSERT;
      AgreementType."Agreement Type Code" := 'PQ';
      AgreementType."Agreement Type" := 'Purchase Quote';
      AgreementType."BizTalk Schema Name" := 'Navision_PQ_1';
      AgreementType.INSERT;
      AgreementType."Agreement Type Code" := 'PO';
      AgreementType."Agreement Type" := 'Purchase Order';
      AgreementType."BizTalk Schema Name" := 'Navision_PO_1';
      AgreementType.INSERT;
      AgreementType."Agreement Type Code" := 'POC';
      AgreementType."Agreement Type" := 'Purchase Order Confirmation';
      AgreementType."BizTalk Schema Name" := 'Navision_POC_1';
      AgreementType.INSERT;
      AgreementType."Agreement Type Code" := 'PI';
      AgreementType."Agreement Type" := 'Purchase Invoice';
      AgreementType."BizTalk Schema Name" := 'Navision_PI_1';
      AgreementType.INSERT;
      AgreementType."Agreement Type Code" := 'PR';
      AgreementType."Agreement Type" := 'Purchase Receipt';
      AgreementType."BizTalk Schema Name" := 'Navision_PR_1';
      AgreementType.INSERT;
      AgreementType."Agreement Type Code" := 'PCM';
      AgreementType."Agreement Type" := 'Purchase Credit Memo';
      AgreementType."BizTalk Schema Name" := 'Navision_PCM_1';
      AgreementType.INSERT;
      AgreementType."Agreement Type Code" := 'IPC';
      AgreementType."Agreement Type" := 'Import Product Catalog';
      AgreementType."BizTalk Schema Name" := 'Navision_IPC_1';
      AgreementType.INSERT;
      AgreementType."Agreement Type Code" := 'RSQ';
      AgreementType."Agreement Type" := 'Request Sales Quote';
      AgreementType."BizTalk Schema Name" := 'Navision_RSQ_1';
      AgreementType.INSERT;
      AgreementType."Agreement Type Code" := 'SQ';
      AgreementType."Agreement Type" := 'Sales Quote';
      AgreementType."BizTalk Schema Name" := 'Navision_SQ_1';
      AgreementType.INSERT;
      AgreementType."Agreement Type Code" := 'SO';
      AgreementType."Agreement Type" := 'Sales Order';
      AgreementType."BizTalk Schema Name" := 'Navision_SO_1';
      AgreementType.INSERT;
      AgreementType."Agreement Type Code" := 'SOC';
      AgreementType."Agreement Type" := 'Sales Order Confirmation';
      AgreementType."BizTalk Schema Name" := 'Navision_SOC_1';
      AgreementType.INSERT;
      AgreementType."Agreement Type Code" := 'SI';
      AgreementType."Agreement Type" := 'Sales Invoice';
      AgreementType."BizTalk Schema Name" := 'Navision_SI_1';
      AgreementType.INSERT;
      AgreementType."Agreement Type Code" := 'SN';
      AgreementType."Agreement Type" := 'Shipment Notification';
      AgreementType."BizTalk Schema Name" := 'Navision_SN_1';
      AgreementType.INSERT;
      AgreementType."Agreement Type Code" := 'SCM';
      AgreementType."Agreement Type" := 'Sales Credit Memo';
      AgreementType."BizTalk Schema Name" := 'Navision_SCM_1';
      AgreementType.INSERT;
      AgreementType."Agreement Type Code" := 'EPC';
      AgreementType."Agreement Type" := 'Export Product Catalog';
      AgreementType."BizTalk Schema Name" := 'Navision_EPC_1';
      AgreementType.INSERT;
    END;

    PROCEDURE ConvertCommonItemNo@15(CommonItemNo@1001 : Code[20]) ItemNo@1000 : Code[20];
    VAR
      Item@1002 : Record 27;
    BEGIN
      Item.SETCURRENTKEY("Common Item No.");
      Item.SETRANGE("Common Item No.",CommonItemNo);
      IF Item.FIND('-') THEN
        IF Item.NEXT <> 0 THEN
          ERROR(Text005,Item.FIELDCAPTION("Common Item No."),CommonItemNo)
        ELSE
          ItemNo := Item."No."
      ELSE
        ERROR(Text006,Item.FIELDCAPTION("Common Item No."),
          CommonItemNo);
    END;

    PROCEDURE ConvertVendorItemNo@17(VendorItemNo@1001 : Code[20];VendNo@1002 : Code[20]) ItemNo@1000 : Code[20];
    VAR
      Item@1003 : Record 27;
      ItemVend@1004 : Record 99;
    BEGIN
      ItemVend.SETCURRENTKEY("Vendor No.","Vendor Item No.");
      ItemVend.SETRANGE("Vendor No.",VendNo);
      ItemVend.SETRANGE("Vendor Item No.",VendorItemNo);
      IF ItemVend.FIND('-') THEN BEGIN
        ItemNo := ItemVend."Item No.";
        REPEAT
          IF ItemNo <> ItemVend."Item No." THEN
            ERROR(Text006,ItemVend.FIELDCAPTION("Vendor Item No."),
              VendorItemNo);
        UNTIL ItemVend.NEXT = 0;
        EXIT;
      END;
      Item.SETCURRENTKEY("Vendor Item No.","Vendor No.");
      Item.SETRANGE("Vendor Item No.",VendorItemNo);
      Item.SETRANGE("Vendor No.",VendNo);
      IF Item.FIND('-') THEN BEGIN
        IF Item.NEXT <> 0 THEN
          ERROR(Text006,ItemVend.FIELDCAPTION("Vendor Item No."),
            VendorItemNo)
        ELSE BEGIN
          ItemNo := Item."No.";
          EXIT;
        END;
      END;
      ERROR(Text006,ItemVend.FIELDCAPTION("Vendor Item No."),
        VendorItemNo);
    END;

    PROCEDURE GetVendorItemNumber@16(ItemNo@1000 : Code[20];VendorNo@1001 : Code[20]) : Text[20];
    VAR
      ItemVendor@1002 : Record 99;
      Item@1003 : Record 27;
      VendorItemNumber@1004 : Text[20];
    BEGIN
      ItemVendor.SETRANGE("Item No.",ItemNo);
      ItemVendor.SETRANGE("Vendor No.",VendorNo);
      IF ItemVendor.FIND('-') THEN BEGIN
        VendorItemNumber := ItemVendor."Vendor Item No.";
        IF ItemVendor.NEXT <> 0 THEN
          REPEAT
            IF ItemVendor."Vendor Item No." <> VendorItemNumber THEN
              ERROR(Text006,ItemVendor.FIELDCAPTION("Item No."),
                ItemNo)
          UNTIL ItemVendor.NEXT = 0;
        EXIT(VendorItemNumber);
      END;
      Item.SETRANGE("No.",ItemNo);
      Item.SETRANGE("Vendor No.",VendorNo);
      IF Item.FIND('-') THEN BEGIN
        VendorItemNumber := Item."Vendor Item No.";
        IF Item.NEXT <> 0 THEN
          ERROR(Text006,ItemVendor.FIELDCAPTION("Item No."),
            ItemNo);
        EXIT(VendorItemNumber);
      END;
    END;

    PROCEDURE GetCommonItemNumber@19(ItemNo@1000 : Code[20]) : Code[20];
    VAR
      Item@1001 : Record 27;
      CommonItemNo@1002 : Code[20];
    BEGIN
      Item.SETRANGE("No.",ItemNo);
      IF Item.FIND('-') THEN BEGIN
        CommonItemNo := Item."Common Item No.";
        IF Item.NEXT <> 0 THEN
          ERROR(Text008,Item.FIELDCAPTION("No."),ItemNo);
        EXIT(CommonItemNo)
      END;
    END;

    PROCEDURE GetCustomer@20(PartnerID@1000 : Integer;VAR PartnerNo@1001 : Code[20];VAR BizTalkPartnerNo@1002 : Integer);
    VAR
      BizTalkPartnerSetupHdr@1003 : Record 99008513;
    BEGIN
      BizTalkPartnerSetupHdr.SETCURRENTKEY("BizTalk Organization ID");
      BizTalkPartnerSetupHdr.SETRANGE("BizTalk Organization ID",PartnerID);
      BizTalkPartnerSetupHdr.SETRANGE(
        "Partner Type",BizTalkPartnerSetupHdr."Partner Type"::Customer);
      IF BizTalkPartnerSetupHdr.FIND('-') THEN BEGIN
        PartnerNo := BizTalkPartnerSetupHdr."Partner No.";
        BizTalkPartnerNo := BizTalkPartnerSetupHdr."BizTalk Partner No.";
      END;
    END;

    PROCEDURE GetVendor@18(PartnerID@1000 : Integer;VAR PartnerNo@1001 : Code[20];VAR BizTalkPartnerNo@1002 : Integer);
    VAR
      BizTalkPartnerSetupHdr@1003 : Record 99008513;
    BEGIN
      BizTalkPartnerSetupHdr.SETCURRENTKEY("BizTalk Organization ID");
      BizTalkPartnerSetupHdr.SETRANGE("BizTalk Organization ID",PartnerID);
      BizTalkPartnerSetupHdr.SETRANGE(
        "Partner Type",BizTalkPartnerSetupHdr."Partner Type"::Vendor);
      IF BizTalkPartnerSetupHdr.FIND('-') THEN BEGIN
        PartnerNo := BizTalkPartnerSetupHdr."Partner No.";
        BizTalkPartnerNo := BizTalkPartnerSetupHdr."BizTalk Partner No.";
      END;
    END;

    PROCEDURE SalesTrackingExists@23(TrackingID@1000 : Text[50]) : Boolean;
    VAR
      InboundSalesDocumentHeader@1001 : Record 99008500;
    BEGIN
      InboundSalesDocumentHeader.SETCURRENTKEY("Tracking ID");
      InboundSalesDocumentHeader.SETRANGE("Tracking ID",TrackingID);
      IF InboundSalesDocumentHeader.FIND('-') THEN
        EXIT(TRUE)
      ELSE
        EXIT(FALSE);
    END;

    PROCEDURE PurchTrackingExists@22(TrackingID@1000 : Text[50]) : Boolean;
    VAR
      InboundPurchaseDocumentHeader@1001 : Record 99008502;
    BEGIN
      InboundPurchaseDocumentHeader.SETCURRENTKEY("Tracking ID");
      InboundPurchaseDocumentHeader.SETRANGE("Tracking ID",TrackingID);
      IF InboundPurchaseDocumentHeader.FIND('-') THEN
        EXIT(TRUE)
      ELSE
        EXIT(FALSE);
    END;

    PROCEDURE ProdTrackingExists@21(TrackingID@1000 : Text[50]) : Boolean;
    VAR
      InboundProductCatalogHdr@1001 : Record 99008504;
    BEGIN
      InboundProductCatalogHdr.SETCURRENTKEY("Tracking ID");
      InboundProductCatalogHdr.SETRANGE("Tracking ID",TrackingID);
      IF InboundProductCatalogHdr.FIND('-') THEN
        EXIT(TRUE)
      ELSE
        EXIT(FALSE);
    END;

    PROCEDURE SetHideDiallogBox@24(NewHideDialogBox@1000 : Boolean);
    BEGIN
      HideDialogBox := NewHideDialogBox;
    END;

    PROCEDURE GetReturnCode@29() : Integer;
    BEGIN
      EXIT(ReturnCode);
    END;

    PROCEDURE SetItemNoOnSalesBizReservEntry@25(OutboundSalesDocumentLine@1005 : Record 99008507;CustNo@1003 : Code[20]) : Code[20];
    VAR
      BizTalkPartnerSetupHdr@1001 : Record 99008513;
      BizTalkPartnerNo@1000 : Integer;
    BEGIN
      BizTalkPartnerNo := GetBizTalkPartnerNo(
        PartnerType::Customer,CustNo);
      BizTalkPartnerSetupHdr.GET(BizTalkPartnerNo);

      CASE BizTalkPartnerSetupHdr."Sales Item Number Type" OF
        BizTalkPartnerSetupHdr."Sales Item Number Type"::"Internal Item No.":
          BEGIN
            OutboundSalesDocumentLine.TESTFIELD("No.");
            EXIT(OutboundSalesDocumentLine."No.");
          END;
        BizTalkPartnerSetupHdr."Sales Item Number Type"::"Common Item No.":
          BEGIN
            OutboundSalesDocumentLine.TESTFIELD("Common Item No.");
            EXIT(ConvertCommonItemNo(OutboundSalesDocumentLine."Common Item No."));
          END;
      END;
    END;

    PROCEDURE SetItemNoOnPurchBizReservEntry@26(OutboundPurchaseDocLine@1005 : Record 99008509;VendorNo@1003 : Code[20]) : Code[20];
    VAR
      BizTalkPartnerSetupHdr@1001 : Record 99008513;
      BizTalkPartnerNo@1000 : Integer;
    BEGIN
      BizTalkPartnerNo := GetBizTalkPartnerNo(
        PartnerType::Vendor,VendorNo);
      BizTalkPartnerSetupHdr.GET(BizTalkPartnerNo);

      CASE BizTalkPartnerSetupHdr."Purchase Item Number Type" OF
        BizTalkPartnerSetupHdr."Purchase Item Number Type"::"Internal Item No.":
          BEGIN
            OutboundPurchaseDocLine.TESTFIELD("No.");
            EXIT(OutboundPurchaseDocLine."No.");
          END;
        BizTalkPartnerSetupHdr."Purchase Item Number Type"::"Vendor Item No.":
          BEGIN
            OutboundPurchaseDocLine.TESTFIELD("Vendor Item No.");
            EXIT(ConvertVendorItemNo(
              OutboundPurchaseDocLine."Vendor Item No.",
              VendorNo));
          END;
        BizTalkPartnerSetupHdr."Purchase Item Number Type"::"Common Item No.":
          BEGIN
            OutboundPurchaseDocLine.TESTFIELD("Common Item No.");
            EXIT(ConvertCommonItemNo(OutboundPurchaseDocLine."Common Item No."));
          END;
      END;
    END;

    BEGIN
    END.
  }
}
