OBJECT Codeunit 800 Online Map Process Link
{
  OBJECT-PROPERTIES
  {
    Date=13/02/07;
    Time=12:00:00;
    Version List=NAVW15.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      OnlineMapSetupForm@1004 : Form 800;
      MapUtils@1002 : Codeunit 801;
      SourceParameter@1005 : TextConst 'ENU="&src=OF";ESP="&src=OF"';
      Text001@1001 : TextConst 'ENU="The program was not able to find any Online Map parameter setup with the\combination Country/Region Code %1 and Language Code %2. ";ESP="El programa no pudo encontrar ninguna configuraci¢n de par metros de Online Map con la\combinaci¢n C¢d. pa¡s/regi¢n %1 y C¢d. idioma %2. "';
      TempCountryLanguage@1003 : ARRAY [23,6] OF Text[250];
      Text002@1000 : TextConst 'ENU="The program was not able to find any Online Map parameter setup with the Country/Region Code %1. ";ESP="El programa no pudo encontrar ninguna configuraci¢n de par metros de Online Map con el C¢d. pa¡s/regi¢n %1. "';
      Text003@1038 : TextConst 'ENU=Could not find any Online Map Setup.;ESP=No se pudo encontrar ninguna Configuraci¢n Online Map.';
      Text010@1037 : TextConst 'ENU=http://maps.msn.at/home.aspx;ESP=http://maps.msn.at/home.aspx';
      Text011@1036 : TextConst 'ENU=http://maps.msn.at/directionsfind.aspx;ESP=http://maps.msn.at/directionsfind.aspx';
      Text012@1035 : TextConst 'ENU=http://maps.ninemsn.com.au/home.aspx;ESP=http://maps.ninemsn.com.au/home.aspx';
      Text013@1034 : TextConst 'ENU=http://maps.ninemsn.com.au/directionsfind.aspx;ESP=http://maps.ninemsn.com.au/directionsfind.aspx';
      Text014@1033 : TextConst 'ENU=http://maps.fr.msn.be/home.aspx;ESP=http://maps.fr.msn.be/home.aspx';
      Text015@1032 : TextConst 'ENU=http://maps.fr.msn.be/directionsfind.aspx;ESP=http://maps.fr.msn.be/directionsfind.aspx';
      Text016@1031 : TextConst 'ENU=http://maps.msn.be/home.aspx;ESP=http://maps.msn.be/home.aspx';
      Text017@1030 : TextConst 'ENU=http://maps.msn.be/directionsfind.aspx;ESP=http://maps.msn.be/directionsfind.aspx';
      Text018@1029 : TextConst 'ENU=http://maps.sympatico.msn.ca/home.aspx;ESP=http://maps.sympatico.msn.ca/home.aspx';
      Text019@1028 : TextConst 'ENU=http://maps.sympatico.msn.ca/directionsfind.aspx;ESP=http://maps.sympatico.msn.ca/directionsfind.aspx';
      Text020@1027 : TextConst 'ENU=http://fr.maps.sympatico.msn.ca/home.aspx;ESP=http://fr.maps.sympatico.msn.ca/home.aspx';
      Text021@1026 : TextConst 'ENU=http://fr.maps.sympatico.msn.ca/directionsfind.aspx;ESP=http://fr.maps.sympatico.msn.ca/directionsfind.aspx';
      Text022@1025 : TextConst 'ENU=http://maps.msn.de/home.aspx;ESP=http://maps.msn.de/home.aspx';
      Text023@1024 : TextConst 'ENU=http://maps.msn.de/directionsfind.aspx;ESP=http://maps.msn.de/directionsfind.aspx';
      Text024@1023 : TextConst 'ENU=http://maps.msn.com/home.aspx;ESP=http://maps.msn.com/home.aspx';
      Text025@1022 : TextConst 'ENU=http://maps.msn.com/directionsfind.aspx;ESP=http://maps.msn.com/directionsfind.aspx';
      Text026@1021 : TextConst 'ENU=http://maps.msn.es/home.aspx;ESP=http://maps.msn.es/home.aspx';
      Text027@1020 : TextConst 'ENU=http://maps.msn.es/directionsfind.aspx;ESP=http://maps.msn.es/directionsfind.aspx';
      Text028@1019 : TextConst 'ENU=http://maps.msn.fr/home.aspx;ESP=http://maps.msn.fr/home.aspx';
      Text029@1018 : TextConst 'ENU=http://maps.msn.fr/directionsfind.aspx;ESP=http://maps.msn.fr/directionsfind.aspx';
      Text030@1017 : TextConst 'ENU=http://maps.msn.co.uk/home.aspx;ESP=http://maps.msn.co.uk/home.aspx';
      Text031@1016 : TextConst 'ENU=http://maps.msn.co.uk/directionsfind.aspx;ESP=http://maps.msn.co.uk/directionsfind.aspx';
      Text032@1015 : TextConst 'ENU=http://maps.msn.it/home.aspx;ESP=http://maps.msn.it/home.aspx';
      Text033@1014 : TextConst 'ENU=http://maps.msn.it/directionsfind.aspx;ESP=http://maps.msn.it/directionsfind.aspx';
      Text034@1013 : TextConst 'ENU=http://maps.msn.nl/home.aspx;ESP=http://maps.msn.nl/home.aspx';
      Text035@1012 : TextConst 'ENU=http://maps.msn.nl/directionsfind.aspx;ESP=http://maps.msn.nl/directionsfind.aspx';
      Text036@1011 : TextConst 'ENU=http://maps.msn.se/home.aspx;ESP=http://maps.msn.se/home.aspx';
      Text037@1010 : TextConst 'ENU=http://maps.msn.se/directionsfind.aspx;ESP=http://maps.msn.se/directionsfind.aspx';
      Text038@1009 : TextConst 'ENU=http://mappoint.msn.com/home.aspx;ESP=http://mappoint.msn.com/home.aspx';
      Text039@1008 : TextConst 'ENU=http://mappoint.msn.com/directionsfind.aspx;ESP=http://mappoint.msn.com/directionsfind.aspx';
      Text040@1007 : TextConst 'ENU=http://maps.latino.msn.com/home.aspx;ESP=http://maps.latino.msn.com/home.aspx';
      Text041@1006 : TextConst 'ENU=http://maps.latino.msn.com/directionsfind.aspx;ESP=http://maps.latino.msn.com/directionsfind.aspx';

    PROCEDURE ProcessWebMap@50(TableNo@1007 : Integer;ToRecPosition@1008 : Text[1000];URL@1009 : Text[200]);
    VAR
      Parameters@1010 : Text[250];
      AddressCount@1011 : Integer;
      RegionParam@1000 : Text[10];
      RegionParamExists@1002 : Boolean;
      RouteType@1006 : 'Quickest,Shortest';
      RouteUnit@1005 : 'Miles,Kilometres';
    BEGIN
      RegionParamExists := TestRegionParameters(TableNo,ToRecPosition,RegionParam,RouteType,RouteUnit,URL,TRUE);

      AddressCount := 1;
      Parameters := MapUtils.BuildParameters(TableNo,ToRecPosition,AddressCount,TRUE);

      IF URL[STRLEN(URL)] <> '?' THEN
        URL := URL + '?';

      IF RegionParamExists THEN
        HYPERLINK(URL + Parameters + SourceParameter + '&cnty1=' + RegionParam)
      ELSE
        HYPERLINK(URL + Parameters + SourceParameter);
    END;

    PROCEDURE ProcessWebDirections@51(FromNo@1010 : Integer;FromRecPosition@1011 : Text[1000];ToNo@1012 : Integer;ToRecPosition@1013 : Text[1000];URL@1014 : Text[200];Distance@1008 : 'Miles,Kilometres';Route@1009 : 'Quickest,Shortest');
    VAR
      Parameters@1015 : ARRAY [2] OF Text[250];
      AddressCount@1016 : Integer;
      RegionParam@1000 : Text[10];
      RegionParamExcists@1001 : Boolean;
      Region1@1002 : Text[11];
      Region2@1003 : Text[11];
      RouteTypeValue@1006 : Text[30];
      UnitTypeValue@1007 : Text[30];
      RouteType@1005 : 'Quickest,Shortest';
      RouteUnit@1004 : 'Miles,Kilometers';
    BEGIN
      RegionParamExcists := TestRegionParameters(ToNo,ToRecPosition,RegionParam,RouteType,RouteUnit,URL,FALSE);
      IF RegionParamExcists THEN BEGIN
        Region2 := '&cnty2=' + RegionParam;
      END;

      RegionParamExcists := TestRegionParameters(FromNo,FromRecPosition,RegionParam,RouteType,RouteUnit,URL,FALSE);
      IF RegionParamExcists THEN BEGIN
        Region1 := '&cnty1=' + RegionParam;
        IF Route = Route::Quickest THEN
          RouteTypeValue := '&rtyp=0'
        ELSE
          RouteTypeValue := '&rtyp=1';
        IF Distance = Distance::Miles THEN
          UnitTypeValue := '&unit=0'
        ELSE
          UnitTypeValue := '&unit=1'
      END;

      AddressCount := 1;

      Parameters[AddressCount] := MapUtils.BuildParameters(FromNo,FromRecPosition,AddressCount,TRUE);
      AddressCount := AddressCount + 1;
      Parameters[AddressCount] := MapUtils.BuildParameters(ToNo,ToRecPosition,AddressCount,TRUE);

      IF URL[STRLEN(URL)] <> '?' THEN
        URL := URL + '?';

      IF RegionParamExcists THEN
        HYPERLINK(
          URL + Parameters[1] + '&' + Parameters[2] + SourceParameter + Region1 +
          Region2 + RouteTypeValue + UnitTypeValue)
      ELSE
        HYPERLINK(URL + Parameters[1] + '&' + Parameters[2] + SourceParameter);
    END;

    PROCEDURE TestRegionParameters@52(TableID@1000 : Integer;RecID@1001 : Text[1000];VAR RegionParam@1006 : Text[10];VAR RouteType@1011 : 'Quickest,Shortest';VAR RouteUnit@1012 : 'Miles,Kilometres';VAR URL@1007 : Text[1000];Region@1008 : Boolean) : Boolean;
    VAR
      OnlineMapSetup@1010 : Record 800;
      OnlineMapParamSetup@1005 : Record 801;
      RecordRef@1002 : RecordRef;
      FeltRef@1003 : FieldRef;
      CountryCode@1004 : Code[10];
      LanguageCode@1009 : Code[10];
      RecordCountryCode@1013 : Code[10];
    BEGIN
      IF OnlineMapSetup.GET THEN BEGIN
        IF OnlineMapSetup."Show Maps In Language" = OnlineMapSetup."Show Maps In Language"::"Default Language" THEN BEGIN
          CountryCode := OnlineMapSetup."Default Country/Region Code";
          LanguageCode := OnlineMapSetup."Default Language Code";
          RouteType := OnlineMapSetup.Route;
          RouteUnit := OnlineMapSetup."Distance In";
        END ELSE
          OnlineMapSetupForm.FindClientLanguage(CountryCode,LanguageCode);
      END ELSE
        ERROR(Text003);

      IF TableID <> 0 THEN BEGIN
        RecordRef.OPEN(TableID);
        RecordRef.SETPOSITION(RecID);
        IF RecordRef.FIND('=') THEN BEGIN
          CASE TableID OF
            14: BEGIN
                FeltRef := RecordRef.FIELD(5720);
                RecordCountryCode := FORMAT(FeltRef);
              END;
            18: BEGIN
                FeltRef := RecordRef.FIELD(35);
                RecordCountryCode := FORMAT(FeltRef);
              END;
            23: BEGIN
                FeltRef := RecordRef.FIELD(35);
                RecordCountryCode := FORMAT(FeltRef);
              END;
            79: BEGIN
                FeltRef := RecordRef.FIELD(36);
                RecordCountryCode := FORMAT(FeltRef);
              END;
            156: BEGIN
                FeltRef := RecordRef.FIELD(59);
                RecordCountryCode := FORMAT(FeltRef);
              END;
            167: BEGIN
                FeltRef := RecordRef.FIELD(67);
                RecordCountryCode := FORMAT(FeltRef);
              END;
            222: BEGIN
                FeltRef := RecordRef.FIELD(35);
                RecordCountryCode := FORMAT(FeltRef);
              END;
            224: BEGIN
                FeltRef := RecordRef.FIELD(35);
                RecordCountryCode := FORMAT(FeltRef);
              END;
            270: BEGIN
                FeltRef := RecordRef.FIELD(35);
                RecordCountryCode := FORMAT(FeltRef);
              END;
            5050: BEGIN
                FeltRef := RecordRef.FIELD(35);
                RecordCountryCode := FORMAT(FeltRef);
              END;
            5200: BEGIN
                FeltRef := RecordRef.FIELD(25);
                RecordCountryCode := FORMAT(FeltRef);
              END;
          END;
        END;

        OnlineMapParamSetup.SETRANGE("Country/Region Code",RecordCountryCode);
        IF OnlineMapParamSetup.FIND('-') THEN BEGIN
          RegionParam := FORMAT(OnlineMapParamSetup."Country/Region Cnty Value");
        END ELSE
          ERROR(STRSUBSTNO(Text002,RecordCountryCode));

        OnlineMapParamSetup.SETRANGE("Country/Region Code",CountryCode);
        OnlineMapParamSetup.SETRANGE("Language Code",LanguageCode);
        IF OnlineMapParamSetup.FIND('-') THEN BEGIN
          OnlineMapParamSetup.TESTFIELD("Local Map URL");
          OnlineMapParamSetup.TESTFIELD("Local Directions Find URL");
          IF Region THEN
            URL := OnlineMapParamSetup."Local Map URL"
          ELSE
            URL := OnlineMapParamSetup."Local Directions Find URL";
          EXIT(TRUE)
        END ELSE
          ERROR(STRSUBSTNO(Text001,CountryCode,LanguageCode));
      END;
    END;

    PROCEDURE SetupDefault@2();
    BEGIN
      InsertDefaultOnlineMapParam;
    END;

    PROCEDURE InsertDefaultOnlineMapParam@7();
    VAR
      CountryRegion@1002 : Record 9;
      Languages@1003 : Record 8;
      I@1035 : Integer;
    BEGIN
      TempCountryLanguage[1,1] := 'DEA';
      TempCountryLanguage[1,2] := 'AT';
      TempCountryLanguage[1,3] := '5';
      TempCountryLanguage[1,4] := '1';
      TempCountryLanguage[1,5] := Text010;
      TempCountryLanguage[1,6] := Text011;
      TempCountryLanguage[2,1] := 'ENA';
      TempCountryLanguage[2,2] := 'AU';
      TempCountryLanguage[2,3] := '17';
      TempCountryLanguage[2,4] := '3';
      TempCountryLanguage[2,5] := Text012;
      TempCountryLanguage[2,6] := Text013;
      TempCountryLanguage[3,1] := 'FRB';
      TempCountryLanguage[3,2] := 'BE';
      TempCountryLanguage[3,3] := '7';
      TempCountryLanguage[3,4] := '1';
      TempCountryLanguage[3,5] := Text014;
      TempCountryLanguage[3,6] := Text015;
      TempCountryLanguage[4,1] := 'NLB';
      TempCountryLanguage[4,2] := 'BE';
      TempCountryLanguage[4,3] := '7';
      TempCountryLanguage[4,4] := '1';
      TempCountryLanguage[4,5] := Text016;
      TempCountryLanguage[4,6] := Text017;
      TempCountryLanguage[5,1] := 'ENC';
      TempCountryLanguage[5,2] := 'CA';
      TempCountryLanguage[5,3] := '1';
      TempCountryLanguage[5,4] := '0';
      TempCountryLanguage[5,5] := Text018;
      TempCountryLanguage[5,6] := Text019;
      TempCountryLanguage[6,1] := 'FRC';
      TempCountryLanguage[6,2] := 'CA';
      TempCountryLanguage[6,3] := '1';
      TempCountryLanguage[6,4] := '0';
      TempCountryLanguage[6,5] := Text020;
      TempCountryLanguage[6,6] := Text021;
      TempCountryLanguage[7,1] := 'DEU';
      TempCountryLanguage[7,2] := 'DE';
      TempCountryLanguage[7,3] := '4';
      TempCountryLanguage[7,4] := '1';
      TempCountryLanguage[7,5] := Text022;
      TempCountryLanguage[7,6] := Text023;
      TempCountryLanguage[8,1] := 'DAN';
      TempCountryLanguage[8,2] := 'DK';
      TempCountryLanguage[8,3] := '9';
      TempCountryLanguage[8,4] := '1';
      TempCountryLanguage[8,5] := Text024;
      TempCountryLanguage[8,6] := Text025;
      TempCountryLanguage[9,1] := 'ESP';
      TempCountryLanguage[9,2] := 'ES';
      TempCountryLanguage[9,3] := '10';
      TempCountryLanguage[9,4] := '1';
      TempCountryLanguage[9,5] := Text026;
      TempCountryLanguage[9,6] := Text027;
      TempCountryLanguage[10,1] := 'FRA';
      TempCountryLanguage[10,2] := 'FR';
      TempCountryLanguage[10,3] := '3';
      TempCountryLanguage[10,4] := '1';
      TempCountryLanguage[10,5] := Text028;
      TempCountryLanguage[10,6] := Text029;
      TempCountryLanguage[11,1] := 'ENG';
      TempCountryLanguage[11,2] := 'GB';
      TempCountryLanguage[11,3] := '2';
      TempCountryLanguage[11,4] := '1';
      TempCountryLanguage[11,5] := Text030;
      TempCountryLanguage[11,6] := Text031;
      TempCountryLanguage[12,1] := 'ITA';
      TempCountryLanguage[12,2] := 'IT';
      TempCountryLanguage[12,3] := '11';
      TempCountryLanguage[12,4] := '1';
      TempCountryLanguage[12,5] := Text032;
      TempCountryLanguage[12,6] := Text033;
      TempCountryLanguage[13,1] := 'NLD';
      TempCountryLanguage[13,2] := 'NL';
      TempCountryLanguage[13,3] := '12';
      TempCountryLanguage[13,4] := '1';
      TempCountryLanguage[13,5] := Text034;
      TempCountryLanguage[13,6] := Text035;
      TempCountryLanguage[14,1] := 'SVE';
      TempCountryLanguage[14,2] := 'SE';
      TempCountryLanguage[14,3] := '16';
      TempCountryLanguage[14,4] := '1';
      TempCountryLanguage[14,5] := Text036;
      TempCountryLanguage[14,6] := Text037;
      TempCountryLanguage[15,1] := 'ENU';
      TempCountryLanguage[15,2] := 'US';
      TempCountryLanguage[15,3] := '0';
      TempCountryLanguage[15,4] := '0';
      TempCountryLanguage[15,5] := Text038;
      TempCountryLanguage[15,6] := Text039;
      TempCountryLanguage[16,1] := 'ESP';
      TempCountryLanguage[16,2] := 'US';
      TempCountryLanguage[16,3] := '0';
      TempCountryLanguage[16,4] := '0';
      TempCountryLanguage[16,5] := Text040;
      TempCountryLanguage[16,6] := Text041;
      TempCountryLanguage[17,1] := 'ENU';
      TempCountryLanguage[17,2] := 'CH';
      TempCountryLanguage[17,3] := '6';
      TempCountryLanguage[17,4] := '1';
      TempCountryLanguage[17,5] := Text024;
      TempCountryLanguage[17,6] := Text025;
      TempCountryLanguage[18,1] := 'ENU';
      TempCountryLanguage[18,2] := 'LU';
      TempCountryLanguage[18,3] := '8';
      TempCountryLanguage[18,4] := '1';
      TempCountryLanguage[18,5] := Text024;
      TempCountryLanguage[18,6] := Text025;
      TempCountryLanguage[19,1] := 'ENU';
      TempCountryLanguage[19,2] := 'FI';
      TempCountryLanguage[19,3] := '13';
      TempCountryLanguage[19,4] := '1';
      TempCountryLanguage[19,5] := Text024;
      TempCountryLanguage[19,6] := Text025;
      TempCountryLanguage[20,1] := 'ENU';
      TempCountryLanguage[20,2] := 'NO';
      TempCountryLanguage[20,3] := '14';
      TempCountryLanguage[20,4] := '1';
      TempCountryLanguage[20,5] := Text024;
      TempCountryLanguage[20,6] := Text025;
      TempCountryLanguage[21,1] := 'ENU';
      TempCountryLanguage[21,2] := 'PT';
      TempCountryLanguage[21,3] := '15';
      TempCountryLanguage[21,4] := '1';
      TempCountryLanguage[21,5] := Text024;
      TempCountryLanguage[21,6] := Text025;
      TempCountryLanguage[22,1] := 'ENU';
      TempCountryLanguage[22,2] := 'BR';
      TempCountryLanguage[22,3] := '18';
      TempCountryLanguage[22,4] := '4';
      TempCountryLanguage[22,5] := Text024;
      TempCountryLanguage[22,6] := Text025;
      TempCountryLanguage[23,1] := 'ENU';
      TempCountryLanguage[23,2] := 'GR';
      TempCountryLanguage[23,3] := '19';
      TempCountryLanguage[23,4] := '1';
      TempCountryLanguage[23,5] := Text024;
      TempCountryLanguage[23,6] := Text025;

      FOR I := 1 TO 23 DO BEGIN
        IF Languages.GET(TempCountryLanguage[I,1]) AND
           CountryRegion.GET(TempCountryLanguage[I,2]) THEN
          InsertParam(TempCountryLanguage[I,1],TempCountryLanguage[I,2],TempCountryLanguage[I,3],
            TempCountryLanguage[I,4],TempCountryLanguage[I,5],TempCountryLanguage[I,6]);
      END;
    END;

    PROCEDURE InsertParam@3(Language@1000 : Text[250];CountryRegion@1001 : Text[250];CntyValue@1002 : Text[250];WorldRegion@1003 : Text[250];OnlineMap@1004 : Text[250];Directions@1005 : Text[250]);
    VAR
      ParameterSetup@1006 : Record 801;
    BEGIN
      ParameterSetup.INIT;
      ParameterSetup."Country/Region Code" := CountryRegion;
      ParameterSetup."Language Code" := Language;
      EVALUATE(ParameterSetup."Country/Region Cnty Value",CntyValue);
      ParameterSetup."Local Map URL" := OnlineMap;
      ParameterSetup."Local Directions Find URL" := Directions;
      EVALUATE(ParameterSetup."MSN World Regional Code",WorldRegion);
      ParameterSetup.INSERT(TRUE);
    END;

    BEGIN
    END.
  }
}
