OBJECT Codeunit 7009756 Macros GCT
{
  OBJECT-PROPERTIES
  {
    Date=02/10/12;
    Time=12:00:00;
    Modified=Yes;
    Version List=AIC2009;
  }
  PROPERTIES
  {
    Permissions=TableData 17=rimd,
                TableData 25=rimd,
                TableData 45=rimd,
                TableData 271=rimd;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text001@1103355000 : TextConst 'ENU=Registrations of interface of bookings with more than 12 months are about to be deleted.;ESP=Se van a borrar los registros del interfase de reservas con mas de 12 meses de antiguedad';
      Text002@1103355001 : TextConst 'ENU=Debugging interface of bookings LTU\@1@@@@@@@@@@@@@;ESP=Depurando interfase de reservas LTU\@1@@@@@@@@@@@@@';
      Text003@1103355002 : TextConst 'ENU=Change Touroperator of booking\Current Touroperator #1######## Voucher #2########\New Touroperator  #3######## Voucher #4########;ESP=Cambiar el touroperador de reserva\Touroperador actual #1######## Bono #2########\Nuevo Touroperador  #3######## Bono #4########';
      Text004@1103355003 : TextConst 'ENU=Confirm to change current touropeator #1######## Voucher #2######## per New Touroperator  #3######## Voucher #4########;ESP=Confirma que desea cambiar el Touroperador actual #1######## Bono #2######## por el Nuevo Touroperador  #3######## Bono #4########';
      rBono@1103355004 : Record 7010013;
      rBono2@1103355010 : Record 7010013;
      rCIBono@1103355005 : Record 7010018;
      rCIBonoCnp@1103355006 : Record 7010019;
      rCIBonoDia@1103355007 : Record 7010020;
      rResumenReserva@1103355008 : Record 7009771;
      rConc@1103355009 : Record 7010070;
      Text005@1103355011 : TextConst 'ENU=Delete Voucher in Hotel Payment\Local Office   #1######## \Touroperator #2######## \Voucher       #3######## \Booking    #4##### \Sequence    #5####;ESP=Eliminar un Bono en Hotel Payment\Delegacion   #1######## \Touroperador #2######## \Bono       #3######## \Reserva    #4##### \Secuencia    #5####';
      Text006@1103355012 : TextConst 'ENU=Voucher %1 booking %4 sequence %5 of local office %2 and touroperator %3, because it has already been validated;ESP=No se puede eliminar el bono %1 reserva %4 secuencia %5 de la delegacion %2 y touroperador %3, porque ya ha sido validado.';
      Text007@1103355013 : TextConst 'ENU=Process ended correctly;ESP=Proceso finalizado correctamente.';
      Text008@1103355014 : TextConst 'ENU=Any voucher has been found in given info;ESP=No se ha encontrado ningun bono con la informacion suministrada';

    PROCEDURE DepurarInterfaseReservas@1103355000();
    VAR
      lwFecha@1103355000 : Date;
      lwVentana@1103355008 : Dialog;
      lwActual@1103355009 : Integer;
      lwTotal@1103355010 : Integer;
      lrHist@1103355001 : Record 7010082;
      lrCab@1103355002 : Record 7010076;
      lrPax@1103355003 : Record 7010079;
      lrVuel@1103355004 : Record 7010077;
      lrHot@1103355005 : Record 7010078;
      lrServ@1103355006 : Record 7010080;
      lrError@1103355007 : Record 7010083;
    BEGIN
      // DepurarInterfaseLTU

      // 13.11.2006
      // Esta rutina borra los registros del interfase de reservas de LTU con mas de 6 meses
      // de antiguedad

      IF NOT CONFIRM(Text001) THEN
        EXIT;

      lwFecha := DMY2DATE(1, DATE2DMY(TODAY, 2), DATE2DMY(TODAY, 3));

      // Borramos los ficheros importados con mas de un a¤o de antiguedad

      lwFecha := CALCDATE('-1A', lwFecha);

      // Filtramos el registro de historico de importaciones y para cada fichero borramos
      // toda su informacion

      lrHist.SETFILTER("Fecha importacion", '<%1', lwFecha);
      IF lrHist.FINDSET(TRUE, FALSE) THEN BEGIN
        lwVentana.OPEN(Text002);
        lwTotal  := lrHist.COUNT;
        lwActual := 0;
        REPEAT

          // Actualizar la barra de progreso

          lwActual += 1;
          lwVentana.UPDATE(1, ROUND(lwActual / lwTotal * 10000, 1));

          // Borramos los registros de cabecera

          lrCab.SETRANGE(Fichero, lrHist."N§ Fichero");
          IF lrCab.FINDFIRST THEN
            lrCab.DELETEALL;

          // Borramos los registros de hotel

          lrHot.SETRANGE(Fichero, lrHist."N§ Fichero");
          IF lrHot.FINDFIRST THEN
            lrHot.DELETEALL;

          // Borramos los registros de vuelos

          lrVuel.SETRANGE(Fichero, lrHist."N§ Fichero");
          IF lrVuel.FINDFIRST THEN
            lrVuel.DELETEALL;

          // Borramos los registros de paxes

          lrPax.SETRANGE(Fichero, lrHist."N§ Fichero");
          IF lrPax.FINDFIRST THEN
            lrPax.DELETEALL;

          // Borramos los registros de servicios

          lrServ.SETRANGE(Fichero, lrHist."N§ Fichero");
          IF lrServ.FINDFIRST THEN
            lrServ.DELETEALL;

          // Borramos los registros de errores

          lrError.SETRANGE("ID Fichero", lrHist."N§ Fichero");
          IF lrError.FINDFIRST THEN
            lrError.DELETEALL;

        UNTIL lrHist.NEXT = 0;

        // Borramos los registros del historico

        lrHist.DELETEALL;

        lwVentana.CLOSE;
      END;
    END;

    PROCEDURE CambiaTouroperadorReserva@1103355001();
    VAR
      wTouroperadorOLD@1103355002 : Code[10];
      wBonoOLD@1103355001 : Code[10];
      wTouroperadorNEW@1103355000 : Code[10];
      wBonoNEW@1103355006 : Code[10];
      Ventana@1103355003 : Dialog;
    BEGIN
      // CambiaTouroperadorReserva

      Ventana.OPEN(Text003);
      Ventana.INPUT(1, wTouroperadorOLD);
      Ventana.INPUT(2, wBonoOLD);
      Ventana.INPUT(3, wTouroperadorNEW);
      Ventana.INPUT(4, wBonoNEW);
      Ventana.CLOSE;

      IF (wTouroperadorOLD = '') OR (wBonoOLD = '') OR (wTouroperadorNEW = '') OR (wBonoNEW = '') OR
         ((wTouroperadorOLD = wTouroperadorNEW) AND (wBonoOLD = wBonoNEW)) THEN
        EXIT;

      IF NOT CONFIRM(Text004, FALSE, wTouroperadorOLD, wBonoOLD, wTouroperadorNEW, wBonoNEW) THEN
        EXIT;

      CambiaTouroperadorCabecera(wTouroperadorOLD, wBonoOLD, wTouroperadorNEW, wBonoNEW);

      MESSAGE('Proceso finalizado.');
    END;

    PROCEDURE CambiaTouroperadorCabecera@1103355005(pwTouroperadorOLD@1103355003 : Code[10];pwBonoOLD@1103355002 : Code[10];pwTouroperadorNEW@1103355001 : Code[10];pwBonoNEW@1103355000 : Code[10]);
    VAR
      rCab@1103355005 : Record 7009741;
      rCab2@1103355004 : Record 7009741;
    BEGIN
      // CambiaTouroperadorCabecera

      rCab.RESET;
      rCab.SETCURRENTKEY("TourOperador Venta",
                         Bono);
      rCab.SETRANGE("TourOperador Venta", pwTouroperadorOLD);
      rCab.SETRANGE(Bono                , pwBonoOLD);
      IF rCab.FINDSET(TRUE) THEN BEGIN
        REPEAT
          CambiaTouroperadorPeriodo(rCab, pwTouroperadorNEW, pwBonoNEW);

          rCab2 := rCab;
          rCab2.Bono                 := pwBonoNEW;
          rCab2."TourOperador Venta" := pwTouroperadorNEW;
          rCab2.MODIFY;
        UNTIL rCab.NEXT = 0;
      END;
    END;

    PROCEDURE CambiaTouroperadorPeriodo@1103355003(prCab@1103355010 : Record 7009741;pwTouroperadorNEW@1103355000 : Code[10];pwBonoNEW@1103355001 : Code[10]);
    VAR
      rPer@1103355009 : Record 7009742;
      rRsv@1103355008 : Record 7009743;
      rRsvTra@1103355003 : Record 7009744;
    BEGIN
      // CambiaTouroperadorPeriodo

      rPer.RESET;
      rPer.SETRANGE(Delegacion  , prCab.Delegacion);
      rPer.SETRANGE("N§ Interno", prCab."N§ Interno");
      IF rPer.FINDSET(TRUE) THEN BEGIN
        rRsv.SETCURRENTKEY(Delegacion,
                           "N§ Interno",
                           "N§ Periodo");

        rRsvTra.SETCURRENTKEY(Delegacion,
                              "N§ Interno",
                              "N§ Periodo");
        REPEAT
          rRsv.SETRANGE(Delegacion  , rPer.Delegacion);
          rRsv.SETRANGE("N§ Interno", rPer."N§ Interno");
          rRsv.SETRANGE("N§ Periodo", rPer."N§ Periodo");
          IF rRsv.FINDSET(TRUE) THEN BEGIN
            REPEAT
              CambiaTouroperadorBonos(rRsv, pwTouroperadorNEW, pwBonoNEW);

              rRsv."TourOperador Venta" := pwTouroperadorNEW;
              rRsv.Bono                 := pwBonoNEW;
              rRsv.MODIFY;
            UNTIL rRsv.NEXT = 0;
          END;

          rRsvTra.SETRANGE(Delegacion  , rPer.Delegacion);
          rRsvTra.SETRANGE("N§ Interno", rPer."N§ Interno");
          rRsvTra.SETRANGE("N§ Periodo", rPer."N§ Periodo");
          IF rRsvTra.FINDSET(TRUE) THEN BEGIN
            REPEAT
              rRsvTra.TourOperador := pwTouroperadorNEW;
              rRsvTra.Bono         := pwBonoNEW;
              rRsvTra.MODIFY;
            UNTIL rRsvTra.NEXT = 0;
          END;

          rPer."TourOperador Venta" := pwTouroperadorNEW;
          rPer.Bono         := pwBonoNEW;
          rPer.MODIFY;
        UNTIL rPer.NEXT = 0;
      END;
    END;

    PROCEDURE CambiaTouroperadorBonos@1103355008(prRsv@1103355000 : Record 7009743;pwTouroperadorNEW@1103355001 : Code[10];pwBonoNEW@1103355012 : Code[10]);
    VAR
      rBono@1103355005 : Record 7010013;
      rBono2@1103355006 : Record 7010013;
      rBono3@1103355009 : Record 7010013;
      rCIBono@1103355004 : Record 7010018;
      rCIBono2@1103355007 : Record 7010018;
      rCIBono3@1103355010 : Record 7010018;
      rCIBonoCnp@1103355003 : Record 7010019;
      rCIBonoCnp2@1103355008 : Record 7010019;
      rCIBonoCnp3@1103355011 : Record 7010019;
      rResum@1103355002 : Record 7009771;
    BEGIN
      // CambiaTouroperadorBonos

      rBono.RESET;
      rBono.SETRANGE(Delegacion  , prRsv.Delegacion);
      rBono.SETRANGE(TourOperador, prRsv."TourOperador Venta");
      rBono.SETRANGE(Bono        , prRsv.Bono);
      rBono.SETRANGE("N§ Reserva", prRsv."N§ Reserva");
      IF rBono.FINDSET(TRUE) THEN BEGIN
        REPEAT
          rCIBono.SETRANGE(Delegacion    , rBono.Delegacion);
          rCIBono.SETRANGE(TourOperador  , rBono.TourOperador);
          rCIBono.SETRANGE(Bono          , rBono.Bono);
          rCIBono.SETRANGE("N§ Reserva"  , rBono."N§ Reserva");
          rCIBono.SETRANGE("N§ Secuencia", rBono."N§ Secuencia");
          IF rCIBono.FINDSET(TRUE) THEN BEGIN
            REPEAT
              rCIBono2 := rCIBono;
              rCIBono2.TourOperador := pwTouroperadorNEW;
              rCIBono2.Bono         := pwBonoNEW;
              rCIBono2.Replicado    := FALSE;
              rCIBono2.INSERT;

              rCIBono3 := rCIBono;
              rCIBono3.DELETE;
            UNTIL rCIBono.NEXT = 0;
          END;

          rCIBonoCnp.SETRANGE(Delegacion    , rBono.Delegacion);
          rCIBonoCnp.SETRANGE(TourOperador  , rBono.TourOperador);
          rCIBonoCnp.SETRANGE(Bono          , rBono.Bono);
          rCIBonoCnp.SETRANGE("N§ Reserva"  , rBono."N§ Reserva");
          rCIBonoCnp.SETRANGE("N§ Secuencia", rBono."N§ Secuencia");
          IF rCIBonoCnp.FINDSET(TRUE) THEN BEGIN
            REPEAT
              rCIBonoCnp2 := rCIBonoCnp;
              rCIBonoCnp2.TourOperador := pwTouroperadorNEW;
              rCIBonoCnp2.Bono         := pwBonoNEW;
              rCIBonoCnp2.Replicado    := FALSE;
              rCIBonoCnp2.INSERT;

              rCIBonoCnp3 := rCIBonoCnp;
              rCIBonoCnp3.DELETE;
            UNTIL rCIBonoCnp.NEXT = 0;
          END;

          rBono2 := rBono;
          rBono2.TourOperador := pwTouroperadorNEW;
          rBono2.Bono         := pwBonoNEW;
          rBono2.INSERT;

          rBono3 := rBono;
          rBono3.DELETE;
        UNTIL rBono.NEXT = 0;
      END;

      rResum.SETRANGE(Delegacion  , prRsv.Delegacion);
      rResum.SETRANGE("N§ Reserva", prRsv."N§ Reserva");
      IF rResum.FINDSET(TRUE) THEN BEGIN
        REPEAT
          rResum."TourOperador Venta" := pwTouroperadorNEW;
          rResum.Bono                 := pwBonoNEW;
          rResum.Replicado            := FALSE;
          rResum.MODIFY;
        UNTIL rResum.NEXT = 0;
      END
    END;

    PROCEDURE BorrarBonoHotelPayment@1103355002();
    VAR
      wVentana@1103355004 : Dialog;
      wBono@1103355003 : Code[10];
      wTouroperador@1103355002 : Code[10];
      wDelegacion@1103355001 : Code[10];
      wReserva@1103355000 : Integer;
      wSecuencia@1103355005 : Code[10];
    BEGIN
      // BorrarBonoHotelPayment

      wVentana.OPEN(Text005);
      wVentana.INPUT(1, wDelegacion);
      wVentana.INPUT(2, wTouroperador);
      wVentana.INPUT(3, wBono);
      wVentana.INPUT(4, wReserva);
      wVentana.INPUT(5, wSecuencia);
      wVentana.CLOSE;

      rBono.RESET;

      IF wDelegacion <> '' THEN
        rBono.SETRANGE(Delegacion, wDelegacion);

      IF wTouroperador <> '' THEN
        rBono.SETRANGE(TourOperador, wTouroperador);

      IF wBono <> '' THEN
        rBono.SETRANGE(Bono, wBono);

      IF wReserva <> 0 THEN
        rBono.SETRANGE("N§ Reserva", wReserva);

      IF wSecuencia <> '' THEN
        rBono.SETRANGE("N§ Secuencia", wSecuencia);

      IF rBono.FINDFIRST THEN BEGIN
        REPEAT
          rBono.CALCFIELDS("Importe ya validado");
          IF rBono."Importe ya validado" <> 0 THEN
            ERROR(Text006, wBono, wDelegacion, wTouroperador, wReserva, wSecuencia);

          rCIBono.SETRANGE(Delegacion    , rBono.Delegacion);
          rCIBono.SETRANGE(TourOperador  , rBono.TourOperador);
          rCIBono.SETRANGE(Bono          , rBono.Bono);
          rCIBono.SETRANGE("N§ Reserva"  , rBono."N§ Reserva");
          rCIBono.SETRANGE("N§ Secuencia", rBono."N§ Secuencia");
          IF rCIBono.FINDFIRST THEN
            rCIBono.DELETEALL;

          rCIBonoCnp.SETRANGE(Delegacion    , rBono.Delegacion);
          rCIBonoCnp.SETRANGE(TourOperador  , rBono.TourOperador);
          rCIBonoCnp.SETRANGE(Bono          , rBono.Bono);
          rCIBonoCnp.SETRANGE("N§ Reserva"  , rBono."N§ Reserva");
          rCIBonoCnp.SETRANGE("N§ Secuencia", rBono."N§ Secuencia");
          IF rCIBonoCnp.FINDFIRST THEN
            rCIBonoCnp.DELETEALL;

          rCIBonoDia.SETRANGE(Delegacion    , rBono.Delegacion);
          rCIBonoDia.SETRANGE(TourOperador  , rBono.TourOperador);
          rCIBonoDia.SETRANGE(Bono          , rBono.Bono);
          rCIBonoDia.SETRANGE("N§ Reserva"  , rBono."N§ Reserva");
          rCIBonoDia.SETRANGE("N§ Secuencia", rBono."N§ Secuencia");
          IF rCIBonoDia.FINDFIRST THEN
            rCIBonoDia.DELETEALL;

          rResumenReserva.SETCURRENTKEY(Delegacion,
                                        "TourOperador Venta",
                                        Bono);
          rResumenReserva.SETRANGE(Delegacion          , rBono.Delegacion);
          rResumenReserva.SETRANGE("TourOperador Venta", rBono.TourOperador);
          rResumenReserva.SETRANGE(Bono                , rBono.Bono);
          IF rResumenReserva.FINDFIRST THEN
            rResumenReserva.DELETEALL;

          rConc.SETRANGE(Delegacion    , rBono.Delegacion);
          rConc.SETRANGE(TourOperador  , rBono.TourOperador);
          rConc.SETRANGE(Bono          , rBono.Bono);
          rConc.SETRANGE("N§ Reserva"  , rBono."N§ Reserva");
          rConc.SETRANGE("N§ Secuencia", rBono."N§ Secuencia");
          IF rConc.FINDSET(TRUE) THEN
            rConc.DELETEALL;

          rBono2 := rBono;
          rBono2.DELETE;
        UNTIL rBono.NEXT = 0;

        MESSAGE(Text007);
      END
      ELSE
        ERROR(Text008);
    END;

    BEGIN
    {

      $001 AJF 05072011 (GOC-OC-11016) Nueva macro RellenarFechaCambioCIExcursion para actualizar la fecha de
                        cambio de divisa en las l¡neas C/I.
    }
    END.
  }
}
