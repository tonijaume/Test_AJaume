OBJECT Codeunit 74 Purch.-Get Receipt
{
  OBJECT-PROPERTIES
  {
    Date=25/05/05;
    Time=12:00:00;
    Version List=NAVW14.00.01;
  }
  PROPERTIES
  {
    TableNo=39;
    OnRun=BEGIN
            PurchHeader.GET("Document Type","Document No.");
            PurchHeader.TESTFIELD("Document Type",PurchHeader."Document Type"::Invoice);
            PurchHeader.TESTFIELD(Status,PurchHeader.Status::Open);

            PurchRcptLine.SETCURRENTKEY("Pay-to Vendor No.");
            PurchRcptLine.SETRANGE("Pay-to Vendor No.",PurchHeader."Pay-to Vendor No.");
            PurchRcptLine.SETFILTER("Qty. Rcd. Not Invoiced",'<>0');
            PurchRcptLine.SETRANGE("Currency Code",PurchHeader."Currency Code");

            GetReceipts.SETTABLEVIEW(PurchRcptLine);
            GetReceipts.LOOKUPMODE := TRUE;
            GetReceipts.SetPurchHeader(PurchHeader);
            GetReceipts.RUNMODAL;
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=The %1 on the %2 %3 and the %4 %5 must be the same.;ESP=El %1 en el %2 %3 y el %4 %5 debe ser el mismo.';
      PurchHeader@1001 : Record 38;
      PurchLine@1002 : Record 39;
      PurchRcptHeader@1003 : Record 120;
      PurchRcptLine@1004 : Record 121;
      GetReceipts@1005 : Form 5709;

    PROCEDURE CreateInvLines@1(VAR PurchRcptLine2@1000 : Record 121);
    VAR
      TransferLine@1001 : Boolean;
      TempFromLineDim@1002 : TEMPORARY Record 357;
      TempToLineDim@1003 : TEMPORARY Record 357;
      DimMgt@1004 : Codeunit 408;
    BEGIN
      WITH PurchRcptLine2 DO BEGIN
        SETFILTER("Qty. Rcd. Not Invoiced",'<>0');
        IF FIND('-') THEN BEGIN
          PurchLine.LOCKTABLE;
          PurchLine.SETRANGE("Document Type",PurchHeader."Document Type");
          PurchLine.SETRANGE("Document No.",PurchHeader."No.");
          PurchLine."Document Type" := PurchHeader."Document Type";
          PurchLine."Document No." := PurchHeader."No.";

          REPEAT
            IF PurchRcptHeader."No." <> "Document No." THEN BEGIN
              PurchRcptHeader.GET("Document No.");
              TransferLine := TRUE;
              IF PurchRcptHeader."Currency Code" <> PurchHeader."Currency Code" THEN BEGIN
                MESSAGE(
                  Text000,
                  PurchHeader.FIELDCAPTION("Currency Code"),
                  PurchHeader.TABLECAPTION, PurchHeader."No.",
                  PurchRcptHeader.TABLECAPTION,PurchRcptHeader."No.");
                TransferLine := FALSE;
              END;
              IF PurchRcptHeader."Pay-to Vendor No." <> PurchHeader."Pay-to Vendor No." THEN BEGIN
                MESSAGE(
                  Text000,
                  PurchHeader.FIELDCAPTION("Pay-to Vendor No."),
                  PurchHeader.TABLECAPTION, PurchHeader."No.",
                  PurchRcptHeader.TABLECAPTION,PurchRcptHeader."No.");
                TransferLine := FALSE;
              END;
            END;
            IF TransferLine THEN BEGIN
              PurchRcptLine := PurchRcptLine2;
              PurchRcptLine.InsertInvLineFromRcptLine(PurchLine,TempFromLineDim);
              DimMgt.MoveTempFromDimToTempToDim(TempFromLineDim,TempToLineDim);
            END;
          UNTIL NEXT = 0;
          GetItemChargeAssgnt(PurchRcptLine2);
          DimMgt.TransferTempToDimToDocDim(TempToLineDim);
        END;
      END;
    END;

    PROCEDURE SetPurchHeader@2(VAR PurchHeader2@1000 : Record 38);
    BEGIN
      PurchHeader.GET(PurchHeader2."Document Type",PurchHeader2."No.");
      PurchHeader.TESTFIELD("Document Type",PurchHeader."Document Type"::Invoice);
    END;

    PROCEDURE GetItemChargeAssgnt@5800(VAR PurchRcptLine@1000 : Record 121);
    VAR
      PurchOrderLine@1001 : Record 39;
      ItemChargeAssgntPurch@1002 : Record 5805;
    BEGIN
      WITH PurchRcptLine DO BEGIN
        SETRANGE(Type,Type::"Charge (Item)");
        IF FIND('-') THEN
          REPEAT
            IF PurchOrderLine.GET(PurchOrderLine."Document Type"::Order,"Order No.","Order Line No.")
            THEN BEGIN
              ItemChargeAssgntPurch.LOCKTABLE;
              ItemChargeAssgntPurch.RESET;
              ItemChargeAssgntPurch.SETRANGE("Document Type",PurchOrderLine."Document Type");
              ItemChargeAssgntPurch.SETRANGE("Document No.",PurchOrderLine."Document No.");
              ItemChargeAssgntPurch.SETRANGE("Document Line No.",PurchOrderLine."Line No.");
              IF ItemChargeAssgntPurch.FIND('-') THEN BEGIN
                ItemChargeAssgntPurch.CALCSUMS("Qty. to Assign");
                IF ItemChargeAssgntPurch."Qty. to Assign" <> 0 THEN
                  CopyItemChargeAssgnt(PurchOrderLine,PurchRcptLine,ItemChargeAssgntPurch."Qty. to Assign");
              END;
            END;
          UNTIL NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE CopyItemChargeAssgnt@5801(PurchOrderLine@1000 : Record 39;PurchRcptLine@1001 : Record 121;QtyToAssign@1002 : Decimal);
    VAR
      PurchRcptLine2@1003 : Record 121;
      PurchLine2@1004 : Record 39;
      ItemChargeAssgntPurch@1005 : Record 5805;
      ItemChargeAssgntPurch2@1006 : Record 5805;
      InsertChargeAssgnt@1007 : Boolean;
    BEGIN
      WITH PurchOrderLine DO BEGIN
        ItemChargeAssgntPurch.SETRANGE("Document Type","Document Type");
        ItemChargeAssgntPurch.SETRANGE("Document No.","Document No.");
        ItemChargeAssgntPurch.SETRANGE("Document Line No.","Line No.");
        IF ItemChargeAssgntPurch.FIND('-') THEN
          REPEAT
            IF ItemChargeAssgntPurch."Qty. to Assign" <> 0 THEN BEGIN
              ItemChargeAssgntPurch2 := ItemChargeAssgntPurch;
              PurchLine2.SETRANGE("Receipt No.",PurchRcptLine."Document No.");
              PurchLine2.SETRANGE("Receipt Line No.",PurchRcptLine."Line No.");
              IF PurchLine2.FIND('-') THEN
                REPEAT
                  PurchLine2.CALCFIELDS("Qty. to Assign");
                  InsertChargeAssgnt := PurchLine2."Qty. to Assign" <> PurchLine2.Quantity;
                UNTIL (PurchLine2.NEXT = 0) OR InsertChargeAssgnt;

              IF InsertChargeAssgnt THEN BEGIN
                ItemChargeAssgntPurch2."Document Type" := PurchLine2."Document Type";
                ItemChargeAssgntPurch2."Document No." := PurchLine2."Document No.";
                ItemChargeAssgntPurch2."Document Line No." := PurchLine2."Line No.";
                ItemChargeAssgntPurch2."Qty. Assigned" := 0;
                IF ABS(QtyToAssign) < ABS(ItemChargeAssgntPurch2."Qty. to Assign") THEN
                  ItemChargeAssgntPurch2."Qty. to Assign" := QtyToAssign;
                IF ABS(PurchLine2.Quantity - PurchLine2."Qty. to Assign") <
                   ABS(ItemChargeAssgntPurch2."Qty. to Assign")
                THEN
                  ItemChargeAssgntPurch2."Qty. to Assign" :=
                    PurchLine2.Quantity - PurchLine2."Qty. to Assign";
                ItemChargeAssgntPurch2.VALIDATE("Unit Cost");

                IF ItemChargeAssgntPurch2."Applies-to Doc. Type" = "Document Type" THEN BEGIN
                  ItemChargeAssgntPurch2."Applies-to Doc. Type" := PurchLine2."Document Type";
                  ItemChargeAssgntPurch2."Applies-to Doc. No." := PurchLine2."Document No.";
                  PurchRcptLine2.SETCURRENTKEY("Order No.","Order Line No.");
                  PurchRcptLine2.SETRANGE("Order No.",ItemChargeAssgntPurch."Applies-to Doc. No.");
                  PurchRcptLine2.SETRANGE("Order Line No.",ItemChargeAssgntPurch."Applies-to Doc. Line No.");
                  PurchRcptLine2.SETRANGE("Document No.",PurchRcptLine."Document No.");
                  IF PurchRcptLine2.FIND('-') THEN BEGIN
                    PurchLine2.SETCURRENTKEY("Document Type","Receipt No.","Receipt Line No.");
                    PurchLine2.SETRANGE("Document Type",PurchLine2."Document Type"::Invoice);
                    PurchLine2.SETRANGE("Receipt No.",PurchRcptLine2."Document No.");
                    PurchLine2.SETRANGE("Receipt Line No.",PurchRcptLine2."Line No.");
                    IF PurchLine2.FIND('-') AND (PurchLine2.Quantity <> 0) THEN
                      ItemChargeAssgntPurch2."Applies-to Doc. Line No." := PurchLine2."Line No."
                    ELSE
                     InsertChargeAssgnt := FALSE;
                  END ELSE
                    InsertChargeAssgnt := FALSE;
                END;
              END;

              IF InsertChargeAssgnt AND (ItemChargeAssgntPurch2."Qty. to Assign" <> 0) THEN BEGIN
                ItemChargeAssgntPurch2.INSERT;
                QtyToAssign := QtyToAssign - ItemChargeAssgntPurch2."Qty. to Assign";
              END;
            END;
          UNTIL ItemChargeAssgntPurch.NEXT = 0;
      END;
    END;

    BEGIN
    END.
  }
}
