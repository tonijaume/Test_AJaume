OBJECT Codeunit 1004 Job Transfer Line
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=NAVW16.00.01;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1001 : TextConst 'ENU="%1 %2 = %3 in %4 %5 = %6";ESP="%1 %2 = %3 en %4 %5 = %6"';
      CurrencyExchRate@1000 : Record 330;
      Currency@1002 : Record 4;
      LCYCurrency@1003 : Record 4;
      CurrencyRoundingRead@1004 : Boolean;

    PROCEDURE FromJnlLineToLedgEntry@1(JobJnlLine2@1000 : Record 210;VAR JobLedgEntry@1001 : Record 169);
    BEGIN
      JobLedgEntry."Job No." := JobJnlLine2."Job No.";
      JobLedgEntry."Job Task No." := JobJnlLine2."Job Task No.";
      JobLedgEntry."Job Posting Group" := JobJnlLine2."Posting Group";
      JobLedgEntry."Posting Date" := JobJnlLine2."Posting Date";
      JobLedgEntry."Document Date" := JobJnlLine2."Document Date";
      JobLedgEntry."Document No." := JobJnlLine2."Document No.";
      JobLedgEntry."External Document No." := JobJnlLine2."External Document No.";
      JobLedgEntry.Type := JobJnlLine2.Type;
      JobLedgEntry."No." := JobJnlLine2."No.";
      JobLedgEntry.Description := JobJnlLine2.Description;
      JobLedgEntry."Resource Group No." := JobJnlLine2."Resource Group No.";
      JobLedgEntry."Unit of Measure Code" := JobJnlLine2."Unit of Measure Code";
      JobLedgEntry."Location Code" := JobJnlLine2."Location Code";
      JobLedgEntry."Global Dimension 1 Code" := JobJnlLine2."Shortcut Dimension 1 Code";
      JobLedgEntry."Global Dimension 2 Code" := JobJnlLine2."Shortcut Dimension 2 Code";
      JobLedgEntry."Work Type Code" := JobJnlLine2."Work Type Code";
      JobLedgEntry."Source Code" := JobJnlLine2."Source Code";
      JobLedgEntry."Entry Type" := JobJnlLine2."Entry Type";
      JobLedgEntry."Gen. Bus. Posting Group" := JobJnlLine2."Gen. Bus. Posting Group";
      JobLedgEntry."Gen. Prod. Posting Group" := JobJnlLine2."Gen. Prod. Posting Group";
      JobLedgEntry."Journal Batch Name" := JobJnlLine2."Journal Batch Name";
      JobLedgEntry."Reason Code" := JobJnlLine2."Reason Code";
      JobLedgEntry."Variant Code" := JobJnlLine2."Variant Code";
      JobLedgEntry."Bin Code" := JobJnlLine2."Bin Code";
      JobLedgEntry."Line Type" := JobJnlLine2."Line Type";
      JobLedgEntry."Currency Code" := JobJnlLine2."Currency Code";
      JobLedgEntry."Description 2" := JobJnlLine2."Description 2";
      IF JobJnlLine2."Currency Code" = '' THEN
        JobLedgEntry."Currency Factor" := 1
      ELSE
        JobLedgEntry."Currency Factor" := JobJnlLine2."Currency Factor";
      JobLedgEntry."User ID" := USERID;
      JobLedgEntry."Customer Price Group" := JobJnlLine2."Customer Price Group";

      JobLedgEntry."Transport Method" := JobJnlLine2."Transport Method";
      JobLedgEntry."Transaction Type" := JobJnlLine2."Transaction Type";
      JobLedgEntry."Transaction Specification" := JobJnlLine2."Transaction Specification";
      JobLedgEntry."Entry/Exit Point" := JobJnlLine2."Entry/Exit Point";
      JobLedgEntry.Area := JobJnlLine2.Area;
      JobLedgEntry."Country/Region Code" := JobJnlLine2."Country/Region Code";

      JobLedgEntry."Unit Price (LCY)" := JobJnlLine2."Unit Price (LCY)";
      JobLedgEntry."Additional-Currency Total Cost" :=
        -JobJnlLine2."Source Currency Total Cost";
      JobLedgEntry."Add.-Currency Total Price" :=
        -JobJnlLine2."Source Currency Total Price";
      JobLedgEntry."Add.-Currency Line Amount" :=
        -JobJnlLine2."Source Currency Line Amount";

      JobLedgEntry."Service Order No." := JobJnlLine2."Service Order No.";
      JobLedgEntry."Posted Service Shipment No." := JobJnlLine2."Posted Service Shipment No.";

      // Amounts
      JobLedgEntry."Qty. per Unit of Measure" := JobJnlLine2."Qty. per Unit of Measure";

      JobLedgEntry."Direct Unit Cost (LCY)" := JobJnlLine2."Direct Unit Cost (LCY)";
      JobLedgEntry."Unit Cost (LCY)" := JobJnlLine2."Unit Cost (LCY)";
      JobLedgEntry."Unit Cost" := JobJnlLine2."Unit Cost";
      JobLedgEntry."Unit Price" := JobJnlLine2."Unit Price";

      JobLedgEntry."Line Discount %" := JobJnlLine2."Line Discount %";
    END;

    PROCEDURE FromJnlToPlanningLine@2(JobJnlLine@1000 : Record 210;VAR JobPlanningLine@1001 : Record 1003);
    BEGIN
      JobPlanningLine."Job No." := JobJnlLine."Job No.";
      JobPlanningLine."Job Task No." := JobJnlLine."Job Task No.";
      JobPlanningLine."Planning Date" := JobJnlLine."Posting Date";
      JobPlanningLine."Currency Date" := JobJnlLine."Posting Date";
      JobPlanningLine.Type := JobJnlLine.Type;
      JobPlanningLine."No." := JobJnlLine."No.";
      JobPlanningLine."Document No." := JobJnlLine."Document No.";
      JobPlanningLine.Description := JobJnlLine.Description;
      JobPlanningLine."Description 2" := JobJnlLine."Description 2";
      JobPlanningLine."Unit of Measure Code" := JobJnlLine."Unit of Measure Code";
      JobPlanningLine.VALIDATE("Line Type",JobJnlLine."Line Type" - 1);
      JobPlanningLine."Currency Code" := JobJnlLine."Currency Code";
      JobPlanningLine."Currency Factor" := JobJnlLine."Currency Factor";
      JobPlanningLine."Resource Group No." := JobJnlLine."Resource Group No.";
      JobPlanningLine."Location Code" := JobJnlLine."Location Code";
      JobPlanningLine."Work Type Code" := JobJnlLine."Work Type Code";
      JobPlanningLine."Customer Price Group" := JobJnlLine."Customer Price Group";
      JobPlanningLine."Country/Region Code" := JobJnlLine."Country/Region Code";
      JobPlanningLine."Gen. Bus. Posting Group" := JobJnlLine."Gen. Bus. Posting Group";
      JobPlanningLine."Gen. Prod. Posting Group" := JobJnlLine."Gen. Prod. Posting Group";
      JobPlanningLine."Document Date" := JobJnlLine."Document Date";
      JobPlanningLine."Variant Code" := JobJnlLine."Variant Code";
      JobPlanningLine."Bin Code" := JobJnlLine."Bin Code";
      JobPlanningLine."Serial No." := JobJnlLine."Serial No.";
      JobPlanningLine."Lot No." := JobJnlLine."Lot No.";
      JobPlanningLine."Service Order No." := JobJnlLine."Service Order No.";
      JobPlanningLine."Ledger Entry Type" := JobJnlLine."Ledger Entry Type";
      JobPlanningLine."Ledger Entry No." := JobJnlLine."Ledger Entry No.";
      JobPlanningLine."System-Created Entry" := TRUE;

      // Amounts
      JobPlanningLine.Quantity := JobJnlLine.Quantity;
      JobPlanningLine."Quantity (Base)" := JobJnlLine."Quantity (Base)";
      JobPlanningLine."Qty. per Unit of Measure" := JobJnlLine."Qty. per Unit of Measure";

      JobPlanningLine."Direct Unit Cost (LCY)" := JobJnlLine."Direct Unit Cost (LCY)";
      JobPlanningLine."Unit Cost (LCY)" := JobJnlLine."Unit Cost (LCY)";
      JobPlanningLine."Unit Cost" := JobJnlLine."Unit Cost";

      JobPlanningLine."Total Cost (LCY)" := JobJnlLine."Total Cost (LCY)";
      JobPlanningLine."Total Cost" := JobJnlLine."Total Cost";

      JobPlanningLine."Unit Price (LCY)" := JobJnlLine."Unit Price (LCY)";
      JobPlanningLine."Unit Price" := JobJnlLine."Unit Price";

      JobPlanningLine."Total Price (LCY)" := JobJnlLine."Total Price (LCY)";
      JobPlanningLine."Total Price" := JobJnlLine."Total Price";

      JobPlanningLine."Line Amount (LCY)" := JobJnlLine."Line Amount (LCY)";
      JobPlanningLine."Line Amount" := JobJnlLine."Line Amount";

      JobPlanningLine."Line Discount %" := JobJnlLine."Line Discount %";

      JobPlanningLine."Line Discount Amount (LCY)" := JobJnlLine."Line Discount Amount (LCY)";
      JobPlanningLine."Line Discount Amount" := JobJnlLine."Line Discount Amount";
    END;

    PROCEDURE FromPlanningSalesLinetoJnlLine@4(JobPlanningLine@1000 : Record 1003;SalesHeader@1004 : Record 36;SalesLine@1002 : Record 37;VAR JobJnlLine@1003 : Record 210);
    VAR
      SourceCodeSetup@1001 : Record 242;
      JobTask@1000000000 : Record 1001;
    BEGIN
      JobJnlLine."Job No." := JobPlanningLine."Job No.";
      JobJnlLine."Job Task No." := JobPlanningLine."Job Task No.";
      JobJnlLine.Type := JobPlanningLine.Type;
      JobTask.GET(JobPlanningLine."Job No.",JobPlanningLine."Job Task No.");
      JobJnlLine."Posting Group" := JobTask."Job Posting Group";
      JobJnlLine."Posting Date" := JobPlanningLine."Invoiced Date";
      JobJnlLine."Document Date" := JobPlanningLine."Invoiced Date";
      JobJnlLine."Document No." := SalesLine."Document No.";
      JobJnlLine."Entry Type" := JobJnlLine."Entry Type"::Sale;
      JobJnlLine."Gen. Bus. Posting Group" := SalesLine."Gen. Bus. Posting Group";
      JobJnlLine."Gen. Prod. Posting Group" := SalesLine."Gen. Prod. Posting Group";
      JobJnlLine."Serial No." := JobPlanningLine."Serial No.";
      JobJnlLine."Lot No." := JobPlanningLine."Lot No.";
      JobJnlLine."No." := JobPlanningLine."No.";
      JobJnlLine.Description := SalesLine.Description;
      JobJnlLine."Description 2" := SalesLine."Description 2";
      JobJnlLine."Unit of Measure Code" := JobPlanningLine."Unit of Measure Code";
      JobJnlLine."Line Type" := JobPlanningLine."Line Type";
      JobJnlLine."Currency Code" := JobPlanningLine."Currency Code";
      JobJnlLine."Currency Factor" := JobPlanningLine."Currency Factor";
      JobJnlLine."Resource Group No." := JobPlanningLine."Resource Group No.";
      JobJnlLine."Location Code" := JobPlanningLine."Location Code";
      JobJnlLine."Work Type Code" := JobPlanningLine."Work Type Code";
      JobJnlLine."Customer Price Group" := JobPlanningLine."Customer Price Group";
      JobJnlLine."Variant Code" := JobPlanningLine."Variant Code";
      JobJnlLine."Bin Code" := JobPlanningLine."Bin Code";
      JobJnlLine."Service Order No." := JobPlanningLine."Service Order No.";
      SourceCodeSetup.GET;
      JobJnlLine."Source Code" := SourceCodeSetup.Sales;
      JobJnlLine."Reason Code" := SalesHeader."Reason Code";
      JobJnlLine."External Document No." := SalesHeader."External Document No.";

      JobJnlLine."Transport Method" := SalesLine."Transport Method";
      JobJnlLine."Transaction Type" := SalesLine."Transaction Type";
      JobJnlLine."Transaction Specification" := SalesLine."Transaction Specification";
      JobJnlLine."Entry/Exit Point" := SalesLine."Exit Point";
      JobJnlLine.Area := SalesLine.Area;
      JobJnlLine."Country/Region Code" := JobPlanningLine."Country/Region Code";

      JobJnlLine."Shortcut Dimension 1 Code" := SalesLine."Shortcut Dimension 1 Code";
      JobJnlLine."Shortcut Dimension 2 Code" := SalesLine."Shortcut Dimension 2 Code";

      // Amounts
      JobJnlLine.Quantity := JobPlanningLine.Quantity;
      JobJnlLine."Quantity (Base)" := JobPlanningLine."Quantity (Base)";
      JobJnlLine."Qty. per Unit of Measure" := JobPlanningLine."Qty. per Unit of Measure";

      JobJnlLine."Direct Unit Cost (LCY)" := JobPlanningLine."Direct Unit Cost (LCY)";
      JobJnlLine."Unit Cost (LCY)" := JobPlanningLine."Unit Cost (LCY)";
      JobJnlLine."Unit Cost" := JobPlanningLine."Unit Cost";

      JobJnlLine."Total Cost (LCY)" := JobPlanningLine."Total Cost (LCY)";
      JobJnlLine."Total Cost" := JobPlanningLine."Total Cost";

      JobJnlLine."Unit Price (LCY)" := JobPlanningLine."Unit Price (LCY)";
      JobJnlLine."Unit Price" := JobPlanningLine."Unit Price";

      JobJnlLine."Total Price (LCY)" := JobPlanningLine."Total Price (LCY)";
      JobJnlLine."Total Price" := JobPlanningLine."Total Price";

      JobJnlLine."Line Amount (LCY)" := JobPlanningLine."Line Amount (LCY)";
      JobJnlLine."Line Amount" := JobPlanningLine."Line Amount";

      JobJnlLine."Line Discount %" := JobPlanningLine."Line Discount %";

      JobJnlLine."Line Discount Amount (LCY)" := JobPlanningLine."Line Discount Amount (LCY)";
      JobJnlLine."Line Discount Amount" := JobPlanningLine."Line Discount Amount";
    END;

    PROCEDURE FromGenJnlLineToJnlLine@6(GenJnlLine@1000 : Record 81;VAR JobJnlLine@1001 : Record 210);
    VAR
      Job@1002 : Record 167;
      JobTask@1000000000 : Record 1001;
    BEGIN
      JobJnlLine."Job No." := GenJnlLine."Job No.";
      JobJnlLine."Job Task No." := GenJnlLine."Job Task No.";
      JobTask.GET(GenJnlLine."Job No.",GenJnlLine."Job Task No.");

      IF GenJnlLine."Account Type" = GenJnlLine."Account Type"::"G/L Account" THEN
        JobJnlLine."Posting Group" := GenJnlLine."Account No.";

      JobJnlLine."Posting Date" := GenJnlLine."Posting Date";
      JobJnlLine."Document Date" := GenJnlLine."Document Date";
      JobJnlLine."Document No." := GenJnlLine."Document No.";

      JobJnlLine."Currency Code" := GenJnlLine."Job Currency Code";
      JobJnlLine."Currency Factor" := GenJnlLine."Job Currency Factor";
      JobJnlLine."Entry Type" := JobJnlLine."Entry Type"::Usage;
      JobJnlLine."Line Type" := GenJnlLine."Job Line Type";
      JobJnlLine.Type := JobJnlLine.Type::"G/L Account";
      JobJnlLine."No." := GenJnlLine."Account No.";
      JobJnlLine.Description := GenJnlLine.Description;
      JobJnlLine."Unit of Measure Code" := GenJnlLine."Job Unit Of Measure Code";
      JobJnlLine."Gen. Bus. Posting Group" := GenJnlLine."Gen. Bus. Posting Group";
      JobJnlLine."Gen. Prod. Posting Group" := GenJnlLine."Gen. Prod. Posting Group";
      JobJnlLine."Source Code" := GenJnlLine."Source Code";
      JobJnlLine."Reason Code" := GenJnlLine."Reason Code";
      Job.GET(JobJnlLine."Job No.");
      JobJnlLine."Customer Price Group" := Job."Customer Price Group";
      JobJnlLine."External Document No." := GenJnlLine."External Document No.";
      JobJnlLine."Journal Batch Name" := GenJnlLine."Journal Batch Name";
      JobJnlLine."Shortcut Dimension 1 Code" := GenJnlLine."Shortcut Dimension 1 Code";
      JobJnlLine."Shortcut Dimension 2 Code" := GenJnlLine."Shortcut Dimension 2 Code";

      // Amounts
      JobJnlLine.Quantity := GenJnlLine."Job Quantity";
      JobJnlLine."Quantity (Base)" := JobJnlLine.Quantity;
      JobJnlLine."Qty. per Unit of Measure" := 1; // MP ??

      JobJnlLine."Direct Unit Cost (LCY)" := GenJnlLine."Job Unit Cost (LCY)";
      JobJnlLine."Unit Cost (LCY)" := GenJnlLine."Job Unit Cost (LCY)";
      JobJnlLine."Unit Cost" := GenJnlLine."Job Unit Cost";

      JobJnlLine."Total Cost (LCY)" := GenJnlLine."Job Total Cost (LCY)";
      JobJnlLine."Total Cost" := GenJnlLine."Job Total Cost";

      JobJnlLine."Unit Price (LCY)" := GenJnlLine."Job Unit Price (LCY)";
      JobJnlLine."Unit Price" := GenJnlLine."Job Unit Price";

      JobJnlLine."Total Price (LCY)" := GenJnlLine."Job Total Price (LCY)";
      JobJnlLine."Total Price" := GenJnlLine."Job Total Price";

      JobJnlLine."Line Amount (LCY)" := GenJnlLine."Job Line Amount (LCY)";
      JobJnlLine."Line Amount" := GenJnlLine."Job Line Amount";

      JobJnlLine."Line Discount Amount (LCY)" := GenJnlLine."Job Line Disc. Amount (LCY)";
      JobJnlLine."Line Discount Amount" := GenJnlLine."Job Line Discount Amount";

      JobJnlLine."Line Discount %" := GenJnlLine."Job Line Discount %";
    END;

    PROCEDURE FromJobLedgEntryToPlanningLine@5(JobLedgEntry@1000 : Record 169;VAR JobPlanningLine@1001 : Record 1003);
    BEGIN
      JobPlanningLine."Job No." := JobLedgEntry."Job No.";
      JobPlanningLine."Job Task No." := JobLedgEntry."Job Task No.";
      JobPlanningLine."Planning Date" := JobLedgEntry."Posting Date";
      JobPlanningLine."Currency Date" := JobLedgEntry."Posting Date";
      JobPlanningLine."Document Date" := JobLedgEntry."Document Date";
      JobPlanningLine."Document No." := JobLedgEntry."Document No.";
      JobPlanningLine.Description := JobLedgEntry.Description;
      JobPlanningLine.Type := JobLedgEntry.Type;
      JobPlanningLine."No." := JobLedgEntry."No.";
      JobPlanningLine."Unit of Measure Code" := JobLedgEntry."Unit of Measure Code";
      JobPlanningLine.VALIDATE("Line Type",JobLedgEntry."Line Type" - 1);
      JobPlanningLine."Currency Code" := JobLedgEntry."Currency Code";
      IF JobLedgEntry."Currency Code" = '' THEN
        JobPlanningLine."Currency Factor" := 0
      ELSE
        JobPlanningLine."Currency Factor" := JobLedgEntry."Currency Factor";
      JobPlanningLine."Resource Group No." := JobLedgEntry."Resource Group No.";
      JobPlanningLine."Location Code" := JobLedgEntry."Location Code";
      JobPlanningLine."Work Type Code" := JobLedgEntry."Work Type Code";
      JobPlanningLine."Gen. Bus. Posting Group" := JobLedgEntry."Gen. Bus. Posting Group";
      JobPlanningLine."Gen. Prod. Posting Group" := JobLedgEntry."Gen. Prod. Posting Group";
      JobPlanningLine."Variant Code" := JobLedgEntry."Variant Code";
      JobPlanningLine."Bin Code" := JobLedgEntry."Bin Code";
      JobPlanningLine."Customer Price Group" := JobLedgEntry."Customer Price Group";
      JobPlanningLine."Country/Region Code" := JobLedgEntry."Country/Region Code";
      JobPlanningLine."Description 2" := JobLedgEntry."Description 2";
      JobPlanningLine."Serial No." := JobLedgEntry."Serial No.";
      JobPlanningLine."Lot No." := JobLedgEntry."Lot No.";
      JobPlanningLine."Service Order No." := JobLedgEntry."Service Order No.";
      JobPlanningLine."Job Ledger Entry No." := JobLedgEntry."Entry No.";
      JobPlanningLine."Ledger Entry Type" := JobLedgEntry."Ledger Entry Type";
      JobPlanningLine."Ledger Entry No." := JobLedgEntry."Ledger Entry No.";
      JobPlanningLine."System-Created Entry" := TRUE;

      // Amounts
      JobPlanningLine.Quantity := JobLedgEntry.Quantity;
      JobPlanningLine."Quantity (Base)" := JobLedgEntry."Quantity (Base)";
      JobPlanningLine."Qty. per Unit of Measure" := JobLedgEntry."Qty. per Unit of Measure";

      JobPlanningLine."Direct Unit Cost (LCY)" := JobLedgEntry."Direct Unit Cost (LCY)";
      JobPlanningLine."Unit Cost (LCY)" := JobLedgEntry."Unit Cost (LCY)";
      JobPlanningLine."Unit Cost" := JobLedgEntry."Unit Cost";

      JobPlanningLine."Total Cost (LCY)" := JobLedgEntry."Total Cost (LCY)";
      JobPlanningLine."Total Cost" := JobLedgEntry."Total Cost";

      JobPlanningLine."Unit Price (LCY)" := JobLedgEntry."Unit Price (LCY)";
      JobPlanningLine."Unit Price" := JobLedgEntry."Unit Price";

      JobPlanningLine."Total Price (LCY)" := JobLedgEntry."Total Price (LCY)";
      JobPlanningLine."Total Price" := JobLedgEntry."Total Price";

      JobPlanningLine."Line Amount (LCY)" := JobLedgEntry."Line Amount (LCY)";
      JobPlanningLine."Line Amount" := JobLedgEntry."Line Amount";

      JobPlanningLine."Line Discount %" := JobLedgEntry."Line Discount %";

      JobPlanningLine."Line Discount Amount (LCY)" := JobLedgEntry."Line Discount Amount (LCY)";
      JobPlanningLine."Line Discount Amount" := JobLedgEntry."Line Discount Amount";
    END;

    PROCEDURE FromPurchaseLineToJnlLine@3(PurchHeader@1002 : Record 38;PurchInvHeader@1003 : Record 122;PurchCrMemoHeader@1006 : Record 124;PurchLine@1001 : Record 39;Sourcecode@1004 : Code[10];VAR JobJnlLine@1000 : Record 210);
    VAR
      Item@1005 : Record 27;
      Job@1007 : Record 167;
      JobTask@1000000000 : Record 1001;
      Factor@1009 : Decimal;
    BEGIN
      WITH PurchLine DO BEGIN
        JobJnlLine.DontCheckStdCost;
        JobJnlLine.VALIDATE("Job No.","Job No.");
        JobJnlLine.VALIDATE("Job Task No.","Job Task No.");
        JobTask.GET("Job No.","Job Task No.");
        JobJnlLine."Posting Group" := JobTask."Job Posting Group";
        JobJnlLine.VALIDATE("Posting Date",PurchHeader."Posting Date");
        IF Type = Type::"G/L Account" THEN
          JobJnlLine.VALIDATE(Type,JobJnlLine.Type::"G/L Account")
        ELSE
          JobJnlLine.VALIDATE(Type,JobJnlLine.Type::Item);
        JobJnlLine.VALIDATE("No.","No.");
        JobJnlLine.VALIDATE("Variant Code","Variant Code");
        JobJnlLine.VALIDATE("Unit of Measure Code","Unit of Measure Code");
        IF PurchHeader."Document Type" = PurchHeader."Document Type"::Order THEN
          JobJnlLine.VALIDATE(Quantity,"Qty. to Invoice")
        ELSE
          JobJnlLine.VALIDATE(Quantity,Quantity);

        IF PurchHeader."Document Type" = PurchHeader."Document Type"::"Credit Memo" THEN BEGIN
          JobJnlLine."Document No." := PurchCrMemoHeader."No.";
          JobJnlLine."External Document No." := PurchCrMemoHeader."Vendor Cr. Memo No.";
        END ELSE BEGIN
          JobJnlLine."Document No." := PurchInvHeader."No.";
          JobJnlLine."External Document No." := PurchHeader."Vendor Invoice No.";
        END;

        Job.GET(JobJnlLine."Job No.");

        IF Type = Type::Item THEN BEGIN
          Item.GET("No.");
          IF Item."Costing Method" = Item."Costing Method"::Standard THEN
            JobJnlLine.VALIDATE("Unit Cost (LCY)",Item."Standard Cost")
          ELSE
            JobJnlLine.VALIDATE("Unit Cost (LCY)","Unit Cost (LCY)");
        END ELSE BEGIN
          JobJnlLine.VALIDATE("Unit Cost (LCY)","Unit Cost (LCY)");
        END;

        IF "Currency Code" = '' THEN
          JobJnlLine."Direct Unit Cost (LCY)" := "Direct Unit Cost"
        ELSE
          JobJnlLine."Direct Unit Cost (LCY)" :=
            CurrencyExchRate.ExchangeAmtFCYToLCY(
              PurchHeader."Posting Date",
              "Currency Code",
              "Direct Unit Cost",
              PurchHeader."Currency Factor");

        JobJnlLine."Unit Price (LCY)" := "Job Unit Price (LCY)";
        JobJnlLine."Unit Price" := "Job Unit Price";
        JobJnlLine."Line Discount %" := "Job Line Discount %";

        IF PurchHeader."Document Type" IN [PurchHeader."Document Type"::"Credit Memo",PurchHeader."Document Type"::"Return Order"] THEN
          JobJnlLine.VALIDATE(Quantity,-Quantity)
        ELSE BEGIN
          JobJnlLine."Total Price (LCY)" := "Job Total Price (LCY)";
          JobJnlLine."Total Price" := "Job Total Price";
          JobJnlLine."Line Amount (LCY)" := "Job Line Amount (LCY)";
          JobJnlLine."Line Amount" := "Job Line Amount";
          JobJnlLine."Line Discount Amount (LCY)" := "Job Line Disc. Amount (LCY)";
          JobJnlLine."Line Discount Amount" := "Job Line Discount Amount";
        END;

        IF (PurchHeader."Document Type" = PurchHeader."Document Type"::Order) AND
           (Quantity <> 0)
        THEN BEGIN
          GetCurrencyRounding(PurchHeader."Currency Code");

          Factor := "Qty. to Invoice" / Quantity;
          JobJnlLine."Total Price (LCY)" :=
            ROUND("Job Total Price (LCY)" * Factor,LCYCurrency."Amount Rounding Precision");
          JobJnlLine."Total Price" :=
            ROUND("Job Total Price" * Factor,Currency."Amount Rounding Precision");
          JobJnlLine."Line Amount (LCY)" :=
            ROUND("Job Line Amount (LCY)" * Factor,LCYCurrency."Amount Rounding Precision");
          JobJnlLine."Line Amount" :=
            ROUND("Job Line Amount" * Factor,Currency."Amount Rounding Precision");
          JobJnlLine."Line Discount Amount (LCY)" :=
            ROUND("Job Line Disc. Amount (LCY)" * Factor,LCYCurrency."Amount Rounding Precision");
          JobJnlLine."Line Discount Amount" :=
            ROUND("Job Line Discount Amount" * Factor,Currency."Amount Rounding Precision");
        END;

        JobJnlLine."Location Code" := "Location Code";
        JobJnlLine."Line Type" := "Job Line Type";
        JobJnlLine."Entry Type" := JobJnlLine."Entry Type"::Usage;
        JobJnlLine.Description := Description;
        JobJnlLine."Description 2" := "Description 2";
        JobJnlLine."Gen. Bus. Posting Group" := "Gen. Bus. Posting Group";
        JobJnlLine."Gen. Prod. Posting Group" := "Gen. Prod. Posting Group";
        JobJnlLine."Source Code" := Sourcecode;
        JobJnlLine."Reason Code" := PurchHeader."Reason Code";
        JobJnlLine."Shortcut Dimension 1 Code" := "Shortcut Dimension 1 Code";
        JobJnlLine."Shortcut Dimension 2 Code" := "Shortcut Dimension 2 Code";
      END;
    END;

    PROCEDURE JTName@22(JobNo@1000 : Code[20];JTNo@1001 : Code[20]) : Text[200];
    VAR
      Job@1002 : Record 167;
      JT@1003 : Record 1001;
    BEGIN
      EXIT(
        STRSUBSTNO(
          Text000,
          Job.TABLECAPTION,Job.FIELDCAPTION("No."),JobNo,
          JT.TABLECAPTION,JT.FIELDCAPTION("Job Task No."),JTNo));
    END;

    PROCEDURE FromSalesHeaderToPlanningLine@7(SalesLine@1000 : Record 37;CurrencyCode@1001 : Code[10];CurrencyFactor@1002 : Decimal);
    VAR
      JobPlanningLine@1003 : Record 1003;
    BEGIN
      JobPlanningLine.SETCURRENTKEY("Job Contract Entry No.");
      JobPlanningLine.SETRANGE("Job Contract Entry No.",SalesLine."Job Contract Entry No.");
      IF JobPlanningLine.FINDFIRST THEN BEGIN
        // Update Invoice Currency
        JobPlanningLine."Invoice Currency Factor" := CurrencyFactor;
        JobPlanningLine."Invoice Currency Code" := CurrencyCode;
        // Update Prices
        IF JobPlanningLine."Currency Code" <> '' THEN BEGIN
          JobPlanningLine."Unit Price (LCY)" := SalesLine."Unit Price" / CurrencyFactor;
          JobPlanningLine."Total Price (LCY)" := SalesLine.Amount / CurrencyFactor;
          JobPlanningLine."Line Amount (LCY)" := JobPlanningLine."Total Price (LCY)";
          JobPlanningLine."Unit Price" := JobPlanningLine."Unit Price (LCY)";
          JobPlanningLine."Total Price" := JobPlanningLine."Total Price (LCY)";
          JobPlanningLine."Line Amount" := JobPlanningLine."Total Price (LCY)";
        END ELSE BEGIN
          JobPlanningLine."Unit Price (LCY)" := SalesLine."Unit Price" / CurrencyFactor;
          JobPlanningLine."Total Price (LCY)" := SalesLine.Amount / CurrencyFactor;
          JobPlanningLine."Line Amount (LCY)" := JobPlanningLine."Total Price (LCY)";
        END;
        JobPlanningLine.MODIFY;
      END;
    END;

    LOCAL PROCEDURE GetCurrencyRounding@8(CurrencyCode@1000 : Code[10]);
    BEGIN
      IF CurrencyRoundingRead THEN
        EXIT;
      CurrencyRoundingRead := TRUE;
      IF CurrencyCode = '' THEN
        Currency.InitRoundingPrecision
      ELSE BEGIN
        Currency.GET(CurrencyCode);
        Currency.TESTFIELD("Amount Rounding Precision");
      END;
      LCYCurrency.InitRoundingPrecision;
    END;

    BEGIN
    END.
  }
}
