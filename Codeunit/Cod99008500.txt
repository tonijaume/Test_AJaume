OBJECT Codeunit 99008500 Request for Sales Quote-Accept
{
  OBJECT-PROPERTIES
  {
    Date=13/02/07;
    Time=12:00:00;
    Version List=NAVW15.00;
  }
  PROPERTIES
  {
    TableNo=99008500;
    OnRun=VAR
            InboundSalesDocumentHeader@1000 : Record 99008500;
            SalesHeader@1001 : Record 36;
          BEGIN
            InboundSalesDocumentHeader := Rec;
            IF NOT Validation(InboundSalesDocumentHeader) THEN
              EXIT;
            InsertSalesDocument(InboundSalesDocumentHeader);
            IF NOT HideDialogBox THEN
              MESSAGE(Text000+
                    Text001,InboundSalesDocumentHeader."Corresp. Accepted Document No.");
            Rec := InboundSalesDocumentHeader;
          END;

  }
  CODE
  {
    VAR
      Text000@1002 : TextConst 'ENU="A sales quote number %1 that is based on the ";ESP="Se ha creado una oferta de venta, con n£mero %1, "';
      Text001@1003 : TextConst 'ENU=BizTalk request for quote has been created.;ESP=basada en la petici¢n BizTalk de oferta.';
      Text002@1004 : TextConst 'ENU=A BizTalk partner with the number %1 does not exist.;ESP=No existe un socio BizTalk con el n£mero %1.';
      Text003@1005 : TextConst 'ENU=A sales quote has already been created from a similar BizTalk document. Do you want to continue?;ESP=Ya se ha creado una oferta de venta a partir de un documento BizTalk similar. ¨Confirma que desea continuar?';
      Text004@1006 : TextConst 'ENU=The currency code on the inbound sales document header does not map to any currency specified for the Partner.;ESP=El c¢digo de divisa en la cabecera del documento de venta saliente no tiene equivalencia con ninguna divisa especificada para el socio.';
      Text005@1007 : TextConst 'ENU=Commerce Gateway does not support the acceptance of a %1 whose %2 is %3;ESP=Commerce Gateway no permite aceptar un documento %1 en el que %2 es %3';
      BizTalkPartnerSetup@1000 : Record 99008513;
      SalesHeader@1001 : Record 36;
      Text007@1009 : TextConst 'ENU="You must specify %1 for %2 %3 = ''''%4'''' in order to accept a %5 with a %6";ESP="Debe especificar %1 para %2 %3 = ''''%4'''' para aceptar un(a) %5 con %6"';
      HideDialogBox@1008 : Boolean;
      Text008@1010 : TextConst 'ENU=A sales quote has already been created from a similar BizTalk document.;ESP=Ya se ha creado una oferta de ventas a partir de un documento de BizTalk similar.';

    PROCEDURE Validation@1(InboundSalesDocumentHeader@1000 : Record 99008500) : Boolean;
    BEGIN
      BizTalkPartnerSetup.SETCURRENTKEY("Partner Type","Partner No.");
      BizTalkPartnerSetup.SETRANGE("Partner Type", BizTalkPartnerSetup."Partner Type"::Customer);
      BizTalkPartnerSetup.SETRANGE("Partner No.", InboundSalesDocumentHeader."Sell-to Customer No.");
      IF NOT BizTalkPartnerSetup.FIND('-') THEN
        ERROR(Text002,InboundSalesDocumentHeader."Sell-to Customer No.");

      IF InboundSalesDocumentHeader."Customer Quote No." <> '' THEN BEGIN
        SalesHeader.SETCURRENTKEY("Document Type","Sell-to Customer No.");
        SalesHeader.SETRANGE("Document Type",InboundSalesDocumentHeader."Document Type"::Quote);
        SalesHeader.SETRANGE("Sell-to Customer No.",InboundSalesDocumentHeader."Sell-to Customer No.");
        SalesHeader.SETRANGE("Customer Quote No.",InboundSalesDocumentHeader."Customer Quote No.");
        IF SalesHeader.FIND('-') THEN
          IF NOT HideDialogBox THEN BEGIN
            IF NOT CONFIRM(Text003) THEN
              EXIT(FALSE);
          END ELSE
            ERROR(Text008);
      END;

      EXIT(TRUE);
    END;

    PROCEDURE InsertSalesDocument@2(VAR InboundSalesDocumentHeader@1000 : Record 99008500);
    VAR
      InboundSalesDocumentLine@1001 : Record 99008501;
      SalesLine@1002 : Record 37;
      BizTalkPartnerCurrencyMap@1003 : Record 99008532;
      BizTalkReservEntry@1008 : Record 99008533;
      Item@1009 : Record 27;
      BizTalkManagement@1004 : Codeunit 99008508;
      CreateReservEntry@1007 : Codeunit 99000830;
      NextLineNo@1005 : Integer;
      ItemNo@1006 : Code[20];
    BEGIN
      SalesLine.LOCKTABLE;
      SalesHeader.LOCKTABLE;
      SalesHeader.INIT;
      SalesHeader.VALIDATE("Document Type",SalesHeader."Document Type"::Quote);
      SalesHeader.INSERT(TRUE);

      IF (InboundSalesDocumentHeader."Payment Terms Code" <> '')  THEN
        SalesHeader.VALIDATE("Payment Terms Code",InboundSalesDocumentHeader."Payment Terms Code");
      IF (InboundSalesDocumentHeader."Payment Method Code" <> '') THEN
        SalesHeader.VALIDATE("Payment Method Code",InboundSalesDocumentHeader."Payment Method Code");
      IF (InboundSalesDocumentHeader."Payment Discount %" <> 0) THEN
        SalesHeader.VALIDATE("Payment Discount %",InboundSalesDocumentHeader."Payment Discount %");
      IF (InboundSalesDocumentHeader."Bill-to Customer No." <> '') THEN
        SalesHeader.VALIDATE("Bill-to Customer No.", InboundSalesDocumentHeader."Bill-to Customer No.");
      IF (InboundSalesDocumentHeader."Ship-to Code" <> '') THEN
        SalesHeader.VALIDATE("Ship-to Code",InboundSalesDocumentHeader."Ship-to Code");
      IF (InboundSalesDocumentHeader."Sell-to Customer No." <> '') THEN
        SalesHeader.VALIDATE("Sell-to Customer No.",InboundSalesDocumentHeader."Sell-to Customer No.");

      IF (InboundSalesDocumentHeader."Sell-to Customer Name" <> '') THEN
        SalesHeader.VALIDATE("Sell-to Customer Name",InboundSalesDocumentHeader."Sell-to Customer Name");
      IF (InboundSalesDocumentHeader."Sell-to Customer Name 2" <> '')THEN
        SalesHeader.VALIDATE("Sell-to Customer Name 2",InboundSalesDocumentHeader."Sell-to Customer Name 2");
      IF (InboundSalesDocumentHeader."Sell-to Address" <> '') THEN
        SalesHeader.VALIDATE("Sell-to Address",InboundSalesDocumentHeader."Sell-to Address");
      IF (InboundSalesDocumentHeader."Sell-to Address 2" <> '') THEN
        SalesHeader.VALIDATE("Sell-to Address 2",InboundSalesDocumentHeader."Sell-to Address 2");
      IF (InboundSalesDocumentHeader."Sell-to Contact" <> '') THEN
        SalesHeader.VALIDATE("Sell-to Contact",InboundSalesDocumentHeader."Sell-to Contact");
      IF  (InboundSalesDocumentHeader."Sell-to County" <> '') THEN
        SalesHeader.VALIDATE("Sell-to County",InboundSalesDocumentHeader."Sell-to County");
      IF  (InboundSalesDocumentHeader."Sell-to Country/Region Code" <> '') THEN
        SalesHeader.VALIDATE("Sell-to Country/Region Code",InboundSalesDocumentHeader."Sell-to Country/Region Code");
      IF (InboundSalesDocumentHeader."Your Reference" <> '') THEN
        SalesHeader.VALIDATE("Your Reference",InboundSalesDocumentHeader."Your Reference");

      IF (InboundSalesDocumentHeader."Bill-to Name" <> '') THEN
        SalesHeader.VALIDATE("Bill-to Name",InboundSalesDocumentHeader."Bill-to Name");
      IF (InboundSalesDocumentHeader."Bill-to Name 2" <> '') THEN
        SalesHeader.VALIDATE("Bill-to Name 2",InboundSalesDocumentHeader."Bill-to Name 2");
      IF (InboundSalesDocumentHeader."Bill-to Address" <> '') THEN
        SalesHeader.VALIDATE("Bill-to Address",InboundSalesDocumentHeader."Bill-to Address");
      IF (InboundSalesDocumentHeader."Bill-to Address 2" <> '') THEN
        SalesHeader.VALIDATE("Bill-to Address 2",InboundSalesDocumentHeader."Bill-to Address 2");
      IF (InboundSalesDocumentHeader."Bill-to Contact" <> '') THEN
        SalesHeader.VALIDATE("Bill-to Contact",InboundSalesDocumentHeader."Bill-to Contact");
      IF (InboundSalesDocumentHeader."Bill-to County" <> '') THEN
        SalesHeader.VALIDATE("Bill-to County",InboundSalesDocumentHeader."Bill-to County");
      IF (InboundSalesDocumentHeader."Bill-to Country/Region Code" <> '') THEN
        SalesHeader.VALIDATE("Bill-to Country/Region Code",InboundSalesDocumentHeader."Bill-to Country/Region Code");

      IF (InboundSalesDocumentHeader."Ship-to Name" <> '') THEN
        SalesHeader.VALIDATE("Ship-to Name",InboundSalesDocumentHeader."Ship-to Name");
      IF (InboundSalesDocumentHeader."Ship-to Name 2" <> '') THEN
        SalesHeader.VALIDATE("Ship-to Name 2",InboundSalesDocumentHeader."Ship-to Name 2");
      IF (InboundSalesDocumentHeader."Ship-to Address" <> '') THEN
        SalesHeader.VALIDATE("Ship-to Address",InboundSalesDocumentHeader."Ship-to Address");
      IF (InboundSalesDocumentHeader."Ship-to Address 2" <> '') THEN
        SalesHeader.VALIDATE("Ship-to Address 2",InboundSalesDocumentHeader."Ship-to Address 2");
      IF (InboundSalesDocumentHeader."Ship-to Contact" <> '') THEN
        SalesHeader.VALIDATE("Ship-to Contact",InboundSalesDocumentHeader."Ship-to Contact");
      IF (InboundSalesDocumentHeader."Ship-to County" <> '') THEN
        SalesHeader.VALIDATE("Ship-to County",InboundSalesDocumentHeader."Ship-to County");
      IF (InboundSalesDocumentHeader."Ship-to Country/Region Code" <> '') THEN
        SalesHeader.VALIDATE("Ship-to Country/Region Code",InboundSalesDocumentHeader."Ship-to Country/Region Code");

      IF (InboundSalesDocumentHeader."Order Date" <> 0D)  THEN
        SalesHeader.VALIDATE("Order Date",InboundSalesDocumentHeader."Order Date");
      IF (InboundSalesDocumentHeader."Shipment Date" <> 0D)  THEN
        SalesHeader.VALIDATE("Shipment Date",InboundSalesDocumentHeader."Shipment Date");
      IF (InboundSalesDocumentHeader."Shortcut Dimension 1 Code" <> '') THEN
        SalesHeader.VALIDATE("Shortcut Dimension 1 Code",InboundSalesDocumentHeader."Shortcut Dimension 1 Code");
      IF (InboundSalesDocumentHeader."Shortcut Dimension 2 Code" <> '') THEN
        SalesHeader.VALIDATE("Shortcut Dimension 2 Code",InboundSalesDocumentHeader."Shortcut Dimension 2 Code");
      IF (InboundSalesDocumentHeader."Transaction Type" <> '') THEN
        SalesHeader.VALIDATE("Transaction Type",InboundSalesDocumentHeader."Transaction Type");
      IF (InboundSalesDocumentHeader."Transport Method" <> '') THEN
        SalesHeader.VALIDATE("Transport Method",InboundSalesDocumentHeader."Transport Method");
      IF (InboundSalesDocumentHeader."Document Date" <> 0D) THEN
        SalesHeader.VALIDATE("Document Date",InboundSalesDocumentHeader."Document Date");

      IF (InboundSalesDocumentHeader."Due Date" <> 0D) THEN
        SalesHeader.VALIDATE("Due Date",InboundSalesDocumentHeader."Due Date");
      IF (InboundSalesDocumentHeader."Pmt. Discount Date" <> 0D) THEN
        SalesHeader.VALIDATE("Pmt. Discount Date",InboundSalesDocumentHeader."Pmt. Discount Date");
      IF (InboundSalesDocumentHeader."Shipment Method Code" <> '') THEN
        SalesHeader.VALIDATE("Shipment Method Code",InboundSalesDocumentHeader."Shipment Method Code");
      IF (InboundSalesDocumentHeader."Salesperson Code" <> '') THEN
        SalesHeader.VALIDATE("Salesperson Code",InboundSalesDocumentHeader."Salesperson Code");
      IF (InboundSalesDocumentHeader."VAT Registration No." <> '') THEN
        SalesHeader.VALIDATE("VAT Registration No.",InboundSalesDocumentHeader."VAT Registration No.");
      IF (InboundSalesDocumentHeader."External Document No." <> '') THEN
        SalesHeader.VALIDATE("External Document No.",InboundSalesDocumentHeader."External Document No.");
      IF (InboundSalesDocumentHeader."Shipping Agent Code" <> '') THEN
        SalesHeader.VALIDATE("Shipping Agent Code",InboundSalesDocumentHeader."Shipping Agent Code");
      IF (InboundSalesDocumentHeader."Customer Quote No." <> '') THEN
        SalesHeader.VALIDATE("Customer Quote No.",InboundSalesDocumentHeader."Customer Quote No.");

      IF (InboundSalesDocumentHeader."Reason Code" <> '') THEN
        SalesHeader.VALIDATE("Reason Code",InboundSalesDocumentHeader."Reason Code");
      IF (InboundSalesDocumentHeader."Cust./Item Disc. Gr." <> '') THEN
        SalesHeader.VALIDATE("Customer Disc. Group",InboundSalesDocumentHeader."Cust./Item Disc. Gr.");

      IF InboundSalesDocumentHeader."Currency Code" <> '' THEN BEGIN
        IF BizTalkPartnerCurrencyMap.GET(
          BizTalkPartnerSetup."BizTalk Partner No.",InboundSalesDocumentHeader."Currency Code") THEN
          SalesHeader.VALIDATE("Currency Code",BizTalkPartnerCurrencyMap."Currency Code")
        ELSE
          ERROR(Text004);
      END;

      SalesHeader.VALIDATE("EU 3-Party Trade",InboundSalesDocumentHeader."EU 3-Party Trade");
      SalesHeader.VALIDATE("Date Received",InboundSalesDocumentHeader."Date Received");
      SalesHeader.VALIDATE("Time Received",InboundSalesDocumentHeader."Time Received");
      SalesHeader.VALIDATE("BizTalk Request for Sales Qte.",TRUE);
      IF (InboundSalesDocumentHeader."Sell-to Post Code" <> '') THEN
        SalesHeader.VALIDATE("Sell-to Post Code",InboundSalesDocumentHeader."Sell-to Post Code");
      IF (InboundSalesDocumentHeader."Sell-to City" <> '') THEN
        SalesHeader.VALIDATE("Sell-to City",InboundSalesDocumentHeader."Sell-to City");
      IF (InboundSalesDocumentHeader."Bill-to Post Code" <> '') THEN
        SalesHeader.VALIDATE("Bill-to Post Code",InboundSalesDocumentHeader."Bill-to Post Code");
      IF (InboundSalesDocumentHeader."Bill-to City" <> '') THEN
        SalesHeader.VALIDATE("Bill-to City",InboundSalesDocumentHeader."Bill-to City");
      IF (InboundSalesDocumentHeader."Ship-to Post Code" <> '') THEN
        SalesHeader.VALIDATE("Ship-to Post Code",InboundSalesDocumentHeader."Ship-to Post Code");
      IF (InboundSalesDocumentHeader."Ship-to City" <> '') THEN
        SalesHeader.VALIDATE("Ship-to City",InboundSalesDocumentHeader."Ship-to City");
      SalesHeader.MODIFY;

      NextLineNo := 10000;
      InboundSalesDocumentLine.SETCURRENTKEY("Inbound Document No.");
      InboundSalesDocumentLine.SETRANGE("Inbound Document No.", InboundSalesDocumentHeader."Inbound Document No.");
      IF InboundSalesDocumentLine.FIND('-') THEN
        REPEAT
          SalesLine.INIT;
          SalesLine."Document Type" := SalesHeader."Document Type";
          SalesLine."Document No." := SalesHeader."No.";
          SalesLine."Line No." := NextLineNo;
          NextLineNo := NextLineNo + 10000;
          SalesLine.VALIDATE(Type,InboundSalesDocumentLine.Type);
          SalesLine.INSERT(TRUE);
          CASE InboundSalesDocumentLine.Type OF
            InboundSalesDocumentLine.Type::" ":
              SalesLine.Description := InboundSalesDocumentLine.Description;
            InboundSalesDocumentLine.Type::Item:
              BEGIN
                CASE BizTalkPartnerSetup."Sales Item Number Type" OF
                  BizTalkPartnerSetup."Sales Item Number Type"::"Internal Item No.":
                    BEGIN
                      InboundSalesDocumentLine.TESTFIELD("No.");
                      ItemNo :=  InboundSalesDocumentLine."No."
                    END;
                  BizTalkPartnerSetup."Sales Item Number Type"::"Common Item No.":
                    BEGIN
                      InboundSalesDocumentLine.TESTFIELD("Common Item No.");
                      ItemNo := BizTalkManagement.ConvertCommonItemNo(InboundSalesDocumentLine."Common Item No.");
                    END;
                END;
                SalesLine.VALIDATE("No.",ItemNo);

                IF (InboundSalesDocumentLine.Quantity <> 0) THEN
                  SalesLine.VALIDATE(Quantity,InboundSalesDocumentLine.Quantity);
                IF (InboundSalesDocumentLine."Gross Weight" <> 0) THEN
                  SalesLine.VALIDATE("Gross Weight",InboundSalesDocumentLine."Gross Weight");
                IF (InboundSalesDocumentLine."Net Weight" <> 0) THEN
                  SalesLine.VALIDATE("Net Weight",InboundSalesDocumentLine."Net Weight");
                IF (InboundSalesDocumentLine."Unit Volume" <> 0) THEN
                  SalesLine.VALIDATE("Unit Volume",InboundSalesDocumentLine."Unit Volume");
                IF (InboundSalesDocumentLine."Unit of Measure" <> '') THEN
                  SalesLine.VALIDATE("Unit of Measure",InboundSalesDocumentLine."Unit of Measure");
                IF (InboundSalesDocumentLine."Unit of Measure Code" <> '') THEN
                  SalesLine.VALIDATE("Unit of Measure Code",InboundSalesDocumentLine."Unit of Measure Code");
                IF (InboundSalesDocumentLine."Line Discount %" <> 0) THEN
                  SalesLine.VALIDATE("Line Discount %",InboundSalesDocumentLine."Line Discount %");
                IF (InboundSalesDocumentLine."Inv. Discount Amount" <> 0) THEN
                  SalesLine.VALIDATE("Inv. Discount Amount",InboundSalesDocumentLine."Inv. Discount Amount");
                IF (InboundSalesDocumentLine."Units per Parcel" <> 0) THEN
                  SalesLine.VALIDATE("Units per Parcel",InboundSalesDocumentLine."Units per Parcel");

                IF (InboundSalesDocumentLine.Description <> '') THEN
                  SalesLine.VALIDATE(Description,InboundSalesDocumentLine.Description);
                IF (InboundSalesDocumentLine."Description 2" <> '') THEN
                  SalesLine.VALIDATE("Description 2",InboundSalesDocumentLine."Description 2");
                IF (InboundSalesDocumentLine."Shortcut Dimension 1 Code" <> '') THEN
                  SalesLine.VALIDATE("Shortcut Dimension 1 Code",InboundSalesDocumentLine."Shortcut Dimension 1 Code");
                IF (InboundSalesDocumentLine."Shortcut Dimension 2 Code" <> '') THEN
                  SalesLine.VALIDATE("Shortcut Dimension 2 Code",InboundSalesDocumentLine."Shortcut Dimension 2 Code");
                IF (InboundSalesDocumentLine."Job No." <> '') THEN
                  SalesLine.VALIDATE("Job No.",InboundSalesDocumentLine."Job No.");

                IF (InboundSalesDocumentLine."Variant Code" <> '') THEN
                  SalesLine.VALIDATE("Variant Code",InboundSalesDocumentLine."Variant Code");
                IF (InboundSalesDocumentLine."Qty. per Unit of Measure" <> 0) THEN
                  SalesLine.VALIDATE("Qty. per Unit of Measure",InboundSalesDocumentLine."Qty. per Unit of Measure");
                IF (InboundSalesDocumentLine."Bin Code" <> '') THEN
                  SalesLine.VALIDATE("Bin Code",InboundSalesDocumentLine."Bin Code");
                SalesLine.VALIDATE(Quantity);
                SalesLine.VALIDATE("Planned Delivery Date",InboundSalesDocumentLine."Planned Delivery Date");
              END;
            ELSE
              ERROR(Text005,SalesLine.TABLECAPTION,SalesLine.FIELDCAPTION(Type),FORMAT(SalesLine.Type));
          END;
          SalesLine.MODIFY;

          BizTalkReservEntry.SETRANGE("BizTalk Document No.",
            InboundSalesDocumentHeader."Inbound Document No.");
          BizTalkReservEntry.SETRANGE("Biztalk Document Direction",
            BizTalkReservEntry."Biztalk Document Direction"::Inbound);
          BizTalkReservEntry.SETRANGE("Source Type",DATABASE::"Sales Line");
          BizTalkReservEntry.SETRANGE("BizTalk Document Line No.",
            InboundSalesDocumentLine."Line No.");
          IF BizTalkReservEntry.FIND('-') THEN
            REPEAT
              Item.GET(ItemNo);
              IF Item."Item Tracking Code" = '' THEN
                ERROR(Text007,Item.FIELDCAPTION("Item Tracking Code"),Item.TABLECAPTION,Item.FIELDCAPTION("No."),
                  Item."No.",FORMAT(SalesHeader."Document Type"),BizTalkReservEntry.TABLECAPTION);
              CreateReservEntry.CreateReservEntryFor(
                DATABASE::"Sales Line",SalesLine."Document Type",
                SalesLine."Document No.",'',0,SalesLine."Line No.",SalesLine."Qty. per Unit of Measure",
                BizTalkReservEntry.Quantity,BizTalkReservEntry."Serial No.",BizTalkReservEntry."Lot No.");
              CreateReservEntry.CreateEntry(ItemNo,
                SalesLine."Variant Code",SalesLine."Location Code",
                BizTalkReservEntry.Description,
                BizTalkReservEntry."Expected Receipt Date",
                BizTalkReservEntry."Shipment Date",0,BizTalkReservEntry."Reservation Status");
            UNTIL BizTalkReservEntry.NEXT = 0;
        UNTIL InboundSalesDocumentLine.NEXT = 0;
      InboundSalesDocumentHeader.Status := InboundSalesDocumentHeader.Status::Accepted;
      InboundSalesDocumentHeader."Date Processed" := TODAY;
      InboundSalesDocumentHeader."Time Processed" := TIME;
      InboundSalesDocumentHeader."Corresp. Accepted Document No." := SalesHeader."No.";
      InboundSalesDocumentHeader.MODIFY;
    END;

    PROCEDURE SetHideDialogBox@3(NewHideDialogBox@1000 : Boolean);
    BEGIN
      HideDialogBox := NewHideDialogBox;
    END;

    BEGIN
    END.
  }
}
