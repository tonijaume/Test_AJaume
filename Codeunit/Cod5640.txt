OBJECT Codeunit 5640 Duplicate Depr. Book
{
  OBJECT-PROPERTIES
  {
    Date=08/06/01;
    Time=12:00:00;
    Version List=NAVW13.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      FA@1000 : Record 5600;
      FASetup@1001 : Record 5603;
      FAJnlSetup@1002 : Record 5605;
      GenJnlLine2@1003 : Record 81;
      FAJnlLine2@1004 : Record 5621;
      DeprBook@1005 : Record 5611;
      TempJnlLineDim@1006 : TEMPORARY Record 356;
      TempJnlLineDim3@1007 : TEMPORARY Record 356;
      DimMgt@1008 : Codeunit 408;
      FAGetJnl@1009 : Codeunit 5639;
      InsuranceJnlPostLine@1010 : Codeunit 5652;
      FADimMgt@1011 : Codeunit 5674;
      FAAmount@1012 : Decimal;
      DuplicateInGenJnl@1013 : Boolean;
      TemplateName@1014 : Code[10];
      BatchName@1015 : Code[10];
      ExchangeRate@1016 : Decimal;
      NextLineNo@1017 : Integer;

    PROCEDURE DuplicateGenJnlLine@3(VAR GenJnlLine@1000 : Record 81;FAAmount2@1001 : Decimal;VAR TempJnlLineDim2@1002 : Record 356);
    BEGIN
      TempJnlLineDim.RESET;
      TempJnlLineDim.DELETEALL;
      DimMgt.CopyJnlLineDimToJnlLineDim(TempJnlLineDim2,TempJnlLineDim);

      WITH GenJnlLine DO BEGIN
        FAAmount := FAAmount2;
        DeprBook.GET("Depreciation Book Code");
        IF "Insurance No." <> '' THEN
          InsertInsurance(TRUE,GenJnlLine,FAJnlLine2);
        IF ("Duplicate in Depreciation Book" = '') AND
           (NOT "Use Duplication List")
        THEN
          EXIT;
        ExchangeRate := GetExchangeRate("Account No.",DeprBook);
        IF "Duplicate in Depreciation Book" <> '' THEN BEGIN
          DeprBook.GET("Duplicate in Depreciation Book");
          CreateLine(TRUE,GenJnlLine,FAJnlLine2);
          EXIT;
        END;
        IF "Use Duplication List" THEN
          IF DeprBook.FIND('-') THEN
            REPEAT
              IF DeprBook."Part of Duplication List" AND (DeprBook.Code <> "Depreciation Book Code") THEN
                CreateLine(TRUE,GenJnlLine,FAJnlLine2);
            UNTIL DeprBook.NEXT = 0;
      END;
    END;

    PROCEDURE DuplicateFAJnlLine@4(VAR FAJnlLine@1000 : Record 5621;VAR TempJnlLineDim2@1001 : Record 356);
    BEGIN
      TempJnlLineDim.RESET;
      TempJnlLineDim.DELETEALL;
      DimMgt.CopyJnlLineDimToJnlLineDim(TempJnlLineDim2,TempJnlLineDim);
      WITH FAJnlLine DO BEGIN
        DeprBook.GET("Depreciation Book Code");
        IF "Insurance No." <> '' THEN
          InsertInsurance(FALSE,GenJnlLine2,FAJnlLine);
        IF ("Duplicate in Depreciation Book" = '') AND
           (NOT "Use Duplication List")
        THEN
          EXIT;
        FA.GET("FA No.");
        ExchangeRate := GetExchangeRate("FA No.",DeprBook);
        IF "Duplicate in Depreciation Book" <> '' THEN BEGIN
          DeprBook.GET("Duplicate in Depreciation Book");
          CreateLine(FALSE,GenJnlLine2,FAJnlLine);
          EXIT;
        END;
        IF "Use Duplication List" THEN
          IF DeprBook.FIND('-') THEN
            REPEAT
              IF DeprBook."Part of Duplication List" AND (DeprBook.Code <> "Depreciation Book Code") THEN
                CreateLine(FALSE,GenJnlLine2,FAJnlLine);
            UNTIL DeprBook.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE InsertInsurance@11(GenJnlPosting@1000 : Boolean;GenJnlLine@1001 : Record 81;FAJnlLine@1002 : Record 5621);
    VAR
      InsuranceJnlLine@1003 : Record 5635;
    BEGIN
      FASetup.GET;
      FASetup.TESTFIELD("Insurance Depr. Book",DeprBook.Code);
      InsuranceJnlLine.INIT;
      InsuranceJnlLine."Line No." := 0;
      IF NOT FASetup."Automatic Insurance Posting" THEN
        InitInsuranceJnlLine(InsuranceJnlLine);

      WITH InsuranceJnlLine DO BEGIN
        IF GenJnlPosting THEN BEGIN
          IF FASetup."Automatic Insurance Posting" THEN BEGIN
            "Journal Batch Name" := GenJnlLine."Journal Batch Name";
            "Source Code" := GenJnlLine."Source Code";
            "Reason Code" := GenJnlLine."Reason Code"
          END;
          VALIDATE("Insurance No.",GenJnlLine."Insurance No.");
          VALIDATE("FA No.",GenJnlLine."Account No.");
          "Posting Date" := GenJnlLine."FA Posting Date";
          IF "Posting Date" = 0D THEN
            "Posting Date" := GenJnlLine."Posting Date";
          VALIDATE(Amount,FAAmount);
          "Document Type" := GenJnlLine."Document Type";
          "Document Date" :=   GenJnlLine."Document Date";
          IF "Document Date" = 0D THEN
            "Document Date" := "Posting Date";
          "Document No." := GenJnlLine."Document No.";
          "External Document No." := GenJnlLine."External Document No.";
          IF NOT DeprBook."Use Default Dimension" THEN BEGIN
            "Shortcut Dimension 1 Code" := GenJnlLine."Shortcut Dimension 1 Code";
            "Shortcut Dimension 2 Code" := GenJnlLine."Shortcut Dimension 2 Code";
          END;
        END;
        IF NOT GenJnlPosting THEN BEGIN
          IF FASetup."Automatic Insurance Posting" THEN BEGIN
            "Journal Batch Name" := FAJnlLine."Journal Batch Name";
            "Source Code" := FAJnlLine."Source Code";
            "Reason Code" := FAJnlLine."Reason Code"
          END;
          VALIDATE("Insurance No.",FAJnlLine."Insurance No.");
          VALIDATE("FA No.",FAJnlLine."FA No.");
          "Posting Date" := FAJnlLine."FA Posting Date";
          VALIDATE(Amount,FAJnlLine.Amount);
          "Document Type" := FAJnlLine."Document Type";
          "Document Date" := FAJnlLine."Document Date";
          IF "Document Date" = 0D THEN
            "Document Date" := "Posting Date";
          "Document No." := FAJnlLine."Document No.";
          "External Document No." := FAJnlLine."External Document No.";
          IF NOT DeprBook."Use Default Dimension" THEN BEGIN
            "Shortcut Dimension 1 Code" := FAJnlLine."Shortcut Dimension 1 Code";
            "Shortcut Dimension 2 Code" := FAJnlLine."Shortcut Dimension 2 Code";
          END;
        END;
        IF FASetup."Automatic Insurance Posting" THEN BEGIN
          TempJnlLineDim3.DELETEALL;
          GetDim(TempJnlLineDim3);
          IF DeprBook."Use Default Dimension" THEN
            InsuranceJnlPostLine.RunWithCheck(InsuranceJnlLine,TempJnlLineDim3)
          ELSE
            InsuranceJnlPostLine.RunWithCheck(InsuranceJnlLine,TempJnlLineDim);
        END ELSE BEGIN
          "Line No." := NextLineNo;
          INSERT(TRUE);
          IF NOT DeprBook."Use Default Dimension" THEN
            FADimMgt.InsertJnlLineDim(
              DATABASE::"Insurance Journal Line","Journal Template Name",
              "Journal Batch Name","Line No.",TempJnlLineDim);
        END;
      END;
    END;

    PROCEDURE InitInsuranceJnlLine@12(VAR InsuranceJnlLine@1000 : Record 5635);
    VAR
      InsuranceJnlLine2@1001 : Record 5635;
    BEGIN
      WITH InsuranceJnlLine DO BEGIN
        FAGetJnl.InsuranceJnlName(DeprBook.Code,TemplateName,BatchName);
        "Journal Template Name" := TemplateName;
        "Journal Batch Name" := BatchName;
        LOCKTABLE;
        FAGetJnl.SetInsuranceJnlRange(InsuranceJnlLine2,TemplateName,BatchName);
        NextLineNo := InsuranceJnlLine2."Line No." + 10000;
        "Posting No. Series" := FAJnlSetup.GetInsuranceNoSeries(InsuranceJnlLine);
      END;
    END;

    PROCEDURE CreateLine@10(GenJnlPosting@1000 : Boolean;VAR GenJnlLine@1001 : Record 81;VAR FAJnlLine@1002 : Record 5621);
    BEGIN
      IF GenJnlPosting THEN
        WITH GenJnlLine DO BEGIN
          DuplicateInGenJnl := TRUE;
          TemplateName := "Journal Template Name";
          BatchName := "Journal Batch Name";
          FAGetJnl.JnlName(
            DeprBook.Code,FALSE,"FA Posting Type" - 1,
            DuplicateInGenJnl,TemplateName,BatchName);
        END;
      IF NOT GenJnlPosting THEN
        WITH FAJnlLine DO BEGIN
          FA.GET("FA No.");
          DuplicateInGenJnl := FALSE;
          TemplateName := "Journal Template Name";
          BatchName := "Journal Batch Name";
          FAGetJnl.JnlName(
            DeprBook.Code,FA."Budgeted Asset","FA Posting Type",
            DuplicateInGenJnl,TemplateName,BatchName);
        END;
      InsertLine(GenJnlPosting,DuplicateInGenJnl,GenJnlLine,FAJnlLine);
    END;

    LOCAL PROCEDURE MakeGenJnlLine@1(VAR GenJnlLine@1000 : Record 81;VAR FAJnlLine@1001 : Record 5621);
    BEGIN
      WITH GenJnlLine DO BEGIN
        "Account Type" := "Account Type"::"Fixed Asset";
        "Account No." := FAJnlLine."FA No.";
        "Depreciation Book Code" := FAJnlLine."Depreciation Book Code";
        "FA Posting Type" := FAJnlLine."FA Posting Type" + 1;
        "FA Posting Date" := FAJnlLine."FA Posting Date";
        "Posting Date" := FAJnlLine."Posting Date";
        IF "Posting Date" = "FA Posting Date" THEN
          "FA Posting Date" := 0D;
        "Document Type" := FAJnlLine."Document Type";
        "Document Date" := FAJnlLine."Document Date";
        "Document No." := FAJnlLine."Document No.";
        "External Document No." := FAJnlLine."External Document No.";
        Description := FAJnlLine.Description;
        VALIDATE(Amount,FAJnlLine.Amount);
        "Salvage Value" := FAJnlLine."Salvage Value";
        Quantity := FAJnlLine.Quantity;
        VALIDATE(Correction,FAJnlLine.Correction);
        "No. of Depreciation Days" := FAJnlLine."No. of Depreciation Days";
        "Depr. until FA Posting Date" := FAJnlLine."Depr. until FA Posting Date";
        "Depr. Acquisition Cost" := FAJnlLine."Depr. Acquisition Cost";
        "Posting Group" := FAJnlLine."FA Posting Group";
        "Maintenance Code" := FAJnlLine."Maintenance Code";
        "Shortcut Dimension 1 Code" := FAJnlLine."Shortcut Dimension 1 Code";
        "Shortcut Dimension 2 Code" := FAJnlLine."Shortcut Dimension 2 Code";
        "Budgeted FA No." := FAJnlLine."Budgeted FA No.";
        "FA Reclassification Entry" := FAJnlLine."FA Reclassification Entry";
        "Index Entry" := FAJnlLine."Index Entry"
      END;
    END;

    LOCAL PROCEDURE MakeFAJnlLine@2(VAR FAJnlLine@1000 : Record 5621;VAR GenJnlLine@1001 : Record 81);
    BEGIN
      WITH FAJnlLine DO BEGIN
        "Depreciation Book Code" := GenJnlLine."Depreciation Book Code";
        "FA Posting Type" := GenJnlLine."FA Posting Type" - 1;
        "FA No." := GenJnlLine."Account No.";
        "FA Posting Date" := GenJnlLine."FA Posting Date";
        "Posting Date" := GenJnlLine."Posting Date";
        IF "Posting Date" = "FA Posting Date" THEN
          "Posting Date" := 0D;
        "Document Type" := GenJnlLine."Document Type";
        "Document Date" := GenJnlLine."Document Date";
        "Document No." := GenJnlLine."Document No.";
        "External Document No." := GenJnlLine."External Document No.";
        Description := GenJnlLine.Description;
        VALIDATE(Amount,FAAmount);
        "Salvage Value" := GenJnlLine."Salvage Value";
        Quantity := GenJnlLine.Quantity;
        VALIDATE(Correction,GenJnlLine.Correction);
        "No. of Depreciation Days" := GenJnlLine."No. of Depreciation Days";
        "Depr. until FA Posting Date" := GenJnlLine."Depr. until FA Posting Date";
        "Depr. Acquisition Cost" := GenJnlLine."Depr. Acquisition Cost";
        "FA Posting Group" := GenJnlLine."Posting Group";
        "Maintenance Code" := GenJnlLine."Maintenance Code";
        "Shortcut Dimension 1 Code" := GenJnlLine."Shortcut Dimension 1 Code";
        "Shortcut Dimension 2 Code" := GenJnlLine."Shortcut Dimension 2 Code";
        "Budgeted FA No." := GenJnlLine."Budgeted FA No.";
        "FA Reclassification Entry" := GenJnlLine."FA Reclassification Entry";
        "Index Entry" := GenJnlLine."Index Entry"
      END;
    END;

    LOCAL PROCEDURE AdjustGenJnlLine@7(VAR GenJnlLine@1000 : Record 81);
    VAR
      GenJnlLine2@1001 : Record 81;
    BEGIN
      GenJnlLine2 := GenJnlLine;
      WITH GenJnlLine DO BEGIN
        INIT;
        "Account Type" := "Account Type"::"Fixed Asset";
        "Depreciation Book Code" := GenJnlLine2."Depreciation Book Code";
        "FA Posting Type" := GenJnlLine2."FA Posting Type";
        "Account No." := GenJnlLine2."Account No.";
        "FA Posting Date" := GenJnlLine2."FA Posting Date";
        "Posting Date" := GenJnlLine2."Posting Date";
        IF "Posting Date" = "FA Posting Date" THEN
          "FA Posting Date" := 0D;
        "Document Type" := GenJnlLine2."Document Type";
        "Document Date" := GenJnlLine2."Document Date";
        "Document No." := GenJnlLine2."Document No.";
        "External Document No." := GenJnlLine2."External Document No.";
        Description := GenJnlLine2.Description;
        VALIDATE(Amount,FAAmount);
        "Salvage Value" := GenJnlLine2."Salvage Value";
        Quantity := GenJnlLine2.Quantity;
        VALIDATE(Correction,GenJnlLine2.Correction);
        "No. of Depreciation Days" := GenJnlLine2."No. of Depreciation Days";
        "Depr. until FA Posting Date" := GenJnlLine2."Depr. until FA Posting Date";
        "Depr. Acquisition Cost" := GenJnlLine2."Depr. Acquisition Cost";
        "Posting Group" := GenJnlLine2."Posting Group";
        "Maintenance Code" := GenJnlLine2."Maintenance Code";
        "Budgeted FA No." := GenJnlLine2."Budgeted FA No.";
        "FA Reclassification Entry" := GenJnlLine2."FA Reclassification Entry";
        "Index Entry" := GenJnlLine2."Index Entry"
      END;
    END;

    LOCAL PROCEDURE AdjustFAJnlLine@8(VAR FAJnlLine@1000 : Record 5621);
    VAR
      FAJnlLine2@1001 : Record 5621;
    BEGIN
      FAJnlLine2 := FAJnlLine;
      WITH FAJnlLine DO BEGIN
        INIT;
        "FA No." := FAJnlLine2."FA No.";
        "Depreciation Book Code" := FAJnlLine2."Depreciation Book Code";
        "FA Posting Type" := FAJnlLine2."FA Posting Type";
        "FA Posting Date" := FAJnlLine2."FA Posting Date";
        "Posting Date" := FAJnlLine2."Posting Date";
        IF "Posting Date" = "FA Posting Date" THEN
          "Posting Date" := 0D;
        "Document Type" := FAJnlLine2."Document Type";
        "Document Date" := FAJnlLine2."Document Date";
        "Document No." := FAJnlLine2."Document No.";
        "External Document No." := FAJnlLine2."External Document No.";
        Description := FAJnlLine2.Description;
        VALIDATE(Amount,FAJnlLine2.Amount);
        "Salvage Value" := FAJnlLine2."Salvage Value";
        Quantity := FAJnlLine2.Quantity;
        VALIDATE(Correction,FAJnlLine2.Correction);
        "No. of Depreciation Days" := FAJnlLine2."No. of Depreciation Days";
        "Depr. until FA Posting Date" := FAJnlLine2."Depr. until FA Posting Date";
        "Depr. Acquisition Cost" := FAJnlLine2."Depr. Acquisition Cost";
        "FA Posting Group" := FAJnlLine2."FA Posting Group";
        "Maintenance Code" := FAJnlLine2."Maintenance Code";
        "Budgeted FA No." := FAJnlLine2."Budgeted FA No.";
        "FA Reclassification Entry" := FAJnlLine2."FA Reclassification Entry";
        "Index Entry" := FAJnlLine2."Index Entry"
      END;
    END;

    LOCAL PROCEDURE CalcExchangeRateAmount@6(DuplicateInGenJnl@1000 : Boolean;FANo@1001 : Code[20];VAR GenJnlLine@1002 : Record 81;VAR FAJnlLine@1003 : Record 5621);
    VAR
      ExchangeRate2@1004 : Decimal;
    BEGIN
      IF NOT DeprBook."Use FA Exch. Rate in Duplic." THEN
        EXIT;
      ExchangeRate2 := ExchangeRate / GetExchangeRate(FANo,DeprBook);
      IF DuplicateInGenJnl THEN
        WITH GenJnlLine DO BEGIN
            VALIDATE(Amount,ROUND(Amount * ExchangeRate2));
            VALIDATE("Salvage Value",ROUND("Salvage Value" * ExchangeRate2));
        END;
      IF NOT DuplicateInGenJnl THEN
        WITH FAJnlLine DO BEGIN
            VALIDATE(Amount,ROUND(Amount * ExchangeRate2));
            VALIDATE("Salvage Value",ROUND("Salvage Value" * ExchangeRate2));
        END;
    END;

    PROCEDURE GetExchangeRate@9(FANo@1000 : Code[20];VAR DeprBook@1001 : Record 5611) : Decimal;
    VAR
      FADeprBook@1002 : Record 5612;
    BEGIN
      IF NOT DeprBook."Use FA Exch. Rate in Duplic." THEN
        EXIT(100);
      FADeprBook.GET(FANo,DeprBook.Code);
      IF FADeprBook."FA Exchange Rate" > 0 THEN
        EXIT(FADeprBook."FA Exchange Rate");
      IF DeprBook."Default Exchange Rate" > 0 THEN
        EXIT(DeprBook."Default Exchange Rate");
      EXIT(100);
    END;

    LOCAL PROCEDURE InsertLine@5(GenJnlPosting@1000 : Boolean;DuplicateInGenJnl@1001 : Boolean;GenJnlLine@1002 : Record 81;FAJnlLine@1003 : Record 5621);
    BEGIN
      IF GenJnlPosting AND DuplicateInGenJnl THEN
        WITH GenJnlLine DO BEGIN
          AdjustGenJnlLine(GenJnlLine);
          "Journal Template Name" := TemplateName;
          "Journal Batch Name" := BatchName;
          LOCKTABLE;
          FAGetJnl.SetGenJnlRange(GenJnlLine2,TemplateName,BatchName);
          VALIDATE("Depreciation Book Code",DeprBook.Code);
          CalcExchangeRateAmount(DuplicateInGenJnl,"Account No.",GenJnlLine,FAJnlLine);
          "Posting No. Series" := FAJnlSetup.GetGenNoSeries(GenJnlLine);
          FAJnlSetup.SetGenJnlTrailCodes(GenJnlLine);
          "Line No." := 0;
          CreateDim(
            DimMgt.TypeToTableID1("Account Type"),"Account No.",
            DimMgt.TypeToTableID1("Bal. Account Type"),"Bal. Account No.",
            DATABASE::Job,"Job No.",
            DATABASE::"Salesperson/Purchaser","Salespers./Purch. Code",
            DATABASE::Campaign,"Campaign No.");
          "Line No." := GenJnlLine2."Line No." + 10000;
          INSERT(TRUE);
          IF NOT DeprBook."Use Default Dimension" THEN
            FADimMgt.InsertJnlLineDim(
              DATABASE::"Gen. Journal Line","Journal Template Name",
              "Journal Batch Name","Line No.",TempJnlLineDim);
        END;

      IF GenJnlPosting AND NOT DuplicateInGenJnl THEN
        WITH FAJnlLine DO BEGIN
          MakeFAJnlLine(FAJnlLine,GenJnlLine);
          "Journal Template Name" := TemplateName;
          "Journal Batch Name" := BatchName;
          LOCKTABLE;
          FAGetJnl.SetFAJnlRange(FAJnlLine2,TemplateName,BatchName);
          VALIDATE("Depreciation Book Code",DeprBook.Code);
          CalcExchangeRateAmount(DuplicateInGenJnl,"FA No.",GenJnlLine,FAJnlLine);
          "Posting No. Series" := FAJnlSetup.GetFANoSeries(FAJnlLine);
          FAJnlSetup.SetFAJnlTrailCodes(FAJnlLine);
          "Line No." := 0;
           CreateDim(DATABASE::"Fixed Asset","FA No.");
          "Line No." := FAJnlLine2."Line No." + 10000;
          INSERT(TRUE);
          IF NOT DeprBook."Use Default Dimension" THEN
            FADimMgt.InsertJnlLineDim(
              DATABASE::"FA Journal Line","Journal Template Name",
              "Journal Batch Name","Line No.",TempJnlLineDim);
        END;

      IF NOT GenJnlPosting AND DuplicateInGenJnl THEN
        WITH GenJnlLine DO BEGIN
          MakeGenJnlLine(GenJnlLine,FAJnlLine);
          "Journal Template Name" := TemplateName;
          "Journal Batch Name" := BatchName;
          LOCKTABLE;
          FAGetJnl.SetGenJnlRange(GenJnlLine2,TemplateName,BatchName);
          VALIDATE("Depreciation Book Code",DeprBook.Code);
          CalcExchangeRateAmount(DuplicateInGenJnl,"Account No.",GenJnlLine,FAJnlLine);
          "Posting No. Series" := FAJnlSetup.GetGenNoSeries(GenJnlLine);
          FAJnlSetup.SetGenJnlTrailCodes(GenJnlLine);
          "Line No." := 0;
          CreateDim(
            DimMgt.TypeToTableID1("Account Type"),"Account No.",
            DimMgt.TypeToTableID1("Bal. Account Type"),"Bal. Account No.",
            DATABASE::Job,"Job No.",
            DATABASE::"Salesperson/Purchaser","Salespers./Purch. Code",
            DATABASE::Campaign,"Campaign No.");
          "Line No." := GenJnlLine2."Line No." + 10000;
          INSERT(TRUE);
          IF NOT DeprBook."Use Default Dimension" THEN
            FADimMgt.InsertJnlLineDim(
              DATABASE::"Gen. Journal Line","Journal Template Name",
              "Journal Batch Name","Line No.",TempJnlLineDim);
        END;

      IF NOT GenJnlPosting AND NOT DuplicateInGenJnl THEN
        WITH FAJnlLine DO BEGIN
          AdjustFAJnlLine(FAJnlLine);
          "Journal Template Name" := TemplateName;
          "Journal Batch Name" := BatchName;
          LOCKTABLE;
          FAGetJnl.SetFAJnlRange(FAJnlLine2,TemplateName,BatchName);
          VALIDATE("Depreciation Book Code",DeprBook.Code);
          CalcExchangeRateAmount(DuplicateInGenJnl,"FA No.",GenJnlLine,FAJnlLine);
         "Posting No. Series" := FAJnlSetup.GetFANoSeries(FAJnlLine);
          FAJnlSetup.SetFAJnlTrailCodes(FAJnlLine);
          "Line No." := 0;
          CreateDim(DATABASE::"Fixed Asset","FA No.");
          "Line No." := FAJnlLine2."Line No." + 10000;
          INSERT(TRUE);
          IF NOT DeprBook."Use Default Dimension" THEN
            FADimMgt.InsertJnlLineDim(
              DATABASE::"FA Journal Line","Journal Template Name",
              "Journal Batch Name","Line No.",TempJnlLineDim);
        END;
    END;

    BEGIN
    END.
  }
}
