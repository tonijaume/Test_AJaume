OBJECT Codeunit 7010312 Rutinas Estad¡sticas Cliente
{
  OBJECT-PROPERTIES
  {
    Date=24/11/14;
    Time=12:16:12;
    Modified=Yes;
    Version List=TRANSFER;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text50000@1103355001 : TextConst 'ESP=1M-1D';
      Text50001@1103355002 : TextConst 'ESP=-1A';
      Text50002@1103355003 : TextConst 'ESP=Acumulado,Sin Acumular';
      Text50003@1103355004 : TextConst 'ESP=Generando Informe Servicios ...................';
      Text50004@1103355005 : TextConst 'ESP=INF COMP SERVICIOS';
      Text50005@1103355006 : TextConst 'ESP=A1';
      Text50006@1103355007 : TextConst 'ESP=F4:I4';
      Text50007@1103355008 : TextConst 'ESP="ACUMULADO Hasta "';
      Text50008@1103355009 : TextConst 'ESP="<Month Text> "';
      Text50009@1103355010 : TextConst 'ESP=<year4>';
      Text50010@1103355011 : TextConst 'ESP="MES DE "';
      Text50011@1103355012 : TextConst 'ESP=A8';
      Text50012@1103355013 : TextConst 'ESP=TOTAL PROPIOS';
      Text50013@1103355014 : TextConst 'ESP=TOTAL EXTERNOS';
      Text50014@1103355015 : TextConst 'ESP=TOTAL FINAL';
      Text50015@1103355016 : TextConst 'ESP=A:A';
      Text50016@1103355017 : TextConst 'ESP=<Month Text><year4>';
      Text50017@1103355018 : TextConst 'ESP=.xls';
      Text000@1100244000 : TextConst 'ESP=TODOS';
      Text001@1100244001 : TextConst 'ESP=Z';
      rParametros@1100244002 : Record 7010311;
      err1@1100244003 : TextConst 'ESP=Debe indicar una fecha de proceso.';
      err2@1100244006 : TextConst 'ESP=No ha definido la tabla par metros.\\ Gestion operativa / Ficheros / Parametros .';
      err3@1100244005 : TextConst 'ESP=No ha definido la ruta de la plantilla informes .\\ Gestion operativa / Ficheros / Parametros / Informes.';
      wDialog@1100244007 : Dialog;
      err4@1100244004 : TextConst 'ESP=No se encuentra el archivo %1';
      cFunBas@1103355000 : Codeunit 7010310;

    PROCEDURE IniciarSeleccionUsuario@1();
    VAR
      rTC@1100244000 : Record 7010323;
      rUsuCli@1100244001 : Record 7010325;
    BEGIN
      //IniciarSeleccionClientes.
      //Primero borramos todos los que no tienen padre.
      rUsuCli.RESET;
      rUsuCli.SETRANGE("Tiene Padre",FALSE);
      rUsuCli.DELETEALL;

      rUsuCli.RESET;
      rUsuCli.SETRANGE(Usuario,USERID);

      rTC.SETFILTER(TTOO,'=%1','');
      IF rTC.FINDSET THEN REPEAT

        rUsuCli.SETRANGE(Cliente,rTC.Cliente);
        rUsuCli.SETRANGE(TTOO,rTC.TTOO);

        IF NOT rUsuCli.FINDFIRST THEN BEGIN
          rUsuCli.INIT;
          rUsuCli.Usuario := USERID;
          rUsuCli.Cliente := rTC.Cliente;
          rUsuCli.TTOO    := rTC.TTOO;
          rUsuCli.INSERT(TRUE);
        END;
      UNTIL rTC.NEXT=0;
    END;

    PROCEDURE SeleccionarTTOO@3(pCliente@1100244000 : Code[20]);
    VAR
      rUsuCli@1100244001 : Record 7010325;
      rTC@1100244002 : Record 7010323;
    BEGIN
      //SeleccionarTTOO(pCliente);
      //Primero borramos todos los que no tienen padre.
      rUsuCli.RESET;
      rUsuCli.SETRANGE(Usuario,USERID);
      rUsuCli.SETRANGE(Cliente,pCliente);
      rUsuCli.SETFILTER(TTOO,'<>%1','');
      IF rUsuCli.FINDFIRST THEN
        //Se insertan todos y se borrar todos a la vez.
        rUsuCli.DELETEALL
      ELSE BEGIN
        rTC.RESET;
        rTC.SETRANGE(Cliente,pCliente);
        rTC.SETFILTER(TTOO,'<>%1','');
        IF rTC.FINDSET THEN REPEAT
          rUsuCli.INIT;
          rUsuCli.Usuario := USERID;
          rUsuCli.Cliente := rTC.Cliente;
          rUsuCli.TTOO    := rTC.TTOO;
          rUsuCli.INSERT(TRUE);
        UNTIL rTC.NEXT=0;
      END;
    END;

    PROCEDURE Actualizar_Temporal_Clientes@9();
    VAR
      lrCT@1100244000 : Record 7010313;
      lrTCT@1100244001 : Record 7010323;
      lwOldCliente@1100244002 : Code[20];
      lwNomCli@1100244003 : Text[50];
      lwNomTTOO@1100244004 : Text[50];
      lwIdTotal@1100244005 : Code[10];
      lrCTTemp@1100253000 : TEMPORARY Record 7010313;
    BEGIN
      //Actualizar_Temporal_Clientes.

      // AJF 26/08/10
      // Genero un temporary previo ya que al haber Clientes/TTOO que se muestran en las estad­sticas con
      // el cliente facturaci½n los registros pueden ser incorrectos.
      CLEAR(lrCTTemp);
      lrCTTemp.DELETEALL;
      lrCT.RESET;
      lrCT.SETCURRENTKEY(Cliente, TTOO);
      IF lrCT.FIND('-') THEN BEGIN
        REPEAT
          CLEAR(lrCTTemp);
          lrCTTemp := lrCT;

          IF (lrCT."Cliente mostrar estadisticas" = lrCT."Cliente mostrar estadisticas"::Facturacion) THEN
            lrCTTemp.Cliente := lrCTTemp."Cliente facturacion";

          IF NOT lrCTTemp.FIND THEN
            lrCTTemp.INSERT;

        UNTIL lrCT.NEXT = 0;
      END;

      lwOldCliente:='';
      lrCTTemp.RESET;
      lrCTTemp.SETCURRENTKEY(Cliente,TTOO);
      IF lrCTTemp.FINDSET THEN BEGIN
        REPEAT
          //Obtenemos los nombres actuales del Cliente y del Touroperador.
          ObtenerNombres(lrCTTemp, lwNomCli, lwNomTTOO);

          //Miramos si creamos el registro gen‚rico del cliente.
          IF lwOldCliente<> lrCTTemp.Cliente THEN BEGIN
            lwOldCliente := lrCTTemp.Cliente;
            ActualizarRegistro(lrCTTemp.Cliente,'',lwNomCli,'','',lwNomCli,TRUE);
          END;

          //Comprobaremos si debemos actualizar el registro.
          ActualizarRegistro(lrCTTemp.Cliente, lrCTTemp.TTOO,lwNomCli,lwNomTTOO,'',lwNomTTOO,FALSE);

        UNTIL lrCTTemp.NEXT=0;
      END;
      //Miraremos ahora, si debemos borrar alg£n registro.
      lrTCT.RESET;
      lrTCT.SETCURRENTKEY(Cliente,TTOO);
      IF lrTCT.FINDSET(TRUE) THEN REPEAT

        IF lrTCT.TTOO <> '' THEN BEGIN
          IF NOT lrCTTemp.GET(lrTCT.Cliente,lrTCT.TTOO) THEN
            lrTCT.DELETE(TRUE)
        END
        ELSE BEGIN
          IF lrTCT.Cliente <> '' THEN BEGIN
            lrCTTemp.RESET;
            lrCTTemp.SETCURRENTKEY(Cliente,TTOO);
            lrCTTemp.SETRANGE(Cliente,lrTCT.Cliente);
            IF NOT lrCTTemp.FINDFIRST THEN
              lrTCT.DELETE(TRUE);
          END;
        END;
      UNTIL lrTCT.NEXT=0;

      //Miraremos ahora, si debemos borrar alg£n registro.
      lrTCT.RESET;
      lrTCT.SETCURRENTKEY(Cliente,TTOO);
      lrTCT.SETRANGE(Cliente,'');
      IF NOT lrTCT.FINDFIRST THEN
        ActualizarRegistro('','',Text000,'',Text001,Text000,TRUE);
    END;

    PROCEDURE ObtenerNombres@13(rCT@1100244000 : Record 7010313;VAR vNomCli@1100244001 : Text[50];VAR vNomTTOO@1100244002 : Text[50]);
    VAR
      rCli@1100244003 : Record 18;
      rTTOO@1100244004 : Record 7010312;
    BEGIN
      //ObtenerNombres(vNomCli,vNomTTOO);
      vNomCli  := '';
      vNomTTOO := '';

      IF rCli.GET(rCT.Cliente) THEN
        vNomCli := rCli.Name;

      IF rTTOO.GET(rCT.TTOO) THEN
        vNomTTOO := rTTOO.Nombre;
    END;

    PROCEDURE ActualizarRegistro@14(pCliente@1100244000 : Code[20];pTTOO@1100244001 : Code[10];pNomCli@1100244002 : Text[50];pNomTTOO@1100244003 : Text[50];pOrden@1100244004 : Text[1];pDescri@1100244005 : Text[50];pAgrupacion@1100244006 : Boolean);
    VAR
      rTCT@1100244007 : Record 7010323;
    BEGIN
      //ActualizarRegistro(rCT,pNomCli,pNomTTOO);
      rTCT.SETCURRENTKEY(Cliente,TTOO);
      rTCT.SETRANGE(Cliente,pCliente);
      rTCT.SETRANGE(TTOO,pTTOO);

      IF rTCT.FINDSET(TRUE) THEN BEGIN

        IF (rTCT."Nombre Cliente" <> pNomCli) OR (rTCT."Nombre TTOO" <> pNomTTOO) THEN BEGIN
          rTCT."Nombre Cliente"  := pNomCli;
          rTCT."Nombre TTOO"     := pNomTTOO;
          rTCT.Descripcion       := pDescri;
          rTCT."Agrupacion TTOO" := pAgrupacion;
          rTCT.Visible           := pAgrupacion;
          rTCT.MODIFY;
        END
      END
      ELSE BEGIN
        rTCT.INIT;
        rTCT.Cliente           := pCliente;
        rTCT.TTOO              := pTTOO;
        rTCT."Nombre Cliente"  := pNomCli;
        rTCT."Nombre TTOO"     := pNomTTOO;
        rTCT.Orden             := pOrden;
        rTCT.Descripcion       := pDescri;
        rTCT."Agrupacion TTOO" := pAgrupacion;
        rTCT.Visible           := pAgrupacion;
        rTCT.INSERT(TRUE);
      END;
    END;

    PROCEDURE Actualiza_Clientes_Usuario@15();
    VAR
      rCT@1100244000 : Record 7010313;
      rTemp@1100244001 : Record 7010324;
      lwCli@1100253000 : Code[20];
    BEGIN
      // Actualiza_Clientes_Usuario.

      //1.- Borramos los desgloses creados.
      rTemp.RESET;
      rTemp.SETCURRENTKEY(Usuario,Cliente,TTOO,"N§ Desglose");
      rTemp.SETRANGE(Usuario,USERID);
      rTemp.SETFILTER("N§ Desglose",'<> %1',0);
      rTemp.DELETEALL;

      //2.- Miraremos si tenemos que a¤adir alg£n registro.
      rCT.RESET;
      rCT.SETCURRENTKEY(Cliente,TTOO);
      IF rCT.FINDSET THEN REPEAT
        CASE rCT."Cliente mostrar estadisticas" OF
          rCT."Cliente mostrar estadisticas"::Operativo   : lwCli := rCT.Cliente;
          rCT."Cliente mostrar estadisticas"::Facturacion : lwCli := rCT."Cliente facturacion";
        END;

        IF NOT rTemp.GET(USERID, lwCli, rCT.TTOO, 0) THEN
        BEGIN
          rTemp.INIT;
          rTemp.Usuario             := USERID;
          rTemp.Cliente             := lwCli;
          rTemp."Cliente Operativo" := rCT.Cliente;
          rTemp.TTOO                := rCT.TTOO;
          rTemp."N§ Desglose"       := 0;
          rTemp.Selecci¢n           := TRUE;
          rTemp.INSERT(TRUE);
        END;
      UNTIL rCT.NEXT=0;

      //3.- Por otra parte, comprobaremos si S¡ debemos borrar alg£n registro.
      rTemp.RESET;
      rTemp.SETCURRENTKEY(Usuario,Cliente,TTOO,"N§ Desglose");
      rTemp.SETRANGE(Usuario,USERID);
      rTemp.SETRANGE("N§ Desglose",0);
      IF rTemp.FINDSET(TRUE) THEN
        REPEAT
          IF NOT rCT.GET(rTemp."Cliente Operativo", rTemp.TTOO) THEN
            rTemp.DELETE(TRUE)
        UNTIL rTemp.NEXT = 0;
    END;

    PROCEDURE Informe_Servicios_Comparativo@1100244000();
    VAR
      wArchivoExcel@1100244012 : Text[250];
      wCelda@1100244011 : Text[30];
      fCalendario@1100244010 : Form 7035363;
      wFecha@1100244014 : Date;
      wFechaIniAcum@1100244008 : Date;
      wFechaFin@1100244007 : Date;
      wFechaIniAnt@1100244006 : Date;
      wFechaFinAnt@1100244013 : Date;
      wFechaIniSinAcum@1100244021 : Date;
      wFechaIniSinAcumAnt@1100244024 : Date;
      wArchivoGuarda@1100244003 : Text[250];
      wAnyo@1100244002 : Integer;
      wMes@1100244001 : Integer;
      wopcion@1100244019 : Integer;
      wIndice1@1100244025 : Integer;
      wIndice2@1100244026 : Integer;
      lwCont@1103350000 : Integer;
      wCliente@1100244029 : Code[10];
      wTTOO@1100244030 : Code[10];
      wTipo@1100244031 : Code[10];
      wPos@1100244032 : Integer;
      wLong@1100244005 : Integer;
      wTotal@1100244033 : ARRAY [10] OF Decimal;
      wTotalFinal@1100244036 : ARRAY [10] OF Decimal;
      wTotalPropio@1100244034 : ARRAY [10] OF Decimal;
      wTotalAgreg@1100244035 : ARRAY [10] OF Decimal;
      wTexto@1100244004 : Text[250];
      rParte@1100244000 : Record 7010360;
      rVehiculo@1100244020 : Record 7010346;
      rTipoServ@1100244009 : Record 7010319;
      lrTempCI@1100244023 : TEMPORARY Record 7010414;
      rDatosTemp@1100244022 : TEMPORARY Record 7010378;
      xlAplic@1100244018 : Automation "{00020813-0000-0000-C000-000000000046} 1.3:{00024500-0000-0000-C000-000000000046}:Unknown Automation Server.Application";
      xlLibro@1100244017 : Automation "{00020813-0000-0000-C000-000000000046} 1.3:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";
      xlHoja@1100244016 : Automation "{00020813-0000-0000-C000-000000000046} 1.3:{00020820-0000-0000-C000-000000000046}:Unknown Automation Server.Worksheet";
      xlRange@1100244015 : Automation "{00020813-0000-0000-C000-000000000046} 1.3:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";
      xlRango@1100244027 : Automation "{00020813-0000-0000-C000-000000000046} 1.3:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";
      xlRangoAux@1100244028 : Automation "{00020813-0000-0000-C000-000000000046} 1.3:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";
    BEGIN

      // Informe_servicios_comparativo

      CLEARALL;

      // Pedimos la fecha de proceso.

      fCalendario.RUNMODAL;
      wFecha     := fCalendario.GetChosenDate;
      IF (wFecha = 0D) THEN
        ERROR(err1);

      //Calculamos fechas a¤o

      wMes := DATE2DMY(wFecha,2);
      wAnyo := DATE2DMY(wFecha,3);

      //Calculamos Fechas a¤o actual

      wFechaIniAcum := DMY2DATE(1,1,wAnyo);
      wFechaIniSinAcum := DMY2DATE(1,wMes,wAnyo);
      wFechaFin := CALCDATE(Text50000,wFechaIniSinAcum);

      //Calculamos fechas a¤o anterior a comparar
      wFechaIniAnt               := CALCDATE(Text50001 , wFechaIniAcum);
      wFechaIniSinAcumAnt := CALCDATE(Text50001,wFechaIniSinAcum);
      wFechaFinAnt               := CALCDATE(Text50001 , wFechaFin);

      // miramos si se ha especificado el archivo de plantilla.
      //
      //

      // miramos si se ha especificado el archivo de plantilla.
      wArchivoExcel := Comprobar_parametros_informes;

      IF CREATE(xlAplic) THEN BEGIN

        wopcion := STRMENU(Text50002,1);

        wDialog.OPEN(Text50003);
        xlLibro := xlAplic.Workbooks._Open(wArchivoExcel);

        // Abrimos la hoja de vehiculos.
        xlHoja := xlLibro.Worksheets.Item(Text50004);
        xlHoja.Activate;

        // JPT 08/02/05 Marcamos los a¤os
        wIndice1:= 1;
        FOR lwCont:=1 TO 5 DO BEGIN
          xlHoja.Range(Text50005).Offset(6,wIndice1).Font.Bold:=TRUE;
          xlHoja.Range(Text50005).Offset(6,wIndice1).Value   := FORMAT(wAnyo);
          xlHoja.Range(Text50005).Offset(6,wIndice1+1).Font.Bold:=TRUE;
          xlHoja.Range(Text50005).Offset(6,wIndice1+1).Value := FORMAT(wAnyo-1);
          wIndice1 +=4;
        END;


        CASE wopcion OF
         1:
          BEGIN
            xlHoja.Range(Text50006).MergeCells(TRUE);
            xlHoja.Range(Text50006).HorizontalAlignment := -4108;
            xlHoja.Range(Text50006).Value := Text50007 + UPPERCASE(FORMAT(wFechaFin,0,Text50008 + Text50009));
            xlHoja.Range(Text50006).Font.Bold := TRUE;
          END;

         2:
          BEGIN
            xlHoja.Range(Text50006).MergeCells(TRUE);
            xlHoja.Range(Text50006).HorizontalAlignment := -4108;
            xlHoja.Range(Text50006).Value := Text50010 + UPPERCASE(FORMAT(wFechaFin,0,Text50008 + Text50009));
            xlHoja.Range(Text50006).Font.Bold := TRUE;
          END;
        END;

        //Calculamos datos informe

        rTipoServ.RESET;
        IF rTipoServ.FINDSET THEN REPEAT

          //Datos A¤o ACTUAL

          rParte.RESET;
          rParte.SETCURRENTKEY("Tipo Servicio","Touroperador principal",Fecha);
          rParte.SETRANGE("Tipo Servicio",rTipoServ.Codigo);
          IF (wopcion=1) THEN
            rParte.SETRANGE(Fecha,wFechaIniAcum,wFechaFin)
          ELSE
            rParte.SETRANGE(Fecha,wFechaIniSinAcum,wFechaFin);

          IF rParte.FINDSET THEN REPEAT
            // JPT 17/10/06 Trabajamos sobre un temporal que unifica las tablas de ingreso
            cFunBas.CreaTempCI(lrTempCI, rParte."N§ Parte", FALSE, '');
            IF rVehiculo.GET(rParte.Vehiculo) THEN BEGIN

              IF rVehiculo."Vehiculo propio" THEN BEGIN

                //Insertamos Registro en la tabla de datos si no existe
                IF NOT rDatosTemp.GET(rTipoServ.Codigo,rParte.Cliente,rParte."Touroperador principal",
                                      rDatosTemp.Tipo::Propio) THEN BEGIN

                  rDatosTemp.INIT;
                  rDatosTemp."Tipo Servicio" := rTipoServ.Codigo;
                  rDatosTemp.Cliente := rParte.Cliente;
                  rDatosTemp.TTOO := rParte."Touroperador principal";
                  rDatosTemp.Tipo := rDatosTemp.Tipo::Propio;
                  rDatosTemp.INSERT(TRUE);
                END;

                //Incrementamos el n§ de servicios
                rDatosTemp."Servicios actual" := rDatosTemp."Servicios actual" + 1;

                //Calculamos Pax y Producci¢n
                lrTempCI.RESET;
                lrTempCI.SETRANGE("N§ Parte",rParte."N§ Parte");
                lrTempCI.SETRANGE(Concepto,lrTempCI.Concepto::Ingreso);
                IF lrTempCI.FINDSET THEN REPEAT
                  rDatosTemp."Produccion actual" := rDatosTemp."Produccion actual" + lrTempCI."Importe sin impuesto";
                  rDatosTemp."Pax actual" := rDatosTemp."Pax actual" + lrTempCI."Pax Transportados";
                  IF (rDatosTemp."Servicios actual"<>0) THEN
                    rDatosTemp."Ing Servicios actual" := (rDatosTemp."Produccion actual"/rDatosTemp."Servicios actual");
                  IF (rDatosTemp."Pax actual"<>0) THEN
                    rDatosTemp."Ing Pax Actual" := (rDatosTemp."Produccion actual"/rDatosTemp."Pax actual");
                UNTIL lrTempCI.NEXT=0;

                rDatosTemp.MODIFY;

              END ELSE BEGIN

                // IF rVehiculo.Agregado THEN BEGIN
                BEGIN // JPT 15/07/04 Tiene que ser el total de vehiculos externos, no solo los agregados

                  //Insertamos Registro en la tabla de datos si no existe
                  IF NOT rDatosTemp.GET(rTipoServ.Codigo,rParte.Cliente,rParte."Touroperador principal",
                                        rDatosTemp.Tipo::Agregado) THEN BEGIN
                    rDatosTemp.INIT;
                    rDatosTemp."Tipo Servicio" := rTipoServ.Codigo;
                    rDatosTemp.Cliente := rParte.Cliente;
                    rDatosTemp.TTOO := rParte."Touroperador principal";
                    rDatosTemp.Tipo := rDatosTemp.Tipo::Agregado;
                    rDatosTemp.INSERT(TRUE);
                  END;

                  //Incrementamos el n§ de servicios
                  rDatosTemp."Servicios actual" := rDatosTemp."Servicios actual" + 1;

                  //Calculamos Pax y Producci¢n
                  lrTempCI.RESET;
                  lrTempCI.SETRANGE("N§ Parte",rParte."N§ Parte");
                  lrTempCI.SETRANGE(Concepto,lrTempCI.Concepto::Ingreso);
                  IF lrTempCI.FINDSET THEN REPEAT
                    rDatosTemp."Produccion actual" := rDatosTemp."Produccion actual" + lrTempCI."Importe sin impuesto";
                    rDatosTemp."Pax actual" := rDatosTemp."Pax actual" + lrTempCI."Pax Transportados";
                    IF (rDatosTemp."Servicios actual"<>0) THEN
                      rDatosTemp."Ing Servicios actual" := (rDatosTemp."Produccion actual"/rDatosTemp."Servicios actual");
                    IF (rDatosTemp."Pax actual"<>0) THEN
                      rDatosTemp."Ing Pax Actual" := (rDatosTemp."Produccion actual"/rDatosTemp."Pax actual");
                  UNTIL lrTempCI.NEXT=0;

                  rDatosTemp.MODIFY;

                END;
              END;

            END;
          UNTIL rParte.NEXT=0;

          //Datos A¤o ANTERIOR

          rParte.RESET;
          rParte.SETCURRENTKEY("Tipo Servicio","Touroperador principal",Fecha);
          rParte.SETRANGE("Tipo Servicio",rTipoServ.Codigo);
          IF (wopcion=1) THEN
            rParte.SETRANGE(Fecha,wFechaIniAnt,wFechaFinAnt)
          ELSE
            rParte.SETRANGE(Fecha,wFechaIniSinAcumAnt,wFechaFinAnt);
          IF rParte.FINDSET THEN REPEAT

            // JPT 17/10/06 Trabajamos sobre un temporal que unifica las tablas de ingreso
            cFunBas.CreaTempCI(lrTempCI, rParte."N§ Parte", FALSE, '');

            IF rVehiculo.GET(rParte.Vehiculo) THEN BEGIN

              IF rVehiculo."Vehiculo propio" THEN BEGIN
                //Insertamos Registro en la tabla de datos si no existe
                IF NOT rDatosTemp.GET(rTipoServ.Codigo,rParte.Cliente,rParte."Touroperador principal",
                                       rDatosTemp.Tipo::Propio) THEN BEGIN
                  rDatosTemp.INIT;
                  rDatosTemp."Tipo Servicio" := rTipoServ.Codigo;
                  rDatosTemp.Cliente := rParte.Cliente;
                  rDatosTemp.TTOO := rParte."Touroperador principal";
                  rDatosTemp.Tipo := rDatosTemp.Tipo::Propio;
                  rDatosTemp.INSERT(TRUE);
                END;
                //Incrementamos el n§ de servicios
                rDatosTemp."Servicios anterior" := rDatosTemp."Servicios anterior" + 1;

                //Calculamos Pax y Producci¢n
                lrTempCI.RESET;
                lrTempCI.SETRANGE("N§ Parte",rParte."N§ Parte");
                lrTempCI.SETRANGE(Concepto,lrTempCI.Concepto::Ingreso);
                IF lrTempCI.FINDSET THEN REPEAT
                  rDatosTemp."Produccion anterior" := rDatosTemp."Produccion anterior" + lrTempCI."Importe sin impuesto";
                  rDatosTemp."Pax anterior" := rDatosTemp."Pax anterior" + lrTempCI."Pax Transportados";
                  IF (rDatosTemp."Servicios anterior"<>0) THEN
                    rDatosTemp."Ing Servicios anterior" := (rDatosTemp."Produccion anterior"/rDatosTemp."Servicios anterior");
                  IF (rDatosTemp."Pax anterior"<>0) THEN
                    rDatosTemp."Ing Pax Anterior" := (rDatosTemp."Produccion anterior"/rDatosTemp."Pax anterior");
                UNTIL lrTempCI.NEXT=0;

                rDatosTemp.MODIFY;

              END ELSE BEGIN

                // IF rVehiculo.Agregado THEN BEGIN
                BEGIN // JPT 15/07/04 Tiene que ser el total de vehiculos externos, no solo los agregados

                  //Insertamos Registro en la tabla de datos si no existe
                  IF NOT rDatosTemp.GET(rTipoServ.Codigo,rParte.Cliente,rParte."Touroperador principal",
                                        rDatosTemp.Tipo::Agregado) THEN BEGIN
                    rDatosTemp.INIT;
                    rDatosTemp."Tipo Servicio" := rTipoServ.Codigo;
                    rDatosTemp.Cliente := rParte.Cliente;
                    rDatosTemp.TTOO := rParte."Touroperador principal";
                    rDatosTemp.Tipo := rDatosTemp.Tipo::Agregado;
                    rDatosTemp.INSERT(TRUE);
                  END;

                  //Incrementamos el n§ de servicios
                  rDatosTemp."Servicios anterior" := rDatosTemp."Servicios anterior" + 1;

                  //Calculamos Pax y Producci¢n
                  lrTempCI.RESET;
                  lrTempCI.SETRANGE("N§ Parte",rParte."N§ Parte");
                  lrTempCI.SETRANGE(Concepto,lrTempCI.Concepto::Ingreso);
                  IF lrTempCI.FINDSET THEN REPEAT
                    rDatosTemp."Produccion anterior" := rDatosTemp."Produccion anterior" + lrTempCI."Importe sin impuesto";
                    rDatosTemp."Pax anterior" := rDatosTemp."Pax anterior" + lrTempCI."Pax Transportados";
                    IF (rDatosTemp."Servicios anterior"<>0) THEN
                      rDatosTemp."Ing Servicios anterior" := (rDatosTemp."Produccion anterior"/rDatosTemp."Servicios anterior");
                    IF (rDatosTemp."Pax anterior"<>0) THEN
                      rDatosTemp."Ing Pax Anterior" := (rDatosTemp."Produccion anterior"/rDatosTemp."Pax anterior");
                  UNTIL lrTempCI.NEXT=0;

                  rDatosTemp.MODIFY;

                END;
              END;

            END;
          UNTIL rParte.NEXT=0;

        UNTIL rTipoServ.NEXT=0;

        //Imprimimos Datos en Hoja Excel

        xlRango := xlHoja.Range(Text50011);

        //PROPIOS
        wIndice1 := 0;
        CLEAR(wTotalPropio);

        rDatosTemp.RESET;
        rDatosTemp.SETRANGE(Tipo,rDatosTemp.Tipo::Propio);
        IF rDatosTemp.FINDSET THEN

          REPEAT

            wIndice2 := 0;
            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            xlRangoAux.Value := rDatosTemp."Tipo Servicio" + '-' + rDatosTemp.Cliente + rDatosTemp.TTOO;
            wIndice2 += 1;

            //Produccion
            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            xlRangoAux.Value := FORMAT(rDatosTemp."Produccion actual");
            wTotalPropio[1] := wTotalPropio[1] + rDatosTemp."Produccion actual";
            wIndice2 += 1;

            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            xlRangoAux.Value := FORMAT(rDatosTemp."Produccion anterior");
            wTotalPropio[2] := wTotalPropio[2] + rDatosTemp."Produccion anterior";
            wIndice2 += 1;

            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            xlRangoAux.Value := FORMAT(rDatosTemp."Produccion actual"-rDatosTemp."Produccion anterior");
            wIndice2 += 1;

            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            IF (rDatosTemp."Produccion anterior"<>0) THEN
              xlRangoAux.Value := FORMAT(100*((rDatosTemp."Produccion actual"-rDatosTemp."Produccion anterior")/
                                       (rDatosTemp."Produccion anterior")))
            ELSE
              xlRangoAux.Value := FORMAT(0);
            wIndice2 += 1;

            //SERVICIOS
            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            xlRangoAux.Value := FORMAT(rDatosTemp."Servicios actual");
            wTotalPropio[3] := wTotalPropio[3] + rDatosTemp."Servicios actual";
            wIndice2 += 1;

            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            xlRangoAux.Value := FORMAT(rDatosTemp."Servicios anterior");
            wTotalPropio[4] := wTotalPropio[4] + rDatosTemp."Servicios anterior";
            wIndice2 += 1;

            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            xlRangoAux.Value := FORMAT(rDatosTemp."Servicios actual"-rDatosTemp."Servicios anterior");
            wIndice2 += 1;

            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            IF (rDatosTemp."Servicios anterior"<>0) THEN
              xlRangoAux.Value := FORMAT(100*((rDatosTemp."Servicios actual"-rDatosTemp."Servicios anterior")/
                                       (rDatosTemp."Servicios anterior")))
            ELSE
              xlRangoAux.Value := FORMAT(0);
            wIndice2 += 1;

            //EUROS/SERVICIO
            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            xlRangoAux.Value := FORMAT(rDatosTemp."Ing Servicios actual");
            wTotalPropio[5] := wTotalPropio[5] + rDatosTemp."Ing Servicios actual";
            wIndice2 += 1;

            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            xlRangoAux.Value := FORMAT(rDatosTemp."Ing Servicios anterior");
            wTotalPropio[6] := wTotalPropio[6] + rDatosTemp."Ing Servicios anterior";
            wIndice2 += 1;

            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            xlRangoAux.Value := FORMAT(rDatosTemp."Ing Servicios actual" - rDatosTemp."Ing Servicios anterior");
            wIndice2 += 1;

            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            IF (rDatosTemp."Ing Servicios anterior" <> 0) THEN
              xlRangoAux.Value := FORMAT(100*((rDatosTemp."Ing Servicios actual" - rDatosTemp."Ing Servicios anterior")/
                                       (rDatosTemp."Ing Servicios anterior")))
            ELSE
              xlRangoAux.Value := FORMAT(0);
            wIndice2 += 1;

            //PAX
            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            xlRangoAux.Value := FORMAT(rDatosTemp."Pax actual");
            wTotalPropio[7] := wTotalPropio[7] + rDatosTemp."Pax actual";
            wIndice2 += 1;

            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            xlRangoAux.Value := FORMAT(rDatosTemp."Pax anterior");
            wTotalPropio[8] := wTotalPropio[8] + rDatosTemp."Pax anterior";
            wIndice2 += 1;

            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            xlRangoAux.Value := FORMAT(rDatosTemp."Pax actual"-rDatosTemp."Pax anterior");
            wIndice2 += 1;

            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            IF (rDatosTemp."Pax anterior" <> 0) THEN
              xlRangoAux.Value := FORMAT(100*((rDatosTemp."Pax actual" - rDatosTemp."Pax anterior")/
                                       (rDatosTemp."Pax anterior")))
            ELSE
              xlRangoAux.Value := FORMAT(0);
            wIndice2 += 1;

            //EUROS/PAX
            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            xlRangoAux.Value := FORMAT(rDatosTemp."Ing Pax Actual");
            wTotalPropio[9] := wTotalPropio[9] + rDatosTemp."Ing Pax Actual";
            wIndice2 += 1;

            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            xlRangoAux.Value := FORMAT(rDatosTemp."Ing Pax Anterior");
            wTotalPropio[10] := wTotalPropio[10] + rDatosTemp."Ing Pax Anterior";
            wIndice2 += 1;

            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            xlRangoAux.Value := FORMAT(rDatosTemp."Ing Pax Actual"-rDatosTemp."Ing Pax Anterior");
            wIndice2 += 1;

            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            IF (rDatosTemp."Ing Pax Anterior" <> 0) THEN
              xlRangoAux.Value := FORMAT(100*((rDatosTemp."Ing Pax Actual" - rDatosTemp."Ing Pax Anterior")/
                                       (rDatosTemp."Ing Pax Anterior")))
            ELSE
              xlRangoAux.Value := FORMAT(0);
            wIndice2 += 1;

            wIndice1 += 1;
          UNTIL rDatosTemp.NEXT=0;


        //IMPRIMIMOS TOTAL PROPIOS
        wIndice2 := 0;
        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        xlRangoAux.Value := Text50012;
        xlRangoAux.HorizontalAlignment := -4108;
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        //Produccion
        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        xlRangoAux.Value :=  FORMAT(wTotalPropio[1]);
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        xlRangoAux.Value :=  FORMAT(wTotalPropio[2]);
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        xlRangoAux.Value := FORMAT(wTotalPropio[1]-wTotalPropio[2]);
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        IF (wTotalPropio[2]<>0) THEN
          xlRangoAux.Value := FORMAT(100*((wTotalPropio[1]-wTotalPropio[2])/
                                       (wTotalPropio[2])))
        ELSE
          xlRangoAux.Value := FORMAT(0);
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        //SERVICIOS
        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        xlRangoAux.Value :=  FORMAT(wTotalPropio[3]);
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        xlRangoAux.Value :=  FORMAT(wTotalPropio[4]);
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        xlRangoAux.Value := FORMAT(wTotalPropio[3]-wTotalPropio[4]);
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        IF (wTotalPropio[4]<>0) THEN
          xlRangoAux.Value := FORMAT(100*((wTotalPropio[3]-wTotalPropio[4])/
                                       (wTotalPropio[4])))
        ELSE
          xlRangoAux.Value :=  FORMAT(0);
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        //EUROS/SERVICIO
        CLEAR(wTotalPropio[5]);
        IF wTotalPropio[3] <> 0 THEN
          wTotalPropio[5] := wTotalPropio[1] / wTotalPropio[3]; // JPT 26/07/04
        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        xlRangoAux.Value :=  FORMAT(wTotalPropio[5]);
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        CLEAR(wTotalPropio[6]);
        IF wTotalPropio[4] <> 0 THEN
          wTotalPropio[6] := wTotalPropio[2] / wTotalPropio[4]; // JPT 26/07/04
        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        xlRangoAux.Value :=  FORMAT(wTotalPropio[6]);
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        xlRangoAux.Value := FORMAT(wTotalPropio[5] - wTotalPropio[6]);
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        IF (wTotalPropio[6] <> 0) THEN
          xlRangoAux.Value := FORMAT(100*((wTotalPropio[5] - wTotalPropio[6])/
                                       (wTotalPropio[6])))
        ELSE
          xlRangoAux.Value := FORMAT(0);
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        //PAX
        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        xlRangoAux.Value :=  FORMAT(wTotalPropio[7]);
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        xlRangoAux.Value :=  FORMAT(wTotalPropio[8]);
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        xlRangoAux.Value := FORMAT(wTotalPropio[7]-wTotalPropio[8]);
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        IF (wTotalPropio[8] <> 0) THEN
          xlRangoAux.Value := FORMAT(100*((wTotalPropio[7] - wTotalPropio[8])/
                                       (wTotalPropio[8])))
        ELSE
          xlRangoAux.Value := FORMAT(0);
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        //EUROS/PAX
        CLEAR(wTotalPropio[9]);
        IF wTotalPropio[7] <> 0 THEN
          wTotalPropio[9] := wTotalPropio[1] / wTotalPropio[7]; // JPT 26/07/04
        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        xlRangoAux.Value :=  FORMAT(wTotalPropio[9]);
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        CLEAR(wTotalPropio[10]);
        IF wTotalPropio[8] <> 0 THEN
          wTotalPropio[10] := wTotalPropio[2] / wTotalPropio[8]; // JPT 26/07/04
        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        xlRangoAux.Value :=  FORMAT(wTotalPropio[10]);
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        xlRangoAux.Value := FORMAT(wTotalPropio[9]-wTotalPropio[10]);
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        IF (wTotalPropio[10] <> 0) THEN
          xlRangoAux.Value := FORMAT(100*((wTotalPropio[9] - wTotalPropio[10])/
                                       (wTotalPropio[10])))
        ELSE
          xlRangoAux.Value := FORMAT(0);
        xlRangoAux.Font.Bold(TRUE);

        //AGREGADOS
        wIndice1 += 1;
        rDatosTemp.RESET;
        rDatosTemp.SETRANGE(Tipo,rDatosTemp.Tipo::Agregado);
        IF rDatosTemp.FINDSET THEN

          REPEAT
            wIndice2 := 0;
            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            xlRangoAux.Value := rDatosTemp."Tipo Servicio" + '-' + rDatosTemp.Cliente + rDatosTemp.TTOO;
            wIndice2 += 1;

            //Produccion
            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            xlRangoAux.Value := FORMAT(rDatosTemp."Produccion actual");
            wTotalAgreg[1] := wTotalAgreg[1] + rDatosTemp."Produccion actual";
            wIndice2 += 1;

            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            xlRangoAux.Value := FORMAT(rDatosTemp."Produccion anterior");
            wTotalAgreg[2] := wTotalAgreg[2] + rDatosTemp."Produccion anterior";
            wIndice2 += 1;

            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            xlRangoAux.Value := FORMAT(rDatosTemp."Produccion actual"-rDatosTemp."Produccion anterior");
            wIndice2 += 1;

            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            IF (rDatosTemp."Produccion anterior"<>0) THEN
              xlRangoAux.Value := FORMAT(100*((rDatosTemp."Produccion actual"-rDatosTemp."Produccion anterior")/
                                       (rDatosTemp."Produccion anterior")))
            ELSE
              xlRangoAux.Value := FORMAT(0);
            wIndice2 += 1;

            //SERVICIOS
            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            xlRangoAux.Value := FORMAT(rDatosTemp."Servicios actual");
            wTotalAgreg[3] := wTotalAgreg[3] + rDatosTemp."Servicios actual";
            wIndice2 += 1;

            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            xlRangoAux.Value := FORMAT(rDatosTemp."Servicios anterior");
            wTotalAgreg[4] := wTotalAgreg[4] + rDatosTemp."Servicios anterior";
            wIndice2 += 1;

            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            xlRangoAux.Value := FORMAT(rDatosTemp."Servicios actual"-rDatosTemp."Servicios anterior");
            wIndice2 += 1;

            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            IF (rDatosTemp."Servicios anterior"<>0) THEN
              xlRangoAux.Value := FORMAT(100*((rDatosTemp."Servicios actual"-rDatosTemp."Servicios anterior")/
                                       (rDatosTemp."Servicios anterior")))
            ELSE
              xlRangoAux.Value := FORMAT(0);
            wIndice2 += 1;

            //EUROS/SERVICIO
            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            xlRangoAux.Value := FORMAT(rDatosTemp."Ing Servicios actual");
            wTotalAgreg[5] := wTotalAgreg[5] + rDatosTemp."Ing Servicios actual";
            wIndice2 += 1;

            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            xlRangoAux.Value := FORMAT(rDatosTemp."Ing Servicios anterior");
            wTotalAgreg[6] := wTotalAgreg[6] + rDatosTemp."Ing Servicios anterior";
            wIndice2 += 1;

            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            xlRangoAux.Value := FORMAT(rDatosTemp."Ing Servicios actual" - rDatosTemp."Ing Servicios anterior");
            wIndice2 += 1;

            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            IF (rDatosTemp."Ing Servicios anterior" <> 0) THEN
              xlRangoAux.Value := FORMAT(100*((rDatosTemp."Ing Servicios actual" - rDatosTemp."Ing Servicios anterior")/
                                       (rDatosTemp."Ing Servicios anterior")))
            ELSE
              xlRangoAux.Value := FORMAT(0);
            wIndice2 += 1;

            //PAX
            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            xlRangoAux.Value := FORMAT(rDatosTemp."Pax actual");
            wTotalAgreg[7] := wTotalAgreg[7] + rDatosTemp."Pax actual";
            wIndice2 += 1;

            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            xlRangoAux.Value := FORMAT(rDatosTemp."Pax anterior");
            wTotalAgreg[8] := wTotalAgreg[8] + rDatosTemp."Pax anterior";
            wIndice2 += 1;

            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            xlRangoAux.Value := FORMAT(rDatosTemp."Pax actual"-rDatosTemp."Pax anterior");
            wIndice2 += 1;

            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            IF (rDatosTemp."Pax anterior" <> 0) THEN
              xlRangoAux.Value := FORMAT(100*((rDatosTemp."Pax actual" - rDatosTemp."Pax anterior")/
                                       (rDatosTemp."Pax anterior")))
            ELSE
              xlRangoAux.Value := FORMAT(0);
            wIndice2 += 1;

            //EUROS/PAX
            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            xlRangoAux.Value := FORMAT(rDatosTemp."Ing Pax Actual");
            wTotalAgreg[9] := wTotalAgreg[9] + rDatosTemp."Ing Pax Actual";
            wIndice2 += 1;

            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            xlRangoAux.Value := FORMAT(rDatosTemp."Ing Pax Anterior");
            wTotalAgreg[10] := wTotalAgreg[10] + rDatosTemp."Ing Pax Anterior";
            wIndice2 += 1;

            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            xlRangoAux.Value := FORMAT(rDatosTemp."Ing Pax Actual"-rDatosTemp."Ing Pax Anterior");
            wIndice2 += 1;

            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            IF (rDatosTemp."Ing Pax Anterior" <> 0) THEN
              xlRangoAux.Value := FORMAT(100*((rDatosTemp."Ing Pax Actual" - rDatosTemp."Ing Pax Anterior")/
                                       (rDatosTemp."Ing Pax Anterior")))
            ELSE
              xlRangoAux.Value := FORMAT(0);
            wIndice2 += 1;

            wIndice1 += 1;
          UNTIL rDatosTemp.NEXT=0;

        //IMPRIMIMOS TOTAL AGREGADOS
        wIndice2 := 0;
        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        xlRangoAux.Value := Text50013;
        xlRangoAux.HorizontalAlignment := -4108;
        xlRangoAux.Font.Bold :=TRUE;
        wIndice2 += 1;

        //Produccion
        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        xlRangoAux.Value :=  FORMAT(wTotalAgreg[1]);
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        xlRangoAux.Value :=  FORMAT(wTotalAgreg[2]);
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        xlRangoAux.Value := FORMAT(wTotalAgreg[1]-wTotalAgreg[2]);
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        IF (wTotalAgreg[2]<>0) THEN
          xlRangoAux.Value := FORMAT(100*((wTotalAgreg[1]-wTotalAgreg[2])/
                                       (wTotalAgreg[2])))
        ELSE
          xlRangoAux.Value := FORMAT(0);
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        // SERVICIOS
        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        xlRangoAux.Value :=  FORMAT(wTotalAgreg[3]);
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        xlRangoAux.Value :=  FORMAT(wTotalAgreg[4]);
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        xlRangoAux.Value := FORMAT(wTotalAgreg[3]-wTotalAgreg[4]);
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        IF (wTotalAgreg[4]<>0) THEN
          xlRangoAux.Value := FORMAT(100*((wTotalAgreg[3]-wTotalAgreg[4])/
                                       (wTotalAgreg[4])))
        ELSE
          xlRangoAux.Value :=  FORMAT(0);
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        //EUROS/SERVICIO
        CLEAR(wTotalAgreg[5]);
        IF wTotalAgreg[3] <> 0 THEN
          wTotalAgreg[5] := wTotalAgreg[1]/wTotalAgreg[3];  // JPT 26/07/04
        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        xlRangoAux.Value :=  FORMAT(wTotalAgreg[5]);
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        CLEAR(wTotalAgreg[6]);
        IF wTotalAgreg[4] <> 0 THEN
          wTotalAgreg[6] := wTotalAgreg[2]/ wTotalAgreg[4]; // JPT 26/07/04
        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        xlRangoAux.Value :=  FORMAT(wTotalAgreg[6]);
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        xlRangoAux.Value := FORMAT(wTotalAgreg[5] - wTotalAgreg[6]);
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        IF (wTotalAgreg[6] <> 0) THEN
          xlRangoAux.Value := FORMAT(100*((wTotalAgreg[5] - wTotalAgreg[6])/
                                       (wTotalAgreg[6])))
        ELSE
          xlRangoAux.Value := FORMAT(0);
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        //PAX
        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        xlRangoAux.Value :=  FORMAT(wTotalAgreg[7]);
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        xlRangoAux.Value :=  FORMAT(wTotalAgreg[8]);
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        xlRangoAux.Value := FORMAT(wTotalAgreg[7]-wTotalAgreg[8]);
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        IF (wTotalAgreg[8] <> 0) THEN
          xlRangoAux.Value := FORMAT(100*((wTotalAgreg[7] - wTotalAgreg[8])/
                                       (wTotalAgreg[8])))
        ELSE
          xlRangoAux.Value := FORMAT(0);
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        //EUROS/PAX
        CLEAR(wTotalAgreg[9]);
        IF wTotalAgreg[7] <> 0 THEN
          wTotalAgreg[9] := wTotalAgreg[1] / wTotalAgreg[7]; // JPT 26/07/04
        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        xlRangoAux.Value :=  FORMAT(wTotalAgreg[9]);
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        CLEAR(wTotalAgreg[10]);
        IF wTotalAgreg[8] <> 0 THEN
          wTotalAgreg[10] := wTotalAgreg[2] / wTotalAgreg[8]; // JPT 26/07/04
        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        xlRangoAux.Value :=  FORMAT(wTotalAgreg[10]);
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        xlRangoAux.Value := FORMAT(wTotalAgreg[9]-wTotalAgreg[10]);
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        IF (wTotalAgreg[10] <> 0) THEN
          xlRangoAux.Value := FORMAT(100*((wTotalAgreg[9] - wTotalAgreg[10])/
                                       (wTotalAgreg[10])))
        ELSE
          xlRangoAux.Value := FORMAT(0);
        xlRangoAux.Font.Bold(TRUE);

        //TOTAL
        wIndice1 +=1;
        CLEAR(wTotal);
        CLEAR(wTotalFinal);
        CLEAR(wCliente);
        CLEAR(wTTOO);
        CLEAR(wTipo);

        rDatosTemp.RESET;
        IF rDatosTemp.FINDSET THEN BEGIN

          wCliente := rDatosTemp.Cliente;
          wTTOO := rDatosTemp.TTOO;
          wTipo := rDatosTemp."Tipo Servicio";

          REPEAT

            IF (wCliente<>rDatosTemp.Cliente) OR (wTTOO<>rDatosTemp.TTOO) OR (wTipo<>rDatosTemp."Tipo Servicio") THEN BEGIN
              wIndice1 += 1;
              wCliente := rDatosTemp.Cliente;
              wTTOO := rDatosTemp.TTOO;
              wTipo := rDatosTemp."Tipo Servicio";
              CLEAR(wTotal);
            END;

            wIndice2 := 0;
            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            xlRangoAux.Value := rDatosTemp."Tipo Servicio" + '-' + rDatosTemp.Cliente + rDatosTemp.TTOO;
            wIndice2 += 1;

            //Produccion
            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            wTotal[1] := wTotal[1] + rDatosTemp."Produccion actual";
            wTotalFinal[1] := wTotalFinal[1] + rDatosTemp."Produccion actual";
            xlRangoAux.Value :=  FORMAT(wTotal[1]);
            wIndice2 += 1;

            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            wTotal[2] := wTotal[2] + rDatosTemp."Produccion anterior";
            wTotalFinal[2] := wTotalFinal[2] + rDatosTemp."Produccion anterior";
            xlRangoAux.Value :=  FORMAT(wTotal[2]);
            wIndice2 += 1;

            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            xlRangoAux.Value := FORMAT(wTotal[1]-wTotal[2]);
            wIndice2 += 1;

            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            IF (wTotal[2]<>0) THEN
              xlRangoAux.Value := FORMAT(100*((wTotal[1]-wTotal[2])/
                                       (wTotal[2])))
            ELSE
              xlRangoAux.Value := FORMAT(wTotal[2] + 0);
            wIndice2 += 1;

            //SERVICIOS
            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            wTotal[3] := wTotal[3] + rDatosTemp."Servicios actual";
            wTotalFinal[3] := wTotalFinal[3] + rDatosTemp."Servicios actual";
            xlRangoAux.Value :=  FORMAT(wTotal[3]);
            wIndice2 += 1;

            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            wTotal[4] := wTotal[4] + rDatosTemp."Servicios anterior";
            wTotalFinal[4] := wTotalFinal[4] + rDatosTemp."Servicios anterior";
            xlRangoAux.Value :=  FORMAT(wTotal[4]);
            wIndice2 += 1;

            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            xlRangoAux.Value := FORMAT(wTotal[3]-wTotal[4]);
            wIndice2 += 1;

            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            IF (wTotal[4]<>0) THEN
              xlRangoAux.Value := FORMAT(100*((wTotal[3]-wTotal[4])/
                                       (wTotal[4])))
            ELSE
              xlRangoAux.Value :=  FORMAT(wTotal[4] +0);
            wIndice2 += 1;

            //EUROS/SERVICIO
            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            // wTotal[5] := wTotal[5] + rDatosTemp."Ing Servicios actual"; // JPT 26/07/04
            // wTotalFinal[5] := wTotalFinal[5] + rDatosTemp."Ing Servicios actual";  // JPT 26/07/04
            CLEAR(wTotal[5]);
            IF wTotal[3] <> 0 THEN
              wTotal[5] := wTotal[1] / wTotal[3];  // JPT 26/07/04
            xlRangoAux.Value :=  FORMAT(wTotal[5]);
            wIndice2 += 1;

            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            // wTotal[6] := wTotal[6] + rDatosTemp."Ing Servicios anterior"; // JPT 26/07/04
            // wTotalFinal[6] := wTotalFinal[6] + rDatosTemp."Ing Servicios anterior"; // JPT 26/07/04
            CLEAR(wTotal[6]);
            IF wTotal[4] <> 0 THEN
              wTotal[6] := wTotal[2] / wTotal[4];  // JPT 26/07/04
            xlRangoAux.Value :=  FORMAT(wTotal[6]);
            wIndice2 += 1;

            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            xlRangoAux.Value := FORMAT(wTotal[5] - wTotal[6]);
            wIndice2 += 1;

            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            IF (wTotal[6] <> 0) THEN
              xlRangoAux.Value := FORMAT(100*((wTotal[5] - wTotal[6])/
                                       (wTotal[6])))
            ELSE
              xlRangoAux.Value := FORMAT(wTotal[6] + 0);
            wIndice2 += 1;

            //PAX
            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            wTotal[7] := wTotal[7] + rDatosTemp."Pax actual";
            wTotalFinal[7] := wTotalFinal[7] + rDatosTemp."Pax actual";
            xlRangoAux.Value :=  FORMAT(wTotal[7]);
            wIndice2 += 1;

            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            wTotal[8] := wTotal[8] + rDatosTemp."Pax anterior";
            wTotalFinal[8] := wTotalFinal[8] + rDatosTemp."Pax anterior";
            xlRangoAux.Value :=  FORMAT(wTotal[8]);
            wIndice2 += 1;

            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            xlRangoAux.Value := FORMAT(wTotal[7]-wTotal[8]);
            wIndice2 += 1;

            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            IF (wTotal[8] <> 0) THEN
              xlRangoAux.Value := FORMAT(100*((wTotal[7] - wTotal[8])/
                                       (wTotal[8])))
            ELSE
              xlRangoAux.Value := FORMAT(wTotal[8] + 0);
            wIndice2 += 1;

            //EUROS/PAX
            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            // wTotal[9] := wTotal[9] + rDatosTemp."Ing Pax Actual"; // JPT 26/07/04
            // wTotalFinal[9] := wTotalFinal[9] + rDatosTemp."Ing Pax Actual";  // JPT 26/07/04
            CLEAR(wTotal[9]);
            IF wTotal[7] <> 0 THEN
              wTotal[9] := wTotal[1] /wTotal[7]; // JPT 26/07/04
            xlRangoAux.Value :=  FORMAT(wTotal[9]);
            wIndice2 += 1;

            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            // wTotal[10] := wTotal[10] + rDatosTemp."Ing Pax Anterior"; // JPT 26/07/04
            // wTotalFinal[10] := wTotalFinal[10] + rDatosTemp."Ing Pax Anterior"; // JPT 26/07/04
            CLEAR(wTotal[10]);
            IF wTotal[8] <> 0 THEN
              wTotal[10] := wTotal[2] /wTotal[8]; // JPT 26/07/04
            xlRangoAux.Value :=  FORMAT(wTotal[10]);
            wIndice2 += 1;

            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            xlRangoAux.Value := FORMAT(wTotal[9]-wTotal[10]);
            wIndice2 += 1;

            xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
            IF (wTotal[10] <> 0) THEN
              xlRangoAux.Value := FORMAT(100*((wTotal[9] - wTotal[10])/
                                       (wTotal[10])))
            ELSE
              xlRangoAux.Value := FORMAT(wTotal[10]+0);
            wIndice2 += 1;


          UNTIL rDatosTemp.NEXT=0;
        END;

        //IMPRIMIMOS TOTAL FINAL
        wIndice1 += 1;
        wIndice2 := 0;
        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        xlRangoAux.Value := Text50014;
        xlRangoAux.HorizontalAlignment := -4108;
        xlRangoAux.Font.Bold := TRUE;
        wIndice2 +=1;

        //Produccion
        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        xlRangoAux.Value :=  FORMAT(wTotalFinal[1]);
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        xlRangoAux.Value :=  FORMAT(wTotalFinal[2]);
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        xlRangoAux.Value := FORMAT(wTotalFinal[1]-wTotalFinal[2]);
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        IF (wTotalFinal[2]<>0) THEN
          xlRangoAux.Value := FORMAT(100*((wTotalFinal[1]-wTotalFinal[2])/
                                       (wTotalFinal[2])))
        ELSE
          xlRangoAux.Value := FORMAT(wTotalFinal[2] + 0);
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        //SERVICIOS
        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        xlRangoAux.Value :=  FORMAT(wTotalFinal[3]);
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        xlRangoAux.Value :=  FORMAT(wTotalFinal[4]);
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        xlRangoAux.Value := FORMAT(wTotalFinal[3]-wTotalFinal[4]);
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        IF (wTotalFinal[4]<>0) THEN
          xlRangoAux.Value := FORMAT(100*((wTotalFinal[3]-wTotalFinal[4])/
                                       (wTotalFinal[4])))
        ELSE
          xlRangoAux.Value :=  FORMAT(wTotalFinal[4] +0);
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        //EUROS/SERVICIO
        IF wTotalFinal[3] <> 0 THEN
          wTotalFinal[5] := wTotalFinal[1]/ wTotalFinal[3]; // JPT 26/07/04
        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        xlRangoAux.Value :=  FORMAT(wTotalFinal[5]);
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        IF wTotalFinal[4] <> 0 THEN
          wTotalFinal[6] := wTotalFinal[2]/ wTotalFinal[4]; // JPT 26/07/04
        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        xlRangoAux.Value :=  FORMAT(wTotalFinal[6]);
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        xlRangoAux.Value := FORMAT(wTotalFinal[5] - wTotalFinal[6]);
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        IF (wTotalFinal[6] <> 0) THEN
          xlRangoAux.Value := FORMAT(100*((wTotalFinal[5] - wTotalFinal[6])/
                                       (wTotalFinal[6])))
        ELSE
          xlRangoAux.Value := FORMAT(wTotalFinal[6] + 0);
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        //PAX
        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        xlRangoAux.Value :=  FORMAT(wTotalFinal[7]);
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        xlRangoAux.Value :=  FORMAT(wTotalFinal[8]);
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        xlRangoAux.Value := FORMAT(wTotalFinal[7]-wTotalFinal[8]);
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        IF (wTotalFinal[8] <> 0) THEN
          xlRangoAux.Value := FORMAT((wTotalFinal[7] - wTotalFinal[8])/
                                       (wTotalFinal[8]))
        ELSE
          xlRangoAux.Value := FORMAT(wTotalFinal[8] + 0);
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        //EUROS/PAX
        IF wTotalFinal[7] <> 0 THEN
          wTotalFinal[9] := wTotalFinal[1]/ wTotalFinal[7]; // JPT 26/07/04
        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        xlRangoAux.Value :=  FORMAT(wTotalFinal[9]);
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        IF wTotalFinal[8] <> 0 THEN
          wTotalFinal[10] := wTotalFinal[2]/ wTotalFinal[8]; // JPT 26/07/04
        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        xlRangoAux.Value :=  FORMAT(wTotalFinal[10]);
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        xlRangoAux.Value := FORMAT(wTotalFinal[9]-wTotalFinal[10]);
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        xlRangoAux := xlRango.Offset(wIndice1,wIndice2);
        IF (wTotalFinal[10] <> 0) THEN
          xlRangoAux.Value := FORMAT(100*((wTotalFinal[9] - wTotalFinal[10])/
                                       (wTotalFinal[10])))
        ELSE
          xlRangoAux.Value := FORMAT(wTotalFinal[10]+0);
        xlRangoAux.Font.Bold(TRUE);
        wIndice2 += 1;

        xlRangoAux := xlRango.Resize(wIndice1+1,wIndice2);
        xlRangoAux.Select;
        xlRangoAux.NumberFormat('0,00');
        xlRangoAux.Borders.Item(1).Weight := 3;
        xlRangoAux.Borders.Item(2).Weight := 3;
        xlRangoAux.Borders.Item(3).Weight := 3;
        xlRangoAux.Borders.Item(4).Weight := 3;
        xlHoja.Range(Text50015).Columns.EntireColumn.AutoFit;

        //GUARDAMOS HOJA EXCEL
        wArchivoGuarda := COPYSTR(wArchivoExcel,1,STRLEN(wArchivoExcel)-4) + '-'      +
                          UPPERCASE(FORMAT(wFecha,0,Text50016))+'-' +
                          USERID + Text50017;

        IF EXISTS(wArchivoGuarda) THEN
          ERASE(wArchivoGuarda);

        xlLibro.Saved(TRUE);
        xlLibro._SaveAs(wArchivoGuarda);

        xlAplic.Visible(TRUE);

        wDialog.CLOSE;
        CLEARALL;

      END;
    END;

    PROCEDURE Comprobar_parametros_informes@20() : Text[250];
    VAR
      rParametros@1100244000 : Record 7010311;
      wArchivo@1100244001 : Text[250];
    BEGIN
      // Comprobar_parametros_informes
      //

      rParametros.RESET;
      IF rParametros.FINDFIRST THEN BEGIN
        IF rParametros."Ruta Plantilla Informes" = '' THEN
          ERROR(err3)
        ELSE BEGIN
          IF EXISTS(rParametros."Ruta Plantilla Informes") THEN
            EXIT(rParametros."Ruta Plantilla Informes")
          ELSE
            ERROR(err4,rParametros."Ruta Plantilla Informes");
        END;
      END
      ELSE
        ERROR(err2);
    END;

    BEGIN
    {
      $001 AJS 11102013 Modifico la funcion ObtenerNombres para que retorne Text(50) en el nombre de cliente

      $002 AJS 11102013 Modifico la funcion ActualizarRegistro para que trabajar con el nombre de cliente ampliado a Text(50)
    }
    END.
  }
}
