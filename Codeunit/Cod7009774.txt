OBJECT Codeunit 7009774 Funciones esquema cuentas
{
  OBJECT-PROPERTIES
  {
    Date=16/10/12;
    Time=11:00:54;
    Modified=Yes;
    Version List=AIC2009;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      vTrozo@1100004 : Decimal;
      vPorce@1100003 : Decimal;
      dProc@1100002 : Dialog;
      rEmpresa@1100000 : Record 7009830;
      text0001@1100005 : TextConst 'ENU=In process @1@@@@@@@@@;ESP=Copiando @1@@@@@@@@@';
      text0002@1100006 : TextConst 'ENU=If the lines already exist in the destination company, they will be overwritten. Do you want to continue?;ESP=Si las lineas ya existen en la empresa de destino, se sobreescribiran. ¨Desea continuar?';
      rLineasCopy@1100007 : Record 85;
      rAccSchedule@1100008 : Record 84;
      text0007@1100012 : TextConst 'ENU=If the account schedule already exists in the destination company, it will be overwritten. Do you want to continue?;ESP=Si el esquema ya existe en la empresa de destino, se sobreescribir . ¨Desea continuar?';
      text0003@1100009 : TextConst 'ENU=The account schedule %1 does not exist in the company %2.;ESP=El esquema de cuentas %1 no existe en la empresa %2.';
      text0004@1100001 : TextConst 'ENU=Cancelled process;ESP=Proceso cancelado;FRA=Proc‚dure annul‚e;ITA=Processo annullato';
      text0005@1100010 : TextConst 'ENU=Finished process;ESP=Proceso finalizado;FRA=Proc‚dure finalis‚e;ITA=Processo completato';
      text0006@1100011 : TextConst 'ENU=The account schedulo %1 already exist in the company %2. Do you want to overwrite it?;ESP=El esquema de cuentas %1 ya existe en la empresa %2. ¨Desea sobreescribirlo?';
      text0008@1100013 : TextConst 'ENU=Process completed.\Please check the accounts and default filters. The assigned values could not exist in the destination company.;ESP=Proceso finalizado.\Por favor revise las cuentas y filtros predeterminados, los valores podr¡an no existir en la empresa destino.';
      text0009@1100014 : TextConst 'ENU=Lines could not be recovered. Do you want to continue?;ESP=Las l¡neas no se podr n recuperar. ¨Confirma el borrado?';
      text0010@1100015 : TextConst 'ENU=Do you want to delete the selected lines from the current company?;ESP=¨Desea eliminar tambien las lineas seleccionadas de la empresa actual?';

    PROCEDURE CopiadoCompleto@1100001(pEsquema@1100000 : Code[20]);
    VAR
      lrLineas@1100001 : Record 85;
      lrAccSchOrigen@1100002 : Record 84;
    BEGIN

      BuscaEmpresas();
      //IF NOT CONFIRM (text0007) THEN EXIT ;
      lrAccSchOrigen.RESET;
      IF NOT lrAccSchOrigen.GET(pEsquema) THEN EXIT;
      rEmpresa.RESET;
      rEmpresa.SETRANGE(rEmpresa.Usuario,USERID);
      rEmpresa.SETRANGE(rEmpresa.Seleccion,TRUE);
      IF rEmpresa.FINDFIRST THEN BEGIN
        REPEAT
             //Comprobamos si existe el esquema, y si existe, si se desea sobreescribir
             rAccSchedule.CHANGECOMPANY(rEmpresa.Empresa);
             IF rAccSchedule.GET(pEsquema) THEN
               IF NOT CONFIRM(text0006,FALSE,pEsquema,rEmpresa.Empresa) THEN ERROR(text0004)
                 ELSE BEGIN
                    rLineasCopy.CHANGECOMPANY(rEmpresa.Empresa);
                    rLineasCopy.RESET;
                    rLineasCopy.SETRANGE(rLineasCopy."Schedule Name",pEsquema);
                    IF rLineasCopy.FIND('-') THEN
                      rLineasCopy.DELETEALL;
                    rAccSchedule.DELETE();
                 END;
             rAccSchedule.INIT;
             rAccSchedule := lrAccSchOrigen;
             rAccSchedule.INSERT(TRUE);

             lrLineas.RESET;
             lrLineas.SETRANGE(lrLineas."Schedule Name",pEsquema);

             IF lrLineas.FINDFIRST THEN BEGIN
              vTrozo := 100 / lrLineas.COUNT;
              vPorce := 0;
              dProc.OPEN(text0001);
              rLineasCopy.CHANGECOMPANY(rEmpresa.Empresa);
              REPEAT

                  rLineasCopy.RESET;
                  rLineasCopy.INIT;
                  rLineasCopy := lrLineas;
             //     rLineasCopy."Line No." := NextLineNo(rEmpresa.Empresa,pEsquema);
                  rLineasCopy.INSERT(TRUE);

                  vPorce := vPorce + vTrozo;
                  dProc.UPDATE(1,ROUND(vPorce * 100,1));

              UNTIL lrLineas.NEXT = 0;
              dProc.CLOSE;
           END;
        UNTIL rEmpresa.NEXT  = 0;
        MESSAGE(text0005);
      END;
      //Copiado de un esquema completo a n empresas
    END;

    PROCEDURE CopiadoLineas@1100002(VAR pLineas@1100000 : Record 85);
    BEGIN
      // Copiado de lineas de un esquema a n empresas
      // mostramos la lista de cias
      BuscaEmpresas();
      IF NOT CONFIRM (text0002) THEN EXIT ;

      rEmpresa.RESET;
      rEmpresa.SETRANGE(rEmpresa.Usuario,USERID);
      rEmpresa.SETRANGE(rEmpresa.Seleccion,TRUE);
      IF rEmpresa.FINDFIRST THEN BEGIN
        REPEAT
           IF pLineas.FINDFIRST THEN BEGIN
             //Comprobamos si existe el esquema, si no error
             rAccSchedule.CHANGECOMPANY(rEmpresa.Empresa);
             IF NOT rAccSchedule.GET(pLineas."Schedule Name") THEN ERROR(text0003,pLineas."Schedule Name",rEmpresa.Empresa);

              vTrozo := 100 / pLineas.COUNT;
              vPorce := 0;
              dProc.OPEN(text0001);
              rLineasCopy.CHANGECOMPANY(rEmpresa.Empresa);
              REPEAT
                  rLineasCopy.RESET;
                  rLineasCopy.SETRANGE(rLineasCopy."Schedule Name",pLineas."Schedule Name");
                  rLineasCopy.SETRANGE(rLineasCopy."Row No.",pLineas."Row No.");
                  IF rLineasCopy.FIND('-') THEN
                    rLineasCopy.DELETEALL;

                  rLineasCopy.RESET;
                  rLineasCopy.INIT;
                  rLineasCopy := pLineas;
                  rLineasCopy."Line No." := NextLineNo(rEmpresa.Empresa,pLineas."Schedule Name");
                  rLineasCopy.INSERT(TRUE);

                  vPorce := vPorce + vTrozo;
                  dProc.UPDATE(1,ROUND(vPorce * 100,1));

              UNTIL pLineas.NEXT = 0;
              dProc.CLOSE;
           END;
        UNTIL rEmpresa.NEXT  = 0  ;
        MESSAGE(text0008);
      END;
    END;

    PROCEDURE Borrado@1100004(VAR pLineas@1100000 : Record 85);
    BEGIN
      // mostramos la lista de cias
      BuscaEmpresas();
      IF NOT CONFIRM (text0009) THEN EXIT ;

      rEmpresa.RESET;
      rEmpresa.SETRANGE(rEmpresa.Usuario,USERID);
      rEmpresa.SETRANGE(rEmpresa.Seleccion,TRUE);
      IF rEmpresa.FINDFIRST THEN BEGIN
        REPEAT
           IF pLineas.FINDFIRST THEN BEGIN
             //Comprobamos si existe el esquema, si no error
             rAccSchedule.CHANGECOMPANY(rEmpresa.Empresa);
             IF NOT rAccSchedule.GET(pLineas."Schedule Name") THEN ERROR(text0003,pLineas."Schedule Name",rEmpresa.Empresa);

              vTrozo := 100 / pLineas.COUNT;
              vPorce := 0;
              dProc.OPEN(text0001);
              rLineasCopy.CHANGECOMPANY(rEmpresa.Empresa);
              REPEAT
                  rLineasCopy.RESET;
                  rLineasCopy.SETRANGE(rLineasCopy."Schedule Name",pLineas."Schedule Name");
                  rLineasCopy.SETRANGE(rLineasCopy."Row No.",pLineas."Row No.");
                  IF rLineasCopy.FIND('-') THEN
                    rLineasCopy.DELETEALL;

                  vPorce := vPorce + vTrozo;
                  dProc.UPDATE(1,ROUND(vPorce * 100,1));

              UNTIL pLineas.NEXT = 0;
              dProc.CLOSE;
           END;
        UNTIL rEmpresa.NEXT  = 0  ;
        IF CONFIRM (text0010,FALSE) THEN BEGIN
           pLineas.DELETEALL;


        END;
        MESSAGE(text0005);
      END;
    END;

    PROCEDURE NextLineNo@1100000(Cia@1100000 : Text[30];NomEsquema@1100001 : Code[10]) num : Integer;
    VAR
      lrLin@1100002 : Record 85;
    BEGIN
      //Nos da el siguiente numero de linea
      lrLin.RESET;
      lrLin.CHANGECOMPANY(Cia);
      lrLin.SETRANGE(lrLin."Schedule Name",NomEsquema);
      IF lrLin.FINDLAST THEN
         num := lrLin."Line No." + 10000
       ELSE
         num := 10000;
    END;

    PROCEDURE BuscaEmpresas@1100005();
    VAR
      lrCia@1100000 : Record 2000000006;
      lfEmpresas@1100001 : Form 7009850;
    BEGIN
      //Llenamos la tabla de seleccion con las empresas que selecciona el usuario
      //vacia tabla
      rEmpresa.RESET;
      rEmpresa.SETRANGE(rEmpresa.Usuario,USERID);
      IF rEmpresa.FINDFIRST THEN rEmpresa.DELETEALL;

      //llena
      lrCia.RESET;
      lrCia.SETFILTER(lrCia.Name,'<>%1',COMPANYNAME);
      IF lrCia.FINDFIRST THEN BEGIN
        REPEAT
          rEmpresa.INIT;
          rEmpresa.Usuario := USERID;
          rEmpresa.Empresa :=lrCia.Name;
          rEmpresa.INSERT;
        UNTIL lrCia.NEXT = 0;
      END;
      COMMIT;
      CLEAR(lfEmpresas);

      rEmpresa.SETRANGE(rEmpresa.Usuario,USERID);
      lfEmpresas.SETTABLEVIEW(rEmpresa);
      lfEmpresas.LOOKUPMODE(TRUE);
      IF lfEmpresas.RUNMODAL <> ACTION::LookupOK THEN ERROR(text0004)
    END;

    BEGIN
    {
      CNM 03/10/11 SG-CAR 11001-1, requisito 2
    }
    END.
  }
}
