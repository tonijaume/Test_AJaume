OBJECT Report 7010408 Resumen Entradas Salidas
{
  OBJECT-PROPERTIES
  {
    Date=16/10/09;
    Time=12:34:40;
    Version List=TRANSFER;
  }
  PROPERTIES
  {
    CaptionML=ESP=Resumen Entradas Salidas;
    LeftMargin=1900;
    OnInitReport=BEGIN
                   // wSeparaPaxes indica el n£mero de paxes por el que se tiene que separar
                   wSeparaPaxes := 24;
                 END;

  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table7010360;
        DataItemTableView=SORTING(Fecha,Tipo Servicio,Codigo Servicio);
        OnPreDataItem=BEGIN
                        wFiltroFecha := Parte.GETFILTER(Fecha);
                        IF wFiltroFecha = '' THEN
                          IF NOT CONFIRM(mssg1, FALSE) THEN
                            CurrReport.BREAK;
                        rParametros.FINDFIRST;
                        SETFILTER ("Codigo Servicio" ,'%1 | %2',rParametros."Codigo Salidas",rParametros."Codigo Entradas");
                        // Borra el temporal
                        rTemporal.RESET;
                        rTemporal.SETRANGE(Usuario, USERID);
                        rTemporal.DELETEALL;

                        wNLinea         := 0;

                        // ----  AJS 7.1.2002  ----
                        // ----  A¤adido para el salto de pagina para separar grupos de peque¤os y grandes  ----

                        w_primerapagina := TRUE;

                        // ----  FIN AJS 7.1.2002  ----

                        wTotal := COUNT;
                        wVentana1.OPEN(Text000);
                      END;

        OnAfterGetRecord=VAR
                           lwValor@1100244000 : Integer;
                         BEGIN
                           wNLinea += 1;

                           // ----  AJS 11.09.2002 Tratar solo los partes que contengan CARTA en observaciones o solo los que no la contengan  ----

                           IF wMostrarPartesCarta THEN BEGIN
                             IF STRPOS(Observaciones, Text001) = 0 THEN
                               CurrReport.SKIP;
                           END
                           ELSE BEGIN
                             IF STRPOS(Observaciones, Text001) <> 0 THEN
                               CurrReport.SKIP;
                           END;

                           // ----  FIN AJS 11.09.2002  ----

                           rTemporal.INIT;
                           rTemporal.Usuario           := USERID;
                           rTemporal."N§ Linea"        := wNLinea;
                           rTemporal.Planing           := Agrupacion;
                           CASE "Codigo Servicio" OF
                             rParametros."Codigo Salidas"  : rTemporal.Hora := "Hora inicio";
                             rParametros."Codigo Entradas" : rTemporal.Hora := "Hora 1er Vuelo"
                           END;
                           rTemporal.zona              := "Zona parte";
                           rTemporal.Paxes             := "Adultos transportados" + "Ni¤os transportados";
                           rTemporal."Orden Zona"      := BuscaOrdenZona("Zona parte");
                           rTemporal."Codigo Servicio" := "Codigo Servicio";
                           rTemporal.Observaciones     := Observaciones;

                           // IF rTemporal.Hora <= rParametros."Partes d¡a siguiente" THEN // JPT 26/10/04
                           IF Parte."Dia siguiente" THEN // JPT 26/10/04
                             rTemporal."Orden Dia" := 2
                           ELSE
                             rTemporal."Orden Dia" := 1;
                           rTemporal.INSERT;

                           lwValor :=ROUND((wNLinea/ wTotal) * 10000,1) ;
                           wVentana1.UPDATE(1, lwValor);
                         END;

        OnPostDataItem=BEGIN
                         wVentana1.CLOSE;
                       END;

        ReqFilterFields=Fecha;
        CalcFields=Adultos transportados,Ni¤os transportados;
      }
      SECTIONS
      {
      }
       }
    { PROPERTIES
      {
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number)
                          WHERE(Number=FILTER(>0));
        MaxIteration=2;
        DataItemVarName=Vuelta;
        OnAfterGetRecord=BEGIN
                           CASE Number OF
                             1: wRotuloTipoVehiculo := Text002;
                             2: wRotuloTipoVehiculo := Text003;
                           END;

                           // ----  AJS 7.1.2002  ----
                           // ----  A¤adido para el salto de pagina para separar grupos de peque¤os y grandes  ----

                           IF NOT w_primerapagina THEN
                             CurrReport.NEWPAGE;

                           // ----  FIN AJS 7.1.2002  ----
                         END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Header;
            PrintOnEveryPage=Yes;
            SectionWidth=18450;
            SectionHeight=2961;
          }
          CONTROLS
          {
            { 1   ;Label        ;0    ;2115 ;9000 ;423  ;HorzAlign=Center;
                                                         FontSize=12;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=S A L I D A S }
            { 2   ;Label        ;9450 ;2115 ;9000 ;423  ;HorzAlign=Center;
                                                         FontSize=12;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=E N T R A D A S }
            { 3   ;Shape        ;0    ;2538 ;9000 ;423  ;ShapeStyle=HorzLine }
            { 4   ;Shape        ;9450 ;2538 ;9000 ;423  ;ShapeStyle=HorzLine }
            { 18  ;Label        ;10950;0    ;7500 ;423  ;HorzAlign=Right;
                                                         FontSize=9;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=RESUMEN DE ENTRADAS Y SALIDAS }
            { 19  ;TextBox      ;0    ;0    ;7500 ;423  ;FontSize=9;
                                                         SourceExpr=COMPANYNAME }
            { 20  ;Shape        ;0    ;423  ;18450;423  ;ShapeStyle=HorzLine }
            { 21  ;TextBox      ;6000 ;846  ;9750 ;423  ;FontSize=9;
                                                         SourceExpr=wFiltroFecha }
            { 22  ;Label        ;4350 ;846  ;1500 ;423  ;HorzAlign=Right;
                                                         FontSize=9;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=Fecha: }
            { 24  ;TextBox      ;0    ;846  ;2700 ;423  ;FontSize=9;
                                                         SourceExpr=wRotuloTipoVehiculo }
            { 16  ;TextBox      ;18000;846  ;450  ;423  ;CaptionML=ESP=P gina;
                                                         SourceExpr=CurrReport.PAGENO }
            { 15  ;Label        ;17100;846  ;900  ;423  ;ParentControl=16 }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number);
        OnPreDataItem=BEGIN
                        PreparaTablas;
                      END;

        OnAfterGetRecord=VAR
                           lwSigue@1100244000 : ARRAY [2] OF Boolean;
                         BEGIN
                           CLEAR (wHora);
                           CLEAR (wZona);
                           CLEAR  (wPax);
                           CLEAR  (wCod);
                           CLEAR (wObservaciones);

                           lwSigue [1] := (wUltimoPlanning[1] = rTempS.Planing) AND (NOT wFinS);

                           IF lwSigue [1] THEN BEGIN
                             wCod [1]          := COPYSTR(rTempS."Codigo Servicio",1,1) + '/';
                             wHora[1]          := rTempS.Hora;
                             wZona[1]          := rTempS.zona;
                             wPax [1]          := rTempS.Paxes;
                             wObservaciones[1] := rTempS.Observaciones;
                           END;

                           wUltimoPlanning[1] := rTempS.Planing;

                           IF lwSigue [1] THEN BEGIN
                             IF rTempS.NEXT =0 THEN
                               wFinS := TRUE;
                           END;

                           lwSigue [2] := (wUltimoPlanning[2] = rTempE.Planing) AND (NOT wFinE);

                           IF lwSigue [2] THEN BEGIN
                             wCod [2]          := COPYSTR(rTempE."Codigo Servicio",1,1) + '/';
                             wHora[2]          := rTempE.Hora;
                             wZona[2]          := rTempE.zona;
                             wPax [2]          := rTempE.Paxes;
                             wObservaciones[2] := rTempE.Observaciones;
                           END;

                           wUltimoPlanning[2] := rTempE.Planing;

                           IF lwSigue [2] THEN BEGIN
                             IF rTempE.NEXT =0 THEN
                               wFinE := TRUE;
                           END;

                           IF (NOT lwSigue[1]) AND (NOT lwSigue[2]) THEN
                             IF wFinS AND wFinE THEN
                               CurrReport.BREAK;

                           // ----  AJS 7.1.2002  ----
                           // ----  A¤adido para el salto de pagina para separar grupos de peque¤os y grandes  ----

                           w_primerapagina := FALSE;

                           // ----  FIN AJS 7.1.2002  ----
                         END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=18450;
            SectionHeight=423;
          }
          CONTROLS
          {
            { 5   ;TextBox      ;0    ;0    ;450  ;423  ;FontSize=10;
                                                         SourceExpr=wCod[1] }
            { 6   ;TextBox      ;600  ;0    ;1050 ;423  ;FontSize=10;
                                                         SourceExpr=FORMAT(wHora[1] ,5) }
            { 7   ;TextBox      ;1800 ;0    ;900  ;423  ;FontSize=10;
                                                         SourceExpr=wZona[1] }
            { 8   ;TextBox      ;2850 ;0    ;900  ;423  ;FontSize=10;
                                                         DecimalPlaces=0:0;
                                                         BlankZero=Yes;
                                                         SourceExpr=wPax[1] }
            { 9   ;TextBox      ;12300;0    ;900  ;423  ;FontSize=10;
                                                         DecimalPlaces=0:0;
                                                         BlankZero=Yes;
                                                         SourceExpr=wPax[2] }
            { 10  ;TextBox      ;11250;0    ;900  ;423  ;FontSize=10;
                                                         SourceExpr=wZona[2] }
            { 11  ;TextBox      ;10050;0    ;1050 ;423  ;FontSize=10;
                                                         SourceExpr=FORMAT(wHora[2],5) }
            { 12  ;TextBox      ;9450 ;0    ;450  ;423  ;FontSize=10;
                                                         SourceExpr=wCod[2] }
            { 23  ;TextBox      ;4050 ;0    ;4950 ;423  ;FontSize=10;
                                                         BlankZero=Yes;
                                                         SourceExpr=wObservaciones[1] }
            { 25  ;TextBox      ;13500;0    ;4950 ;423  ;FontSize=10;
                                                         BlankZero=Yes;
                                                         SourceExpr=wObservaciones[2] }
          }
           }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=5940;
      Height=1210;
    }
    CONTROLS
    {
      { 1   ;TextBox      ;3410 ;0    ;1650 ;440  ;SourceExpr=wSeparaPaxes }
      { 2   ;Label        ;0    ;0    ;3300 ;440  ;ParentControl=1;
                                                   CaptionML=ESP=Separar Paxes }
      { 3   ;Label        ;0    ;550  ;3300 ;440  ;CaptionML=ESP=Mostrar partes con carta }
      { 4   ;CheckBox     ;3410 ;550  ;440  ;440  ;ShowCaption=No;
                                                   SourceExpr=wMostrarPartesCarta }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      Text000@1100244021 : TextConst 'ESP=Preparando\@1@@@@@@@@@\';
      Text001@1100244022 : TextConst 'ESP=CARTA';
      Text002@1100244023 : TextConst 'ESP=AUTOCARES';
      Text003@1100244024 : TextConst 'ESP=LIGEROS';
      rTempS@1100244000 : Record 7035337;
      rTempE@1100244001 : Record 7035337;
      wUltimoPlanning@1100244002 : ARRAY [2] OF Code[10];
      wHora@1100244003 : ARRAY [2] OF Time;
      wZona@1100244004 : ARRAY [2] OF Code[10];
      wPax@1100244005 : ARRAY [2] OF Decimal;
      wCod@1100244006 : ARRAY [2] OF Code[2];
      wObservaciones@1100244007 : ARRAY [2] OF Text[250];
      wFinS@1100244008 : Boolean;
      wFinE@1100244009 : Boolean;
      wFiltroFecha@1100244010 : Text[30];
      rTemporal@1100244011 : Record 7035337;
      wNLinea@1100244012 : Integer;
      wRotuloTipoVehiculo@1100244013 : Text[30];
      wSeparaPaxes@1100244014 : Decimal;
      rParametros@1100244015 : Record 7010311;
      wVentana1@1100244016 : Dialog;
      wTotal@1100244017 : Integer;
      mssg1@1100244018 : TextConst 'ESP=Ha dejado el filtro de fecha en blanco ¨Quiere ùSeguir?';
      w_primerapagina@1100244019 : Boolean;
      wMostrarPartesCarta@1100244020 : Boolean;

    PROCEDURE PreparaTablas@2();
    VAR
      lrParametros@1100244000 : Record 7010311;
    BEGIN
      // PreparaTablas

      lrParametros.FINDFIRST;

      wFinS := FALSE;
      wFinE := FALSE;


      IF NOT rTemporal.FINDFIRST THEN
        CurrReport.QUIT;

      rTempS.RESET;
      rTempS.SETCURRENTKEY(Planing, "Orden Zona", "Orden Dia", Hora,Paxes,"Codigo Servicio");
      rTempS.SETRANGE(Usuario, USERID);

      rTempE.COPY(rTempS);

      rTempS.SETRANGE("Codigo Servicio", lrParametros."Codigo Salidas");
      rTempE.SETRANGE("Codigo Servicio", lrParametros."Codigo Entradas");

      Rellena1Hora(rTempS);
      Rellena1Hora(rTempE);

      rTempS.SETCURRENTKEY(Usuario,
                           "Orden Dia",
                           "Hora 1¦Zona",
                           Planing,
                           "Orden Zona",
                           Hora,
                           Paxes,
                           "Codigo Servicio");

      rTempE.SETCURRENTKEY(Usuario,
                           "Orden Dia",
                           "Hora 1¦Zona",
                           Planing,
                           "Orden Zona",
                           Hora,
                           Paxes,
                           "Codigo Servicio");

      IF NOT rTempS.FINDFIRST THEN
        wFinS := TRUE;
      IF NOT rTempE.FINDFIRST THEN
        wFinE := TRUE;

      wUltimoPlanning[1] := rTempS.Planing;
      wUltimoPlanning[2] := rTempE.Planing;
    END;

    PROCEDURE BuscaOrdenZona@9(pZona@1100244000 : Code[10]) orden : Integer;
    VAR
      lrZonaFisica@1100244001 : Record 7010314;
    BEGIN
      // BuscaOrdenZona
      // Devuelve el orden de la zona fisica pasada como parametro

      lrZonaFisica.RESET;
      IF lrZonaFisica.GET(pZona) THEN
        EXIT (lrZonaFisica.Orden)
      ELSE
        EXIT (0);
    END;

    PROCEDURE Rellena1Hora@1(VAR prTemp@1100244000 : Record 7035337);
    VAR
      lwPlanningAnt@1100244001 : Code[10];
      lwHora@1100244002 : Time;
    BEGIN
      // Rellena1Hora
      //
      // Rellena en el temporal el campo Hora 1§Zona

      lwPlanningAnt := '';
      lwHora        := 0T;

      prTemp.SETCURRENTKEY (Planing,"Orden Zona",prTemp."Orden Dia",Hora,Paxes,"Codigo Servicio");

      CASE Vuelta.Number OF
        1: prTemp.SETFILTER(Paxes,'> %1' ,wSeparaPaxes);
        2: prTemp.SETFILTER(Paxes,'<= %1',wSeparaPaxes);
      END;

      IF prTemp.FINDSET(TRUE) THEN
        REPEAT
          IF prTemp.Planing <> lwPlanningAnt THEN BEGIN
            lwPlanningAnt := prTemp.Planing;
            lwHora        := prTemp.Hora;
          END;
          prTemp."Hora 1¦Zona" := lwHora;
          prTemp.MODIFY;
        UNTIL prTemp.NEXT = 0;
    END;

    BEGIN
    {
      AJS 11.09.2002  --> Incluir una opcion para ver solo los partes con la palabra CARTA en observaciones o los que no
                          la contengan
    }
    END.
  }
  RDLDATA
  {
  }
}
