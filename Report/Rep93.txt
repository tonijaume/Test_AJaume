OBJECT Report 93 Create Fiscal Year
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=NAVW16.00.01;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Create Fiscal Year;
               ESP=Crear ejercicio];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  AccountingPeriod."Starting Date" := FiscalYearStartDate;
                  AccountingPeriod.TESTFIELD("Starting Date");

                  IF AccountingPeriod.FIND('-') THEN BEGIN
                    FirstPeriodStartDate := AccountingPeriod."Starting Date";
                    FirstPeriodLocked := AccountingPeriod."Date Locked";
                    IF (FiscalYearStartDate < FirstPeriodStartDate) AND FirstPeriodLocked THEN
                      IF NOT
                         CONFIRM(
                           Text000 +
                           Text001)
                      THEN
                        EXIT;
                    IF AccountingPeriod.FIND('+') THEN
                      LastPeriodStartDate := AccountingPeriod."Starting Date";
                  END ELSE
                    IF NOT
                       CONFIRM(
                         Text002 +
                         Text003)
                    THEN
                      EXIT;

                  FiscalYearStartDate2 := FiscalYearStartDate;

                  FOR i := 1 TO NoOfPeriods + 1 DO BEGIN
                    IF (FiscalYearStartDate <= FirstPeriodStartDate) AND (i = NoOfPeriods + 1) THEN
                      EXIT;

                    IF (FirstPeriodStartDate <> 0D) THEN
                      IF (FiscalYearStartDate >= FirstPeriodStartDate) AND (FiscalYearStartDate < LastPeriodStartDate) THEN
                        ERROR(Text004);
                    AccountingPeriod.INIT;
                    AccountingPeriod."Starting Date" := FiscalYearStartDate;
                    AccountingPeriod.VALIDATE("Starting Date");
                    IF (i = 1) OR (i = NoOfPeriods + 1) THEN BEGIN
                      AccountingPeriod."New Fiscal Year" := TRUE;
                      InvtSetup.GET;
                      AccountingPeriod."Average Cost Calc. Type" := InvtSetup."Average Cost Calc. Type";
                      AccountingPeriod."Average Cost Period" := InvtSetup."Average Cost Period";
                    END;
                    IF (FirstPeriodStartDate = 0D) AND (i = 1) THEN
                      AccountingPeriod."Date Locked" := TRUE;
                    IF (AccountingPeriod."Starting Date" < FirstPeriodStartDate) AND FirstPeriodLocked THEN BEGIN
                      AccountingPeriod.Closed := TRUE;
                      AccountingPeriod."Date Locked" := TRUE;
                    END;
                    IF NOT AccountingPeriod.FIND('=') THEN
                      AccountingPeriod.INSERT;
                    FiscalYearStartDate := CALCDATE(PeriodLength,FiscalYearStartDate);
                  END;

                  AccountingPeriod.GET(FiscalYearStartDate2);
                  AccountingPeriod.UpdateAvgItems(0);
                END;

  }
  DATAITEMS
  {
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=6160;
      Height=1540;
      SaveValues=Yes;
      OnOpenForm=BEGIN
                   IF NoOfPeriods = 0 THEN BEGIN
                     NoOfPeriods := 12;
                     EVALUATE(PeriodLength,'<1M>');
                   END;
                   IF AccountingPeriod.FIND('+') THEN
                     FiscalYearStartDate := AccountingPeriod."Starting Date";
                 END;

    }
    CONTROLS
    {
      { 1   ;TextBox      ;3410 ;0    ;1650 ;440  ;CaptionML=[ENU=Starting Date;
                                                              ESP=Fecha inicial];
                                                   SourceExpr=FiscalYearStartDate }
      { 21  ;Label        ;0    ;0    ;3300 ;440  ;ParentControl=1 }
      { 2   ;TextBox      ;3410 ;550  ;1650 ;440  ;CaptionML=[ENU=No. of Periods;
                                                              ESP=N§ de periodos];
                                                   SourceExpr=NoOfPeriods }
      { 22  ;Label        ;0    ;550  ;3300 ;440  ;ParentControl=2 }
      { 3   ;TextBox      ;3410 ;1100 ;2750 ;440  ;CaptionML=[ENU=Period Length;
                                                              ESP=Longitud periodo];
                                                   SourceExpr=PeriodLength }
      { 23  ;Label        ;0    ;1100 ;3300 ;440  ;ParentControl=3 }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   IF NoOfPeriods = 0 THEN BEGIN
                     NoOfPeriods := 12;
                     EVALUATE(PeriodLength,'<1M>');
                   END;
                   IF AccountingPeriod.FIND('+') THEN
                     FiscalYearStartDate := AccountingPeriod."Starting Date";
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             ESP=Opciones] }

      { 1   ;2   ;Field     ;
                  CaptionML=[ENU=Starting Date;
                             ESP=Fecha inicial];
                  SourceExpr=FiscalYearStartDate }

      { 2   ;2   ;Field     ;
                  CaptionML=[ENU=No. of Periods;
                             ESP=N§ de periodos];
                  SourceExpr=NoOfPeriods }

      { 3   ;2   ;Field     ;
                  CaptionML=[ENU=Period Length;
                             ESP=Longitud periodo];
                  SourceExpr=PeriodLength }

    }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=The new fiscal year begins before an existing fiscal year, so the new year will be closed automatically.\\;ESP=El nuevo ejercicio comienza antes de un ejercicio ya existente, por tanto el nuevo ejercicio se cerrar  autom ticamente.\\';
      Text001@1001 : TextConst 'ENU=Do you want to create and close the fiscal year?;ESP=¨Confirma que desea crear y cerrar el ejercicio?';
      Text002@1002 : TextConst 'ENU=Once you create the new fiscal year you cannot change its starting date.\\;ESP=Una vez creado un ejercicio no se puede cambiar su fecha inicial.\\';
      Text003@1003 : TextConst 'ENU=Do you want to create the fiscal year?;ESP=¨Confirma que desea crear el ejercicio?';
      Text004@1004 : TextConst 'ENU=It is only possible to create new fiscal years before or after the existing ones.;ESP=S¢lo se pueden crear ejercicios antes o despu‚s de los ejercicios existentes.';
      AccountingPeriod@1005 : Record 50;
      InvtSetup@1013 : Record 313;
      NoOfPeriods@1006 : Integer;
      PeriodLength@1007 : DateFormula;
      FiscalYearStartDate@1008 : Date;
      FiscalYearStartDate2@1015 : Date;
      FirstPeriodStartDate@1009 : Date;
      LastPeriodStartDate@1010 : Date;
      FirstPeriodLocked@1011 : Boolean;
      i@1012 : Integer;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}
