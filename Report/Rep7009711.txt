OBJECT Report 7009711 Prefactura Hotel
{
  OBJECT-PROPERTIES
  {
    Date=09/12/12;
    Time=23:13:53;
    Modified=Yes;
    Version List=AIC2009;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Pro-forma invoice Hotel;
               ESP=Prefactura hotel];
    OnInitReport=BEGIN
                   IF NOT rEmpresa.FIND('-') THEN
                     ERROR(Text000);
                   IF NOT rDelegacion.FIND('-') THEN
                     ERROR(Text001);
                 END;

  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table7010013;
        DataItemTableView=SORTING(Delegacion,N§ Prefactura,TourOperador,Hotel,Fecha llegada)
                          WHERE(N§ Prefactura=FILTER(<>''));
        DataItemVarName=rBono;
        PrintOnlyIfDetail=Yes;
        OnPreDataItem=BEGIN
                        ok := FIND('-');
                        ok := rTTOO.GET(TourOperador);
                        GetClient(rBono); // $001
                      END;

        OnAfterGetRecord=BEGIN
                           ok := rReserva.GET(Delegacion, "N§ Reserva");
                         END;

        ReqFilterFields=N§ Prefactura;
        GroupTotalFields=N§ Prefactura,Hotel;
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Header;
            PrintOnEveryPage=Yes;
            SectionWidth=16350;
            SectionHeight=3384;
          }
          CONTROLS
          {
            { 53  ;TextBox      ;750  ;1269 ;3750 ;423  ;SourceExpr=rTTOO.Nombre }
            { 52  ;TextBox      ;750  ;1692 ;3750 ;423  ;SourceExpr=rTTOO.Direccion }
            { 54  ;TextBox      ;750  ;2115 ;3750 ;423  ;SourceExpr=rTTOO.Poblacion }
            { 55  ;TextBox      ;750  ;2538 ;3750 ;423  ;SourceExpr=rTTOO."CIF/NIF" }
            { 1   ;Shape        ;0    ;423  ;16350;423  ;ShapeStyle=HorzLine }
            { 2   ;Label        ;10200;0    ;6150 ;423  ;HorzAlign=Right;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=[ENU=Pro-forma invoice Hotel;
                                                                    ESP=Prefactura hotel] }
            { 3   ;TextBox      ;0    ;0    ;5400 ;423  ;FontSize=8;
                                                         FontBold=Yes;
                                                         SourceExpr=rEmpresa.Name }
            { 25  ;TextBox      ;12000;2115 ;3750 ;423  ;SourceExpr=rEmpresa.City }
            { 27  ;TextBox      ;12000;2538 ;3750 ;423  ;SourceExpr=rEmpresa."VAT Registration No." }
            { 28  ;TextBox      ;12000;1692 ;3750 ;423  ;SourceExpr=rEmpresa.Address }
            { 29  ;TextBox      ;12000;1269 ;3750 ;423  ;SourceExpr=rEmpresa.Name }
            { 1100217000;TextBox;5400 ;1269 ;5850 ;423  ;SourceExpr=rClient."No." }
            { 1100217001;TextBox;5400 ;1692 ;5850 ;423  ;SourceExpr=rClient.Name }
            { 1100217002;TextBox;5400 ;2115 ;5850 ;423  ;SourceExpr=rClient.Address }
            { 1100217003;TextBox;5400 ;2538 ;5850 ;423  ;SourceExpr=rClient."Currency Code" }
          }
           }
        { PROPERTIES
          {
            SectionType=Header;
            SectionWidth=16350;
            SectionHeight=1692;
          }
          CONTROLS
          {
            { 37  ;Label        ;14700;846  ;1500 ;846  ;HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=[ENU=Amount;
                                                                    ESP=Importe] }
            { 38  ;Label        ;12750;846  ;1800 ;846  ;VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=[ENU=concept;
                                                                    ESP=Concepto] }
            { 39  ;Label        ;11550;846  ;1050 ;846  ;VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=[ENU=Stay;
                                                                    ESP=Estancia] }
            { 40  ;Label        ;10650;846  ;750  ;846  ;VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=[ENU=Quant.;
                                                                    ESP=Cant] }
            { 41  ;Label        ;9600 ;846  ;900  ;846  ;VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=[ENU=Room;
                                                                    ESP=Hab.] }
            { 42  ;Label        ;8700 ;846  ;750  ;846  ;VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=[ENU=Reg.;
                                                                    ESP=Reg.] }
            { 43  ;Label        ;7350 ;846  ;1200 ;846  ;HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=[ENU=Check-out Date;
                                                                    ESP=Fecha salida] }
            { 44  ;Label        ;2850 ;846  ;4350 ;846  ;VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=[ENU=Name;
                                                                    ESP=Nombre] }
            { 45  ;TextBox      ;2550 ;0    ;1950 ;423  ;SourceExpr="N§ Prefactura" }
            { 48  ;Label        ;0    ;0    ;2400 ;423  ;ParentControl=45;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         LeaderDots=Yes;
                                                         CaptionML=[ENU=Pro-forma invoice No.;
                                                                    ESP=N§ Prefactura] }
            { 46  ;TextBox      ;2550 ;423  ;1200 ;423  ;SourceExpr=WORKDATE }
            { 49  ;Label        ;0    ;423  ;2400 ;423  ;ParentControl=46;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         LeaderDots=Yes;
                                                         CaptionML=[ENU=Date;
                                                                    ESP=Fecha] }
            { 47  ;Label        ;1350 ;846  ;1350 ;846  ;VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=[ENU=Voucher;
                                                                    ESP=Bono] }
            { 50  ;Label        ;0    ;846  ;1200 ;846  ;HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=[ENU=Check-in Date;
                                                                    ESP=Fecha entrada] }
          }
           }
        { PROPERTIES
          {
            SectionType=TransHeader;
            SectionWidth=16350;
            SectionHeight=423;
          }
          CONTROLS
          {
            { 58  ;Label        ;12150;0    ;2400 ;423  ;FontBold=Yes;
                                                         MultiLine=Yes;
                                                         LeaderDots=Yes;
                                                         CaptionML=[ENU=Previous sum;
                                                                    ESP=Suma anterior] }
            { 59  ;TextBox      ;14700;0    ;1500 ;423  ;SourceExpr=SumaAnterior }
          }
           }
        { PROPERTIES
          {
            SectionType=GroupHeader;
            SectionWidth=16350;
            SectionHeight=1269;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT(CurrReport.TOTALSCAUSEDBY = rBono.FIELDNO(Hotel));
                         END;

          }
          CONTROLS
          {
            { 57  ;Label        ;0    ;0    ;1200 ;846  ;HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=[ENU=Hotel;
                                                                    ESP=Hotel] }
            { 62  ;TextBox      ;1350 ;423  ;5850 ;423  ;VertAlign=Bottom;
                                                         SourceExpr=fNoms.nom_hotel(Hotel) }
          }
           }
        { PROPERTIES
          {
            SectionType=GroupFooter;
            SectionWidth=16350;
            SectionHeight=846;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT(CurrReport.TOTALSCAUSEDBY = rBono.FIELDNO("N§ Prefactura"));
                         END;

          }
          CONTROLS
          {
            { 36  ;TextBox      ;14700;0    ;1500 ;423  ;SourceExpr=SumaImporte }
            { 51  ;Label        ;12150;0    ;2400 ;423  ;FontBold=Yes;
                                                         MultiLine=Yes;
                                                         LeaderDots=Yes;
                                                         CaptionML=[ENU=Total;
                                                                    ESP=Total] }
          }
           }
        { PROPERTIES
          {
            SectionType=TransFooter;
            SectionWidth=16350;
            SectionHeight=846;
          }
          CONTROLS
          {
            { 56  ;Label        ;12150;0    ;2400 ;423  ;FontBold=Yes;
                                                         MultiLine=Yes;
                                                         LeaderDots=Yes;
                                                         CaptionML=[ENU=Sum and continue;
                                                                    ESP=Suma y sigue] }
            { 60  ;TextBox      ;14700;0    ;1500 ;423  ;SourceExpr=SumaAnterior }
          }
           }
        { PROPERTIES
          {
            SectionType=Footer;
            PrintOnEveryPage=Yes;
            PlaceInBottom=Yes;
            SectionWidth=16350;
            SectionHeight=846;
          }
          CONTROLS
          {
            { 4   ;TextBox      ;4800 ;423  ;7050 ;423  ;HorzAlign=Center;
                                                         SourceExpr=FORMAT(TODAY,0,4) + ' / ' + FORMAT(TIME,0,0) + ' / ' + USERID }
            { 5   ;Shape        ;0    ;0    ;16350;423  ;ShapeStyle=HorzLine }
            { 6   ;TextBox      ;13200;423  ;3150 ;423  ;HorzAlign=Right;
                                                         SourceExpr=Text002 + FORMAT(CurrReport.PAGENO) }
            { 7   ;TextBox      ;0    ;423  ;3600 ;423  ;SourceExpr=fNoms.nom_delegacion(rDelegacion.Delegacion) }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table7010019;
        DataItemTableView=SORTING(Delegacion,TourOperador,N§ Prefactura,Bono,N§ Secuencia,N§ Reserva,N§ Orden,Concepto);
        OnPreDataItem=VAR
                        rConcepto@1103355000 : Record 7010019;
                        rCIbono@1103355001 : Record 7010018;
                        reg_Primer@1103355002 : Boolean;
                        reg_Darrer@1103355003 : Boolean;
                      BEGIN
                        reg_Primer := FALSE;
                        reg_Darrer := FALSE;

                        rConcepto.RESET;
                        rConcepto.SETRANGE(Delegacion     , rBono.Delegacion);
                        rConcepto.SETRANGE(TourOperador   , rBono.TourOperador);
                        rConcepto.SETRANGE(Bono           , rBono.Bono);
                        rConcepto.SETRANGE("N§ Reserva"   , rBono."N§ Reserva");
                        rConcepto.SETRANGE("N§ Secuencia" , rBono."N§ Secuencia");
                        rConcepto.SETRANGE("Coste/Ingreso", rConcepto."Coste/Ingreso"::Ingreso);
                        rConcepto.SETRANGE("N§ Prefactura", rBono."N§ Prefactura");
                        IF rConcepto.FIND('+') THEN BEGIN
                          maxNOrden := rConcepto."N§ Orden";
                          IF rCIbono.GET(rConcepto.Delegacion,
                                         rConcepto.TourOperador,
                                         rConcepto.Bono,
                                         rConcepto."N§ Reserva",
                                         rConcepto."N§ Secuencia",
                                         rConcepto."N§ Orden") THEN
                            IF rCIbono.Regularizacion THEN
                              reg_Darrer := TRUE;
                        END;
                        IF rConcepto.FIND('-') THEN BEGIN
                          minNOrden := rConcepto."N§ Orden";
                          IF rCIbono.GET(rConcepto.Delegacion,
                                         rConcepto.TourOperador,
                                         rConcepto.Bono,
                                         rConcepto."N§ Reserva",
                                         rConcepto."N§ Secuencia",
                                         rConcepto."N§ Orden") THEN
                            IF rCIbono.Regularizacion THEN
                              reg_Primer := TRUE;
                        END;
                        IF NOT reg_Primer AND NOT reg_Darrer THEN
                          minNOrden := maxNOrden;
                        IF reg_Primer AND reg_Darrer THEN
                          maxNOrden := minNOrden;
                        IF NOT reg_Primer AND reg_Darrer THEN
                          maxNOrden := 0;
                      END;

        OnAfterGetRecord=BEGIN
                           SumaAnterior := SumaImporte;
                           SumaImporte  := SumaImporte + Importe;

                           IF (maxNOrden <> 0) THEN
                             IF ("N§ Orden" <> maxNOrden) AND ("N§ Orden" <> minNOrden) THEN
                                CurrReport.SKIP;
                         END;

        DataItemLink=Delegacion=FIELD(Delegacion),
                     TourOperador=FIELD(TourOperador),
                     N§ Prefactura=FIELD(N§ Prefactura),
                     Bono=FIELD(Bono),
                     N§ Secuencia=FIELD(N§ Secuencia),
                     N§ Reserva=FIELD(N§ Reserva);
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=16350;
            SectionHeight=423;
          }
          CONTROLS
          {
            { 8   ;TextBox      ;12750;0    ;1800 ;423  ;SourceExpr=Concepto }
            { 12  ;TextBox      ;14700;0    ;1500 ;423  ;SourceExpr=Importe }
            { 9   ;TextBox      ;0    ;0    ;1200 ;423  ;SourceExpr=rReserva."Fecha entrada" }
            { 16  ;TextBox      ;7350 ;0    ;1200 ;423  ;SourceExpr=rReserva."Fecha salida" }
            { 20  ;TextBox      ;8700 ;0    ;750  ;423  ;SourceExpr=rReserva.Regimen }
            { 22  ;TextBox      ;9600 ;0    ;900  ;423  ;SourceExpr=rReserva.Habitacion }
            { 24  ;TextBox      ;10650;0    ;750  ;423  ;SourceExpr=rReserva."N§ Habitaciones" }
            { 26  ;TextBox      ;11550;0    ;1050 ;423  ;SourceExpr=rReserva.Estancia }
            { 30  ;TextBox      ;1350 ;0    ;1350 ;423  ;SourceExpr=Bono }
            { 31  ;TextBox      ;2850 ;0    ;4350 ;423  ;SourceExpr=rReserva.Nombre }
          }
           }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=9020;
      Height=3410;
      CaptionML=[ENU=Pro-forma invoice Hotel;
                 ESP=Prefactura hotel];
    }
    CONTROLS
    {
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      Text000@1103355012 : TextConst 'ENU=There is any company;ESP=No hay ninguna empresa';
      Text001@1103355013 : TextConst 'ENU=Agency parameters do not exist;ESP=No existen par metros de agencia';
      Text002@1103355014 : TextConst 'ENU=page;ESP=P gina';
      rEmpresa@1103355000 : Record 79;
      rDelegacion@1103355001 : Record 7009700;
      rClient@1100217000 : Record 18;
      fNoms@1103355002 : Codeunit 7009702;
      rTTOO@1103355003 : Record 7009717;
      ok@1103355004 : Boolean;
      rReserva@1103355005 : Record 7009743;
      SumaImporte@1103355006 : Decimal;
      sw_pag@1103355007 : Boolean;
      dImporte@1103355008 : Decimal;
      SumaAnterior@1103355009 : Decimal;
      maxNOrden@1103355010 : Integer;
      minNOrden@1103355011 : Integer;

    PROCEDURE GetClient@1100217000(prBono@1100217000 : Record 7010013);
    VAR
      lrContVta@1100217002 : Record 7009727;
    BEGIN
      // GetClient
      // $001
      // Devuelve el cliente que corresponde al contrato del Bono

      CLEAR(rClient);

      // Para ello debemos encontrar el contrato de venta

      CLEAR(lrContVta);
      lrContVta.SETCURRENTKEY(TourOperador);
      lrContVta.SETRANGE (TourOperador           , prBono.TourOperador);
      lrContVta.SETRANGE (Hotel                  , prBono.Hotel);
      lrContVta.SETFILTER("Fecha inicio contrato", '<=%1', prBono."Fecha llegada");
      lrContVta.SETFILTER("Fecha final contrato" , '>=%1', prBono."Fecha llegada");
      lrContVta.SETRANGE(Confirmado              , TRUE);
      IF lrContVta.FINDFIRST THEN BEGIN
        IF NOT rClient.GET(lrContVta.Cliente) THEN
          CLEAR(rClient);
      END;
    END;

    BEGIN
    {
      $001 JPT 07/11/12 Mostrar los datos del cliente del contrato GOC-LP-12026
    }
    END.
  }
  RDLDATA
  {
  }
}
