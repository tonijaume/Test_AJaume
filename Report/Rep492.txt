OBJECT Report 492 Copy Purchase Document
{
  OBJECT-PROPERTIES
  {
    Date=02/10/12;
    Time=12:00:00;
    Modified=Yes;
    Version List=AIC2009,NAVW16.00.01;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Copy Purchase Document;
               ESP=Copiar doc. compra];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  PurchSetup.GET;
                  CopyDocMgt.SetProperties(
                    IncludeHeader,RecalculateLines,FALSE,FALSE,FALSE,PurchSetup."Exact Cost Reversing Mandatory",FALSE);
                  CopyDocMgt.CopyPurchDoc(DocType,DocNo,PurchHeader)
                END;

  }
  DATAITEMS
  {
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=8910;
      Height=3300;
      SaveValues=Yes;
      OnOpenForm=BEGIN
                   IF DocNo <> '' THEN BEGIN
                     CASE DocType OF
                       DocType::Quote:
                         IF FromPurchHeader.GET(FromPurchHeader."Document Type"::Quote,DocNo) THEN;
                       DocType::"Blanket Order":
                         IF FromPurchHeader.GET(FromPurchHeader."Document Type"::"Blanket Order",DocNo) THEN;
                       DocType::Order:
                         IF FromPurchHeader.GET(FromPurchHeader."Document Type"::Order,DocNo) THEN;
                       DocType::Invoice:
                         IF FromPurchHeader.GET(FromPurchHeader."Document Type"::Invoice,DocNo) THEN;
                       DocType::"Return Order":
                         IF FromPurchHeader.GET(FromPurchHeader."Document Type"::"Return Order",DocNo) THEN;
                       DocType::"Credit Memo":
                         IF FromPurchHeader.GET(FromPurchHeader."Document Type"::"Credit Memo",DocNo) THEN;
                       DocType::"Posted Receipt":
                         IF FromPurchRcptHeader.GET(DocNo) THEN
                           FromPurchHeader.TRANSFERFIELDS(FromPurchRcptHeader);
                       DocType::"Posted Invoice":
                         IF FromPurchInvHeader.GET(DocNo) THEN
                           FromPurchHeader.TRANSFERFIELDS(FromPurchInvHeader);
                       DocType::"Posted Return Shipment":
                         IF FromReturnShptHeader.GET(DocNo) THEN
                           FromPurchHeader.TRANSFERFIELDS(FromReturnShptHeader);
                       DocType::"Posted Credit Memo":
                         IF FromPurchCrMemoHeader.GET(DocNo) THEN
                           FromPurchHeader.TRANSFERFIELDS(FromPurchCrMemoHeader);
                     END;
                     IF FromPurchHeader."No." = '' THEN
                       DocNo := '';
                   END;
                   ValidateDocNo;
                 END;

    }
    CONTROLS
    {
      { 3   ;TextBox      ;3410 ;0    ;2750 ;440  ;CaptionML=[ENU=Document Type;
                                                              ESP=Tipo documento];
                                                   OptionCaptionML=[ENU=Quote,Blanket Order,Order,Invoice,Return Order,Credit Memo,Posted Receipt,Posted Invoice,Posted Return Shipment,Posted Credit Memo;
                                                                    ESP=Oferta,Pedido abierto,Pedido,Factura,Devoluci¢n,Abono,Albar n compra regis.,Factura regis.,Env¡o dev. regis.,Abono regis.];
                                                   SourceExpr=DocType;
                                                   OnValidate=BEGIN
                                                                DocNo := '';
                                                                ValidateDocNo;
                                                              END;
                                                               }
      { 23  ;Label        ;0    ;0    ;3300 ;440  ;ParentControl=3 }
      { 8   ;TextBox      ;3410 ;550  ;2750 ;440  ;CaptionML=[ENU=Document No.;
                                                              ESP=N§ documento];
                                                   SourceExpr=DocNo;
                                                   OnValidate=BEGIN
                                                                ValidateDocNo;
                                                              END;

                                                   OnLookup=BEGIN
                                                              LookupDocNo;
                                                            END;
                                                             }
      { 9   ;Label        ;0    ;550  ;3300 ;440  ;ParentControl=8 }
      { 1   ;CheckBox     ;3410 ;2310 ;440  ;440  ;ShowCaption=No;
                                                   CaptionML=[ENU=Include Header;
                                                              ESP=Incluir cabecera];
                                                   SourceExpr=IncludeHeader;
                                                   OnValidate=BEGIN
                                                                ValidateIncludeHeader;
                                                              END;
                                                               }
      { 2   ;Label        ;0    ;2310 ;3300 ;440  ;ParentControl=1 }
      { 5   ;TextBox      ;3410 ;1100 ;2750 ;440  ;Editable=No;
                                                   HorzAlign=Left;
                                                   CaptionML=[ENU=Buy-from Vendor No.;
                                                              ESP=Compra a-N§ proveedor];
                                                   SourceExpr=FromPurchHeader."Buy-from Vendor No." }
      { 6   ;Label        ;0    ;1100 ;3300 ;440  ;ParentControl=5 }
      { 7   ;TextBox      ;3410 ;1650 ;5500 ;440  ;Editable=No;
                                                   CaptionML=[ENU=Buy-from Vendor Name;
                                                              ESP=Compra a-Nombre];
                                                   SourceExpr=FromPurchHeader."Buy-from Vendor Name" }
      { 10  ;Label        ;0    ;1650 ;3300 ;440  ;ParentControl=7 }
      { 4   ;CheckBox     ;3410 ;2860 ;440  ;440  ;ShowCaption=No;
                                                   CaptionML=[ENU=Recalculate Lines;
                                                              ESP=Recalcular l¡neas];
                                                   SourceExpr=RecalculateLines;
                                                   OnValidate=BEGIN
                                                                IF (DocType = DocType::"Posted Receipt") OR (DocType = DocType::"Posted Return Shipment") THEN
                                                                  RecalculateLines := TRUE;
                                                              END;
                                                               }
      { 11  ;Label        ;0    ;2860 ;3300 ;440  ;ParentControl=4 }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   IF DocNo <> '' THEN BEGIN
                     CASE DocType OF
                       DocType::Quote:
                         IF FromPurchHeader.GET(FromPurchHeader."Document Type"::Quote,DocNo) THEN;
                       DocType::"Blanket Order":
                         IF FromPurchHeader.GET(FromPurchHeader."Document Type"::"Blanket Order",DocNo) THEN;
                       DocType::Order:
                         IF FromPurchHeader.GET(FromPurchHeader."Document Type"::Order,DocNo) THEN;
                       DocType::Invoice:
                         IF FromPurchHeader.GET(FromPurchHeader."Document Type"::Invoice,DocNo) THEN;
                       DocType::"Return Order":
                         IF FromPurchHeader.GET(FromPurchHeader."Document Type"::"Return Order",DocNo) THEN;
                       DocType::"Credit Memo":
                         IF FromPurchHeader.GET(FromPurchHeader."Document Type"::"Credit Memo",DocNo) THEN;
                       DocType::"Posted Receipt":
                         IF FromPurchRcptHeader.GET(DocNo) THEN
                           FromPurchHeader.TRANSFERFIELDS(FromPurchRcptHeader);
                       DocType::"Posted Invoice":
                         IF FromPurchInvHeader.GET(DocNo) THEN
                           FromPurchHeader.TRANSFERFIELDS(FromPurchInvHeader);
                       DocType::"Posted Return Shipment":
                         IF FromReturnShptHeader.GET(DocNo) THEN
                           FromPurchHeader.TRANSFERFIELDS(FromReturnShptHeader);
                       DocType::"Posted Credit Memo":
                         IF FromPurchCrMemoHeader.GET(DocNo) THEN
                           FromPurchHeader.TRANSFERFIELDS(FromPurchCrMemoHeader);
                     END;
                     IF FromPurchHeader."No." = '' THEN
                       DocNo := '';
                   END;
                   ValidateDocNo;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             ESP=Opciones] }

      { 3   ;2   ;Field     ;
                  CaptionML=[ENU=Document Type;
                             ESP=Tipo documento];
                  OptionCaptionML=[ENU=Quote,Blanket Order,Order,Invoice,Return Order,Credit Memo,Posted Receipt,Posted Invoice,Posted Return Shipment,Posted Credit Memo;
                                   ESP=Oferta,Pedido abierto,Pedido,Factura,Devoluci¢n,Abono,Albar n compra regis.,Factura regis.,Env¡o dev. regis.,Abono regis.];
                  SourceExpr=DocType;
                  OnValidate=BEGIN
                               DocNo := '';
                               ValidateDocNo;
                             END;
                              }

      { 8   ;2   ;Field     ;
                  CaptionML=[ENU=Document No.;
                             ESP=N§ documento];
                  SourceExpr=DocNo;
                  OnValidate=BEGIN
                               ValidateDocNo;
                             END;

                  OnLookup=BEGIN
                             LookupDocNo;
                           END;
                            }

      { 5   ;2   ;Field     ;
                  CaptionML=[ENU=Buy-from Vendor No.;
                             ESP=Compra a-N§ proveedor];
                  SourceExpr=FromPurchHeader."Buy-from Vendor No.";
                  Editable=FALSE }

      { 7   ;2   ;Field     ;
                  CaptionML=[ENU=Buy-from Vendor Name;
                             ESP=Compra a-Nombre];
                  SourceExpr=FromPurchHeader."Buy-from Vendor Name";
                  Editable=FALSE }

      { 1   ;2   ;Field     ;
                  CaptionML=[ENU=Include Header;
                             ESP=Incluir cabecera];
                  SourceExpr=IncludeHeader;
                  OnValidate=BEGIN
                               ValidateIncludeHeader;
                             END;
                              }

      { 4   ;2   ;Field     ;
                  CaptionML=[ENU=Recalculate Lines;
                             ESP=Recalcular l¡neas];
                  SourceExpr=RecalculateLines;
                  OnValidate=BEGIN
                               IF (DocType = DocType::"Posted Receipt") OR (DocType = DocType::"Posted Return Shipment") THEN
                                 RecalculateLines := TRUE;
                             END;
                              }

    }
  }
  CODE
  {
    VAR
      PurchHeader@1007 : Record 38;
      FromPurchHeader@1010 : Record 38;
      FromPurchRcptHeader@1012 : Record 120;
      FromPurchInvHeader@1014 : Record 122;
      FromReturnShptHeader@1008 : Record 6650;
      FromPurchCrMemoHeader@1016 : Record 124;
      PurchSetup@1003 : Record 312;
      CopyDocMgt@1033 : Codeunit 6620;
      DocType@1024 : 'Quote,Blanket Order,Order,Invoice,Return Order,Credit Memo,Posted Receipt,Posted Invoice,Posted Return Shipment,Posted Credit Memo';
      DocNo@1025 : Code[20];
      IncludeHeader@1026 : Boolean;
      RecalculateLines@1027 : Boolean;
      Text000@1002 : TextConst 'ENU=The price information may not be reversed correctly, if you copy a %1. If possible copy a %2 instead or use %3 functionality.;ESP=Es posible que la informaci¢n sobre el precio no se revierta correctamente si copia un documento de %1. Si es posible, copie un documento de %2 en su lugar o utilice la funcionalidad %3.';
      Text001@1001 : TextConst 'ENU=Undo Receipt;ESP=Deshacer recepci¢n';
      Text002@1000 : TextConst 'ENU=Undo Return Shipment;ESP=Deshacer env¡o devoluc.';
      Text003@1004 : TextConst 'ENU=Quote,Blanket Order,Order,Invoice,Return Order,Credit Memo,Posted Receipt,Posted Invoice,Posted Return Shipment,Posted Credit Memo;ESP=Oferta,Pedido abierto,Pedido,Factura,Devoluci¢n,Abono,Albar n compra regis.,Factura regis.,Env¡o dev. regis.,Abono regis.';
      AnulacionDocumento@1103355000 : Boolean;

    PROCEDURE SetPurchHeader@2(VAR NewPurchHeader@1000 : Record 38);
    BEGIN
      NewPurchHeader.TESTFIELD("No.");
      PurchHeader := NewPurchHeader;
    END;

    LOCAL PROCEDURE ValidateDocNo@1();
    VAR
      DocType2@1000 : 'Quote,Blanket Order,Order,Invoice,Return Order,Credit Memo,Posted Receipt,Posted Invoice,Posted Return Shipment,Posted Credit Memo';
    BEGIN
      IF DocNo = '' THEN
        FromPurchHeader.INIT
      ELSE
        IF DocNo <> FromPurchHeader."No." THEN BEGIN
          FromPurchHeader.INIT;
          CASE DocType OF
            DocType::Quote,
            DocType::"Blanket Order",
            DocType::Order,
            DocType::Invoice,
            DocType::"Return Order",
            DocType::"Credit Memo":
              FromPurchHeader.GET(CopyDocMgt.PurchHeaderDocType(DocType),DocNo);
            DocType::"Posted Receipt":
              BEGIN
                FromPurchRcptHeader.GET(DocNo);
                FromPurchHeader.TRANSFERFIELDS(FromPurchRcptHeader);
                IF PurchHeader."Document Type" IN
                   [PurchHeader."Document Type"::"Return Order",PurchHeader."Document Type"::"Credit Memo"]
                THEN BEGIN
                  DocType2 := DocType2::"Posted Invoice";
                  MESSAGE(Text000,SELECTSTR(1 + DocType,Text003),SELECTSTR(1 + DocType2,Text003),Text001);
                END;
              END;
            DocType::"Posted Invoice":
              BEGIN
                FromPurchInvHeader.GET(DocNo);
                FromPurchHeader.TRANSFERFIELDS(FromPurchInvHeader);
              END;
            DocType::"Posted Return Shipment":
              BEGIN
                FromReturnShptHeader.GET(DocNo);
                FromPurchHeader.TRANSFERFIELDS(FromReturnShptHeader);
                IF PurchHeader."Document Type" IN
                   [PurchHeader."Document Type"::Order,PurchHeader."Document Type"::Invoice]
                THEN BEGIN
                  DocType2 := DocType2::"Posted Credit Memo";
                  MESSAGE(Text000,SELECTSTR(1 + DocType,Text003),SELECTSTR(1 + DocType2,Text003),Text002);
                END;
              END;
            DocType::"Posted Credit Memo":
              BEGIN
                FromPurchCrMemoHeader.GET(DocNo);
                FromPurchHeader.TRANSFERFIELDS(FromPurchCrMemoHeader);
              END;
          END;
        END;
      FromPurchHeader."No." := '';

      IncludeHeader :=
        (DocType IN [DocType::"Posted Invoice",DocType::"Posted Credit Memo"]) AND
        ((DocType = DocType::"Posted Credit Memo") <>
         (PurchHeader."Document Type" = PurchHeader."Document Type"::"Credit Memo")) AND
        (PurchHeader."Buy-from Vendor No." IN [FromPurchHeader."Buy-from Vendor No.",'']);
      ValidateIncludeHeader;
    END;

    LOCAL PROCEDURE LookupDocNo@3();
    BEGIN
      CASE DocType OF
        DocType::Quote,
        DocType::"Blanket Order",
        DocType::Order,
        DocType::Invoice,
        DocType::"Return Order",
        DocType::"Credit Memo":
          BEGIN
            FromPurchHeader.FILTERGROUP := 0;
            FromPurchHeader.SETRANGE("Document Type",CopyDocMgt.PurchHeaderDocType(DocType));
            IF PurchHeader."Document Type" = CopyDocMgt.PurchHeaderDocType(DocType) THEN
              FromPurchHeader.SETFILTER("No.",'<>%1',PurchHeader."No.");
            FromPurchHeader.FILTERGROUP := 2;
            FromPurchHeader."Document Type" := CopyDocMgt.PurchHeaderDocType(DocType);
            FromPurchHeader."No." := DocNo;
            IF (DocNo = '') AND (PurchHeader."Buy-from Vendor No." <> '') THEN
              IF FromPurchHeader.SETCURRENTKEY("Document Type","Buy-from Vendor No.") THEN BEGIN
                FromPurchHeader."Buy-from Vendor No." := PurchHeader."Buy-from Vendor No.";
                IF FromPurchHeader.FIND('=><') THEN;
              END;
            IF FORM.RUNMODAL(0,FromPurchHeader) = ACTION::LookupOK THEN
              DocNo := FromPurchHeader."No.";
          END;
        DocType::"Posted Receipt":
          BEGIN
            FromPurchRcptHeader."No." := DocNo;
            IF (DocNo = '') AND (PurchHeader."Buy-from Vendor No." <> '') THEN
              IF FromPurchRcptHeader.SETCURRENTKEY("Buy-from Vendor No.") THEN BEGIN
                FromPurchRcptHeader."Buy-from Vendor No." := PurchHeader."Buy-from Vendor No.";
                IF FromPurchRcptHeader.FIND('=><') THEN;
              END;
            IF FORM.RUNMODAL(0,FromPurchRcptHeader) = ACTION::LookupOK THEN
              DocNo := FromPurchRcptHeader."No.";
          END;
        DocType::"Posted Invoice":
          BEGIN
            FromPurchInvHeader."No." := DocNo;
            IF (DocNo = '') AND (PurchHeader."Buy-from Vendor No." <> '') THEN
              IF FromPurchInvHeader.SETCURRENTKEY("Buy-from Vendor No.") THEN BEGIN
                FromPurchInvHeader."Buy-from Vendor No." := PurchHeader."Buy-from Vendor No.";
                IF FromPurchInvHeader.FIND('=><') THEN;
              END;
            IF FORM.RUNMODAL(0,FromPurchInvHeader) = ACTION::LookupOK THEN
              DocNo := FromPurchInvHeader."No.";
          END;
        DocType::"Posted Return Shipment":
          BEGIN
            FromReturnShptHeader."No." := DocNo;
            IF (DocNo = '') AND (PurchHeader."Buy-from Vendor No." <> '') THEN
              IF FromReturnShptHeader.SETCURRENTKEY("Buy-from Vendor No.") THEN BEGIN
                FromReturnShptHeader."Buy-from Vendor No." := PurchHeader."Buy-from Vendor No.";
                IF FromReturnShptHeader.FIND('=><') THEN;
              END;
            IF FORM.RUNMODAL(0,FromReturnShptHeader) = ACTION::LookupOK THEN
              DocNo := FromReturnShptHeader."No.";
          END;
        DocType::"Posted Credit Memo":
          BEGIN
            FromPurchCrMemoHeader."No." := DocNo;
            IF (DocNo = '') AND (PurchHeader."Buy-from Vendor No." <> '') THEN
              IF FromPurchCrMemoHeader.SETCURRENTKEY("Buy-from Vendor No.") THEN BEGIN
                FromPurchCrMemoHeader."Buy-from Vendor No." := PurchHeader."Buy-from Vendor No.";
                IF FromPurchCrMemoHeader.FIND('=><') THEN;
              END;
            IF FORM.RUNMODAL(0,FromPurchCrMemoHeader) = ACTION::LookupOK THEN
              DocNo := FromPurchCrMemoHeader."No.";
          END;
      END;
      ValidateDocNo;
    END;

    LOCAL PROCEDURE ValidateIncludeHeader@4();
    BEGIN
      RecalculateLines :=
        (DocType IN [DocType::"Posted Receipt",DocType::"Posted Return Shipment"]) OR NOT IncludeHeader;
    END;

    PROCEDURE InitializeRequest@5(NewDocType@1001 : Option;NewDocNo@1000 : Code[20];NewIncludeHeader@1002 : Boolean;NewRecalcLines@1003 : Boolean);
    BEGIN
      DocType := NewDocType;
      DocNo := NewDocNo;
      IncludeHeader := NewIncludeHeader;
      RecalculateLines := NewRecalcLines;
    END;

    PROCEDURE DefOpciones@1100000(TipoDocumento@1100004 : Integer;NumeroDoc@1100003 : Code[20];IncluirCabecera@1100002 : Boolean;RecalcularLineas@1100001 : Boolean;AnulaDoc@1100000 : Boolean);
    BEGIN
      DocType := TipoDocumento;
      DocNo := '';
      ValidateDocNo;
      DocNo := NumeroDoc;
      AnulacionDocumento := AnulaDoc;
      ValidateDocNo;
      IncludeHeader := IncluirCabecera;
      ValidateIncludeHeader;
      RecalculateLines := RecalcularLineas;
      IF DocType = DocType::"Posted Receipt" THEN
        RecalculateLines := TRUE;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}
