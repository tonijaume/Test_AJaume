OBJECT Report 1192 Suggest Res. Price Chg.(Price)
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=NAVW16.00.01;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Suggest Res. Price Chg.(Price);
               ESP=Prop. mod. recursos (precio)];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  RoundingMethod.SETRANGE(Code,RoundingMethod.Code);
                  IF ToCurrency.Code <> Text000 THEN
                    IF ToCurrency.Code <> '' THEN
                      ToCurrency.FIND;
                END;

  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table201;
        DataItemTableView=SORTING(Job No.,Type,Code,Work Type Code,Currency Code);
        OnPreDataItem=BEGIN
                        Window.OPEN(
                          Text001 +
                          Text002 +
                          Text003);
                      END;

        OnAfterGetRecord=BEGIN
                           Window.UPDATE(1,Type);
                           Window.UPDATE(2,Code);
                           ResPriceChg.Type := Type;
                           ResPriceChg.Code := Code;


                           IF ToCurrency.Code = Text000 THEN
                             ResPriceChg."Currency Code" := "Currency Code"
                           ELSE BEGIN
                             ResPriceChg."Currency Code" := ToCurrency.Code;
                             IF ToCurrency.Code = '' THEN
                               SETRANGE("Currency Code",'')
                           END;

                           IF ToWorkType.Code = Text000 THEN
                             ResPriceChg."Work Type Code" := "Work Type Code"
                           ELSE
                             ResPriceChg."Work Type Code" := ToWorkType.Code;
                           IF ToJob."No." = Text000 THEN
                             ResPriceChg."Job No." := "Job No."
                           ELSE
                             ResPriceChg."Job No." := ToJob."No.";

                           ResPriceChg."New Unit Price" := "Unit Price";

                           IF ResPriceChg."Currency Code" <> "Currency Code" THEN BEGIN
                             IF "Currency Code" <> '' THEN
                               ResPriceChg."New Unit Price" :=
                                 CurrExchRate.ExchangeAmtFCYToLCY(
                                   WORKDATE,"Currency Code",ResPriceChg."New Unit Price",
                                   CurrExchRate.ExchangeRate(
                                     WORKDATE,"Currency Code"));
                             IF ResPriceChg."Currency Code" <> '' THEN
                               ResPriceChg."New Unit Price" :=
                                 CurrExchRate.ExchangeAmtLCYToFCY(
                                   WORKDATE,ResPriceChg."Currency Code",
                                   ResPriceChg."New Unit Price",
                                   CurrExchRate.ExchangeRate(
                                     WORKDATE,ResPriceChg."Currency Code"));
                           END;

                           IF ResPriceChg."Currency Code" = '' THEN
                             Currency2.InitRoundingPrecision
                           ELSE BEGIN
                             Currency2.GET(ResPriceChg."Currency Code");
                             Currency2.TESTFIELD("Unit-Amount Rounding Precision");
                           END;
                           ResPriceChg."New Unit Price" :=
                             ROUND(ResPriceChg."New Unit Price", Currency2."Unit-Amount Rounding Precision");

                           IF ResPriceChg."New Unit Price" > PriceLowerLimit THEN
                             ResPriceChg."New Unit Price" := ResPriceChg."New Unit Price" * UnitPricefactor;

                           IF RoundingMethod.Code <> '' THEN BEGIN
                             RoundingMethod."Minimum Amount" := ResPriceChg."New Unit Price";
                             IF RoundingMethod.FIND('=<') THEN BEGIN
                               ResPriceChg."New Unit Price" := ResPriceChg."New Unit Price" + RoundingMethod."Amount Added Before";
                               IF RoundingMethod.Precision > 0 THEN
                                 ResPriceChg."New Unit Price" :=
                                   ROUND(ResPriceChg."New Unit Price",
                                   RoundingMethod.Precision,COPYSTR('=><',RoundingMethod.Type + 1,1));
                               ResPriceChg."New Unit Price" := ResPriceChg."New Unit Price" + RoundingMethod."Amount Added After";
                             END;
                           END;

                           ResPrice.SETRANGE("Job No.", ResPriceChg."Job No.");
                           ResPrice.SETRANGE("Work Type Code", ResPriceChg."Work Type Code");
                           ResPrice.SETRANGE(Code, ResPriceChg.Code);
                           ResPrice.SETRANGE(Type, ResPriceChg.Type);
                           ResPrice.SETRANGE("Currency Code", ResPriceChg."Currency Code");
                           IF ResPrice.FIND('+') THEN BEGIN
                             ResPriceChg."Current Unit Price" := ResPrice."Unit Price";
                             PriceAlreadyExists := TRUE;
                           END ELSE BEGIN
                             ResPriceChg."Current Unit Price" := 0;
                             PriceAlreadyExists := FALSE;
                           END;
                           IF PriceAlreadyExists OR CreateNewPrices THEN BEGIN
                             ResPriceChg2 := ResPriceChg;
                             IF ResPriceChg2.FIND('=') THEN
                               ResPriceChg.MODIFY
                             ELSE
                               ResPriceChg.INSERT;
                           END;
                         END;

        ReqFilterFields=Job No.,Type,Code,Work Type Code,Currency Code;
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=12000;
            SectionHeight=846;
          }
          CONTROLS
          {
          }
           }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=12540;
      Height=2090;
      SaveValues=Yes;
      OnOpenForm=BEGIN
                   IF UnitPricefactor = 0 THEN BEGIN
                     UnitPricefactor := 1;
                     CreateNewPrices := TRUE;
                     ToCurrency.Code := Text004;
                     ToJob."No." := Text004;
                     ToWorkType.Code := Text004;
                   END;
                 END;

    }
    CONTROLS
    {
      { 1   ;CheckBox     ;9790 ;1650 ;440  ;440  ;ShowCaption=No;
                                                   CaptionML=[ENU=Create New Prices;
                                                              ESP=Crear tarifa nueva];
                                                   SourceExpr=CreateNewPrices }
      { 2   ;Label        ;6380 ;1650 ;3300 ;440  ;ParentControl=1 }
      { 7   ;TextBox      ;3410 ;550  ;1650 ;440  ;ValidateTableRelation=No;
                                                   CaptionML=[ENU=Currency Code;
                                                              ESP=C¢d. divisa];
                                                   SourceExpr=ToCurrency.Code;
                                                   TableRelation=Currency }
      { 8   ;Label        ;220  ;550  ;3080 ;440  ;ParentControl=7 }
      { 9   ;TextBox      ;9790 ;1100 ;2750 ;440  ;CaptionML=[ENU=Rounding Method;
                                                              ESP=M‚todo redondeo];
                                                   SourceExpr=RoundingMethod.Code;
                                                   TableRelation="Rounding Method" }
      { 10  ;Label        ;6380 ;1100 ;3300 ;440  ;ParentControl=9 }
      { 13  ;TextBox      ;9790 ;550  ;2750 ;440  ;CaptionML=[ENU=Adjustment Factor;
                                                              ESP=Factor ajuste];
                                                   DecimalPlaces=0:5;
                                                   SourceExpr=UnitPricefactor;
                                                   MinValue=0 }
      { 14  ;Label        ;6380 ;550  ;3300 ;440  ;ParentControl=13 }
      { 15  ;Label        ;0    ;0    ;5500 ;440  ;LeaderDots=No;
                                                   CaptionML=[ENU=Copy to Res. Price Change...;
                                                              ESP=Copia a modif. precio recurso...] }
      { 16  ;TextBox      ;9790 ;0    ;2750 ;440  ;CaptionML=[ENU=Only Prices Above;
                                                              ESP=S¢lo precios superiores a];
                                                   DecimalPlaces=2:5;
                                                   SourceExpr=PriceLowerLimit }
      { 17  ;Label        ;6380 ;0    ;3300 ;440  ;ParentControl=16 }
      { 5   ;TextBox      ;3410 ;1100 ;2750 ;440  ;ValidateTableRelation=No;
                                                   CaptionML=[ENU=Job No.;
                                                              ESP=N§ proyecto];
                                                   SourceExpr=ToJob."No.";
                                                   TableRelation=Job }
      { 6   ;TextBox      ;3410 ;1650 ;2750 ;440  ;ValidateTableRelation=No;
                                                   CaptionML=[ENU=Work Type;
                                                              ESP=Tipo trabajo];
                                                   SourceExpr=ToWorkType.Code;
                                                   TableRelation="Work Type" }
      { 3   ;Label        ;220  ;1100 ;3080 ;440  ;ParentControl=5 }
      { 4   ;Label        ;220  ;1650 ;3080 ;440  ;ParentControl=6 }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   IF UnitPricefactor = 0 THEN BEGIN
                     UnitPricefactor := 1;
                     CreateNewPrices := TRUE;
                     ToCurrency.Code := Text004;
                     ToJob."No." := Text004;
                     ToWorkType.Code := Text004;
                   END;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             ESP=Opciones] }

      { 15  ;2   ;Group     ;
                  CaptionML=[ENU=Copy to Res. Price Change...;
                             ESP=Copia a modif. precio recurso...] }

      { 7   ;3   ;Field     ;
                  CaptionML=[ENU=Currency Code;
                             ESP=C¢d. divisa];
                  SourceExpr=ToCurrency.Code;
                  TableRelation=Currency }

      { 5   ;3   ;Field     ;
                  CaptionML=[ENU=Job No.;
                             ESP=N§ proyecto];
                  SourceExpr=ToJob."No.";
                  TableRelation=Job }

      { 6   ;3   ;Field     ;
                  CaptionML=[ENU=Work Type;
                             ESP=Tipo trabajo];
                  SourceExpr=ToWorkType.Code;
                  TableRelation="Work Type" }

      { 16  ;2   ;Field     ;
                  CaptionML=[ENU=Only Prices Above;
                             ESP=S¢lo precios superiores a];
                  DecimalPlaces=2:5;
                  SourceExpr=PriceLowerLimit }

      { 13  ;2   ;Field     ;
                  CaptionML=[ENU=Adjustment Factor;
                             ESP=Factor ajuste];
                  DecimalPlaces=0:5;
                  SourceExpr=UnitPricefactor;
                  MinValue=0 }

      { 9   ;2   ;Field     ;
                  CaptionML=[ENU=Rounding Method;
                             ESP=M‚todo redondeo];
                  SourceExpr=RoundingMethod.Code;
                  TableRelation="Rounding Method" }

      { 1   ;2   ;Field     ;
                  CaptionML=[ENU=Create New Prices;
                             ESP=Crear tarifa nueva];
                  SourceExpr=CreateNewPrices }

    }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=ALL;ESP=TODOS';
      Text001@1001 : TextConst 'ENU=Processing resources...\\;ESP=Procesando recursos...\\';
      Text002@1002 : TextConst 'ENU=Type         #1##########\;ESP=Tipo         #1##########\';
      Text003@1003 : TextConst 'ENU=Code         #2##########\;ESP=C¢digo       #2##########\';
      Text004@1004 : TextConst 'ENU=All;ESP=Todos';
      RoundingMethod@1008 : Record 42;
      ToCurrency@1007 : Record 4;
      CurrExchRate@1006 : Record 330;
      ToJob@1017 : Record 167;
      ToWorkType@1016 : Record 200;
      ResPriceChg@1015 : Record 335;
      ResPriceChg2@1014 : Record 335;
      Currency2@1013 : Record 4;
      ResPrice@1009 : Record 201;
      Window@1005 : Dialog;
      CreateNewPrices@1010 : Boolean;
      UnitPricefactor@1011 : Decimal;
      PriceLowerLimit@1012 : Decimal;
      PriceAlreadyExists@1019 : Boolean;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}
