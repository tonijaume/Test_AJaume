OBJECT Report 7009926 Resumen cuadrante
{
  OBJECT-PROPERTIES
  {
    Date=02/05/14;
    Time=11:18:02;
    Modified=Yes;
    Version List=AIC2009;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Quadrant summary;
               ESP=Resumen Cuadrante];
    OnPreReport=BEGIN
                  IF NOT rEmpresa.FIND('-') THEN
                    ERROR(Text000);
                  IF NOT rPar.FIND('-') THEN
                    ERROR(Text001);
                END;

  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table7009793;
        DataItemTableView=SORTING(Fecha,Zona,TourOperador,Tipo Transfer);
        OnAfterGetRecord=BEGIN
                           busca_agrupaciones;
                           ordena_matriz;
                           primera := TRUE;
                         END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Header;
            PrintOnEveryPage=Yes;
            SectionWidth=16350;
            SectionHeight=846;
          }
          CONTROLS
          {
            { 1   ;TextBox      ;0    ;0    ;5400 ;423  ;FontSize=8;
                                                         FontBold=Yes;
                                                         SourceExpr=rEmpresa.Name }
            { 2   ;Shape        ;0    ;423  ;16350;423  ;ShapeStyle=HorzLine }
            { 3   ;Label        ;9600 ;0    ;6750 ;423  ;HorzAlign=Right;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=[ENU=Quadrant summary;
                                                                    ESP=Resumen Cuadrante] }
          }
           }
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=16350;
            SectionHeight=2961;
          }
          CONTROLS
          {
            { 4   ;TextBox      ;3900 ;0    ;1950 ;423  ;FontSize=11;
                                                         SourceExpr=Fecha }
            { 5   ;TextBox      ;3900 ;423  ;3000 ;423  ;FontSize=11;
                                                         SourceExpr=Zona }
            { 6   ;TextBox      ;3900 ;846  ;3000 ;423  ;FontSize=11;
                                                         SourceExpr=TourOperador }
            { 7   ;TextBox      ;3900 ;1269 ;1950 ;423  ;FontSize=11;
                                                         SourceExpr="Tipo Transfer" }
            { 8   ;Label        ;750  ;2115 ;2250 ;846  ;HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontSize=11;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=[ENU="Grouping ";
                                                                    ESP=Agrupacion] }
            { 9   ;Label        ;3150 ;2115 ;2250 ;846  ;VertAlign=Bottom;
                                                         FontSize=11;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=[ENU=Flight;
                                                                    ESP=Vuelo] }
            { 10  ;Label        ;5550 ;2115 ;1500 ;846  ;VertAlign=Bottom;
                                                         FontSize=11;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=[ENU=Destination;
                                                                    ESP=Destino] }
            { 11  ;Label        ;7200 ;2115 ;3750 ;846  ;VertAlign=Bottom;
                                                         FontSize=11;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=[ENU=Hotel;
                                                                    ESP=Hotel] }
            { 12  ;Label        ;11100;2115 ;1050 ;846  ;HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontSize=11;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=[ENU=Time;
                                                                    ESP=Hora] }
            { 13  ;Label        ;12300;2115 ;1200 ;846  ;HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontSize=11;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=[ENU=Paxes;
                                                                    ESP=Paxes] }
            { 14  ;Label        ;13800;2115 ;1350 ;846  ;VertAlign=Bottom;
                                                         FontSize=11;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=[ENU=Bus No.;
                                                                    ESP=N§ Bus] }
            { 15  ;Label        ;750  ;846  ;3000 ;423  ;FontSize=11;
                                                         FontBold=Yes;
                                                         LeaderDots=Yes;
                                                         CaptionML=[ENU=TourOperator;
                                                                    ESP=TourOperador] }
            { 16  ;Label        ;750  ;423  ;3000 ;423  ;FontSize=11;
                                                         FontBold=Yes;
                                                         LeaderDots=Yes;
                                                         CaptionML=[ENU=Location;
                                                                    ESP=Zona] }
            { 17  ;Label        ;750  ;0    ;3000 ;423  ;FontSize=11;
                                                         FontBold=Yes;
                                                         LeaderDots=Yes;
                                                         CaptionML=[ENU=Date;
                                                                    ESP=Fecha] }
            { 18  ;Label        ;750  ;1269 ;3000 ;423  ;FontSize=11;
                                                         FontBold=Yes;
                                                         LeaderDots=Yes;
                                                         CaptionML=[ENU=Type;
                                                                    ESP=Tipo] }
          }
           }
        { PROPERTIES
          {
            SectionType=Footer;
            PrintOnEveryPage=Yes;
            PlaceInBottom=Yes;
            SectionWidth=16350;
            SectionHeight=846;
          }
          CONTROLS
          {
            { 19  ;TextBox      ;4800 ;423  ;7050 ;423  ;HorzAlign=Center;
                                                         SourceExpr=FORMAT(TODAY,0,4) + ' / ' + FORMAT(TIME,0,0) + ' / ' + USERID }
            { 20  ;TextBox      ;0    ;423  ;3600 ;423  ;SourceExpr=cNom.nom_delegacion(rPar.Delegacion) }
            { 21  ;Shape        ;0    ;0    ;16350;423  ;ShapeStyle=HorzLine }
            { 22  ;TextBox      ;13200;423  ;3150 ;423  ;HorzAlign=Right;
                                                         SourceExpr=Text002 + FORMAT(CurrReport.PAGENO) }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number);
        OnPreDataItem=BEGIN
                        index := 1;
                      END;

        OnAfterGetRecord=BEGIN
                           IF agrupaciones[index] = 0 THEN
                             CurrReport.BREAK;
                         END;

      }
      SECTIONS
      {
      }
       }
    { PROPERTIES
      {
        DataItemIndent=2;
        DataItemTable=Table7009796;
        OnPreDataItem=BEGIN
                        Agrupacion.SETRANGE("N§ Agrupacion", agrupaciones[index]);
                      END;

        OnPostDataItem=BEGIN
                         index := index + 1;
                       END;

      }
      SECTIONS
      {
      }
       }
    { PROPERTIES
      {
        DataItemIndent=3;
        DataItemTable=Table7009797;
        DataItemTableView=SORTING(N§ Agrupacion,Fecha,Hora,Compa¤ia,Vuelo,IATA,Tipo transfer,Zona,TourOperador);
        OnPreDataItem=BEGIN
                        linea := 0;
                        fecha_anterior := 0D;
                        compa¤ia_anterior := '';
                        vuelo_anterior := '';
                        IATA_anterior := '';
                        pax_listado := 0;
                      END;

        OnAfterGetRecord=VAR
                           rRsv@1103355000 : Record 7009744;
                         BEGIN
                           rPlanVuelo.RESET;
                           rPlanVuelo.SETRANGE(Fecha   , Fecha);
                           rPlanVuelo.SETRANGE(Compa¤ia, Compa¤ia);
                           rPlanVuelo.SETRANGE(Vuelo   , Vuelo);
                           IF "Acumulado x Zona"."Tipo Transfer" = "Acumulado x Zona"."Tipo Transfer"::Entrada THEN
                             rPlanVuelo.SETRANGE(Origen , IATA)
                           ELSE
                             rPlanVuelo.SETRANGE(Destino , IATA);
                           IF NOT rPlanVuelo.FIND('-') THEN
                             ERROR(Text003 +
                                   Text004, Vuelo, Compa¤ia, Fecha);
                           IF linea = 0 THEN BEGIN
                             linea := 1;
                             rHotelAgr.RESET;
                             rHotelAgr.SETCURRENTKEY("N§ Agrupacion",
                                                     "Orden zona",
                                                     "Orden recogida");
                             rHotelAgr.SETRANGE("N§ Agrupacion", "N§ Agrupacion");
                             IF NOT rHotelAgr.FIND('+') THEN
                                ERROR(Text005, "N§ Agrupacion");
                             hotel_listado  := rHotelAgr.Hotel;
                             hora_listado := horas[index];

                             {* Solicitud LTU 20-06-00 -- AJS

                             IF STRPOS(Agrupacion.Zona, '+') = 0 THEN BEGIN
                               IF Agrupacion.Letra <> '' THEN
                                 agrupacion_listado := Agrupacion.Letra
                               ELSE
                                 agrupacion_listado := STRSUBSTNO('%1', Agrupacion."N§ Agrupacion");
                             END
                             ELSE
                               agrupacion_listado := STRSUBSTNO('%1', Agrupacion."N§ Agrupacion");

                             Fin Solicitud LTU 20-06-00 -- AJS *}

                             agrupacion_listado := STRSUBSTNO('%1', Agrupacion."N§ Agrupacion");

                             rRsv.RESET;
                             IF "Acumulado x Zona"."Tipo Transfer" = "Acumulado x Zona"."Tipo Transfer"::Entrada THEN BEGIN
                               rRsv.SETCURRENTKEY("Agrupacion entrada",
                                                  TourOperador,
                                                  "Zona servicio entrada");
                               rRsv.SETRANGE("Agrupacion entrada"   , Agrupacion."N§ Agrupacion");
                               rRsv.SETRANGE("Zona servicio entrada", "Acumulado x Zona".Zona);
                             END
                             ELSE BEGIN
                               rRsv.SETCURRENTKEY("Agrupacion salida",
                                                  TourOperador,
                                                  "Zona servicio salida");
                               rRsv.SETRANGE("Agrupacion salida"   , Agrupacion."N§ Agrupacion");
                               rRsv.SETRANGE("Zona servicio salida", "Acumulado x Zona".Zona);
                             END;
                             rRsv.SETRANGE(TourOperador       , "Acumulado x Zona".TourOperador);
                             IF rRsv.FIND('-') THEN BEGIN
                               REPEAT
                                 pax_listado := pax_listado + rRsv."N§ Personas";
                               UNTIL rRsv.NEXT = 0;
                             END;
                             pax_total := pax_total + pax_listado;
                           END
                           ELSE BEGIN
                             agrupacion_listado := '';
                             hotel_listado := '';
                             hora_listado := 0T;
                             pax_listado  := 0;
                           END;
                           IF (Fecha = fecha_anterior) AND (Compa¤ia = compa¤ia_anterior) AND (Vuelo = vuelo_anterior) AND (IATA = IATA_anterior) THEN
                             CurrReport.SKIP
                           ELSE BEGIN
                             fecha_anterior := Fecha;
                             compa¤ia_anterior := Compa¤ia;
                             vuelo_anterior := Vuelo;
                             IATA_anterior := IATA;
                           END;
                         END;

        DataItemLink=N§ Agrupacion=FIELD(N§ Agrupacion);
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=16350;
            SectionHeight=846;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT((agrupacion_listado <> '') AND (NOT primera));
                         END;

            OnPostSection=BEGIN
                            primera := FALSE;
                          END;

          }
          CONTROLS
          {
          }
           }
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=16350;
            SectionHeight=846;
          }
          CONTROLS
          {
            { 23  ;TextBox      ;1500 ;423  ;1500 ;423  ;FontSize=11;
                                                         SourceExpr=agrupacion_listado }
            { 24  ;TextBox      ;3150 ;423  ;2250 ;423  ;FontSize=11;
                                                         SourceExpr=STRSUBSTNO('%1 - %2', Compa¤ia, Vuelo) }
            { 25  ;TextBox      ;5550 ;423  ;1500 ;423  ;FontSize=11;
                                                         SourceExpr=rPlanVuelo.Destino }
            { 26  ;TextBox      ;7200 ;423  ;3750 ;423  ;FontSize=11;
                                                         SourceExpr=cNom.nom_hotel(hotel_listado) }
            { 27  ;TextBox      ;11100;423  ;1050 ;423  ;FontSize=11;
                                                         SourceExpr=hora_listado;
                                                         Format=<Hours24>.<Minutes,2> }
            { 28  ;TextBox      ;12300;423  ;1200 ;423  ;FontSize=11;
                                                         BlankZero=Yes;
                                                         SourceExpr=pax_listado }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number)
                          WHERE(Number=FILTER(=1));
        DataItemVarName=Total;
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=16350;
            SectionHeight=846;
          }
          CONTROLS
          {
            { 29  ;TextBox      ;12450;423  ;1050 ;423  ;FontSize=11;
                                                         BlankZero=Yes;
                                                         SourceExpr=pax_total }
            { 30  ;Label        ;9450 ;423  ;2850 ;423  ;FontSize=11;
                                                         FontBold=Yes;
                                                         LeaderDots=Yes;
                                                         CaptionML=[ENU=Total paxes;
                                                                    ESP=Total Paxes] }
          }
           }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=9020;
      Height=3410;
      CaptionML=[ENU=Quadrant summary;
                 ESP=Resumen Cuadrante];
    }
    CONTROLS
    {
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      Text000@1103355022 : TextConst 'ENU=There is no registration in the Company Information folder;ESP=No existe ningun registro en el fichero de Informacion Empresa.';
      Text001@1103355023 : TextConst 'ENU=There is no registration in the Agency parameters folder;ESP=No existe ningun registro en el fichero de Parametros Agencia.';
      Text002@1103355024 : TextConst 'ENU=page;ESP=P gina';
      Text003@1103355025 : TextConst 'ENU=Flight plan %1 of company %2 does not exist;ESP=No existe el plan de vuelo %1 de la compa¤¡a %2';
      Text004@1103355026 : TextConst 'ENU=with date %3;ESP=con fecha %3';
      Text005@1103355027 : TextConst 'ENU=Grouping hotel of the grouping %1, does not exist;ESP=El hotel agrupacion de la agrupacion %1, no existe';
      rEmpresa@1103355000 : Record 79;
      rPar@1103355001 : Record 7009700;
      rPlanVuelo@1103355002 : Record 7009754;
      rHotelAgr@1103355003 : Record 7009798;
      rHorAgr@1103355004 : Record 7009800;
      cNom@1103355005 : Codeunit 7009702;
      indice@1103355006 : Integer;
      encontrado@1103355007 : Boolean;
      agrupaciones@1103355008 : ARRAY [50] OF Integer;
      horas@1103355009 : ARRAY [50] OF Time;
      index@1103355010 : Integer;
      linea@1103355011 : Integer;
      agrupacion_listado@1103355012 : Code[10];
      hotel_listado@1103355013 : Code[20];
      hora_listado@1103355014 : Time;
      pax_listado@1103355015 : Integer;
      fecha_anterior@1103355016 : Date;
      compa¤ia_anterior@1103355017 : Code[10];
      vuelo_anterior@1103355018 : Code[10];
      IATA_anterior@1103355019 : Code[10];
      pax_total@1103355020 : Integer;
      primera@1103355021 : Boolean;

    PROCEDURE busca_agrupaciones@1();
    VAR
      rRsv@1103355000 : Record 7009744;
      agrupacion_buscada@1103355001 : Integer;
    BEGIN
      // busca_agrupaciones
      //
      rRsv.RESET;
      IF "Acumulado x Zona"."Tipo Transfer" = "Acumulado x Zona"."Tipo Transfer"::Entrada THEN BEGIN
        rRsv.SETCURRENTKEY("Fecha entrada",
                           "Zona servicio entrada",
                           TourOperador,
                           Entrada,
                           "Agrupacion entrada");
        rRsv.SETRANGE ("Fecha entrada"        , "Acumulado x Zona".Fecha);
        rRsv.SETRANGE ("Zona servicio entrada", "Acumulado x Zona".Zona);
        rRsv.SETRANGE (TourOperador           , "Acumulado x Zona".TourOperador);
        rRsv.SETFILTER("Agrupacion entrada"   , '<>%1', 0);
      END
      ELSE BEGIN
        rRsv.SETCURRENTKEY("Fecha salida",
                           "Zona servicio salida",
                           TourOperador,
                           Salida,
                           "Agrupacion salida");
        rRsv.SETRANGE("Fecha salida"        , "Acumulado x Zona".Fecha);
        rRsv.SETRANGE("Zona servicio salida", "Acumulado x Zona".Zona);
        rRsv.SETRANGE(TourOperador          , "Acumulado x Zona".TourOperador);
        rRsv.SETFILTER("Agrupacion salida"   , '<>%1', 0);
      END;
      CLEAR(agrupaciones);
      CLEAR(horas);
      IF rRsv.FIND('-') THEN BEGIN
        REPEAT
          indice := 1;
          encontrado := FALSE;

          IF "Acumulado x Zona"."Tipo Transfer" = "Acumulado x Zona"."Tipo Transfer"::Entrada THEN
            agrupacion_buscada := rRsv."Agrupacion entrada"
          ELSE
            agrupacion_buscada := rRsv."Agrupacion salida";

          REPEAT
            IF agrupaciones[indice] = 0 THEN BEGIN
              agrupaciones[indice] := agrupacion_buscada;
              buscar_hora(agrupacion_buscada);
            END
            ELSE BEGIN
              IF agrupaciones[indice] = agrupacion_buscada THEN
                encontrado := TRUE
              ELSE
                indice := indice + 1;
            END;
          UNTIL encontrado;
        UNTIL rRsv.NEXT = 0;
      END;
      rRsv.RESET;
    END;

    PROCEDURE buscar_hora@11(par_agrupacion@1103355000 : Integer);
    BEGIN
      // buscar_hora
      //
      rHotelAgr.RESET;
      rHotelAgr.SETCURRENTKEY("N§ Agrupacion",
                              "Orden zona",
                              "Orden recogida");
      rHotelAgr.SETRANGE("N§ Agrupacion", par_agrupacion);
      IF rHotelAgr.FIND('+') THEN BEGIN
        rHorAgr.RESET;
        rHorAgr.SETCURRENTKEY("N§ Agrupacion",
                              "Hora recogida");
        rHorAgr.SETRANGE ("N§ Agrupacion", par_agrupacion);
        rHorAgr.SETRANGE (Hotel          , rHotelAgr.Hotel);
        rHorAgr.SETFILTER("Hora recogida", '<>%1', 0T);
        IF rHorAgr.FINDLAST THEN
          horas[indice] := rHorAgr."Hora recogida"
        ELSE
          horas[indice] := rHotelAgr."Hora recogida";
        rHorAgr.RESET;
      END;
    END;

    PROCEDURE ordena_matriz@18();
    VAR
      limite@1103355000 : Integer;
      indice2@1103355001 : Integer;
    BEGIN
      // ordena_matriz
      //
      indice := 1;
      WHILE horas[indice] <> 0T DO
        indice := indice + 1;
      limite := indice - 1;
      FOR indice := 1 TO limite DO
        FOR indice2 := indice TO limite DO
          IF horas[indice] > horas[indice2] THEN
            intercambia(indice, indice2);
    END;

    PROCEDURE intercambia@19(origen@1103355000 : Integer;destino@1103355001 : Integer);
    VAR
      hora_aux@1103355002 : Time;
      agrupacion_aux@1103355003 : Integer;
    BEGIN
      // intercambia
      //
      hora_aux := horas[origen];
      agrupacion_aux := agrupaciones[origen];
      horas[origen] := horas[destino];
      horas[destino] := hora_aux;
      agrupaciones[origen] := agrupaciones[destino];
      agrupaciones[destino] := agrupacion_aux;
    END;

    BEGIN
    {

      ## AJF 29/06/09

        .- (09/00319) cambio c¢digos de hotel de code10 a code20.

      $001 AJS 02052014 Cambio la clave a la hora de buscar las recogidas
    }
    END.
  }
  RDLDATA
  {
  }
}
