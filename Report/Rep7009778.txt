OBJECT Report 7009778 Info Aeropuerto - SALIDAS
{
  OBJECT-PROPERTIES
  {
    Date=28/07/15;
    Time=14:11:47;
    Modified=Yes;
    Version List=AIC2009,CNT;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Airport Info - DEPARTURES;
               ESP=Info Aeropuerto - SALIDAS];
    ProcessingOnly=Yes;
  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table7009754;
        DataItemTableView=SORTING(Fecha,Vuelo dia siguiente,Hora Salida)
                          WHERE(Entrada/Salida=CONST(Salida));
        DataItemVarName=diVuelo;
        OnPreDataItem=BEGIN
                        rDelegacion.FINDFIRST;

                        cExcel.Nuevo;
                        cExcel.ValorCelda(1, 1, Text001, TRUE, FALSE, FALSE);
                        cExcel.ValorCelda(1, 3, Text002, TRUE, FALSE, FALSE);
                        cExcel.ValorCelda(1, 4, Text013, TRUE, FALSE, FALSE);

                        cExcel.ValorCelda(1, 8, rDelegacion.Nombre, TRUE, FALSE, FALSE);
                        cExcel.Rango(1, 8, 1, 17);
                        cExcel.CombinarSinCentrar;
                        cExcel.FormatoTexto('', 0, 0, 0, 4, 0);

                        cExcel.ValorCelda(3, 1, UPPERCASE(diReserva.FIELDCAPTION(TourOperador)), TRUE, FALSE, FALSE);

                        cExcel.ValorCelda(3, 2, UPPERCASE(diReserva.FIELDCAPTION(Bono)), TRUE, FALSE, FALSE);
                        cExcel.ValorCelda(3, 3, UPPERCASE(diReserva.FIELDCAPTION(Nombre)), TRUE, FALSE, FALSE);
                        cExcel.ValorCelda(3, 4, UPPERCASE(diReserva.FIELDCAPTION("Hotel salida")), TRUE, FALSE, FALSE);
                        cExcel.ValorCelda(3, 5, Text009, TRUE, FALSE, FALSE);
                        cExcel.CentrarTexto();
                        cExcel.ValorCelda(3, 6, Text004, TRUE, FALSE, FALSE);
                        cExcel.ValorCelda(3, 7, Text005, TRUE, FALSE, FALSE);
                        cExcel.ValorCelda(3, 8, Text006, TRUE, FALSE, FALSE);
                        cExcel.CentrarTexto();
                        cExcel.ValorCelda(3, 9, Text007, TRUE, FALSE, FALSE);
                        cExcel.CentrarTexto();
                        cExcel.ValorCelda(3, 10, Text014, TRUE, FALSE, FALSE);
                        cExcel.CentrarTexto();
                        cExcel.ValorCelda(3, 11, Text010, TRUE, FALSE, FALSE);
                        cExcel.ValorCelda(3, 12, UPPERCASE(rAgr.FIELDCAPTION(Transportista)), TRUE, FALSE, FALSE);
                        cExcel.ValorCelda(3, 13, UPPERCASE(rAgr.FIELDCAPTION("Numero Bus")), TRUE, FALSE, FALSE);
                        cExcel.ValorCelda(3, 14, Text008, TRUE, FALSE, FALSE);
                        cExcel.ValorCelda(3, 15, Text012, TRUE, FALSE, FALSE);
                        cExcel.CentrarTexto();
                        cExcel.ValorCelda(3, 16, Text003, TRUE, FALSE, FALSE);
                        cExcel.ValorCelda(3, 17, Text011, TRUE, FALSE, FALSE);
                        cExcel.CentrarTexto();

                        wLinea := 3;

                        wPrimera := TRUE;
                      END;

        OnAfterGetRecord=BEGIN
                           CALCFIELDS("Salida/Pax transfer");
                           IF "Salida/Pax transfer" <> 0 THEN
                           BEGIN
                             IF NOT wPrimera THEN
                             BEGIN
                               IF wFecha <> Fecha THEN
                                 wLinea += 1;

                               wLinea += 1;
                             END
                             ELSE
                               wPrimera := FALSE;

                             wFecha    := Fecha;
                           END;
                         END;

        OnPostDataItem=BEGIN
                         cExcel.Rango(2, 1, wLinea, 17);
                         cExcel.FormatoTexto('', 0, 0, 8, 0, 0);
                         cExcel.JustificarHoja;
                         cExcel.Mostrar;
                       END;

        ReqFilterFields=Fecha,Destino;
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=12000;
            SectionHeight=846;
          }
          CONTROLS
          {
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table7009744;
        DataItemTableView=SORTING(Agrupacion salida,Hotel salida,Bono,Vuelo salida,Tipo Persona,Nombre)
                          WHERE(Traslado en destino=CONST(No));
        DataItemVarName=diReserva;
        OnPreDataItem=BEGIN
                        //. No trabajamos con las reservas sin vuelo
                        SETFILTER("IATA origen salida", '<>%1', '');
                        SETRANGE(Salida,1); //+$004
                      END;

        OnAfterGetRecord=VAR
                           vImprimir@1000000000 : Boolean;
                         BEGIN
                           vImprimir := FALSE;

                           IF wTipoImpresion = wTipoImpresion::Desglosado THEN BEGIN
                             vImprimir := TRUE;
                           END ELSE
                           BEGIN
                             IF (Bono <> wBono) OR (wTouroperador <> TourOperador) THEN
                               vImprimir := TRUE;
                           END;

                           IF vImprimir THEN
                           BEGIN
                             wLinea += 1;

                             cExcel.ValorCelda2(wLinea, 1, _NombreTouroperador);
                             cExcel.ValorCelda2(wLinea, 2, Bono);
                             cExcel.FormatoTexto('', 0, 0, 0, 2, 0);
                             cExcel.ValorCelda2(wLinea, 3, Nombre);
                             cExcel.ValorCelda2(wLinea, 4, _NombreHotel);
                             cExcel.ValorCelda2(wLinea, 5, FORMAT("Fecha salida"));
                             cExcel.ValorCelda2(wLinea, 6, "Compa¤ia salida" + "Vuelo salida");
                             cExcel.ValorCelda2(wLinea, 7, FORMAT(diReserva."Hora salida", 0, '<Hours24,2>:<Minutes,2>'));
                             cExcel.ValorCelda2(wLinea, 8, diReserva."IATA origen salida");
                             cExcel.CentrarTexto();
                             IF wTipoImpresion = wTipoImpresion::Desglosado THEN BEGIN
                               cExcel.ValorCelda2(wLinea, 9, FORMAT(COPYSTR(diReserva."Tipo Persona",1,2)));
                             END ELSE
                               cExcel.ValorCelda2(wLinea, 9, FORMAT(_GetPersonas));
                             cExcel.CentrarTexto();
                             cExcel.ValorCelda2(wLinea, 10, FORMAT(_GetHoraRecogida, 0, '<Hours24,2>:<Minutes,2>'));

                             IF rAgr.GET("Agrupacion salida") THEN
                             BEGIN
                               cExcel.ValorCelda2(wLinea, 11, FORMAT(rAgr."N§ Agrupacion"));
                               cExcel.ValorCelda2(wLinea, 12, _NombreTransportista(rAgr.Transportista));
                               cExcel.ValorCelda2(wLinea, 13, rAgr."Numero Bus");
                               cExcel.ValorCelda2(wLinea, 14, FORMAT(rAgr."Tipo servicio transportista"));
                               cExcel.ValorCelda2(wLinea, 15, FORMAT(rAgr."Capacidad Vehiculo"));
                               cExcel.CentrarTexto();
                             END;

                             IF diReserva."Transfer Privado Salida" THEN
                             BEGIN
                               cExcel.ValorCelda2(wLinea, 16, FORMAT("Transfer Privado Salida"));
                               cExcel.CentrarTexto();
                               cExcel.FormatoTexto('', 0, 255, 0, 0, 0);
                             END;

                             cExcel.ValorCelda2(wLinea, 17, _Observaciones);

                             wBono         := Bono;
                             wTouroperador := TourOperador;
                           END;
                         END;

        DataItemLink=Fecha salida=FIELD(Fecha),
                     Compa¤ia salida=FIELD(Compa¤ia),
                     Vuelo salida=FIELD(Vuelo),
                     IATA destino salida=FIELD(Destino);
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=12000;
            SectionHeight=846;
          }
          CONTROLS
          {
          }
           }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=9020;
      Height=3410;
    }
    CONTROLS
    {
      { 1000000000;TextBox;3740 ;330  ;4290 ;440  ;CaptionML=ESP=Tipo Impresi¢n;
                                                   OptionString=Agrupado Bono,Desglosado;
                                                   SourceExpr=wTipoImpresion }
      { 1000000001;Label  ;330  ;330  ;3300 ;440  ;ParentControl=1000000000 }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      rDelegacion@1100217015 : Record 7009718;
      rAgr@1100217016 : Record 7009796;
      cExcel@1100217000 : Codeunit 7009755;
      Text001@1100217001 : TextConst 'ENU=TRANSFERS;ESP=TRASLADOS';
      Text002@1100217002 : TextConst 'ENU=DEPARTURES;ESP=SALIDAS';
      wBono@1100217003 : Code[10];
      wCompa¤ia@1100217004 : Code[10];
      wVuelo@1100217005 : Code[10];
      wLinea@1100217006 : Integer;
      wFecha@1100217007 : Date;
      wTouroperador@1100217008 : Code[10];
      Text003@1100217009 : TextConst 'ENU=PRIVATE;ESP=PRIVADO';
      Text004@1100217010 : TextConst 'ENU=FLIGHT;ESP=VUELO';
      Text005@1100217011 : TextConst 'ENU=TIME;ESP=HORA';
      Text006@1100217012 : TextConst 'ENU=IATA;ESP=AEROP.';
      Text007@1100217013 : TextConst 'ENU=PAX;ESP=PAX';
      Text008@1100217014 : TextConst 'ENU=SERVICE TYPE;ESP=TIPO SERVICIO';
      Text009@1100217017 : TextConst 'ENU=DATE;ESP=FECHA';
      Text010@1100217018 : TextConst 'ENU=ORDER #;ESP=# ORDEN';
      wPrimera@1100217019 : Boolean;
      Text011@1100217020 : TextConst 'ENU=NOTES;ESP=OBSERVACIONES';
      Text012@1100217021 : TextConst 'ENU=CAP.;ESP=CAP.';
      Text013@1100217022 : TextConst 'ENU=AIRPORT INFO;ESP=INFO AEROPUERTO';
      Text014@1000000000 : TextConst 'ENU=PICK UP;ESP=PICK UP';
      wTipoImpresion@1000000001 : 'Agrupado Bono,Desglosado';

    LOCAL PROCEDURE _NombreTouroperador@1100217001() : Text[30];
    VAR
      lrTouroperador@1100217000 : Record 7009717;
    BEGIN
      // _NombreTouroperador

      IF lrTouroperador.GET(diReserva.TourOperador) THEN
        EXIT(lrTouroperador.Nombre);
    END;

    LOCAL PROCEDURE _NombreHotel@1100217006() : Text[50];
    VAR
      lrHotel@1100217000 : Record 7009724;
    BEGIN
      // _NombreHotel

      IF lrHotel.GET(diReserva."Hotel salida") THEN
        EXIT(lrHotel.Nombre);
    END;

    LOCAL PROCEDURE _GetPersonas@1100217000() : Integer;
    VAR
      lrRsv@1100217000 : Record 7009744;
    BEGIN
      // _GetPersonas
      lrRsv.RESET;
      lrRsv.SETRANGE (TourOperador     , diReserva.TourOperador);
      lrRsv.SETRANGE (Bono             , diReserva.Bono);
      lrRsv.SETRANGE ("Hotel salida"   , diReserva."Hotel salida");
      lrRsv.SETRANGE ("Compa¤ia salida", diReserva."Compa¤ia salida");
      lrRsv.SETRANGE ("Vuelo salida"   , diReserva."Vuelo salida");
      lrRsv.SETRANGE ("Fecha salida"   , diReserva."Fecha salida");
      lrRsv.SETFILTER("N§ Personas"    , '<>%1', 0);
      IF lrRsv.FINDSET THEN
        EXIT(lrRsv.COUNT);
    END;

    LOCAL PROCEDURE _NombreTransportista@1100217003(pwCodigo@1100217001 : Code[10]) : Text[30];
    VAR
      lrTransport@1100217000 : Record 7009801;
    BEGIN
      // _NombreTransportista

      IF lrTransport.GET(pwCodigo) THEN
        EXIT(lrTransport.Nombre);
    END;

    LOCAL PROCEDURE _Observaciones@1100217002() : Text[250];
    VAR
      lrComent@1100217000 : Record 7009762;
      lwTexto@1100217001 : Text[250];
      lwRestante@1100217002 : Integer;
    BEGIN
      // _Observaciones

      lwTexto := '';

      lrComent.RESET;
      lrComent.SETRANGE(Delegacion    , diReserva.Delegacion);
      lrComent.SETRANGE("N§ Interno"  , diReserva."N§ Interno");
      lrComent.SETRANGE("Tipo Reserva", lrComent."Tipo Reserva"::Transfer);
      IF lrComent.FINDSET THEN
      BEGIN
        REPEAT
          IF lwTexto = '' THEN
            lwTexto := lrComent.Texto
          ELSE
          BEGIN
            IF (STRLEN(lrComent.Texto) + 1 + STRLEN(lwTexto)) < MAXSTRLEN(lwTexto) THEN
              lwTexto := lwTexto + ' ' + lrComent.Texto
            ELSE
            BEGIN
              lwRestante := MAXSTRLEN(lwTexto) - (STRLEN(lwTexto) + 1);
              IF lwRestante > 0 THEN
                lwTexto := lwTexto + ' ' + COPYSTR(lrComent.Texto, 1, lwRestante);
            END;
          END;
        UNTIL lrComent.NEXT = 0;
      END;

      EXIT(lwTexto);
    END;

    LOCAL PROCEDURE _GetHoraRecogida@1000000002() : Time;
    VAR
      lrRecogida@1000000001 : Record 7009800;
      lrPrevision@1000000000 : Record 7010246;
    BEGIN
      // _GetHoraRecogida

      lrRecogida.RESET;
      lrRecogida.SETRANGE("N§ Agrupacion", diReserva."Agrupacion salida");
      lrRecogida.SETRANGE(Hotel          , diReserva."Hotel salida");
      lrRecogida.SETRANGE(Compa¤ia       , diReserva."Compa¤ia salida");
      lrRecogida.SETRANGE(Vuelo          , diReserva."Vuelo salida");
      IF lrRecogida.FINDFIRST THEN
        EXIT(lrRecogida."Hora recogida")
      ELSE
      BEGIN
        lrPrevision.RESET;
        lrPrevision.SETRANGE(Hotel   , diReserva."Hotel salida");
        lrPrevision.SETRANGE(Compa¤ia, diReserva."Compa¤ia salida");
        lrPrevision.SETRANGE(Vuelo   , diReserva."Vuelo salida");
        lrPrevision.SETRANGE(Fecha   , diReserva."Fecha salida");
        IF lrPrevision.FINDFIRST THEN
          EXIT(lrPrevision."Hora recogida");
      END;
    END;

    BEGIN
    {
      $001 AJS 05102014 Nuevo formato copia del informe 7009774

      $002 AJS 07102014 Ordenar por hora de salida

      $003 AJS 08122014 Mostrar la hora recogida aunque no este agrupada la reserva

      $004 ARM 09062015 CNT-OC-14122 Solo mostramos las que Salida = 1

      $005 AJS 28072015 Cambio la clave usada para reservas
    }
    END.
  }
  RDLDATA
  {
  }
}
