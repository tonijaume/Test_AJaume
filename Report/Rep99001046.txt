OBJECT Report 99001046 Calculate Work Center Calendar
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=NAVW16.00.01;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Calculate Work Center Calendar;
               ESP=Calc. calend. centro trabajo];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  Window.OPEN(
                    Text000 +
                    Text001);
                END;

  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table99000754;
        DataItemTableView=SORTING(No.);
        OnPreDataItem=BEGIN
                        IF StartingDate = 0D THEN
                          ERROR(Text004);

                        IF EndingDate = 0D THEN
                          ERROR(Text005);
                      END;

        OnAfterGetRecord=BEGIN
                           Window.UPDATE(1,"No.");

                           TESTFIELD(Efficiency);

                           Calendar.RESET;
                           Calendar.SETRANGE("Capacity Type",Calendar."Capacity Type"::"Work Center");
                           Calendar.SETRANGE("No.","No.");
                           Calendar.SETRANGE(Date,StartingDate,EndingDate);
                           Calendar.DELETEALL;

                           IF "Consolidated Calendar" THEN BEGIN
                             Calendar.SETRANGE("No.");
                             Calendar.SETCURRENTKEY("Work Center No.",Date);
                             Calendar.SETRANGE("Work Center No.","No.");
                             Calendar.SETRANGE("Capacity Type",Calendar."Capacity Type"::"Machine Center");
                             IF Calendar.FIND('-') THEN
                               REPEAT
                                 TempCalendar.INIT;
                                 TempCalendar."Capacity Type" := Calendar."Capacity Type"::"Work Center";
                                 TempCalendar."No." := "No.";
                                 TempCalendar."Work Center No." := "No.";
                                 TempCalendar.Date := Calendar.Date;
                                 TempCalendar."Starting Time" := Calendar."Starting Time";
                                 IF TempCalendar.INSERT THEN;
                                 TempCalendar."Starting Time" := Calendar."Ending Time";
                                 IF TempCalendar.INSERT THEN;
                               UNTIL Calendar.NEXT = 0;

                             Calendar.RESET;
                             Calendar.SETCURRENTKEY("Work Center No.",Date);
                             Calendar.SETRANGE("Capacity Type",Calendar."Capacity Type"::"Machine Center");
                             Calendar.SETRANGE("Work Center No.","No.");
                             TempCalendar.SETRANGE("Work Center No.","No.");
                             IF TempCalendar.FIND('-') THEN
                               REPEAT
                                 CLEAR(LastTime);
                                 TempCalendar.SETRANGE(Date,TempCalendar.Date);
                                 Calendar.SETRANGE(Date,TempCalendar.Date);
                                 IF TempCalendar.FIND('-') THEN
                                   REPEAT
                                     IF LastTime = 0T THEN
                                       LastTime := TempCalendar."Starting Time"
                                     ELSE BEGIN
                                       Calendar.SETFILTER("Starting Time",'<=%1',LastTime);
                                       Calendar.SETFILTER("Ending Time",'>%1',LastTime);
                                       IF Calendar.FIND('-') THEN BEGIN
                                         Calendar2 := TempCalendar;
                                         Calendar2."Work Shift Code" := '';
                                         Calendar2."Starting Time" := LastTime;
                                         Calendar2.VALIDATE("Ending Time",TempCalendar."Starting Time");
                                         Calendar2.VALIDATE("No.");
                                         Calendar2.Capacity := 0;
                                         REPEAT
                                           Calendar2.Capacity := Calendar2.Capacity + (Calendar.Capacity - Calendar."Absence Capacity") *
                                             Calendar.Efficiency / 100;
                                         UNTIL Calendar.NEXT = 0;
                                         IF Calendar2.Capacity <> 0 THEN BEGIN
                                           Calendar2.VALIDATE(Capacity);
                                           Calendar2.INSERT;
                                         END;
                                       END;
                                       LastTime := TempCalendar."Starting Time";
                                     END;
                                   UNTIL TempCalendar.NEXT = 0;
                                 TempCalendar.SETRANGE(Date);
                               UNTIL TempCalendar.NEXT = 0;
                           END ELSE BEGIN
                             TESTFIELD(Capacity);
                             TESTFIELD("Unit of Measure Code");

                             CalendarMgt.CalculateSchedule(
                               0,
                               "No.",
                               "No.",
                               StartingDate,
                               EndingDate);
                           END;
                         END;

        ReqFilterFields=No.;
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=12000;
            SectionHeight=846;
          }
          CONTROLS
          {
          }
           }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=5060;
      Height=990;
      OnInit=BEGIN
               IF StartingDate = 0D THEN
                 StartingDate := DMY2DATE(1,1,DATE2DMY(WORKDATE,3));
               IF EndingDate = 0D THEN
                 EndingDate := DMY2DATE(31,12,DATE2DMY(WORKDATE,3));
             END;

    }
    CONTROLS
    {
      { 3   ;TextBox      ;3410 ;0    ;1650 ;440  ;CaptionML=[ENU=Starting Date;
                                                              ESP=Fecha inicial];
                                                   SourceExpr=StartingDate }
      { 4   ;Label        ;0    ;0    ;3300 ;440  ;ParentControl=3 }
      { 5   ;Label        ;0    ;550  ;3300 ;440  ;ParentControl=6 }
      { 6   ;TextBox      ;3410 ;550  ;1650 ;440  ;CaptionML=[ENU=Ending Date;
                                                              ESP=Fecha final];
                                                   SourceExpr=EndingDate }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnInit=BEGIN
               IF StartingDate = 0D THEN
                 StartingDate := DMY2DATE(1,1,DATE2DMY(WORKDATE,3));
               IF EndingDate = 0D THEN
                 EndingDate := DMY2DATE(31,12,DATE2DMY(WORKDATE,3));
             END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             ESP=Opciones] }

      { 3   ;2   ;Field     ;
                  CaptionML=[ENU=Starting Date;
                             ESP=Fecha inicial];
                  SourceExpr=StartingDate }

      { 6   ;2   ;Field     ;
                  CaptionML=[ENU=Ending Date;
                             ESP=Fecha final];
                  SourceExpr=EndingDate }

    }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Calculating Work Centers...\\;ESP=Calculando cen. trabajo ...\\';
      Text001@1001 : TextConst 'ENU=No.            #1##########;ESP=N§             #1##########';
      Text004@1002 : TextConst 'ENU=You must fill in the starting date field.;ESP=Debe rellenar el campo fecha inicial.';
      Text005@1003 : TextConst 'ENU=You must fill in the ending date field.;ESP=Debe rellenar el campo fecha final.';
      Calendar@1004 : Record 99000757;
      Calendar2@1005 : Record 99000757;
      TempCalendar@1010 : TEMPORARY Record 99000757;
      CalendarMgt@1006 : Codeunit 99000755;
      Window@1007 : Dialog;
      StartingDate@1008 : Date;
      EndingDate@1009 : Date;
      LastTime@1011 : Time;

    PROCEDURE InitializeRequest@1(NewStartingDate@1000 : Date;NewEndingDate@1001 : Date);
    BEGIN
      StartingDate := NewStartingDate;
      EndingDate := NewEndingDate;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}
