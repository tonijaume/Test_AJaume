OBJECT Report 7010383 Estad. Fact. Cliente Comp.
{
  OBJECT-PROPERTIES
  {
    Date=05/10/10;
    Time=17:23:47;
    Version List=TRANSFER,INV;
  }
  PROPERTIES
  {
    CaptionML=ESP=Estad. Fact. Cliente Comp.;
    ShowPrintStatus=Yes;
    UseReqForm=Yes;
    TopMargin=1000;
    BottomMargin=1000;
    LeftMargin=2100;
    RightMargin=400;
    Orientation=Landscape;
  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number)
                          ORDER(Ascending);
        MaxIteration=1;
        DataItemVarName=Cabecera;
        OnPreDataItem=BEGIN
                        IF (wIniAcum[1] =0D) OR (wIniAcum[2] = 0D ) THEN
                          ERROR(err3);

                        rParametros.FINDFIRST;
                      END;

        OnAfterGetRecord=VAR
                           rPar@1103350000 : Record 7010311;
                           cFunBas@1103350001 : Codeunit 7010310;
                           ERROR1@1103350002 : TextConst 'ESP=Falta asignar el identificador de C¢digo Entrada en la ficha de par metros';
                         BEGIN
                           vPrecision := cFunBas.ObtenerPrecisionDivisa(vDivisa);
                           vMostrarTotalGeneral := FALSE;

                           vTipoLinea := cFunBas.Tipo_Lineas_Estadisticas;
                           vTipoElemento:= cFunBas.MaletasyEstadisticas;

                           rPar.FINDFIRST;
                           IF vGarajeResult = rPar."Todos los garajes" THEN
                             vGarajeResult := '';

                           vCodEntrada := rPar."Codigo Entradas";
                           IF vCodEntrada = '' THEN
                             ERROR(ERROR1);
                         END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Header;
            PrintOnEveryPage=Yes;
            SectionWidth=25500;
            SectionHeight=3807;
          }
          CONTROLS
          {
            { 1   ;Label        ;0    ;0    ;7500 ;423  ;FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=Estadisticas Facturacion Clientes Comparadas }
            { 2   ;TextBox      ;22350;0    ;3150 ;423  ;HorzAlign=Right;
                                                         SourceExpr=FORMAT(TODAY,0,4) }
            { 3   ;TextBox      ;0    ;423  ;7500 ;423  ;SourceExpr=COMPANYNAME }
            { 4   ;TextBox      ;25050;423  ;450  ;423  ;CaptionML=ESP=P gina;
                                                         SourceExpr=CurrReport.PAGENO }
            { 5   ;Label        ;24300;423  ;750  ;423  ;ParentControl=4 }
            { 6   ;TextBox      ;23250;846  ;2250 ;423  ;HorzAlign=Right;
                                                         SourceExpr=USERID }
            { 14  ;Label        ;0    ;2538 ;25500;423  ;CaptionML=ESP=____________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ }
            { 36  ;Label        ;0    ;1692 ;3000 ;423  ;VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=ESP=Periodo Actual }
            { 38  ;TextBox      ;3150 ;1692 ;3300 ;423  ;SourceExpr=wFiltroFecha[1] }
            { 50  ;Label        ;6600 ;846  ;150  ;423  ;CaptionML=ESP=/ }
            { 90  ;TextBox      ;3150 ;1269 ;3300 ;423  ;VertAlign=Bottom;
                                                         SourceExpr=vSeleccion }
            { 83  ;Label        ;0    ;1269 ;3000 ;423  ;ParentControl=90;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=ESP=Selecci¢n Clientes }
            { 91  ;Label        ;6600 ;1269 ;150  ;423  ;CaptionML=ESP=/ }
            { 102 ;Label        ;6900 ;1269 ;5100 ;423  ;VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=ESP=S¢lo Vehiculos con Actividad }
            { 191 ;TextBox      ;12150;1269 ;2850 ;423  ;VertAlign=Bottom;
                                                         SourceExpr=vSoloConActividad }
            { 194 ;Label        ;6900 ;846  ;5100 ;423  ;VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=ESP=Garaje a considerar en resultados }
            { 195 ;TextBox      ;12150;846  ;2850 ;423  ;VertAlign=Bottom;
                                                         SourceExpr=vFltGarajeResult }
            { 82  ;TextBox      ;17250;846  ;1800 ;423  ;VertAlign=Bottom;
                                                         SourceExpr=vDivisa }
            { 99  ;Label        ;15450;846  ;1650 ;423  ;VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=ESP=C¢d. Divisa }
            { 100 ;Label        ;15150;846  ;150  ;423  ;CaptionML=ESP=/ }
            { 109 ;TextBox      ;3150 ;2115 ;3300 ;423  ;SourceExpr=wFiltroFecha[2] }
            { 110 ;Label        ;0    ;2115 ;3000 ;423  ;VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=ESP=Periodo Anterior }
            { 21  ;Label        ;0    ;2961 ;4050 ;846  ;ParentControl=20;
                                                         HorzAlign=Left;
                                                         VertAlign=Center;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=ESP=Touroperador }
            { 33  ;Label        ;4650 ;2961 ;3450 ;423  ;HorzAlign=Center;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=Facturacion }
            { 34  ;Label        ;4650 ;3384 ;2100 ;423  ;HorzAlign=Right;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=Per. Actual }
            { 101 ;Label        ;13950;2961 ;3450 ;423  ;HorzAlign=Center;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=Acumulados }
            { 22  ;Label        ;6900 ;3384 ;2100 ;423  ;HorzAlign=Right;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=Per.Anterior }
            { 29  ;Label        ;13950;3384 ;2100 ;423  ;HorzAlign=Center;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=Per. Actual }
            { 31  ;Label        ;16200;3384 ;2100 ;423  ;HorzAlign=Center;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=Per. Anterior }
            { 10  ;Label        ;9150 ;3384 ;1950 ;423  ;HorzAlign=Center;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=Diferencia }
            { 16  ;Label        ;18450;3384 ;1950 ;423  ;HorzAlign=Center;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=Diferencia }
            { 24  ;Label        ;11250;3384 ;1650 ;423  ;HorzAlign=Right;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=% Dif. }
            { 25  ;Label        ;20550;3384 ;1650 ;423  ;HorzAlign=Right;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=% Dif. }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table7010324;
        DataItemTableView=SORTING(Usuario,Cliente,TTOO)
                          ORDER(Ascending);
        NewPagePerGroup=No;
        NewPagePerRecord=No;
        DataItemVarName=ClienteTTOO;
        PrintOnlyIfDetail=No;
        OnPreDataItem=VAR
                        rPar@1103350000 : Record 7010311;
                        rAuxCT@1103350001 : Record 7010324;
                        cFunBas@1103350002 : Codeunit 7010310;
                      BEGIN
                        // calculo el primer y ultimo dia del mes que ha seleccionado el usuario.
                        // Hacemos vMes+1, porque si vMes=0 corresponde a Enero.

                        {JPT-27-12-01-eliminado
                        vIniMes  := DMY2DATE(1,vMes+1,vA¤o);
                        vFinMes  := cFunBas.ldom(vIniMes,0);
                        vFinAcum := vFinMes;
                        }

                        IF vDesglose THEN
                          Desglosar();

                        //CREAREMOS EL FILTRO APROPIADO.
                        //....................................................................
                        //....................................................................
                        RESET;
                        SETCURRENTKEY(Usuario,Cliente,TTOO);
                        SETRANGE(Usuario,USERID);

                        //Para saber donde se aplicar  el c lculo.
                        IF vGarajeResult = '' THEN
                          vFltGarajeResult := Text50000
                        ELSE
                          vFltGarajeResult := vGarajeResult;


                        //Comprobaremos que no est en la lista de vehiculos seleccionados.
                        IF vSeleccion=vSeleccion::"Seg£n Selecci¢n" THEN
                          SETRANGE(Selecci¢n,TRUE);
                        //....................................................................

                        IF vSoloConActividad THEN BEGIN
                          rAuxCT.RESET;
                          rAuxCT.COPYFILTERS(ClienteTTOO);
                          TestActividad(rAuxCT);
                          SETRANGE(Actividad,TRUE);
                        END;

                        //....................................................................
                        //FIN. SELECCION DEL FILTRO.
                        wTotal := COUNT;
                        wCont  := 0;
                        wVentana1.OPEN(Text50001);
                      END;

        OnAfterGetRecord=BEGIN
                           wCont +=1;
                           wVentana1.UPDATE(1, ROUND(((wCont/wTotal ) * 10000),1));
                         END;

        OnPostDataItem=BEGIN
                         wVentana1.CLOSE;
                       END;

        GroupTotalFields=Cliente;
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Header;
            PrintOnEveryPage=Yes;
            SectionWidth=25500;
            SectionHeight=0;
            OnPreSection=BEGIN
                           vTextoNormal := '$$';
                           vTextoTotal  := '$$';
                           vPrimerTexto := TRUE;
                         END;

          }
          CONTROLS
          {
          }
           }
        { PROPERTIES
          {
            SectionType=Header;
            PrintOnEveryPage=Yes;
            SectionWidth=25500;
            SectionHeight=0;
          }
          CONTROLS
          {
          }
           }
        { PROPERTIES
          {
            SectionType=GroupFooter;
            SectionWidth=25500;
            SectionHeight=423;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT(vAgrupacionCliente AND (NOT vMostrarTotalGeneral) AND (NOT vPrimerTexto));
                         END;

          }
          CONTROLS
          {
            { 11  ;Label        ;2100 ;0    ;18600;423  ;CaptionML=ESP=---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- }
            { 81  ;Label        ;20700;0    ;3000 ;423  ;CaptionML=ESP=-------------------------------------------------------------------------------------------------------------------- }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=2;
        DataItemTable=Table7010319;
        DataItemTableView=SORTING(Orden Listado)
                          ORDER(Ascending);
        DataItemVarName=Tipo Servicio;
        OnPreDataItem=BEGIN
                        ContaTS := 1;
                        //Inicializar las matrices que tienen el valor TOTAL para cada vehiculo.

                        vTextoNormal:='$$';
                        CurrReport.CREATETOTALS(wFact);
                      END;

        OnAfterGetRecord=VAR
                           vMesViajes@1103350000 : Decimal;
                           vMesPaxTrans@1103350001 : Decimal;
                           vMesCliEntrados@1103350002 : Decimal;
                           vMesCantFact@1103350003 : Decimal;
                           vMesPaxFact@1103350004 : Decimal;
                           vAcuViajes@1103350005 : Decimal;
                           vAcuPaxTrans@1103350006 : Decimal;
                           vAcuCliEntrados@1103350007 : Decimal;
                           vAcuCantFact@1103350008 : Decimal;
                           vAcuPaxFact@1103350009 : Decimal;
                           ERROR_INCONSISTENCIA@1103350011 : TextConst 'ESP=Inconsitencia detectada en la selecci¢n de vehiculos';
                           cFunBas@1103350012 : Codeunit 7010310;
                         BEGIN
                           // Realiza los distintos calculos de:
                           CLEAR(wFact);
                           // Periodo1
                           Calcula(ClienteTTOO.Cliente,ClienteTTOO.TTOO,"Tipo Servicio".Codigo,1,wServicio::Todos,ClienteTTOO);
                           // Periodo2
                           Calcula(ClienteTTOO.Cliente,ClienteTTOO.TTOO,"Tipo Servicio".Codigo,2,wServicio::Todos,ClienteTTOO);

                           CalcDif;
                         END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=25500;
            SectionHeight=423;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT(vMostrarTTOO);
                           vPrimerTexto := FALSE;
                         END;

          }
          CONTROLS
          {
            { 20  ;TextBox      ;0    ;0    ;4050 ;423  ;HorzAlign=Left;
                                                         SourceExpr=fTextoNormal }
            { 113 ;TextBox      ;4650 ;0    ;2100 ;423  ;BlankZero=No;
                                                         SourceExpr=ROUND(wFact[1,1],vPrecision) }
            { 114 ;TextBox      ;13950;0    ;2100 ;423  ;BlankZero=No;
                                                         SourceExpr=ROUND(wFact[1,2],vPrecision) }
            { 117 ;TextBox      ;16200;0    ;2100 ;423  ;BlankZero=No;
                                                         SourceExpr=ROUND(wFact[2,2],vPrecision) }
            { 118 ;TextBox      ;6900 ;0    ;2100 ;423  ;BlankZero=No;
                                                         SourceExpr=ROUND(wFact[2,1],vPrecision) }
            { 35  ;TextBox      ;24000;0    ;1500 ;423  ;SourceExpr=Codigo }
            { 12  ;TextBox      ;9150 ;0    ;1950 ;423  ;BlankZero=No;
                                                         SourceExpr=ROUND(wDiferencia[1],vPrecision) }
            { 19  ;TextBox      ;18450;0    ;1950 ;423  ;BlankZero=No;
                                                         SourceExpr=ROUND(wDiferencia[2],vPrecision) }
            { 26  ;TextBox      ;11250;0    ;1650 ;423  ;BlankZero=No;
                                                         SourceExpr=ROUND("w%Dif"[1],0.01) }
            { 27  ;TextBox      ;20550;0    ;1650 ;423  ;BlankZero=No;
                                                         SourceExpr=ROUND("w%Dif"[2],0.01) }
          }
           }
        { PROPERTIES
          {
            SectionType=Footer;
            SectionWidth=25500;
            SectionHeight=846;
            OnPreSection=BEGIN
                           CalcDif;
                         END;

          }
          CONTROLS
          {
            { 37  ;TextBox      ;0    ;0    ;4050 ;423  ;HorzAlign=Left;
                                                         SourceExpr=fTextoNormal }
            { 123 ;TextBox      ;16200;0    ;2100 ;423  ;BlankZero=No;
                                                         SourceExpr=ROUND(wFact[2,2],vPrecision) }
            { 124 ;TextBox      ;13950;0    ;2100 ;423  ;BlankZero=No;
                                                         SourceExpr=ROUND(wFact[1,2],vPrecision) }
            { 125 ;TextBox      ;6900 ;0    ;2100 ;423  ;BlankZero=No;
                                                         SourceExpr=ROUND(wFact[2,1],vPrecision) }
            { 126 ;TextBox      ;4650 ;0    ;2100 ;423  ;BlankZero=No;
                                                         SourceExpr=ROUND(wFact[1,1],vPrecision) }
            { 32  ;Label        ;24000;0    ;1500 ;423  ;CaptionML=ESP=TOTAL }
            { 15  ;TextBox      ;9150 ;0    ;1950 ;423  ;BlankZero=No;
                                                         SourceExpr=ROUND(wDiferencia[1],vPrecision) }
            { 23  ;TextBox      ;18450;0    ;1950 ;423  ;BlankZero=No;
                                                         SourceExpr=ROUND(wDiferencia[2],vPrecision) }
            { 28  ;TextBox      ;11250;0    ;1650 ;423  ;BlankZero=No;
                                                         SourceExpr=ROUND("w%Dif"[1],0.01) }
            { 30  ;TextBox      ;20550;0    ;1650 ;423  ;BlankZero=No;
                                                         SourceExpr=ROUND("w%Dif"[2],0.01) }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=2;
        DataItemTable=Table7010319;
        DataItemTableView=SORTING(Orden Listado)
                          ORDER(Ascending);
        NewPagePerRecord=No;
        DataItemVarName=TipoServicio2;
        OnPreDataItem=BEGIN
                        ContaTS:=1;
                        vImprimirTotales := FALSE;
                        vTextoTotal := '$$';
                        CurrReport.CREATETOTALS(wFact);
                      END;

        OnAfterGetRecord=VAR
                           Regis@1103350000 : Record 7010324;
                         BEGIN
                           IF NOT vAgrupacionCliente THEN
                             CurrReport.SKIP;

                           IF ContaTS = 1 THEN BEGIN
                             Regis.COPYFILTERS(ClienteTTOO);
                             Regis.SETCURRENTKEY(Usuario,Cliente,TTOO);
                             Regis:=ClienteTTOO;

                             IF Regis.NEXT <> 0 THEN
                               IF Regis.Cliente = ClienteTTOO.Cliente THEN
                                 CurrReport.SKIP;
                           END;

                           vImprimirTotales := TRUE;

                           ContaTS := ContaTS + 1;


                           // JPT ------------------------
                           CLEAR(wFact);
                           // Realiza los distintos calculos de:
                           // Periodo1
                           CalculaTotal(ClienteTTOO.Cliente,TipoServicio2.Codigo,1,wServicio::Todos);
                           // Periodo2
                           CalculaTotal(ClienteTTOO.Cliente,TipoServicio2.Codigo,2,wServicio::Todos);

                           CalcDif;
                         END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Header;
            SectionWidth=25500;
            SectionHeight=423;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT(vMostrarTTOO AND vAgrupacionCliente AND (NOT vPrimerTexto) );
                         END;

          }
          CONTROLS
          {
            { 170 ;Label        ;4650 ;0    ;2100 ;423  ;HorzAlign=Center;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=---------------------- }
            { 171 ;Label        ;6900 ;0    ;2100 ;423  ;HorzAlign=Center;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=------------------------- }
            { 65  ;Label        ;9150 ;0    ;1950 ;423  ;HorzAlign=Center;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=------------- }
            { 69  ;Label        ;11250;0    ;1650 ;423  ;HorzAlign=Center;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=------------- }
            { 67  ;Label        ;13950;0    ;2100 ;423  ;HorzAlign=Center;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=------------- }
            { 164 ;Label        ;16200;0    ;2100 ;423  ;HorzAlign=Center;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=------------- }
            { 165 ;Label        ;18450;0    ;1950 ;423  ;HorzAlign=Center;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=------------- }
            { 70  ;Label        ;20550;0    ;1650 ;423  ;HorzAlign=Center;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=------------- }
          }
           }
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=25500;
            SectionHeight=423;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT(vAgrupacionCliente);
                           vPrimerTexto := FALSE;
                         END;

          }
          CONTROLS
          {
            { 63  ;TextBox      ;24000;0    ;1500 ;423  ;BlankZero=Yes;
                                                         SourceExpr=Codigo }
            { 7   ;TextBox      ;0    ;0    ;4050 ;423  ;FontSize=8;
                                                         FontBold=Yes;
                                                         SourceExpr=fTextoTotal() }
            { 39  ;TextBox      ;20550;0    ;1650 ;423  ;BlankZero=No;
                                                         SourceExpr=ROUND("w%Dif"[2],0.01) }
            { 40  ;TextBox      ;18450;0    ;1950 ;423  ;BlankZero=No;
                                                         SourceExpr=ROUND(wDiferencia[2],vPrecision) }
            { 41  ;TextBox      ;16200;0    ;2100 ;423  ;BlankZero=No;
                                                         SourceExpr=ROUND(wFact[2,2],vPrecision) }
            { 42  ;TextBox      ;13950;0    ;2100 ;423  ;BlankZero=No;
                                                         SourceExpr=ROUND(wFact[1,2],vPrecision) }
            { 43  ;TextBox      ;11250;0    ;1650 ;423  ;BlankZero=No;
                                                         SourceExpr=ROUND("w%Dif"[1],0.01) }
            { 44  ;TextBox      ;9150 ;0    ;1950 ;423  ;BlankZero=No;
                                                         SourceExpr=ROUND(wDiferencia[1],vPrecision) }
            { 45  ;TextBox      ;6900 ;0    ;2100 ;423  ;BlankZero=No;
                                                         SourceExpr=ROUND(wFact[2,1],vPrecision) }
            { 46  ;TextBox      ;4650 ;0    ;2100 ;423  ;BlankZero=No;
                                                         SourceExpr=ROUND(wFact[1,1],vPrecision) }
          }
           }
        { PROPERTIES
          {
            SectionType=Footer;
            SectionWidth=25500;
            SectionHeight=423;
            OnPreSection=BEGIN
                           CalcDif;
                         END;

          }
          CONTROLS
          {
            { 79  ;Label        ;24000;0    ;1500 ;423  ;CaptionML=ESP=TOTAL }
            { 18  ;TextBox      ;0    ;0    ;4050 ;423  ;FontSize=8;
                                                         FontBold=Yes;
                                                         SourceExpr=fTextoTotal }
            { 47  ;TextBox      ;20550;0    ;1650 ;423  ;BlankZero=No;
                                                         SourceExpr=ROUND("w%Dif"[2],0.01) }
            { 48  ;TextBox      ;18450;0    ;1950 ;423  ;BlankZero=No;
                                                         SourceExpr=ROUND(wDiferencia[2],vPrecision) }
            { 49  ;TextBox      ;16200;0    ;2100 ;423  ;BlankZero=No;
                                                         SourceExpr=ROUND(wFact[2,2],vPrecision) }
            { 51  ;TextBox      ;13950;0    ;2100 ;423  ;BlankZero=No;
                                                         SourceExpr=ROUND(wFact[1,2],vPrecision) }
            { 52  ;TextBox      ;11250;0    ;1650 ;423  ;BlankZero=No;
                                                         SourceExpr=ROUND("w%Dif"[1],0.01) }
            { 53  ;TextBox      ;9150 ;0    ;1950 ;423  ;BlankZero=No;
                                                         SourceExpr=ROUND(wDiferencia[1],vPrecision) }
            { 54  ;TextBox      ;6900 ;0    ;2100 ;423  ;BlankZero=No;
                                                         SourceExpr=ROUND(wFact[2,1],vPrecision) }
            { 55  ;TextBox      ;4650 ;0    ;2100 ;423  ;BlankZero=No;
                                                         SourceExpr=ROUND(wFact[1,1],vPrecision) }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number)
                          WHERE(Number=FILTER(>0));
        MaxIteration=3;
        DataItemVarName=GranTotal;
        OnPreDataItem=BEGIN
                        //Las agrupaciones generales, se ver n en una nueva p gina.
                        IF vAgrupacionGeneral THEN
                          CurrReport.NEWPAGE;
                      END;

        OnAfterGetRecord=BEGIN
                           IF NOT vAgrupacionGeneral THEN
                             CurrReport.SKIP;


                           CASE Number OF
                             1:vTextoTotal := Text50002;
                             2:vTextoTotal := Text50003;
                             3:vTextoTotal := Text50004;
                           END;
                         END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Header;
            SectionWidth=25500;
            SectionHeight=1269;
          }
          CONTROLS
          {
            { 77  ;Label        ;0    ;423  ;3600 ;423  ;FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=T O T A L E S }
            { 78  ;Label        ;0    ;846  ;25500;423  ;CaptionML=ESP=____________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ }
            { 87  ;Label        ;0    ;0    ;25500;423  ;CaptionML=ESP=____________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ }
          }
           }
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=25500;
            SectionHeight=423;
          }
          CONTROLS
          {
            { 85  ;TextBox      ;0    ;0    ;3900 ;423  ;FontSize=8;
                                                         FontBold=Yes;
                                                         SourceExpr=vTextoTotal }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=2;
        DataItemTable=Table7010319;
        DataItemTableView=SORTING(Orden Listado)
                          ORDER(Ascending);
        DataItemVarName=TipoServicio4;
        OnPreDataItem=VAR
                        rVehiculo@1103350000 : Record 7010346;
                      BEGIN
                        ContaTS := 1;
                        CurrReport.CREATETOTALS(wFact);
                      END;

        OnAfterGetRecord=VAR
                           Regis@1103350000 : Record 7010324;
                           lwServicio@1103350001 : 'Todos,Propios,Arrendados';
                         BEGIN

                           IF NOT vAgrupacionGeneral THEN
                             CurrReport.SKIP;

                           IF ContaTS = 1 THEN BEGIN
                             Regis.COPYFILTERS(ClienteTTOO);
                             Regis.SETCURRENTKEY(Usuario,Cliente,TTOO);
                             Regis:=ClienteTTOO;

                             IF Regis.NEXT <> 0 THEN
                               CurrReport.SKIP
                             ELSE
                               vMostrarTotalGeneral := TRUE;

                             //Las agrupaciones generales, se ver n en una nueva p gina.
                             //CurrReport.NEWPAGE;

                            //vTextoTotal := Text50005

                           END
                           ELSE
                             //vTextoTotal := '';

                           ContaTS:=ContaTS + 1;

                           // JPT ------------------------
                           CASE GranTotal.Number OF
                             1:BEGIN
                                 lwServicio := lwServicio::Propios;
                               END;
                             2:BEGIN
                                 lwServicio := lwServicio::Arrendados;
                               END;
                             3:BEGIN
                                lwServicio  := lwServicio::Todos;
                               END;
                           END;

                           // Realiza los distintos calculos de:
                           CLEAR(wFact);
                           // Periodo1
                           CalculaTotal('',TipoServicio4.Codigo,1,lwServicio);
                           // Periodo2
                           CalculaTotal('',TipoServicio4.Codigo,2,lwServicio);

                           CalcDif;
                         END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=25500;
            SectionHeight=423;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT(vAgrupacionGeneral);
                           vPrimerTexto := FALSE;
                         END;

          }
          CONTROLS
          {
            { 84  ;TextBox      ;24000;0    ;1500 ;423  ;SourceExpr=Codigo }
            { 8   ;TextBox      ;20550;0    ;1650 ;423  ;SourceExpr=ROUND("w%Dif"[2],0.01) }
            { 9   ;TextBox      ;18450;0    ;1950 ;423  ;SourceExpr=ROUND(wDiferencia[2],vPrecision) }
            { 13  ;TextBox      ;16200;0    ;2100 ;423  ;SourceExpr=ROUND(wFact[2,2],vPrecision) }
            { 17  ;TextBox      ;13950;0    ;2100 ;423  ;SourceExpr=ROUND(wFact[1,2],vPrecision) }
            { 56  ;TextBox      ;11250;0    ;1650 ;423  ;SourceExpr=ROUND("w%Dif"[1],0.01) }
            { 57  ;TextBox      ;9150 ;0    ;1950 ;423  ;SourceExpr=ROUND(wDiferencia[1],vPrecision) }
            { 58  ;TextBox      ;6900 ;0    ;2100 ;423  ;SourceExpr=ROUND(wFact[2,1],vPrecision) }
            { 59  ;TextBox      ;4650 ;0    ;2100 ;423  ;SourceExpr=ROUND(wFact[1,1],vPrecision) }
          }
           }
        { PROPERTIES
          {
            SectionType=Footer;
            SectionWidth=25500;
            SectionHeight=423;
            OnPreSection=BEGIN
                           CalcDif;
                         END;

          }
          CONTROLS
          {
            { 92  ;Label        ;24000;0    ;1500 ;423  ;CaptionML=ESP=TOTAL }
            { 60  ;TextBox      ;20550;0    ;1650 ;423  ;SourceExpr=ROUND("w%Dif"[2],0.01) }
            { 61  ;TextBox      ;18450;0    ;1950 ;423  ;SourceExpr=ROUND(wDiferencia[2],vPrecision) }
            { 62  ;TextBox      ;16200;0    ;2100 ;423  ;SourceExpr=ROUND(wFact[2,2],vPrecision) }
            { 64  ;TextBox      ;13950;0    ;2100 ;423  ;SourceExpr=ROUND(wFact[1,2],vPrecision) }
            { 71  ;TextBox      ;11250;0    ;1650 ;423  ;SourceExpr=ROUND("w%Dif"[1],0.01) }
            { 74  ;TextBox      ;9150 ;0    ;1950 ;423  ;SourceExpr=ROUND(wDiferencia[1],vPrecision) }
            { 75  ;TextBox      ;6900 ;0    ;2100 ;423  ;SourceExpr=ROUND(wFact[2,1],vPrecision) }
            { 76  ;TextBox      ;4650 ;0    ;2100 ;423  ;SourceExpr=ROUND(wFact[1,1],vPrecision) }
          }
           }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=12540;
      Height=8690;
      OnOpenForm=VAR
                   rConf@1103350000 : Record 98;
                   rPar@1103350001 : Record 7010311;
                   cFunEst@1103350002 : Codeunit 7010312;
                   cFunBas@1103350003 : Codeunit 7010310;
                 BEGIN
                   rPar.FINDFIRST;
                   {JPT
                   vMes    := DATE2DMY(cFunBas.fdom(TODAY,-2),2);  //Ah¡ que poner un mes menos.
                   vA¤o    := DATE2DMY(cFunBas.fdom(TODAY,-1),3);
                   vGaraje := cFunBas.ObtenerGaraje();
                   }

                   //............
                   vSeleccion:=vSeleccion::"Todos los Clientes";
                   RequestOptionsForm.Seleccionar.VISIBLE:=FALSE;
                   //............
                   vDesglose:=FALSE;
                   RequestOptionsForm.Desglose.VISIBLE:=FALSE;
                   //............

                   vAgrupacionGeneral  :=TRUE;

                   //............
                   vAgrupacionCliente:=TRUE;
                   //............

                   vMostrarTTOO        :=TRUE;
                   vSoloConActividad   :=FALSE;
                   wIniAcum[1]         :=rPar."Fecha Inicio Acumulados";
                   wIniAcum[2]         := wIniAcum[1];

                   vGarajeResult:=cFunBas.ObtenerGaraje();
                   IF vGarajeResult<>'' THEN
                     RequestOptionsForm.FltGaraje.EDITABLE := FALSE;

                   //Actualizamos el temporal de selecci¢n de clientes.
                   cFunEst.Actualiza_Clientes_Usuario;

                   //Actualizamos el la tabla paralela de uso estad¡stico a Cliente/TTOO.
                   cFunEst.Actualizar_Temporal_Clientes;

                   //Inicializaci¢n de la divisa.
                   vDivisa:= '';
                 END;

    }
    CONTROLS
    {
      { 7   ;CheckBox     ;6380 ;2750 ;440  ;440  ;ShowCaption=No;
                                                   SourceExpr=vMostrarTTOO }
      { 9   ;CheckBox     ;6380 ;3300 ;440  ;440  ;ShowCaption=No;
                                                   SourceExpr=vAgrupacionCliente }
      { 12  ;CheckBox     ;6380 ;3850 ;440  ;440  ;ShowCaption=No;
                                                   SourceExpr=vAgrupacionGeneral }
      { 15  ;CheckBox     ;6380 ;4400 ;440  ;440  ;ShowCaption=No;
                                                   NextControl=4;
                                                   SourceExpr=vSoloConActividad }
      { 16  ;Label        ;220  ;4400 ;6050 ;440  ;MultiLine=Yes;
                                                   CaptionML=ESP=Mostrar s¢lo Clientes con Actividad;
                                                   ToolTipML=ESP=Si se marca s¢lo se considerar n los clientes que han solicitado alg£n servicio. }
      { 13  ;Label        ;220  ;3850 ;6050 ;440  ;CaptionML=ESP=Mostrar Agrupaci¢n General }
      { 10  ;Label        ;220  ;3300 ;6050 ;440  ;CaptionML=ESP=Mostrar Totales del Cliente }
      { 8   ;Label        ;220  ;2750 ;6050 ;440  ;CaptionML=ESP=Mostrar TTOO }
      { 20  ;CommandButton;9680 ;330  ;440  ;440  ;Name=Seleccionar;
                                                   HorzGlue=Left;
                                                   VertGlue=Top;
                                                   CaptionML=ESP=...;
                                                   ToolTipML=ESP=Seleccionar Vehiculos;
                                                   OnPush=VAR
                                                            rSel@1103350001 : Record 7010324;
                                                            fSel@1103350002 : Form 7010431;
                                                          BEGIN

                                                            rSel.RESET;
                                                            rSel.INIT;
                                                            rSel.SETCURRENTKEY(Usuario,Cliente,TTOO);
                                                            rSel.FILTERGROUP(2);
                                                            rSel.SETRANGE(Usuario,USERID);
                                                            rSel.FILTERGROUP(0);

                                                            CLEAR(fSel);
                                                            fSel.SETTABLEVIEW(rSel);
                                                            fSel.RUN;
                                                            CLEAR(fSel);
                                                            rSel.RESET;
                                                          END;
                                                           }
      { 11  ;TextBox      ;6380 ;330  ;3300 ;440  ;SourceExpr=vSeleccion;
                                                   OnValidate=BEGIN
                                                                IF vSeleccion=vSeleccion::"Todos los Clientes" THEN
                                                                  RequestOptionsForm.Seleccionar.VISIBLE:=FALSE
                                                                ELSE
                                                                  RequestOptionsForm.Seleccionar.VISIBLE:=TRUE;
                                                              END;
                                                               }
      { 14  ;Label        ;220  ;330  ;6050 ;440  ;CaptionML=ESP=Selecci¢n Clientes/TTOO }
      { 23  ;Label        ;220  ;1430 ;6050 ;440  ;MultiLine=Yes;
                                                   CaptionML=ESP=Garaje a considerar en resultados;
                                                   ToolTipML=ESP=Si se marca s¢lo se considerar n los vehiculos que han tenido actividad }
      { 24  ;TextBox      ;6380 ;1430 ;2310 ;440  ;Name=FltGaraje;
                                                   NextControl=21;
                                                   SourceExpr=vGarajeResult;
                                                   TableRelation=Garaje.Garaje;
                                                   OnValidate=VAR
                                                                cfunbas@1103350001 : Codeunit 7010310;
                                                              BEGIN
                                                                cfunbas.TestRestringido(vGaraje);
                                                              END;
                                                               }
      { 2   ;CheckBox     ;6380 ;880  ;440  ;440  ;ShowCaption=No;
                                                   NextControl=24;
                                                   SourceExpr=vDesglose;
                                                   OnValidate=BEGIN
                                                                IF vDesglose THEN
                                                                  RequestOptionsForm.Desglose.VISIBLE:=TRUE
                                                                ELSE
                                                                  RequestOptionsForm.Desglose.VISIBLE:=FALSE;
                                                              END;
                                                               }
      { 3   ;Label        ;220  ;880  ;6050 ;440  ;CaptionML=ESP=Desglosar Clientes por n§ pax transportados }
      { 19  ;CommandButton;6710 ;880  ;440  ;440  ;Name=Desglose;
                                                   HorzGlue=Left;
                                                   VertGlue=Top;
                                                   CaptionML=ESP=...;
                                                   ToolTipML=ESP=Seleccionar Vehiculos;
                                                   OnPush=VAR
                                                            rSel@1103350001 : Record 7010324;
                                                            fSel@1103350002 : Form 7010432;
                                                          BEGIN

                                                            rSel.RESET;
                                                            rSel.INIT;
                                                            rSel.SETCURRENTKEY(Usuario,Cliente,TTOO);
                                                            rSel.FILTERGROUP(2);
                                                            rSel.SETRANGE(Usuario,USERID);
                                                            rSel.FILTERGROUP(0);

                                                            CLEAR(fSel);
                                                            fSel.SETTABLEVIEW(rSel);
                                                            fSel.RUN;
                                                            CLEAR(fSel);
                                                            rSel.RESET;
                                                          END;
                                                           }
      { 21  ;TextBox      ;6380 ;1980 ;1650 ;440  ;NextControl=7;
                                                   SourceExpr=vDivisa;
                                                   TableRelation=Currency;
                                                   OnValidate=VAR
                                                                cFunBas@1103350001 : Codeunit 7010310;
                                                              BEGIN
                                                              END;
                                                               }
      { 22  ;Label        ;220  ;1980 ;6050 ;440  ;CaptionML=ESP=C¢d. Divisa }
      { 26  ;TextBox      ;6380 ;5060 ;3960 ;440  ;Name=ff11;
                                                   SourceExpr=wFiltroFecha[1];
                                                   OnValidate=VAR
                                                                lcGestApl@1103350001 : Codeunit 1;
                                                              BEGIN
                                                                FormatoFiltro(wFiltroFecha[1]);
                                                              END;
                                                               }
      { 25  ;TextBox      ;6380 ;5610 ;3960 ;440  ;Name=ff11;
                                                   SourceExpr=wFiltroFecha[2];
                                                   OnValidate=BEGIN
                                                                FormatoFiltro(wFiltroFecha[2]);
                                                              END;
                                                               }
      { 1   ;Label        ;220  ;5060 ;6050 ;440  ;CaptionML=ESP=Periodo 1 }
      { 4   ;Label        ;220  ;5610 ;6050 ;440  ;CaptionML=ESP=Periodo 2 }
      { 5   ;Label        ;220  ;6160 ;6050 ;440  ;CaptionML=ESP=Inicio Acumulados Periodo 1 }
      { 6   ;Label        ;220  ;6710 ;6050 ;440  ;CaptionML=ESP=Inicio Acumulados Periodo 2 }
      { 17  ;TextBox      ;6380 ;6160 ;1760 ;440  ;SourceExpr=wIniAcum[1] }
      { 18  ;TextBox      ;6380 ;6710 ;1760 ;440  ;SourceExpr=wIniAcum[2];
                                                   OnValidate=BEGIN
                                                                IF (wIniAcum[1] =0D) OR (wIniAcum[2] = 0D ) THEN
                                                                  ERROR(err3)
                                                              END;
                                                               }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      Text50000@1103355000 : TextConst 'ESP=TODOS';
      Text50001@1103355001 : TextConst 'ESP=Procesando  @1@@@@@@@@@\';
      Text50002@1103355002 : TextConst 'ESP=Servicios Propios';
      Text50003@1103355003 : TextConst 'ESP=Servicios Ajenos';
      Text50004@1103355004 : TextConst 'ESP=Total';
      Text50005@1103355005 : TextConst 'ESP=Agrupaci¢n General';
      Text50006@1103355006 : TextConst 'ESP="Total "';
      LastFieldNo@1103350000 : Integer;
      FooterPrinted@1103350001 : Boolean;
      vCodEntrada@1103350002 : Code[10];
      wIniAcum@1103350003 : ARRAY [2] OF Date;
      vGaraje@1103350004 : Code[10];
      ContaTS@1103350005 : Integer;
      vFltGaraje@1103350006 : Text[10];
      vAgrupacionCliente@1103350007 : Boolean;
      vAgrupacionGeneral@1103350008 : Boolean;
      vMostrarTTOO@1103350009 : Boolean;
      vSoloConActividad@1103350010 : Boolean;
      vFltGarajeResult@1103350011 : Text[30];
      vGarajeResult@1103350012 : Code[10];
      vSeleccion@1103350013 : 'Todos los Clientes,Seg£n Selecci¢n';
      vPrecision@1103350014 : Decimal;
      vTextoNormal@1103350015 : Text[60];
      vTextoTotal@1103350016 : Text[60];
      vMostrarTotales@1103350017 : Boolean;
      vImprimirTotales@1103350018 : Boolean;
      vPrimerTexto@1103350019 : Boolean;
      vMostrarTotalGeneral@1103350020 : Boolean;
      vDesglose@1103350021 : Boolean;
      vTipoLinea@1103350022 : Text[50];
      vTipoElemento@1103350023 : Text[50];
      vDivisa@1103350024 : Code[10];
      rParametros@1103350025 : Record 7010311;
      wFiltroFecha@1103350026 : ARRAY [2] OF Text[250];
      wFact@1103350027 : ARRAY [2,2] OF Decimal;
      err1@1103350028 : TextConst 'ESP=%1 No es un filtro v lido';
      err2@1103350029 : TextConst 'ESP=%1 no puede ser superior a %2';
      err3@1103350030 : TextConst 'ESP=Los Inicios de Acumulados no pueden permanecer en blanco';
      wDiferencia@1103350031 : ARRAY [2] OF Decimal;
      "w%Dif"@1103350032 : ARRAY [2] OF Decimal;
      wServicio@1103350033 : 'Todos,Propios,Arrendados';
      wVentana1@1103350034 : Dialog;
      wTotal@1103350035 : Integer;
      wCont@1103350036 : Integer;

    PROCEDURE Inicializar@2(VAR vMatriz@1103350000 : ARRAY [10] OF Decimal);
    VAR
      i@1103350001 : Integer;
    BEGIN
      //Inicializar.
      //Las matrices tienen profundidad 10.
      FOR i:=1 TO 10 DO
        vMatriz[i]:=0;
    END;

    PROCEDURE TestActividad@9(VAR rCT@1103350000 : Record 7010324) : Boolean;
    VAR
      rIngreso@1103350001 : Record 7010414;
      lrProd@1103355000 : Record 7035392;
      rTxP@1103350002 : Record 7010365;
      vConcepto@1103350003 : 'Ingreso';
      vFinPer1@1103350004 : Date;
      vFinPer2@1103350005 : Date;
    BEGIN
      // TestActividad(rVeh: Record Vehiculo).
      // El proposito es saber si para un determinado Cliente, para unas fechas determinadas,
      // ha habido actividad.

      vFinPer1 := ObtenerFinalPeriodo(wFiltroFecha[1]);
      vFinPer2 := ObtenerFinalPeriodo(wFiltroFecha[2]);

      rTxP.RESET;
      rTxP.SETCURRENTKEY(Confirmado,"Cliente estadistico",Touroperador,"Fecha Facturacion",Garaje);

      rIngreso.RESET;
      //rIngreso.SETCURRENTKEY(Concepto,Cliente,Touroperador,Fecha,"Tipo linea",Garaje);
      rIngreso.SETCURRENTKEY(Fecha,"Cliente estadistico",Touroperador,Facturable,"N§ Factura","N§ Prefactura","Fecha registro factura");

      //Recorremos todos los vehiculos que se van a considerar en el informe.
      IF rCT.FINDSET(TRUE) THEN REPEAT
        rCT.Actividad := TRUE;
        rTxP.SETRANGE(Confirmado,TRUE);
        rTxP.SETRANGE("Cliente estadistico",rCT.Cliente);
        rTxP.SETRANGE(Touroperador,rCT.TTOO);

        //RRT.240902
        //rTxP.SETFILTER("Fecha Facturacion",'>=%1',rParametros."Fecha Inicio Acumulados");
        rTxP.SETFILTER("Fecha Facturacion",'%1..%2|%3..%4',wIniAcum[1],vFinPer1,wIniAcum[2],vFinPer2);
        IF vGarajeResult <> '' THEN
          rTxP.SETRANGE(Garaje,vGarajeResult);

        IF NOT rTxP.FINDFIRST THEN BEGIN
          rIngreso.SETRANGE(Concepto,vConcepto::Ingreso);
          rIngreso.SETRANGE("Cliente estadistico",rCT.Cliente);
          rIngreso.SETRANGE(Touroperador,rCT.TTOO);
          //RRT. 240902
          //rIngreso.SETFILTER(Fecha,'>=%1',rParametros."Fecha Inicio Acumulados");
          rIngreso.SETFILTER(Fecha,'%1..%2|%3..%4',wIniAcum[1],vFinPer1,wIniAcum[2],vFinPer2);
          IF vGarajeResult <> '' THEN
            rIngreso.SETRANGE(Garaje,vGarajeResult);

          // JPT 16/10/06 Ahora miramos tambien la produccion
          IF NOT rIngreso.FINDFIRST THEN BEGIN
            CLEAR(lrProd);
            //lrProd.SETCURRENTKEY("Cliente estadistico",Touroperador,Fecha,Facturable,"N§ Prefactura");
            lrProd.SETCURRENTKEY("Cliente estadistico", Touroperador, Fecha, "Tipo linea",
                                 "Tipo elemento", Garaje, "Tipo servicio", "Codigo servicio",
                                 "Pax Transportados", "Zona Precios", "Servicio propio", Vehiculo);
            lrProd.SETRANGE("Cliente estadistico",rCT.Cliente);
            lrProd.SETRANGE(Touroperador,rCT.TTOO);
            lrProd.SETFILTER(Fecha,'%1..%2|%3..%4',wIniAcum[1],vFinPer1,wIniAcum[2],vFinPer2);
            IF vGarajeResult <> '' THEN
              lrProd.SETRANGE(Garaje,vGarajeResult);
            IF NOT lrProd.FINDFIRST THEN
              rCT.Actividad := FALSE;
          END;

        END;
        rCT.MODIFY;

      UNTIL rCT.NEXT=0;
    END;

    PROCEDURE Desglosar@4();
    VAR
      rSel@1103350000 : Record 7010324;
      rSelAux@1103350001 : Record 7010324;
    BEGIN
      //Desglosar().
      IF vDesglose THEN BEGIN

        rSel.RESET;
        rSel.SETCURRENTKEY(Usuario,Cliente,TTOO,"N§ Desglose");
        rSel.SETRANGE(Usuario,USERID);
        rSel.SETRANGE("N§ Desglose",0);
        IF vSeleccion=vSeleccion::"Seg£n Selecci¢n" THEN
          rSel.SETRANGE(Selecci¢n,TRUE);

        IF rSel.FINDSET(TRUE) THEN REPEAT

          IF rSel."Desglose n§ 1 (Mayor que)" > 0 THEN BEGIN
            rSel."Valor Desglose 1" := 0;
            rSel."Valor Desglose 2" := rSel."Desglose n§ 1 (Mayor que)";
            rSel.MODIFY;

            rSelAux.INIT;
            rSelAux.Usuario            := USERID;
            rSelAux.Cliente            := rSel.Cliente;
            rSelAux.TTOO               := rSel.TTOO;
            rSelAux."N§ Desglose"      := 1;
            rSelAux."Valor Desglose 1" := rSel."Desglose n§ 1 (Mayor que)" + 1;
            rSelAux."Valor Desglose 2" := 999;
            rSelAux.Selecci¢n          := TRUE;
            rSelAux.INSERT;
          END;

          IF rSel."Desglose n§ 2 (Mayor que)" > 0 THEN BEGIN

            rSelAux."Valor Desglose 2" := rSel."Desglose n§ 2 (Mayor que)";
            rSelAux.MODIFY;

            rSelAux.INIT;
            rSelAux.Usuario            := USERID;
            rSelAux.Cliente            := rSel.Cliente;
            rSelAux.TTOO               := rSel.TTOO;
            rSelAux."N§ Desglose"      := 2;
            rSelAux."Valor Desglose 1" := rSel."Desglose n§ 2 (Mayor que)" + 1;
            rSelAux."Valor Desglose 2" := 999;
            rSelAux.Selecci¢n          := TRUE;
            rSelAux.INSERT;
          END;

        UNTIL rSel.NEXT=0;

        COMMIT;
      END;
    END;

    PROCEDURE fTextoNormal@5() : Text[60];
    BEGIN
      //fTextoNormal
      IF vTextoNormal = '$$' THEN BEGIN
        ClienteTTOO.CALCFIELDS("Nombre TTOO");
        vTextoNormal := ClienteTTOO."Nombre TTOO";
        IF vDesglose AND (ClienteTTOO."Valor Desglose 2" > 0) THEN BEGIN
          vTextoNormal := vTextoNormal + ' ('+ FORMAT(ClienteTTOO."Valor Desglose 1")+'..';

          IF (ClienteTTOO."Valor Desglose 2") <= 900 THEN
            vTextoNormal := vTextoNormal + FORMAT(ClienteTTOO."Valor Desglose 2")
          ELSE
            vTextoNormal := vTextoNormal + '   ';

          vTextoNormal := vTextoNormal + ')';
        END;
      END
      ELSE
        vTextoNormal := '';

      EXIT(vTextoNormal);
    END;

    PROCEDURE fTextoTotal@6() : Text[60];
    BEGIN
      //fTextoTotal
      IF vTextoTotal =  '$$' THEN BEGIN
        ClienteTTOO.CALCFIELDS("Nombre Cliente");
        vTextoTotal := Text50006 + ClienteTTOO."Nombre Cliente"
      END
      ELSE
        vTextoTotal := '';

      EXIT(vTextoTotal);
    END;

    PROCEDURE CalculaMediaPax@15(pPax@1103350000 : Decimal;pViajes@1103350001 : Decimal) : Decimal;
    VAR
      vResult@1103350002 : Integer;
    BEGIN
      vResult := 0;
      IF pViajes <> 0 THEN
        vResult := ROUND(pPax / pViajes,1);
      EXIT(vResult);
    END;

    PROCEDURE Calcula@3(pwCliente@1103350000 : Code[20];pwTTOO@1103350001 : Code[20];pwCodTipoServicio@1103350002 : Code[10];pwPeriodo@1103350003 : Integer;pwServicio@1103350004 : 'Todos,Propios,Arrendados';prClienteTTOO@1103350005 : Record 7010324);
    VAR
      lrCli@1103350006 : Record 7010323;
      ERROR_INCONSISTENCIA@1103350007 : TextConst 'ESP=Inconsitencia detectada en la selecci¢n de vehiculos';
      vMesCantFact@1103350008 : Decimal;
      cFunBas@1103350009 : Codeunit 7010310;
      vAcuCantFact@1103350010 : Decimal;
      lwFechaHasta@1103350011 : Date;
    BEGIN
      // Calcula
      // Calcula la facturacion en el periodo indicado ,filtrado por el cliente y ttoo indicado, en el codigo de servicio
      // se¤alado y lo colocal en periodo 1 o 2 segun el parametro pwPeriodo
      // El parametro pwProveedor no pasa en realidad ningun proveedor sino las condiciones para que sea blanco o no
      // eso es '<>%' o '=%'
      // pwDesglosa indica si debemos desglosar por paxes
      lrCli.RESET;
      lrCli.SETCURRENTKEY(Cliente,TTOO);
      IF pwCliente <> '' THEN
        lrCli.SETRANGE("Filtro Cliente",pwCliente);
      IF pwTTOO <> '' THEN
        lrCli.SETRANGE("Filtro TTOO",pwTTOO);
      IF wFiltroFecha[pwPeriodo] <> '' THEN
        lrCli.SETFILTER("Filtro Fecha",wFiltroFecha[pwPeriodo]);

      IF vTipoLinea<>'' THEN
        lrCli.SETFILTER("Filtro Tipo Linea",vTipoLinea);

      IF vTipoElemento<>'' THEN
        lrCli.SETFILTER("Filtro Tipo Elemento",vTipoElemento);

      IF vGarajeResult<>'' THEN
        lrCli.SETRANGE("Filtro Garaje Resultados",vGarajeResult);

      IF pwCodTipoServicio <> '' THEN
        lrCli.SETRANGE("Filtro Tipo Servicio",pwCodTipoServicio);

      // Filtra segun sea el servicio propio o arrendado a otra compa¤ia
      CASE pwServicio OF
        pwServicio::Propios:    lrCli.SETRANGE("Servicios propios",TRUE);
        pwServicio::Arrendados: lrCli.SETRANGE("Servicios propios",FALSE);
      END;

      //Por si utilizamos el desglose de Cliente TTOO por Pax Transportado.
      IF vDesglose  AND  (prClienteTTOO."Valor Desglose 2" > 0) THEN
        //lrCli.SETRANGE("Filtro Pax Transportado",prClienteTTOO."Valor Desglose 1",
                                                //prClienteTTOO."Valor Desglose 2");
        lrCli.SETFILTER("Filtro Pax Transportado",'(%1..%2)|(%3..%4)',
                                     prClienteTTOO."Valor Desglose 1",
                                     prClienteTTOO."Valor Desglose 2",
                                    -prClienteTTOO."Valor Desglose 2",
                                    -prClienteTTOO."Valor Desglose 1");


      IF NOT lrCli.FINDFIRST THEN
        ERROR(ERROR_INCONSISTENCIA);

      vMesCantFact := lrCli.TotalCantidadFacturada;

      IF vDivisa <> '' THEN
        vMesCantFact := cFunBas.DLaDESinRedondeo(vMesCantFact,vDivisa,TODAY);

      //..................
      //Calculamos los acumulados anuales.
      lwFechaHasta := lrCli.GETRANGEMAX("Filtro Fecha");
      IF wFiltroFecha[pwPeriodo] <> '' THEN BEGIN
        lrCli.SETRANGE("Filtro Fecha", wIniAcum[pwPeriodo] , lwFechaHasta);

        vAcuCantFact := lrCli.TotalCantidadFacturada;
        IF vDivisa <> '' THEN
          vAcuCantFact := cFunBas.DLaDESinRedondeo(vAcuCantFact,vDivisa,TODAY);

      END;

      // Asigna las cantidades de periodo y acumulados
      IF wFiltroFecha[pwPeriodo] <> '' THEN BEGIN
        wFact[pwPeriodo,1] := vMesCantFact;
        wFact[pwPeriodo,2] := vAcuCantFact;
      END;
    END;

    PROCEDURE CalculaTotal@11(pwCliente@1103350000 : Code[20];pwCodTipoServicio@1103350001 : Code[10];pwPeriodo@1103350002 : Integer;pwServicio@1103350003 : 'Todos,Propios,Arrendados');
    VAR
      lrClienteTTOO2@1103350004 : Record 7010324;
      lwTotalFact@1103350005 : ARRAY [2] OF Decimal;
    BEGIN
      CLEAR(lwTotalFact);
      CASE vSeleccion OF
        vSeleccion::"Todos los Clientes": Calcula(pwCliente,'',pwCodTipoServicio,pwPeriodo,pwServicio,lrClienteTTOO2);
        vSeleccion::"Seg£n Selecci¢n": BEGIN
          lrClienteTTOO2.RESET;
          lrClienteTTOO2.COPY(ClienteTTOO);
          IF pwCliente <> '' THEN
            lrClienteTTOO2.SETRANGE(Cliente,pwCliente);
          IF lrClienteTTOO2.FINDSET THEN
            REPEAT
              Calcula(lrClienteTTOO2.Cliente,lrClienteTTOO2.TTOO,pwCodTipoServicio,pwPeriodo,pwServicio,lrClienteTTOO2);
              lwTotalFact[1] += wFact[pwPeriodo,1];
              lwTotalFact[2] += wFact[pwPeriodo,2];
            UNTIL lrClienteTTOO2.NEXT = 0;
          wFact[pwPeriodo,1] := lwTotalFact[1];
          wFact[pwPeriodo,2] := lwTotalFact[2];
        END;
      END;
    END;

    PROCEDURE FormatoFiltro@7(VAR TextFiltroFech@1103350000 : Text[250]);
    VAR
      wFecha1@1103350001 : Date;
      wFecha2@1103350002 : Date;
      PosicionCadena@1103350003 : Integer;
      i@1103350004 : Integer;
      lcGestApl@1103350005 : Codeunit 1;
      Text1@1103350006 : Text[250];
      Text2@1103350007 : Text[250];
    BEGIN
      lcGestApl.MakeDateFilter(TextFiltroFech);

      PosicionCadena := STRPOS(TextFiltroFech,'..');

      IF PosicionCadena = 0 THEN BEGIN
        IF EVALUATE(wFecha1,TextFiltroFech) THEN
          TextFiltroFech := FORMAT(wFecha1)
        ELSE
          ERROR(err1,TextFiltroFech);
      END
      ELSE
      BEGIN
        Text1 := COPYSTR(TextFiltroFech,1,PosicionCadena - 1);
        Text2 := COPYSTR(TextFiltroFech,PosicionCadena + 2, STRLEN(TextFiltroFech));
        IF (EVALUATE(wFecha1,Text1)) AND (EVALUATE(wFecha2,Text2))   THEN BEGIN
          TextFiltroFech := FORMAT(wFecha1)+'..'+FORMAT(wFecha2);
          IF wFecha1 > wFecha2 THEN
            ERROR(err2,wFecha1,wFecha2);
        END
        ELSE
          ERROR(err1,TextFiltroFech);

      END;
    END;

    PROCEDURE CalcDif@16();
    BEGIN
      // CalcDif
      // Calcula las diferencias entre periodos, as¡ como el % de dicha diferencia

      wDiferencia[1] := wFact[1,1] - wFact[2,1];
      wDiferencia[2] := wFact[1,2] - wFact[2,2];

      CLEAR("w%Dif");
      IF wFact[2,1] <>0 THEN
        "w%Dif"[1] :=wDiferencia[1] * 100 / wFact[2,1]
      ELSE
        IF wFact[1,1] <>0 THEN
          "w%Dif"[1] :=wDiferencia[1] * 100 / wFact[1,1];

      IF wFact[2,2] <>0 THEN
        "w%Dif"[2] :=wDiferencia[2] * 100 / wFact[2,2]
      ELSE
        IF wFact[1,2] <>0 THEN
          "w%Dif"[2] :=wDiferencia[2] * 100 / wFact[1,2];
    END;

    PROCEDURE ObtenerFinalPeriodo@1(pStr@1103350000 : Text[250]) : Date;
    VAR
      vPos@1103350001 : Integer;
      vResult@1103350002 : Date;
    BEGIN
      //ObtenerFinalPeriodo.
      vPos  := STRPOS(pStr,'..')+2;
      EVALUATE(vResult,COPYSTR(pStr,vPos,10));
      EXIT(vResult);
    END;

    BEGIN
    {
      wFact tiene dos dimensiones la primera sirve para difereciar el facturado en el primer y el segundo periodo
      la segunda para el acumulado en los dos periodos
      wDiferencia y "w%Dif" tambien tienen dos dimensiones, una para las diferencias entre los dos periodos y la otra para las
      diferencias de acumulados

      Periodo actual   = wFiltroFecha[1]
      Periodo anterior = wFiltroFecha[2]
      -----------
      RRT 250902 - Modificado por defecto en la opci¢n "Mostrar s¢lo clientes con actividad".
    }
    END.
  }
  RDLDATA
  {
  }
}
