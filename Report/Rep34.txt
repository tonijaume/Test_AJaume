OBJECT Report 34 Change Payment Tolerance
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=NAVW16.00.01;
  }
  PROPERTIES
  {
    Permissions=TableData 4=rm,
                TableData 21=rm,
                TableData 25=rm,
                TableData 98=rm;
    CaptionML=[ENU=Change Payment Tolerance;
               ESP=Cambiar tolerancia pagos];
    ProcessingOnly=Yes;
    OnPostReport=VAR
                   ChangeLogMGT@1002 : Codeunit 423;
                   xRecRef@1000 : RecordRef;
                   RecRef@1001 : RecordRef;
                 BEGIN
                   IF AllCurrencies THEN BEGIN
                     IF Currency.FIND('-') THEN
                       REPEAT
                         xRecRef.GETTABLE(Currency);
                         IF Currency."Payment Tolerance %" <> "Payment Tolerance %" THEN
                           Currency."Payment Tolerance %" := "Payment Tolerance %";
                         IF Currency."Max. Payment Tolerance Amount" <> "Max. Pmt. Tolerance Amount" THEN
                           Currency."Max. Payment Tolerance Amount" := "Max. Pmt. Tolerance Amount";
                         Currency."Max. Payment Tolerance Amount" := ROUND(
                           Currency."Max. Payment Tolerance Amount",Currency."Amount Rounding Precision");
                         Currency.MODIFY;
                         RecRef.GETTABLE(Currency);
                         ChangeLogMGT.LogModification(RecRef,xRecRef);
                       UNTIL Currency.NEXT = 0;
                     GLSetup.GET;
                     xRecRef.GETTABLE(GLSetup);
                     IF GLSetup."Payment Tolerance %" <> "Payment Tolerance %" THEN
                       GLSetup."Payment Tolerance %" := "Payment Tolerance %";
                     IF GLSetup."Max. Payment Tolerance Amount" <> "Max. Pmt. Tolerance Amount" THEN
                       GLSetup."Max. Payment Tolerance Amount" := "Max. Pmt. Tolerance Amount";
                     GLSetup."Max. Payment Tolerance Amount" := ROUND(
                       GLSetup."Max. Payment Tolerance Amount",GLSetup."Amount Rounding Precision");
                     GLSetup.MODIFY;
                     RecRef.GETTABLE(GLSetup);
                     ChangeLogMGT.LogModification(RecRef,xRecRef);
                   END ELSE BEGIN
                     IF CurrencyCode = '' THEN BEGIN
                       GLSetup.GET;
                       xRecRef.GETTABLE(GLSetup);
                       AmountRoundingPrecision := GLSetup."Amount Rounding Precision";
                       IF GLSetup."Payment Tolerance %" <> "Payment Tolerance %" THEN
                         GLSetup."Payment Tolerance %" := "Payment Tolerance %";
                       IF GLSetup."Max. Payment Tolerance Amount" <> "Max. Pmt. Tolerance Amount" THEN
                         GLSetup."Max. Payment Tolerance Amount" := "Max. Pmt. Tolerance Amount";
                       GLSetup."Max. Payment Tolerance Amount" := ROUND(
                         GLSetup."Max. Payment Tolerance Amount",GLSetup."Amount Rounding Precision");
                       GLSetup.MODIFY;
                       RecRef.GETTABLE(GLSetup);
                       ChangeLogMGT.LogModification(RecRef,xRecRef);
                     END ELSE IF CurrencyCode <> '' THEN BEGIN
                       Currency.GET(CurrencyCode);
                       xRecRef.GETTABLE(Currency);
                       AmountRoundingPrecision := Currency."Amount Rounding Precision";
                       IF Currency."Payment Tolerance %" <> "Payment Tolerance %" THEN
                         Currency."Payment Tolerance %" := "Payment Tolerance %";
                       IF Currency."Max. Payment Tolerance Amount" <> "Max. Pmt. Tolerance Amount" THEN
                         Currency."Max. Payment Tolerance Amount" := "Max. Pmt. Tolerance Amount";
                       Currency."Max. Payment Tolerance Amount" := ROUND(
                         Currency."Max. Payment Tolerance Amount",Currency."Amount Rounding Precision");
                       Currency.MODIFY;
                       RecRef.GETTABLE(Currency);
                       ChangeLogMGT.LogModification(RecRef,xRecRef);
                     END;
                   END;

                   IF AllCurrencies THEN BEGIN
                     IF CONFIRM(Text001,TRUE) THEN BEGIN
                       IF Currency.FIND('-') THEN
                         REPEAT
                           AmountRoundingPrecision := Currency."Amount Rounding Precision";
                           CurrencyCode := Currency.Code;
                           ChangeCustLedgEntries;
                           ChangeVendLedgEntries;
                         UNTIL Currency.NEXT = 0;
                       CurrencyCode := '';
                       GLSetup.GET;
                       AmountRoundingPrecision := GLSetup."Amount Rounding Precision";
                       ChangeCustLedgEntries;
                       ChangeVendLedgEntries;
                     END;
                   END ELSE BEGIN
                     IF CONFIRM(Text001,TRUE) THEN BEGIN
                       ChangeCustLedgEntries;
                       ChangeVendLedgEntries;
                     END;
                   END;
                 END;

  }
  DATAITEMS
  {
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=5280;
      Height=2090;
    }
    CONTROLS
    {
      { 1   ;TextBox      ;3410 ;550  ;1700 ;440  ;Name=Currency Code;
                                                   Enabled=Yes;
                                                   CaptionML=[ENU=Currency Code;
                                                              ESP=C¢d. divisa];
                                                   SourceExpr=CurrencyCode;
                                                   TableRelation=Currency;
                                                   OnValidate=BEGIN
                                                                IF NOT AllCurrencies THEN
                                                                  IF CurrencyCode = '' THEN BEGIN
                                                                    GLSetup.GET;
                                                                    "Payment Tolerance %" := GLSetup."Payment Tolerance %";
                                                                    "Max. Pmt. Tolerance Amount" := GLSetup."Max. Payment Tolerance Amount";
                                                                    DecimalPlaces := CheckApplnRounding(GLSetup."Amount Decimal Places");
                                                                    IF NOT ISSERVICETIER THEN
                                                                      RequestOptionsForm."Max. Pmt. Tolerance Amount".DECIMALPLACESMAX(DecimalPlaces);
                                                                  END ELSE BEGIN
                                                                    Currency.GET(CurrencyCode);
                                                                    "Payment Tolerance %" := Currency."Payment Tolerance %";
                                                                    "Max. Pmt. Tolerance Amount" := Currency."Max. Payment Tolerance Amount";
                                                                    DecimalPlaces := CheckApplnRounding(Currency."Amount Decimal Places");
                                                                    IF NOT ISSERVICETIER THEN
                                                                      RequestOptionsForm."Max. Pmt. Tolerance Amount".DECIMALPLACESMAX(DecimalPlaces);
                                                                  END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              NewCurrencyCode := CurrencyCode;
                                                              Currencies.LOOKUPMODE := TRUE;
                                                              IF Currencies.RUNMODAL = ACTION::LookupOK THEN
                                                                Currencies.GetCurrency(CurrencyCode);
                                                              CLEAR(Currencies);
                                                              IF CurrencyCode = '' THEN BEGIN
                                                                GLSetup.GET;
                                                                "Payment Tolerance %" := GLSetup."Payment Tolerance %";
                                                                "Max. Pmt. Tolerance Amount" := GLSetup."Max. Payment Tolerance Amount";
                                                              END ELSE BEGIN
                                                                Currency.GET(CurrencyCode);
                                                                "Payment Tolerance %" := Currency."Payment Tolerance %";
                                                                "Max. Pmt. Tolerance Amount" := Currency."Max. Payment Tolerance Amount";
                                                              END;
                                                            END;
                                                             }
      { 2   ;Label        ;0    ;550  ;3300 ;440  ;ParentControl=1 }
      { 3   ;TextBox      ;3410 ;1100 ;1700 ;440  ;Enabled=Yes;
                                                   CaptionML=[ENU=Payment Tolerance %;
                                                              ESP=% Tolerancia pago];
                                                   DecimalPlaces=0:5;
                                                   SourceExpr="Payment Tolerance %" }
      { 4   ;Label        ;0    ;1100 ;3300 ;440  ;ParentControl=3 }
      { 5   ;TextBox      ;3410 ;1650 ;1700 ;440  ;Name=Max. Pmt. Tolerance Amount;
                                                   Enabled=Yes;
                                                   CaptionML=[ENU=Max. Pmt. Tolerance Amount;
                                                              ESP=Importe m x. tolerancia pagos];
                                                   DecimalPlaces=0:5;
                                                   SourceExpr="Max. Pmt. Tolerance Amount";
                                                   OnValidate=BEGIN
                                                                IF ISSERVICETIER THEN BEGIN
                                                                  IF AllCurrencies THEN BEGIN
                                                                    DecimalPlaces := 5;
                                                                    FormatString := Text002 + '0:5' + Text003;
                                                                  END ELSE BEGIN
                                                                    IF Currency.Code <> '' THEN BEGIN
                                                                      Currency.GET(Currency.Code);
                                                                      DecimalPlaces := CheckApplnRounding(Currency."Amount Decimal Places");
                                                                      FormatString := Text002 + Currency."Amount Decimal Places" + Text003;
                                                                    END ELSE BEGIN
                                                                      GLSetup.GET;
                                                                      DecimalPlaces := CheckApplnRounding(GLSetup."Amount Decimal Places");
                                                                      FormatString := Text002 + GLSetup."Amount Decimal Places" + Text003;
                                                                    END;
                                                                  END;
                                                                  TextFormat := FORMAT("Max. Pmt. Tolerance Amount",0,FormatString);
                                                                  TextInput := FORMAT("Max. Pmt. Tolerance Amount");
                                                                  IF STRLEN(TextFormat) < STRLEN(TextInput) THEN
                                                                    ERROR(Text004,DecimalPlaces);
                                                                END;
                                                              END;
                                                               }
      { 6   ;Label        ;0    ;1650 ;3300 ;440  ;ParentControl=5 }
      { 8   ;Label        ;0    ;0    ;3300 ;440  ;ParentControl=7 }
      { 7   ;CheckBox     ;3410 ;0    ;440  ;440  ;ShowCaption=No;
                                                   CaptionML=[ENU=All Currencies;
                                                              ESP=Todas divisas];
                                                   SourceExpr=AllCurrencies;
                                                   OnValidate=BEGIN
                                                                IF AllCurrencies THEN BEGIN
                                                                  CurrencyCode := '';
                                                                  "Payment Tolerance %" := 0;
                                                                  "Max. Pmt. Tolerance Amount" := 0;
                                                                  RequestOptionsForm."Currency Code".ENABLED := FALSE;
                                                                  IF NOT ISSERVICETIER THEN
                                                                    RequestOptionsForm."Max. Pmt. Tolerance Amount".DECIMALPLACESMAX(5);
                                                                END ELSE BEGIN
                                                                  RequestOptionsForm."Currency Code".ENABLED := TRUE;
                                                                  CurrencyCode := '';
                                                                  "Payment Tolerance %" := GLSetup."Payment Tolerance %";
                                                                  "Max. Pmt. Tolerance Amount" := GLSetup."Max. Payment Tolerance Amount";
                                                                  DecimalPlaces := CheckApplnRounding(GLSetup."Amount Decimal Places");
                                                                  IF NOT ISSERVICETIER THEN
                                                                    RequestOptionsForm."Max. Pmt. Tolerance Amount".DECIMALPLACESMAX(DecimalPlaces);
                                                                END;
                                                              END;
                                                               }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnInit=BEGIN
               "Currency CodeEnable" := TRUE;
             END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             ESP=Opciones] }

      { 7   ;2   ;Field     ;
                  CaptionML=[ENU=All Currencies;
                             ESP=Todas divisas];
                  SourceExpr=AllCurrencies;
                  OnValidate=BEGIN
                               IF AllCurrencies THEN BEGIN
                                 CurrencyCode := '';
                                 "Payment Tolerance %" := 0;
                                 "Max. Pmt. Tolerance Amount" := 0;
                                 "Currency CodeEnable" := FALSE;
                                 IF NOT ISSERVICETIER THEN;
                               END ELSE BEGIN
                                 "Currency CodeEnable" := TRUE;
                                 CurrencyCode := '';
                                 "Payment Tolerance %" := GLSetup."Payment Tolerance %";
                                 "Max. Pmt. Tolerance Amount" := GLSetup."Max. Payment Tolerance Amount";
                                 DecimalPlaces := CheckApplnRounding(GLSetup."Amount Decimal Places");
                                 IF NOT ISSERVICETIER THEN;
                               END;
                             END;
                              }

      { 1   ;2   ;Field     ;
                  Name=Currency Code;
                  CaptionML=[ENU=Currency Code;
                             ESP=C¢d. divisa];
                  SourceExpr=CurrencyCode;
                  TableRelation=Currency;
                  Enabled="Currency CodeEnable";
                  OnValidate=BEGIN
                               IF NOT AllCurrencies THEN
                                 IF CurrencyCode = '' THEN BEGIN
                                   GLSetup.GET;
                                   "Payment Tolerance %" := GLSetup."Payment Tolerance %";
                                   "Max. Pmt. Tolerance Amount" := GLSetup."Max. Payment Tolerance Amount";
                                   DecimalPlaces := CheckApplnRounding(GLSetup."Amount Decimal Places");
                                   IF NOT ISSERVICETIER THEN;
                                 END ELSE BEGIN
                                   Currency.GET(CurrencyCode);
                                   "Payment Tolerance %" := Currency."Payment Tolerance %";
                                   "Max. Pmt. Tolerance Amount" := Currency."Max. Payment Tolerance Amount";
                                   DecimalPlaces := CheckApplnRounding(Currency."Amount Decimal Places");
                                   IF NOT ISSERVICETIER THEN;
                                 END;
                             END;

                  OnLookup=BEGIN
                             NewCurrencyCode := CurrencyCode;
                             Currencies.LOOKUPMODE := TRUE;
                             IF Currencies.RUNMODAL = ACTION::LookupOK THEN
                               Currencies.GetCurrency(CurrencyCode);
                             CLEAR(Currencies);
                             IF CurrencyCode = '' THEN BEGIN
                               GLSetup.GET;
                               "Payment Tolerance %" := GLSetup."Payment Tolerance %";
                               "Max. Pmt. Tolerance Amount" := GLSetup."Max. Payment Tolerance Amount";
                             END ELSE BEGIN
                               Currency.GET(CurrencyCode);
                               "Payment Tolerance %" := Currency."Payment Tolerance %";
                               "Max. Pmt. Tolerance Amount" := Currency."Max. Payment Tolerance Amount";
                             END;
                           END;
                            }

      { 3   ;2   ;Field     ;
                  CaptionML=[ENU=Payment Tolerance %;
                             ESP=% Tolerancia pago];
                  DecimalPlaces=0:5;
                  SourceExpr="Payment Tolerance %";
                  Enabled=TRUE }

      { 5   ;2   ;Field     ;
                  Name=Max. Pmt. Tolerance Amount;
                  CaptionML=[ENU=Max. Pmt. Tolerance Amount;
                             ESP=Importe m x. tolerancia pagos];
                  DecimalPlaces=0:5;
                  SourceExpr="Max. Pmt. Tolerance Amount";
                  Enabled=TRUE;
                  OnValidate=BEGIN
                               IF ISSERVICETIER THEN BEGIN
                                 IF AllCurrencies THEN BEGIN
                                   DecimalPlaces := 5;
                                   FormatString := Text002 + '0:5' + Text003;
                                 END ELSE BEGIN
                                   IF Currency.Code <> '' THEN BEGIN
                                     Currency.GET(Currency.Code);
                                     DecimalPlaces := CheckApplnRounding(Currency."Amount Decimal Places");
                                     FormatString := Text002 + Currency."Amount Decimal Places" + Text003;
                                   END ELSE BEGIN
                                     GLSetup.GET;
                                     DecimalPlaces := CheckApplnRounding(GLSetup."Amount Decimal Places");
                                     FormatString := Text002 + GLSetup."Amount Decimal Places" + Text003;
                                   END;
                                 END;
                                 TextFormat := FORMAT("Max. Pmt. Tolerance Amount",0,FormatString);
                                 TextInput := FORMAT("Max. Pmt. Tolerance Amount");
                                 IF STRLEN(TextFormat) < STRLEN(TextInput) THEN
                                   ERROR(Text004,DecimalPlaces);
                               END;
                             END;
                              }

    }
  }
  CODE
  {
    VAR
      Currency@1003 : Record 4;
      GLSetup@1004 : Record 98;
      Currencies@1006 : Form 5;
      CurrencyCode@1007 : Code[10];
      NewCurrencyCode@1002 : Code[10];
      "Payment Tolerance %"@1001 : Decimal;
      "Max. Pmt. Tolerance Amount"@1000 : Decimal;
      Text001@1005 : TextConst 'ENU=Do you want to change all open entries for every customer and vendor that are not blocked;ESP=¨Quiere cambiar todos los movs. pend. de cada cliente y proveedor que no estn bloqueados?';
      AmountRoundingPrecision@1008 : Decimal;
      DecimalPlaces@1010 : Integer;
      AllCurrencies@1009 : Boolean;
      FormatString@1014 : Text[80];
      TextFormat@1015 : Text[250];
      TextInput@1016 : Text[250];
      Text002@1012 : TextConst 'ENU=<Precision,;ESP=<Precision,';
      Text003@1013 : TextConst 'ENU=><Standard Format,0>;ESP=><Standard Format,0>';
      Text004@1017 : TextConst 'ENU=The field can have a maximum of %1 decimal places.;ESP=El campo puede tener %1 decimales como m ximo.';
      "Currency CodeEnable"@19025310 : Boolean INDATASET;

    PROCEDURE CheckApplnRounding@4(AmountDecimalPlaces@1000 : Text[5]) : Integer;
    VAR
      ColonPlace@1001 : Integer;
      ReturnNumber@1002 : Integer;
      OK@1003 : Boolean;
      TempAmountDecimalPlaces@1004 : Text[5];
    BEGIN

      ColonPlace := STRPOS(AmountDecimalPlaces,':');

      IF ColonPlace = 0 THEN BEGIN
        OK := EVALUATE(ReturnNumber,AmountDecimalPlaces);
        IF OK THEN
          EXIT(ReturnNumber);
      END ELSE BEGIN
        TempAmountDecimalPlaces := COPYSTR(AmountDecimalPlaces,ColonPlace + 1,ColonPlace + 1);
        OK := EVALUATE(ReturnNumber,TempAmountDecimalPlaces);
        IF OK THEN
          EXIT(ReturnNumber);
      END;
    END;

    LOCAL PROCEDURE ChangeCustLedgEntries@1();
    VAR
      Customer@1001 : Record 18;
      CustLedgEntry@1000 : Record 21;
      RecRef@1005 : RecordRef;
      xRecRef@1004 : RecordRef;
      ChangeLogMgt@1006 : Codeunit 423;
      "New Payment Tolerance %"@1003 : Decimal;
      "New Max. Pmt. Tolerance Amount"@1002 : Decimal;
    BEGIN
      Customer.SETCURRENTKEY("No.");
      Customer.LOCKTABLE;
      IF NOT Customer.FIND('-')THEN
        EXIT;

      REPEAT
        IF NOT Customer."Block Payment Tolerance" THEN BEGIN
          CustLedgEntry.SETCURRENTKEY("Customer No.",Open);
          CustLedgEntry.SETRANGE("Customer No.",Customer."No.");
          CustLedgEntry.SETRANGE(Open,TRUE);

          CustLedgEntry.SETFILTER("Document Type",'%1|%2',
          CustLedgEntry."Document Type"::Invoice,
          CustLedgEntry."Document Type"::"Credit Memo");

          CustLedgEntry.SETRANGE("Currency Code",CurrencyCode);
          "New Payment Tolerance %" := "Payment Tolerance %";
          "New Max. Pmt. Tolerance Amount" := "Max. Pmt. Tolerance Amount";

          CustLedgEntry.LOCKTABLE;
          IF CustLedgEntry.FIND('-') THEN BEGIN
            REPEAT
              xRecRef.GETTABLE(CustLedgEntry);
              CustLedgEntry.CALCFIELDS("Remaining Amount");
              CustLedgEntry."Max. Payment Tolerance" :=
              ROUND(("New Payment Tolerance %" * CustLedgEntry."Remaining Amount" / 100),AmountRoundingPrecision);
              IF (CustLedgEntry."Max. Payment Tolerance" = 0) AND
                ("New Max. Pmt. Tolerance Amount" <> 0) OR
                ((ABS(CustLedgEntry."Max. Payment Tolerance") > "New Max. Pmt. Tolerance Amount") AND
                (CustLedgEntry."Max. Payment Tolerance" <> 0) AND
                ("New Max. Pmt. Tolerance Amount" <> 0))
              THEN BEGIN
                IF CustLedgEntry."Document Type" = CustLedgEntry."Document Type"::Invoice THEN
                  CustLedgEntry."Max. Payment Tolerance" :=
                    ROUND("New Max. Pmt. Tolerance Amount",AmountRoundingPrecision)
                ELSE
                  CustLedgEntry."Max. Payment Tolerance" :=
                    ROUND(-"New Max. Pmt. Tolerance Amount",AmountRoundingPrecision);
              END;
              IF ABS(CustLedgEntry."Remaining Amount") < ABS(CustLedgEntry."Max. Payment Tolerance") THEN
                CustLedgEntry."Max. Payment Tolerance" := CustLedgEntry."Remaining Amount";
              CustLedgEntry.MODIFY;
              RecRef.GETTABLE(CustLedgEntry);
              ChangeLogMgt.LogModification(RecRef,xRecRef);
            UNTIL CustLedgEntry.NEXT = 0;
          END;
        END;
      UNTIL Customer.NEXT = 0;
    END;

    LOCAL PROCEDURE ChangeVendLedgEntries@2();
    VAR
      Vendor@1001 : Record 23;
      VendLedgEntry@1000 : Record 25;
      RecRef@1006 : RecordRef;
      xRecRef@1005 : RecordRef;
      ChangeLogMgt@1004 : Codeunit 423;
      "New Payment Tolerance %"@1003 : Decimal;
      "New Max. Pmt. Tolerance Amount"@1002 : Decimal;
    BEGIN
      Vendor.SETCURRENTKEY("No.");
      Vendor.LOCKTABLE;
      IF NOT Vendor.FIND('-')THEN
        EXIT;
      REPEAT
        IF NOT Vendor."Block Payment Tolerance" THEN BEGIN
          VendLedgEntry.SETCURRENTKEY("Vendor No.",Open);
          VendLedgEntry.SETRANGE("Vendor No.",Vendor."No.");

          VendLedgEntry.SETRANGE(Open,TRUE);

          VendLedgEntry.SETFILTER("Document Type",'%1|%2',
          VendLedgEntry."Document Type"::Invoice,
          VendLedgEntry."Document Type"::"Credit Memo");

          VendLedgEntry.SETRANGE("Currency Code",CurrencyCode);
          "New Payment Tolerance %" := "Payment Tolerance %";
          "New Max. Pmt. Tolerance Amount" := "Max. Pmt. Tolerance Amount";

          VendLedgEntry.LOCKTABLE;
          IF VendLedgEntry.FIND('-') THEN BEGIN
            REPEAT
              xRecRef.GETTABLE(VendLedgEntry);
              VendLedgEntry.CALCFIELDS("Remaining Amount");
              VendLedgEntry."Max. Payment Tolerance" :=
              ROUND(("New Payment Tolerance %" * VendLedgEntry."Remaining Amount" / 100),AmountRoundingPrecision);
              IF (VendLedgEntry."Max. Payment Tolerance" = 0) AND
                ("New Max. Pmt. Tolerance Amount" <> 0) OR
                ((ABS(VendLedgEntry."Max. Payment Tolerance") > "New Max. Pmt. Tolerance Amount") AND
                (VendLedgEntry."Max. Payment Tolerance" <> 0) AND
                ("New Max. Pmt. Tolerance Amount" <> 0))
              THEN BEGIN
                IF VendLedgEntry."Document Type" = VendLedgEntry."Document Type"::Invoice THEN
                  VendLedgEntry."Max. Payment Tolerance" :=
                    ROUND(-"New Max. Pmt. Tolerance Amount",AmountRoundingPrecision)
                ELSE
                  VendLedgEntry."Max. Payment Tolerance" :=
                    ROUND("New Max. Pmt. Tolerance Amount",AmountRoundingPrecision);
              END;
              IF ABS(VendLedgEntry."Remaining Amount") < ABS(VendLedgEntry."Max. Payment Tolerance") THEN
                VendLedgEntry."Max. Payment Tolerance" := VendLedgEntry."Remaining Amount";
              VendLedgEntry.MODIFY;
              RecRef.GETTABLE(VendLedgEntry);
              ChangeLogMgt.LogModification(RecRef,xRecRef);
            UNTIL VendLedgEntry.NEXT = 0;
          END;
        END;
      UNTIL Vendor.NEXT = 0;
    END;

    PROCEDURE SetCurrency@3(NewCurrency@1000 : Record 4);
    BEGIN
      IF ISSERVICETIER THEN BEGIN
        PageSetCurrency(NewCurrency);
        EXIT;
      END;
      Currency := NewCurrency;

      IF Currency.Code <> ''THEN BEGIN
        Currency.GET(Currency.Code);
        CurrencyCode := Currency.Code;
        "Payment Tolerance %" := Currency."Payment Tolerance %";
        "Max. Pmt. Tolerance Amount" := Currency."Max. Payment Tolerance Amount";
        DecimalPlaces := CheckApplnRounding(Currency."Amount Decimal Places");
        IF NOT ISSERVICETIER THEN
          RequestOptionsForm."Max. Pmt. Tolerance Amount".DECIMALPLACESMAX(DecimalPlaces);
      END ELSE BEGIN
        GLSetup.GET;
        "Payment Tolerance %" := GLSetup."Payment Tolerance %";
        "Max. Pmt. Tolerance Amount" := GLSetup."Max. Payment Tolerance Amount";
        DecimalPlaces := CheckApplnRounding(GLSetup."Amount Decimal Places");
        IF NOT ISSERVICETIER THEN
          RequestOptionsForm."Max. Pmt. Tolerance Amount".DECIMALPLACESMAX(DecimalPlaces);
      END;
    END;

    LOCAL PROCEDURE PageSetCurrency@19033490(NewCurrency@1000 : Record 4);
    BEGIN
      Currency := NewCurrency;

      IF Currency.Code <> ''THEN BEGIN
        Currency.GET(Currency.Code);
        CurrencyCode := Currency.Code;
        "Payment Tolerance %" := Currency."Payment Tolerance %";
        "Max. Pmt. Tolerance Amount" := Currency."Max. Payment Tolerance Amount";
        DecimalPlaces := CheckApplnRounding(Currency."Amount Decimal Places");
        IF NOT ISSERVICETIER THEN;
      END ELSE BEGIN
        GLSetup.GET;
        "Payment Tolerance %" := GLSetup."Payment Tolerance %";
        "Max. Pmt. Tolerance Amount" := GLSetup."Max. Payment Tolerance Amount";
        DecimalPlaces := CheckApplnRounding(GLSetup."Amount Decimal Places");
        IF NOT ISSERVICETIER THEN;
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}
