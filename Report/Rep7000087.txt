OBJECT Report 7000087 Batch Settl. Posted POs
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVES6.00;
  }
  PROPERTIES
  {
    Permissions=TableData 21=imd,
                TableData 25=imd,
                TableData 45=m,
                TableData 7000003=imd,
                TableData 7000004=imd,
                TableData 7000021=imd,
                TableData 7000022=imd;
    CaptionML=[ENU=Batch Settl. Posted POs;
               ESP=Liq. lotes ¢rdenes pago regis.];
    ProcessingOnly=Yes;
    OnInitReport=BEGIN
                   PostingDate := WORKDATE;
                 END;

    OnPreReport=BEGIN
                  GLSetup.GET;
                END;

  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table7000021;
        DataItemTableView=SORTING(No.)
                          ORDER(Ascending);
        DataItemVarName=PostedPmtOrd;
        OnPreDataItem=BEGIN
                        DocPost.CheckPostingDate(PostingDate);

                        SourceCodeSetup.GET;
                        SourceCode := SourceCodeSetup."Cartera Journal";

                        GroupAmountLCY := 0;
                        PmtOrdCount := 0;
                        DocCount := 0;
                        TotalDocCount := 0;
                        TotalPmtOrd := PostedPmtOrd.COUNT;
                        ExistVATEntry := FALSE;

                        Window.OPEN(
                          Text1100000 +
                          Text1100001 +
                          Text1100002);
                      END;

        OnAfterGetRecord=BEGIN
                           PmtOrdCount := PmtOrdCount + 1;
                           Window.UPDATE(1,ROUND(PmtOrdCount / TotalPmtOrd * 10000,1));
                           Window.UPDATE(2,STRSUBSTNO('%1',"No."));
                           Window.UPDATE(3,0);
                           GroupAmount := 0;
                         END;

        OnPostDataItem=BEGIN
                         Window.CLOSE;

                         COMMIT;

                         MESSAGE(
                           Text1100003,
                           TotalDocCount,PmtOrdCount,GroupAmountLCY);
                       END;

      }
      SECTIONS
      {
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table7000003;
        DataItemTableView=SORTING(Bill Gr./Pmt. Order No.,Status,Category Code,Redrawn,Due Date)
                          WHERE(Status=CONST(Open),
                                Type=CONST(Payable));
        DataItemVarName=PostedDoc;
        OnPreDataItem=BEGIN
                        SumLCYAmt := 0;
                        GenJnlLineNextNo := 0;
                        TotalDoc := PostedDoc.COUNT;
                        DocCount := 0;
                        ExistInvoice := FALSE;
                        Counter := COUNT;
                        IF (Counter > 1) AND GLSetup."Unrealized VAT" THEN BEGIN
                          VATEntry.LOCKTABLE;
                          IF VATEntry.FIND('+') THEN
                            FromVATEntryNo := VATEntry."Entry No." + 1;
                        END;

                        FirstVATEntryNo := 0;
                        LastVATEntryNo := 0;
                      END;

        OnAfterGetRecord=VAR
                           FromJnl@1100001 : Boolean;
                         BEGIN
                           IsRedrawn := CarteraManagement.CheckFromRedrawnDoc(PostedDoc."No.");
                           IF PostedDoc."Document Type" = PostedDoc."Document Type"::Invoice THEN
                             ExistInvoice := TRUE;
                           BankAcc.GET(PostedPmtOrd."Bank Account No.");
                           Delay := BankAcc."Delay for Notices";

                           IF DueOnly AND (PostingDate < "Due Date" + Delay) THEN
                             CurrReport.SKIP;

                           TotalDocCount := TotalDocCount + 1;
                           DocCount := DocCount + 1;
                           Window.UPDATE(3,ROUND(DocCount / TotalDoc * 10000,1));
                           Window.UPDATE(4,STRSUBSTNO('%1 %2',"Document Type","Document No."));
                           CASE "Document Type" OF
                             PostedDoc."Document Type"::Invoice,PostedDoc."Document Type"::"1":
                               BEGIN
                                 WITH GenJnlLine DO BEGIN
                                   GenJnlLineNextNo := GenJnlLineNextNo + 10000;
                                   CLEAR(GenJnlLine);
                                   INIT;
                                   "Line No." := GenJnlLineNextNo;
                                   "Posting Date" := PostingDate;
                                   GenJnlLine."Document Date" := "Document Date";
                                   VALIDATE("Account Type","Account Type"::Vendor);
                                   VendLedgEntry.GET(PostedDoc."Entry No.");
                                   VALIDATE("Account No.",VendLedgEntry."Vendor No.");
                                   "Document Type" := "Document Type"::Payment;
                                   Description := COPYSTR(
                                     STRSUBSTNO(Text1100004,PostedDoc."Document No."),
                                     1,MAXSTRLEN(Description));
                                   "Document No." := PostedPmtOrd."No.";
                                   VALIDATE("Currency Code",PostedDoc."Currency Code");
                                   VALIDATE(Amount,PostedDoc."Remaining Amount");
                                   "Applies-to Doc. Type" := VendLedgEntry."Document Type";
                                   "Applies-to Doc. No." := VendLedgEntry."Document No.";
                                   "Applies-to Bill No." := VendLedgEntry."Bill No.";
                                   "Source Code" := SourceCode;
                                   "System-Created Entry" := TRUE;
                                   "Shortcut Dimension 1 Code" := VendLedgEntry."Global Dimension 1 Code";
                                   "Shortcut Dimension 2 Code" := VendLedgEntry."Global Dimension 2 Code";
                                   INSERT;
                                   CarteraDimMgt.VendInsertJnlLinDimension(GenJnlLine,VendLedgEntry,TRUE);
                                   SumLCYAmt := SumLCYAmt + "Amount (LCY)";
                                 END;
                                 GroupAmount := GroupAmount + "Remaining Amount";
                                 GroupAmountLCY := GroupAmountLCY + "Remaining Amt. (LCY)";
                                 VendLedgEntry."Document Status" := VendLedgEntry."Document Status"::Honored;
                                 VendLedgEntry.MODIFY;
                               END;
                             PostedDoc."Document Type"::Bill:
                               BEGIN
                                 WITH GenJnlLine DO BEGIN
                                   GenJnlLineNextNo := GenJnlLineNextNo + 10000;
                                   CLEAR(GenJnlLine);
                                   INIT;
                                   "Line No." := GenJnlLineNextNo;
                                   "Posting Date" := PostingDate;
                                   "Document Type" := "Document Type"::Payment;
                                   "Document No." := PostedPmtOrd."No.";
                                   VALIDATE("Account Type","Account Type"::Vendor);
                                   VendLedgEntry.GET(PostedDoc."Entry No.");

                                   IF GLSetup."Unrealized VAT" THEN BEGIN
                                     FromJnl := FALSE;
                                     IF PostedDoc."From Journal" THEN
                                       FromJnl := TRUE;
                                     ExistsNoRealVAT := GenJnlPostLine.VendFindVATSetup(VATPostingSetup,VendLedgEntry,FromJnl);
                                   END;

                                   VALIDATE("Account No.",VendLedgEntry."Vendor No.");
                                   Description := COPYSTR(
                                     STRSUBSTNO(Text1100005,PostedDoc."Document No.",PostedDoc."No."),
                                     1,MAXSTRLEN(Description));
                                   VALIDATE("Currency Code",PostedDoc."Currency Code");
                                   VALIDATE(Amount,PostedDoc."Remaining Amount");
                                   "Applies-to Doc. Type" := VendLedgEntry."Document Type";
                                   "Applies-to Doc. No." := VendLedgEntry."Document No.";
                                   "Applies-to Bill No." := VendLedgEntry."Bill No.";
                                   "Source Code" := SourceCode;
                                   "System-Created Entry" := TRUE;
                                   "Shortcut Dimension 1 Code" := VendLedgEntry."Global Dimension 1 Code";
                                   "Shortcut Dimension 2 Code" := VendLedgEntry."Global Dimension 2 Code";
                                   INSERT;
                                   CarteraDimMgt.VendInsertJnlLinDimension(GenJnlLine,VendLedgEntry,TRUE);
                                   SumLCYAmt := SumLCYAmt + "Amount (LCY)";
                                 END;
                                 IF GLSetup."Unrealized VAT" AND
                                    ExistsNoRealVAT AND
                                    (NOT IsRedrawn) THEN BEGIN
                                   VendLedgEntry.CALCFIELDS("Remaining Amount","Remaining Amt. (LCY)");
                                   CarteraManagement.VendUnrealizedVAT2(
                                     VendLedgEntry,
                                     VendLedgEntry."Remaining Amt. (LCY)",
                                     GenJnlLine,
                                     ExistVATEntry,
                                     FirstVATEntryNo,
                                     LastVATEntryNo,
                                     NoRealVATBuffer,
                                     FromJnl);

                                   IF NoRealVATBuffer.FIND('-') THEN BEGIN
                                     REPEAT
                                       BEGIN
                                         InsertGenJournalLine(
                                           GenJnlLine."Account Type"::"G/L Account",
                                           NoRealVATBuffer.Account,
                                           NoRealVATBuffer.Amount);
                                         InsertGenJournalLine(
                                           GenJnlLine."Account Type"::"G/L Account",
                                           NoRealVATBuffer."Balance Account",
                                           -NoRealVATBuffer.Amount);
                                       END;
                                     UNTIL NoRealVATBuffer.NEXT = 0;
                                     NoRealVATBuffer.DELETEALL;
                                   END;

                                 END;

                                 GroupAmount := GroupAmount + "Remaining Amount";
                                 GroupAmountLCY := GroupAmountLCY + "Remaining Amt. (LCY)";
                                 VendLedgEntry."Document Status" := VendLedgEntry."Document Status"::Honored;
                                 VendLedgEntry.MODIFY;
                               END;
                           END;
                           IF BGPOPostBuffer.GET('','',VendLedgEntry."Entry No.") THEN BEGIN
                             BGPOPostBuffer.Amount := BGPOPostBuffer.Amount + "Remaining Amount";
                             BGPOPostBuffer.MODIFY;
                           END ELSE BEGIN
                             BGPOPostBuffer.INIT;
                             BGPOPostBuffer."Entry No." := VendLedgEntry."Entry No.";
                             BGPOPostBuffer.Amount := BGPOPostBuffer.Amount + "Remaining Amount";
                             BGPOPostBuffer.INSERT;
                           END;
                         END;

        OnPostDataItem=VAR
                         VendLedgEntry2@1100001 : Record 25;
                         JnlLineDim@1100000 : Record 356;
                       BEGIN
                         IF (DocCount = 0) OR (GroupAmount = 0) THEN
                           CurrReport.SKIP;


                         WITH GenJnlLine DO BEGIN
                           VendLedgEntry2.GET(BGPOPostBuffer."Entry No.");
                           GenJnlLineNextNo := GenJnlLineNextNo + 10000;
                           CLEAR(GenJnlLine);
                           INIT;
                           "Line No." := GenJnlLineNextNo;
                           "Posting Date" := PostingDate;
                           "Document Type" := "Document Type"::Payment;
                           "Document No." := PostedPmtOrd."No.";
                           VALIDATE("Account Type",GenJnlLine."Account Type"::"Bank Account");
                           VALIDATE("Account No.",BankAcc."No.");
                           Description := COPYSTR(STRSUBSTNO(Text1100009,PostedPmtOrd."No."),1,MAXSTRLEN(Description));
                           VALIDATE("Currency Code",PostedPmtOrd."Currency Code");
                           VALIDATE(Amount,-GroupAmount);
                           "Source Code" := SourceCode;
                           "System-Created Entry" := TRUE;
                           "Shortcut Dimension 1 Code" := VendLedgEntry."Global Dimension 1 Code";
                           "Shortcut Dimension 2 Code" := VendLedgEntry."Global Dimension 2 Code";
                           INSERT;
                           CarteraDimMgt.VendInsertJnlLinDimension(GenJnlLine,VendLedgEntry2,TRUE);
                           SumLCYAmt := SumLCYAmt + "Amount (LCY)";
                         END;

                         IF PostedPmtOrd."Currency Code" <> '' THEN BEGIN
                           IF SumLCYAmt <> 0 THEN BEGIN
                             Currency.SETFILTER(Code,PostedPmtOrd."Currency Code");
                             Currency.FIND('-');
                             IF SumLCYAmt > 0 THEN BEGIN
                               Currency.TESTFIELD("Residual Gains Account");
                               Acct := Currency."Residual Gains Account";
                             END ELSE BEGIN
                               Currency.TESTFIELD("Residual Losses Account");
                               Acct := Currency."Residual Losses Account";
                             END;
                             GenJnlLineNextNo := GenJnlLineNextNo + 10000;
                             WITH GenJnlLine DO BEGIN
                               CLEAR(GenJnlLine);
                               INIT;
                               "Line No." := GenJnlLineNextNo;
                               "Posting Date" := PostingDate;
                               "Document Type" := "Document Type"::Payment;
                               "Document No." := PostedPmtOrd."No.";
                               VALIDATE("Account Type","Account Type"::"G/L Account");
                               VALIDATE("Account No.",Acct);
                               Description := Text1100010;
                               VALIDATE("Currency Code",'');
                               VALIDATE(Amount,-SumLCYAmt);
                               "Shortcut Dimension 1 Code" := BankAcc."Global Dimension 1 Code";
                               "Shortcut Dimension 2 Code" := BankAcc."Global Dimension 2 Code";
                               "Source Code" := SourceCode;
                               "System-Created Entry" := TRUE;
                               INSERT;
                               CarteraDimMgt.VendInsertJnlLinDimension(GenJnlLine,VendLedgEntry,TRUE);
                             END;
                           END;
                         END;

                         IF GenJnlLine.FIND('-') THEN
                           REPEAT
                             GenJnlLine2 := GenJnlLine;
                             GenJnlPostLine.SetFromSettlement(TRUE);
                             JnlLineDim.SETRANGE("Table ID",DATABASE::"Gen. Journal Line");
                             JnlLineDim.SETRANGE("Journal Template Name",GenJnlLine2."Journal Template Name");
                             JnlLineDim.SETRANGE("Journal Batch Name",GenJnlLine2."Journal Batch Name");
                             JnlLineDim.SETRANGE("Journal Line No.",GenJnlLine2."Line No.");
                             GenJnlPostLine.RunWithCheck(GenJnlLine2,JnlLineDim);
                           UNTIL GenJnlLine.NEXT = 0;
                         GenJnlLine.DELETEALL;
                         CLEAR(GenJnlPostLine);

                         DocPost.ClosePmtOrdIfEmpty(PostedPmtOrd,PostingDate);

                         IF (Counter > 1) AND GLSetup."Unrealized VAT" AND
                           ExistVATEntry AND ExistInvoice THEN BEGIN
                           IF VATEntry.FIND('+') THEN
                             ToVATEntryNo := VATEntry."Entry No.";
                           GLReg.FIND('+');
                           GLReg."From VAT Entry No." := FromVATEntryNo;
                           GLReg."To VAT Entry No." := ToVATEntryNo;
                           GLReg.MODIFY;
                         END ELSE BEGIN
                           IF ExistVATEntry THEN BEGIN
                             GLReg.FIND('+');
                             GLReg."From VAT Entry No." := FirstVATEntryNo;
                             GLReg."To VAT Entry No." := LastVATEntryNo;
                             GLReg.MODIFY;
                           END;
                         END;
                       END;

        DataItemLink=Bill Gr./Pmt. Order No.=FIELD(No.);
      }
      SECTIONS
      {
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=5060;
      Height=990;
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 5   ;TextBox      ;3410 ;0    ;1650 ;440  ;CaptionML=[ENU=Posting Date;
                                                              ESP=Fecha registro];
                                                   NotBlank=Yes;
                                                   SourceExpr=PostingDate }
      { 6   ;CheckBox     ;3410 ;550  ;440  ;440  ;ShowCaption=No;
                                                   CaptionML=[ENU=Due bills only;
                                                              ESP=S¢lo docs. vencidos];
                                                   SourceExpr=DueOnly }
      { 13  ;Label        ;0    ;0    ;3300 ;440  ;ParentControl=5 }
      { 7   ;Label        ;0    ;550  ;3300 ;440  ;ParentControl=6 }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             ESP=Opciones] }

      { 5   ;2   ;Field     ;
                  CaptionML=[ENU=Posting Date;
                             ESP=Fecha registro];
                  NotBlank=Yes;
                  SourceExpr=PostingDate }

      { 6   ;2   ;Field     ;
                  CaptionML=[ENU=Due bills only;
                             ESP=S¢lo docs. vencidos];
                  SourceExpr=DueOnly }

    }
  }
  CODE
  {
    VAR
      Text1100000@1000 : TextConst 'ENU=Settling           @1@@@@@@@@@@@@@@@@@@@@@@@\\;ESP=Liquidando         @1@@@@@@@@@@@@@@@@@@@@@@@\\';
      Text1100001@1001 : TextConst 'ENU=Payment Order No.  #2######  @3@@@@@@@@@@@@@\;ESP=Orden pago n§      #2######  @3@@@@@@@@@@@@@\';
      Text1100002@1002 : TextConst 'ENU=Payable document   #4######;ESP=Documento a pagar  #4######';
      Text1100003@1003 : TextConst 'ENU=%1 Documents in %2 Payment Orders totaling %3 (LCY) have been settled.;ESP=Se han liquidado %1 documento/s en la orden/es pago %2 por un importe de %3 (DL).';
      Text1100004@1004 : TextConst 'ENU=Payable document settlement %1;ESP=Liq. documento a pagar %1';
      Text1100005@1005 : TextConst 'ENU=Payable bill settlement %1/%2;ESP=Liq. efecto a pagar %1/%2';
      Text1100009@1009 : TextConst 'ENU=Payment order settlement %1;ESP=Liquidaci¢n orden pago %1';
      Text1100010@1010 : TextConst 'ENU=Residual adjust generated by rounding Amount;ESP=Ajuste por redondeo';
      Text1100011@1011 : TextConst 'ENU=Payable document settlement %1/%2;ESP=Liquidaci¢n orden pago %1/%2';
      SourceCodeSetup@1100000 : Record 242;
      GenJnlLine@1100001 : TEMPORARY Record 81;
      GenJnlLine2@1100002 : TEMPORARY Record 81;
      VendLedgEntry@1100003 : Record 25;
      BankAccPostingGr@1100004 : Record 277;
      BankAcc@1100005 : Record 270;
      CurrExchRate@1100006 : Record 330;
      Currency@1100007 : Record 4;
      GLReg@1100008 : Record 45;
      GLSetup@1100009 : Record 98;
      VATPostingSetup@1100010 : Record 325;
      VATEntry@1100011 : Record 254;
      DocPost@1100012 : Codeunit 7000006;
      CarteraManagement@1100013 : Codeunit 7000000;
      GenJnlPostLine@1100014 : Codeunit 12;
      CarteraDimMgt@1100040 : Codeunit 7000011;
      Window@1100015 : Dialog;
      PostingDate@1100016 : Date;
      DueOnly@1100017 : Boolean;
      Delay@1100018 : Decimal;
      SourceCode@1100019 : Code[10];
      Acct@1100020 : Code[20];
      DocCount@1100021 : Integer;
      TotalDocCount@1100022 : Integer;
      GroupAmount@1100023 : Decimal;
      GroupAmountLCY@1100024 : Decimal;
      GenJnlLineNextNo@1100025 : Integer;
      SumLCYAmt@1100026 : Decimal;
      TotalDisctdAmt@1100027 : Decimal;
      PmtOrdCount@1100028 : Integer;
      TotalPmtOrd@1100029 : Integer;
      TotalDoc@1100030 : Integer;
      ExistVATEntry@1100031 : Boolean;
      FirstVATEntryNo@1100032 : Integer;
      LastVATEntryNo@1100033 : Integer;
      IsRedrawn@1100034 : Boolean;
      ExistInvoice@1100035 : Boolean;
      FromVATEntryNo@1100036 : Integer;
      ToVATEntryNo@1100037 : Integer;
      Counter@1100038 : Integer;
      BGPOPostBuffer@1100039 : TEMPORARY Record 7000012;
      NoRealVATBuffer@1100042 : TEMPORARY Record 7000012;
      ExistsNoRealVAT@1100041 : Boolean;

    LOCAL PROCEDURE InsertGenJournalLine@4(AccType@1100000 : Integer;AccNo@1100001 : Code[20];Amount2@1100002 : Decimal);
    BEGIN
      GenJnlLineNextNo :=  GenJnlLineNextNo + 10000;

      WITH GenJnlLine DO BEGIN
        CLEAR(GenJnlLine);
        INIT;
        "Line No." := GenJnlLineNextNo;
        "Posting Date" := PostingDate;
        "Document Type" := "Document Type"::Payment;
        "Document No." := PostedPmtOrd."No.";
        "Account Type" := AccType;
        "Account No." := AccNo;
        IF PostedDoc."Document Type" = PostedDoc."Document Type"::Bill THEN
          Description := COPYSTR(
            STRSUBSTNO(Text1100011,PostedDoc."Document No.",PostedDoc."No."),
            1,MAXSTRLEN(Description))
        ELSE
          Description := COPYSTR(
            STRSUBSTNO(Text1100011,PostedDoc."Document No.",PostedDoc."No."),
            1,MAXSTRLEN(Description));
        VALIDATE("Currency Code",PostedDoc."Currency Code");
        VALIDATE(Amount,-Amount2);
        "Applies-to Doc. Type" := VendLedgEntry."Document Type";
        "Applies-to Doc. No." := '';
        "Applies-to Bill No." := VendLedgEntry."Bill No.";
        "Source Code" := SourceCode;
        "System-Created Entry" := TRUE;
        "Shortcut Dimension 1 Code" := VendLedgEntry."Global Dimension 1 Code";
        "Shortcut Dimension 2 Code" := VendLedgEntry."Global Dimension 2 Code";
        INSERT;
        CarteraDimMgt.VendInsertJnlLinDimension(GenJnlLine,VendLedgEntry,TRUE);
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}
