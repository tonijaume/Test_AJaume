OBJECT Report 7010166 Detail per Service
{
  OBJECT-PROPERTIES
  {
    Date=05/06/15;
    Time=[ 6:32:49];
    Modified=Yes;
    Version List=AIC2009,CNT;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Excursions -Detail per Service;
               ESP=Excursiones - Detalle por Servicio];
    OnInitReport=BEGIN
                   wFechaAct := CURRENTDATETIME;
                   rInfEmp.FINDFIRST;
                 END;

    OnPreReport=BEGIN
                  IF (FiltResExc.GETFILTER("Fecha Excursion")='') AND (FiltResExc.GETFILTER("Fecha Venta")='') THEN
                    ERROR(Text001);

                  wFiltroFecha := FiltResExc.GETFILTER("Fecha Excursion");
                  IF wFiltroFecha='' THEN
                    wFiltroFecha := FiltResExc.GETFILTER("Fecha Venta");
                END;

    Orientation=Landscape;
  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table7010241;
        DataItemTableView=SORTING(Codigo);
        DataItemVarName=Rep;
        PrintOnlyIfDetail=Yes;
        OnPreDataItem=BEGIN
                        wFirstRep := TRUE;

                        CLEAR(rTempGT); //+$005
                      END;

        ReqFilterFields=Codigo;
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Header;
            PrintOnEveryPage=Yes;
            SectionWidth=19500;
            SectionHeight=1269;
          }
          CONTROLS
          {
            { 1100217024;Label  ;6300 ;0    ;6450 ;423  ;HorzAlign=Center;
                                                         FontSize=9;
                                                         FontBold=Yes;
                                                         CaptionML=[ENU=Detail per Service;
                                                                    ESP=Detalle de ventas y comisiones por Rep.] }
            { 1100217025;TextBox;6300 ;423  ;6450 ;423  ;HorzAlign=Center;
                                                         SourceExpr=wFiltroFecha }
            { 1100217021;TextBox;15900;0    ;3600 ;423  ;HorzAlign=Right;
                                                         SourceExpr=NomUsuario }
            { 1100217022;TextBox;15900;423  ;3600 ;423  ;HorzAlign=Right;
                                                         SourceExpr=wFechaAct }
            { 1100217026;TextBox;0    ;0    ;5850 ;423  ;HorzAlign=Left;
                                                         SourceExpr=rInfEmp.Name }
            { 1100217049;TextBox;12750;0    ;2700 ;423  ;HorzAlign=Left;
                                                         FontSize=9;
                                                         FontBold=Yes;
                                                         SourceExpr=[ STRSUBSTNO(Text002, wModoIVA)] }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table7010162;
        DataItemTableView=SORTING(Delegacion,N§ Reserva)
                          WHERE(Anulada=CONST(No));
        MaxIteration=1;
        DataItemVarName=FiltResExc;
        OnPreDataItem=VAR
                        lwOK@1100217000 : Boolean;
                      BEGIN


                        IF (GETFILTER("Fecha Excursion") <> '') THEN
                          SETCURRENTKEY("Fecha Excursion", "N§ Servicio", "Orden zona", "Orden hotel", "Hotel Cliente")
                        ELSE
                          SETCURRENTKEY("Guia Venta", "Fecha Venta", "N§ Ticket");

                        lwOK := BuildTemp(Rep);
                        IF lwOK AND (NOT wFirstRep) THEN
                          CurrReport.NEWPAGE;
                        IF lwOK THEN
                          wFirstRep := FALSE;
                      END;

        ReqFilterFields=Fecha Excursion,Fecha Venta;
        DataItemLink=Guia Venta=FIELD(Codigo);
      }
      SECTIONS
      {
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number);
        DataItemVarName=IResvs;
        OnPreDataItem=BEGIN
                        CLEAR(rTemp);
                        rTemp.SETCURRENTKEY(Code01);
                        wFirst := TRUE;
                      END;

        OnAfterGetRecord=VAR
                           lwOk@1100217000 : Boolean;
                         BEGIN
                           IF wFirst THEN
                             lwOk := rTemp.FINDFIRST
                           ELSE
                             lwOk := rTemp.NEXT<>0;

                           IF NOT lwOk THEN
                             CurrReport.BREAK;

                           wFirst := FALSE;
                         END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Header;
            PrintOnEveryPage=Yes;
            SectionWidth=19500;
            SectionHeight=1692;
          }
          CONTROLS
          {
            { 1100217003;Label  ;1050 ;423  ;1500 ;846  ;ParentControl=1100217002;
                                                         HorzAlign=Left;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=ESP=Cupon }
            { 1100217009;Label  ;9750 ;423  ;1800 ;846  ;ParentControl=1100217008;
                                                         HorzAlign=Center;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=ESP=PAX }
            { 1100217017;Label  ;6750 ;423  ;2850 ;846  ;ParentControl=1100217016;
                                                         HorzAlign=Left;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=ESP=Agencia }
            { 1100217027;Shape  ;0    ;1269 ;19500;423  ;ShapeStyle=HorzLine }
            { 1100217005;Label  ;11700;423  ;1200 ;846  ;ParentControl=1100217004;
                                                         HorzAlign=Left;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=[ENU=Serv. Date;
                                                                    ESP=Fecha Serv.] }
            { 1100217007;Label  ;0    ;423  ;900  ;846  ;ParentControl=1100217006;
                                                         HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=ESP=Liquid. }
            { 1100217013;Label  ;2700 ;423  ;3900 ;846  ;ParentControl=1100217012;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=ESP=Servicio }
            { 1100217023;Label  ;13050;423  ;1500 ;846  ;ParentControl=1100217020;
                                                         HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=[ENU=AMOUNT;
                                                                    ESP=IMPORTE] }
            { 1100217029;Label  ;14700;423  ;1500 ;846  ;ParentControl=1100217028;
                                                         HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=[ENU=Charge +;
                                                                    ESP=Cobro de +] }
            { 1100217032;Label  ;16350;423  ;1500 ;846  ;ParentControl=1100217031;
                                                         HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=ESP=TOTAL }
            { 1100217035;Label  ;18000;423  ;1500 ;846  ;ParentControl=1100217033;
                                                         HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=[ENU=REP. COMMISSION;
                                                                    ESP=COMiSION.REP] }
            { 1100217030;TextBox;6750 ;0    ;6450 ;423  ;FontBold=Yes;
                                                         SourceExpr=NomRep(Rep) }
          }
           }
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=19500;
            SectionHeight=423;
          }
          CONTROLS
          {
            { 1100217004;TextBox;11700;0    ;1200 ;423  ;HorzAlign=Left;
                                                         SourceExpr=rTemp.Date01 }
            { 1100217010;TextBox;10800;0    ;750  ;423  ;HorzAlign=Left;
                                                         SourceExpr=rTemp.Int02 }
            { 1100217034;Label  ;10500;0    ;300  ;423  ;HorzAlign=Center;
                                                         CaptionML=ESP=. }
            { 1100217008;TextBox;9750 ;0    ;750  ;423  ;HorzAlign=Right;
                                                         SourceExpr=rTemp.Int01 }
            { 1100217016;TextBox;6750 ;0    ;2850 ;423  ;HorzAlign=Left;
                                                         CaptionML=[ENU=Agency;
                                                                    ESP=Agencia];
                                                         SourceExpr=rTemp.Code03 }
            { 1100217012;TextBox;2700 ;0    ;3900 ;423  ;CaptionML=[ENU=Service;
                                                                    ESP=Servicio];
                                                         SourceExpr=NomExcursion(rTemp.Code02) }
            { 1100217002;TextBox;1050 ;0    ;1500 ;423  ;HorzAlign=Left;
                                                         CaptionML=[ENU=Ticket;
                                                                    ESP=Cupon];
                                                         SourceExpr=rTemp.Code01 }
            { 1100217006;TextBox;0    ;0    ;900  ;423  ;CaptionML=[ENU=Liquidation;
                                                                    ESP=Liquid.];
                                                         SourceExpr=[rTemp.Int03 ] }
            { 1100217020;TextBox;13050;0    ;1500 ;423  ;SourceExpr=rTemp.Dec01 }
            { 1100217028;TextBox;14700;0    ;1500 ;423  ;SourceExpr=rTemp.Dec02 }
            { 1100217031;TextBox;16350;0    ;1500 ;423  ;SourceExpr=rTemp.Dec03 }
            { 1100217033;TextBox;18000;0    ;1500 ;423  ;SourceExpr=rTemp.Dec04 }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number);
        DataItemVarName=IResDia;
        OnPreDataItem=BEGIN
                        CLEAR(rTempF);
                        rTempF.SETCURRENTKEY(Date01);
                        wFirst := TRUE;
                      END;

        OnAfterGetRecord=VAR
                           lwOk@1100217000 : Boolean;
                         BEGIN
                           IF wFirst THEN
                             lwOk := rTempF.FINDFIRST
                           ELSE
                             lwOk := rTempF.NEXT<>0;

                           IF NOT lwOk THEN
                             CurrReport.BREAK;

                           wFirst := FALSE;
                         END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Header;
            SectionWidth=19500;
            SectionHeight=423;
          }
          CONTROLS
          {
            { 1100217000;Shape  ;0    ;0    ;19500;423  ;ShapeStyle=HorzLine }
          }
           }
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=19500;
            SectionHeight=423;
          }
          CONTROLS
          {
            { 1100217001;TextBox;5250 ;0    ;4350 ;423  ;HorzAlign=Right;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         SourceExpr=rTempF.Date01 }
            { 1100217014;TextBox;10800;0    ;750  ;423  ;HorzAlign=Left;
                                                         SourceExpr=rTempF.Int02 }
            { 1100217015;Label  ;10500;0    ;300  ;423  ;HorzAlign=Center;
                                                         CaptionML=ESP=. }
            { 1100217018;TextBox;9750 ;0    ;750  ;423  ;HorzAlign=Right;
                                                         SourceExpr=rTempF.Int01 }
            { 1100217036;TextBox;18000;0    ;1500 ;423  ;SourceExpr=rTempF.Dec04 }
            { 1100217037;TextBox;16350;0    ;1500 ;423  ;SourceExpr=rTempF.Dec03 }
            { 1100217038;TextBox;14700;0    ;1500 ;423  ;SourceExpr=rTempF.Dec02 }
            { 1100217039;TextBox;13050;0    ;1500 ;423  ;SourceExpr=rTempF.Dec01 }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number);
        MaxIteration=1;
        DataItemVarName=ITotal;
        OnAfterGetRecord=BEGIN
                           CLEAR(rTempT);
                           CLEAR(rTempF);
                           IF rTempF.FINDFIRST THEN BEGIN
                             REPEAT
                               rTempT.Int01 += rTempF.Int01;
                               rTempT.Int02 += rTempF.Int02;
                               rTempT.Dec01 += rTempF.Dec01;
                               rTempT.Dec02 += rTempF.Dec02;
                               rTempT.Dec03 += rTempF.Dec03;
                               rTempT.Dec04 += rTempF.Dec04;
                             UNTIL rTempF.NEXT=0;
                           END
                           ELSE
                            CurrReport.BREAK;
                         END;

        OnPostDataItem=BEGIN
                         //+$005 <
                         rTempGT.Int01 += rTempT.Int01;
                         rTempGT.Int02 += rTempT.Int02;
                         rTempGT.Dec01 += rTempT.Dec01;
                         rTempGT.Dec02 += rTempT.Dec02;
                         rTempGT.Dec03 += rTempT.Dec03;
                         rTempGT.Dec04 += rTempT.Dec04;
                         //+$005 >
                       END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Header;
            SectionWidth=19500;
            SectionHeight=423;
          }
          CONTROLS
          {
            { 1100217019;Shape  ;0    ;0    ;19500;423  ;ShapeStyle=HorzLine }
          }
           }
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=19500;
            SectionHeight=423;
          }
          CONTROLS
          {
            { 1100217011;TextBox;5250 ;0    ;4350 ;423  ;HorzAlign=Right;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         SourceExpr=NomRep(Rep) }
            { 1100217041;TextBox;18000;0    ;1500 ;423  ;SourceExpr=rTempT.Dec04 }
            { 1100217042;TextBox;16350;0    ;1500 ;423  ;SourceExpr=rTempT.Dec03 }
            { 1100217043;TextBox;14700;0    ;1500 ;423  ;SourceExpr=rTempT.Dec02 }
            { 1100217044;TextBox;13050;0    ;1500 ;423  ;SourceExpr=rTempT.Dec01 }
            { 1100217046;TextBox;10800;0    ;750  ;423  ;HorzAlign=Left;
                                                         SourceExpr=rTempT.Int02 }
            { 1100217047;Label  ;10500;0    ;300  ;423  ;HorzAlign=Center;
                                                         CaptionML=ESP=. }
            { 1100217048;TextBox;9750 ;0    ;750  ;423  ;HorzAlign=Right;
                                                         SourceExpr=rTempT.Int01 }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number);
        MaxIteration=1;
        DataItemVarName=diTotal;
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=19500;
            SectionHeight=846;
          }
          CONTROLS
          {
            { 1100217040;Label  ;6750 ;423  ;2850 ;423  ;HorzAlign=Left;
                                                         VertAlign=Bottom;
                                                         FontSize=9;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         LeaderDots=Yes;
                                                         CaptionML=[ENU=Grand Total;
                                                                    ESP=Total General] }
            { 1100217045;TextBox;13050;423  ;1500 ;423  ;SourceExpr=rTempGT.Dec01 }
            { 1100217050;TextBox;14700;423  ;1500 ;423  ;SourceExpr=rTempGT.Dec02 }
            { 1100217051;TextBox;16350;423  ;1500 ;423  ;SourceExpr=rTempGT.Dec03 }
            { 1100217052;TextBox;18000;423  ;1500 ;423  ;SourceExpr=rTempGT.Dec04 }
            { 1100217053;Shape  ;9750 ;0    ;9750 ;423  ;ShapeStyle=HorzLine }
            { 1100217054;TextBox;10800;423  ;750  ;423  ;HorzAlign=Left;
                                                         SourceExpr=rTempGT.Int02 }
            { 1100217055;Label  ;10500;423  ;300  ;423  ;HorzAlign=Center;
                                                         CaptionML=ESP=. }
            { 1100217056;TextBox;9750 ;423  ;750  ;423  ;HorzAlign=Right;
                                                         SourceExpr=rTempGT.Int01 }
          }
           }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=5280;
      Height=1100;
      CaptionML=[ENU=Excursions percentage Stay;
                 ESP=Est. Porcentajes Excursiones];
    }
    CONTROLS
    {
      { 1100217000;TextBox;2420 ;220  ;2530 ;440  ;InPage=-1;
                                                   CaptionML=[ENU=VAT;
                                                              ESP=IVA];
                                                   SourceExpr=wModoIVA }
      { 1100217001;Label  ;220  ;220  ;2090 ;440  ;ParentControl=1100217000 }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      Text008@1100217000 : TextConst 'ENU=No Hotel;ESP=Sin Hotel';
      wFechaAct@1100217001 : DateTime;
      rInfEmp@1100217002 : Record 79;
      Text001@1100217003 : TextConst 'ENU=Must set a range date;ESP=Debe de definir una rango de fechas';
      rTemp@1100217006 : TEMPORARY Record 7010251;
      rTempF@1100217007 : TEMPORARY Record 7010251;
      rTempT@1100217009 : TEMPORARY Record 7010251;
      rTempGT@1100217014 : TEMPORARY Record 7010251;
      rCamb@1100217008 : Record 330;
      rTarifa@1100217012 : Record 7010147;
      wFiltroFecha@1100217005 : Text[250];
      wFirst@1100217004 : Boolean;
      wFirstRep@1100217013 : Boolean;
      wModoIVA@1100217010 : 'Incluido,No Incluido';
      Text002@1100217011 : TextConst 'ENU=- VAT %1;ESP=- IVA %1';

    PROCEDURE NomUsuario@1100217001() : Text[250];
    VAR
      lrUser@1100217000 : Record 2000000002;
      lwNom@1100217001 : Text[250];
    BEGIN
      // NomUsuario

      CLEAR(lwNom);
      CLEAR(lrUser);
      IF lrUser.GET(USERID) THEN
        lwNom := lrUser.Name;
      IF lwNom='' THEN
        lwNom := USERID;
      EXIT(lwNom);
    END;

    PROCEDURE NomExcursion@1100217002(pwExc@1100217000 : Code[10]) : Text[50];
    VAR
      lrProd@1100217001 : Record 7009710;
      lwText@1100217002 : Text[50];
    BEGIN
      // NomExcursion

      CLEAR(lwText);
      IF lrProd.GET(pwExc) THEN
        lwText := lrProd.Descripcion;

      IF lwText = '' THEN
        lwText := pwExc;

      EXIT(lwText);
    END;

    PROCEDURE NomRep@1100217054(prRep@1100217000 : Record 7010241) : Text[50];
    BEGIN
      // NomRep

      EXIT(STRSUBSTNO('%1 - %2', prRep.Codigo, prRep.Nombre));
    END;

    PROCEDURE NomProv@1100217009(prServ@1100217001 : Record 7010163) : Text[30];
    VAR
      lrPrest@1100217000 : Record 7010170;
      lrCon@1100217004 : Record 7010142;
      lrPro@1100217003 : Record 23;
      lwText@1100217002 : Text[30];
    BEGIN
      // NomProv

      CLEAR(lwText);
      CLEAR(lrPrest);
      lrPrest.SETRANGE(Delegacion    , prServ.Delegacion);
      lrPrest.SETRANGE("N§ Servicio" , prServ."N§ Servicio");
      lrPrest.SETRANGE("Tipo Contrato", lrPrest."Tipo Contrato"::Excursion);
      IF lrPrest.FINDFIRST THEN BEGIN
        CLEAR(lrCon);
        CLEAR(lrPro);
        IF lrCon.GET(lrPrest.Delegacion, lrPrest."N§ Contrato", lrPrest."Tipo Contrato") THEN BEGIN
          IF lrPro.GET(lrCon.Proveedor) THEN
            lwText := lrPro.Name;
          IF lwText = '' THEN
            lwText := lrCon.Proveedor;
        END;
      END;

      EXIT(lwText);
    END;

    PROCEDURE BuildTemp@1100217021(prRep@1100217000 : Record 7010241) : Boolean;
    VAR
      lrTemp2@1100217008 : TEMPORARY Record 7010251;
      lrResExc@1100217001 : Record 7010162;
      lrCobro@1100217004 : Record 7010240;
      lrIVAVta@1100217007 : Record 325;
      lrDetEco@1100217009 : Record 7010245;
      lwId@1100217002 : Integer;
      lwIdF@1100217003 : Integer;
      lwImpCobro@1100217005 : Decimal;
    BEGIN
      // BuildTemp
      // Devuelve true si se genera alg£n registro

      CLEAR(rTemp);
      rTemp.DELETEALL;

      // Temporal de fechas
      CLEAR(rTempF);
      rTempF.DELETEALL;
      rTempF.SETCURRENTKEY(Date01);

      CLEAR(lrResExc);
      lrResExc.COPY(FiltResExc);
      IF lrResExc.FINDSET THEN
      BEGIN
        CLEAR(lwId);
        CLEAR(lwIdF);
        REPEAT
          CLEAR(rTemp);
          rTemp.SETRANGE(Code01, lrResExc."N§ Ticket");
          IF NOT rTemp.FINDFIRST THEN BEGIN
            lwId +=1;
            CLEAR(rTemp);
            rTemp.Id     := lwId;
            rTemp.Code01 := lrResExc."N§ Ticket";
            rTemp.Code02 := lrResExc.Producto;
            rTemp.Code03 := lrResExc.TourOperador;
            rTemp.Int03  := lrResExc."N§ liquidacion GV";
            rTemp.Date01 := lrResExc."Fecha Excursion";
            rTemp.INSERT;
          END;

          IF NOT lrDetEco.GET(lrResExc.Delegacion, lrResExc."N§ Reserva") THEN
            CLEAR(lrDetEco);

          //+$002 <
          //. En los representantes que trabajan a credito, el cobro es el importe de la reserva
          CLEAR(lwImpCobro);
          IF prRep."Trabaja a credito" THEN
            lwImpCobro := lrDetEco."Ingreso reserva" - lrResExc."Importe Reembolsado"  //$006
          ELSE
          BEGIN
            // Buscamos el cobro y lo pasamos a la divisa de la reserva
            CLEAR(lrCobro);
            lrCobro.SETRANGE(Delegacion   , lrResExc.Delegacion);
            lrCobro.SETRANGE("Num Reserva", lrResExc."N§ Reserva");
            IF lrCobro.FINDSET THEN BEGIN
              REPEAT  // $001
                lwImpCobro += lrCobro.CambioDivisa(lrCobro."Cod. Divisa", lrResExc.Divisa, lrCobro."Importe Recibido") -
                              lrResExc."Importe Reembolsado"; //$006
              UNTIL lrCobro.NEXT=0;
            END;
          END;
          //+$002 >

          // Si buscamos la informaci¢n sin iva si es necesario para el informe
          IF wModoIVA =  wModoIVA::"No Incluido" THEN BEGIN
            IF BuscaIVA(lrResExc, lrIVAVta) THEN
              lwImpCobro := ROUND((lwImpCobro / ((lrIVAVta."VAT+EC %" / 100) + 1)))
            ELSE
              CLEAR(lwImpCobro);
          END;

          // Ponemos los valores en este temporal
          CLEAR(lrTemp2);
          lrTemp2.Int01  := lrResExc.Adultos - lrResExc."Adultos Reembolsados"; //$006
          lrTemp2.Int02  := lrResExc.Ni¤os - lrResExc."Ni¤os Reembolsados"; //$006
          CASE wModoIVA OF
            wModoIVA::Incluido      : lrTemp2.Dec01  := lrDetEco."Ingreso reserva"  - lrResExc."Importe Reembolsado"; //$006
            wModoIVA::"No Incluido" : lrTemp2.Dec01  := lrDetEco."Ingreso reserva neto" - lrResExc."Importe Reembolsado Neto"; //$006
          END;
          lrTemp2.Dec02  := lwImpCobro - lrTemp2.Dec01;
          lrTemp2.Dec03  := lwImpCobro;
          // La comision No tiene IVA
          lrTemp2.Dec04  := lrResExc."Comision Guia Venta";

          rTemp.Int01  += lrTemp2.Int01;
          rTemp.Int02  += lrTemp2.Int02;
          rTemp.Dec01  += lrTemp2.Dec01;
          rTemp.Dec02  += lrTemp2.Dec02;
          rTemp.Dec03  += lrTemp2.Dec03;
          rTemp.Dec04  += lrTemp2.Dec04;
          rTemp.MODIFY;

          rTempF.SETRANGE(Date01, lrResExc."Fecha Venta");
          IF NOT rTempF.FINDFIRST THEN
          BEGIN
            CLEAR(rTempF);
            lwIdF +=1;
            rTempF.Id     := lwIdF;
            rTempF.Date01 := lrResExc."Fecha Venta";
            rTempF.INSERT;
          END;
          rTempF.Int01  += lrTemp2.Int01;
          rTempF.Int02  += lrTemp2.Int02;
          rTempF.Dec01  += lrTemp2.Dec01;
          rTempF.Dec02  += lrTemp2.Dec02;
          rTempF.Dec03  += lrTemp2.Dec03;
          rTempF.Dec04  += lrTemp2.Dec04;
          rTempF.MODIFY;
        UNTIL lrResExc.NEXT = 0;
      END;

      CLEAR(rTemp);
      EXIT(rTemp.FINDFIRST);
    END;

    PROCEDURE BuscaIVA@1100217006(prResExc@1100217008 : Record 7010162;VAR prIVAVnt@1100217000 : Record 325) : Boolean;
    VAR
      lrCust@1100217003 : Record 18;
      lrRep@1100217004 : Record 7010241;
      lwOk@1100217002 : Boolean;
    BEGIN
      // BuscaIVA

      CLEAR(rTarifa);
      lwOk := prResExc.busca_tarifa(rTarifa);
      IF lwOk THEN BEGIN
        rTarifa.TESTFIELD("Gr. Registro IVA Producto");
        lrRep.GET(prResExc."Guia Venta");
        lwOk:= lrCust.GET(lrRep."Cliente Facturacion");
        IF lwOk THEN
          lwOk := prIVAVnt.GET(lrCust."VAT Bus. Posting Group", rTarifa."Gr. Registro IVA Producto");
      END;

      EXIT(lwOk);
    END;

    BEGIN
    {
      $001 JPT 06/09/12 CNT 12002 Permitir mas de un cobro por reserva de excursi¢n

      $002 AJS 06112012 Gestionar los representantes que trabajan a credito

      $003 AJS 07022013 No tomar en cuenta los tickets reembolsados

      $004 AJS 14022013 Modificar la clave para que ordene por ticket

      $005 AJS 19122013 Incluir un gran total final

      $006 ARM Reembolsos CNT-14047

      $007 AJS 05062015 Los reembolsos parciales tienen que reflejarse si se hacen en el periodo
    }
    END.
  }
  RDLDATA
  {
  }
}
