OBJECT Report 7009908 Informe Mayor - Excel
{
  OBJECT-PROPERTIES
  {
    Date=02/10/12;
    Time=12:00:00;
    Modified=Yes;
    Version List=AIC2009;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Larger report - Excel;
               ESP=Informe Mayor - Excel];
    ProcessingOnly=Yes;
  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table17;
        DataItemTableView=SORTING(G/L Account No.,Posting Date);
        DataItemVarName=diMovCon;
        OnPreDataItem=BEGIN
                        wVentana.OPEN(Text005);

                        rExcel.DELETEALL;

                        //. Fila de encabezados

                        wLinea := 1;

                        InsertaCelda(1 , diMovCon.FIELDCAPTION("G/L Account No.")    , FALSE, TRUE);
                        InsertaCelda(2 , diMovCon.FIELDCAPTION("Entry No.")          , FALSE, TRUE);
                        InsertaCelda(3 , diMovCon.FIELDCAPTION("Posting Date")       , FALSE, TRUE);
                        InsertaCelda(4 , diMovCon.FIELDCAPTION("Document No.")       , FALSE, TRUE);
                        InsertaCelda(5 , diMovCon.FIELDCAPTION(Description)          , FALSE, TRUE);
                        InsertaCelda(6 , diMovCon.FIELDCAPTION("Bal. Account No.")   , FALSE, TRUE);
                        InsertaCelda(7 , diMovCon.FIELDCAPTION("Transaction No.")    , FALSE, TRUE);
                        InsertaCelda(8 , Text001                                     , FALSE, TRUE);
                        InsertaCelda(9 , diMovCon.FIELDCAPTION("Source Type")        , FALSE, TRUE);
                        InsertaCelda(10, rMovProv.FIELDCAPTION("Tipo factura compra"), FALSE, TRUE);
                        InsertaCelda(11, rMovProv.FIELDCAPTION("Comprobante Fiscal") , FALSE, TRUE);
                        InsertaCelda(12, diMovCon.FIELDCAPTION("Debit Amount")       , FALSE, TRUE);
                        InsertaCelda(13, diMovCon.FIELDCAPTION("Credit Amount")      , FALSE, TRUE);

                        wTotalMovs := COUNT;
                      END;

        OnAfterGetRecord=BEGIN
                           wLinea += 1;

                           wVentana.UPDATE(1, ROUND(wLinea / wTotalMovs * 10000, 1) );

                           IF diMovCon."Source Type" = diMovCon."Source Type"::Vendor THEN BEGIN
                             IF NOT rMovProv.GET(diMovCon."Entry No.") THEN
                               CLEAR(rMovProv);
                             IF NOT rProv.GET(diMovCon."Source No.") THEN
                               CLEAR(rProv);
                             wProveedor := diMovCon."Source No." + ' - ' + rProv.Name;
                           END
                           ELSE BEGIN
                             CLEAR(rMovProv);
                             CLEAR(rProv);
                             CLEAR(wProveedor);
                           END;

                           InsertaCelda(1 , "G/L Account No."               , ("Posting Date" <> wFechaMov), FALSE);
                           InsertaCelda(2 , FORMAT("Entry No.")             , ("Posting Date" <> wFechaMov), FALSE);
                           InsertaCelda(3 , FORMAT("Posting Date")          , ("Posting Date" <> wFechaMov), FALSE);
                           InsertaCelda(4 , "Document No."                  , ("Posting Date" <> wFechaMov), FALSE);
                           InsertaCelda(5 , Description                     , ("Posting Date" <> wFechaMov), FALSE);
                           InsertaCelda(6 , "Bal. Account No."              , ("Posting Date" <> wFechaMov), FALSE);
                           InsertaCelda(7 , FORMAT("Transaction No.")       , ("Posting Date" <> wFechaMov), FALSE);
                           InsertaCelda(8 , RetornaCodigoBarras             , ("Posting Date" <> wFechaMov), FALSE);
                           InsertaCelda(9 , wProveedor                      , ("Posting Date" <> wFechaMov), FALSE);
                           InsertaCelda(10, RetornaTipoFacturaCompra        , ("Posting Date" <> wFechaMov), FALSE);
                           InsertaCelda(11, RetornaComprobanteFiscal        , ("Posting Date" <> wFechaMov), FALSE);
                           InsertaCelda(12, FORMAT("Debit Amount")          , ("Posting Date" <> wFechaMov), FALSE);
                           InsertaCelda(13, FORMAT(diMovCon."Credit Amount"), ("Posting Date" <> wFechaMov), FALSE);

                           wFechaMov := diMovCon."Posting Date";
                         END;

        OnPostDataItem=BEGIN
                         wVentana.CLOSE;

                         rExcel.CreateBook;
                         rExcel.CreateSheet(Text002, Text003, COMPANYNAME, USERID, TRUE, FALSE, Text004);
                         rExcel.GiveUserControl;
                       END;

        ReqFilterFields=G/L Account No.,Posting Date;
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=18150;
            SectionHeight=0;
          }
          CONTROLS
          {
          }
           }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=9020;
      Height=3410;
      CaptionML=[ENU=Larger report - Excel;
                 ESP=Informe Mayor - Excel];
    }
    CONTROLS
    {
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      rProv@1100253008 : Record 23;
      rExcel@1100253000 : Record 7009785;
      rMovProv@1100253002 : Record 25;
      wLinea@1100253001 : Integer;
      Text001@1100253003 : TextConst 'ENU=Barcode;ESP=Codigo de barras';
      wTotalMovs@1100253012 : Integer;
      wFechaMov@1100253004 : Date;
      Text002@1100253005 : TextConst 'ENU=Movements;ESP=Movimientos';
      Text003@1100253006 : TextConst 'ENU=Detailed movements;ESP=Detalle Movimientos';
      Text004@1100253007 : TextConst 'ENU=Transferring movements;ESP=Traspasando movimientos';
      wProveedor@1100253009 : Text[250];
      wVentana@1100253010 : Dialog;
      Text005@1100253011 : TextConst 'ENU=Grouping movements @1@@@@@@@@@@@@@;ESP=Reuniendo movimientos @1@@@@@@@@@@@@@';

    PROCEDURE InsertaCelda@1100253001(pwCol@1100253000 : Integer;pwTexto@1100253001 : Text[250];pwBorde@1100253002 : Boolean;pwNegrita@1100253003 : Boolean);
    BEGIN
      // InsertaCelda

      CLEAR(rExcel);
      rExcel.VALIDATE("Row No."           , wLinea);
      rExcel.VALIDATE("Column No."        , pwCol);
      rExcel.VALIDATE("Cell Value as Text", pwTexto);
      IF pwBorde THEN
        rExcel.VALIDATE("Borde Sup", 2);
      rExcel.VALIDATE(Bold, pwNegrita);
      rExcel.INSERT;
    END;

    PROCEDURE RetornaCodigoBarras@1100253000() : Code[20];
    VAR
      lrMovProv@1100253000 : Record 25;
      lrCabFra@1100253001 : Record 122;
      lrCabAbo@1100253002 : Record 124;
    BEGIN
      // VisualizaDocCompraProveedor

      IF diMovCon."Source Type" <> diMovCon."Source Type"::Vendor THEN
        EXIT;

      IF lrMovProv.GET(diMovCon."Entry No.") THEN BEGIN

        IF (lrMovProv."Document Type" <> lrMovProv."Document Type"::Invoice) AND
           (lrMovProv."Document Type" <> lrMovProv."Document Type"::"Credit Memo") THEN
          EXIT;

        IF lrMovProv."Document Type" = lrMovProv."Document Type"::Invoice THEN BEGIN
          lrCabFra.GET(lrMovProv."Document No.");
          EXIT(lrCabFra."Codigo barras PDF");
        END
        ELSE BEGIN
          lrCabAbo.GET(lrMovProv."Document No.");
          EXIT(lrCabAbo."Codigo barras PDF");
        END;
      END
      ELSE BEGIN
        IF (diMovCon."Document Type" <> diMovCon."Document Type"::Invoice) AND
           (diMovCon."Document Type" <> diMovCon."Document Type"::"Credit Memo") THEN
          EXIT;

        IF diMovCon."Document Type" = diMovCon."Document Type"::Invoice THEN BEGIN
          lrCabFra.GET(diMovCon."Document No.");
          EXIT(lrCabFra."Codigo barras PDF");
        END
        ELSE BEGIN
          lrCabAbo.GET(diMovCon."Document No.");
          EXIT(lrCabAbo."Codigo barras PDF");
        END;
      END;
    END;

    PROCEDURE RetornaTipoFacturaCompra@1100253002() : Code[10];
    VAR
      lrCabFra@1100253000 : Record 122;
      lrCabAbo@1100253001 : Record 124;
    BEGIN
      // RetornaTipoFacturaCompra

      IF diMovCon."Source Type" <> diMovCon."Source Type"::Vendor THEN
        EXIT;

      IF (diMovCon."Document Type" <> diMovCon."Document Type"::Invoice) AND
         (diMovCon."Document Type" <> diMovCon."Document Type"::"Credit Memo") THEN
        EXIT;

      IF diMovCon."Document Type" = diMovCon."Document Type"::Invoice THEN BEGIN
        lrCabFra.GET(diMovCon."Document No.");
        EXIT(lrCabFra."Tipo factura compra");
      END
      ELSE BEGIN
        lrCabAbo.GET(diMovCon."Document No.");
        EXIT(lrCabAbo."Tipo factura compra");
      END;
    END;

    PROCEDURE RetornaComprobanteFiscal@1100253004() : Code[20];
    VAR
      lrCabFraCmp@1100253001 : Record 122;
      lrCabAboCmp@1100253000 : Record 124;
      lrCabFraVta@1100253002 : Record 112;
      lrCabAboVta@1100253003 : Record 114;
    BEGIN
      // RetornaComprobanteFiscal

      IF (diMovCon."Source Type" <> diMovCon."Source Type"::Vendor) AND
         (diMovCon."Source Type" <> diMovCon."Source Type"::Customer) THEN
        EXIT;

      IF (diMovCon."Document Type" <> diMovCon."Document Type"::Invoice) AND
         (diMovCon."Document Type" <> diMovCon."Document Type"::"Credit Memo") THEN
        EXIT;

      CASE diMovCon."Source Type" OF
        diMovCon."Source Type"::Vendor:
        BEGIN
          IF diMovCon."Document Type" = diMovCon."Document Type"::Invoice THEN BEGIN
            lrCabFraCmp.GET(diMovCon."Document No.");
            EXIT(lrCabFraCmp."Comprobante Fiscal");
          END
          ELSE BEGIN
            lrCabAboCmp.GET(diMovCon."Document No.");
            EXIT(lrCabAboCmp."Comprobante Fiscal");
          END;
        END;
        diMovCon."Source Type"::Customer:
        BEGIN
          IF diMovCon."Document Type" = diMovCon."Document Type"::Invoice THEN BEGIN
            lrCabFraVta.GET(diMovCon."Document No.");
            EXIT(lrCabFraVta."Comprobante Fiscal");
          END
          ELSE BEGIN
            lrCabAboVta.GET(diMovCon."Document No.");
            EXIT(lrCabAboVta."Comprobante Fiscal");
          END;
        END;
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}
