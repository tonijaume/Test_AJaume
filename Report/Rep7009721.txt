OBJECT Report 7009721 Booking Trans. Compra/Venta
{
  OBJECT-PROPERTIES
  {
    Date=02/10/12;
    Time=12:00:00;
    Modified=Yes;
    Version List=AIC2009;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Sale/Purchase Trans. Booking;
               ESP=Booking Trans. Compra/Venta];
    TopMargin=1000;
    OnInitReport=BEGIN
                   IF NOT rEmpresa.FIND('-') THEN
                     ERROR(Text000);
                   IF NOT rDelegacion.FIND('-') THEN
                     ERROR(Text001);

                   IF "Booking Trans. Compra/Venta".GETFILTER(Usuario) = '' THEN
                     "Booking Trans. Compra/Venta".SETRANGE(Usuario, USERID());

                   IF FechaInicio = 0D THEN
                     FechaInicio := WORKDATE();
                   IF FechaFin = 0D THEN BEGIN
                     CASE TipoPeriodo OF
                       TipoPeriodo::D¡a               :  FechaFin    := CALCDATE(Text002, FechaInicio);
                       TipoPeriodo::Semana            :  FechaFin    := CALCDATE(Text003, FechaInicio);
                       TipoPeriodo::Mes               :  FechaFin    := CALCDATE(Text004, FechaInicio);
                       TipoPeriodo::Trimestre         :  FechaFin    := CALCDATE(Text005, FechaInicio);
                       TipoPeriodo::A¤o               :  FechaFin    := CALCDATE(Text006, FechaInicio);
                       TipoPeriodo::"Periodo contable":  FechaFin    := CALCDATE(Text007, FechaInicio);
                     END;
                   END;

                   MaxItems    := 18;
                   NumItems    := 7;
                   CLEAR(Totales);
                 END;

    OnPreReport=VAR
                  Ini@1103355000 : Integer;
                  fi@1103355001 : Integer;
                  GestionFormPeriodo@1103355002 : Codeunit 359;
                BEGIN
                  IF FechaInicio > FechaFin THEN
                    ERROR(Text008);

                  Calendario.RESET;
                  Calendario.SETRANGE ("Period Type", TipoPeriodo);
                  Calendario.SETFILTER("Period Start", '>=%1&<=%2',FechaInicio, FechaFin);
                  NumSeq := dec2int((Calendario.COUNT) / MaxItems);
                  Resto  := (Calendario.COUNT) - (NumSeq * MaxItems);
                END;

    Orientation=Landscape;
    PaperSize=A4 210 x 297 mm;
  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number)
                          WHERE(Number=FILTER(>0));
        OnAfterGetRecord=VAR
                           TextoFecha@1103355000 : Text[30];
                         BEGIN
                           IF Number > NumSeq + 1 THEN
                             CurrReport.BREAK;

                           IF Number = NumSeq + 1 THEN BEGIN
                           //  IF Resto = MaxItems THEN BEGIN
                           //    NumItems := MaxItems - 1;
                           //    Resto := 1;
                           //    NumSeq := NumSeq + 1
                           //  END
                           //  ELSE
                               NumItems := Resto;
                           END
                           ELSE
                             NumItems := MaxItems;

                           TextoFecha := STRSUBSTNO(Text009, Integer.Number - 1);
                           Inicio     := CALCDATE(TextoFecha, FechaInicio);
                           Fin        := CALCDATE(TextoFecha, FechaFin);
                           Index := 0;
                         END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=25800;
            SectionHeight=0;
          }
          CONTROLS
          {
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table7009777;
        DataItemTableView=SORTING(Usuario,Hotel,TourOperador,Tipo de Total,Tipo de Registro);
        NewPagePerGroup=Yes;
        OnPreDataItem=VAR
                        GestionFormPeriodo@1103355000 : Codeunit 359;
                        i@1103355001 : Integer;
                      BEGIN
                        CLEAR(Fechas);
                        CLEAR(TextFechas);
                        CLEAR(TTOO);
                        CLEAR(TextoTitulo);
                        IF GETFILTER(TourOperador) = '' THEN
                          TTOO := Text010
                        ELSE
                          TTOO := GETFILTER(TourOperador);

                        IF Integer.Number = 1 THEN BEGIN
                          Calendario.SETRANGE ("Period Type", TipoPeriodo);
                          Calendario."Period Start" := Inicio;
                          Calendario."Period End"   := Inicio;
                          GestionFormPeriodo.FindDate('=', Calendario, TipoPeriodo);
                        END;
                        FOR i := 1 TO NumItems DO BEGIN
                          Fechas[i,1] := Calendario."Period Start";
                          Fechas[i,2] := Calendario."Period End";
                          TextFechas[i] := GestionFormPeriodo.CreatePeriodFormat(TipoPeriodo, Fechas[i,1]);
                          GestionFormPeriodo.NextDate(1, Calendario, TipoPeriodo);
                        END;

                        IF Integer.Number = NumSeq + 1 THEN
                          TextFechas[NumItems + 1] := Text011;
                      END;

        OnAfterGetRecord=VAR
                           i@1103355000 : Integer;
                           Import@1103355001 : Integer;
                           aux_1@1103355002 : Decimal;
                           aux_2@1103355003 : Decimal;
                           aux_3@1103355004 : Decimal;
                           aux_4@1103355005 : Decimal;
                         BEGIN
                           IF "Tipo de Registro" = "Tipo de Registro"::Contrato THEN //Text012
                             CurrReport.SKIP;

                           Index := Index + 1;
                           CLEAR(Cantidad);
                           CASE TipoHab OF
                             TipoHab::Basica:
                               FOR i := 1 TO NumItems DO BEGIN
                                 CLEAR(Import);
                                 Import := CalculaImporteBas("Booking Trans. Compra/Venta", i);
                                 Cantidad[i] := STRSUBSTNO('%1', Import);
                                 Totales[Index] := Totales[Index] + Import;
                               END;
                             TipoHab::Cupo:
                               FOR i := 1 TO NumItems DO BEGIN
                                 CLEAR(Import);
                                 Import := CalculaImporteCup("Booking Trans. Compra/Venta", i);
                                 Cantidad[i] := STRSUBSTNO('%1', Import);
                                 Totales[Index] := Totales[Index] + Import;
                               END;
                           END;

                           IF Integer.Number = NumSeq + 1 THEN BEGIN
                             IF "Tipo de Registro" = "Tipo de Registro"::Porcentaje THEN BEGIN
                               IF Index < 6 THEN
                                 Cantidad[NumItems + 1] := '0'
                               ELSE BEGIN
                                 IF Totales[Index - 5] = 0 THEN
                                   Cantidad[NumItems + 1] := '0'
                                 ELSE
                                   Cantidad[NumItems + 1] := STRSUBSTNO('%1', ROUND((Totales[Index - 3] + Totales[Index - 2]) * 100 / Totales[Index - 5]));
                               END
                             END
                             ELSE BEGIN
                               IF "Tipo de Registro" = "Tipo de Registro"::"Porcentaje Prevision" THEN BEGIN
                                 IF Index < 7 THEN
                                   Cantidad[NumItems + 1] := '0'
                                 ELSE BEGIN
                                   IF Totales[Index - 6] = 0 THEN
                                     Cantidad[NumItems + 1] := '0'
                                   ELSE BEGIN
                                     aux_1 := Totales[Index - 5];
                                     aux_2 := Totales[Index - 4];
                                     aux_3 := Totales[Index - 3];
                                     aux_4 := Totales[Index - 6];
                                     IF Totales[Index - 5] > (Totales[Index - 4] + Totales[Index - 3]) THEN
                                       Cantidad[NumItems + 1] := STRSUBSTNO('%1', ROUND(Totales[Index - 5] * 100 / Totales[Index - 6]))
                                     ELSE
                                       Cantidad[NumItems + 1] := STRSUBSTNO('%1', ROUND((Totales[Index - 4] + Totales[Index - 3]) * 100 / Totales[Index - 6])
                           );
                                   END;
                                 END;
                               END
                               ELSE
                                 Cantidad[NumItems + 1] := STRSUBSTNO('%1', Totales[Index]);
                             END;
                           END;
                         END;

        OnPostDataItem=VAR
                         Calendario@1103355000 : Record 2000000007;
                         GestionFormPeriodo@1103355001 : Codeunit 359;
                       BEGIN
                         GestionFormPeriodo.NextDate(1, Calendario, TipoPeriodo);
                       END;

        ReqFilterFields=TourOperador,Hotel;
        GroupTotalFields=Hotel;
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Header;
            PrintOnEveryPage=Yes;
            SectionWidth=25800;
            SectionHeight=1269;
          }
          CONTROLS
          {
            { 1   ;Shape        ;0    ;423  ;25800;423  ;ShapeStyle=HorzLine }
            { 2   ;TextBox      ;0    ;0    ;5400 ;423  ;FontSize=8;
                                                         FontBold=Yes;
                                                         SourceExpr=rEmpresa.Name }
            { 3   ;Label        ;19050;0    ;6750 ;423  ;HorzAlign=Right;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=[ENU=Purchase/Sale Booking;
                                                                    ESP=Booking Compra/Venta] }
          }
           }
        { PROPERTIES
          {
            SectionType=TransHeader;
            SectionWidth=25800;
            SectionHeight=2115;
          }
          CONTROLS
          {
            { 52  ;TextBox      ;2850 ;0    ;6000 ;423  ;FontBold=Yes;
                                                         SourceExpr=TTOO }
            { 53  ;Label        ;0    ;0    ;2700 ;423  ;ParentControl=52;
                                                         FontBold=Yes;
                                                         LeaderDots=Yes;
                                                         CaptionML=[ENU=TourOperator;
                                                                    ESP=TourOperador] }
            { 54  ;TextBox      ;2850 ;423  ;6000 ;423  ;FontBold=Yes;
                                                         SourceExpr=Hotel + ' - ' + fNoms.nom_hotel(Hotel) }
            { 55  ;Label        ;0    ;423  ;2700 ;423  ;ParentControl=54;
                                                         FontBold=Yes;
                                                         LeaderDots=Yes;
                                                         CaptionML=[ENU=Hotel;
                                                                    ESP=Hotel] }
            { 56  ;TextBox      ;2850 ;846  ;6000 ;423  ;FontBold=Yes;
                                                         SourceExpr=TipoHab }
            { 57  ;Label        ;0    ;846  ;2700 ;423  ;ParentControl=56;
                                                         FontBold=Yes;
                                                         LeaderDots=Yes;
                                                         CaptionML=[ENU=Room type;
                                                                    ESP=Tipo de habitaci¢n] }
            { 58  ;TextBox      ;4200 ;1269 ;1200 ;423  ;HorzGlue=Right;
                                                         HorzAlign=Right;
                                                         FontBold=Yes;
                                                         SourceExpr=TextFechas[1] }
            { 59  ;TextBox      ;5400 ;1269 ;1200 ;423  ;HorzGlue=Right;
                                                         HorzAlign=Right;
                                                         FontBold=Yes;
                                                         SourceExpr=TextFechas[2] }
            { 60  ;TextBox      ;6600 ;1269 ;1200 ;423  ;HorzGlue=Right;
                                                         HorzAlign=Right;
                                                         FontBold=Yes;
                                                         SourceExpr=TextFechas[3] }
            { 61  ;TextBox      ;7800 ;1269 ;1200 ;423  ;HorzGlue=Right;
                                                         HorzAlign=Right;
                                                         FontBold=Yes;
                                                         SourceExpr=TextFechas[4] }
            { 62  ;TextBox      ;9000 ;1269 ;1200 ;423  ;HorzGlue=Right;
                                                         HorzAlign=Right;
                                                         FontBold=Yes;
                                                         SourceExpr=TextFechas[5] }
            { 63  ;TextBox      ;10200;1269 ;1200 ;423  ;HorzGlue=Right;
                                                         HorzAlign=Right;
                                                         FontBold=Yes;
                                                         SourceExpr=TextFechas[6] }
            { 64  ;TextBox      ;11400;1269 ;1200 ;423  ;HorzGlue=Right;
                                                         HorzAlign=Right;
                                                         FontBold=Yes;
                                                         SourceExpr=TextFechas[7] }
            { 65  ;TextBox      ;19800;1269 ;1200 ;423  ;HorzGlue=Right;
                                                         HorzAlign=Right;
                                                         FontBold=Yes;
                                                         SourceExpr=TextFechas[14] }
            { 66  ;TextBox      ;18600;1269 ;1200 ;423  ;HorzGlue=Right;
                                                         HorzAlign=Right;
                                                         FontBold=Yes;
                                                         SourceExpr=TextFechas[13] }
            { 67  ;TextBox      ;17400;1269 ;1200 ;423  ;HorzGlue=Right;
                                                         HorzAlign=Right;
                                                         FontBold=Yes;
                                                         SourceExpr=TextFechas[12] }
            { 68  ;TextBox      ;16200;1269 ;1200 ;423  ;HorzGlue=Right;
                                                         HorzAlign=Right;
                                                         FontBold=Yes;
                                                         SourceExpr=TextFechas[11] }
            { 69  ;TextBox      ;15000;1269 ;1200 ;423  ;HorzGlue=Right;
                                                         HorzAlign=Right;
                                                         FontBold=Yes;
                                                         SourceExpr=TextFechas[10] }
            { 70  ;TextBox      ;13800;1269 ;1200 ;423  ;HorzGlue=Right;
                                                         HorzAlign=Right;
                                                         FontBold=Yes;
                                                         SourceExpr=TextFechas[9] }
            { 71  ;TextBox      ;12600;1269 ;1200 ;423  ;HorzGlue=Right;
                                                         HorzAlign=Right;
                                                         FontBold=Yes;
                                                         SourceExpr=TextFechas[8] }
            { 72  ;TextBox      ;22200;1269 ;1200 ;423  ;HorzGlue=Right;
                                                         HorzAlign=Right;
                                                         FontBold=Yes;
                                                         SourceExpr=TextFechas[16] }
            { 73  ;TextBox      ;21000;1269 ;1200 ;423  ;HorzGlue=Right;
                                                         HorzAlign=Right;
                                                         FontBold=Yes;
                                                         SourceExpr=TextFechas[15] }
            { 74  ;TextBox      ;23400;1269 ;1200 ;423  ;HorzGlue=Right;
                                                         HorzAlign=Right;
                                                         FontBold=Yes;
                                                         SourceExpr=TextFechas[17] }
            { 75  ;TextBox      ;24600;1269 ;1200 ;423  ;HorzGlue=Right;
                                                         HorzAlign=Right;
                                                         FontBold=Yes;
                                                         SourceExpr=TextFechas[18] }
          }
           }
        { PROPERTIES
          {
            SectionType=GroupHeader;
            SectionWidth=25800;
            SectionHeight=2115;
          }
          CONTROLS
          {
            { 50  ;TextBox      ;2850 ;0    ;6000 ;423  ;FontBold=Yes;
                                                         SourceExpr=TTOO }
            { 51  ;Label        ;0    ;0    ;2700 ;423  ;ParentControl=50;
                                                         FontBold=Yes;
                                                         LeaderDots=Yes;
                                                         CaptionML=[ENU=TourOperator;
                                                                    ESP=TourOperador] }
            { 25  ;TextBox      ;2850 ;423  ;6000 ;423  ;FontBold=Yes;
                                                         SourceExpr=Hotel + ' - ' + fNoms.nom_hotel(Hotel) }
            { 47  ;Label        ;0    ;423  ;2700 ;423  ;ParentControl=25;
                                                         FontBold=Yes;
                                                         LeaderDots=Yes;
                                                         CaptionML=[ENU=Hotel;
                                                                    ESP=Hotel] }
            { 48  ;TextBox      ;2850 ;846  ;6000 ;423  ;FontBold=Yes;
                                                         SourceExpr=TipoHab }
            { 49  ;Label        ;0    ;846  ;2700 ;423  ;ParentControl=48;
                                                         FontBold=Yes;
                                                         LeaderDots=Yes;
                                                         CaptionML=[ENU=Room type;
                                                                    ESP=Tipo de habitaci¢n] }
            { 18  ;TextBox      ;4200 ;1269 ;1200 ;423  ;HorzGlue=Right;
                                                         HorzAlign=Right;
                                                         FontBold=Yes;
                                                         SourceExpr=TextFechas[1] }
            { 19  ;TextBox      ;5400 ;1269 ;1200 ;423  ;HorzGlue=Right;
                                                         HorzAlign=Right;
                                                         FontBold=Yes;
                                                         SourceExpr=TextFechas[2] }
            { 20  ;TextBox      ;6600 ;1269 ;1200 ;423  ;HorzGlue=Right;
                                                         HorzAlign=Right;
                                                         FontBold=Yes;
                                                         SourceExpr=TextFechas[3] }
            { 21  ;TextBox      ;7800 ;1269 ;1200 ;423  ;HorzGlue=Right;
                                                         HorzAlign=Right;
                                                         FontBold=Yes;
                                                         SourceExpr=TextFechas[4] }
            { 22  ;TextBox      ;9000 ;1269 ;1200 ;423  ;HorzGlue=Right;
                                                         HorzAlign=Right;
                                                         FontBold=Yes;
                                                         SourceExpr=TextFechas[5] }
            { 23  ;TextBox      ;10200;1269 ;1200 ;423  ;HorzGlue=Right;
                                                         HorzAlign=Right;
                                                         FontBold=Yes;
                                                         SourceExpr=TextFechas[6] }
            { 24  ;TextBox      ;11400;1269 ;1200 ;423  ;HorzGlue=Right;
                                                         HorzAlign=Right;
                                                         FontBold=Yes;
                                                         SourceExpr=TextFechas[7] }
            { 36  ;TextBox      ;19800;1269 ;1200 ;423  ;HorzGlue=Right;
                                                         HorzAlign=Right;
                                                         FontBold=Yes;
                                                         SourceExpr=TextFechas[14] }
            { 37  ;TextBox      ;18600;1269 ;1200 ;423  ;HorzGlue=Right;
                                                         HorzAlign=Right;
                                                         FontBold=Yes;
                                                         SourceExpr=TextFechas[13] }
            { 38  ;TextBox      ;17400;1269 ;1200 ;423  ;HorzGlue=Right;
                                                         HorzAlign=Right;
                                                         FontBold=Yes;
                                                         SourceExpr=TextFechas[12] }
            { 39  ;TextBox      ;16200;1269 ;1200 ;423  ;HorzGlue=Right;
                                                         HorzAlign=Right;
                                                         FontBold=Yes;
                                                         SourceExpr=TextFechas[11] }
            { 40  ;TextBox      ;15000;1269 ;1200 ;423  ;HorzGlue=Right;
                                                         HorzAlign=Right;
                                                         FontBold=Yes;
                                                         SourceExpr=TextFechas[10] }
            { 41  ;TextBox      ;13800;1269 ;1200 ;423  ;HorzGlue=Right;
                                                         HorzAlign=Right;
                                                         FontBold=Yes;
                                                         SourceExpr=TextFechas[9] }
            { 42  ;TextBox      ;12600;1269 ;1200 ;423  ;HorzGlue=Right;
                                                         HorzAlign=Right;
                                                         FontBold=Yes;
                                                         SourceExpr=TextFechas[8] }
            { 45  ;TextBox      ;22200;1269 ;1200 ;423  ;HorzGlue=Right;
                                                         HorzAlign=Right;
                                                         FontBold=Yes;
                                                         SourceExpr=TextFechas[16] }
            { 46  ;TextBox      ;21000;1269 ;1200 ;423  ;HorzGlue=Right;
                                                         HorzAlign=Right;
                                                         FontBold=Yes;
                                                         SourceExpr=TextFechas[15] }
            { 44  ;TextBox      ;23400;1269 ;1200 ;423  ;HorzGlue=Right;
                                                         HorzAlign=Right;
                                                         FontBold=Yes;
                                                         SourceExpr=TextFechas[17] }
            { 43  ;TextBox      ;24600;1269 ;1200 ;423  ;HorzGlue=Right;
                                                         HorzAlign=Right;
                                                         FontBold=Yes;
                                                         SourceExpr=TextFechas[18] }
          }
           }
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=25800;
            SectionHeight=423;
            OnPreSection=BEGIN
                           IF "Booking Trans. Compra/Venta"."Tipo de Registro" = "Booking Trans. Compra/Venta"."Tipo de Registro"::T¡tulo THEN
                             TextoTitulo := Texto
                           ELSE
                             CurrReport.SHOWOUTPUT(FALSE);
                         END;

          }
          CONTROLS
          {
            { 33  ;TextBox      ;0    ;0    ;3300 ;423  ;FontBold=Yes;
                                                         SourceExpr=Texto }
          }
           }
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=25800;
            SectionHeight=423;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT("Booking Trans. Compra/Venta"."Tipo de Registro" <>
                                                 "Booking Trans. Compra/Venta"."Tipo de Registro"::T¡tulo);
                         END;

          }
          CONTROLS
          {
            { 12  ;TextBox      ;1200 ;0    ;2850 ;423  ;SourceExpr=Texto }
            { 9   ;TextBox      ;4200 ;0    ;1050 ;423  ;HorzAlign=Right;
                                                         SourceExpr=Cantidad[1] }
            { 11  ;TextBox      ;5400 ;0    ;1050 ;423  ;HorzAlign=Right;
                                                         SourceExpr=Cantidad[2] }
            { 13  ;TextBox      ;6600 ;0    ;1050 ;423  ;HorzAlign=Right;
                                                         SourceExpr=Cantidad[3] }
            { 14  ;TextBox      ;11400;0    ;1050 ;423  ;HorzAlign=Right;
                                                         SourceExpr=Cantidad[7] }
            { 15  ;TextBox      ;10200;0    ;1050 ;423  ;HorzAlign=Right;
                                                         SourceExpr=Cantidad[6] }
            { 16  ;TextBox      ;9000 ;0    ;1050 ;423  ;HorzAlign=Right;
                                                         SourceExpr=Cantidad[5] }
            { 17  ;TextBox      ;7800 ;0    ;1050 ;423  ;HorzAlign=Right;
                                                         SourceExpr=Cantidad[4] }
            { 26  ;TextBox      ;19800;0    ;1050 ;423  ;HorzAlign=Right;
                                                         SourceExpr=Cantidad[14] }
            { 27  ;TextBox      ;18600;0    ;1050 ;423  ;HorzAlign=Right;
                                                         SourceExpr=Cantidad[13] }
            { 28  ;TextBox      ;17400;0    ;1050 ;423  ;HorzAlign=Right;
                                                         SourceExpr=Cantidad[12] }
            { 29  ;TextBox      ;16200;0    ;1050 ;423  ;HorzAlign=Right;
                                                         SourceExpr=Cantidad[11] }
            { 30  ;TextBox      ;15000;0    ;1050 ;423  ;HorzAlign=Right;
                                                         SourceExpr=Cantidad[10] }
            { 31  ;TextBox      ;13800;0    ;1050 ;423  ;HorzAlign=Right;
                                                         SourceExpr=Cantidad[9] }
            { 32  ;TextBox      ;12600;0    ;1050 ;423  ;HorzAlign=Right;
                                                         SourceExpr=Cantidad[8] }
            { 8   ;TextBox      ;24600;0    ;1050 ;423  ;HorzAlign=Right;
                                                         SourceExpr=Cantidad[18] }
            { 10  ;TextBox      ;23400;0    ;1050 ;423  ;HorzAlign=Right;
                                                         SourceExpr=Cantidad[17] }
            { 34  ;TextBox      ;22200;0    ;1050 ;423  ;HorzAlign=Right;
                                                         SourceExpr=Cantidad[16] }
            { 35  ;TextBox      ;21000;0    ;1050 ;423  ;HorzAlign=Right;
                                                         SourceExpr=Cantidad[15] }
          }
           }
        { PROPERTIES
          {
            SectionType=Footer;
            PrintOnEveryPage=Yes;
            PlaceInBottom=Yes;
            SectionWidth=25800;
            SectionHeight=846;
          }
          CONTROLS
          {
            { 4   ;TextBox      ;9000 ;423  ;7050 ;423  ;HorzAlign=Center;
                                                         SourceExpr=FORMAT(TODAY,0,4) + ' / ' + FORMAT(TIME,0,0) + ' / ' + USERID }
            { 5   ;TextBox      ;22650;423  ;3150 ;423  ;HorzAlign=Right;
                                                         SourceExpr=Text013 + FORMAT(CurrReport.PAGENO) }
            { 6   ;Shape        ;0    ;0    ;25800;423  ;ShapeStyle=HorzLine }
            { 7   ;TextBox      ;0    ;423  ;3600 ;423  ;SourceExpr=fNoms.nom_delegacion(rDelegacion.Delegacion) }
          }
           }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=5720;
      Height=3080;
      CaptionML=[ENU=Sale/Purchase Trans. Booking;
                 ESP=Booking Trans. Compra/Venta];
      OnOpenForm=BEGIN
                   RequestOptionsForm.ACTIVATE;
                 END;

    }
    CONTROLS
    {
      { 1   ;TextBox      ;3520 ;220  ;1980 ;440  ;SourceExpr=TipoPeriodo }
      { 2   ;Label        ;220  ;220  ;3190 ;440  ;ParentControl=1;
                                                   CaptionML=[ENU=Term type;
                                                              ESP=Tipo de Periodo] }
      { 3   ;TextBox      ;3520 ;770  ;1980 ;440  ;SourceExpr=FechaInicio }
      { 4   ;Label        ;220  ;770  ;3190 ;440  ;ParentControl=3;
                                                   CaptionML=[ENU=Starting Date;
                                                              ESP=Fecha inicio] }
      { 5   ;TextBox      ;3520 ;1320 ;1980 ;440  ;SourceExpr=FechaFin }
      { 6   ;Label        ;220  ;1320 ;3190 ;440  ;ParentControl=5;
                                                   CaptionML=[ENU=End Date;
                                                              ESP=Fecha fin] }
      { 7   ;TextBox      ;3520 ;1870 ;1980 ;440  ;Editable=No;
                                                   SourceExpr=TipoHab }
      { 8   ;Label        ;220  ;1870 ;3190 ;440  ;ParentControl=7;
                                                   CaptionML=[ENU=Room type;
                                                              ESP=Tipo de habitaci¢n] }
      { 9   ;TextBox      ;3520 ;2420 ;1980 ;440  ;SourceExpr=FiltTipHab }
      { 10  ;Label        ;220  ;2420 ;3190 ;440  ;ParentControl=9;
                                                   CaptionML=[ENU=Room;
                                                              ESP=Habitaci¢n] }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      Text000@1103355024 : TextConst 'ENU=There is any company;ESP=No hay ninguna empresa';
      Text001@1103355025 : TextConst 'ENU=Agency parameters do not exist;ESP=No existen par metros de agencia';
      Text002@1103355026 : TextConst 'ENU=" +7D";ESP=+7D';
      Text003@1103355027 : TextConst 'ENU=+7W;ESP=+7W';
      Text004@1103355028 : TextConst 'ENU=+7M;ESP=+7M';
      Text005@1103355029 : TextConst 'ENU=+7Q;ESP=+7Q';
      Text006@1103355030 : TextConst 'ENU=+7Y;ESP=+7Y';
      Text007@1103355031 : TextConst 'ENU=+7C;ESP=+7C';
      Text008@1103355032 : TextConst 'ENU=Start date cannot be higher than final date;ESP=La fecha inicio no puede ser mayor a la fecha fin';
      Text009@1103355033 : TextConst 'ENU=+%1D;ESP=+%1D';
      Text010@1103355034 : TextConst 'ENU=All;ESP=Todos';
      Text011@1103355035 : TextConst 'ENU=Total;ESP=Total';
      Text012@1103355036 : TextConst 'ENU=Allotment all contracts;ESP=Cupo todos contratos';
      Text013@1103355037 : TextConst 'ENU=page;ESP=P gina';
      rEmpresa@1103355000 : Record 79;
      rDelegacion@1103355001 : Record 7009700;
      Calendario@1103355002 : Record 2000000007;
      fNoms@1103355003 : Codeunit 7009702;
      rHotel@1103355004 : Record 7009724;
      FechaInicio@1103355005 : Date;
      FechaFin@1103355006 : Date;
      Inicio@1103355007 : Date;
      Fin@1103355008 : Date;
      Cantidad@1103355009 : ARRAY [18] OF Text[10];
      TextFechas@1103355010 : ARRAY [18] OF Text[10];
      Fechas@1103355011 : ARRAY [18,2] OF Date;
      NumItems@1103355012 : Integer;
      MaxItems@1103355013 : Integer;
      NumSeq@1103355014 : Integer;
      Resto@1103355015 : Integer;
      FiltTipHab@1103355016 : Code[10];
      TipoPeriodo@1103355017 : 'D¡a,Semana,Mes,Trimestre,A¤o,Periodo contable';
      TipoHab@1103355018 : 'Basica,Cupo';
      TTOO@1103355019 : Text[30];
      TextoTitulo@1103355020 : Text[30];
      Totales@1103355021 : ARRAY [500] OF Integer;
      Index@1103355022 : Integer;
      ok@1103355023 : Boolean;

    PROCEDURE CalculaImporteBas@2(Rec@1103355000 : Record 7009777;i@1103355001 : Integer) Imp : Decimal;
    BEGIN
      //CalculaImporteBas(Rec : Record "Booking Trans. Compra/Venta") imp : Decimal

      ok := rHotel.GET("Booking Trans. Compra/Venta".Hotel);

      Rec.SETRANGE(Hotel, "Booking Trans. Compra/Venta".Hotel);

      IF FiltTipHab = '' THEN
        Rec.SETRANGE("Habitacion Rango")
      ELSE
        Rec.SETFILTER("Habitacion Rango", FiltTipHab);

      Rec.SETRANGE("Dia Rango", Fechas[i,1], Fechas[i,2]);

      IF Rec.TourOperador = '' THEN
        Rec.SETRANGE("TourOperador Rango")
      ELSE
        Rec.SETRANGE("TourOperador Rango", Rec.TourOperador);

      IF Rec.TourOperador= '' THEN BEGIN

        IF "Booking Trans. Compra/Venta"."Tipo de Registro" = Rec."Tipo de Registro"::T¡tulo THEN BEGIN
          Imp := 0;
        END;

        IF Rec."Tipo de Total" = Rec."Tipo de Total"::Compra THEN BEGIN

          IF "Booking Trans. Compra/Venta"."Tipo de Registro" = Rec."Tipo de Registro"::Contrato THEN BEGIN
            Rec.CALCFIELDS("Cupo hotel compra");
            Imp := Rec."Cupo hotel compra";
          END;

          IF "Booking Trans. Compra/Venta"."Tipo de Registro" = Rec."Tipo de Registro"::Cupo THEN BEGIN
            Rec.CALCFIELDS("Cupo contratado compra");
            Imp := Rec."Cupo contratado compra";
          END;

          IF "Booking Trans. Compra/Venta"."Tipo de Registro" = Rec."Tipo de Registro"::Prevision THEN BEGIN
            Rec.CALCFIELDS("Prevision ocupacion compra");
            Imp := Rec."Prevision ocupacion compra";
          END;

          IF "Booking Trans. Compra/Venta"."Tipo de Registro" = Rec."Tipo de Registro"::Ocupado THEN BEGIN
            IF rHotel.NoName THEN BEGIN
              Rec.CALCFIELDS("Reservado compra");
              Imp := Rec."Reservado compra";
            END
            ELSE BEGIN
              Rec.CALCFIELDS("Ocupado compra");
              Imp := Rec."Ocupado compra";
            END;
          END;

          IF "Booking Trans. Compra/Venta"."Tipo de Registro" = Rec."Tipo de Registro"::Asignado THEN BEGIN
            Rec.CALCFIELDS("Asignado compra");
            Imp := Rec."Asignado compra";
          END;

          IF "Booking Trans. Compra/Venta"."Tipo de Registro" = Rec."Tipo de Registro"::Libre THEN BEGIN
            IF rHotel.NoName THEN BEGIN
              Rec.CALCFIELDS("Cupo contratado compra");
              Rec.CALCFIELDS("Reservado compra");
              Rec.CALCFIELDS("Asignado compra");
              Imp := Rec."Cupo contratado compra" - Rec."Reservado compra" - Rec."Asignado compra";
            END
            ELSE BEGIN
              Rec.CALCFIELDS("Cupo contratado compra");
              Rec.CALCFIELDS("Ocupado compra");
              Rec.CALCFIELDS("Asignado compra");
              Imp := Rec."Cupo contratado compra" - Rec."Ocupado compra" - Rec."Asignado compra";
            END
          END;

          IF "Booking Trans. Compra/Venta"."Tipo de Registro" = Rec."Tipo de Registro"::Porcentaje THEN BEGIN
            Rec.CALCFIELDS("Cupo contratado compra");
            Rec.CALCFIELDS("Ocupado compra");
            Rec.CALCFIELDS("Asignado compra");
            IF Rec."Cupo contratado compra" = 0 THEN
              Imp := 0
            ELSE
             Imp := ROUND(((Rec."Ocupado compra" + Rec."Asignado compra") * 100) / Rec."Cupo contratado compra");
          END;
          // AJS 12-07-99
          //
          IF "Booking Trans. Compra/Venta"."Tipo de Registro" = Rec."Tipo de Registro"::"Porcentaje Prevision" THEN BEGIN
            Rec.CALCFIELDS("Cupo contratado compra");
            Rec.CALCFIELDS("Ocupado compra");
            Rec.CALCFIELDS("Asignado compra");
            Rec.CALCFIELDS("Prevision ocupacion compra");
            IF Rec."Cupo contratado compra" = 0 THEN
              Imp := 0
            ELSE BEGIN
              IF Rec."Prevision ocupacion compra" > (Rec."Ocupado compra" + Rec."Asignado compra") THEN
                Imp := ROUND((Rec."Prevision ocupacion compra" * 100) / Rec."Cupo contratado compra")
              ELSE
                Imp := ROUND(((Rec."Ocupado compra" + Rec."Asignado compra") * 100) / Rec."Cupo contratado compra");
            END;
          END;
          // FIN AJS 12-07-99
          //
        END
        ELSE BEGIN
          IF "Booking Trans. Compra/Venta"."Tipo de Registro" = Rec."Tipo de Registro"::Contrato THEN BEGIN
            Rec.CALCFIELDS("Cupo hotel venta");
            Imp := Rec."Cupo hotel venta";
          END;

          IF "Booking Trans. Compra/Venta"."Tipo de Registro" = Rec."Tipo de Registro"::Cupo THEN BEGIN
            Rec.CALCFIELDS("Cupo contratado venta");
            Imp := Rec."Cupo contratado venta";
          END;

          IF "Booking Trans. Compra/Venta"."Tipo de Registro" = Rec."Tipo de Registro"::Prevision THEN BEGIN
            Rec.CALCFIELDS("Prevision ocupacion venta");
            Imp := Rec."Prevision ocupacion venta";
          END;

          IF "Booking Trans. Compra/Venta"."Tipo de Registro" = Rec."Tipo de Registro"::Ocupado THEN BEGIN
            IF rHotel.NoName THEN BEGIN
              Rec.CALCFIELDS("Reservado venta");
              Imp := Rec."Reservado venta";
            END
            ELSE BEGIN
              Rec.CALCFIELDS("Ocupado venta");
              Imp := Rec."Ocupado venta";
            END
          END;

          IF "Booking Trans. Compra/Venta"."Tipo de Registro" = Rec."Tipo de Registro"::Asignado THEN BEGIN
            Rec.CALCFIELDS("Asignado venta");
            Imp := Rec."Asignado venta";
          END;

          IF "Booking Trans. Compra/Venta"."Tipo de Registro" = Rec."Tipo de Registro"::Libre THEN BEGIN
            IF rHotel.NoName THEN BEGIN
              Rec.CALCFIELDS("Cupo contratado venta");
              Rec.CALCFIELDS("Reservado venta");
              Rec.CALCFIELDS("Asignado venta");
              Imp := Rec."Cupo contratado venta" - Rec."Reservado venta" - Rec."Asignado venta";
            END
            ELSE BEGIN
              Rec.CALCFIELDS("Cupo contratado venta");
              Rec.CALCFIELDS("Ocupado venta");
              Rec.CALCFIELDS("Asignado venta");
              Imp := Rec."Cupo contratado venta" - Rec."Ocupado venta" - Rec."Asignado venta";
            END
          END;

          IF "Booking Trans. Compra/Venta"."Tipo de Registro" = Rec."Tipo de Registro"::Porcentaje THEN BEGIN
            Rec.CALCFIELDS("Cupo contratado venta");
            Rec.CALCFIELDS("Ocupado venta");
            Rec.CALCFIELDS("Asignado venta");
            IF Rec."Cupo contratado venta" = 0 THEN
              Imp := 0
            ELSE
             Imp := ROUND(((Rec."Ocupado venta" + Rec."Asignado venta") * 100) / Rec."Cupo contratado venta");
          END;
          // AJS 12-07-99
          //
          IF "Booking Trans. Compra/Venta"."Tipo de Registro" = Rec."Tipo de Registro"::"Porcentaje Prevision" THEN BEGIN
            Rec.CALCFIELDS("Cupo contratado venta");
            Rec.CALCFIELDS("Ocupado venta");
            Rec.CALCFIELDS("Asignado venta");
            Rec.CALCFIELDS("Prevision ocupacion venta");
            IF Rec."Cupo contratado venta" = 0 THEN
              Imp := 0
            ELSE BEGIN
              IF Rec."Prevision ocupacion venta" > (Rec."Ocupado venta" + Rec."Asignado venta") THEN
                Imp := ROUND((Rec."Prevision ocupacion venta" * 100) / Rec."Cupo contratado venta")
              ELSE
                Imp := ROUND(((Rec."Ocupado venta" + Rec."Asignado venta") * 100) / Rec."Cupo contratado venta");
            END;
          END;
          // FIN AJS 12-07-99
          //
        END;
      END;
      IF Rec.TourOperador <> '' THEN BEGIN

        IF "Booking Trans. Compra/Venta"."Tipo de Registro" = Rec."Tipo de Registro"::T¡tulo THEN BEGIN
          Imp := 0;
        END;

        IF "Booking Trans. Compra/Venta"."Tipo de Registro" = Rec."Tipo de Registro"::Contrato THEN BEGIN
          Rec.CALCFIELDS("Cupo hotel venta");
          Imp := Rec."Cupo hotel venta";
        END;

        IF "Booking Trans. Compra/Venta"."Tipo de Registro" = Rec."Tipo de Registro"::Cupo THEN BEGIN
          Rec.CALCFIELDS("Cupo contratado venta");
          Imp := Rec."Cupo contratado venta";
        END;

        IF "Booking Trans. Compra/Venta"."Tipo de Registro" = Rec."Tipo de Registro"::Prevision THEN BEGIN
          Rec.CALCFIELDS("Prevision ocupacion venta");
          Imp := Rec."Prevision ocupacion venta";
        END;

        IF "Booking Trans. Compra/Venta"."Tipo de Registro" = Rec."Tipo de Registro"::Ocupado THEN BEGIN
          IF rHotel.NoName THEN BEGIN
            Rec.CALCFIELDS("Reservado venta");
            Imp := Rec."Reservado venta";
          END
          ELSE BEGIN
            Rec.CALCFIELDS("Ocupado venta");
            Imp := Rec."Ocupado venta";
          END
        END;

        IF "Booking Trans. Compra/Venta"."Tipo de Registro" = Rec."Tipo de Registro"::Asignado THEN BEGIN
          Rec.CALCFIELDS("Asignado venta");
          Imp := Rec."Asignado venta";
        END;

        IF "Booking Trans. Compra/Venta"."Tipo de Registro" = Rec."Tipo de Registro"::Libre THEN BEGIN
          IF rHotel.NoName THEN BEGIN
            Rec.CALCFIELDS("Cupo contratado venta");
            Rec.CALCFIELDS("Reservado venta");
            Rec.CALCFIELDS("Asignado venta");
            Imp := Rec."Cupo contratado venta" - Rec."Reservado venta" - Rec."Asignado venta";
          END
          ELSE BEGIN
            Rec.CALCFIELDS("Cupo contratado venta");
            Rec.CALCFIELDS("Ocupado venta");
            Rec.CALCFIELDS("Asignado venta");
            Imp := Rec."Cupo contratado venta" - Rec."Ocupado venta" - Rec."Asignado venta";
          END
        END;

        IF "Booking Trans. Compra/Venta"."Tipo de Registro" = Rec."Tipo de Registro"::Porcentaje THEN BEGIN
          Rec.CALCFIELDS("Cupo contratado venta");
          Rec.CALCFIELDS("Ocupado venta");
          Rec.CALCFIELDS("Asignado venta");
          IF Rec."Cupo contratado venta" = 0 THEN
            Imp := 0
          ELSE
           Imp := ROUND(((Rec."Ocupado venta" + Rec."Asignado venta") * 100) / Rec."Cupo contratado venta");
        END;
        // AJS 12-07-99
        //
        IF "Booking Trans. Compra/Venta"."Tipo de Registro" = Rec."Tipo de Registro"::"Porcentaje Prevision" THEN BEGIN
          Rec.CALCFIELDS("Cupo contratado venta");
          Rec.CALCFIELDS("Ocupado venta");
          Rec.CALCFIELDS("Asignado venta");
          Rec.CALCFIELDS("Prevision ocupacion venta");
          IF Rec."Cupo contratado venta" = 0 THEN
            Imp := 0
          ELSE BEGIN
            IF Rec."Prevision ocupacion venta" > (Rec."Ocupado venta" + Rec."Asignado venta") THEN
              Imp := ROUND((Rec."Prevision ocupacion venta" * 100) / Rec."Cupo contratado venta")
            ELSE
              Imp := ROUND(((Rec."Ocupado venta" + Rec."Asignado venta") * 100) / Rec."Cupo contratado venta");
          END;
        END;
        // FIN AJS 12-07-99
        //
      END;
    END;

    PROCEDURE CalculaImporteCup@3(Rec@1103355000 : Record 7009777;i@1103355001 : Integer) Imp : Decimal;
    BEGIN
      //CalculaImporteCup(Rec : Record "Booking Trans. Compra/Venta") imp : Decimal

      ok := rHotel.GET("Booking Trans. Compra/Venta".Hotel);

      Rec.SETRANGE(Hotel, "Booking Trans. Compra/Venta".Hotel);

      IF FiltTipHab = '' THEN
        Rec.SETRANGE("Habitacion cupo Rango")
      ELSE
        Rec.SETFILTER("Habitacion cupo Rango", FiltTipHab);

      Rec.SETRANGE("Dia Rango", Fechas[i,1], Fechas[i,2]);

      IF Rec.TourOperador = '' THEN
        Rec.SETRANGE("TourOperador Rango")
      ELSE
        Rec.SETRANGE("TourOperador Rango", Rec.TourOperador);

      IF Rec.TourOperador= '' THEN BEGIN

        IF "Booking Trans. Compra/Venta"."Tipo de Registro" = Rec."Tipo de Registro"::T¡tulo THEN BEGIN
          Imp := 0;
        END;

        IF "Booking Trans. Compra/Venta"."Tipo de Total" = Rec."Tipo de Total"::Compra THEN BEGIN

          IF "Booking Trans. Compra/Venta"."Tipo de Registro" = Rec."Tipo de Registro"::Contrato THEN BEGIN
            Rec.CALCFIELDS("Cupo hotel compra 2");
            Imp := Rec."Cupo hotel compra 2";
          END;

          IF "Booking Trans. Compra/Venta"."Tipo de Registro" = Rec."Tipo de Registro"::Cupo THEN BEGIN
            Rec.CALCFIELDS("Cupo contratado compra 2");
            Imp := Rec."Cupo contratado compra 2";
          END;

          IF "Booking Trans. Compra/Venta"."Tipo de Registro" = Rec."Tipo de Registro"::Prevision THEN BEGIN
            Rec.CALCFIELDS("Prevision ocupacion compra 2");
            Imp := Rec."Prevision ocupacion compra 2";
          END;

          IF "Booking Trans. Compra/Venta"."Tipo de Registro" = Rec."Tipo de Registro"::Ocupado THEN BEGIN
            IF rHotel.NoName THEN BEGIN
              Rec.CALCFIELDS("Reservado compra 2");
              Imp := Rec."Reservado compra 2";
            END
            ELSE BEGIN
              Rec.CALCFIELDS("Ocupado compra 2");
              Imp := Rec."Ocupado compra 2";
            END;
          END;

          IF "Booking Trans. Compra/Venta"."Tipo de Registro" = Rec."Tipo de Registro"::Asignado THEN BEGIN
            Rec.CALCFIELDS("Asignado compra 2");
            Imp := Rec."Asignado compra 2";
          END;

          IF "Booking Trans. Compra/Venta"."Tipo de Registro" = Rec."Tipo de Registro"::Libre THEN BEGIN
            IF rHotel.NoName THEN BEGIN
              Rec.CALCFIELDS("Cupo contratado compra 2");
              Rec.CALCFIELDS("Reservado compra 2");
              Rec.CALCFIELDS("Asignado compra 2");
              Imp := Rec."Cupo contratado compra 2" - Rec."Reservado compra 2" - Rec."Asignado compra 2";
            END
            ELSE BEGIN
              Rec.CALCFIELDS("Cupo contratado compra 2");
              Rec.CALCFIELDS("Ocupado compra 2");
              Rec.CALCFIELDS("Asignado compra 2");
              Imp := Rec."Cupo contratado compra 2" - Rec."Ocupado compra 2" - Rec."Asignado compra 2";
            END
          END;

          IF "Booking Trans. Compra/Venta"."Tipo de Registro" = Rec."Tipo de Registro"::Porcentaje THEN BEGIN
            Rec.CALCFIELDS("Cupo contratado compra 2");
            Rec.CALCFIELDS("Ocupado compra 2");
            Rec.CALCFIELDS("Asignado compra 2");
            IF Rec."Cupo contratado compra 2" = 0 THEN
              Imp := 0
            ELSE
             Imp := ROUND(((Rec."Ocupado compra 2" + Rec."Asignado compra 2") * 100) / Rec."Cupo contratado compra 2");
          END;
          // AJS 12-07-99
          //
          IF "Booking Trans. Compra/Venta"."Tipo de Registro" = Rec."Tipo de Registro"::"Porcentaje Prevision" THEN BEGIN
            Rec.CALCFIELDS("Cupo contratado compra 2");
            Rec.CALCFIELDS("Ocupado compra 2");
            Rec.CALCFIELDS("Asignado compra 2");
            Rec.CALCFIELDS("Prevision ocupacion compra 2");
            IF Rec."Cupo contratado compra 2" = 0 THEN
              Imp := 0
            ELSE BEGIN
              IF Rec."Prevision ocupacion compra 2" > (Rec."Ocupado compra 2" + Rec."Asignado compra 2") THEN
                Imp := ROUND((Rec."Prevision ocupacion compra 2" * 100) / Rec."Cupo contratado compra 2")
              ELSE
                Imp := ROUND(((Rec."Ocupado compra 2" + Rec."Asignado compra 2") * 100) / Rec."Cupo contratado compra 2");
            END;
          END;
          // FIN AJS 12-07-99
          //
        END
        ELSE BEGIN

          IF "Booking Trans. Compra/Venta"."Tipo de Registro" = Rec."Tipo de Registro"::Contrato THEN BEGIN
            Rec.CALCFIELDS("Cupo hotel venta 2");
            Imp := Rec."Cupo hotel venta 2";
          END;

          IF "Booking Trans. Compra/Venta"."Tipo de Registro" = Rec."Tipo de Registro"::Cupo THEN BEGIN
            Rec.CALCFIELDS("Cupo contratado venta 2");
            Imp := Rec."Cupo contratado venta 2";
          END;

          IF "Booking Trans. Compra/Venta"."Tipo de Registro" = Rec."Tipo de Registro"::Prevision THEN BEGIN
            Rec.CALCFIELDS("Prevision ocupacion venta 2");
            Imp := Rec."Prevision ocupacion venta 2";
          END;

          IF "Booking Trans. Compra/Venta"."Tipo de Registro" = Rec."Tipo de Registro"::Ocupado THEN BEGIN
            IF rHotel.NoName THEN BEGIN
              Rec.CALCFIELDS("Reservado venta 2");
              Imp := Rec."Reservado venta 2";
            END
            ELSE BEGIN
              Rec.CALCFIELDS("Ocupado venta 2");
              Imp := Rec."Ocupado venta 2";
            END
          END;

          IF "Booking Trans. Compra/Venta"."Tipo de Registro" = Rec."Tipo de Registro"::Asignado THEN BEGIN
            Rec.CALCFIELDS("Asignado venta 2");
            Imp := Rec."Asignado venta 2";
          END;

          IF "Booking Trans. Compra/Venta"."Tipo de Registro" = Rec."Tipo de Registro"::Libre THEN BEGIN
            IF rHotel.NoName THEN BEGIN
              Rec.CALCFIELDS("Cupo contratado venta 2");
              Rec.CALCFIELDS("Reservado venta 2");
              Rec.CALCFIELDS("Asignado venta 2");
              Imp := Rec."Cupo contratado venta 2" - Rec."Reservado venta 2" - Rec."Asignado venta 2";
            END
            ELSE BEGIN
              Rec.CALCFIELDS("Cupo contratado venta 2");
              Rec.CALCFIELDS("Ocupado venta 2");
              Rec.CALCFIELDS("Asignado venta 2");
              Imp := Rec."Cupo contratado venta 2" - Rec."Ocupado venta 2" - Rec."Asignado venta 2";
            END
          END;

          IF "Booking Trans. Compra/Venta"."Tipo de Registro" = Rec."Tipo de Registro"::Porcentaje THEN BEGIN
            Rec.CALCFIELDS("Cupo contratado venta 2");
            Rec.CALCFIELDS("Ocupado venta 2");
            Rec.CALCFIELDS("Asignado venta 2");
            IF Rec."Cupo contratado venta 2" = 0 THEN
              Imp := 0
            ELSE
             Imp := ROUND(((Rec."Ocupado venta 2" + Rec."Asignado venta 2") * 100) / Rec."Cupo contratado venta 2");
          END;
          // AJS 12-07-99
          //
          IF "Booking Trans. Compra/Venta"."Tipo de Registro" = Rec."Tipo de Registro"::"Porcentaje Prevision" THEN BEGIN
            Rec.CALCFIELDS("Cupo contratado venta 2");
            Rec.CALCFIELDS("Ocupado venta 2");
            Rec.CALCFIELDS("Asignado venta 2");
            Rec.CALCFIELDS("Prevision ocupacion venta 2");
            IF Rec."Cupo contratado venta 2" = 0 THEN
              Imp := 0
            ELSE BEGIN
              IF Rec."Prevision ocupacion venta 2" > (Rec."Ocupado venta 2" + Rec."Asignado venta 2") THEN
                Imp := ROUND((Rec."Prevision ocupacion venta 2" * 100) / Rec."Cupo contratado venta 2")
              ELSE
                Imp := ROUND(((Rec."Ocupado venta 2" + Rec."Asignado venta 2") * 100) / Rec."Cupo contratado venta 2");
            END;
          END;
          // FIN AJS 12-07-99
          //
        END;
      END;

      IF Rec.TourOperador <> '' THEN BEGIN

        IF "Booking Trans. Compra/Venta"."Tipo de Registro" = Rec."Tipo de Registro"::T¡tulo THEN BEGIN
          Imp := 0;
        END;

        IF "Booking Trans. Compra/Venta"."Tipo de Registro" = Rec."Tipo de Registro"::Contrato THEN BEGIN
          Rec.CALCFIELDS("Cupo hotel venta 2");
          Imp := Rec."Cupo hotel venta 2";
        END;

        IF "Booking Trans. Compra/Venta"."Tipo de Registro" = Rec."Tipo de Registro"::Cupo THEN BEGIN
          Rec.CALCFIELDS("Cupo contratado venta 2");
          Imp := Rec."Cupo contratado venta 2";
        END;

        IF "Booking Trans. Compra/Venta"."Tipo de Registro" = Rec."Tipo de Registro"::Prevision THEN BEGIN
          Rec.CALCFIELDS("Prevision ocupacion venta 2");
          Imp := Rec."Prevision ocupacion venta 2";
        END;

        IF "Booking Trans. Compra/Venta"."Tipo de Registro" = Rec."Tipo de Registro"::Ocupado THEN BEGIN
          IF rHotel.NoName THEN BEGIN
            Rec.CALCFIELDS("Reservado venta 2");
            Imp := Rec."Reservado venta 2";
          END
          ELSE BEGIN
            Rec.CALCFIELDS("Ocupado venta 2");
            Imp := Rec."Ocupado venta 2";
          END
        END;

        IF "Booking Trans. Compra/Venta"."Tipo de Registro" = Rec."Tipo de Registro"::Asignado THEN BEGIN
          Rec.CALCFIELDS("Asignado venta 2");
          Imp := Rec."Asignado venta 2";
        END;

        IF "Booking Trans. Compra/Venta"."Tipo de Registro" = Rec."Tipo de Registro"::Libre THEN BEGIN
          IF rHotel.NoName THEN BEGIN
            Rec.CALCFIELDS("Cupo contratado venta 2");
            Rec.CALCFIELDS("Reservado venta 2");
            Rec.CALCFIELDS("Asignado venta 2");
            Imp := Rec."Cupo contratado venta 2" - Rec."Reservado venta 2" - Rec."Asignado venta 2";
          END
          ELSE BEGIN
            Rec.CALCFIELDS("Cupo contratado venta 2");
            Rec.CALCFIELDS("Ocupado venta 2");
            Rec.CALCFIELDS("Asignado venta 2");
            Imp := Rec."Cupo contratado venta 2" - Rec."Ocupado venta 2" - Rec."Asignado venta 2";
          END
        END;

        IF "Booking Trans. Compra/Venta"."Tipo de Registro" = Rec."Tipo de Registro"::Porcentaje THEN BEGIN
          Rec.CALCFIELDS("Cupo contratado venta 2");
          Rec.CALCFIELDS("Ocupado venta 2");
          Rec.CALCFIELDS("Asignado venta 2");
          IF Rec."Cupo contratado venta 2" = 0 THEN
            Imp := 0
          ELSE
           Imp := ROUND(((Rec."Ocupado venta 2" + Rec."Asignado venta 2") * 100) / Rec."Cupo contratado venta 2");
        END;
        // AJS 12-07-99
        //
        IF "Booking Trans. Compra/Venta"."Tipo de Registro" = Rec."Tipo de Registro"::"Porcentaje Prevision" THEN BEGIN
          Rec.CALCFIELDS("Cupo contratado venta 2");
          Rec.CALCFIELDS("Ocupado venta 2");
          Rec.CALCFIELDS("Asignado venta 2");
          Rec.CALCFIELDS("Prevision ocupacion venta 2");
          IF Rec."Cupo contratado venta 2" = 0 THEN
            Imp := 0
          ELSE BEGIN
            IF Rec."Prevision ocupacion venta 2" > (Rec."Ocupado venta 2" + Rec."Asignado venta 2") THEN
              Imp := ROUND((Rec."Prevision ocupacion venta 2" * 100) / Rec."Cupo contratado venta 2")
            ELSE
              Imp := ROUND(((Rec."Ocupado venta 2" + Rec."Asignado venta 2") * 100) / Rec."Cupo contratado venta 2");
          END;
        END;
        // FIN AJS 12-07-99
        //
      END;
    END;

    PROCEDURE dec2int@18(Decim@1103355000 : Decimal) Entero : Integer;
    BEGIN
      Entero := 0;
      WHILE Entero <= Decim DO
        Entero := Entero + 1;
      Entero := Entero - 1;
      EXIT(Entero);
    END;

    PROCEDURE Parametros@1(FiltHab@1103355000 : Code[30];FechaIni@1103355001 : Date;FechaFi@1103355002 : Date;TipoPer@1103355003 : 'D¡a,Semana,Mes,Trimestre,A¤o,Periodo contable';TipoHa@1103355004 : 'Basica,Cupo');
    BEGIN
      FiltTipHab  := FiltHab;
      //FechaInicio := FechaIni;
      //FechaFin    := FechaFi;
      //TipoPeriodo := TipoPer;
      TipoHab     := TipoHa;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}
