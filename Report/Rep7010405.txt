OBJECT Report 7010405 Conductores - Presentacion dia
{
  OBJECT-PROPERTIES
  {
    Date=13/05/13;
    Time=13:31:37;
    Version List=TRANSFER;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   wFecha := TODAY + 1;

                   rCompany.FIND('-');
                 END;

  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table7010327;
        DataItemTableView=SORTING(Conductor);
        DataItemVarName=diConductor;
        OnPreDataItem=BEGIN
                        rPar.FIND('-');

                        rConductorTMP.RESET;
                        rConductorTMP.DELETEALL;
                      END;

        OnAfterGetRecord=BEGIN
                           //. Metemos los conductores con trabajo en un temporal

                           IF _BuscaInicio THEN
                           BEGIN
                             CLEAR(rConductorTMP);
                             rConductorTMP.Conductor             := diConductor.Conductor;
                             rConductorTMP."Nombre Abreviado"    := diConductor."Nombre Abreviado";
                             rConductorTMP."Telefono Movil"      := diConductor."Telefono Movil";
                             rConductorTMP."Hora proximo inicio" := wHoraInicio;
                             rConductorTMP.Observaciones         := wLugarInicio + ' - ' + _NomPuntoRecogida(wLugarInicio);
                             rConductorTMP.INSERT;
                           END;
                         END;

      }
      SECTIONS
      {
      }
       }
    { PROPERTIES
      {
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number);
        DataItemVarName=diImpresion;
        OnPreDataItem=BEGIN
                        rConductorTMP.SETCURRENTKEY("Nombre Abreviado");
                        IF NOT rConductorTMP.FIND('-') THEN
                          CurrReport.BREAK;

                        SETRANGE(Number, 1, rConductorTMP.COUNT);

                        //+$002 <
                        IF wGenerarFichero THEN
                        BEGIN
                          wNombreFichero := 'C:\PRESENTACION_CONDUCTORES_' + FORMAT(wFecha, 0, '<Year4><Month,2><Day>') + '.TXT';
                          IF EXISTS(wNombreFichero) THEN
                            ERASE(wNombreFichero);

                          wFichero.CREATE(wNombreFichero);
                          wFichero.WRITEMODE(TRUE);
                          wFichero.TEXTMODE(TRUE);
                        END;
                        //+$002 >
                      END;

        OnAfterGetRecord=BEGIN
                           IF diImpresion.Number <> 1 THEN
                             rConductorTMP.NEXT;

                           //+$002 <
                           IF wGenerarFichero THEN
                           BEGIN
                             wTextoLinea := STRSUBSTNO(
                                            '#1################## #2############# #3### #4#############################################################',
                                            rConductorTMP."Nombre Abreviado",
                                            rConductorTMP."Telefono Movil",
                                            FORMAT(rConductorTMP."Hora proximo inicio", 0, '<Hours24,2>:<Minutes,2>'),
                                            rConductorTMP.Observaciones);

                             wFichero.WRITE(wTextoLinea);
                           END;
                           //+$002 >
                         END;

        OnPostDataItem=BEGIN
                         //+$002 <
                         IF wGenerarFichero THEN
                         BEGIN
                           wFichero.CLOSE;
                           MESSAGE(Text0001, wNombreFichero);
                         END;
                         //+$002 >
                       END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Header;
            PrintOnEveryPage=No;
            SectionWidth=16050;
            SectionHeight=1692;
          }
          CONTROLS
          {
            { 1100217001;Label  ;0    ;846  ;4200 ;846  ;VertAlign=Bottom;
                                                         CaptionML=ESP=Conductor______________________ }
            { 1100217002;Label  ;4500 ;846  ;2550 ;846  ;VertAlign=Bottom;
                                                         CaptionML=ESP=Telefono___________ }
            { 1100217003;Label  ;7350 ;846  ;1500 ;846  ;VertAlign=Bottom;
                                                         CaptionML=ESP=Hora inicio__ }
            { 1100217004;Label  ;9150 ;846  ;6900 ;846  ;VertAlign=Bottom;
                                                         CaptionML=ESP=Lugar Inicio__________________________________________ }
            { 1100217005;TextBox;0    ;0    ;7200 ;423  ;FontSize=9;
                                                         SourceExpr=rCompany.Name }
            { 1100217006;Label  ;11250;0    ;3150 ;423  ;ParentControl=1100217009;
                                                         FontSize=8;
                                                         LeaderDots=Yes }
            { 1100217009;TextBox;14550;0    ;1500 ;423  ;FontSize=8;
                                                         CaptionML=ESP=Presentaciones de dia;
                                                         SourceExpr=wFecha }
          }
           }
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=16050;
            SectionHeight=423;
          }
          CONTROLS
          {
            { 1100217008;TextBox;0    ;0    ;4200 ;423  ;HorzAlign=Left;
                                                         FontSize=8;
                                                         SourceExpr=rConductorTMP."Nombre Abreviado" }
            { 1100217011;TextBox;4500 ;0    ;2550 ;423  ;HorzAlign=Left;
                                                         FontSize=8;
                                                         SourceExpr=rConductorTMP."Telefono Movil" }
            { 1100217000;TextBox;7350 ;0    ;1500 ;423  ;HorzAlign=Left;
                                                         FontSize=8;
                                                         SourceExpr=rConductorTMP."Hora proximo inicio";
                                                         Format=<Hours24,2>:<Minutes,2> }
            { 1100217007;TextBox;9150 ;0    ;6900 ;423  ;HorzAlign=Left;
                                                         FontSize=8;
                                                         SourceExpr=rConductorTMP.Observaciones }
          }
           }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=9020;
      Height=3410;
    }
    CONTROLS
    {
      { 1100217000;TextBox;3630 ;220  ;1700 ;440  ;CaptionML=ESP=D¡a;
                                                   SourceExpr=wFecha }
      { 1100217001;Label  ;220  ;220  ;3300 ;440  ;ParentControl=1100217000 }
      { 1100217002;Label  ;220  ;880  ;3300 ;440  ;ParentControl=1100217003 }
      { 1100217003;CheckBox;3630;880  ;440  ;440  ;ShowCaption=No;
                                                   CaptionML=ESP=Generar fichero texto;
                                                   SourceExpr=wGenerarFichero }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      rPar@1100217003 : Record 7010311;
      rCompany@1100217005 : Record 79;
      rConductorTMP@1100217004 : TEMPORARY Record 7010327;
      wHoraInicio@1100217000 : Time;
      wLugarInicio@1100217001 : Text[60];
      wNombreFichero@1100217008 : Text[250];
      wTextoLinea@1100217010 : Text[250];
      wFecha@1100217002 : Date;
      wGenerarFichero@1100217006 : Boolean;
      wFichero@1100217007 : File;
      Text0001@1100217009 : TextConst 'ESP=Se ha creado el fichero %1';

    PROCEDURE _BuscaInicio@1100217001() : Boolean;
    VAR
      lrParte@1100217000 : Record 7010360;
      lrSerPar@1100217001 : Record 7010359;
    BEGIN
      // _BuscaInicio

      wHoraInicio  := 0T;
      wLugarInicio := '';

      lrParte.RESET;
      lrParte.SETCURRENTKEY(Fecha, "Cod Conductor", "Dia siguiente", "Hora inicio");
      lrParte.SETRANGE(Fecha          , wFecha);
      lrParte.SETRANGE("Cod Conductor", diConductor.Conductor);
      IF NOT lrParte.FIND('-') THEN
        EXIT(FALSE);

      IF lrParte."Codigo Servicio" = rPar."Codigo Entradas" THEN
      BEGIN
        //. Si es una entrada la hora de inicio es la del primer vuelo y el lugar corresponde con el
        //. lugar de origen/destino del parte

        wHoraInicio  := lrParte."Hora 1er Vuelo";
        wLugarInicio := lrParte."Origen/Destino";
      END
      ELSE
      BEGIN
        //+$003 <
        //. Si es una recogida automatica hay que tomar como hora de inicio la del parte y el lugar
        //. sera el origen/destino del parte
        IF lrParte."Origen creacion" = lrParte."Origen creacion"::"Recogida Automatica" THEN
        BEGIN
          wHoraInicio  := lrParte."Hora inicio";
          wLugarInicio := lrParte."Origen/Destino";
        END
        //+$003 >
        ELSE
        BEGIN

          //. Si es una salida o una excursion, la hora de inicio es la de la primera recogida y el lugar
          //. corresponde tambien con la primera recogida

          lrSerPar.RESET;
          lrSerPar.SETCURRENTKEY("N§ Parte",
                                 "Hora recogida",
                                 Letra);
          lrSerPar.SETRANGE("N§ Parte"     , lrParte."N§ Parte");
          lrSerPar.SETRANGE("Hora recogida", 0T);
          IF lrSerPar.FIND('-') THEN
            lrSerPar.SETCURRENTKEY("N§ Parte", "N§ Linea");
          lrSerPar.SETRANGE("Hora recogida");
          lrSerPar.FIND('-');

          wHoraInicio  := lrSerPar."Hora recogida";
          wLugarInicio := lrSerPar."Punto recogida";
        END;
      END;

      EXIT(TRUE);
    END;

    LOCAL PROCEDURE _NomPuntoRecogida@1100217003(pwPunto@1100217000 : Code[10]) : Text[250];
    VAR
      lrPtoRecogida@1100217001 : Record 7010315;
    BEGIN
      // _NomPuntoRecogida

      IF lrPtoRecogida.GET(pwPunto) THEN
        EXIT(lrPtoRecogida.Descripci¢n);
    END;

    BEGIN
    {
      Listado solicitado por Ibizatours, no se le dar  formato para que sea facilmente exportable a texto

      Se trata de obtener la hora y lugar de inicio de los servicios de ma¤ana por cada conductor

      $001 AJS 10052013 A¤ado informacion de cabecera y hago que se muestre la descripcion del punto
                        de recogida

      $002 AJS 10052013 Nueva opcion para crear el fichero de texto directamente desde el informe

      $003 AJS 13052013 Tratamiento especial para las recogidas automaticas de las excursiones
    }
    END.
  }
  RDLDATA
  {
  }
}
