OBJECT Report 5691 Index Insurance
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=NAVW16.00.01;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Index Insurance;
               ESP=Ajustar valores seguros];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  IF PostingDate = 0D THEN
                    ERROR(Text000,InsuranceJnlLine.FIELDCAPTION("Posting Date"));
                  IF PostingDate <> NORMALDATE(PostingDate)  THEN
                    ERROR(Text001);
                  IF IndexFigure = 100 THEN
                    ERROR(Text002);
                  IF IndexFigure <= 0 THEN
                    ERROR(Text003);
                  FASetup.GET;
                  FASetup.TESTFIELD("Insurance Depr. Book");
                  DeprBook.GET(FASetup."Insurance Depr. Book");
                  InsuranceJnlLine.LOCKTABLE;
                  FAJnlSetup.InsuranceJnlName(DeprBook,InsuranceJnlLine,NextLineNo);
                  NoSeries := FAJnlSetup.GetInsuranceNoSeries(InsuranceJnlLine);
                  IF DocumentNo = '' THEN
                    DocumentNo := FAJnlSetup.GetInsuranceJnlDocumentNo(InsuranceJnlLine,PostingDate);
                  InsuranceJnlLine."Posting Date" := PostingDate;
                  Window.OPEN(Text004);
                END;

  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table5600;
        OnPreDataItem=BEGIN
                        InsCoverageLedgEntry.SETCURRENTKEY("FA No.","Insurance No.");
                      END;

        OnAfterGetRecord=BEGIN
                           IF Blocked OR Inactive THEN
                             CurrReport.SKIP;
                           Window.UPDATE(1, "No.");
                           InsuranceTmp.DELETEALL;
                           InsCoverageLedgEntry.SETRANGE("FA No.","No.");
                           InsCoverageLedgEntry.SETRANGE("Posting Date",0D,PostingDate);
                           IF InsCoverageLedgEntry.FIND('-')  THEN
                             REPEAT
                               InsuranceTmp."No." := InsCoverageLedgEntry."Insurance No.";
                               IF InsuranceTmp.INSERT THEN BEGIN
                                 InsCoverageLedgEntry.SETRANGE("Insurance No.",InsCoverageLedgEntry."Insurance No.");
                                 InsCoverageLedgEntry.CALCSUMS(Amount);
                                 InsCoverageLedgEntry.SETRANGE("Insurance No.");
                                 IF InsCoverageLedgEntry.Amount <> 0 THEN BEGIN
                                   IF Insurance.GET(InsCoverageLedgEntry."Insurance No.") THEN BEGIN
                                     IF Insurance.Blocked THEN
                                       CurrReport.SKIP;
                                   END ELSE
                                     CurrReport.SKIP;
                                   InsuranceJnlLine."Line No." := 0;
                                   FAJnlSetup.SetInsuranceJnlTrailCodes(InsuranceJnlLine);
                                   InsuranceJnlLine.VALIDATE("Insurance No.",InsCoverageLedgEntry."Insurance No.");
                                   InsuranceJnlLine.VALIDATE("FA No.","No.");
                                   InsuranceJnlLine.VALIDATE(
                                     Amount,ROUND(InsCoverageLedgEntry.Amount * (IndexFigure / 100 - 1)));
                                   InsuranceJnlLine."Document No." := DocumentNo;
                                   InsuranceJnlLine."Posting No. Series" := NoSeries;
                                   InsuranceJnlLine.Description := PostingDescription;
                                   InsuranceJnlLine."Index Entry" := TRUE;
                                   NextLineNo := NextLineNo + 10000;
                                   InsuranceJnlLine."Line No." := NextLineNo;
                                   InsuranceJnlLine.INSERT(TRUE);
                                 END;
                               END;
                             UNTIL InsCoverageLedgEntry.NEXT = 0;
                         END;

        ReqFilterFields=No.,FA Class Code,FA Subclass Code;
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=12000;
            SectionHeight=846;
          }
          CONTROLS
          {
          }
           }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=8910;
      Height=2200;
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 3   ;TextBox      ;3410 ;660  ;1650 ;440  ;CaptionML=[ENU=Posting Date;
                                                              ESP=Fecha registro];
                                                   SourceExpr=PostingDate }
      { 4   ;Label        ;0    ;660  ;3300 ;440  ;ParentControl=3 }
      { 5   ;TextBox      ;3410 ;0    ;1650 ;440  ;CaptionML=[ENU=Index Figure;
                                                              ESP=Valor ajuste];
                                                   DecimalPlaces=0:8;
                                                   SourceExpr=IndexFigure }
      { 6   ;Label        ;0    ;0    ;3300 ;440  ;ParentControl=5 }
      { 1   ;TextBox      ;3410 ;1760 ;5500 ;440  ;CaptionML=[ENU=Posting Description;
                                                              ESP=Texto de registro];
                                                   SourceExpr=PostingDescription }
      { 2   ;Label        ;0    ;1760 ;3300 ;440  ;ParentControl=1 }
      { 7   ;Label        ;0    ;1210 ;3300 ;440  ;ParentControl=8 }
      { 8   ;TextBox      ;3410 ;1210 ;2750 ;440  ;CaptionML=[ENU=Document No.;
                                                              ESP=N§ documento];
                                                   SourceExpr=DocumentNo }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             ESP=Opciones] }

      { 5   ;2   ;Field     ;
                  CaptionML=[ENU=Index Figure;
                             ESP=Valor ajuste];
                  DecimalPlaces=0:8;
                  SourceExpr=IndexFigure }

      { 3   ;2   ;Field     ;
                  CaptionML=[ENU=Posting Date;
                             ESP=Fecha registro];
                  SourceExpr=PostingDate }

      { 8   ;2   ;Field     ;
                  CaptionML=[ENU=Document No.;
                             ESP=N§ documento];
                  SourceExpr=DocumentNo }

      { 1   ;2   ;Field     ;
                  CaptionML=[ENU=Posting Description;
                             ESP=Texto de registro];
                  SourceExpr=PostingDescription }

    }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=You must specify %1.;ESP=Se debe indicar %1.';
      Text001@1001 : TextConst 'ENU=Posting Date must not be a closing date.;ESP=La fecha de registro no puede ser una fecha de cierre.';
      Text002@1002 : TextConst 'ENU=Index Figure must not be 100.;ESP=El valor de ajuste no puede ser 100.';
      Text003@1003 : TextConst 'ENU=Index Figure must be positive.;ESP=El valor de ajuste debe ser positivo.';
      Text004@1004 : TextConst 'ENU=Indexing insurance    #1##########;ESP=Ajustando seguro      #1##########';
      FASetup@1005 : Record 5603;
      DeprBook@1006 : Record 5611;
      Insurance@1007 : Record 5628;
      FAJnlSetup@1008 : Record 5605;
      InsuranceTmp@1009 : TEMPORARY Record 5628;
      InsCoverageLedgEntry@1010 : Record 5629;
      InsuranceJnlLine@1011 : Record 5635;
      Window@1012 : Dialog;
      PostingDate@1013 : Date;
      IndexFigure@1014 : Decimal;
      DocumentNo@1015 : Code[20];
      NoSeries@1016 : Code[10];
      PostingDescription@1017 : Text[50];
      NextLineNo@1018 : Integer;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}
