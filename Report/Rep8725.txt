OBJECT Report 8725 Mobile Create Customer Price
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVW16.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Mobile Create Customer Price;
               ESP=Crear precio cliente m¢vil];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  IF (NOT Item.HASFILTER) AND (NOT Customer.HASFILTER) THEN
                    IF NOT MobileCustomerPrice.ISEMPTY THEN
                      MobileCustomerPrice.DELETEALL;
                END;

  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table18;
        OnPreDataItem=BEGIN
                        IF GUIALLOWED THEN BEGIN
                          Window.OPEN(Text000 + Text001 + Text002);
                          NoOfRecords := Customer.COUNTAPPROX;
                        END;
                      END;

        OnAfterGetRecord=BEGIN
                           IF GUIALLOWED THEN BEGIN
                             RecordCount := RecordCount + 1;
                             Window.UPDATE(1,ROUND(RecordCount / NoOfRecords * 10000,1));
                             Window.UPDATE(2,"No.");
                           END;
                         END;

        OnPostDataItem=BEGIN
                         IF GUIALLOWED THEN
                           Window.CLOSE;
                       END;

        ReqFilterFields=No.;
      }
      SECTIONS
      {
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table27;
        OnAfterGetRecord=BEGIN
                           WITH MobileCustomerPrice DO BEGIN
                             IF GET("No.",Customer."No.") THEN BEGIN
                               "Item Price" := GetSalesPrice(Item,Customer);
                               MODIFY;
                             END ELSE BEGIN
                               INIT;
                               "Item No." := "No.";
                               "Customer No." := Customer."No.";
                               "Item Price" := GetSalesPrice(Item,Customer);
                               INSERT;
                             END;
                           END;
                         END;

        ReqFilterFields=No.;
      }
      SECTIONS
      {
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=9020;
      Height=3410;
    }
    CONTROLS
    {
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      MobileCustomerPrice@1007 : Record 8726;
      Text000@1003 : TextConst 'ENU=Creating item prices for customer...\;ESP=Creando precios de productos para cliente...\';
      Text001@1002 : TextConst 'ENU=@1@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\;ESP=@1@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\';
      Text002@1001 : TextConst 'ENU=Customer No. #2#######################\;ESP=N§ cliente #2#######################\';
      Window@1006 : Dialog;
      NoOfRecords@1005 : Integer;
      RecordCount@1004 : Integer;

    LOCAL PROCEDURE GetSalesPrice@1000000001(VAR Item@1005 : Record 27;VAR Customer@1004 : Record 18) : Decimal;
    VAR
      TempSalesHeader@1000000004 : TEMPORARY Record 36;
      TempSalesLine@1000000005 : TEMPORARY Record 37;
      Currency@1000 : Record 4;
      PriceCalcMgt@1002 : Codeunit 7000;
    BEGIN
      WITH TempSalesHeader DO BEGIN
        "Document Type" := "Document Type"::Invoice;
        "Posting Date" := WORKDATE;
        "Sell-to Customer No." := Customer."No.";
        "Bill-to Customer No." := Customer."No.";
        "Customer Price Group" := Customer."Customer Price Group";
        "Customer Disc. Group" := Customer."Customer Disc. Group";
        VALIDATE("Currency Code",Customer."Currency Code");
        IF "Currency Code" = '' THEN
          Currency.InitRoundingPrecision
        ELSE
          Currency.GET("Currency Code");
      END;

      WITH TempSalesLine DO BEGIN
        "Document Type" := "Document Type"::Invoice;
        "Sell-to Customer No." := Customer."No.";
        "Bill-to Customer No." := Customer."No.";
        "Customer Price Group" := Customer."Customer Price Group";
        "Customer Disc. Group" := Customer."Customer Disc. Group";
        Type := Type::Item;
        "No." := Item."No.";
        "Variant Code" := '';
        "Unit of Measure Code" := Item."Sales Unit of Measure";
        Quantity := 1;

        PriceCalcMgt.FindSalesLineLineDisc(TempSalesHeader,TempSalesLine);
        PriceCalcMgt.FindSalesLinePrice(TempSalesHeader,TempSalesLine,0);

        IF "Line Discount %" <> 0 THEN
          "Unit Price" := "Unit Price" - ("Unit Price" / 100 * "Line Discount %");
        EXIT(ROUND("Unit Price",Currency."Unit-Amount Rounding Precision"));
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}
