OBJECT Report 5855 Implement Standard Cost Change
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=NAVW16.00.01;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Implement Standard Cost Change;
               ESP=Implementar cambio coste est ndar];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  RevalItemJnlTemplate.GET(RevalItemJnlTemplate.Name);
                  RevalItemJnlTemplate.TESTFIELD(Type,RevalItemJnlTemplate.Type::Revaluation);
                  RevalItemJnlBatch.GET(RevalItemJnlTemplate.Name,RevalItemJnlBatch.Name);

                  IF DocNo = '' THEN
                    ERROR(Text001);
                  IF StdCostWkshName = '' THEN
                    ERROR(STRSUBSTNO(Text002));
                END;

  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table5841;
        DataItemTableView=SORTING(Standard Cost Worksheet Name,Type,No.);
        OnPreDataItem=BEGIN
                        Window.OPEN(
                          Text000 +
                          Text007 +
                          Text008);

                        ItemJnlLine.LOCKTABLE;
                        LOCKTABLE;
                        SETRANGE("Standard Cost Worksheet Name",StdCostWkshName);

                        RevalJnlCreated := FALSE;
                      END;

        OnAfterGetRecord=BEGIN
                           Window.UPDATE(1,Type);
                           Window.UPDATE(2,"No.");

                           CASE Type OF
                             Type::Item:
                               BEGIN
                                 UpdateItem("Standard Cost Worksheet");
                                 UpdateSKU("Standard Cost Worksheet");
                                 InsertRevalItemJnlLine;
                               END;
                             Type::"Work Center":
                               UpdateWorkCenter("Standard Cost Worksheet");
                             Type::"Machine Center":
                               UpdateMachCenter("Standard Cost Worksheet");
                           END;
                           UpdateStdCostWksh("Standard Cost Worksheet")
                         END;

        OnPostDataItem=BEGIN
                         IF NOT NoMessage THEN
                           MESSAGE(GetMessage);
                       END;

        ReqFilterFields=Type,No.;
        GroupTotalFields=Standard Cost Worksheet Name;
      }
      SECTIONS
      {
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=6160;
      Height=2310;
      SaveValues=Yes;
      OnOpenForm=BEGIN
                   IF PostingDate = 0D THEN
                     PostingDate := WORKDATE;

                   ValidatePostingDate;
                 END;

    }
    CONTROLS
    {
      { 10  ;TextBox      ;3410 ;660  ;2750 ;440  ;CaptionML=[ENU=Document No.;
                                                              ESP=N§ documento];
                                                   SourceExpr=DocNo }
      { 11  ;Label        ;0    ;660  ;3300 ;440  ;ParentControl=10 }
      { 12  ;TextBox      ;3410 ;0    ;1650 ;440  ;CaptionML=[ENU=Posting Date;
                                                              ESP=Fecha registro];
                                                   NotBlank=Yes;
                                                   SourceExpr=PostingDate }
      { 13  ;Label        ;0    ;0    ;3300 ;440  ;ParentControl=12 }
      { 1   ;TextBox      ;3410 ;1870 ;2750 ;440  ;CaptionML=[ENU=Item Journal Batch Name;
                                                              ESP=Nombre secc. diario prod.];
                                                   NotBlank=Yes;
                                                   SourceExpr=RevalItemJnlBatch.Name;
                                                   TableRelation="Item Journal Batch".Name;
                                                   OnLookup=BEGIN
                                                              RevalItemJnlBatch.SETFILTER("Journal Template Name",RevalItemJnlTemplate.Name);
                                                              IF FORM.RUNMODAL(0,RevalItemJnlBatch) = ACTION::LookupOK THEN BEGIN
                                                                Text := Text + RevalItemJnlBatch.Name;
                                                                EXIT(TRUE);
                                                              END ELSE
                                                                EXIT(FALSE);
                                                            END;

                                                   OnAfterValidate=BEGIN
                                                                     ValidatePostingDate;
                                                                   END;
                                                                    }
      { 6   ;TextBox      ;3410 ;1320 ;2750 ;440  ;CaptionML=[ENU="Item Journal Template ";
                                                              ESP="Libros diario producto "];
                                                   NotBlank=Yes;
                                                   SourceExpr=RevalItemJnlTemplate.Name;
                                                   TableRelation="Item Journal Template" WHERE (Type=CONST(Revaluation)) }
      { 14  ;Label        ;0    ;1870 ;3300 ;440  ;ParentControl=1 }
      { 15  ;Label        ;0    ;1320 ;3300 ;440  ;ParentControl=6 }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   IF PostingDate = 0D THEN
                     PostingDate := WORKDATE;

                   ValidatePostingDate;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             ESP=Opciones] }

      { 12  ;2   ;Field     ;
                  CaptionML=[ENU=Posting Date;
                             ESP=Fecha registro];
                  NotBlank=Yes;
                  SourceExpr=PostingDate }

      { 10  ;2   ;Field     ;
                  CaptionML=[ENU=Document No.;
                             ESP=N§ documento];
                  SourceExpr=DocNo }

      { 6   ;2   ;Field     ;
                  CaptionML=[ENU="Item Journal Template ";
                             ESP="Libro del diario producto "];
                  NotBlank=Yes;
                  SourceExpr=RevalItemJnlTemplate.Name;
                  TableRelation="Item Journal Template" WHERE (Type=CONST(Revaluation)) }

      { 1   ;2   ;Field     ;
                  CaptionML=[ENU=Item Journal Batch Name;
                             ESP=Nombre secc. diario prod.];
                  NotBlank=Yes;
                  SourceExpr=RevalItemJnlBatch.Name;
                  TableRelation="Item Journal Batch".Name;
                  OnValidate=BEGIN
                               RevalItemJnlBatchNameOnAfterVa;
                             END;

                  OnLookup=BEGIN
                             RevalItemJnlBatch.SETFILTER("Journal Template Name",RevalItemJnlTemplate.Name);
                             IF FORM.RUNMODAL(0,RevalItemJnlBatch) = ACTION::LookupOK THEN BEGIN
                               Text := Text + RevalItemJnlBatch.Name;
                               EXIT(TRUE);
                             END ELSE
                               EXIT(FALSE);
                           END;
                            }

    }
  }
  CODE
  {
    VAR
      ItemJnlLine@1004 : Record 83;
      RevalItemJnlTemplate@1000 : Record 82;
      RevalItemJnlBatch@1001 : Record 233;
      StdCostWkshName@1013 : Code[10];
      DocNo@1017 : Code[20];
      PostingDate@1018 : Date;
      Window@1002 : Dialog;
      Text000@1009 : TextConst 'ENU=Implementing standard cost changes...\\;ESP=Implementando cambios de coste est nd....\\';
      Text001@1015 : TextConst 'ENU=You must specify a document no.;ESP=Debe indicar un N§ documento.';
      Text002@1021 : TextConst 'ENU=You must specify a worksheet to implement from.;ESP=Debe indicar una hoja de trabajo desde la que implementar.';
      Text007@1007 : TextConst 'ENU=Type                       #1##########\;ESP=Tipo                       #1##########\';
      Text008@1006 : TextConst 'ENU=No.                        #2##########;ESP=N§                         #2##########';
      Text009@1024 : TextConst 'ENU=\Revaluation journal lines have also been created.;ESP=\Se han creado incluso l¡neas de revalorizaci¢n de diario.';
      RevalJnlCreated@1014 : Boolean;
      ItemCostsUpdated@1010 : Boolean;
      MachCtrCostsUpdated@1011 : Boolean;
      WorkCtrCostsUpdated@1012 : Boolean;
      SKUCostsUpdated@1016 : Boolean;
      NoMessage@1003 : Boolean;
      Text010@1005 : TextConst 'ENU="Costs have been updated on the following: ";ESP="Los costes han sido actualiz. en el siguiente: "';
      Text011@1020 : TextConst 'ENU=", ";ESP=", "';
      Text012@1019 : TextConst 'ENU=.;ESP=.';

    PROCEDURE UpdateItem@5(StdCostWksh@1000 : Record 5841);
    VAR
      Item@1001 : Record 27;
    BEGIN
      WITH Item DO BEGIN
        GET(StdCostWksh."No.");
        VALIDATE("Indirect Cost %",StdCostWksh."New Indirect Cost %");
        VALIDATE("Overhead Rate",StdCostWksh."New Overhead Rate");
        VALIDATE("Standard Cost",StdCostWksh."New Standard Cost");
        "Single-Level Material Cost" := StdCostWksh."New Single-Lvl Material Cost";
        "Single-Level Capacity Cost" := StdCostWksh."New Single-Lvl Cap. Cost";
        "Single-Level Subcontrd. Cost" := StdCostWksh."New Single-Lvl Subcontrd Cost";
        "Single-Level Cap. Ovhd Cost" := StdCostWksh."New Single-Lvl Cap. Ovhd Cost";
        "Single-Level Mfg. Ovhd Cost" := StdCostWksh."New Single-Lvl Mfg. Ovhd Cost";

        "Rolled-up Material Cost" := StdCostWksh."New Rolled-up Material Cost";
        "Rolled-up Capacity Cost" := StdCostWksh."New Rolled-up Cap. Cost";
        "Rolled-up Subcontracted Cost" := StdCostWksh."New Rolled-up Subcontrd Cost";
        "Rolled-up Mfg. Ovhd Cost" := StdCostWksh."New Rolled-up Mfg. Ovhd Cost";
        "Rolled-up Cap. Overhead Cost" := StdCostWksh."New Rolled-up Cap. Ovhd Cost";

        "Last Unit Cost Calc. Date" := PostingDate;
        MODIFY(TRUE);

        ItemCostsUpdated := TRUE;
      END;
    END;

    PROCEDURE UpdateSKU@6(StdCostWksh@1000 : Record 5841);
    VAR
      SKU@1001 : Record 5700;
    BEGIN
      WITH SKU DO BEGIN
        SETRANGE("Item No.",StdCostWksh."No.");
        IF FIND('-') THEN BEGIN
          SKUCostsUpdated := TRUE;
          REPEAT
            VALIDATE("Standard Cost",StdCostWksh."New Standard Cost");
            MODIFY(TRUE);
          UNTIL NEXT = 0;
        END;
      END;
    END;

    PROCEDURE UpdateMachCenter@8(StdCostWksh@1000 : Record 5841);
    VAR
      MachCtr@1002 : Record 99000758;
    BEGIN
      WITH MachCtr DO BEGIN
        GET(StdCostWksh."No.");
        VALIDATE("Overhead Rate",StdCostWksh."New Overhead Rate");
        VALIDATE("Indirect Cost %",StdCostWksh."New Indirect Cost %");
        VALIDATE("Unit Cost",StdCostWksh."New Standard Cost");
        MODIFY(TRUE);
        MachCtrCostsUpdated := TRUE;
      END;
    END;

    PROCEDURE UpdateWorkCenter@9(StdCostWksh@1000 : Record 5841);
    VAR
      WorkCtr@1001 : Record 99000754;
    BEGIN
      WITH WorkCtr DO BEGIN
        GET(StdCostWksh."No.");
        VALIDATE("Overhead Rate",StdCostWksh."New Overhead Rate");
        VALIDATE("Indirect Cost %",StdCostWksh."New Indirect Cost %");
        VALIDATE("Unit Cost",StdCostWksh."New Standard Cost");
        MODIFY(TRUE);
        WorkCtrCostsUpdated := TRUE;
      END;
    END;

    PROCEDURE UpdateStdCostWksh@2(VAR StdCostWksh@1001 : Record 5841);
    BEGIN
      WITH StdCostWksh DO BEGIN
        Implemented := TRUE;
        MODIFY(TRUE);
      END;
    END;

    PROCEDURE InsertRevalItemJnlLine@7();
    VAR
      Item@1001 : Record 27;
      ItemJnlLine2@1000 : Record 83;
      CalcInvtValue@1002 : Report 5899;
      CalculatePer@1003 : 'Item Ledger Entry,Item';
    BEGIN
      ItemJnlLine2.SETRANGE("Journal Template Name",RevalItemJnlTemplate.Name);
      ItemJnlLine2.SETRANGE("Journal Batch Name",RevalItemJnlBatch.Name);
      IF ItemJnlLine2.FIND('+') THEN;

      ItemJnlLine."Journal Template Name" := RevalItemJnlTemplate.Name;
      ItemJnlLine."Journal Batch Name" := RevalItemJnlBatch.Name;
      CalcInvtValue.SetItemJnlLine(ItemJnlLine);
      CLEAR(Item);
      Item.SETRANGE("No.","Standard Cost Worksheet"."No.");
      CalcInvtValue.SETTABLEVIEW(Item);
      CalcInvtValue.InitializeRequest(PostingDate,DocNo,CalculatePer::Item,FALSE,FALSE,FALSE,0,FALSE);
      CalcInvtValue.USEREQUESTFORM(FALSE);
      CalcInvtValue.RUN;

      IF ItemJnlLine2.NEXT <> 0 THEN
        REPEAT
          ItemJnlLine2.VALIDATE("Unit Cost (Revalued)","Standard Cost Worksheet"."New Standard Cost");
          ItemJnlLine2.MODIFY(TRUE);
          RevalJnlCreated := TRUE;
        UNTIL ItemJnlLine2.NEXT = 0;
    END;

    PROCEDURE SetStdCostWksh@1(NewStdCostWkshName@1000 : Code[10]);
    BEGIN
      StdCostWkshName := NewStdCostWkshName;
    END;

    PROCEDURE GetMessage@14() TheMsg : Text[250];
    VAR
      Item@1000 : Record 27;
      MachCtr@1001 : Record 99000758;
      WorkCtr@1002 : Record 99000754;
      SKU@1003 : Record 5700;
    BEGIN
      TheMsg := '';
      IF ItemCostsUpdated THEN
        TheMsg := Item.TABLECAPTION;
      IF SKUCostsUpdated THEN BEGIN
        TheMsg := TheMsg + Text011;
        TheMsg := TheMsg + SKU.TABLECAPTION;
      END;
      IF MachCtrCostsUpdated THEN BEGIN
        IF TheMsg <> '' THEN
          TheMsg := TheMsg + Text011;
        TheMsg := TheMsg + MachCtr.TABLECAPTION;
      END;
      IF WorkCtrCostsUpdated THEN BEGIN
        IF TheMsg <> '' THEN
          TheMsg := TheMsg + Text011;
        TheMsg := TheMsg + WorkCtr.TABLECAPTION;
      END;
      IF TheMsg <> '' THEN
        TheMsg := Text010 + TheMsg + Text012;
      IF RevalJnlCreated THEN
        TheMsg := TheMsg + Text009;
      EXIT(TheMsg);
    END;

    LOCAL PROCEDURE ValidatePostingDate@4();
    VAR
      NoSeriesMgt@1000 : Codeunit 396;
    BEGIN
      WITH RevalItemJnlBatch DO
      IF GET(RevalItemJnlTemplate.Name,Name) THEN
        IF "No. Series" = '' THEN
          DocNo := ''
        ELSE BEGIN
          DocNo := NoSeriesMgt.GetNextNo("No. Series",PostingDate,FALSE);
          CLEAR(NoSeriesMgt);
        END;
    END;

    PROCEDURE Initialize@3();
    VAR
      DocNo2@1001 : Code[20];
      PostingDate2@1000 : Date;
      RevalItemJnlTemplate2@1003 : Code[10];
      RevalItemJnlBatch2@1002 : Code[10];
      NoMessage2@1004 : Boolean;
    BEGIN
      PostingDate := PostingDate2;
      DocNo := DocNo2;
      RevalItemJnlTemplate.GET(RevalItemJnlTemplate2);
      RevalItemJnlBatch.GET(RevalItemJnlTemplate2,RevalItemJnlBatch2);
      NoMessage := NoMessage2;
    END;

    LOCAL PROCEDURE RevalItemJnlBatchNameOnAfterVa@19049600();
    BEGIN
      ValidatePostingDate;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}
