OBJECT Report 6037 Change Customer in Contract
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVW16.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Change Customer in Contract;
               ESP=Cambiar cliente en contrato];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  IF NewCustomerNo = '' THEN
                    ERROR(Text000);
                  Cust.GET(NewCustomerNo);
                  IF NewShiptoCode <> '' THEN
                    ShipToAddr.GET(NewCustomerNo,NewShiptoCode);
                  IF (NewShiptoCode = ServContract."Ship-to Code") AND
                     (NewCustomerNo = ServContract."Customer No.")
                  THEN
                    ERROR(Text011);

                  IF NOT CONFIRM(Text002+Text003,FALSE) THEN BEGIN
                    CurrReport.QUIT;
                    EXIT;
                  END;

                  IF TempServContract.COUNT > 1 THEN
                    IF NOT CONFIRM(
                      Text009,FALSE,
                      TempServContract.COUNT,
                      TempServItem.COUNT)
                    THEN BEGIN
                      CurrReport.QUIT;
                      EXIT;
                    END;
                END;

    OnPostReport=VAR
                   CounterTotal@1003 : Integer;
                   Counter@1002 : Integer;
                   CounterBreak@1000 : Integer;
                   Window@1001 : Dialog;
                   ItemCounter@1004 : Integer;
                   ServItem@1005 : Record 5940;
                 BEGIN
                   ServItem.LOCKTABLE;
                   ServContractLine.LOCKTABLE;
                   ServContract.LOCKTABLE;
                   CLEAR(TempServContract);
                   CLEAR(TempServItem);
                   ServContractMgt.GetAffectedItemsOnCustChange(
                     ContractNo,
                     TempServContract,
                     TempServItem,
                     FALSE,
                     ServContractLine."Contract Type"::Contract);

                   Window.OPEN(
                     Text005 +
                     Text006 +
                     '#1###' +
                     Text007 +
                     '#2###  @3@@@@@@@@@\\' +
                     Text008 +
                     '#4###' +
                     Text007 +
                     '#5###  @6@@@@@@@@@\\');
                   Window.UPDATE(2,TempServContract.COUNT);
                   Window.UPDATE(5,TempServItem.COUNT);

                   CounterTotal := TempServContract.COUNT;
                   Counter := 0;
                   ItemCounter :=0;
                   CounterBreak := ROUND(CounterTotal / 100,1,'>');
                   IF TempServContract.FIND('-') THEN
                     REPEAT
                       Counter := Counter + 1;
                       ItemCounter := ItemCounter + 1;
                       IF Counter >= CounterBreak THEN BEGIN
                         Counter := 0;
                         Window.UPDATE(3,ROUND(ItemCounter / CounterTotal * 10000,1));
                       END;
                       Window.UPDATE(1,ItemCounter);
                       ServContract.GET(TempServContract."Contract Type",TempServContract."Contract No.");
                       ServContractMgt.ChangeCustNoOnServContract(NewCustomerNo,NewShiptoCode,ServContract)
                     UNTIL TempServContract.NEXT = 0
                   ELSE
                     Window.UPDATE(3,10000);

                   CounterTotal := TempServItem.COUNT;
                   Counter := 0;
                   ItemCounter := 0;
                   CounterBreak := ROUND(CounterTotal / 100,1,'>');
                   IF TempServItem.FIND('-') THEN
                     REPEAT
                       Counter := Counter + 1;
                       ItemCounter := ItemCounter + 1;
                       IF Counter >= CounterBreak THEN BEGIN
                         Counter := 0;
                         Window.UPDATE(6,ROUND(ItemCounter / CounterTotal * 10000,1));
                       END;
                       Window.UPDATE(4,ItemCounter);
                       ServItem.GET(TempServItem."No.");
                       ServContractMgt.ChangeCustNoOnServItem(NewCustomerNo,NewShiptoCode,ServItem)
                     UNTIL TempServItem.NEXT = 0
                   ELSE
                     Window.UPDATE(6,10000);
                 END;

  }
  DATAITEMS
  {
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=9020;
      Height=3300;
      OnOpenForm=BEGIN
                   ServContractMgt.GetAffectedItemsOnCustChange(
                     ContractNo,
                     TempServContract,
                     TempServItem,
                     FALSE,
                     ServContractLine."Contract Type"::Contract);

                   IF TempServContract.COUNT > 1 THEN
                     ContractNoText := Text004
                   ELSE
                     ContractNoText := TempServContract."Contract No.";

                   IF TempServItem.COUNT > 1 THEN
                     ServiceItemNoText := Text004
                   ELSE
                     ServiceItemNoText := TempServItem."No.";
                 END;

    }
    CONTROLS
    {
      { 1   ;TextBox      ;3410 ;0    ;2750 ;440  ;Editable=No;
                                                   Focusable=No;
                                                   DrillDown=Yes;
                                                   PermanentAssist=Yes;
                                                   SourceExpr=ContractNoText;
                                                   OnDrillDown=BEGIN
                                                                 FORM.RUNMODAL(FORM::"Service Contract List",TempServContract);
                                                               END;
                                                                }
      { 2   ;Label        ;0    ;0    ;3300 ;440  ;ParentControl=1;
                                                   CaptionML=[ENU=Contract No.;
                                                              ESP=N§ contrato] }
      { 3   ;TextBox      ;3410 ;1100 ;2750 ;440  ;Editable=No;
                                                   Focusable=No;
                                                   SourceExpr=ServContract."Customer No." }
      { 4   ;Label        ;0    ;1100 ;3300 ;440  ;ParentControl=3;
                                                   CaptionML=[ENU=Existing Customer No.;
                                                              ESP=N§ cliente actual] }
      { 5   ;TextBox      ;3410 ;1650 ;2750 ;440  ;Editable=No;
                                                   Focusable=No;
                                                   SourceExpr=ServContract."Ship-to Code" }
      { 6   ;Label        ;0    ;1650 ;3300 ;440  ;ParentControl=5;
                                                   CaptionML=[ENU=Existing Ship-to Code;
                                                              ESP=Env¡o a-C¢digo actual] }
      { 7   ;TextBox      ;3410 ;2200 ;2750 ;440  ;SourceExpr=NewCustomerNo;
                                                   OnValidate=BEGIN
                                                                IF NewCustomerNo <> '' THEN BEGIN
                                                                  VerifyCustNo(NewCustomerNo,NewShiptoCode);
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              CLEAR(Cust);
                                                              Cust."No." := NewCustomerNo;
                                                              Cust.SETFILTER(Blocked,'<>%1',Cust.Blocked::All);
                                                              IF FORM.RUNMODAL(0,Cust) = ACTION::LookupOK THEN
                                                                IF Cust."No." <> '' THEN BEGIN
                                                                  VerifyCustNo(Cust."No.",NewShiptoCode);
                                                                  NewCustomerNo := Cust."No.";
                                                                END;
                                                            END;
                                                             }
      { 8   ;Label        ;0    ;2200 ;3300 ;440  ;ParentControl=7;
                                                   CaptionML=[ENU=New Customer No.;
                                                              ESP=N§ cliente nuevo] }
      { 9   ;TextBox      ;3410 ;2750 ;2750 ;440  ;SourceExpr=NewShiptoCode;
                                                   OnValidate=BEGIN
                                                                IF NewShiptoCode <> '' THEN
                                                                  ShipToAddr.GET(NewCustomerNo,NewShiptoCode);
                                                              END;

                                                   OnLookup=BEGIN
                                                              CLEAR(ShipToAddr);
                                                              ShipToAddr.SETRANGE("Customer No.",NewCustomerNo);
                                                              ShipToAddr.Code := NewShiptoCode;
                                                              IF FORM.RUNMODAL(0,ShipToAddr) = ACTION::LookupOK THEN BEGIN
                                                                ShipToAddr.GET(ShipToAddr."Customer No.",ShipToAddr.Code);
                                                                NewShiptoCode := ShipToAddr.Code;
                                                              END;
                                                            END;
                                                             }
      { 10  ;Label        ;0    ;2750 ;3300 ;440  ;ParentControl=9;
                                                   CaptionML=[ENU=New Ship-to Code;
                                                              ESP=Env¡o a-C¢digo nuevo] }
      { 11  ;TextBox      ;3410 ;550  ;2750 ;440  ;Editable=No;
                                                   Focusable=No;
                                                   DrillDown=Yes;
                                                   PermanentAssist=Yes;
                                                   SourceExpr=ServiceItemNoText;
                                                   DrillDownFormID=Service Item List;
                                                   OnDrillDown=BEGIN
                                                                 FORM.RUNMODAL(FORM::"Service Item List",TempServItem);
                                                               END;
                                                                }
      { 12  ;Label        ;0    ;550  ;3300 ;440  ;ParentControl=11;
                                                   CaptionML=[ENU=Service Item No.;
                                                              ESP=N§ prod. servicio] }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnOpenPage=BEGIN
                   ServContractMgt.GetAffectedItemsOnCustChange(
                     ContractNo,
                     TempServContract,
                     TempServItem,
                     FALSE,
                     ServContractLine."Contract Type"::Contract);

                   IF TempServContract.COUNT > 1 THEN
                     ContractNoText := Text004
                   ELSE
                     ContractNoText := TempServContract."Contract No.";

                   IF TempServItem.COUNT > 1 THEN
                     ServiceItemNoText := Text004
                   ELSE
                     ServiceItemNoText := TempServItem."No.";
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             ESP=Opciones] }

      { 1   ;2   ;Field     ;
                  DrillDown=Yes;
                  CaptionML=[ENU=Contract No.;
                             ESP=N§ contrato];
                  SourceExpr=ContractNoText;
                  Editable=FALSE;
                  OnDrillDown=BEGIN
                                FORM.RUNMODAL(FORM::"Service Contract List",TempServContract);
                              END;
                               }

      { 11  ;2   ;Field     ;
                  DrillDown=Yes;
                  CaptionML=[ENU=Service Item No.;
                             ESP=N§ prod. servicio];
                  SourceExpr=ServiceItemNoText;
                  Editable=FALSE;
                  DrillDownFormID=Service Item List;
                  OnDrillDown=BEGIN
                                FORM.RUNMODAL(FORM::"Service Item List",TempServItem);
                              END;
                               }

      { 3   ;2   ;Field     ;
                  CaptionML=[ENU=Existing Customer No.;
                             ESP=N§ cliente actual];
                  SourceExpr=ServContract."Customer No.";
                  Editable=FALSE }

      { 5   ;2   ;Field     ;
                  CaptionML=[ENU=Existing Ship-to Code;
                             ESP=Env¡o a-C¢digo actual];
                  SourceExpr=ServContract."Ship-to Code";
                  Editable=FALSE }

      { 7   ;2   ;Field     ;
                  CaptionML=[ENU=New Customer No.;
                             ESP=N§ cliente nuevo];
                  SourceExpr=NewCustomerNo;
                  OnValidate=BEGIN
                               IF NewCustomerNo <> '' THEN BEGIN
                                 VerifyCustNo(NewCustomerNo,NewShiptoCode);
                               END;
                             END;

                  OnLookup=BEGIN
                             CLEAR(Cust);
                             Cust."No." := NewCustomerNo;
                             Cust.SETFILTER(Blocked,'<>%1',Cust.Blocked::All);
                             IF FORM.RUNMODAL(0,Cust) = ACTION::LookupOK THEN
                               IF Cust."No." <> '' THEN BEGIN
                                 VerifyCustNo(Cust."No.",NewShiptoCode);
                                 NewCustomerNo := Cust."No.";
                               END;
                           END;
                            }

      { 9   ;2   ;Field     ;
                  CaptionML=[ENU=New Ship-to Code;
                             ESP=Env¡o a-C¢digo nuevo];
                  SourceExpr=NewShiptoCode;
                  OnValidate=BEGIN
                               IF NewShiptoCode <> '' THEN
                                 ShipToAddr.GET(NewCustomerNo,NewShiptoCode);
                             END;

                  OnLookup=BEGIN
                             CLEAR(ShipToAddr);
                             ShipToAddr.SETRANGE("Customer No.",NewCustomerNo);
                             ShipToAddr.Code := NewShiptoCode;
                             IF FORM.RUNMODAL(0,ShipToAddr) = ACTION::LookupOK THEN BEGIN
                               ShipToAddr.GET(ShipToAddr."Customer No.",ShipToAddr.Code);
                               NewShiptoCode := ShipToAddr.Code;
                             END;
                           END;
                            }

    }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=You must fill in the New Customer No. field.;ESP=Debe rellenar el campo N§ cliente nuevo.';
      ServContract@1002 : Record 5965;
      Cust@1005 : Record 18;
      ShipToAddr@1006 : Record 222;
      ContractChangeLog@1008 : Record 5967;
      ServContractLine@1027 : Record 5964;
      TempServContract@1019 : TEMPORARY Record 5965;
      TempServItem@1018 : TEMPORARY Record 5940;
      ServContractMgt@1017 : Codeunit 5940;
      ContractNo@1009 : Code[20];
      ServLogMgt@1010 : Codeunit 5906;
      NewCustomerNo@1011 : Code[20];
      NewShiptoCode@1012 : Code[10];
      Text002@1013 : TextConst 'ENU=If you change the customer number or the ship-to code, the related service orders and sales invoices will not be updated.\\;ESP=Si cambia el n£mero cliente o el c¢d. direcci¢n env¡o, los ped. servicio y facturas venta relacionados no se actualizar n.\\';
      Text003@1014 : TextConst 'ENU=Do you want to continue?;ESP=¨Confirma que desea continuar?';
      Text004@1020 : TextConst 'ENU=(Multiple);ESP=(Multiple)';
      ContractNoText@1021 : Text[20];
      ServiceItemNoText@1022 : Text[20];
      Text005@1023 : TextConst 'ENU=Updating related objects...\\;ESP=Actualizando objetos relacionados...\\';
      Text006@1024 : TextConst 'ENU="Contract     ";ESP="Contrato     "';
      Text007@1025 : TextConst 'ENU=" from ";ESP=" desde "';
      Text008@1026 : TextConst 'ENU="Service item ";ESP="Prod. servicio "';
      Text009@1015 : TextConst 'ENU=Are you absolutely sure you want to change the customer number in %1 related contract(s)/quote(s) and %2 related service item(s)?;ESP=¨Est  completamente seguro de que desea cambiar el n£mero cliente en %1 contrato(s)/oferta(s) relacionados y %2 prod(s). servicio relacionados?';
      Text010@1016 : TextConst 'ENU=You cannot select a customer with the status Blocked.;ESP=No puede seleccionar un cliente con el estado Bloqueado.';
      Text011@1003 : TextConst 'ENU=The customer number and the ship-to code that you have selected are the same as the ones on this document.;ESP=El n£mero cliente y c¢d. direcci¢n env¡o que ha seleccionado son los mismos que los que hay en este documento.';

    PROCEDURE SetRecord@1(ContrNo@1000 : Code[20]);
    BEGIN
      ContractNo := ContrNo;
      ServContract.GET(ServContract."Contract Type"::Contract,ContractNo);
      ServContract.TESTFIELD("Change Status",ServContract."Change Status"::Open);
    END;

    PROCEDURE VerifyCustNo@3(CustNo@1000 : Code[20];ShiptoCode@1001 : Code[20]);
    BEGIN
      IF CustNo <> '' THEN BEGIN
        Cust.GET(CustNo);
        IF Cust.Blocked = Cust.Blocked::All THEN
           ERROR(Text010);
        IF NOT ShipToAddr.GET(CustNo,ShiptoCode) THEN
           NewShiptoCode := '';
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}
