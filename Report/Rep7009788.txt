OBJECT Report 7009788 Reporte caja general (EXCEL)
{
  OBJECT-PROPERTIES
  {
    Date=08/12/14;
    Time=16:10:12;
    Modified=Yes;
    Version List=AIC2009,CNT;
  }
  PROPERTIES
  {
    ProcessingOnly=Yes;
  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table7010241;
        DataItemTableView=SORTING(Codigo)
                          WHERE(Trabaja a credito=CONST(No));
        DataItemVarName=diGuias;
        OnPreDataItem=BEGIN
                        IF (wFechaDesde = 0D) OR (wFechaHasta = 0D) THEN
                          ERROR('');

                        _IniciarFicheros;

                        //. Creamos las lineas de cabecera
                        wLinea := 1;
                        _InsertaCelda(wLinea, 3, rCompanyInfo.Name, 3, 0, 0, STRSUBSTNO('E%1', wLinea));

                        wLinea += 1;
                        _InsertaCelda(wLinea, 3, Text001, 3, 0, 0, STRSUBSTNO('E%1', wLinea));

                        wLinea += 1;
                        _InsertaCelda(wLinea, 3, FORMAT(wFechaDesde), 2, 0, 0, '');
                        _InsertaCelda(wLinea, 4, FORMAT(wFechaHasta), 2, 0, 0, '');
                        _InsertaCelda(wLinea, 5, Text002, 2, 0, 0, '');
                        _InsertaCelda(wLinea, 6, FORMAT(TODAY), 2, 0, 0, '');

                        wLinea += 2;
                        _InsertaCelda(5,  1, Text003, 2, 2, 0, '');
                        _InsertaCelda(5,  2, Text004, 4, 2, 0, '');

                        SETRANGE("Filtro fecha", wFechaDesde, wFechaHasta);

                        //. Filtro por oficina
                        IF wOficina <> '' THEN
                          diGuias.SETRANGE("Oficina ventas", wOficina);

                        CurrReport.CREATETOTALS(Ventas, wReembolsosGuia);

                        //. Creamos el temporal de divisas y cobros por guia
                        _CrearTemporal;
                      END;

        OnAfterGetRecord=BEGIN
                           CALCFIELDS(Ventas);
                           wReembolsosGuia := _SumarReembolsos;
                           IF (Ventas = 0) AND (wReembolsosGuia = 0) THEN
                             CurrReport.SKIP;

                           wLinea += 1;

                           _InsertaCelda(wLinea, 1, Codigo + ' ' + Nombre, 2, 0, 0, '');
                           _InsertaCelda(wLinea, 2, FORMAT(Ventas), 4, 0, 0, '');

                           rCobroTMP.RESET;
                           rCobroTMP.SETRANGE(Delegacion, Codigo);
                           IF rCobroTMP.FINDSET THEN
                           BEGIN
                             REPEAT
                               _InsertaCelda(wLinea, rCobroTMP."Num Reserva", FORMAT(rCobroTMP."Importe Recibido"), 4, 0, 0, '');
                             UNTIL rCobroTMP.NEXT = 0;
                           END;

                           //_InsertaCelda(wLinea, wCobros, FORMAT(wReembolsosGuia), 4, 0, 0, '');
                           _InsertaCelda(wLinea, wCobros, FORMAT(Ventas - wReembolsosGuia), 4, 0, 0, '');
                         END;

        OnPostDataItem=BEGIN
                         //. Creamos la linea de totales

                         wLinea += 1;
                         _InsertaCelda(wLinea, 1, Text006, 2, 2, 2, '');
                         _InsertaCelda(wLinea, 2, FORMAT(Ventas), 4, 2, 2, '');

                         rTituloTMP.RESET;
                         IF rTituloTMP.FINDSET THEN
                         BEGIN
                           REPEAT
                             _InsertaCelda(wLinea, rTituloTMP."Num Reserva", FORMAT(rTituloTMP."Importe Recibido"), 4, 2, 2, '');
                           UNTIL rTituloTMP.NEXT = 0;
                         END;

                         //_InsertaCelda(wLinea, wCobros, FORMAT(wReembolsosGuia), 4, 2, 2, '');
                         _InsertaCelda(wLinea, wCobros, FORMAT(Ventas - wReembolsosGuia), 4, 2, 2, '');

                         wLinea += 1;

                         //. Mostrar los tipos de cambio utilizados
                         rCurrencyTMP.RESET;
                         IF rCurrencyTMP.FINDSET THEN
                         BEGIN
                           REPEAT
                             wLinea += 1;

                             _InsertaCelda(wLinea, 1, rCurrencyTMP.Code, 2, 0, 0, '');

                             rCurrExc.SETRANGE ("Currency Code", rCurrencyTMP.Code);
                             rCurrExc.SETFILTER("Starting Date", '<=%1', wFechaDesde);
                             rCurrExc.FINDLAST;

                             _InsertaCelda(wLinea, 2, FORMAT(rCurrExc."Relational Exch. Rate Amount"), 2, 0, 0, '');
                           UNTIL rCurrencyTMP.NEXT = 0;
                         END;

                         rExcel.CreateBook;
                         rExcel.CreateSheet(Text001, '', '', '', TRUE, TRUE, Text005);
                         rExcel.GiveUserControl;
                       END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=12000;
            SectionHeight=846;
          }
          CONTROLS
          {
          }
           }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=9020;
      Height=3410;
    }
    CONTROLS
    {
      { 1100217000;TextBox;2970 ;220  ;1700 ;440  ;InPage=-1;
                                                   CaptionML=[ENU=Date From;
                                                              ESP=Fecha desde];
                                                   SourceExpr=wFechaDesde;
                                                   OnValidate=BEGIN
                                                                IF wFechaHasta = 0D THEN
                                                                  wFechaHasta := wFechaDesde
                                                                ELSE
                                                                  IF wFechaDesde > wFechaHasta THEN
                                                                    ERROR(Text007);
                                                              END;
                                                               }
      { 1100217001;Label  ;0    ;220  ;2860 ;440  ;ParentControl=1100217000 }
      { 1100217002;TextBox;2970 ;1320 ;1700 ;440  ;InPage=-1;
                                                   CaptionML=[ENU=Office;
                                                              ESP=Oficina];
                                                   SourceExpr=wOficina;
                                                   TableRelation="Oficina ventas" }
      { 1100217003;Label  ;0    ;1320 ;2860 ;440  ;ParentControl=1100217002 }
      { 1100217004;TextBox;2970 ;770  ;1700 ;440  ;CaptionML=[ENU=Date To;
                                                              ESP=Fecha hasta];
                                                   SourceExpr=wFechaHasta;
                                                   OnValidate=BEGIN
                                                                IF wFechaDesde <> 0D THEN
                                                                  IF wFechaDesde > wFechaHasta THEN
                                                                    ERROR(Text007);
                                                              END;
                                                               }
      { 1100217005;Label  ;0    ;770  ;2860 ;440  ;ParentControl=1100217004 }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      rExcel@1100217001 : TEMPORARY Record 7009785;
      rFormaPago@1100217008 : Record 289;
      rCurrency@1100217009 : Record 4;
      rCurrExc@1100217015 : Record 330;
      rCompanyInfo@1100217003 : Record 79;
      rCobroTMP@1100217010 : TEMPORARY Record 7010240;
      rCobroTMP_R@1100217024 : TEMPORARY Record 7010240;
      rTituloTMP@1100217021 : TEMPORARY Record 7010240;
      rTituloTMP_R@1100217023 : TEMPORARY Record 7010240;
      rCurrencyTMP@1100217014 : TEMPORARY Record 4;
      wFechaDesde@1100217000 : Date;
      wFechaHasta@1100217017 : Date;
      wLinea@1100217002 : Integer;
      Text001@1100217004 : TextConst 'ENU=CASH GENERAL REPORT;ESP=REPORTE DE CAJA GENERAL';
      Text002@1100217005 : TextConst 'ENU=Creation date:;ESP=Fecha emisi¢n:';
      Text003@1100217006 : TextConst 'ENU=REPRESENTANT;ESP=VENDEDOR';
      Text004@1100217007 : TextConst 'ENU=SALES TOTAL;ESP=TOTAL VENTAS';
      wCobros@1100217011 : Integer;
      Text005@1100217012 : TextConst 'ENU=Creating excel sheet;ESP=Generado libro excel';
      Text006@1100217013 : TextConst 'ESP=TOTALES FINALES';
      wReembolsos@1100217025 : Integer;
      wOficina@1100217016 : Code[10];
      Text007@1100217018 : TextConst 'ENU=Wrong date range;ESP=Periodo de fechas incorrecto';
      wReembolsosGuia@1100217019 : Decimal;
      Text008@1100217020 : TextConst 'ENU=REFUNDS;ESP=REEMBOLSOS';
      Text009@1100217022 : TextConst 'ENU=BALANCE;ESP=SALDO';

    LOCAL PROCEDURE _IniciarFicheros@1100217000();
    BEGIN
      // _IniciarFicheros

      //. Buscamos el registro de informacion empresa
      rCompanyInfo.FINDFIRST;

      //. Limpiamos los temporales
      rExcel.RESET;
      rExcel.DELETEALL;

      rCobroTMP.RESET;
      rCobroTMP.DELETEALL;

      rCurrencyTMP.RESET;
      rCurrencyTMP.DELETEALL;

      rCobroTMP_R.RESET;
      rCobroTMP_R.DELETEALL;

      wCobros := 2;

      wReembolsos := 99;
    END;

    PROCEDURE _InsertaCelda@1100217001(pwLinea@1100217004 : Integer;pwColumna@1100217000 : Integer;pwTexto@1100217001 : Text[250];pwAlineaHoriz@1100217003 : Integer;pwBordeAbajo@1100217002 : Integer;pwBordeArriba@1100217005 : Integer;pwCombinar@1100217006 : Code[10]);
    BEGIN
      // _InsertaCelda

      rExcel.INIT;
      rExcel.VALIDATE("Row No."                    , pwLinea);
      rExcel.VALIDATE("Column No."                 , pwColumna);
      rExcel.VALIDATE("Cell Value as Text"         , pwTexto);
      rExcel.VALIDATE("Texto Alineacion Horizontal", pwAlineaHoriz); // 2: izquierda 3 Centro  4 Derecha
      rExcel.VALIDATE("Borde Abaj"                 , pwBordeAbajo);
      rExcel.VALIDATE("Borde Sup"                  , pwBordeArriba);
      rExcel.VALIDATE("Fusionar hasta celda"       , pwCombinar);
      rExcel.INSERT;
    END;

    LOCAL PROCEDURE _SumarReembolsos@1100217002() lwReembolsos : Decimal;
    VAR
      lrCobro@1100217000 : Record 7010267;
    BEGIN
      // _SumarReembolsos
      // $001
      lwReembolsos := 0;

      lrCobro.RESET;
      lrCobro.SETCURRENTKEY("Cod. Divisa", "Forma de Pago", "Guia Venta", "Fecha reembolso");
      lrCobro.SETRANGE("Guia Venta"     , diGuias.Codigo);
      lrCobro.SETRANGE("Fecha reembolso", wFechaDesde, wFechaHasta);
      IF lrCobro.FINDSET THEN
      BEGIN
        REPEAT
          lwReembolsos += lrCobro."Importe Divisa Reserva";
        UNTIL lrCobro.NEXT = 0;
      END;

      EXIT(lwReembolsos);
    END;

    LOCAL PROCEDURE _CrearTemporal@1100217003();
    VAR
      lrGuia@1100217000 : Record 7010241;
    BEGIN
      // _CrearTemporal

      CLEAR(lrGuia);
      lrGuia.COPY(diGuias);
      IF lrGuia.FINDSET THEN
      BEGIN
        REPEAT
          //. Esta bucle suma las ventas del dia, a continuacion haremos otro para los reembolsos
          rFormaPago.FINDSET;
          REPEAT
            rCurrency.FINDSET;
            REPEAT
              lrGuia.SETRANGE("Filtro fecha reembolso");
              lrGuia.SETRANGE("Filtro fecha", wFechaDesde, wFechaHasta);
              lrGuia.SETRANGE("Filtro forma pago" , rFormaPago.Code);
              lrGuia.SETRANGE("Filtro Divisa"     , rCurrency.Code);

              lrGuia.CALCFIELDS(Cobros);

              IF lrGuia.Cobros <> 0 THEN
                _GestionTemporal(lrGuia.Codigo, lrGuia.Cobros, 0); //. 0 = Ventas

              //. Reembolsos
              // $001
              lrGuia.SETRANGE("Filtro fecha");
              lrGuia.SETRANGE("Filtro fecha reembolso", wFechaDesde, wFechaHasta);

              lrGuia.CALCFIELDS(Reembolsos);
              IF lrGuia.Reembolsos <> 0 THEN
                _GestionTemporal(lrGuia.Codigo, lrGuia.Reembolsos, 1); //. 1 = Reembolsos
            UNTIL rCurrency.NEXT = 0;
          UNTIL rFormaPago.NEXT = 0;
        UNTIL lrGuia.NEXT = 0;
      END;

      //. Las columnas de reembolso se tienen que renumerar
      rTituloTMP_R.RESET;
      rTituloTMP_R.SETRANGE(Reembolsado, TRUE);
      IF rTituloTMP_R.FINDSET THEN
      BEGIN
        REPEAT
          wCobros += 1;

          rTituloTMP := rTituloTMP_R;
          rTituloTMP."Num Reserva" := wCobros;
          rTituloTMP.INSERT;

          _InsertaCelda(5,  wCobros, Text008 + ' ' + rTituloTMP."Forma de Pago" + ' ' + rTituloTMP."Cod. Divisa", 4, 2, 0, '');

          rCobroTMP_R.RESET;
          rCobroTMP_R.SETRANGE("Forma de Pago", rTituloTMP_R."Forma de Pago");
          rCobroTMP_R.SETRANGE("Cod. Divisa"  , rTituloTMP_R."Cod. Divisa");
          rCobroTMP_R.SETRANGE(Reembolsado    , TRUE);
          IF rCobroTMP_R.FINDFIRST THEN
          BEGIN
            REPEAT
              rCobroTMP := rCobroTMP_R;
              rCobroTMP."Num Reserva" := rTituloTMP."Num Reserva";
              rCobroTMP.INSERT;
            UNTIL rCobroTMP_R.NEXT = 0;
          END;
        UNTIL rTituloTMP_R.NEXT = 0;

        rTituloTMP_R.RESET;
        rTituloTMP_R.SETRANGE(Reembolsado, TRUE);
        rTituloTMP_R.DELETEALL;

        rCobroTMP_R.RESET;
        rCobroTMP_R.SETRANGE(Reembolsado, TRUE);
        rCobroTMP_R.DELETEALL;
      END;

      //. Columna de titulo para los reembolsos
      wCobros += 1;

      //_InsertaCelda(5,  wCobros, Text008, 4, 2, 0, '');
      //. Columna de titulo para el saldo
      _InsertaCelda(5,  wCobros, Text009, 4, 2, 0, '');
    END;

    LOCAL PROCEDURE _GestionTemporal@1100217004(pwGuia@1100217001 : Code[20];pwCobros@1100217000 : Decimal;pwTipo@1100217002 : 'Ventas,Reembolsos');
    BEGIN
      IF pwTipo = pwTipo::Ventas THEN
      BEGIN
        IF NOT rCurrencyTMP.GET(rCurrency.Code) THEN
        BEGIN
          rCurrencyTMP.INIT;
          rCurrencyTMP.Code := rCurrency.Code;
          rCurrencyTMP.INSERT;
        END;

        rTituloTMP.RESET;
        rTituloTMP.SETRANGE("Forma de Pago", rFormaPago.Code);
        rTituloTMP.SETRANGE("Cod. Divisa"  , rCurrency.Code);
        IF NOT rTituloTMP.FINDFIRST THEN
        BEGIN
          wCobros += 1;

          rTituloTMP.INIT;
          rTituloTMP."Num Reserva"   := wCobros;
          rTituloTMP."Forma de Pago" := rFormaPago.Code;
          rTituloTMP."Cod. Divisa"   := rCurrency.Code;
          rTituloTMP.INSERT;

          _InsertaCelda(5,  wCobros, rFormaPago.Code + ' ' + rCurrency.Code, 4, 2, 0, '');
        END;
        rTituloTMP."Importe Recibido" += pwCobros;
        rTituloTMP.MODIFY;

        rCobroTMP.RESET;
        rCobroTMP.SETRANGE("Forma de Pago", rFormaPago.Code);
        rCobroTMP.SETRANGE("Cod. Divisa"  , rCurrency.Code);
        rCobroTMP.SETRANGE(Delegacion     , pwGuia);
        IF NOT rCobroTMP.FINDFIRST THEN
        BEGIN
          rCobroTMP.INIT;
          rCobroTMP.Delegacion      := pwGuia;
          rCobroTMP."Num Reserva"   := rTituloTMP."Num Reserva";
          rCobroTMP."Forma de Pago" := rFormaPago.Code;
          rCobroTMP."Cod. Divisa"   := rCurrency.Code;
          rCobroTMP.INSERT;
        END;

        rCobroTMP."Importe Recibido" += pwCobros;
        rCobroTMP.MODIFY;
      END
      //. Reembolsos
      ELSE
      BEGIN
        IF NOT rCurrencyTMP.GET(rCurrency.Code) THEN
        BEGIN
          rCurrencyTMP.INIT;
          rCurrencyTMP.Code := rCurrency.Code;
          rCurrencyTMP.INSERT;
        END;

        rTituloTMP_R.RESET;
        rTituloTMP_R.SETRANGE("Forma de Pago", rFormaPago.Code);
        rTituloTMP_R.SETRANGE("Cod. Divisa"  , rCurrency.Code);
        IF NOT rTituloTMP_R.FINDFIRST THEN
        BEGIN
          wReembolsos += 1;

          rTituloTMP_R.INIT;
          rTituloTMP_R."Num Reserva"   := wReembolsos;
          rTituloTMP_R."Forma de Pago" := rFormaPago.Code;
          rTituloTMP_R."Cod. Divisa"   := rCurrency.Code;
          rTituloTMP_R.Reembolsado     := TRUE;
          rTituloTMP_R."Liq. por Id."  := USERID;
          rTituloTMP_R.INSERT;
        END;
        rTituloTMP_R."Importe Recibido" += pwCobros;
        rTituloTMP_R.MODIFY;

        rCobroTMP_R.RESET;
        rCobroTMP_R.SETRANGE("Forma de Pago", rFormaPago.Code);
        rCobroTMP_R.SETRANGE("Cod. Divisa"  , rCurrency.Code);
        rCobroTMP_R.SETRANGE(Delegacion     , pwGuia);
        IF NOT rCobroTMP_R.FINDFIRST THEN
        BEGIN
          rCobroTMP_R.INIT;
          rCobroTMP_R.Delegacion      := pwGuia;
          rCobroTMP_R."Num Reserva"   := rTituloTMP_R."Num Reserva";
          rCobroTMP_R."Forma de Pago" := rFormaPago.Code;
          rCobroTMP_R."Cod. Divisa"   := rCurrency.Code;
          rCobroTMP_R.Reembolsado     := TRUE;
          rCobroTMP_R."Liq. por Id."  := USERID;
          rCobroTMP_R.INSERT;
        END;

        rCobroTMP_R."Importe Recibido" += pwCobros;
        rCobroTMP_R.MODIFY;
      END;
    END;

    BEGIN
    {
      // $001 ARM 29072014 Reembolsos CNT-OC-14047
    }
    END.
  }
  RDLDATA
  {
  }
}
