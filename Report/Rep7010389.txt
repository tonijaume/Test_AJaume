OBJECT Report 7010389 Factura UEX
{
  OBJECT-PROPERTIES
  {
    Date=16/10/09;
    Time=12:34:38;
    Version List=TRANSFER;
  }
  PROPERTIES
  {
    CaptionML=ESP=Factura UEX;
    LeftMargin=1500;
    OnInitReport=BEGIN
                   rInfEmp.GET;
                   rInfEmp.CALCFIELDS(Picture);
                   rPar.GET;
                 END;

  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table7010415;
        DataItemTableView=SORTING(N§ Prefactura);
        NewPagePerRecord=Yes;
        DataItemVarName=Prefactura;
        OnAfterGetRecord=VAR
                           lwOKFact@1100253000 : Boolean;
                         BEGIN
                           CLEAR(wPrimeraLinea);

                           rCon.RESET;

                           rCon.SETFILTER(Garaje       , '%1|%2',Garaje,rPar."Todos los garajes");
                           rCon.SETRANGE("N§ Contrato" , "N§ Contrato");
                           IF NOT rCon.FINDFIRST THEN
                             rCon.INIT;

                           IF Facturada THEN
                             Imprimir:= Imprimir::Factura
                           ELSE
                             Imprimir:= Imprimir::Prefactura;

                           IF NOT CurrReport.PREVIEW THEN BEGIN // Marca la prefactura como impresa;
                             CASE Imprimir OF
                               Imprimir::Prefactura: Prefactura."Prefactura Impresa":= TRUE;
                               Imprimir::Factura   : Prefactura."Factura Impresa"   := TRUE;
                             END;
                             MODIFY;
                           END;

                           CASE Imprimir OF
                             Imprimir::Prefactura: wTextoAlternativo := "Tipo prefactura" = "Tipo prefactura"::"Texto alternativo";
                             Imprimir::Factura   : wTextoAlternativo := "Tipo factura"    = "Tipo factura"::"Texto alternativo";
                           END;


                           // En la impresion de las facturas tomaremos los datos fiscales de la cabecera de factura
                           // para el caso de los clientes varios

                           CLEAR(wDirClie);
                           CLEAR(wCifNif);
                           CLEAR(lwOKFact);
                           CLEAR(wRotuloPref);
                           CLEAR(rCliente);
                           IF Prefactura.Facturada THEN BEGIN
                             rFraVenta.RESET;
                             rFraVenta.SETFILTER("Document Type",'%1|%2',rFraVenta."Document Type"::Invoice,rFraVenta."Document Type"::"Credit Memo");
                             rFraVenta.SETRANGE("No.", Prefactura."N§ Factura");
                             IF rFraVenta.FINDFIRST THEN BEGIN
                               IF rFraVenta."Posting Date" = Prefactura."Fecha Registro factura" THEN
                                 lwOKFact := TRUE
                             END;
                           END;

                           IF lwOKFact THEN BEGIN
                             FormatDire.SalesHeaderSellTo(wDirClie, rFraVenta);
                             wCifNif := rFraVenta."VAT Registration No.";
                             rCliente.GET(rFraVenta."Bill-to Customer No.");
                           END
                           ELSE BEGIN
                             IF rCliente.GET(Cliente) THEN BEGIN
                               FormatDire.Customer(wDirClie,rCliente);
                               wCifNif := rCliente."VAT Registration No.";
                             END;
                           END;

                           wCifNif := STRSUBSTNO('%1 %2',Text010, wCifNif);

                           CASE Imprimir OF
                             Imprimir::Prefactura : BEGIN
                               CLEAR(wCifNif);
                               wFecha      := Fecha;
                               wNo         := Prefactura."N§ Prefactura";
                               wRotuloPref := UPPERCASE(FORMAT(Imprimir));
                             END;

                             Imprimir::Factura : BEGIN
                               wFecha := "Fecha Registro factura";
                               wNo    := Prefactura."N§ Factura";
                             END;
                           END;

                           rTempIVA.RESET;
                           IF rTempIVA.FINDFIRST THEN
                             rTempIVA.DELETEALL;

                           Prefactura.BuscaTotalIVA(rTempIVA); // Busca el desglose del iva

                           CLEAR(wTotal);
                           CurrReport.PAGENO:=1;
                         END;

        ReqFilterFields=N§ Prefactura,N§ Factura,Fecha Registro factura;
        GroupTotalFields=N§ Prefactura;
      }
      SECTIONS
      {
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number);
        NewPagePerRecord=Yes;
        DataItemVarName=BucleCopia;
        OnPreDataItem=VAR
                        NoBucles@1100253000 : Integer;
                      BEGIN
                        NoBucles := ABS(NoCopias) + rCliente."Invoice Copies" + 1;
                        IF NoBucles <= 0 THEN
                          NoBucles := 1;
                        TextoCopia := '';
                        SETRANGE(Number,1,NoBucles);
                      END;

        OnAfterGetRecord=BEGIN
                           IF Number > 1 THEN
                             TextoCopia := Text011;
                           CurrReport.PAGENO := 1;

                           CLEAR(wNoParte);
                         END;

      }
      SECTIONS
      {
      }
       }
    { PROPERTIES
      {
        DataItemIndent=2;
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number);
        MaxIteration=1;
        DataItemVarName=Cabecera;
        OnPreDataItem=BEGIN
                        // Solo se utiliza para impresi¢n de la cabecera
                      END;

        OnAfterGetRecord=BEGIN

                           // Informaci¢n cabecera empresa
                           CLEAR(wInfEmp);
                           wInfEmp[1]:= rInfEmp.Name;
                           wInfEmp[2]:= rInfEmp.Address;
                           wInfEmp[3]:= rInfEmp."Post Code" + ' ' + rInfEmp.City;
                           IF Prefactura.Imprimir = Prefactura.Imprimir::Factura THEN
                             wInfEmp[4]:= Text50000 + rInfEmp."VAT Registration No.";
                         END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Header;
            SectionWidth=18600;
            SectionHeight=846;
          }
          CONTROLS
          {
          }
           }
        { PROPERTIES
          {
            SectionType=Header;
            PrintOnEveryPage=Yes;
            SectionWidth=18600;
            SectionHeight=5499;
          }
          CONTROLS
          {
            { 1100253000;Shape  ;9900 ;423  ;8700 ;4230 ;ShapeStyle=Rectangle }
            { 1100244000;TextBox;10200;846  ;8250 ;423  ;FontSize=9;
                                                         SourceExpr=wDirClie[1] }
            { 1100244007;TextBox;10200;1269 ;8250 ;423  ;FontSize=9;
                                                         SourceExpr=wDirClie[2] }
            { 1100244010;TextBox;10200;1692 ;8250 ;423  ;FontSize=9;
                                                         SourceExpr=wDirClie[3] }
            { 1100244013;TextBox;10200;2115 ;8250 ;423  ;FontSize=9;
                                                         SourceExpr=wDirClie[4] }
            { 1100244014;TextBox;10200;2538 ;8250 ;423  ;FontSize=9;
                                                         SourceExpr=wDirClie[5] }
            { 1100244015;TextBox;300  ;0    ;7350 ;423  ;FontSize=9;
                                                         FontBold=No;
                                                         SourceExpr=wInfEmp[1] }
            { 1100244016;TextBox;300  ;423  ;7350 ;423  ;FontSize=9;
                                                         SourceExpr=wInfEmp[2] }
            { 1100244017;TextBox;300  ;846  ;7350 ;423  ;FontSize=9;
                                                         SourceExpr=wInfEmp[3] }
            { 1100244018;TextBox;300  ;1269 ;7350 ;423  ;FontSize=9;
                                                         SourceExpr=wInfEmp[4] }
            { 1100244019;TextBox;300  ;1692 ;7350 ;423  ;FontSize=9;
                                                         SourceExpr=wInfEmp[5] }
            { 1100244021;TextBox;300  ;2115 ;7350 ;423  ;FontSize=9;
                                                         SourceExpr=wInfEmp[6] }
            { 1100244043;TextBox;10200;2961 ;8250 ;423  ;FontSize=9;
                                                         SourceExpr=wCifNif }
            { 1100244045;TextBox;150  ;5076 ;18450;423  ;FontSize=12;
                                                         FontBold=Yes;
                                                         SourceExpr=Prefactura."Texto Registro" }
            { 1100244006;TextBox;300  ;3384 ;2250 ;423  ;HorzAlign=Left;
                                                         VertAlign=Bottom;
                                                         FontSize=9;
                                                         FontBold=Yes;
                                                         SourceExpr=Text50001 + FORMAT(Prefactura.Imprimir) }
            { 1100244012;TextBox;2700 ;3384 ;2100 ;423  ;HorzAlign=Left;
                                                         FontSize=9;
                                                         SourceExpr=wNo }
            { 1100244001;TextBox;2700 ;2961 ;3900 ;423  ;HorzAlign=Left;
                                                         FontSize=9;
                                                         CaptionML=ESP=Fecha:;
                                                         SourceExpr=FORMAT(wFecha,0,4) }
            { 1100244002;Label  ;300  ;2961 ;2250 ;423  ;ParentControl=1100244001;
                                                         HorzAlign=Left;
                                                         VertAlign=Bottom;
                                                         FontSize=9;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1100253001;TextBox;12600;3384 ;5850 ;423  ;VertAlign=Bottom;
                                                         FontSize=9;
                                                         SourceExpr=Prefactura.nom_touroperador }
            { 1100253002;Label  ;10200;3384 ;2310 ;423  ;ParentControl=1100253001;
                                                         FontSize=9;
                                                         LeaderDots=No;
                                                         CaptionML=ESP=Touroperador: }
            { 1100253003;TextBox;9900 ;0    ;3600 ;423  ;FontSize=10;
                                                         FontBold=Yes;
                                                         SourceExpr=wRotuloPref }
            { 1100253009;TextBox;4950 ;3384 ;1680 ;423  ;FontSize=9;
                                                         SourceExpr=STRSUBSTNO(Text50002,FORMAT(CurrReport.PAGENO)) }
            { 1100253010;TextBox;2700 ;3807 ;3900 ;423  ;HorzAlign=Center;
                                                         FontSize=9;
                                                         SourceExpr=TextoCopia }
            { 1100253016;TextBox;12600;3807 ;5850 ;423  ;HorzAlign=Left;
                                                         FontSize=9;
                                                         SourceExpr=rCliente."Salesperson Code" }
          }
           }
        { PROPERTIES
          {
            SectionType=Header;
            PrintOnEveryPage=Yes;
            SectionWidth=18600;
            SectionHeight=1269;
            OnPreSection=BEGIN
                           //CurrReport.SHOWOUTPUT(NOT wTextoAlternativo);
                         END;

          }
          CONTROLS
          {
            { 1100244024;Label  ;16500;0    ;1950 ;846  ;ParentControl=1100244023;
                                                         HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=ESP=Importe }
            { 1100244027;Label  ;1800 ;0    ;9450 ;846  ;ParentControl=1100253004;
                                                         VertAlign=Bottom;
                                                         FontSize=9;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1100244009;Label  ;0    ;0    ;1650 ;846  ;ParentControl=1100244008;
                                                         HorzAlign=Left;
                                                         VertAlign=Bottom;
                                                         FontSize=9;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1100244028;Shape  ;0    ;846  ;18450;423  ;ShapeStyle=HorzLine }
            { 1100253005;Label  ;11400;0    ;2610 ;846  ;HorzAlign=Center;
                                                         VertAlign=Bottom;
                                                         FontSize=9;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=ESP=Num Bono }
            { 1100253006;Label  ;14100;0    ;2310 ;846  ;HorzAlign=Center;
                                                         VertAlign=Bottom;
                                                         FontSize=9;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=ESP=Adultos/Ni¤os }
          }
           }
        { PROPERTIES
          {
            SectionType=Header;
            PrintOnEveryPage=Yes;
            SectionWidth=18600;
            SectionHeight=1692;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT(wTextoAlternativo);
                         END;

          }
          CONTROLS
          {
            { 1100244053;TextBox;0    ;423  ;18450;1269 ;HorzAlign=Left;
                                                         VertAlign=Top;
                                                         FontSize=9;
                                                         MultiLine=Yes;
                                                         SourceExpr=Prefactura."Texto alternativo" }
            { 1100253015;Label  ;0    ;0    ;2250 ;423  ;FontSize=9;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=Concepto }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=3;
        DataItemTable=Table7010417;
        DataItemTableView=SORTING(N§ Prefactura,Fecha,Codigo Servicio,Hora,Parte,Tipo);
        DataItemVarName=Linea;
        OnPreDataItem=BEGIN

                        CLEAR(wTotalPaxT);

                        CLEAR(wImporte);
                        CLEAR(wTotal);
                        CurrReport.CREATETOTALS(wImporte);
                      END;

        OnAfterGetRecord=VAR
                           lrZona@1100244002 : Record 7010429;
                           lrCodSer@1100244000 : Record 7010320;
                           lrLin@1100244003 : Record 7010417;
                           lrTipVeh@1100244007 : Record 7010345;
                           lwOk@1100244001 : Boolean;
                           lwText@1100244005 : Text[100];
                         BEGIN
                           IF NOT rParte.GET(Parte) THEN
                             CLEAR(rParte);

                           // JPT 03/07/06 Para que aparezcan Adultos y Ni¤os en una sola linea, Capturamos los ni¤os transportados en este parte
                           // Si la linea es de ni¤o y existe lina adultos para este parte/zona se produce un skyp
                           IF GetNi¤os(Linea) THEN
                             CurrReport.SKIP;

                           IF NOT rCon."Impuestos incluidos" THEN BEGIN
                             IF Prefactura."Mostrar Descuentos" THEN
                               wImporte := "Importe Sin IVA Sin Dto"
                             ELSE
                               wImporte := "Importe sin impuestos";
                           END
                           ELSE BEGIN
                             IF Prefactura."Mostrar Descuentos" THEN
                               wImporte := "Importe Con IVA Sin Dto"
                             ELSE
                               wImporte := "Importe con impuestos"
                           END;

                           CLEAR(wDescripSer);
                           lrCodSer.RESET;
                           IF lrCodSer.GET("Codigo Servicio") THEN
                             wDescripSer := lrCodSer.Descripcion;

                           IF (Tipo = Tipo::Suplemento) OR (Tipo = Tipo::Extra) OR (Tipo = Tipo::Maletas) THEN
                             wDescripSer := '( ' + UPPERCASE(FORMAT(Tipo,0,Text50003)) + ' )'
                           ELSE
                             wDescripSer += '  (' +  Zona + ')';

                           wPrimeraLinea := Linea.Parte <> wNoParte;
                           IF wPrimeraLinea THEN
                             wNoParte := Linea.Parte;

                           //Seg£n se deseen los importes en divisa local o no, se har  una conversi¢n o no
                           IF wDivisaLocal THEN
                             wImporte := rTipoCam.ExchangeAmtFCYToFCY(Prefactura."Fecha desde", "Cod. Divisa",'',wImporte);


                           CLEAR(wFechaLin);
                           IF wPrimeraLinea THEN BEGIN
                             wFechaLin := Fecha;
                           END;

                           CLEAR(wBonoParte);
                           CLEAR(wPlazasTxt);
                           IF Tipo IN [Tipo::Base,Tipo::Zona] THEN BEGIN
                             // Numero de Bono
                             IF rParte.GET(Parte) THEN BEGIN
                               IF rParte.Bono <> '' THEN
                                 wBonoParte := rParte.Bono
                               ELSE
                                 wBonoParte := rParte."Num. Bono Excursiones";
                             END;
                             wPlazasTxt := STRSUBSTNO('%1 / %2', Pax, "Ni¤os Facturados");
                           END;
                         END;

        TotalFields=Importe Sin IVA Sin Dto;
        DataItemLinkReference=Prefactura;
        DataItemLink=N§ Prefactura=FIELD(N§ Prefactura);
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=TransHeader;
            SectionWidth=18600;
            SectionHeight=846;
          }
          CONTROLS
          {
            { 1100253011;Label  ;14100;0    ;2310 ;423  ;ParentControl=1100253012;
                                                         FontSize=9;
                                                         LeaderDots=Yes }
            { 1100253012;TextBox;16500;0    ;1980 ;423  ;FontSize=9;
                                                         CaptionML=ESP=Suma;
                                                         SourceExpr=wImporte;
                                                         AutoFormatType=1;
                                                         AutoFormatExpr="Cod. Divisa" }
          }
           }
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=18600;
            SectionHeight=423;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT(NOT wTextoAlternativo);
                         END;

          }
          CONTROLS
          {
            { 1100244008;TextBox;0    ;0    ;1650 ;423  ;HorzAlign=Left;
                                                         FontSize=9;
                                                         CaptionML=ESP=Fecha;
                                                         BlankZero=Yes;
                                                         SourceExpr=wFechaLin }
            { 1100244023;TextBox;16500;0    ;1950 ;423  ;HorzAlign=Right;
                                                         FontSize=9;
                                                         DecimalPlaces=2:2;
                                                         SourceExpr=wImporte;
                                                         AutoFormatExpr="Cod. Divisa" }
            { 1100253004;TextBox;1800 ;0    ;9450 ;423  ;FontSize=9;
                                                         CaptionML=ESP=Descripci¢n Servicio;
                                                         SourceExpr=wDescripSer }
            { 1100253007;TextBox;11400;0    ;2550 ;423  ;HorzAlign=Center;
                                                         FontSize=9;
                                                         SourceExpr=wBonoParte }
            { 1100253008;TextBox;14100;0    ;2250 ;423  ;HorzAlign=Center;
                                                         FontSize=9;
                                                         DecimalPlaces=0:0;
                                                         SourceExpr=wPlazasTxt }
          }
           }
        { PROPERTIES
          {
            SectionType=TransFooter;
            SectionWidth=18600;
            SectionHeight=846;
          }
          CONTROLS
          {
            { 1100253013;Label  ;11400;0    ;5010 ;423  ;ParentControl=1100253014;
                                                         FontSize=9;
                                                         LeaderDots=Yes }
            { 1100253014;TextBox;16500;0    ;1980 ;423  ;FontSize=9;
                                                         CaptionML=ESP=Suma;
                                                         SourceExpr=wImporte;
                                                         AutoFormatType=1;
                                                         AutoFormatExpr="Cod. Divisa" }
          }
           }
        { PROPERTIES
          {
            SectionType=TransFooter;
            SectionWidth=18600;
            SectionHeight=846;
            OnPreSection=BEGIN
                           IF Prefactura."Mostrar Descuentos" THEN
                             wImporte2 := "Importe Sin IVA Sin Dto"
                           ELSE
                             wImporte2 := "Importe sin impuestos";
                         END;

          }
          CONTROLS
          {
            { 1100244047;Label  ;14100;423  ;2250 ;423  ;HorzAlign=Right;
                                                         FontSize=9;
                                                         CaptionML=ESP=Suma y sigue }
            { 1100244065;TextBox;16500;423  ;1950 ;423  ;FontSize=9;
                                                         DecimalPlaces=2:2;
                                                         SourceExpr=wImporte;
                                                         AutoFormatExpr="Cod. Divisa" }
          }
           }
        { PROPERTIES
          {
            SectionType=Footer;
            SectionWidth=18600;
            SectionHeight=846;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT(FALSE);

                           IF Prefactura."Mostrar Descuentos" THEN
                             wImporte2 := "Importe Sin IVA Sin Dto"
                           ELSE
                             wImporte2 := "Importe sin impuestos";
                         END;

          }
          CONTROLS
          {
            { 1100244003;TextBox;16650;423  ;1800 ;423  ;FontSize=9;
                                                         FontBold=Yes;
                                                         DecimalPlaces=2:2;
                                                         SourceExpr=wImporte2 }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=3;
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number);
        DataItemVarName=IVA;
        OnPreDataItem=BEGIN
                        wRompe := NOT rTempIVA.FINDSET;
                      END;

        OnAfterGetRecord=BEGIN

                           IF wRompe THEN
                             CurrReport.BREAK;

                           rIVA := rTempIVA;
                           wTotal += rIVA."Amount Including VAT+EC";
                           wRompe := rTempIVA.NEXT=0;
                         END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Header;
            SectionWidth=18600;
            SectionHeight=1269;
            KeepWithNext=Yes;
          }
          CONTROLS
          {
            { 1100244031;Label  ;10050;423  ;2250 ;846  ;ParentControl=1100244025;
                                                         HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1100244035;Label  ;12450;423  ;1500 ;846  ;ParentControl=1100244032;
                                                         HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1100244037;Label  ;14100;423  ;1800 ;846  ;ParentControl=1100244036;
                                                         HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1100244040;Label  ;16050;423  ;2400 ;846  ;ParentControl=1100244039;
                                                         HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
          }
           }
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=18600;
            SectionHeight=423;
            KeepWithNext=Yes;
          }
          CONTROLS
          {
            { 1100244025;TextBox;10050;0    ;2250 ;423  ;HorzAlign=Right;
                                                         FontSize=9;
                                                         CaptionML=ESP=Base Imponible;
                                                         DecimalPlaces=0:2;
                                                         SourceExpr=rIVA."VAT+EC Base" }
            { 1100244032;TextBox;12450;0    ;1200 ;423  ;HorzAlign=Right;
                                                         FontSize=9;
                                                         CaptionML=ESP=% IVA;
                                                         DecimalPlaces=0:2;
                                                         SourceExpr=rIVA."VAT %" }
            { 1100244036;TextBox;14100;0    ;1800 ;423  ;HorzAlign=Right;
                                                         FontSize=9;
                                                         CaptionML=ESP=Importe IVA;
                                                         DecimalPlaces=0:2;
                                                         SourceExpr=rIVA."VAT Amount" }
            { 1100244039;TextBox;16050;0    ;2400 ;423  ;HorzAlign=Right;
                                                         FontSize=9;
                                                         CaptionML=ESP=Total;
                                                         DecimalPlaces=0:2;
                                                         SourceExpr=rIVA."Amount Including VAT+EC" }
            { 1100244044;Label  ;13650;0    ;300  ;423  ;FontSize=9;
                                                         CaptionML=ESP=% }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=3;
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number);
        MaxIteration=1;
        DataItemVarName=pie;
        OnAfterGetRecord=VAR
                           lrLin@1100244000 : Record 7010417;
                         BEGIN

                           IF wTotal = 0 THEN BEGIN // En caso de que no se haya registrado IVA Pillamos el total de todas maneras de las lineas
                             lrLin.RESET;
                             lrLin.SETRANGE("N§ Prefactura",Prefactura."N§ Prefactura");
                             IF lrLin.FINDSET THEN BEGIN
                               REPEAT
                                 wTotal += lrLin."Importe con impuestos";
                               UNTIL lrLin.NEXT=0;
                             END;
                           END;
                         END;

        DataItemLinkReference=Linea;
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=18600;
            SectionHeight=846;
            KeepWithNext=Yes;
          }
          CONTROLS
          {
            { 1100244038;TextBox;15900;423  ;2400 ;423  ;HorzAlign=Right;
                                                         FontSize=9;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=Total:;
                                                         DecimalPlaces=0:2;
                                                         SourceExpr=wTotal }
            { 1100244041;Label  ;13950;423  ;1800 ;423  ;ParentControl=1100244038;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=ESP=Total Fact.: }
            { 1100244042;Shape  ;15900;423  ;2550 ;423   }
          }
           }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=4840;
      Height=1540;
    }
    CONTROLS
    {
      { 1100253000;Label  ;220  ;770  ;2640 ;440  ;ParentControl=1100253001;
                                                   CaptionML=ESP=Imprime Divisa Local }
      { 1100253001;CheckBox;2970;770  ;440  ;440  ;ShowCaption=No;
                                                   SourceExpr=wDivisaLocal }
      { 1100253002;TextBox;2970 ;220  ;1650 ;440  ;CaptionML=ESP=N§ copias;
                                                   SourceExpr=NoCopias }
      { 1100253003;Label  ;220  ;220  ;2640 ;440  ;ParentControl=1100253002 }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      Text50000@1103355000 : TextConst 'ESP="C.I.F.: "';
      Text50001@1103355001 : TextConst 'ESP="No "';
      Text50002@1103355002 : TextConst 'ESP=P g. %1';
      Text50003@1103355003 : TextConst 'ESP=<Text>';
      rInfEmp@1100244003 : Record 79;
      FormatDire@1100244004 : Codeunit 365;
      rTempIVA@1100244015 : TEMPORARY Record 290;
      rIVA@1100244016 : TEMPORARY Record 290;
      rCliente@1100244008 : Record 18;
      rParte@1100244020 : Record 7010360;
      rPar@1100244025 : Record 7010311;
      rCodSuplement@1100244026 : Record 7010318;
      rVeh@1100244027 : Record 7010346;
      rCodExt@1100244031 : Record 7010321;
      rFraVenta@1100244032 : Record 36;
      rTipoCam@1100253009 : Record 330;
      rCon@1100253010 : Record 7010403;
      wDirClie@1100244002 : ARRAY [8] OF Text[50];
      wCifNif@1100244033 : Text[30];
      wFecha@1100244006 : Date;
      wFechaLin@1100253011 : Date;
      wNo@1100244007 : Code[20];
      Text001@1100244009 : TextConst 'ESP=Factura';
      Text002@1100244010 : TextConst 'ESP=Prefactura';
      wInfEmp@1103350000 : ARRAY [10] OF Text[100];
      wTextoPrecio@1100244014 : Text[30];
      wRompe@1100244017 : Boolean;
      wTotal@1100244018 : Decimal;
      wPlazasTxt@1100244005 : Text[30];
      wPax@1100244019 : Decimal;
      wTotalPaxT@1100244021 : Decimal;
      Text003@1100244023 : TextConst 'ESP=Adulto';
      Text004@1100244024 : TextConst 'ESP=Ni¤o';
      wTextoAlternativo@1100244028 : Boolean;
      Text005@1100244029 : TextConst 'ESP=Ma¤ana';
      Text006@1100244030 : TextConst 'ESP=Tarde';
      Text007@1100244035 : TextConst 'ESP=Entradas';
      Text008@1100244036 : TextConst 'ESP=Salidas';
      Text009@1100244037 : TextConst 'ESP=Excursion';
      wTextoTransp@1100244038 : Text[30];
      wImporte@1103350003 : Decimal;
      wImporte2@1103350004 : Decimal;
      Text010@1100253000 : TextConst 'ESP=C.I.F.:';
      wRotuloPref@1100253001 : Text[30];
      wBonoParte@1100253002 : Code[20];
      wDescripSer@1100253003 : Text[250];
      wPrimeraLinea@1100253004 : Boolean;
      wNoParte@1100253005 : Code[10];
      wDivisaLocal@1100253006 : Boolean;
      wTotalSinDto@1100253007 : Decimal;
      wTotalconDto@1100253008 : Decimal;
      NoCopias@1100253012 : Integer;
      TextoCopia@1100253013 : Text[30];
      Text011@1100253014 : TextConst 'ESP=COPIA';

    PROCEDURE TextoZona@1100244000(pwCodigo@1100244000 : Code[10]) : Text[30];
    VAR
      lrZonaTra@1100244001 : Record 7010429;
    BEGIN
      // TextoZona
      // Devuelve la descripci¢n de la zona de Trabajo

      IF lrZonaTra.GET(pwCodigo) THEN
        EXIT(lrZonaTra.Descripcion)
      ELSE
        EXIT(pwCodigo);
    END;

    PROCEDURE TextoCodigo@1100244003(pwCodigo@1100244001 : Code[10]) : Text[30];
    VAR
      lrCodSer@1100244000 : Record 7010320;
    BEGIN
      // TextoCodigo
      // Devuelve la descripcion del codigo de servicio

      IF lrCodSer.GET(pwCodigo) THEN
        EXIT(lrCodSer.Descripcion)
      ELSE
        EXIT(pwCodigo);
    END;

    PROCEDURE TextoTTOO@1100244006(pwCodigo@1100244000 : Code[10]) : Text[30];
    VAR
      lrTTOO@1100244001 : Record 7010312;
    BEGIN
      // TextoTTOO

      lrTTOO.RESET;
      IF lrTTOO.GET(pwCodigo) THEN
        EXIT(lrTTOO.Nombre)
      ELSE
        EXIT('');
    END;

    PROCEDURE GetNi¤os@1103355003(VAR prLin@1103355000 : Record 7010417) : Boolean;
    VAR
      lrLin@1103355001 : Record 7010417;
      lwAdulto@1103355002 : Boolean;
    BEGIN
      // GetNi¤os
      // Devuelve True si la linea es de Ni¤o y adem s existen lineas de adulto.
      // La idea es ense¤ar una sola linea en vez de dos (adultos/ni¤os) por lo que si exiten ambas solo ense¤a
      // la de adulto unicamente.
      // En caso de que sea de adulto, agrupa los totales de las lineas de ni¤os

      IF (prLin.Tipo <> prLin.Tipo::Base) THEN
        EXIT;

      IF (prLin."Cod Suplemento" <> rPar."Codigo Adulto") AND (prLin."Cod Suplemento" <> rPar."Codigo Ni¤o") THEN
        EXIT;

      lwAdulto := prLin."Cod Suplemento" = rPar."Codigo Adulto";

      prLin."Ni¤os Facturados" :=0;
      CLEAR(lrLin);
      lrLin.SETCURRENTKEY("N§ Prefactura",Hora,Fecha,Parte);
      lrLin.SETRANGE("N§ Prefactura" , prLin."N§ Prefactura");
      lrLin.SETRANGE(Parte           , prLin.Parte);
      lrLin.SETRANGE(Tipo            , lrLin.Tipo::Base);
      IF lwAdulto THEN
        lrLin.SETRANGE("Cod Suplemento", rPar."Codigo Ni¤o")
      ELSE
        lrLin.SETRANGE("Cod Suplemento", rPar."Codigo Adulto");

      lrLin.SETRANGE(Zona            , prLin.Zona);
      IF lrLin.FINDSET THEN BEGIN
        IF lwAdulto THEN BEGIN
          prLin."Ni¤os Facturados":= 0;
          REPEAT
            prLin."Ni¤os Facturados"        += lrLin.Plazas;
            prLin."Importe con impuestos"   += lrLin."Importe con impuestos";
            prLin."Importe sin impuestos"   += lrLin."Importe sin impuestos";
            prLin."Importe Sin IVA Sin Dto" += lrLin."Importe Sin IVA Sin Dto";
            prLin."Importe Con IVA Sin Dto" += lrLin."Importe Con IVA Sin Dto";
          UNTIL lrLin.NEXT=0;
        END
        ELSE
          EXIT(TRUE);
      END
      ELSE
        IF NOT lwAdulto THEN // Si solo tiene que aparecer ni¤os
          prLin."Ni¤os Facturados":= prLin.Plazas;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}
