OBJECT Report 90 Import Consolidation from DB
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=NAVW16.00.01;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Import Consolidation from DB;
               ESP=Importar consol. desde BD];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  DimSelectionBuf.CompareDimText(
                    3,REPORT::"Import Consolidation from DB",'',ColumnDim,Text020);
                END;

  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table220;
        DataItemTableView=SORTING(Code)
                          WHERE(Consolidate=CONST(Yes));
        OnPreDataItem=BEGIN
                        CheckConsolidDates(ConsolidStartDate,ConsolidEndDate);

                        IF GLDocNo = '' THEN
                          ERROR(Text000);

                        Window.OPEN(
                          Text001 +
                          Text002 +
                          Text003 +
                          Text004);
                      END;

        OnAfterGetRecord=BEGIN
                           Window.UPDATE(1,Code);
                           Window.UPDATE(2,'');

                           CLEAR(BusUnitConsolidate);
                           BusUnitConsolidate.SetDocNo(GLDocNo);

                           TESTFIELD("Company Name");
                           "G/L Entry".CHANGECOMPANY("Company Name");
                           "Ledger Entry Dimension".CHANGECOMPANY("Company Name");
                           "G/L Account".CHANGECOMPANY("Company Name");
                           "Currency Exchange Rate".CHANGECOMPANY("Company Name");
                           Dim.CHANGECOMPANY("Company Name");
                           DimVal.CHANGECOMPANY("Company Name");

                           SelectedDim.SETRANGE("User ID",USERID);
                           SelectedDim.SETRANGE("Object Type",3);
                           SelectedDim.SETRANGE("Object ID",REPORT::"Import Consolidation from DB");
                           BusUnitConsolidate.SetSelectedDim(SelectedDim);

                           TempDim.RESET;
                           TempDim.DELETEALL;
                           IF Dim.FIND('-') THEN BEGIN
                             REPEAT
                               TempDim.INIT;
                               TempDim := Dim;
                               TempDim.INSERT;
                             UNTIL Dim.NEXT = 0;
                           END;
                           TempDim.RESET;
                           TempDimVal.RESET;
                           TempDimVal.DELETEALL;
                           IF DimVal.FIND('-') THEN BEGIN
                             REPEAT
                               TempDimVal.INIT;
                               TempDimVal := DimVal;
                               TempDimVal.INSERT;
                             UNTIL DimVal.NEXT = 0;
                           END;

                           AdditionalCurrencyCode := '';
                           SubsidCurrencyCode := '';
                         END;

        ReqFilterFields=Code;
      }
      SECTIONS
      {
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table15;
        DataItemTableView=SORTING(No.)
                          WHERE(Account Type=CONST(Posting));
        OnAfterGetRecord=BEGIN
                           Window.UPDATE(2,"No.");
                           Window.UPDATE(3,'');

                           BusUnitConsolidate.InsertGLAccount("G/L Account");
                         END;

      }
      SECTIONS
      {
      }
       }
    { PROPERTIES
      {
        DataItemIndent=2;
        DataItemTable=Table17;
        DataItemTableView=SORTING(G/L Account No.,Posting Date);
        OnPreDataItem=BEGIN
                        SETRANGE("Posting Date",ConsolidStartDate,ConsolidEndDate);

                        IF GETRANGEMIN("Posting Date") = NORMALDATE(GETRANGEMIN("Posting Date")) THEN
                          CheckClosingPostings("G/L Account"."No.",GETRANGEMIN("Posting Date"),GETRANGEMAX("Posting Date"));
                      END;

        OnAfterGetRecord=BEGIN
                           GLEntryNo := BusUnitConsolidate.InsertGLEntry("G/L Entry");
                         END;

        DataItemLink=G/L Account No.=FIELD(No.);
      }
      SECTIONS
      {
      }
       }
    { PROPERTIES
      {
        DataItemIndent=3;
        DataItemTable=Table355;
        DataItemTableView=SORTING(Table ID,Entry No.,Dimension Code)
                          WHERE(Table ID=CONST(17));
        OnAfterGetRecord=VAR
                           TempLedgEntryDim@1000 : Record 355;
                         BEGIN
                           TempLedgEntryDim.INIT;
                           TempLedgEntryDim."Table ID" := DATABASE::"G/L Entry";
                           TempLedgEntryDim."Entry No." := GLEntryNo;
                           IF TempDim.GET("Dimension Code") AND
                              (TempDim."Consolidation Code" <> '')
                           THEN
                             TempLedgEntryDim."Dimension Code" := TempDim."Consolidation Code"
                           ELSE
                             TempLedgEntryDim."Dimension Code" := "Dimension Code";
                           IF TempDimVal.GET("Dimension Code","Dimension Value Code") AND
                              (TempDimVal."Consolidation Code" <> '')
                           THEN
                             TempLedgEntryDim."Dimension Value Code" := TempDimVal."Consolidation Code"
                           ELSE
                             TempLedgEntryDim."Dimension Value Code" := "Dimension Value Code";
                           BusUnitConsolidate.InsertEntryDim(TempLedgEntryDim);
                         END;

        DataItemLink=Entry No.=FIELD(Entry No.);
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=12000;
            SectionHeight=846;
          }
          CONTROLS
          {
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table330;
        DataItemTableView=SORTING(Currency Code,Starting Date);
        OnPreDataItem=VAR
                        SubsidGLSetup@1000 : Record 98;
                      BEGIN
                        IF "Business Unit"."Currency Code" = '' THEN
                          CurrReport.BREAK;

                        SubsidGLSetup.CHANGECOMPANY("Business Unit"."Company Name");
                        SubsidGLSetup.GET;
                        AdditionalCurrencyCode := SubsidGLSetup."Additional Reporting Currency";
                        IF SubsidGLSetup."LCY Code" <> '' THEN
                          SubsidCurrencyCode := SubsidGLSetup."LCY Code"
                        ELSE
                          SubsidCurrencyCode := "Business Unit"."Currency Code";

                        IF (ParentCurrencyCode = '') AND (AdditionalCurrencyCode = '') THEN
                          CurrReport.BREAK;

                        SETFILTER("Currency Code",'%1|%2',ParentCurrencyCode,AdditionalCurrencyCode);
                        SETRANGE("Starting Date",0D,ConsolidEndDate);
                      END;

        OnAfterGetRecord=BEGIN
                           BusUnitConsolidate.InsertExchRate("Currency Exchange Rate");
                         END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=12000;
            SectionHeight=846;
          }
          CONTROLS
          {
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number)
                          WHERE(Number=CONST(1));
        DataItemVarName=DoTheConsolidation;
        OnAfterGetRecord=BEGIN
                           BusUnitConsolidate.SetGlobals(
                             '','',"Business Unit"."Company Name",
                             SubsidCurrencyCode,AdditionalCurrencyCode,ParentCurrencyCode,
                             0,ConsolidStartDate,ConsolidEndDate);
                           BusUnitConsolidate.RUN("Business Unit");
                         END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=12000;
            SectionHeight=846;
          }
          CONTROLS
          {
          }
           }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=8910;
      Height=4070;
      SaveValues=Yes;
      OnOpenForm=BEGIN
                   IF ParentCurrencyCode = '' THEN BEGIN
                     GLSetup.GET;
                     ParentCurrencyCode := GLSetup."LCY Code";
                   END;
                 END;

    }
    CONTROLS
    {
      { 1   ;TextBox      ;3410 ;550  ;1650 ;440  ;CaptionML=[ENU=Starting Date;
                                                              ESP=Fecha inicial];
                                                   ClosingDates=Yes;
                                                   SourceExpr=ConsolidStartDate }
      { 21  ;Label        ;0    ;0    ;3300 ;440  ;LeaderDots=No;
                                                   CaptionML=[ENU=Consolidation Period;
                                                              ESP=Periodo consolidaci¢n] }
      { 31  ;Label        ;220  ;550  ;3080 ;440  ;ParentControl=1 }
      { 2   ;TextBox      ;3410 ;1100 ;1650 ;440  ;CaptionML=[ENU=Ending Date;
                                                              ESP=Fecha final];
                                                   ClosingDates=Yes;
                                                   SourceExpr=ConsolidEndDate }
      { 22  ;Label        ;220  ;1100 ;3080 ;440  ;ParentControl=2 }
      { 6   ;TextBox      ;3410 ;2970 ;2750 ;440  ;CaptionML=[ENU=Document No.;
                                                              ESP=N§ documento];
                                                   SourceExpr=GLDocNo }
      { 26  ;Label        ;0    ;2970 ;3300 ;440  ;ParentControl=6 }
      { 7   ;TextBox      ;3410 ;2310 ;5500 ;440  ;Editable=No;
                                                   PermanentAssist=Yes;
                                                   CaptionML=[ENU=Copy Dimensions;
                                                              ESP=Copiar dimensiones];
                                                   SourceExpr=ColumnDim;
                                                   OnAssistEdit=BEGIN
                                                                  DimSelectionBuf.SetDimSelectionMultiple(3,REPORT::"Import Consolidation from DB",ColumnDim);
                                                                END;
                                                                 }
      { 8   ;Label        ;220  ;2310 ;3080 ;440  ;ParentControl=7 }
      { 4   ;Label        ;0    ;1760 ;3300 ;440  ;LeaderDots=No;
                                                   CaptionML=[ENU=Copy Field Contents;
                                                              ESP=Copiar contenidos] }
      { 3   ;TextBox      ;3410 ;3630 ;2750 ;440  ;CaptionML=[ENU=Parent Currency Code;
                                                              ESP=C¢d. divisa ppal.];
                                                   SourceExpr=ParentCurrencyCode }
      { 5   ;Label        ;0    ;3630 ;3300 ;440  ;ParentControl=3 }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   IF ParentCurrencyCode = '' THEN BEGIN
                     GLSetup.GET;
                     ParentCurrencyCode := GLSetup."LCY Code";
                   END;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             ESP=Opciones] }

      { 21  ;2   ;Group     ;
                  CaptionML=[ENU=Consolidation Period;
                             ESP=Periodo consolidaci¢n] }

      { 1   ;3   ;Field     ;
                  CaptionML=[ENU=Starting Date;
                             ESP=Fecha inicial];
                  ClosingDates=Yes;
                  SourceExpr=ConsolidStartDate }

      { 2   ;3   ;Field     ;
                  CaptionML=[ENU=Ending Date;
                             ESP=Fecha final];
                  ClosingDates=Yes;
                  SourceExpr=ConsolidEndDate }

      { 4   ;2   ;Group     ;
                  CaptionML=[ENU=Copy Field Contents;
                             ESP=Copiar contenidos] }

      { 7   ;3   ;Field     ;
                  CaptionML=[ENU=Copy Dimensions;
                             ESP=Copiar dimensiones];
                  SourceExpr=ColumnDim;
                  Editable=FALSE;
                  OnAssistEdit=BEGIN
                                 DimSelectionBuf.SetDimSelectionMultiple(3,REPORT::"Import Consolidation from DB",ColumnDim);
                               END;
                                }

      { 6   ;2   ;Field     ;
                  CaptionML=[ENU=Document No.;
                             ESP=N§ documento];
                  SourceExpr=GLDocNo }

      { 3   ;2   ;Field     ;
                  CaptionML=[ENU=Parent Currency Code;
                             ESP=C¢d. divisa ppal.];
                  SourceExpr=ParentCurrencyCode }

    }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Enter a document number.;ESP=Introduzca un n£mero de documento.';
      Text001@1001 : TextConst 'ENU=Importing Subsidiary Data...\\;ESP=Importando datos relacionados...\\';
      Text002@1002 : TextConst 'ENU=Business Unit Code   #1##########\;ESP=C¢digo empresa       #1##########\';
      Text003@1003 : TextConst 'ENU=G/L Account No.      #2##########\;ESP=N£mero cuenta        #2##########\';
      Text004@1004 : TextConst 'ENU=Date                 #3######;ESP=Fecha                #3######';
      Text006@1005 : TextConst 'ENU=Enter the starting date for the consolidation period.;ESP=Introduzca la fecha inicial del periodo de consolidaci¢n.';
      Text007@1006 : TextConst 'ENU=Enter the ending date for the consolidation period.;ESP=Introduzca la fecha final del periodo de consolidaci¢n.';
      Text020@1018 : TextConst 'ENU=Copy Dimensions;ESP=Copiar dimensiones';
      Text022@1020 : TextConst 'ENU=A %1 with %2 on a closing date (%3) was found while consolidating nonclosing entries (%4 %5).;ESP=Un %1 con %2 en fecha cerrada (%3) fue encontrado mientras consolid. movs. no cerrados (%4 %5).';
      Text023@1021 : TextConst 'ENU=Do you want to consolidate in the period from %1 to %2?;ESP=¨Quiere consolidar el periodo de %1 a %2?';
      Text024@1022 : TextConst 'ENU=There is no %1 to consolidate.;ESP=No hay %1 para consolidar.';
      Text025@1023 : TextConst 'ENU=The consolidation period %1 .. %2 is not within the fiscal year of one or more of the subsidiaries.\;ESP=El periodo de consolidaci¢n %1 .. %2 no corresponde al ejercicio de una o m s de las subsidiarias.\';
      Text026@1024 : TextConst 'ENU=Do you want to proceed with the consolidation?;ESP=¨Confirma que desea proceder a la consolidaci¢n?';
      Text028@1025 : TextConst 'ENU=You must create a new fiscal year in the consolidated company.;ESP=Debe crear un ejercicio nuevo en la empresa consolidada.';
      Text029@1026 : TextConst 'ENU=The consolidation period %1 .. %2 is not within the fiscal year %3 .. %4 of the consolidated company %5.\;ESP=El periodo de consolidaci¢n %1 .. %2 no corresponde al ejercicio %3 .. %4 de la empresa consolidada %5.\';
      Text030@1027 : TextConst 'ENU=When using closing dates, the starting and ending dates must be the same.;ESP=Usando fech. cerradas, el principio y final de las fech. debe ser el mismo.';
      Text031@1028 : TextConst 'ENU=The %1 %2 of %3 %4, is not the %1 of the fiscal year of company %5.;ESP=El %1 %2 de %3 %4, no es el %1 del ejercicio de la empresa %5.';
      SelectedDim@1034 : Record 369;
      Dim@1036 : Record 348;
      DimVal@1037 : Record 349;
      TempDim@1038 : TEMPORARY Record 348;
      TempDimVal@1039 : TEMPORARY Record 349;
      GLSetup@1043 : Record 98;
      DimSelectionBuf@1047 : Record 368;
      BusUnitConsolidate@1073 : Codeunit 432;
      Window@1050 : Dialog;
      ConsolidStartDate@1051 : Date;
      ConsolidEndDate@1052 : Date;
      GLDocNo@1055 : Code[20];
      ColumnDim@1068 : Text[250];
      ParentCurrencyCode@1072 : Code[10];
      SubsidCurrencyCode@1035 : Code[10];
      AdditionalCurrencyCode@1040 : Code[10];
      Text032@1007 : TextConst 'ENU=The %1 is later than the %2 in company %3.;ESP=%1 es posterior al valor de %2 para la compa¤¡a %3.';
      GLEntryNo@1008 : Integer;

    LOCAL PROCEDURE CheckClosingPostings@5(GLAccNo@1000 : Code[20];StartDate@1001 : Date;EndDate@1002 : Date);
    VAR
      GLEntry@1003 : Record 17;
      AccountingPeriod@1004 : Record 50;
    BEGIN
      AccountingPeriod.CHANGECOMPANY("Business Unit"."Company Name");
      AccountingPeriod.SETCURRENTKEY("New Fiscal Year","Date Locked");
      AccountingPeriod.SETRANGE("New Fiscal Year",TRUE);
      AccountingPeriod.SETRANGE("Date Locked",TRUE);
      AccountingPeriod.SETRANGE("Starting Date",StartDate + 1,EndDate);
      IF AccountingPeriod.FIND('-') THEN BEGIN
        GLEntry.CHANGECOMPANY("Business Unit"."Company Name");
        GLEntry.SETCURRENTKEY("G/L Account No.","Posting Date");
        GLEntry.SETRANGE("G/L Account No.",GLAccNo);
        REPEAT
          GLEntry.SETRANGE("Posting Date",CLOSINGDATE(AccountingPeriod."Starting Date" - 1));
          IF GLEntry.FIND('-') THEN
            ERROR(
              Text022,
              GLEntry.TABLECAPTION,
              GLEntry.FIELDCAPTION("Posting Date"),
              GLEntry.GETFILTER("Posting Date"),
              GLEntry.FIELDCAPTION("G/L Account No."),
              GLAccNo);
        UNTIL AccountingPeriod.NEXT = 0;
      END;
    END;

    PROCEDURE CheckConsolidDates@9(StartDate@1000 : Date;EndDate@1001 : Date);
    VAR
      BusUnit@1002 : Record 220;
      ConsolPeriodInclInFiscalYears@1003 : Boolean;
    BEGIN
      IF StartDate = 0D THEN
        ERROR(Text006);
      IF EndDate = 0D THEN
        ERROR(Text007);

      IF NOT
         CONFIRM(
           Text023,
           FALSE,StartDate,EndDate)
      THEN
        CurrReport.BREAK;

      CheckClosingDates(StartDate,EndDate);

      BusUnit.COPYFILTERS("Business Unit");
      BusUnit.SETRANGE(Consolidate,TRUE);
      IF NOT BusUnit.FIND('-') THEN
        ERROR(Text024,BusUnit.TABLECAPTION);

      ConsolPeriodInclInFiscalYears := TRUE;
      REPEAT
        IF (StartDate = NORMALDATE(StartDate)) OR (EndDate = NORMALDATE(EndDate)) THEN BEGIN
          IF (BusUnit."Starting Date" <> 0D) OR (BusUnit."Ending Date" <> 0D) THEN BEGIN
            CheckBusUnitsDatesToFiscalYear(BusUnit);
            ConsolPeriodInclInFiscalYears :=
              ConsolPeriodInclInFiscalYears AND CheckDatesToBusUnitDates(StartDate,EndDate,BusUnit);
          END;
        END;
      UNTIL BusUnit.NEXT = 0;

      IF NOT ConsolPeriodInclInFiscalYears THEN
        IF NOT CONFIRM(
          Text025+
          Text026,
          FALSE,StartDate,EndDate)
        THEN
          CurrReport.BREAK;

      CheckDatesToFiscalYear(StartDate,EndDate);
    END;

    PROCEDURE CheckDatesToFiscalYear@17(StartDate@1000 : Date;EndDate@1001 : Date);
    VAR
      AccountingPeriod@1002 : Record 50;
      FiscalYearStartDate@1003 : Date;
      FiscalYearEndDate@1004 : Date;
      ConsolPeriodInclInFiscalYear@1005 : Boolean;
    BEGIN
      ConsolPeriodInclInFiscalYear := TRUE;

      AccountingPeriod.RESET;
      AccountingPeriod.SETRANGE(Closed,FALSE);
      AccountingPeriod.SETRANGE("New Fiscal Year",TRUE);
      AccountingPeriod.FIND('-');

      FiscalYearStartDate := AccountingPeriod."Starting Date";
      IF AccountingPeriod.FIND('>') THEN
        FiscalYearEndDate := CALCDATE('<-1D>',AccountingPeriod."Starting Date")
      ELSE
        ERROR(Text028);

      ConsolPeriodInclInFiscalYear := (StartDate >= FiscalYearStartDate) AND (EndDate <= FiscalYearEndDate);

      IF NOT ConsolPeriodInclInFiscalYear THEN
        IF NOT CONFIRM(
          Text029+
          Text026,
          FALSE,StartDate,EndDate,FiscalYearStartDate,FiscalYearEndDate,COMPANYNAME)
        THEN
          CurrReport.BREAK;
    END;

    PROCEDURE CheckDatesToBusUnitDates@13(StartDate@1000 : Date;EndDate@1001 : Date;BusUnit@1002 : Record 220) : Boolean;
    VAR
      ConsolPeriodInclInFiscalYear@1003 : Boolean;
    BEGIN
      ConsolPeriodInclInFiscalYear := (StartDate >= BusUnit."Starting Date") AND (EndDate <= BusUnit."Ending Date");
      EXIT(ConsolPeriodInclInFiscalYear);
    END;

    PROCEDURE CheckClosingDates@20(StartDate@1000 : Date;EndDate@1001 : Date);
    BEGIN
      IF (StartDate = CLOSINGDATE(StartDate)) OR
         (EndDate = CLOSINGDATE(EndDate))
      THEN BEGIN
        IF StartDate <> EndDate THEN
          ERROR(Text030);
      END;
    END;

    PROCEDURE CheckBusUnitsDatesToFiscalYear@8(VAR BusUnit@1000 : Record 220);
    VAR
      AccountingPeriod@1001 : Record 50;
    BEGIN
      WITH BusUnit DO BEGIN
        IF ("Starting Date" <> 0D) OR ("Ending Date" <> 0D) THEN BEGIN
          TESTFIELD("Starting Date");
          TESTFIELD("Ending Date");
          IF "Starting Date" > "Ending Date" THEN
            ERROR(
              Text032,FIELDCAPTION("Starting Date"),
              FIELDCAPTION("Ending Date"),"Company Name");

          AccountingPeriod.RESET;
          AccountingPeriod.CHANGECOMPANY("Company Name");
          IF NOT AccountingPeriod.GET("Starting Date") THEN
            ERROR(
              Text031,
               FIELDCAPTION("Starting Date"),"Starting Date",TABLECAPTION,Code,"Company Name")
          ELSE BEGIN
            IF NOT AccountingPeriod."New Fiscal Year" THEN
              ERROR(
               Text031,
                FIELDCAPTION("Starting Date"),"Starting Date",TABLECAPTION,Code,"Company Name")
          END;

          IF NOT AccountingPeriod.GET("Ending Date" + 1) THEN
            ERROR(
              Text031,
               FIELDCAPTION("Ending Date"),"Ending Date",TABLECAPTION,Code,"Company Name")
          ELSE BEGIN
            IF NOT AccountingPeriod."New Fiscal Year" THEN
              ERROR(
               Text031,
                FIELDCAPTION("Ending Date"),"Ending Date",TABLECAPTION,Code,"Company Name")
          END;
        END;
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}
