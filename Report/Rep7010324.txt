OBJECT Report 7010324 Parte de trabajo INVISA
{
  OBJECT-PROPERTIES
  {
    Date=06/05/15;
    Time=12:50:34;
    Modified=Yes;
    Version List=TRANSFER,INV;
  }
  PROPERTIES
  {
    CaptionML=ESP=Parte de trabajo INVISA;
    TopMargin=500;
    BottomMargin=0;
    LeftMargin=500;
    OnInitReport=BEGIN
                   rPar.FIND('-');

                   wOrden := wOrden::"Hora Recogida"; // AJF 28/08/09
                 END;

    Orientation=Portrait;
    VertGrid=150;
  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table7010360;
        DataItemTableView=SORTING(Fecha,N§ Vehiculo,Dia siguiente,Hora inicio,Cod Conductor);
        NewPagePerRecord=No;
        OnPreDataItem=VAR
                        FALTA_FECHA@1100244000 : TextConst 'ESP=Falta especificar la fecha.';
                        FALTA_TIPOSERVICIO@1100244001 : TextConst 'ESP=Falta especificar el tipo de servicio.';
                        rPar@1100244002 : Record 7010311;
                        FALTA_CODSERVICIO@1100244003 : TextConst 'ESP=Falta especificar el c¢digo de servicio.';
                        rParte@1103350000 : Record 7010360;
                      BEGIN
                        //+$001
                        rCompanyInfo.FINDFIRST;
                        wDireccion := rCompanyInfo.Address + ' - ' + rCompanyInfo."Post Code" + ' (' + rCompanyInfo.City + ')';

                        rPar.FINDFIRST;

                        vCodigoEntradas := rPar."Codigo Entradas";

                        vNPartes := 0;
                      END;

        OnAfterGetRecord=VAR
                           rCli@1100244000 : Record 18;
                           rPR@1100244001 : Record 7010315;
                           rTS@1100244002 : Record 7010319;
                           rCS@1100244003 : Record 7010320;
                           rSP@1100244004 : Record 7010359;
                           lrParte2@1103355002 : Record 7010360;
                           wDiaSem@1103350000 : ',Lunes,Martes,Miercoles,Jueves,Viernes,Sabado,Domingo';
                           lwMostrar@1103355000 : Boolean;
                           lwTotalPax@1103355001 : Decimal;
                           lwFecha2@1103355003 : Date;
                         BEGIN

                           lwMostrar := TRUE;
                           lwTotalPax := "Adultos transportados" + "Ni¤os transportados";
                           IF (wFiltroPaxMax <> 0) AND (lwTotalPax > wFiltroPaxMax) THEN
                             lwMostrar := FALSE;

                           IF (wFiltroPaxMin <> 0) AND (lwTotalPax < wFiltroPaxMin) THEN
                             lwMostrar := FALSE;

                           IF wConResctr THEN
                             lwMostrar := lwMostrar AND TieneRestriccionHPax(Parte, lwTotalPax);

                           IF NOT lwMostrar THEN
                             CurrReport.SKIP;

                           vNPartes+=1;
                           IF vNPartes > 1 THEN
                             CurrReport.NEWPAGE;

                           vHoraEntrada  := 0T;
                           vHoraOtros    := 0T;
                           vVuelos       := '';
                           vCliente      := '';
                           vNIF          := '';
                           vTTOO         := '';
                           vTipoServicio := '';
                           vCodServicio  := '';
                           vTotalTrans   := 0;
                           vOrigenDestino:='';

                           //Si no hay regs. en servicios-partes, pasamos de el.
                           rSP.RESET;
                           rSP.SETCURRENTKEY("N§ Parte");
                           rSP.SETRANGE("N§ Parte","N§ Parte");
                           IF NOT rSP.FIND('-') THEN
                             CurrReport.SKIP;

                           vCliente       := Cliente;
                           IF rCli.GET(Cliente) THEN BEGIN
                             vCliente := rCli.Name;
                             vNIF     := rCli."VAT Registration No.";
                           END;

                           vTTOO:=ObtenerTTOOs("N§ Parte");

                           vOrigenDestino := "Origen/Destino";
                           IF rPR.GET("Origen/Destino") THEN
                             vOrigenDestino:=rPR.Descripci¢n;

                           vTipoServicio := "Tipo Servicio";
                           IF rTS.GET("Tipo Servicio") THEN
                             vTipoServicio:=rTS.Descripcion;

                           vCodServicio   := "Codigo Servicio";
                           IF rCS.GET("Codigo Servicio") THEN
                             vCodServicio:=rCS.Descripcion;

                           //Veremos si se ha creado el coste-ingreso (est  confirmado)
                           TestCosteIngreso;

                           CALCFIELDS("Adultos transportados","Ni¤os transportados");

                           vTotalTrans := "Adultos transportados" + "Ni¤os transportados";

                           vVuelos     := ObtenerVuelos(Parte);

                           IF (NOT CurrReport.PREVIEW) AND (NOT Impreso) THEN BEGIN
                             rParte := Parte;
                             rParte.Impreso := TRUE;
                             rParte.MODIFY;
                           END;

                           CLEAR(wTotalLineas);
                           CLEAR(wTotalPax);
                           CLEAR(rSerPar);

                           // Los servicios repetitivos los cambiamos de orden para que no aparezcan las lineas con hora en blanco primero

                           // AJS 07.06.2005
                           // Voy a incluir un control para que si hay alguna linea sin hora las lineas se ordenen por "N§ Linea"

                           //IF Parte."No Servicio Repetitivo"=0 THEN
                           //  rSerPar.SETCURRENTKEY("N§ Parte","Hora recogida",Letra)
                           //ELSE
                           //  rSerPar.SETCURRENTKEY("N§ Parte","N§ Linea");
                           //rSerPar.SETRANGE("N§ Parte", "N§ Parte");

                           // JPT 14/06/05 Incluyo opcion manual

                           CASE wOrden OF
                             wOrden::Auto : BEGIN
                               rSerPar.SETCURRENTKEY("N§ Parte",
                                                     "Hora recogida",
                                                     Letra);
                               rSerPar.SETRANGE("N§ Parte", "N§ Parte");
                               rSerPar.SETRANGE("Hora recogida", 0T);
                               IF rSerPar.FIND('-') THEN
                                 rSerPar.SETCURRENTKEY("N§ Parte","N§ Linea");
                               rSerPar.SETRANGE("Hora recogida");
                             END;
                             wOrden::"Hora Recogida": rSerPar.SETCURRENTKEY("N§ Parte","Hora recogida",Letra);
                             wOrden::"Orden Linea"  : rSerPar.SETCURRENTKEY("N§ Parte","N§ Linea");
                           END;
                           rSerPar.SETRANGE("N§ Parte", "N§ Parte");

                           // FIN AJS 07.06.2005

                           wTotalLineas  := rSerPar.COUNT;
                           wVerBmp[1]:= NOT(Parte."Codigo Servicio"= rPar."Codigo Entradas");
                           wVerBmp[2]:= NOT(Parte."Codigo Servicio"= rPar."Codigo Salidas");

                           CLEAR(wTextExcursion);
                           CLEAR(wParteIda); // Si es un parte de recojida, reflejamos el parte de ida
                           CLEAR(wTitParteIda); // Caption Pare ida
                           IF wVerBmp[1] AND wVerBmp[2] THEN BEGIN // Si es Excursion
                             wTextExcursion := Text0002;
                             // AJF 09/10/08
                             // Para las recogidas ya nos va bien el origen/destino.
                             IF "Origen creacion" <> "Origen creacion"::"Recogida Automatica" THEN
                               vOrigenDestino := vCodServicio;
                             CLEAR(lrParte2);
                             lrParte2.SETCURRENTKEY(Fecha,"Dia siguiente","Hora inicio");
                             lrParte2.SETRANGE(Fecha, Fecha-1, Fecha);
                             lrParte2.SETRANGE("Recogida Generada", "N§ Parte");
                             IF lrParte2.FIND('-') THEN BEGIN
                               wParteIda    := lrParte2."N§ Parte";
                               wTitParteIda := Text0003;
                             END;
                           END;

                           Parte.CALCFIELDS("Adultos transportados","Ni¤os transportados");
                           wTotalPax[1] := Parte."Adultos transportados";
                           wTotalPax[2] := Parte."Ni¤os transportados";

                           // JPT 14/07/09
                           IF Parte."Dia siguiente" THEN BEGIN
                             lwFecha2 := Fecha + 1;
                             wTextoFecha := STRSUBSTNO('%1-%2 (%3/%4)', DATE2DMY(Fecha,1), lwFecha2,
                                                       UPPERCASE(FORMAT(Fecha,3,'<Weekday Text>')), UPPERCASE(FORMAT(lwFecha2,3,'<Weekday Text>')));
                           END
                           ELSE
                             wTextoFecha := STRSUBSTNO('%1 (%2)',Fecha, FORMAT(Fecha,0,'<Weekday Text>'));

                           {
                           wDiaSem:= DATE2DWY(Fecha,1);
                           wTextoFecha := STRSUBSTNO('%1 (%2)',Fecha,wDiaSem);
                           }

                           {
                           IF vFltOrden = vFltOrden::"Hora Vuelo+Orden hotel" THEN
                             rSerPar.SETCURRENTKEY("N§ Parte", "Hora Vuelo", "Orden Hotel en zona");

                           IF vFltOrden = vFltOrden::"Hora recogida+Letra" THEN
                             rSerPar.SETCURRENTKEY("N§ Parte", "Hora recogida", Letra);
                           }

                           // AJF 19/03/08 - DRF IBZ 07002
                           // Imprimimos los letreros si est  indicado en el parte.

                           IF (NOT CurrReport.PREVIEW) AND (NOT wDesdeMascara) THEN
                           BEGIN
                             IF (EXISTS("Peticion Servicio Cliente")) AND (Parte."Imprimir peticion servicio") THEN
                               cFunBas.ImprimeDocumento("Peticion Servicio Cliente");
                           END;
                         END;

        ReqFilterFields=N§ Parte,Garaje,Fecha,Cliente,Codigo Servicio,Tipo Servicio,N§ Vehiculo,Vehiculo,Cod Conductor,Tipo Vehiculo;
        CalcFields=Adultos transportados,Ni¤os transportados;
      }
      SECTIONS
      {
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number)
                          WHERE(Number=FILTER(>0));
        MaxIteration=1;
        DataItemVarName=VUELTAS;
      }
      SECTIONS
      {
      }
       }
    { PROPERTIES
      {
        DataItemIndent=2;
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number);
        DataItemVarName=Lineas;
        OnPreDataItem=BEGIN

                        wSiguiente := rSerPar.FIND('-');
                      END;

        OnAfterGetRecord=VAR
                           rPR@1103350000 : Record 7010315;
                           lwTextDoc@1103355000 : ARRAY [5] OF Text[250];
                         BEGIN

                           IF wSiguiente THEN
                           BEGIN
                             vPuntoRecogida   := rSerPar."Punto recogida";

                             IF rPR.GET(rSerPar."Punto recogida") THEN
                               vPuntoRecogida := rPR.Descripci¢n;

                             rSerPar2   := rSerPar; // rSerPar2 es para la impresion
                             wSiguiente := rSerPar.NEXT <> 0;

                             // AJF 19/03/08 Lanzamos la Impresi¢n de documentos descriptivos
                             IF (NOT CurrReport.PREVIEW) AND (NOT wDesdeMascara) THEN
                             BEGIN
                                IF VUELTAS.Number = 1 THEN
                                BEGIN // Solo lo imprimimos una vez por parte
                                 CLEAR(lwTextDoc);
                                 lwTextDoc[1] := TextoDoc;
                                 IF rSerPar2."Imprimir Documento Descriptivo" THEN
                                     rPR.ImprimeDocumentoDescriptivo(lwTextDoc);
                               END;
                             END;
                           END
                           ELSE
                             CurrReport.BREAK;
                         END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Header;
            SectionWidth=19800;
            SectionHeight=6300;
          }
          CONTROLS
          {
            { 49  ;TextBox      ;2100 ;2100 ;7650 ;423  ;HorzAlign=Left;
                                                         FontSize=10;
                                                         SourceExpr=wTextoFecha }
            { 6   ;TextBox      ;2100 ;2700 ;7650 ;423  ;HorzAlign=Left;
                                                         FontSize=10;
                                                         SourceExpr=vCliente }
            { 7   ;TextBox      ;2100 ;3300 ;11100;423  ;HorzAlign=Left;
                                                         FontSize=10;
                                                         SourceExpr=vTTOO }
            { 15  ;TextBox      ;2100 ;3900 ;11100;423  ;HorzAlign=Left;
                                                         FontSize=10;
                                                         SourceExpr=vOrigenDestino }
            { 8   ;TextBox      ;3300 ;4500 ;9900 ;900  ;HorzAlign=Left;
                                                         VertAlign=Top;
                                                         FontSize=10;
                                                         MultiLine=Yes;
                                                         SourceExpr=vVuelos }
            { 51  ;TextBox      ;2100 ;4500 ;1050 ;423  ;HorzAlign=Left;
                                                         FontSize=10;
                                                         SourceExpr=FORMAT(vHoraOtros,5) }
            { 19  ;TextBox      ;2100 ;5400 ;11100;423  ;HorzAlign=Left;
                                                         FontSize=10;
                                                         SourceExpr=Parte.Observaciones }
            { 9   ;TextBox      ;15450;5223 ;4350 ;423  ;HorzAlign=Left;
                                                         FontSize=10;
                                                         SourceExpr=Parte.Letreros }
            { 12  ;TextBox      ;15600;2823 ;4200 ;450  ;FontSize=10;
                                                         FontBold=No;
                                                         SourceExpr=Parte."N§ Parte" }
            { 4   ;TextBox      ;15450;4023 ;1800 ;423  ;HorzAlign=Left;
                                                         FontSize=15;
                                                         SourceExpr=Parte."N§ Vehiculo" }
            { 5   ;TextBox      ;15450;4623 ;4350 ;423  ;HorzAlign=Left;
                                                         FontSize=15;
                                                         SourceExpr=Parte.Conductor }
            { 1103350000;TextBox;2100 ;5850 ;11100;423  ;HorzAlign=Left;
                                                         FontSize=10;
                                                         SourceExpr=Parte.Guia }
            { 1103350007;Label  ;0    ;2100 ;2100 ;423  ;FontSize=10;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=Fecha: }
            { 1103350008;Label  ;0    ;2700 ;2100 ;423  ;FontSize=10;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=Agencia: }
            { 1103350014;Label  ;0    ;3300 ;2100 ;423  ;FontSize=10;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=Ttoo: }
            { 1103350015;Label  ;0    ;3900 ;2100 ;423  ;FontSize=10;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=Orig/Dest }
            { 1103350016;Label  ;0    ;4500 ;2100 ;423  ;FontSize=10;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=Vuelos: }
            { 1103350017;Label  ;0    ;5400 ;2100 ;423  ;FontSize=10;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=Obsv.: }
            { 1103350018;Label  ;13650;5223 ;1800 ;423  ;FontSize=10;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=Letreros: }
            { 1103350019;Label  ;13650;2823 ;1800 ;423  ;FontSize=10;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=Parte N§: }
            { 1103350020;Label  ;13650;4023 ;1800 ;423  ;FontSize=10;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=Bus: }
            { 1103350021;Label  ;13650;4623 ;1800 ;423  ;FontSize=10;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=Cond: }
            { 1103350022;Label  ;0    ;5850 ;2100 ;423  ;FontSize=10;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=Guia: }
            { 1103350040;TextBox;15450;3423 ;2850 ;423  ;FontSize=15;
                                                         FontBold=Yes;
                                                         SourceExpr=FORMAT(vHoraEntrada,5) }
            { 1103350041;Label  ;13650;3423 ;1800 ;423  ;FontSize=10;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=Hora Ini: }
            { 1103355004;PictureBox;15000;150;4800;1200 ;Name=Entrada1;
                                                         BitmapList=C:\Clientes\INVISA\BmpEntrada.bmp;
                                                         SourceExpr=wVerBmp[1] }
            { 1103355005;PictureBox;15000;150;4800;1200 ;Name=Salida1;
                                                         BitmapList=C:\Clientes\INVISA\BmpSalida2.bmp;
                                                         SourceExpr=wVerBmp[2] }
            { 1103355006;TextBox;15000;150  ;4800 ;1200 ;FontSize=20;
                                                         FontBold=Yes;
                                                         SourceExpr=wTextExcursion }
            { 1103355007;TextBox;9900 ;2700 ;3600 ;423  ;HorzAlign=Left;
                                                         FontSize=10;
                                                         SourceExpr=vNIF }
            { 1103355010;TextBox;15450;5823 ;4350 ;450  ;HorzAlign=Left;
                                                         FontSize=10;
                                                         SourceExpr=wParteIda }
            { 1103355011;TextBox;13650;5823 ;1800 ;450  ;HorzAlign=Left;
                                                         FontSize=10;
                                                         FontBold=Yes;
                                                         SourceExpr=wTitParteIda }
            { 1100217000;TextBox;0    ;0    ;10800;600  ;HorzAlign=Left;
                                                         FontSize=16;
                                                         FontBold=Yes;
                                                         SourceExpr=rCompanyInfo.Name }
            { 1100217001;TextBox;0    ;600  ;12150;423  ;HorzAlign=Left;
                                                         FontSize=12;
                                                         FontBold=Yes;
                                                         SourceExpr=rCompanyInfo."Home Page" + ' - Tel: ' + rCompanyInfo."Phone No." }
            { 1000000000;TextBox;0    ;1029 ;14400;423  ;HorzAlign=Left;
                                                         FontSize=12;
                                                         FontBold=Yes;
                                                         SourceExpr=wDireccion }
            { 1000000001;TextBox;0    ;1500 ;3921 ;423  ;HorzAlign=Left;
                                                         FontSize=12;
                                                         FontBold=Yes;
                                                         SourceExpr=rCompanyInfo."VAT Registration No." }
            { 1000000002;TextBox;17400;4023 ;2400 ;450  ;FontSize=9;
                                                         FontBold=No;
                                                         SourceExpr=Parte.Vehiculo }
          }
           }
        { PROPERTIES
          {
            SectionType=Header;
            SectionWidth=19800;
            SectionHeight=423;
          }
          CONTROLS
          {
            { 1103350003;Shape  ;0    ;0    ;19800;423   }
            { 1103350023;Label  ;8550 ;0    ;1350 ;423  ;HorzAlign=Center;
                                                         FontSize=10;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=AD }
            { 1103350024;Label  ;10350;0    ;1350 ;423  ;HorzAlign=Center;
                                                         FontSize=10;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=NI }
            { 1103350025;Shape  ;8550 ;0    ;1800 ;423   }
            { 1103350026;Label  ;11700;0    ;1500 ;423  ;ParentControl=3;
                                                         HorzAlign=Center;
                                                         FontSize=10;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=HORA }
            { 1103350027;Shape  ;10350;0    ;1350 ;423   }
            { 1103350029;Label  ;0    ;0    ;8550 ;423  ;HorzAlign=Center;
                                                         FontSize=10;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=HOTELES }
            { 1103350030;Label  ;13200;0    ;6600 ;423  ;HorzAlign=Center;
                                                         FontSize=10;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=OBSERVACIONES }
            { 1103350031;Shape  ;11700;0    ;1500 ;423   }
          }
           }
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=19800;
            SectionHeight=450;
          }
          CONTROLS
          {
            { 50  ;TextBox      ;8550 ;0    ;1800 ;423  ;HorzAlign=Center;
                                                         FontSize=9;
                                                         DecimalPlaces=0:2;
                                                         BlankZero=Yes;
                                                         SourceExpr=rSerPar2."Adultos transportados" }
            { 1103350005;Shape  ;900  ;0    ;18900;423  ;ShapeStyle=VertLine }
            { 11  ;TextBox      ;0    ;0    ;5850 ;423  ;FontSize=9;
                                                         SourceExpr=vPuntoRecogida }
            { 52  ;TextBox      ;10350;0    ;1350 ;423  ;HorzAlign=Center;
                                                         FontSize=9;
                                                         DecimalPlaces=0:2;
                                                         BlankZero=Yes;
                                                         SourceExpr=rSerPar2."Ni¤os transportados" }
            { 3   ;TextBox      ;11850;0    ;1200 ;423  ;FontSize=9;
                                                         SourceExpr=COPYSTR(FORMAT(rSerPar2."Hora recogida"),1,5) }
            { 20  ;TextBox      ;13350;0    ;6450 ;423  ;FontSize=9;
                                                         SourceExpr=rSerPar2."Nombre Cliente" + ' ' + rSerPar2.Observaciones }
            { 1100217002;TextBox;6000 ;0    ;2400 ;423  ;FontSize=9;
                                                         SourceExpr=rSerPar2.Touroperador }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table7010435;
        DataItemTableView=SORTING(N§ Parte,No);
        DataItemVarName=diAnotaciones;
        DataItemLink=N§ Parte=FIELD(N§ Parte);
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=19800;
            SectionHeight=450;
          }
          CONTROLS
          {
            { 1100217003;TextBox;450  ;0    ;16800;450  ;FontSize=9;
                                                         SourceExpr=Texto }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number)
                          WHERE(Number=CONST(1));
        DataItemVarName=diPieParte;
        OnAfterGetRecord=BEGIN
                           IF (NOT CurrReport.PREVIEW) AND (NOT wDesdeMascara) THEN
                             Parte.ImprimeLetrero(FALSE, FALSE);
                         END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=19800;
            SectionHeight=1269;
          }
          CONTROLS
          {
            { 1103350038;Shape  ;10200;0    ;3150 ;1269 ;ShapeStyle=VertLine }
            { 1103350037;Shape  ;6900 ;0    ;3150 ;1269 ;ShapeStyle=VertLine }
            { 1103350004;Shape  ;0    ;0    ;19800;1269  }
            { 1103350006;Shape  ;750  ;0    ;19050;1269 ;ShapeStyle=VertLine }
            { 1103350001;TextBox;8550 ;750  ;1350 ;423  ;HorzAlign=Center;
                                                         FontSize=9;
                                                         DecimalPlaces=0:2;
                                                         SourceExpr=wTotalPax[1] }
            { 1103350002;TextBox;10350;750  ;1350 ;423  ;HorzAlign=Center;
                                                         FontSize=9;
                                                         DecimalPlaces=0:2;
                                                         SourceExpr=wTotalPax[2] }
            { 1103350033;Label  ;6600 ;750  ;1650 ;423  ;HorzAlign=Right;
                                                         FontSize=10;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=TOTAL: }
            { 1100217004;Label  ;12150;750  ;2550 ;423  ;HorzAlign=Right;
                                                         FontSize=10;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=TOTAL PAXES: }
            { 1100217005;TextBox;14850;750  ;1350 ;423  ;HorzAlign=Center;
                                                         FontSize=9;
                                                         DecimalPlaces=0:2;
                                                         SourceExpr=wTotalPax[1] + wTotalPax[2] }
          }
           }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=9680;
      Height=3630;
      OnOpenForm=VAR
                   rTS@1100244000 : Record 7010319;
                   cFunBas@1100244001 : Codeunit 7010310;
                   ORDEN_LISTADO@1100244002 : TextConst 'ESP=Hay que especificar el orden de los listados para los tipos de servicio';
                   rParte@1103350000 : Record 7010360;
                 BEGIN

                   {
                   vFltFecha   := TODAY + 1;
                   vFltGaraje  := cFunBas.ObtenerGaraje();

                   //Caso de que el garaje sea todos, habr¡a quiz s que sugerir uno.
                   IF vFltGaraje<>'' THEN
                     RequestOptionsForm.FltGaraje.EDITABLE := FALSE;
                   }
                   //CHAPUCILLA. PARA QUE SALGA EL TRANSFER COMO VALOR POR DEFECTO.
                   rTS.RESET;
                   rTS.SETRANGE("Orden Listado",1);
                   IF rTS.FIND('-') THEN
                     vFltTipoServ := rTS.Codigo;

                   vFltOrden := vFltOrden::Ninguno;
                 END;

    }
    CONTROLS
    {
      { 1103350001;TextBox;2310 ;220  ;2640 ;440  ;CaptionML=ESP=Orden;
                                                   SourceExpr=wOrden }
      { 1103350002;Label  ;220  ;220  ;1980 ;440  ;ParentControl=1103350001 }
      { 1103355000;TextBox;3630 ;1430 ;1700 ;440  ;CaptionML=ESP=Pax Maximo;
                                                   DecimalPlaces=0:2;
                                                   SourceExpr=wFiltroPaxMax }
      { 1103355001;Label  ;220  ;1430 ;3300 ;440  ;ParentControl=1103355000 }
      { 1103355002;CheckBox;4950;1980 ;440  ;440  ;ShowCaption=No;
                                                   CaptionML=ESP=Mostrar solo con restricciones pax;
                                                   SourceExpr=wConResctr }
      { 1103355003;Label  ;220  ;1980 ;4620 ;440  ;ParentControl=1103355002 }
      { 1103355004;TextBox;3630 ;880  ;1700 ;440  ;CaptionML=ESP=Pax M¡nimo;
                                                   DecimalPlaces=0:2;
                                                   SourceExpr=wFiltroPaxMin }
      { 1103355005;Label  ;220  ;880  ;3300 ;440  ;ParentControl=1103355004 }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      rParte@1103350010 : Record 7010360;
      rDiv@1100244000 : Record 4;
      rPar@1100244001 : Record 7010311;
      rSerPar@1103350000 : Record 7010359;
      rSerPar2@1103350003 : Record 7010359;
      rCompanyInfo@1100217000 : Record 79;
      cFunBas@1100217001 : Codeunit 7010310;
      vCodigoEntradas@1100244002 : Code[10];
      vFltGaraje@1100244003 : Code[10];
      vFltTipoServ@1100244004 : Code[10];
      vFltCodServ@1100244005 : Code[10];
      vFltFecha@1100244006 : Date;
      vFltConductor@1100244007 : Code[10];
      vFltParte@1100244008 : Code[10];
      vFltNomAbr@1100244009 : Code[20];
      vFltCliente@1100244010 : Code[20];
      vFltTTOO@1100244011 : Code[10];
      wParteIda@1103355009 : Code[10];
      vFltOrden@1100244012 : 'Ninguno,Hora Vuelo+Orden hotel,Hora recogida+Letra';
      vCliente@1100244013 : Text[250];
      vTTOO@1100244014 : Text[250];
      vTotalInvitados@1100244015 : Integer;
      vImporte@1100244016 : Decimal;
      vSuplemento@1100244017 : Decimal;
      vPuntoRecogida@1100244018 : Text[60];
      wFiltroPaxMax@1103355005 : Decimal;
      wFiltroPaxMin@1103355007 : Decimal;
      vOrigenDestino@1100244019 : Text[60];
      vCodServicio@1100244020 : Text[30];
      vTipoServicio@1100244021 : Text[30];
      wTitParteIda@1103355010 : Text[30];
      aDatos@1100244022 : ARRAY [10,4] OF Code[10];
      aDatosAux@1100244023 : ARRAY [10,3] OF Decimal;
      vTotalTrans@1100244024 : Decimal;
      vVuelos@1100244025 : Text[250];
      vSoloNoImpresas@1100244026 : Boolean;
      vHoraOtros@1100244027 : Time;
      vHoraEntrada@1100244028 : Time;
      vNPartes@1100244029 : Integer;
      wTotalLineas@1103350001 : Integer;
      wSiguiente@1103350002 : Boolean;
      wTotalPax@1103350004 : ARRAY [2] OF Decimal;
      wVerBmp@1103350005 : ARRAY [2] OF Boolean;
      wTextExcursion@1103350008 : Text[30];
      Text0002@1103350009 : TextConst 'ESP=EXCURSION';
      wOrden@1103350011 : 'Auto,Hora Recogida,Orden Linea';
      wTextoFecha@1103350012 : Text[100];
      Text0003@1103355011 : TextConst 'ESP=Parte Ida:';
      Text009@1103355004 : TextConst 'ESP="%1 N§:%2    H.Ini:%3   Pax: %4   "';
      wConResctr@1103355006 : Boolean;
      vNIF@1103355008 : Text[20];
      wDesdeMascara@1100217002 : Boolean;
      wDireccion@1000000000 : Text[250];

    PROCEDURE ObtenerTTOOs@9(pParte@1100244000 : Code[10]) : Text[250];
    VAR
      rServParte@1103350000 : Record 7010359;
      rTTOO@1100244001 : Record 7010312;
      Result@1100244003 : Text[250];
      aTTOO@1100244004 : ARRAY [25] OF Code[10];
      vNumTTOO@1100244005 : Integer;
      vContador@1100244006 : Integer;
      vEncontrado@1100244007 : Boolean;
      vDescri@1100244008 : Text[50];
    BEGIN
      //ObtenerTTOOs.
      vNumTTOO := 0;
      Result   := '';

      CLEAR(aTTOO);

      //De paso obtendremos los invitados.
      vTotalInvitados := 0;

      rServParte.RESET;
      rServParte.SETCURRENTKEY("N§ Parte");
      rServParte.SETRANGE("N§ Parte", pParte);
      IF rServParte.FIND('-') THEN REPEAT

        //Buscamos el touroperador, a ver si ya lo hemos puesto en el string.
        vContador   := 1;
        vEncontrado := FALSE;
        WHILE (vContador<=vNumTTOO) AND (NOT vEncontrado) DO BEGIN
          IF aTTOO[vContador] = rServParte.Touroperador THEN
            vEncontrado := TRUE;
          vContador += 1;
        END;

        IF NOT vEncontrado THEN BEGIN
          vNumTTOO := vNumTTOO + 1;

          aTTOO[vNumTTOO] := rServParte.Touroperador;
          IF rTTOO.GET(rServParte.Touroperador) THEN
            vDescri := rTTOO.Nombre;

          IF Result <> '' THEN
            Result += ',';

          Result += vDescri;

        END;

        vTotalInvitados := vTotalInvitados + rServParte."Adultos invitados ingreso" +
                           rServParte."Ni¤os invitados ingreso" +
                           rServParte."Adultos invitados coste" +
                           rServParte."Ni¤os invitados coste";

      UNTIL rServParte.NEXT=0;
      EXIT(Result);
    END;

    PROCEDURE TestCosteIngreso@1();
    VAR
      rCI@1100244000 : Record 7010414;
      vChar@1100244001 : Text[2];
      i@1100244002 : Integer;
    BEGIN
      //TestCosteIngreso
      //Miramos si al parte se le han calculado los coste-ingreso (si esta confirmado).
      //En caso afirmativo obtendremos los importes, suplementos, pax. transportado, facturado, ...

      vImporte      := 0;
      vSuplemento   := 0;

      CLEAR(aDatos);
      CLEAR(aDatosAux);
      rCI.RESET;
      rCI.SETCURRENTKEY("N§ Parte","N§ Linea");
      rCI.SETRANGE("N§ Parte",Parte."N§ Parte");
      IF rCI.FIND('-') THEN BEGIN
        CLEAR(rDiv);
        IF rDiv.GET(rCI."Cod. Divisa") THEN ;
        REPEAT
          IF (rCI."Tipo linea" = rCI."Tipo linea"::Base) OR
             (rCI."Tipo linea" = rCI."Tipo linea"::Manual) THEN BEGIN
            Act_ZonaPrecio(rCI);
            vImporte += rCI."Importe con impuesto";
          END
          ELSE

            // ----  Lo ponemos como suplemento  ----

            vSuplemento += vSuplemento + rCI."Importe con impuesto";
        UNTIL rCI.NEXT = 0;

      END;
    END;

    PROCEDURE Act_ZonaPrecio@2(rCI@1100244000 : Record 7010414);
    VAR
      ANOMALIA@1100244001 : TextConst 'ESP=La Matriz aDatos debe ampliarse. Dirijase a su Administrador.';
      vPosicion@1100244002 : Integer;
      vContador@1100244003 : Integer;
      aux2@1100244004 : Decimal;
      aux3@1100244005 : Decimal;
      aux4@1100244006 : Decimal;
    BEGIN
      //Act_ZonaPrecio(rCI)
      vPosicion := 0;
      vContador := 0;

      REPEAT

        vContador := vContador + 1;
        IF ( aDatos[vContador,1] = '' ) OR ( aDatos[vContador,1] = rCI."Zona Precios") THEN
          vPosicion := vContador;

      UNTIL (vPosicion <> 0) OR (vContador=10);

      IF vPosicion > 0 THEN BEGIN

        aDatosAux[vPosicion,1] += rCI."Pax Transportados";
        aDatosAux[vPosicion,2] += rCI."Pax Facturados";
        aDatosAux[vPosicion,3] += rCI."Importe con impuesto";

        aDatos[vPosicion,1]   := rCI."Zona Precios";
        aDatos[vPosicion,2]   := FORMAT(aDatosAux[vPosicion,1]);
        aDatos[vPosicion,3]   := FORMAT(aDatosAux[vPosicion,2]);
        aDatos[vPosicion,4]   := FORMAT(aDatosAux[vPosicion,3]);
      END
      ELSE
        MESSAGE(ANOMALIA);
    END;

    PROCEDURE ObtenerVuelos@3(rParte@1100244000 : Record 7010360) : Text[250];
    VAR
      rSP@1100244001 : Record 7010359;
      vAuxVuelo@1100244002 : Text[60];
      vAuxIATA@1100244003 : Text[60];
      vAuxIATAaNT@1103355000 : Text[60];
      i@1100244004 : Integer;
      vResult@1100244005 : Text[250];
      wAux@1103355001 : Text[250];
      vComasIATA@1100244006 : Integer;
      vComasVuelo@1100244007 : Integer;
      vHora@1100244008 : Time;
      vNVuelo@1100244009 : Text[200];
      vHoraMin@1100244010 : Time;
      vHoraMax@1100244011 : Time;
    BEGIN
      vResult := '';
      vHora   := 0T;
      vHoraMin:= 0T;
      vHoraMax:= 0T;

      rSP.RESET;
      rSP.SETCURRENTKEY("N§ Parte");
      rSP.SETRANGE("N§ Parte", rParte."N§ Parte");
      IF rSP.FIND('-') THEN REPEAT

        vAuxVuelo := CONVERTSTR(rSP.Vuelo,'/',',');
        vAuxIATA  := CONVERTSTR(rSP.IATA,'/',',');
        vComasVuelo := ContaComas(vAuxVuelo);
        vComasIATA  := ContaComas(vAuxIATA);

        // AJS 02.06.2009
        // Solicitan eliminar el control de vuelos o IATAS repetidos

        //FOR i:=1 TO vComasVuelo DO BEGIN

        //  vNVuelo := SELECTSTR(i,vAuxVuelo);
        //  IF i<=vComasIATA THEN
        //    vNVuelo+=' '+SELECTSTR(i,vAuxIATA);

        //  // Miramos de no repetirlo.
        //  IF STRPOS(vResult,vNVuelo) = 0 THEN
        //    vResult += ', '+vNVuelo;

        //END;

        // AJS 03.06.2009

        // JPT 25/06/10 Cambio para insertar todos los vuelos
        IF vAuxVuelo <> '' THEN BEGIN
          IF STRPOS(vResult, vAuxVuelo)=0 THEN BEGIN
            wAux := vAuxVuelo;
            IF vAuxIATAaNT <> vAuxIATA THEN
              wAux += ' ' + vAuxIATA;
            wAux += ', ';
            IF (STRLEN(vResult) + STRLEN(wAux) < MAXSTRLEN(vResult)) THEN
            vResult   += wAux;
          END;
        END;

        vAuxIATAaNT := vAuxIATA;

        //Calculo de la hora del vuelo.

        IF rSP."Hora Vuelo" <> 0T THEN
          IF vHoraMin = 0T THEN
            vHoraMin := rSP."Hora Vuelo"
          ELSE BEGIN
            IF vHoraMin > rSP."Hora Vuelo" THEN
              vHoraMin := rSP."Hora Vuelo";
          END;


        IF rSP."Hora Vuelo" <> 0T THEN
          IF vHoraMax = 0T THEN
            vHoraMax := rSP."Hora Vuelo"
          ELSE BEGIN
            IF vHoraMax < rSP."Hora Vuelo" THEN
              vHoraMax := rSP."Hora Vuelo";
          END;

      UNTIL rSP.NEXT = 0;

      IF (vHoraMax <> 0T) AND (vHoraMin <> 0T) THEN BEGIN
        IF (vHoraMax - vHoraMin) > (12 * 60 * 60 * 1000) THEN
          //Si la diferencia entre vHMax y vHMax es superior a 12H interpretaremos que la Hora
          //minima obtenida corresponde al d¡a siguiente, por tanto consideraremos la hora m xima.
          vHora := vHoraMax
        ELSE
          vHora := vHoraMin;
      END;

      IF (rParte."Codigo Servicio" = vCodigoEntradas) THEN BEGIN
        vHoraEntrada := vHora;
        vHoraOtros   := 0T;
      END
      ELSE BEGIN

        // AJF 09/10/08
        // Para las recogidas automaticas ense¤amos la hora de inicio.
        IF (rParte."Origen creacion" = rParte."Origen creacion"::"Recogida Automatica") THEN BEGIN
          vHoraEntrada := rParte."Hora inicio";
          vHoraOtros   := 0T;
        END
        ELSE BEGIN
          vHoraEntrada := 0T;
          vHoraOtros   := vHora;
        END;
      END;

      //IF vHora <> 0T THEN
      //  vResult := FORMAT(vHora,5)+' '+COPYSTR(vResult,3)
      //ELSE
      //  vResult := COPYSTR(vResult,3);

      // JPT 24/08/11 Quito la eliminacion de los dos primeros caracteres ya que se quejan que no aparece el vuelo completo
      // vResult := COPYSTR(vResult,3);


      EXIT(vResult);
    END;

    PROCEDURE ContaComas@4(pStr@1100244000 : Text[100]) : Integer;
    VAR
      vResult@1100244001 : Integer;
      Max@1100244002 : Integer;
      i@1100244003 : Integer;
    BEGIN
      vResult:=0;
      Max := STRLEN(pStr);

      IF Max > 0 THEN
        vResult := 1;

      FOR i:=1 TO Max DO BEGIN
        IF COPYSTR(pStr,i,1) = ',' THEN
          vResult += 1;
      END;
      EXIT(vResult)
    END;

    PROCEDURE TextoDoc@1100253008() : Text[250];
    VAR
      lwText@1100253000 : Text[250];
    BEGIN
      // TextoDoc

      Parte.CALCFIELDS("Adultos transportados", "Ni¤os transportados");
      lwText := STRSUBSTNO(Text009, Text0002, Parte."N§ Parte", FORMAT(Parte."Hora inicio",0,'<Hours24>:<Minutes,2>'),
                           Parte."Adultos transportados" + Parte."Ni¤os transportados");

      EXIT(lwText);
    END;

    PROCEDURE TieneRestriccionHPax@1103355006(prParte@1103355002 : Record 7010360;pwPax@1103355000 : Decimal) : Boolean;
    VAR
      lrRestr@1103355001 : Record 7035363;
      lrSerPar@1103355003 : Record 7010359;
      lwOK@1103355004 : Boolean;
      lwTiene@1103355005 : Boolean;
      lwPax@1103355006 : Decimal;
    BEGIN
      // TieneRestriccionHPax
      // Devuelve true si tiene alguna restricci¢n de hotel por pax
      // y adem s est  dentro del rango de la descripci¢n

      CLEAR(lwTiene);
      CLEAR(lrRestr);
      lrRestr.SETCURRENTKEY("Punto Recogida","Plazas desde");

      CLEAR(lrSerPar);
      lrSerPar.SETCURRENTKEY("N§ Parte","Orden zona");
      lrSerPar.SETRANGE("N§ Parte", prParte."N§ Parte");
      IF lrSerPar.FIND('-') THEN BEGIN
        REPEAT
          lrRestr.SETRANGE("Punto Recogida", lrSerPar."Punto recogida");
          lrRestr.SETFILTER("Plazas desde", '<=%1' , pwPax);
          lrRestr.SETFILTER("Plazas hasta", '>=%1|%2' , pwPax,0);
          lwOK := lrRestr.FIND('-');
          lwTiene := lwTiene OR lwOK;
        UNTIL (lrSerPar.NEXT=0) OR lwTiene; // Sale si ha encontrado una restriccion
      END;

      EXIT(lwTiene);
    END;

    PROCEDURE PasaParametros@1100217000(pwDesdeMascara@1100217000 : Boolean);
    BEGIN
      // PasaParametros

      wDesdeMascara := pwDesdeMascara;
    END;

    BEGIN
    {
      ## AJS 02.06.2009

        .- En la rutina ObtenerVuelos elimino la comprobacion de vuelos duplicados por
           peticion del cliente

      ## AJS 03.06.2009

        .- En la rutina ObtenerVuelos habia un error si los vuelos solo estaban rellenados en la
           primera linea

      ## AJF 26/08/09

        .- (09/00426) Cambiada clave de ordenaci¢n de (Fecha,Cod Conductor,Dia siguiente,Hora inicio)
           a (Fecha,N§ Vehiculo,Dia siguiente,Hora inicio,Cod Conductor).
        .- (09/00426) a¤adido campo "N§ Vehiculo" a ReqFilterFields.

      ## AJF 28/08/09

        .- (INC-43591) Cambio el orden otra vez de "Orden linea" a "Hora Recogida", este es el valor x defecto
           seg£n IBZ. se cambi¢ en la incidencia (08/00492).
        .- (INC-43591) Comento el c¢digo que cambiaba de clave en el predata del parte.

      ## AJF 15/07/10
        .- (INC-50545) Reducido el margen entre las dos c¢pias, ya que salia en p ginas distintas dependiendo del caso.

      $001 AJS 25042013 Modificaciones en el formato del parte de trabajo

      $002 AJS 30042013 Ampliar la variable aTTOO a 25 posiciones

      $003 AJS 02052013 La peticion de servicio del cliente solo se imprime si esta marcado el campo "Imprimir peticion servicio"

      $004 AJS 03072013 Mostrar el total de paxes en el pie de pagina

      $005 AJS 25072013 Nueva funcionalidad para que no se impriman los documentos adicionales si el parte se imprime
                        desde la mascara Impresion partes IBIZATOURS

      $006 AJS 04052015 Mostrar la direccion de ibizatours debajo de la pagina web y la matricula del vehiculo

      $007 AJS 06052015 Mostrar el nombre del cliente junto con las observaciones
    }
    END.
  }
  RDLDATA
  {
  }
}
