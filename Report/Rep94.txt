OBJECT Report 94 Close Income Statement
{
  OBJECT-PROPERTIES
  {
    Date=02/10/12;
    Time=12:00:00;
    Modified=Yes;
    Version List=AIC2009,NAVW16.00.01,NAVES6.00;
  }
  PROPERTIES
  {
    Permissions=TableData 17=m;
    CaptionML=[ENU=Close Income Statement;
               ESP=Asiento regularizaci¢n];
    ProcessingOnly=Yes;
    OnPreReport=VAR
                  s@1000 : Text[1024];
                BEGIN
                  IF EndDateReq = 0D THEN
                    ERROR(Text000);
                  ValidateEndDate(TRUE);
                  IF DocNo = '' THEN
                    ERROR(Text001);

                  SelectedDim.GetSelectedDim(USERID,3,REPORT::"Close Income Statement",'',TempSelectedDim);
                  s := CheckDimPostingRules(TempSelectedDim);
                  IF s <> '' THEN
                    IF NOT CONFIRM(s + '\' + Text007,FALSE) THEN
                      ERROR('');

                  GenJnlBatch.GET(GenJnlLine."Journal Template Name",GenJnlLine."Journal Batch Name");
                  SourceCodeSetup.GET;
                  GLSetup.GET;
                  IF GLSetup."Additional Reporting Currency" <> '' THEN BEGIN
                    IF RetainedEarningsGLAcc."No." = '' THEN
                      ERROR(Text002);
                    IF NOT CONFIRM(
                             Text003 +
                             Text005 +
                             Text007,FALSE)
                    THEN
                      ERROR('');
                  END;

                  Window.OPEN(Text008 + Text009 + Text019 + Text010 + Text011);

                  ClosePerGlobalDim1 := FALSE;
                  ClosePerGlobalDim2 := FALSE;
                  ClosePerGlobalDimOnly := TRUE;

                  IF TempSelectedDim.FIND('-') THEN
                    REPEAT
                      IF TempSelectedDim."Dimension Code" = GLSetup."Global Dimension 1 Code" THEN
                        ClosePerGlobalDim1 := TRUE;
                      IF TempSelectedDim."Dimension Code" = GLSetup."Global Dimension 2 Code" THEN
                        ClosePerGlobalDim2 := TRUE;
                      IF (TempSelectedDim."Dimension Code" <> GLSetup."Global Dimension 1 Code") AND
                         (TempSelectedDim."Dimension Code" <> GLSetup."Global Dimension 2 Code")
                      THEN
                        ClosePerGlobalDimOnly := FALSE;
                    UNTIL TempSelectedDim.NEXT = 0;
                END;

    OnPostReport=VAR
                   UpdateAnalysisView@1000 : Codeunit 410;
                 BEGIN
                   InsBalLines;

                   IF NOT GenJnlLine.FIND('-') THEN
                     EXIT;

                   Window.CLOSE;
                   Window.OPEN(
                     Text1100100);

                   NoOfRecords := GenJnlLine.COUNT;
                   Window.UPDATE(1,LineCount);
                   REPEAT
                     GenJnlLine2 := GenJnlLine;
                     LineCount := LineCount + 1;
                     Window.UPDATE(2,ROUND(LineCount / NoOfRecords * 10000,1));
                     TempJnlLineDim.SETFILTER("Journal Line No.",'%1',GenJnlLine2."Line No.");
                     GenJnlPostLine.RunWithCheck(GenJnlLine2,TempJnlLineDim);
                   UNTIL GenJnlLine.NEXT = 0;
                   TempJnlLineDim.DELETEALL; //$001
                   UpdateAnalysisView.UpdateAll(0,TRUE);
                 END;

  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table15;
        DataItemTableView=SORTING(No.)
                          WHERE(Account Type=CONST(Posting),
                                Income/Balance=FILTER(Income Statement|Capital));
        OnPreDataItem=BEGIN
                        NoOfAccounts := "G/L Account".COUNT;
                      END;

        OnAfterGetRecord=BEGIN
                           ThisAccountNo := ThisAccountNo + 1;
                           Window.UPDATE(1,"No.");
                           Window.UPDATE(4,ROUND(ThisAccountNo / NoOfAccounts * 10000,1));
                           Window.UPDATE(2,'');
                           Window.UPDATE(3,0);
                         END;

        OnPostDataItem=BEGIN
                         {IF (TotalAmount <> 0) OR ((TotalAmountAddCurr <> 0) AND (GLSetup."Additional Reporting Currency" <> '')) THEN BEGIN
                           GenJnlLine."Business Unit Code" := '';
                           TempJnlLineDim.DELETEALL;
                           GenJnlLine."Shortcut Dimension 1 Code" := '';
                           GenJnlLine."Shortcut Dimension 2 Code" := '';
                           GenJnlLine."Line No." := GenJnlLine."Line No." + 10000;
                           GenJnlLine."Account No." := RetainedEarningsGLAcc."No.";
                           GenJnlLine."Source Code" := SourceCodeSetup."Close Income Statement";
                           GenJnlLine."Reason Code" := GenJnlBatch."Reason Code";
                           GenJnlLine."Currency Code" := '';
                           GenJnlLine."Additional-Currency Posting" :=
                             GenJnlLine."Additional-Currency Posting"::None;
                           GenJnlLine.VALIDATE(Amount,TotalAmount);
                           GenJnlLine."Source Currency Amount" := TotalAmountAddCurr;
                           HandleGenJnlLine;
                           Window.UPDATE(1,GenJnlLine."Account No.");
                         END;}
                       END;

      }
      SECTIONS
      {
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table17;
        DataItemTableView=SORTING(G/L Account No.,Posting Date);
        OnPreDataItem=BEGIN
                        Window.UPDATE(2,Text013);
                        Window.UPDATE(3,0);

                        IF ClosePerGlobalDimOnly OR ClosePerBusUnit THEN
                          CASE TRUE OF
                            ClosePerBusUnit AND ClosePerGlobalDim1 AND ClosePerGlobalDim2:
                              SETCURRENTKEY(
                                "G/L Account No.","Business Unit Code",
                                "Global Dimension 1 Code","Global Dimension 2 Code","Posting Date");
                            ClosePerBusUnit AND (NOT ClosePerGlobalDim1 AND NOT ClosePerGlobalDim2):
                              SETCURRENTKEY(
                                "G/L Account No.","Business Unit Code","Posting Date");
                            ClosePerGlobalDim1 AND NOT ClosePerBusUnit:
                              SETCURRENTKEY(
                                "G/L Account No.","Global Dimension 1 Code","Global Dimension 2 Code","Posting Date");
                           END;

                        SETRANGE("Posting Date",FiscalYearStartDate,FiscYearClosingDate);

                        MaxEntry := COUNT;

                        EntryNoAmountBuf.DELETEALL;
                        EntryCount := 0;

                        LastWindowUpdate := TIME;
                      END;

        OnAfterGetRecord=VAR
                           TempDimBuf@1000 : TEMPORARY Record 360;
                           TempDimBuf2@1001 : TEMPORARY Record 360;
                           EntryNo@1002 : Integer;
                         BEGIN
                           EntryCount := EntryCount + 1;
                           IF TIME - LastWindowUpdate > 1000 THEN BEGIN
                             LastWindowUpdate := TIME;
                             Window.UPDATE(3,ROUND(EntryCount / MaxEntry * 10000,1));
                           END;

                           IF ClosePerGlobalDimOnly AND (ClosePerBusUnit OR ClosePerGlobalDim1) THEN BEGIN
                             IF ClosePerBusUnit THEN BEGIN
                               SETRANGE("Business Unit Code","Business Unit Code");
                               GenJnlLine."Business Unit Code" := "Business Unit Code";
                             END;
                             IF ClosePerGlobalDim1 THEN BEGIN
                               SETRANGE("Global Dimension 1 Code","Global Dimension 1 Code");
                               IF ClosePerGlobalDim2 THEN
                                 SETRANGE("Global Dimension 2 Code","Global Dimension 2 Code");

                             END;
                             CalcSumsInFilter;
                             EntryNo := "Entry No.";
                             GetGLEntryDimensions(EntryNo,TempDimBuf);
                           END;

                           IF (Amount <> 0) OR ("Additional-Currency Amount" <> 0) THEN BEGIN
                             IF NOT (ClosePerGlobalDimOnly AND (ClosePerBusUnit OR ClosePerGlobalDim1)) THEN BEGIN
                               TotalAmount := TotalAmount + "G/L Entry".Amount;
                               IF GLSetup."Additional Reporting Currency" <> '' THEN
                                 TotalAmountAddCurr := TotalAmountAddCurr + "G/L Entry"."Additional-Currency Amount";

                               GetGLEntryDimensions("G/L Entry"."Entry No.",TempDimBuf);
                             END;

                             TempDimBuf2.DELETEALL;
                             IF TempSelectedDim.FIND('-') THEN
                               REPEAT
                                 IF TempDimBuf.GET(DATABASE::"G/L Entry","G/L Entry"."Entry No.",TempSelectedDim."Dimension Code")
                                 THEN BEGIN
                                   TempDimBuf2."Table ID" := TempDimBuf."Table ID";
                                   TempDimBuf2."Dimension Code" := TempDimBuf."Dimension Code";
                                   TempDimBuf2."Dimension Value Code" := TempDimBuf."Dimension Value Code";
                                   TempDimBuf2.INSERT;
                                 END;
                               UNTIL TempSelectedDim.NEXT = 0;

                             EntryNo := DimBufMgt.GetDimensionId(TempDimBuf2);

                             EntryNoAmountBuf.RESET;
                             IF ClosePerBusUnit AND FIELDACTIVE("Business Unit Code") THEN
                               EntryNoAmountBuf."Business Unit Code" := "Business Unit Code"
                             ELSE
                               EntryNoAmountBuf."Business Unit Code" := '';
                             EntryNoAmountBuf."Entry No." := EntryNo;
                             IF EntryNoAmountBuf.FIND THEN BEGIN
                               EntryNoAmountBuf.Amount := EntryNoAmountBuf.Amount + Amount;
                               EntryNoAmountBuf.Amount2 := EntryNoAmountBuf.Amount2 + "Additional-Currency Amount";
                               EntryNoAmountBuf.MODIFY;
                             END ELSE BEGIN
                               EntryNoAmountBuf.Amount := Amount;
                               EntryNoAmountBuf.Amount2 := "Additional-Currency Amount";
                               EntryNoAmountBuf.INSERT;
                             END;
                           END;

                           IF ClosePerGlobalDimOnly AND (ClosePerBusUnit OR ClosePerGlobalDim1) THEN BEGIN
                             FIND('+');
                             IF FIELDACTIVE("Business Unit Code") THEN
                               SETRANGE("Business Unit Code");
                             IF FIELDACTIVE("Global Dimension 1 Code") THEN BEGIN
                               SETRANGE("Global Dimension 1 Code");
                               IF FIELDACTIVE("Global Dimension 2 Code") THEN
                                 SETRANGE("Global Dimension 2 Code");
                             END
                           END;
                         END;

        OnPostDataItem=VAR
                         TempDimBuf2@1000 : TEMPORARY Record 360;
                       BEGIN
                         GenJnlLine.INIT;
                         GenJnlLine."Posting Date" := FiscYearClosingDate;
                         GenJnlLine."Document No." := DocNo;
                         GenJnlLine.Description := PostingDescription;

                         EntryNoAmountBuf.RESET;
                         MaxEntry := EntryNoAmountBuf.COUNT;
                         EntryCount := 0;
                         Window.UPDATE(2,Text012);
                         Window.UPDATE(3,0);

                         IF EntryNoAmountBuf.FIND('-') THEN
                           REPEAT
                             EntryCount := EntryCount + 1;
                             IF TIME - LastWindowUpdate > 1000 THEN BEGIN
                               LastWindowUpdate := TIME;
                               Window.UPDATE(3,ROUND(EntryCount / MaxEntry * 10000,1));
                             END;

                             IF (EntryNoAmountBuf.Amount <> 0) OR (EntryNoAmountBuf.Amount2 <> 0) THEN BEGIN
                               GenJnlLine."Line No." := GenJnlLine."Line No." + 10000;
                               GenJnlLine."Account No." := "G/L Account No.";
                               GenJnlLine."Source Code" := SourceCodeSetup."Close Income Statement";
                               GenJnlLine."Reason Code" := GenJnlBatch."Reason Code";
                               GenJnlLine.VALIDATE(Amount,-EntryNoAmountBuf.Amount);
                               GenJnlLine."System-Created Entry" := TRUE;
                               GenJnlLine."Source Currency Amount" := -EntryNoAmountBuf.Amount2;
                               GenJnlLine."Business Unit Code" := EntryNoAmountBuf."Business Unit Code";

                               TempJnlLineDim.RESET; //$001

                               TempJnlLineDim.DELETEALL;
                               TempDimBuf2.DELETEALL;
                              DimBufMgt.RetrieveDimensions(EntryNoAmountBuf."Entry No.",TempDimBuf2);
                               DimMgt.MoveDimBufToJnlLineDim(
                                 TempDimBuf2,TempJnlLineDim,DATABASE::"Gen. Journal Line",
                                 GenJnlLine."Journal Template Name",GenJnlLine."Journal Batch Name",GenJnlLine."Line No.");

                               GenJnlLine."Shortcut Dimension 1 Code" := '';
                               IF FIELDACTIVE("Global Dimension 1 Code") AND ClosePerGlobalDim1 THEN BEGIN
                                 IF TempDimBuf2.GET(
                                      0,EntryNoAmountBuf."Entry No.",GLSetup."Global Dimension 1 Code")
                                 THEN
                                   GenJnlLine."Shortcut Dimension 1 Code" := TempDimBuf2."Dimension Value Code";
                               END;

                               GenJnlLine."Shortcut Dimension 2 Code" := '';
                               IF FIELDACTIVE("Global Dimension 2 Code") AND ClosePerGlobalDim2 THEN BEGIN
                                 IF TempDimBuf2.GET(
                                      0,EntryNoAmountBuf."Entry No.",GLSetup."Global Dimension 2 Code")
                                 THEN
                                   GenJnlLine."Shortcut Dimension 2 Code" := TempDimBuf2."Dimension Value Code";
                               END;
                               HandleGenJnlLine;
                               UpdateBalAcc;
                             END;
                           UNTIL EntryNoAmountBuf.NEXT = 0;

                         EntryNoAmountBuf.DELETEALL;
                       END;

        DataItemLink=G/L Account No.=FIELD(No.);
      }
      SECTIONS
      {
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=8910;
      Height=5610;
      SaveValues=Yes;
      OnOpenForm=BEGIN
                   IF PostingDescription = '' THEN
                     PostingDescription :=
                       COPYSTR(ObjTransl.TranslateObject(ObjTransl."Object Type"::Report,REPORT::"Close Income Statement"),1,30);
                   EndDateReq := 0D;
                   AccountingPeriod.SETRANGE("New Fiscal Year",TRUE);
                   AccountingPeriod.SETRANGE("Date Locked",TRUE);
                   IF AccountingPeriod.FIND('+') THEN BEGIN
                     EndDateReq := AccountingPeriod."Starting Date" - 1;
                     IF NOT ValidateEndDate(FALSE) THEN
                       EndDateReq := 0D;
                   END;
                   ValidateJnl;
                   ColumnDim := DimSelectionBuf.GetDimSelectionText(3,REPORT::"Close Income Statement",'');
                 END;

    }
    CONTROLS
    {
      { 1   ;TextBox      ;3410 ;0    ;1650 ;440  ;CaptionML=[ENU=Fiscal Year Ending Date;
                                                              ESP=Fecha final ejercicio];
                                                   SourceExpr=EndDateReq;
                                                   OnValidate=BEGIN
                                                                ValidateEndDate(TRUE);
                                                              END;
                                                               }
      { 21  ;Label        ;0    ;0    ;3300 ;440  ;ParentControl=1 }
      { 2   ;TextBox      ;3410 ;550  ;2750 ;440  ;CaptionML=[ENU=Gen. Journal Template;
                                                              ESP=Libro del diario general];
                                                   SourceExpr=GenJnlLine."Journal Template Name";
                                                   TableRelation="Gen. Journal Template";
                                                   OnValidate=BEGIN
                                                                GenJnlLine."Journal Batch Name" := '';
                                                                DocNo := '';
                                                              END;
                                                               }
      { 22  ;Label        ;0    ;550  ;3300 ;440  ;ParentControl=2 }
      { 3   ;TextBox      ;3410 ;1100 ;2750 ;440  ;Lookup=Yes;
                                                   CaptionML=[ENU=Gen. Journal Batch;
                                                              ESP=Secci¢n diario general];
                                                   SourceExpr=GenJnlLine."Journal Batch Name";
                                                   OnValidate=BEGIN
                                                                IF GenJnlLine."Journal Batch Name" <> '' THEN BEGIN
                                                                  GenJnlLine.TESTFIELD("Journal Template Name");
                                                                  GenJnlBatch.GET(GenJnlLine."Journal Template Name",GenJnlLine."Journal Batch Name");
                                                                END;
                                                                ValidateJnl;
                                                              END;

                                                   OnLookup=BEGIN
                                                              GenJnlLine.TESTFIELD("Journal Template Name");
                                                              GenJnlTemplate.GET(GenJnlLine."Journal Template Name");
                                                              GenJnlBatch.FILTERGROUP(2);
                                                              GenJnlBatch.SETRANGE("Journal Template Name",GenJnlLine."Journal Template Name");
                                                              GenJnlBatch.FILTERGROUP(0);
                                                              GenJnlBatch."Journal Template Name" := GenJnlLine."Journal Template Name";
                                                              GenJnlBatch.Name := GenJnlLine."Journal Batch Name";
                                                              IF FORM.RUNMODAL(0,GenJnlBatch) = ACTION::LookupOK THEN BEGIN
                                                                GenJnlLine."Journal Batch Name" := GenJnlBatch.Name;
                                                                ValidateJnl;
                                                              END;
                                                            END;
                                                             }
      { 23  ;Label        ;0    ;1100 ;3300 ;440  ;ParentControl=3 }
      { 4   ;TextBox      ;3410 ;2750 ;5500 ;440  ;CaptionML=[ENU=Posting Description;
                                                              ESP=Texto de registro];
                                                   SourceExpr=PostingDescription }
      { 24  ;Label        ;0    ;2750 ;3300 ;440  ;ParentControl=4 }
      { 5   ;CheckBox     ;3410 ;3960 ;3850 ;440  ;ShowCaption=No;
                                                   CaptionML=[ENU=Business Unit Code;
                                                              ESP=C¢d. empresa];
                                                   SourceExpr=ClosePerBusUnit }
      { 25  ;Label        ;220  ;3960 ;3080 ;440  ;ParentControl=5 }
      { 8   ;TextBox      ;3410 ;1650 ;2750 ;440  ;CaptionML=[ENU=Document No.;
                                                              ESP=N§ documento];
                                                   SourceExpr=DocNo }
      { 9   ;Label        ;0    ;1650 ;3300 ;440  ;ParentControl=8 }
      { 11  ;TextBox      ;3410 ;2200 ;2750 ;440  ;CaptionML=[ENU=Retained Earnings Acc.;
                                                              ESP=Cta. ajtes. red. div. adic];
                                                   SourceExpr=RetainedEarningsGLAcc."No.";
                                                   TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                IF RetainedEarningsGLAcc."No." <> '' THEN BEGIN
                                                                  RetainedEarningsGLAcc.FIND;
                                                                  RetainedEarningsGLAcc.CheckGLAcc;
                                                                END;
                                                              END;
                                                               }
      { 12  ;Label        ;0    ;2200 ;3300 ;440  ;ParentControl=11 }
      { 10  ;Label        ;220  ;4510 ;3080 ;440  ;ParentControl=13 }
      { 13  ;TextBox      ;3410 ;4510 ;5500 ;440  ;Editable=No;
                                                   PermanentAssist=Yes;
                                                   CaptionML=[ENU=Dimensions;
                                                              ESP=Dimensiones];
                                                   SourceExpr=ColumnDim;
                                                   OnAssistEdit=VAR
                                                                  TempSelectedDim2@1002 : TEMPORARY Record 369;
                                                                  s@1001 : Text[1024];
                                                                BEGIN
                                                                  DimSelectionBuf.SetDimSelectionMultiple(3,REPORT::"Close Income Statement",ColumnDim);

                                                                  SelectedDim.GetSelectedDim(USERID,3,REPORT::"Close Income Statement",'',TempSelectedDim2);
                                                                  s := CheckDimPostingRules(TempSelectedDim2);
                                                                  IF s <> '' THEN
                                                                    MESSAGE(s);
                                                                END;
                                                                 }
      { 14  ;Label        ;0    ;3410 ;5610 ;440  ;LeaderDots=No;
                                                   CaptionML=[ENU=Close by;
                                                              ESP=Cerrado por] }
      { 15  ;CheckBox     ;3410 ;5170 ;440  ;440  ;ShowCaption=No;
                                                   CaptionML=[ENU=Inventory Period Closed;
                                                              ESP=Periodo inventario cerrado];
                                                   SourceExpr=IsInvtPeriodClosed }
      { 16  ;Label        ;0    ;5170 ;3300 ;440  ;ParentControl=15 }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   IF PostingDescription = '' THEN
                     PostingDescription :=
                       COPYSTR(ObjTransl.TranslateObject(ObjTransl."Object Type"::Report,REPORT::"Close Income Statement"),1,30);
                   EndDateReq := 0D;
                   AccountingPeriod.SETRANGE("New Fiscal Year",TRUE);
                   AccountingPeriod.SETRANGE("Date Locked",TRUE);
                   IF AccountingPeriod.FIND('+') THEN BEGIN
                     EndDateReq := AccountingPeriod."Starting Date" - 1;
                     IF NOT ValidateEndDate(FALSE) THEN
                       EndDateReq := 0D;
                   END;
                   ValidateJnl;
                   ColumnDim := DimSelectionBuf.GetDimSelectionText(3,REPORT::"Close Income Statement",'');
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             ESP=Opciones] }

      { 1   ;2   ;Field     ;
                  CaptionML=[ENU=Fiscal Year Ending Date;
                             ESP=Fecha final ejercicio];
                  SourceExpr=EndDateReq;
                  OnValidate=BEGIN
                               ValidateEndDate(TRUE);
                             END;
                              }

      { 2   ;2   ;Field     ;
                  CaptionML=[ENU=Gen. Journal Template;
                             ESP=Libro del diario general];
                  SourceExpr=GenJnlLine."Journal Template Name";
                  TableRelation="Gen. Journal Template";
                  OnValidate=BEGIN
                               GenJnlLine."Journal Batch Name" := '';
                               DocNo := '';
                             END;
                              }

      { 3   ;2   ;Field     ;
                  Lookup=Yes;
                  CaptionML=[ENU=Gen. Journal Batch;
                             ESP=Secci¢n diario general];
                  SourceExpr=GenJnlLine."Journal Batch Name";
                  OnValidate=BEGIN
                               IF GenJnlLine."Journal Batch Name" <> '' THEN BEGIN
                                 GenJnlLine.TESTFIELD("Journal Template Name");
                                 GenJnlBatch.GET(GenJnlLine."Journal Template Name",GenJnlLine."Journal Batch Name");
                               END;
                               ValidateJnl;
                             END;

                  OnLookup=BEGIN
                             GenJnlLine.TESTFIELD("Journal Template Name");
                             GenJnlTemplate.GET(GenJnlLine."Journal Template Name");
                             GenJnlBatch.FILTERGROUP(2);
                             GenJnlBatch.SETRANGE("Journal Template Name",GenJnlLine."Journal Template Name");
                             GenJnlBatch.FILTERGROUP(0);
                             GenJnlBatch."Journal Template Name" := GenJnlLine."Journal Template Name";
                             GenJnlBatch.Name := GenJnlLine."Journal Batch Name";
                             IF FORM.RUNMODAL(0,GenJnlBatch) = ACTION::LookupOK THEN BEGIN
                               GenJnlLine."Journal Batch Name" := GenJnlBatch.Name;
                               ValidateJnl;
                             END;
                           END;
                            }

      { 8   ;2   ;Field     ;
                  CaptionML=[ENU=Document No.;
                             ESP=N§ documento];
                  SourceExpr=DocNo }

      { 11  ;2   ;Field     ;
                  CaptionML=[ENU=Retained Earnings Acc.;
                             ESP=Cta. ajtes. red. div. adic];
                  SourceExpr=RetainedEarningsGLAcc."No.";
                  TableRelation="G/L Account";
                  OnValidate=BEGIN
                               IF RetainedEarningsGLAcc."No." <> '' THEN BEGIN
                                 RetainedEarningsGLAcc.FIND;
                                 RetainedEarningsGLAcc.CheckGLAcc;
                               END;
                             END;
                              }

      { 4   ;2   ;Field     ;
                  CaptionML=[ENU=Posting Description;
                             ESP=Texto de registro];
                  SourceExpr=PostingDescription }

      { 14  ;2   ;Group     ;
                  CaptionML=[ENU=Close by;
                             ESP=Cerrado por] }

      { 5   ;3   ;Field     ;
                  CaptionML=[ENU=Business Unit Code;
                             ESP=C¢d. empresa];
                  SourceExpr=ClosePerBusUnit }

      { 13  ;3   ;Field     ;
                  CaptionML=[ENU=Dimensions;
                             ESP=Dimensiones];
                  SourceExpr=ColumnDim;
                  Editable=FALSE;
                  OnAssistEdit=VAR
                                 TempSelectedDim2@1002 : TEMPORARY Record 369;
                                 s@1001 : Text[1024];
                               BEGIN
                                 DimSelectionBuf.SetDimSelectionMultiple(3,REPORT::"Close Income Statement",ColumnDim);

                                 SelectedDim.GetSelectedDim(USERID,3,REPORT::"Close Income Statement",'',TempSelectedDim2);
                                 s := CheckDimPostingRules(TempSelectedDim2);
                                 IF s <> '' THEN
                                   MESSAGE(s);
                               END;
                                }

      { 15  ;2   ;Field     ;
                  CaptionML=[ENU=Inventory Period Closed;
                             ESP=Periodo inventario cerrado];
                  SourceExpr=IsInvtPeriodClosed }

    }
  }
  CODE
  {
    VAR
      AccountingPeriod@1012 : Record 50;
      SourceCodeSetup@1013 : Record 242;
      GenJnlTemplate@1014 : Record 80;
      GenJnlBatch@1015 : Record 232;
      GenJnlLine@1016 : TEMPORARY Record 81;
      TempJnlLineDim@1017 : TEMPORARY Record 356;
      JnlLineDim@1018 : Record 356;
      RetainedEarningsGLAcc@1020 : Record 15;
      GLSetup@1021 : Record 98;
      DimSelectionBuf@1022 : Record 368;
      SelectedDim@1023 : Record 369;
      TempSelectedDim@1024 : TEMPORARY Record 369;
      EntryNoAmountBuf@1025 : TEMPORARY Record 386;
      NoSeriesMgt@1026 : Codeunit 396;
      GenJnlPostLine@1027 : Codeunit 12;
      DimMgt@1028 : Codeunit 408;
      DimBufMgt@1029 : Codeunit 411;
      Window@1031 : Dialog;
      FiscalYearStartDate@1032 : Date;
      FiscYearClosingDate@1033 : Date;
      EndDateReq@1034 : Date;
      DocNo@1035 : Code[20];
      PostingDescription@1036 : Text[50];
      ClosePerBusUnit@1037 : Boolean;
      ClosePerGlobalDim1@1038 : Boolean;
      ClosePerGlobalDim2@1039 : Boolean;
      ClosePerGlobalDimOnly@1040 : Boolean;
      TotalAmount@1041 : Decimal;
      TotalAmountAddCurr@1042 : Decimal;
      ColumnDim@1043 : Text[250];
      ObjTransl@1004 : Record 377;
      NoOfAccounts@1050 : Integer;
      ThisAccountNo@1049 : Integer;
      Text000@1053 : TextConst 'ENU=Enter the ending date for the fiscal year.;ESP=Escriba la fecha final del ejercicio.';
      Text001@1052 : TextConst 'ENU=Enter a Document No.;ESP=Escriba un n§ de documento.';
      Text002@1051 : TextConst 'ENU=Enter Retained Earnings Account No.;ESP=Escriba un n§ de cuenta remanentes';
      Text003@1048 : TextConst 'ENU="By using an additional reporting currency, this batch job will post closing entries directly to the general ledger.  ";ESP="Al utilizar una divisa adicional de informe, el proceso registrar  movs. cerrados directamente a contabilidad.  "';
      Text005@1047 : TextConst 'ENU="These closing entries will not be transferred to a general journal before the program posts them to the general ledger.\\ ";ESP="Estos movs. cerrados no se transferir n al diario general antes de que el programa los registre en contabilidad.\\ "';
      Text007@1046 : TextConst 'ENU=Do you wish to continue?;ESP=¨Confirma que desea continuar?';
      Text008@1045 : TextConst 'ENU=Creating general journal lines...\\;ESP=Creando l¡neas diario general....\\';
      Text009@1030 : TextConst 'ENU=Account No.         #1##################\;ESP=N§ cuenta           #1##################\';
      Text010@1019 : TextConst 'ENU=Now performing      #2##################\;ESP=Ejecutando          #2##################\';
      Text011@1011 : TextConst 'ENU="                    @3@@@@@@@@@@@@@@@@@@\";ESP="                    @3@@@@@@@@@@@@@@@@@@\"';
      Text019@1010 : TextConst 'ENU="                    @4@@@@@@@@@@@@@@@@@@\";ESP="                    @4@@@@@@@@@@@@@@@@@@\"';
      Text012@1058 : TextConst 'ENU=Creating Gen. Journal lines;ESP=Creando l¡neas diario general';
      Text013@1008 : TextConst 'ENU=Calculating Amounts;ESP=Calculando importes';
      Text014@1007 : TextConst 'ENU=The fiscal year must be closed before the income statement can be closed.;ESP=El ejercicio debe estar cerrado antes de ejecutar la regularizaci¢n.';
      Text015@1006 : TextConst 'ENU=The fiscal year does not exist.;ESP=No existe el ejercicio.';
      Text017@1005 : TextConst 'ENU=The journal lines have successfully been created.;ESP=Las l¡neas del diario se crearon correctamente.';
      Text016@1003 : TextConst 'ENU=The closing entries have successfully been posted.;ESP=Los movimientos de regularizaci¢n se registraron correctamente.';
      Text020@1001 : TextConst 'ENU=The following G/L Accounts have mandatory dimension codes that have not been selected:;ESP=No se han seleccionado los c¢digos de dimensi¢n obligatorios en las siguientes cuentas:';
      Text021@1000 : TextConst 'ENU=\\In order to post to these accounts you must also select these dimensions:;ESP=\\Para realizar un registro en estas cuentas tambin debe seleccionar las siguientes dimensiones:';
      MaxEntry@1002 : Integer;
      EntryCount@1057 : Integer;
      LastWindowUpdate@1044 : Time;
      GenJnlLine2@1100000 : Record 81;
      BalLineBuffer@1100001 : TEMPORARY Record 10700;
      LineCount@1100002 : Integer;
      NoOfRecords@1100003 : Integer;
      NextDimID@110005 : Integer;
      Text1100100@1100004 : TextConst 'ENU=Posting lines         #1###### @2@@@@@@@@@@@@@;ESP=Registrando l¡neas    #1###### @2@@@@@@@@@@@@@';

    LOCAL PROCEDURE ValidateEndDate@1(RealMode@1000 : Boolean) : Boolean;
    VAR
      OK@1001 : Boolean;
    BEGIN
      IF EndDateReq = 0D THEN
        EXIT;

      OK := AccountingPeriod.GET(EndDateReq + 1);
      IF OK THEN
        OK := AccountingPeriod."New Fiscal Year";
      IF OK THEN BEGIN
        IF NOT AccountingPeriod."Date Locked" THEN BEGIN
          IF NOT RealMode THEN
            EXIT;
          ERROR(Text014);
        END;
        FiscYearClosingDate := CLOSINGDATE(EndDateReq);
        AccountingPeriod.SETRANGE("New Fiscal Year",TRUE);
        OK := AccountingPeriod.FIND('<');
        FiscalYearStartDate := AccountingPeriod."Starting Date";
      END;
      IF NOT OK THEN BEGIN
        IF NOT RealMode THEN
          EXIT;
        ERROR(Text015);
      END;
      EXIT(TRUE);
    END;

    LOCAL PROCEDURE ValidateJnl@2();
    BEGIN
      DocNo := '';
      IF GenJnlBatch.GET(GenJnlLine."Journal Template Name",GenJnlLine."Journal Batch Name") THEN
        IF GenJnlBatch."No. Series" <> '' THEN
          DocNo := NoSeriesMgt.TryGetNextNo(GenJnlBatch."No. Series",EndDateReq);
    END;

    LOCAL PROCEDURE HandleGenJnlLine@4();
    BEGIN
      GenJnlLine."Additional-Currency Posting" :=
        GenJnlLine."Additional-Currency Posting"::None;
      IF GLSetup."Additional Reporting Currency" <> '' THEN BEGIN
        GenJnlLine."Source Currency Code" := GLSetup."Additional Reporting Currency";
        IF (GenJnlLine.Amount = 0) AND
           (GenJnlLine."Source Currency Amount" <> 0)
        THEN BEGIN
          GenJnlLine."Additional-Currency Posting" :=
            GenJnlLine."Additional-Currency Posting"::"Additional-Currency Amount Only";
          GenJnlLine.VALIDATE(Amount,GenJnlLine."Source Currency Amount");
          GenJnlLine."Source Currency Amount" := 0;
        END;
        IF GenJnlLine.Amount <> 0 THEN
          GenJnlLine.INSERT;
        END ELSE
        GenJnlLine.INSERT;
    END;

    LOCAL PROCEDURE CalcSumsInFilter@18();
    BEGIN
      "G/L Entry".CALCSUMS(Amount);
      TotalAmount := TotalAmount + "G/L Entry".Amount;
      IF GLSetup."Additional Reporting Currency" <> '' THEN BEGIN
        "G/L Entry".CALCSUMS("Additional-Currency Amount");
        TotalAmountAddCurr := TotalAmountAddCurr + "G/L Entry"."Additional-Currency Amount";
      END;
    END;

    LOCAL PROCEDURE GetGLEntryDimensions@7(EntryNo@1000 : Integer;VAR DimBuf@1001 : Record 360);
    VAR
      LedgEntryDim@1002 : Record 355;
    BEGIN
      DimBuf.DELETEALL;
      LedgEntryDim.SETRANGE("Table ID",DATABASE::"G/L Entry");
      LedgEntryDim.SETRANGE("Entry No.",EntryNo);
      IF LedgEntryDim.FIND('-') THEN
        REPEAT
          DimBuf."Table ID" := LedgEntryDim."Table ID";
          DimBuf."Entry No." := LedgEntryDim."Entry No.";
          DimBuf."Dimension Code" := LedgEntryDim."Dimension Code";
          DimBuf."Dimension Value Code" := LedgEntryDim."Dimension Value Code";
          DimBuf.INSERT;
        UNTIL LedgEntryDim.NEXT = 0;
    END;

    LOCAL PROCEDURE CheckDimPostingRules@6(VAR SelectedDim@1002 : Record 369) : Text[1024];
    VAR
      DefaultDim@1000 : Record 352;
      s@1001 : Text[1024];
      d@1004 : Text[1024];
      PrevAcc@1003 : Code[20];
    BEGIN
      DefaultDim.SETRANGE("Table ID",DATABASE::"G/L Account");
      DefaultDim.SETFILTER(
        "Value Posting",'%1|%2',
        DefaultDim."Value Posting"::"Same Code",DefaultDim."Value Posting"::"Code Mandatory");

      IF DefaultDim.FIND('-') THEN
        REPEAT
          SelectedDim.SETRANGE("Dimension Code",DefaultDim."Dimension Code");
          IF NOT SelectedDim.FIND('-') THEN BEGIN
            IF STRPOS(d,DefaultDim."Dimension Code") < 1 THEN
              d := d + ' ' + FORMAT(DefaultDim."Dimension Code");
            IF PrevAcc <> DefaultDim."No." THEN BEGIN
              PrevAcc := DefaultDim."No.";
            IF s = '' THEN
              s := Text020;
            s := s + ' ' + FORMAT(DefaultDim."No.");
            END;
          END;
          SelectedDim.SETRANGE("Dimension Code");
        UNTIL (DefaultDim.NEXT = 0) OR (STRLEN(s) > MAXSTRLEN(s) - MAXSTRLEN(DefaultDim."No.") - STRLEN(Text021) - 1);
      IF s <> '' THEN
        s := COPYSTR(s + Text021 + d,1,MAXSTRLEN(s));
      EXIT(s);
    END;

    LOCAL PROCEDURE IsInvtPeriodClosed@3() : Boolean;
    VAR
      AccPeriod@1001 : Record 50;
      InvtPeriod@1000 : Record 5814;
    BEGIN
      AccPeriod.GET(EndDateReq + 1);
      AccPeriod.NEXT(-1);
      EXIT(InvtPeriod.IsInvtPeriodClosed(AccPeriod."Starting Date"));
    END;

    PROCEDURE UpdateBalAcc@1100001();
    VAR
      GLAcc@1100000 : Record 15;
    BEGIN
      GLAcc.GET(GenJnlLine."Account No.");
      IF NOT BalLineBuffer.GET(GLAcc."Income Stmt. Bal. Acc.") THEN BEGIN
        GLAcc.TESTFIELD("Income Stmt. Bal. Acc.");
        BalLineBuffer."Account No." := GLAcc."Income Stmt. Bal. Acc.";
        IF GenJnlLine."Additional-Currency Posting" =
          GenJnlLine."Additional-Currency Posting"::"Additional-Currency Amount Only" THEN BEGIN
          BalLineBuffer."Additional-Currency Amount" := GenJnlLine.Amount;
          BalLineBuffer.Amount := 0;
        END ELSE BEGIN
          BalLineBuffer.Amount := GenJnlLine.Amount;
          BalLineBuffer."Additional-Currency Amount" := GenJnlLine."Source Currency Amount";
        END;
        BalLineBuffer.INSERT;
      END ELSE BEGIN
        IF GenJnlLine."Additional-Currency Posting" =
           GenJnlLine."Additional-Currency Posting"::"Additional-Currency Amount Only" THEN
             BalLineBuffer."Additional-Currency Amount" := GenJnlLine.Amount + BalLineBuffer."Additional-Currency Amount"
        ELSE BEGIN
          BalLineBuffer.Amount := BalLineBuffer.Amount + GenJnlLine.Amount;
          BalLineBuffer."Additional-Currency Amount" :=
            GenJnlLine."Source Currency Amount" + BalLineBuffer."Additional-Currency Amount";
        END;
        BalLineBuffer.MODIFY;
      END;
    END;

    PROCEDURE InsBalLines@1100000();
    BEGIN
      IF BalLineBuffer.FIND('-') THEN
        REPEAT
          GenJnlLine."Line No." := GenJnlLine."Line No." + 10000;
          GenJnlLine."Account No." := BalLineBuffer."Account No.";
          GenJnlLine."Source Code" := SourceCodeSetup."Close Income Statement";
          GenJnlLine."Reason Code" := GenJnlBatch."Reason Code";
          GenJnlLine."Additional-Currency Posting" :=
            GenJnlLine."Additional-Currency Posting"::None;
          IF GLSetup."Additional Reporting Currency" <> '' THEN BEGIN
            GenJnlLine."Source Currency Code" := GLSetup."Additional Reporting Currency";
            IF (GenJnlLine.Amount = 0) AND
               (GenJnlLine."Source Currency Amount" <> 0)
            THEN BEGIN
              GenJnlLine.VALIDATE(Amount,-BalLineBuffer."Additional-Currency Amount");
              GenJnlLine.VALIDATE("Source Currency Amount",0);
              GenJnlLine."Additional-Currency Posting" :=
                GenJnlLine."Additional-Currency Posting"::"Additional-Currency Amount Only";
            END ELSE BEGIN
              GenJnlLine.VALIDATE(Amount,-BalLineBuffer.Amount);
              GenJnlLine.VALIDATE("Source Currency Amount",-BalLineBuffer."Additional-Currency Amount");
            END;
          END ELSE
            GenJnlLine.VALIDATE(Amount,-BalLineBuffer.Amount);
          GenJnlLine."System-Created Entry" := TRUE;
          GenJnlLine.INSERT;
        UNTIL BalLineBuffer.NEXT = 0;
    END;

    PROCEDURE InitializeRequest@1100002(EndDateReq2@1100000 : Date;GenJnlTemplate2@1100001 : Code[10];GenJnlBatchName2@1100002 : Code[10];DocNo2@1100003 : Code[10];PostingDescription2@1100004 : Text[50];ClosePerBusUnit2@1100005 : Boolean;ClosePerDept2@1100006 : Boolean;ClosePerProj2@1100007 : Boolean;RetainedAccNo@1100008 : Code[20]);
    BEGIN
      EndDateReq := EndDateReq2;
      GenJnlLine."Journal Template Name" := GenJnlTemplate2;
      GenJnlLine."Journal Batch Name" := GenJnlBatchName2;
      DocNo := DocNo2;
      PostingDescription := PostingDescription2;
      ClosePerBusUnit := ClosePerBusUnit2;
      ClosePerGlobalDim1 := ClosePerDept2;
      ClosePerGlobalDim2 := ClosePerProj2;
      RetainedEarningsGLAcc."No." := RetainedAccNo;
    END;

    BEGIN
    {
      $001 AJS 27012011 Correccion de error de dimensiones
    }
    END.
  }
  RDLDATA
  {
  }
}
