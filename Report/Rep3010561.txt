OBJECT Report 3010561 Delete Cost Entries
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=CACEM6.00;
  }
  PROPERTIES
  {
    Permissions=TableData 17=rm;
    CaptionML=[ENU=Delete Cost Entries;
               ESP=Eliminar movs. coste];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  IF CostRegister2."No." > CostRegister3."No." THEN
                    ERROR(Text000);

                  IF NOT CONFIRM(Text001,FALSE,CostRegister2."No.",CostRegister3."No.") THEN
                    ERROR('');

                  IF NOT CONFIRM(Text004) THEN
                    ERROR('');

                  d.OPEN(Text005 +
                    Text006 );
                END;

  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table3010555;
        DataItemTableView=SORTING(No.)
                          ORDER(Descending);
        OnPreDataItem=BEGIN
                        // Sort descending. Registers are deleted backwards
                        SETRANGE("No.",CostRegister2."No.",CostRegister3."No.");
                      END;

        OnAfterGetRecord=BEGIN
                           d.UPDATE(1,"No.");

                           IF Definite THEN
                             ERROR(Text007,"No.");

                           CASE Source OF

                             Source::"Transfer from G/L":
                               BEGIN
                                 GlEntry.SETRANGE("Entry No.","From Entry No.","To Entry No.");
                                 GlEntry.MODIFYALL("Cost Entry No.",0);
                               END;

                             Source::Allocation:
                               BEGIN
                                 CostEntry.SETCURRENTKEY("Allocated with Journal No.");
                                 CostEntry.SETRANGE("Allocated with Journal No.","Cost Register"."No.");
                                 CostEntry.MODIFYALL(Allocated,FALSE);
                                 CostEntry.MODIFYALL("Allocated with Journal No.",0);
                                 CostEntry.RESET;  // To delete cost entries
                               END;
                           END;

                           // Allocations
                           CostEntry.SETRANGE("Line No.","From Cost Entry No.","To Cost Entry No.");
                           CostEntry.DELETEALL;
                           CostEntry.RESET;
                         END;

        OnPostDataItem=BEGIN
                         // Delete Register
                         DELETEALL;

                         // Reset last alloc. doc. no according to Register entry
                         RESET;
                         SETRANGE(Source,Source::Allocation);
                         IF FIND('+') THEN BEGIN
                           CostEntry.GET("To Cost Entry No.");

                           CaSetup.GET;

                           CaSetup."Last Allocation Doc. No." := CostEntry."Document No.";
                           CaSetup.MODIFY;
                         END;
                       END;

      }
      SECTIONS
      {
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=5060;
      Height=990;
      OnOpenForm=BEGIN
                   CostRegister2.FIND('+');
                   CostRegister3.FIND('+');
                 END;

    }
    CONTROLS
    {
      { 1   ;TextBox      ;3410 ;0    ;1650 ;440  ;Lookup=Yes;
                                                   CaptionML=[ENU=From Register No.;
                                                              ESP=Desde n§ registro];
                                                   SourceExpr=CostRegister2."No.";
                                                   TableRelation="Cost Register" }
      { 2   ;Label        ;0    ;0    ;3300 ;440  ;ParentControl=1 }
      { 3   ;TextBox      ;3410 ;550  ;1650 ;440  ;Editable=No;
                                                   CaptionML=[ENU=To Register No.;
                                                              ESP=Hasta n§ registro];
                                                   SourceExpr=CostRegister3."No.";
                                                   TableRelation="Cost Register" }
      { 4   ;Label        ;0    ;550  ;3300 ;440  ;ParentControl=3 }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnOpenPage=BEGIN
                   CostRegister2.FIND('+');
                   CostRegister3.FIND('+');
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             ESP=Opciones] }

      { 1   ;2   ;Field     ;
                  Lookup=Yes;
                  CaptionML=[ENU=From Register No.;
                             ESP=Desde n§ registro];
                  SourceExpr=CostRegister2."No.";
                  TableRelation="Cost Register" }

      { 3   ;2   ;Field     ;
                  CaptionML=[ENU=To Register No.;
                             ESP=Hasta n§ registro];
                  SourceExpr=CostRegister3."No.";
                  TableRelation="Cost Register";
                  Editable=FALSE }

    }
  }
  CODE
  {
    VAR
      Text000@1150006 : TextConst 'ENU=From Register No. may not be higher than to Register No.;ESP=Desde n§ reg. no puede ser superior a n§ reg.';
      Text001@1150007 : TextConst 'ENU=All corresponding cost entries and Register entries will be irrevocably deleted. \Do you want to delete cost register %1 to %2?;ESP=Se eliminar n irrevocablemente todos los movs. coste y de registro correspondientes. \¨Desea eliminar el registro costes %1 hasta %2?';
      Text004@1150010 : TextConst 'ENU=Are you sure?;ESP=¨Est  seguro?';
      Text005@1150011 : TextConst 'ENU=Delete cost register\;ESP=Eliminar reg. costes\';
      Text006@1150012 : TextConst 'ENU=Register  no.      #1######;ESP=N§ reg.       #1######';
      Text007@1150013 : TextConst 'ENU=Register %1 can no longer be deleted because it is marked as definite.;ESP=El registro %1 ya no se puede borrar porque est  marcado como definitivo.';
      CostRegister2@1150000 : Record 3010555;
      CostRegister3@1150001 : Record 3010555;
      GlEntry@1150003 : Record 17;
      CostEntry@1150004 : Record 3010554;
      CaSetup@1150005 : Record 3010558;
      d@1150002 : Dialog;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}
