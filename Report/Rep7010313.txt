OBJECT Report 7010313 Estadisticas Conductores
{
  OBJECT-PROPERTIES
  {
    Date=16/10/09;
    Time=12:34:24;
    Version List=TRANSFER;
  }
  PROPERTIES
  {
    CaptionML=ESP=Estadisticas Conductores;
    LeftMargin=1500;
    Orientation=Portrait;
  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table7010327;
        DataItemTableView=SORTING(Garaje,Nombre,Apellidos)
                          ORDER(Ascending);
        NewPagePerGroup=Yes;
        OnPreDataItem=VAR
                        rPar@1100244000 : Record 7010311;
                      BEGIN
                        rParametros.FINDFIRST;

                        // calculo el primer y ultimo dia del mes que ha seleccionado el usuario.
                        SETCURRENTKEY(Garaje,Nombre,Apellidos);

                        vIniMes := DMY2DATE(1,vMes+1,vA¤o);
                        vFinMes := vIniMes+31;
                        WHILE DATE2DMY(vFinMes+1,1)<>1 DO
                          vFinMes := vFinMes-1;

                        vIniAcum:=DMY2DATE(1,1,vA¤o);
                        vFinAcum:=vFinMes;
                        rPar.FINDFIRST;

                        IF vGarajeResult = rPar."Todos los garajes" THEN
                          vGarajeResult := '';

                        IF vGarajeResult <> '' THEN
                          vFltGarajeResult := vGarajeResult
                        ELSE
                          vFltGarajeResult := Text000;

                        IF (vGaraje<>'') AND (vGaraje<>rPar."Todos los garajes") THEN
                          SETRANGE(Garaje,vGaraje);

                        IF vTipoConductor=vTipoConductor::Propios THEN
                          SETRANGE(Externo,FALSE)
                        ELSE
                          IF vTipoConductor=vTipoConductor::Externos THEN
                            SETRANGE(Externo,TRUE);

                        IF NOT vVerBloqueados THEN
                          SETRANGE(Bloqueado,FALSE);

                        IF vTipoAcuerdo <> '' THEN
                          SETRANGE("Tipo Acuerdo",vTipoAcuerdo);

                        vSenyal := '$$';

                        CLEAR(aTotal);
                      END;

        OnAfterGetRecord=VAR
                           rParte@1100244000 : Record 7010360;
                           rSel@1103350002 : Record 7035378;
                           vEscape@1103350000 : Boolean;
                         BEGIN

                           vEscape := FALSE;
                           IF vConductores = vConductores::"Seg£n Selecci¢n" THEN BEGIN
                             IF rSel.GET(USERID,Conductor) THEN BEGIN
                               IF NOT rSel.Seleccion THEN BEGIN
                                 vEscape := TRUE;
                                 CurrReport.SKIP;
                               END;
                             END;
                           END;


                           IF (NOT vEscape) AND vSoloConActividad THEN BEGIN
                             rParte.RESET;
                             rParte.SETCURRENTKEY(Confirmado,"Cod Conductor","Fecha facturacion","Tipo Servicio",Garaje);
                             rParte.SETRANGE(Confirmado,TRUE);
                             rParte.SETRANGE("Cod Conductor",Conductor);

                             // JPT - 21/11/01 - Se cambia la fecha de filtrado en vez de la pasada como parametro se utiliza la Fecha Inicio Actividad
                             // de la tabla Parametros
                             //rParte.SETRANGE("Fecha facturacion",vIniMes,vFinMes);
                               rParte.SETRANGE("Fecha facturacion",rParametros."Fecha Inicio Acumulados",vFinMes);
                             // FIN -JPT 21/11/01 -
                             IF vGarajeResult <> '' THEN
                               rParte.SETRANGE(Garaje,vGarajeResult);

                             IF NOT rParte.FINDFIRST THEN
                               CurrReport.SKIP;

                           END;
                         END;

        GroupTotalFields=Garaje;
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Header;
            PrintOnEveryPage=Yes;
            SectionWidth=19050;
            SectionHeight=2961;
            OnPreSection=BEGIN
                           vNombre   := vSenyal;
                           vApellidos:= vSenyal;
                         END;

          }
          CONTROLS
          {
            { 1   ;Label        ;0    ;0    ;7500 ;423  ;FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=Estad¡sticas de Conductores }
            { 2   ;TextBox      ;15900;0    ;3150 ;423  ;HorzAlign=Right;
                                                         SourceExpr=FORMAT(TODAY,0,4) }
            { 3   ;TextBox      ;0    ;423  ;7500 ;423  ;SourceExpr=COMPANYNAME }
            { 4   ;TextBox      ;18600;423  ;450  ;423  ;CaptionML=ESP=P gina;
                                                         SourceExpr=CurrReport.PAGENO }
            { 5   ;Label        ;17850;423  ;750  ;423  ;ParentControl=4 }
            { 6   ;TextBox      ;16800;846  ;2250 ;423  ;HorzAlign=Right;
                                                         SourceExpr=USERID }
            { 8   ;TextBox      ;3000 ;1692 ;3300 ;423  ;SourceExpr=FORMAT(vMes)+Text001+FORMAT(vA¤o) }
            { 9   ;Label        ;0    ;1269 ;2850 ;423  ;FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=Garaje }
            { 25  ;Label        ;0    ;1692 ;2850 ;423  ;FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=Mes }
            { 28  ;TextBox      ;3000 ;1269 ;3300 ;423  ;SourceExpr=vGaraje }
            { 32  ;TextBox      ;12000;1269 ;1950 ;423  ;SourceExpr=vFltGarajeResult }
            { 33  ;Label        ;6750 ;1269 ;5100 ;423  ;FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=Garaje a considerar en resultados }
            { 51  ;Label        ;6750 ;1692 ;5100 ;423  ;FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=S¢lo conductores con actividad }
            { 52  ;TextBox      ;12000;1692 ;900  ;423  ;SourceExpr=vSoloConActividad }
            { 53  ;Label        ;0    ;2115 ;2850 ;423  ;FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=Tipo de Conductor }
            { 69  ;TextBox      ;3000 ;2115 ;1350 ;423  ;SourceExpr=vTipoConductor }
            { 29  ;Shape        ;0    ;2538 ;19050;423  ;ShapeStyle=HorzLine }
            { 70  ;Label        ;6750 ;2115 ;5100 ;423  ;FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=Visualizar bloqueados }
            { 71  ;TextBox      ;12000;2115 ;900  ;423  ;SourceExpr=vVerBloqueados }
            { 72  ;TextBox      ;16200;2115 ;2850 ;423  ;SourceExpr=vTipoAcuerdo }
            { 73  ;Label        ;13950;2115 ;2100 ;423  ;FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=Tipo Acuerdo }
          }
           }
        { PROPERTIES
          {
            SectionType=Header;
            PrintOnEveryPage=Yes;
            SectionWidth=19050;
            SectionHeight=1692;
          }
          CONTROLS
          {
            { 12  ;Label        ;0    ;423  ;2400 ;846  ;ParentControl=11;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=ESP=Nombre }
            { 15  ;Label        ;6450 ;423  ;1350 ;846  ;ParentControl=14;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=ESP=Fecha 1er viaje }
            { 18  ;Label        ;7950 ;423  ;1350 ;846  ;ParentControl=17;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=ESP=Fecha Ult. viaje }
            { 21  ;Label        ;9600 ;423  ;1950 ;423  ;ParentControl=20;
                                                         HorzAlign=Center;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=ESP=Viajes }
            { 24  ;Label        ;11850;423  ;3000 ;423  ;HorzAlign=Center;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=ESP=Pax Transportado }
            { 7   ;Label        ;9600 ;846  ;750  ;423  ;HorzAlign=Center;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=ESP=Mes }
            { 10  ;Label        ;10650;846  ;900  ;423  ;HorzAlign=Center;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=ESP=Acum }
            { 13  ;Label        ;11850;846  ;1200 ;423  ;HorzAlign=Center;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=ESP=Mes }
            { 16  ;Label        ;13200;846  ;1650 ;423  ;HorzAlign=Center;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=ESP=Acum }
            { 26  ;TextBox      ;1650 ;0    ;1500 ;423  ;SourceExpr=Garaje }
            { 27  ;Label        ;0    ;0    ;1500 ;423  ;ParentControl=26;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 31  ;Label        ;2550 ;423  ;3600 ;846  ;ParentControl=30;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=ESP=Apellidos }
            { 38  ;Label        ;15300;423  ;1950 ;423  ;HorzAlign=Center;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=ESP=Pax / Viaje }
            { 39  ;Label        ;15300;846  ;750  ;423  ;HorzAlign=Center;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=ESP=Mes }
            { 43  ;Label        ;16350;846  ;900  ;423  ;HorzAlign=Center;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=ESP=Acum }
          }
           }
        { PROPERTIES
          {
            SectionType=GroupHeader;
            SectionWidth=19050;
            SectionHeight=0;
          }
          CONTROLS
          {
          }
           }
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=19050;
            SectionHeight=0;
          }
          CONTROLS
          {
          }
           }
        { PROPERTIES
          {
            SectionType=GroupFooter;
            SectionWidth=19050;
            SectionHeight=846;
            OnPreSection=BEGIN
                           CLEAR(aTotal);
                         END;

          }
          CONTROLS
          {
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table7010319;
        DataItemTableView=SORTING(Orden Listado)
                          ORDER(Ascending);
        OnPreDataItem=BEGIN
                        vNombre          := vSenyal;
                        vApellidos       := vSenyal;
                        v1viaje          := 0D;
                        vUltViaje        := 0D;
                        vPaxMesTotal     := 0;
                        vViajesMesTotal  := 0;
                        vPaxAcumTotal    := 0;
                        vViajesAcumTotal := 0;
                        vContador        := 0;
                      END;

        OnAfterGetRecord=BEGIN
                           vContador := vContador + 1;

                           Conductor.SETRANGE("Filtro Fechas",vIniMes,vFinMes);
                           Conductor.SETRANGE("Filtro Tipo Servicio",Codigo);

                           IF vGarajeResult <> '' THEN
                             Conductor.SETFILTER("Filtro Garaje Resultados",vGarajeResult);

                           Conductor.CALCFIELDS("N§ Viajes (Estadist)",
                                                "AD Transportados (Estadist)","NI Transportados (Estadist)");
                           vPaxMes := Conductor."AD Transportados (Estadist)" + Conductor."NI Transportados (Estadist)";
                           vViajesMes := Conductor."N§ Viajes (Estadist)";

                           //Para el acumulado anual.
                           Conductor.SETRANGE("Filtro Fechas",vIniAcum,vFinAcum);
                           IF vGarajeResult <> '' THEN
                             Conductor.SETFILTER("Filtro Garaje Resultados",vGarajeResult);

                           Conductor.CALCFIELDS("N§ Viajes (Estadist)",
                                                "AD Transportados (Estadist)","NI Transportados (Estadist)");
                           vPaxAcum   := Conductor."AD Transportados (Estadist)" + Conductor."NI Transportados (Estadist)";
                           vViajesAcum:= Conductor."N§ Viajes (Estadist)";

                           //Actualizamos los totales.
                           vPaxMesTotal     := vPaxMesTotal     + vPaxMes;
                           vViajesMesTotal  := vViajesMesTotal  + vViajesMes;
                           vPaxAcumTotal    := vPaxAcumTotal    + vPaxAcum;
                           vViajesAcumTotal := vViajesAcumTotal + vViajesAcum;

                           //Para el Total del tipo de servicio.
                           aTotal[vContador,1] := aTotal[vContador,1] + vViajesMes;
                           aTotal[vContador,2] := aTotal[vContador,2] + vViajesAcum;
                           aTotal[vContador,3] := aTotal[vContador,3] + vPaxMes;
                           aTotal[vContador,4] := aTotal[vContador,4] + vPaxAcum;

                           //Para el Total, sumando los tipos de servicio.
                           aTotal[10,1] := aTotal[10,1] + vViajesMes;
                           aTotal[10,2] := aTotal[10,2] + vViajesAcum;
                           aTotal[10,3] := aTotal[10,3] + vPaxMes;
                           aTotal[10,4] := aTotal[10,4] + vPaxAcum;


                           //Calculamos el num. pax transportados / nviajes.
                           CalculaMediaPax(vPaxMes,vPaxAcum,vViajesMes,vViajesAcum);
                         END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=19050;
            SectionHeight=423;
          }
          CONTROLS
          {
            { 30  ;TextBox      ;2550 ;0    ;3600 ;423  ;SourceExpr=fApellidos }
            { 11  ;TextBox      ;0    ;0    ;2400 ;423  ;HorzAlign=Left;
                                                         SourceExpr=fNombre }
            { 14  ;TextBox      ;6450 ;0    ;1350 ;423  ;HorzAlign=Left;
                                                         SourceExpr=v1viaje }
            { 17  ;TextBox      ;7950 ;0    ;1200 ;423  ;HorzAlign=Left;
                                                         SourceExpr=vUltViaje }
            { 20  ;TextBox      ;9600 ;0    ;750  ;423  ;HorzAlign=Right;
                                                         SourceExpr=vViajesMes }
            { 19  ;TextBox      ;10650;0    ;900  ;423  ;HorzAlign=Right;
                                                         SourceExpr=vViajesAcum }
            { 22  ;TextBox      ;11850;0    ;1200 ;423  ;HorzAlign=Center;
                                                         DecimalPlaces=0:2;
                                                         SourceExpr=vPaxMes }
            { 23  ;TextBox      ;13200;0    ;1650 ;423  ;HorzAlign=Center;
                                                         DecimalPlaces=0:2;
                                                         SourceExpr=vPaxAcum }
            { 34  ;TextBox      ;17400;0    ;1650 ;423  ;SourceExpr=Codigo }
            { 47  ;TextBox      ;16350;0    ;900  ;423  ;HorzAlign=Right;
                                                         DecimalPlaces=0:2;
                                                         SourceExpr=vAuxAcum }
            { 48  ;TextBox      ;15300;0    ;750  ;423  ;HorzAlign=Right;
                                                         DecimalPlaces=0:2;
                                                         SourceExpr=vAuxMes }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number)
                          ORDER(Ascending);
        MaxIteration=1;
        OnAfterGetRecord=BEGIN
                           //Calculamos el num. pax transportados / nviajes.
                           CalculaMediaPax(vPaxMesTotal,vPaxAcumTotal,vViajesMesTotal,vViajesAcumTotal);
                         END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=19050;
            SectionHeight=846;
          }
          CONTROLS
          {
            { 35  ;TextBox      ;2550 ;0    ;3600 ;423  ;SourceExpr=fApellidos }
            { 36  ;TextBox      ;0    ;0    ;2400 ;423  ;HorzAlign=Left;
                                                         SourceExpr=fNombre }
            { 37  ;TextBox      ;6450 ;0    ;1350 ;423  ;HorzAlign=Left;
                                                         SourceExpr=v1viaje }
            { 40  ;TextBox      ;7950 ;0    ;1200 ;423  ;HorzAlign=Left;
                                                         SourceExpr=vUltViaje }
            { 41  ;Label        ;17400;0    ;1650 ;423  ;CaptionML=ESP=TOTAL }
            { 42  ;TextBox      ;9600 ;0    ;750  ;423  ;HorzAlign=Right;
                                                         SourceExpr=vViajesMesTotal }
            { 44  ;TextBox      ;10650;0    ;900  ;423  ;HorzAlign=Right;
                                                         SourceExpr=vViajesAcumTotal }
            { 45  ;TextBox      ;11850;0    ;1200 ;423  ;HorzAlign=Center;
                                                         DecimalPlaces=0:2;
                                                         SourceExpr=vPaxMesTotal }
            { 46  ;TextBox      ;13200;0    ;1650 ;423  ;HorzAlign=Center;
                                                         DecimalPlaces=0:2;
                                                         SourceExpr=vPaxAcumTotal }
            { 49  ;TextBox      ;15300;0    ;750  ;423  ;HorzAlign=Right;
                                                         DecimalPlaces=0:2;
                                                         SourceExpr=vAuxMes }
            { 50  ;TextBox      ;16350;0    ;900  ;423  ;HorzAlign=Right;
                                                         DecimalPlaces=0:2;
                                                         SourceExpr=vAuxAcum }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number)
                          ORDER(Ascending);
        MaxIteration=1;
        DataItemVarName=Agrupacion;
        OnAfterGetRecord=VAR
                           rParte@1100244000 : Record 7010360;
                           rCond@1100244001 : Record 7010327;
                           vResult@1100244002 : Integer;
                           vTrobat@1100244003 : Boolean;
                         BEGIN
                           vTotalizar := FALSE;

                           rCond.RESET;
                           rCond.COPYFILTERS(Conductor);
                           rCond.SETCURRENTKEY(Garaje,Nombre,Apellidos);
                           rCond := Conductor;

                           vResult := rCond.NEXT;

                           //Tenemos en cuenta el filtro de ver s¢lo los conductores con actividad.

                           IF vSoloConActividad AND (vResult > 0) THEN BEGIN
                             vTrobat := FALSE;
                             REPEAT
                               rParte.RESET;
                               rParte.SETCURRENTKEY(Confirmado,"Cod Conductor","Fecha facturacion","Tipo Servicio",Garaje);
                               rParte.SETRANGE(Confirmado,TRUE);
                               rParte.SETRANGE("Cod Conductor",rCond.Conductor);
                               rParte.SETRANGE("Fecha facturacion",vIniMes,vFinMes);
                               IF vGarajeResult <> '' THEN
                                 rParte.SETRANGE(Garaje,vGarajeResult);

                               IF rParte.FINDFIRST THEN
                                 vTrobat := TRUE
                               ELSE
                                 vResult := rCond.NEXT;

                             UNTIL vTrobat OR (vResult=0)
                           END;

                           IF ( (vResult > 0) AND (rCond.Garaje <> Conductor.Garaje) ) OR (vResult = 0) THEN BEGIN
                             vTotalizar    := TRUE;
                             vMensajeTotal := vSenyal;
                           END
                           ELSE
                             CurrReport.SKIP;
                         END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=19050;
            SectionHeight=0;
          }
          CONTROLS
          {
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table7010319;
        DataItemTableView=SORTING(Orden Listado)
                          ORDER(Ascending);
        DataItemVarName=Tipo Servicio2;
        OnPreDataItem=BEGIN
                        vContador := 0;
                      END;

        OnAfterGetRecord=BEGIN
                           IF vTotalizar THEN
                             vContador := vContador + 1
                           ELSE
                             CurrReport.SKIP;

                           //Calculamos el num. pax transportados / nviajes.
                           CalculaMediaPax(aTotal[vContador,3],aTotal[vContador,4],aTotal[vContador,1],aTotal[vContador,2]);
                         END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=19050;
            SectionHeight=423;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT(vTotalizar);
                         END;

          }
          CONTROLS
          {
            { 60  ;TextBox      ;17400;0    ;1650 ;423  ;SourceExpr=Codigo }
            { 54  ;TextBox      ;9600 ;0    ;750  ;423  ;HorzAlign=Right;
                                                         SourceExpr=aTotal[vContador,1] }
            { 55  ;TextBox      ;10650;0    ;900  ;423  ;HorzAlign=Right;
                                                         SourceExpr=aTotal[vContador,2] }
            { 57  ;TextBox      ;11850;0    ;1200 ;423  ;HorzAlign=Center;
                                                         DecimalPlaces=0:2;
                                                         SourceExpr=aTotal[vContador,3] }
            { 56  ;TextBox      ;13200;0    ;1650 ;423  ;HorzAlign=Center;
                                                         DecimalPlaces=0:2;
                                                         SourceExpr=aTotal[vContador,4] }
            { 58  ;TextBox      ;15300;0    ;750  ;423  ;HorzAlign=Right;
                                                         DecimalPlaces=0:2;
                                                         SourceExpr=vAuxMes }
            { 59  ;TextBox      ;16350;0    ;900  ;423  ;HorzAlign=Right;
                                                         DecimalPlaces=0:2;
                                                         SourceExpr=vAuxAcum }
            { 68  ;TextBox      ;0    ;0    ;4650 ;423  ;HorzAlign=Left;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         SourceExpr=fTotal }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number)
                          ORDER(Ascending);
        MaxIteration=1;
        DataItemVarName=Total;
        OnAfterGetRecord=BEGIN
                           IF NOT vTotalizar THEN
                             CurrReport.SKIP;

                           //Calculamos el num. pax transportados / nviajes.
                           CalculaMediaPax(aTotal[10,3],aTotal[10,4],aTotal[10,1],aTotal[10,2]);
                         END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=19050;
            SectionHeight=846;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT(vTotalizar);
                         END;

          }
          CONTROLS
          {
            { 61  ;TextBox      ;9600 ;0    ;750  ;423  ;HorzAlign=Right;
                                                         SourceExpr=aTotal[10,1] }
            { 62  ;TextBox      ;10650;0    ;900  ;423  ;HorzAlign=Right;
                                                         SourceExpr=aTotal[10,2] }
            { 63  ;TextBox      ;11850;0    ;1200 ;423  ;HorzAlign=Center;
                                                         DecimalPlaces=0:2;
                                                         SourceExpr=aTotal[10,3] }
            { 64  ;TextBox      ;13200;0    ;1650 ;423  ;HorzAlign=Center;
                                                         DecimalPlaces=0:2;
                                                         SourceExpr=aTotal[10,4] }
            { 65  ;TextBox      ;15300;0    ;750  ;423  ;HorzAlign=Right;
                                                         DecimalPlaces=0:2;
                                                         SourceExpr=vAuxMes }
            { 66  ;TextBox      ;16350;0    ;900  ;423  ;HorzAlign=Right;
                                                         DecimalPlaces=0:2;
                                                         SourceExpr=vAuxAcum }
            { 67  ;Label        ;17400;0    ;1650 ;423  ;CaptionML=ESP=TOTAL }
          }
           }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=10230;
      Height=6270;
      OnOpenForm=VAR
                   rPar@1100244000 : Record 7010311;
                   rUsu@1100244001 : Record 7010420;
                   Err1@1100244002 : TextConst 'ESP=No existe el usuario %1';
                   cCond@1103350000 : Codeunit 7010313;
                 BEGIN
                   vMes := DATE2DMY(TODAY,2)-1;
                   vA¤o := DATE2DMY(TODAY,3);

                   rPar.FINDFIRST;
                   IF NOT rUsu.GET(USERID) THEN
                     ERROR(Err1, USERID);
                   IF (rUsu."Garaje de trabajo" = '') OR (rUsu."Garaje de trabajo" = rPar."Todos los garajes") THEN
                     vGaraje := rPar."Todos los garajes"
                   ELSE BEGIN
                     vGaraje := rUsu."Garaje de trabajo";
                     RequestOptionsForm.FltGaraje.EDITABLE := FALSE;
                   END;
                   vSoloConActividad := FALSE;
                   vTipoConductor    := vTipoConductor::Todos;
                   vVerBloqueados    := FALSE;

                   //.............
                   cCond.ActualizarSeleccionConductores;
                   vConductores      := vConductores::"Todos los Conductores";
                   RequestOptionsForm.Seleccionar.VISIBLE:=FALSE;
                   //.............
                 END;

    }
    CONTROLS
    {
      { 4   ;TextBox      ;4730 ;660  ;2310 ;440  ;InPage=-1;
                                                   NextControl=7;
                                                   SourceExpr=vMes }
      { 5   ;Label        ;220  ;660  ;4400 ;440  ;InPage=-1;
                                                   CaptionML=ESP=Mes / A¤o }
      { 6   ;Label        ;7150 ;660  ;220  ;440  ;InPage=-1;
                                                   LeaderDots=No;
                                                   CaptionML=ESP=/ }
      { 7   ;TextBox      ;7480 ;660  ;2310 ;440  ;InPage=-1;
                                                   NextControl=1;
                                                   SourceExpr=vA¤o }
      { 8   ;TextBox      ;4730 ;110  ;2310 ;440  ;Name=FltGaraje;
                                                   InPage=-1;
                                                   NextControl=4;
                                                   SourceExpr=vGaraje;
                                                   TableRelation=Garaje.Garaje;
                                                   OnValidate=VAR
                                                                cFunBas@1100244001 : Codeunit 7010310;
                                                              BEGIN
                                                                cFunBas.TestRestringido(vGaraje);
                                                              END;
                                                               }
      { 9   ;Label        ;220  ;110  ;4400 ;440  ;InPage=-1;
                                                   CaptionML=ESP=Garaje }
      { 1   ;TextBox      ;4730 ;1210 ;2310 ;440  ;Name=FltGaraje;
                                                   InPage=-1;
                                                   NextControl=11;
                                                   SourceExpr=vGarajeResult;
                                                   TableRelation=Garaje.Garaje;
                                                   OnValidate=VAR
                                                                cFunBas@1100244001 : Codeunit 7010310;
                                                              BEGIN
                                                                cFunBas.TestRestringido(vGaraje);
                                                              END;
                                                               }
      { 2   ;Label        ;220  ;1210 ;4400 ;440  ;InPage=-1;
                                                   CaptionML=ESP=Garaje a considerar en resultados }
      { 10  ;Label        ;220  ;1760 ;4400 ;440  ;InPage=-1;
                                                   CaptionML=ESP=S¢lo conductores con actividad }
      { 11  ;CheckBox     ;4730 ;1760 ;440  ;440  ;InPage=-1;
                                                   ShowCaption=No;
                                                   NextControl=8;
                                                   SourceExpr=vSoloConActividad }
      { 3   ;TextBox      ;4730 ;2310 ;2310 ;440  ;InPage=-1;
                                                   SourceExpr=vTipoConductor }
      { 12  ;Label        ;220  ;2310 ;4400 ;440  ;ParentControl=3;
                                                   InPage=-1;
                                                   CaptionML=ESP=Selecci¢n Tipo Conductor }
      { 13  ;CheckBox     ;4730 ;3960 ;440  ;440  ;InPage=-1;
                                                   ShowCaption=No;
                                                   SourceExpr=vVerBloqueados }
      { 14  ;Label        ;220  ;3960 ;4400 ;440  ;InPage=-1;
                                                   CaptionML=ESP=Visualizar bloqueados }
      { 15  ;TextBox      ;4730 ;3410 ;2310 ;440  ;InPage=-1;
                                                   SourceExpr=vTipoAcuerdo;
                                                   TableRelation="Tipo Acuerdo Conductor"."Tipo Acuerdo" }
      { 16  ;Label        ;220  ;3410 ;4400 ;440  ;InPage=-1;
                                                   CaptionML=ESP=Tipo Acuerdo }
      { 1103350000;CommandButton;7260;2860;550;440;Name=Seleccionar;
                                                   InPage=-1;
                                                   CaptionML=ESP=...;
                                                   OnPush=VAR
                                                            rSel@1103350002 : Record 7035378;
                                                            fSel@1103350001 : Form 7035399;
                                                            rPar@1103350000 : Record 7010311;
                                                          BEGIN

                                                            rPar.FINDFIRST;

                                                            rSel.RESET;
                                                            rSel.INIT;
                                                            rSel.SETCURRENTKEY(Usuario,Garaje,"Nombre Abreviado");
                                                            rSel.FILTERGROUP(2);
                                                            rSel.SETRANGE(Usuario,USERID);

                                                            IF (vGaraje<>'') AND (vGaraje<>rPar."Todos los garajes") THEN
                                                              rSel.SETRANGE(Garaje, vGaraje);

                                                            IF vTipoConductor = vTipoConductor::Propios THEN
                                                              rSel.SETRANGE(Externo,FALSE)
                                                            ELSE
                                                              IF vTipoConductor = vTipoConductor::Externos THEN
                                                                rSel.SETRANGE(Externo,TRUE);


                                                            rSel.FILTERGROUP(0);

                                                            CLEAR(fSel);
                                                            fSel.SETTABLEVIEW(rSel);
                                                            fSel.RUN;
                                                            CLEAR(fSel);
                                                            rSel.RESET;
                                                          END;
                                                           }
      { 1103350001;TextBox;4730 ;2860 ;2310 ;440  ;InPage=-1;
                                                   CaptionML=ESP=Seleccion conductores;
                                                   SourceExpr=vConductores;
                                                   OnValidate=BEGIN
                                                                IF vConductores=vConductores::"Todos los Conductores" THEN
                                                                  RequestOptionsForm.Seleccionar.VISIBLE:=FALSE
                                                                ELSE
                                                                  RequestOptionsForm.Seleccionar.VISIBLE:=TRUE;
                                                              END;
                                                               }
      { 1103350002;Label  ;220  ;2860 ;4400 ;440  ;ParentControl=1103350001;
                                                   InPage=-1 }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      Text000@1100244035 : TextConst 'ESP=TODOS';
      Text001@1100244036 : TextConst 'ESP=" de "';
      Text002@1100244037 : TextConst 'ESP=Agrupaci¢n Total del Garaje';
      LastFieldNo@1100244000 : Integer;
      FooterPrinted@1100244001 : Boolean;
      vPaxMes@1100244002 : Decimal;
      vPaxAcum@1100244003 : Decimal;
      vViajesMes@1100244004 : Decimal;
      vViajesAcum@1100244005 : Decimal;
      vA¤o@1100244006 : Integer;
      vMes@1100244007 : 'Enero,Febrero,Marzo,Abril,Mayo,Junio,Julio,Agosto,Septiembre,Octubre,Noviembre,Diciembre';
      vGaraje@1100244008 : Code[10];
      vIniMes@1100244009 : Date;
      vFinMes@1100244010 : Date;
      vIniAcum@1100244011 : Date;
      vFinAcum@1100244012 : Date;
      vGarajeResult@1100244013 : Code[10];
      vFltGarajeResult@1100244014 : Code[10];
      vNombre@1100244015 : Text[30];
      vApellidos@1100244016 : Text[30];
      vMensajeTotal@1100244017 : Text[30];
      v1viaje@1100244018 : Date;
      vUltViaje@1100244019 : Date;
      vSenyal@1100244020 : Text[2];
      vPaxMesTotal@1100244021 : Decimal;
      vPaxAcumTotal@1100244022 : Decimal;
      vViajesMesTotal@1100244023 : Decimal;
      vViajesAcumTotal@1100244024 : Decimal;
      vAuxMes@1100244025 : Decimal;
      vAuxAcum@1100244026 : Decimal;
      vSoloConActividad@1100244027 : Boolean;
      aTotal@1100244028 : ARRAY [10,4] OF Decimal;
      vContador@1100244029 : Integer;
      vTotalizar@1100244030 : Boolean;
      vTipoConductor@1100244031 : 'Todos,Propios,Externos';
      vVerBloqueados@1100244032 : Boolean;
      vTipoAcuerdo@1100244033 : Code[10];
      rParametros@1100244034 : Record 7010311;
      vConductores@1103350000 : 'Todos los Conductores,Seg£n Selecci¢n';

    PROCEDURE fNombre@1() : Text[30];
    BEGIN
      IF vNombre = vSenyal THEN BEGIN
        vNombre   := Conductor.Nombre;
        v1viaje   := Conductor."Fecha 1er viaje anual";
        vUltViaje := Conductor."Fecha ultimo viaje";
      END
      ELSE BEGIN
        vNombre    := '';
        v1viaje    := 0D;
        vUltViaje  := 0D;
      END;
      EXIT(vNombre);
    END;

    PROCEDURE fApellidos@3() : Text[30];
    BEGIN
      //fApellidos().
      //NOTA: Se usa est  funci¢n ya que no s por qu motivo si la integro en fNombre no funcion
      IF vApellidos = vSenyal THEN
        vApellidos:= Conductor.Apellidos
      ELSE
        vApellidos := '';
      EXIT(vApellidos);
    END;

    PROCEDURE fTotal@4() : Text[30];
    BEGIN
      // fTotal()
      IF vMensajeTotal = vSenyal THEN
        vMensajeTotal := Text002
      ELSE
        vMensajeTotal := '';
      EXIT(vMensajeTotal);
    END;

    PROCEDURE CalculaMediaPax@2(pPaxMes@1100244000 : Decimal;pPaxAcum@1100244001 : Decimal;pViajesMes@1100244002 : Decimal;pViajesAcum@1100244003 : Decimal);
    BEGIN
      // CalculaMediaPax(pPaxMes,pPaxAcum,pViajesMes,pViajesAcum);
      vAuxMes  :=0;
      vAuxAcum :=0;

      IF pViajesMes <> 0 THEN
        vAuxMes := ROUND(pPaxMes / pViajesMes, 1);

      IF pViajesAcum <> 0 THEN
        vAuxAcum:= ROUND(pPaxAcum / pViajesAcum, 1);
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}
