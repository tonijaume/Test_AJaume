OBJECT Report 7009736 Prevision coste Personal Asist
{
  OBJECT-PROPERTIES
  {
    Date=28/04/15;
    Time=12:03:48;
    Modified=Yes;
    Version List=AIC2009;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Airport assistance cost prevision;
               ESP=Prevision coste asistencia aeropuerto];
    OnInitReport=BEGIN
                   rEmpresa.FINDFIRST;
                   rParA.FINDFIRST;
                   rParPer.FINDFIRST;
                   rParPer.TESTFIELD("Codigo Adulto");
                   rParPer.TESTFIELD("Codigo Ni¤o");
                   rParPer.TESTFIELD("Codigo Infant");
                 END;

  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table7009906;
        DataItemVarName=Personal;
        PrintOnlyIfDetail=Yes;
        OnPreDataItem=BEGIN
                        IF (wFechaDesde=0D) OR (wFechaHasta=0D) THEN
                          ERROR(Text002);
                      END;

        ReqFilterFields=Codigo;
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Header;
            PrintOnEveryPage=Yes;
            SectionWidth=18150;
            SectionHeight=846;
          }
          CONTROLS
          {
            { 1100253000;TextBox;0    ;0    ;5400 ;423  ;FontSize=8;
                                                         FontBold=Yes;
                                                         SourceExpr=rEmpresa.Name }
            { 1100253001;Shape  ;0    ;423  ;18150;423  ;ShapeStyle=HorzLine }
            { 1100253002;Label  ;11400;0    ;6750 ;423  ;HorzAlign=Right;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=[ENU=Assistance Flight Staff Cost Forecast;
                                                                    ESP=Prevision coste Personal Asistencia] }
          }
           }
        { PROPERTIES
          {
            SectionType=Header;
            PrintOnEveryPage=Yes;
            SectionWidth=18150;
            SectionHeight=846;
          }
          CONTROLS
          {
            { 1100253007;TextBox;0    ;0    ;5400 ;423  ;SourceExpr=STRSUBSTNO('%1..%2', wFechaDesde, wFechaHasta) }
            { 1100253008;TextBox;0    ;423  ;18150;423  ;SourceExpr=GETFILTERS }
          }
           }
        { PROPERTIES
          {
            SectionType=Header;
            PrintOnEveryPage=Yes;
            SectionWidth=18150;
            SectionHeight=1269;
          }
          CONTROLS
          {
            { 1100253012;Label  ;3000 ;0    ;1200 ;846  ;ParentControl=1100253011;
                                                         HorzAlign=Left;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1100253033;Shape  ;0    ;846  ;18150;423  ;ShapeStyle=HorzLine }
            { 1100253034;Label  ;13050;0    ;1650 ;846  ;HorzAlign=Center;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=[ENU=Adults;
                                                                    ESP=Adultos] }
            { 1100253035;Label  ;14850;0    ;1650 ;846  ;HorzAlign=Center;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=[ENU=Childs;
                                                                    ESP=Ni¤os] }
            { 1100253036;Label  ;16650;0    ;1500 ;846  ;ParentControl=1100253027;
                                                         HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1100253013;Label  ;4350 ;0    ;1500 ;846  ;ParentControl=1100253010;
                                                         HorzAlign=Left;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1100253015;Label  ;6000 ;0    ;1500 ;846  ;ParentControl=1100253014;
                                                         HorzAlign=Left;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1100253017;Label  ;7650 ;0    ;1500 ;846  ;ParentControl=1100253016;
                                                         HorzAlign=Left;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1100253019;Label  ;9300 ;0    ;1500 ;846  ;ParentControl=1100253018;
                                                         HorzAlign=Left;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
          }
           }
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=18150;
            SectionHeight=846;
          }
          CONTROLS
          {
            { 1100253009;TextBox;0    ;0    ;18150;423  ;FontSize=9;
                                                         FontBold=Yes;
                                                         FontUnderline=Yes;
                                                         SourceExpr=STRSUBSTNO('%1 - %2', Codigo, Nombre) }
          }
           }
        { PROPERTIES
          {
            SectionType=Footer;
            PrintOnEveryPage=Yes;
            PlaceInBottom=Yes;
            SectionWidth=18150;
            SectionHeight=846;
          }
          CONTROLS
          {
            { 1100253003;TextBox;5400 ;423  ;7500 ;423  ;HorzAlign=Center;
                                                         SourceExpr=FORMAT(TODAY,0,4) + ' / ' + FORMAT(TIME,0,0) + ' / ' + USERID }
            { 1100253004;Shape  ;0    ;0    ;18150;423  ;ShapeStyle=HorzLine }
            { 1100253005;TextBox;0    ;423  ;3600 ;423  ;HorzAlign=Left;
                                                         SourceExpr=Text006 + FORMAT(CurrReport.PAGENO) }
            { 1100253006;TextBox;14550;423  ;3600 ;423  ;HorzAlign=Right;
                                                         SourceExpr=fNoms.nom_delegacion(rParA.Delegacion) }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table2000000007;
        DataItemTableView=SORTING(Period Type,Period Start);
        DataItemVarName=Fechas;
        PrintOnlyIfDetail=Yes;
        OnPreDataItem=BEGIN


                        CLEAR(wTotAdultos);
                        CLEAR(wTotNi¤os);
                        CLEAR(wTotImporte);

                        SETRANGE("Period Type" , Fechas."Period Type"::Date);
                        SETRANGE("Period Start", wFechaDesde, wFechaHasta);
                      END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=18150;
            SectionHeight=423;
          }
          CONTROLS
          {
          }
           }
        { PROPERTIES
          {
            SectionType=Footer;
            SectionWidth=18150;
            SectionHeight=1269;
          }
          CONTROLS
          {
            { 1100253028;Label  ;11850;423  ;1050 ;423  ;HorzAlign=Right;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=Total: }
            { 1100253029;TextBox;13050;423  ;1650 ;423  ;HorzAlign=Center;
                                                         FontBold=Yes;
                                                         DecimalPlaces=0:2;
                                                         SourceExpr=wTotAdultos[1] }
            { 1100253031;TextBox;14850;423  ;1650 ;423  ;HorzAlign=Center;
                                                         FontBold=Yes;
                                                         DecimalPlaces=0:2;
                                                         SourceExpr=wTotNi¤os[1] }
            { 1100253047;TextBox;16650;423  ;1500 ;423  ;HorzAlign=Right;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=Importe;
                                                         SourceExpr=wTotImporte }
            { 1100253048;TextBox;8550 ;423  ;3150 ;423  ;HorzAlign=Right;
                                                         FontSize=7;
                                                         FontBold=Yes;
                                                         SourceExpr=Personal.Codigo }
            { 1100253049;Shape  ;8550 ;0    ;9600 ;423  ;ShapeStyle=HorzLine }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=2;
        DataItemTable=Table7009907;
        DataItemTableView=SORTING(Cod. Persona asistencia);
        DataItemVarName=PersonalVuelo;
        OnPreDataItem=VAR
                        lrResTrn@1100253000 : Record 7009744;
                        lrPersV@1100253001 : Record 7009907;
                        lrVuel@1100253002 : Record 7009754;
                      BEGIN
                        CurrReport.CREATETOTALS(wAdultos, wNi¤os, wImporte);

                        SETRANGE(Fecha                    , Fechas."Period Start");
                        SETRANGE("Cod. Persona asistencia", Personal.Codigo);

                        //. Buscamos las tarifa
                        CLEAR(rTarf);
                        rTarf.SETRANGE("Tipo Tarifa", rTarf."Tipo Tarifa"::Asistencia);
                        rTarf.SETFILTER("Fecha Inicial", '<=%1', Fechas."Period Start");
                        rTarf.SETFILTER("Fecha Final"  , '>=%1', Fechas."Period Start");
                        wEnc := rTarf.FINDFIRST;

                        //. Tenemos que contar los pax afectados. Para ello buscamos las reservas
                        CLEAR(wRango);
                        CLEAR(lrPersV);
                        lrPersV.COPY(PersonalVuelo);
                        IF rTarf."Tipo aplicacion" = rTarf."Tipo aplicacion"::Pax THEN
                          _BuscaRangoPax(lrPersV)
                        ELSE
                          _BuscaRangoServicios(lrPersV);

                        // Buscamos el precio en la tarifa
                        IF wEnc THEN BEGIN
                          CLEAR(rPrec);
                          rPrec.SETRANGE("ID Tarifa"       , rTarf.ID);
                          rPrec.SETFILTER("Rango desde", '<=%1', wRango);
                          rPrec.SETFILTER("Rango Hasta", '>=%1', wRango);
                          wEnc := rPrec.FINDFIRST;
                          IF NOT wEnc THEN BEGIN
                            rPrec.SETRANGE("Rango Hasta", 0);
                            wEnc := rPrec.FINDFIRST;
                          END;
                        END;
                      END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Footer;
            SectionWidth=18150;
            SectionHeight=846;
          }
          CONTROLS
          {
            { 1100253041;TextBox;13050;0    ;1650 ;423  ;HorzAlign=Center;
                                                         FontBold=Yes;
                                                         DecimalPlaces=0:2;
                                                         SourceExpr=wAdultos[1] }
            { 1100253043;TextBox;14850;0    ;1650 ;423  ;HorzAlign=Center;
                                                         FontBold=Yes;
                                                         DecimalPlaces=0:2;
                                                         SourceExpr=wNi¤os[1] }
            { 1100253045;TextBox;16650;0    ;1500 ;423  ;HorzAlign=Right;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=Importe;
                                                         SourceExpr=wImporte }
            { 1100253046;Label  ;11850;0    ;1050 ;423  ;HorzAlign=Right;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=Total: }
            { 1100253021;TextBox;8550 ;0    ;3150 ;423  ;HorzAlign=Right;
                                                         FontSize=7;
                                                         FontBold=Yes;
                                                         SourceExpr=Fechas."Period Start" }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=3;
        DataItemTable=Table7009754;
        DataItemTableView=SORTING(Fecha,Compa¤ia,Vuelo,Origen,Destino);
        DataItemVarName=diVuelo;
        OnAfterGetRecord=VAR
                           lwCnt@1100253002 : Integer;
                         BEGIN
                           //. En funcion del tipo de aplicacion de precio buscaremos los paxes o no

                           _AplicaPrecioPax;

                           IF rTarf."Tipo aplicacion" = rTarf."Tipo aplicacion"::Pax THEN
                             wImporte := (wAdultos[2] * rPrec."Precio Adultos") + (wNi¤os[2] * rPrec."Precio Ni¤os")
                           ELSE
                             wImporte := rPrec."Precio Servicio";

                           // Total por Personal
                           FOR lwCnt := 1 TO 2 DO BEGIN
                             wTotAdultos[lwCnt] += wAdultos[lwCnt];
                             wTotNi¤os[lwCnt]   += wNi¤os[lwCnt];
                           END;

                           wTotImporte += wImporte;
                         END;

        DataItemLink=Fecha=FIELD(Fecha),
                     Compa¤ia=FIELD(Compa¤ia),
                     Vuelo=FIELD(Vuelo),
                     Origen=FIELD(Origen),
                     Destino=FIELD(Destino);
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=18150;
            SectionHeight=423;
          }
          CONTROLS
          {
            { 1100253011;TextBox;3000 ;0    ;1200 ;423  ;HorzAlign=Left;
                                                         SourceExpr=Fecha }
            { 1100253023;TextBox;13050;0    ;1650 ;423  ;HorzAlign=Center;
                                                         DecimalPlaces=0:2;
                                                         SourceExpr=wAdultos[1] }
            { 1100253025;TextBox;14850;0    ;1650 ;423  ;HorzAlign=Center;
                                                         DecimalPlaces=0:2;
                                                         SourceExpr=wNi¤os[1] }
            { 1100253027;TextBox;16650;0    ;1500 ;423  ;HorzAlign=Right;
                                                         CaptionML=[ENU=Amount;
                                                                    ESP=Importe];
                                                         SourceExpr=wImporte }
            { 1100253010;TextBox;4350 ;0    ;1500 ;423  ;HorzAlign=Left;
                                                         SourceExpr=Compa¤ia }
            { 1100253014;TextBox;6000 ;0    ;1500 ;423  ;HorzAlign=Left;
                                                         SourceExpr=Vuelo }
            { 1100253016;TextBox;7650 ;0    ;1500 ;423  ;HorzAlign=Left;
                                                         SourceExpr=Origen }
            { 1100253018;TextBox;9300 ;0    ;1500 ;423  ;HorzAlign=Left;
                                                         SourceExpr=Destino }
          }
           }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=6710;
      Height=2310;
      CaptionML=[ENU=Rooming List diary;
                 ESP=Rooming List diario];
    }
    CONTROLS
    {
      { 1100253000;TextBox;3630 ;220  ;1700 ;440  ;InPage=-1;
                                                   CaptionML=[ENU=From Date;
                                                              ESP=Fecha Desde];
                                                   SourceExpr=wFechaDesde;
                                                   OnValidate=BEGIN
                                                                _ControlFechas;

                                                                IF DATE2DMY(wFechaDesde,1) = 1 THEN BEGIN
                                                                  wFechaHasta := CALCDATE('+<1M>-<1D>',wFechaDesde);
                                                                END;
                                                              END;
                                                               }
      { 1100253001;TextBox;3630 ;880  ;1700 ;440  ;CaptionML=[ENU=To Date;
                                                              ESP=Fecha Hasta];
                                                   SourceExpr=wFechaHasta;
                                                   OnValidate=BEGIN
                                                                _ControlFechas;
                                                              END;
                                                               }
      { 1100253002;Label  ;220  ;220  ;3300 ;440  ;ParentControl=1100253000;
                                                   InPage=-1 }
      { 1100253003;Label  ;220  ;880  ;3300 ;440  ;ParentControl=1100253001 }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      wFechaDesde@1100253000 : Date;
      wFechaHasta@1100253001 : Date;
      Text001@1100253002 : TextConst 'ENU="From Date  cant be later To Date ";ESP=La Fecha Desde No puede ser postior a Fecha Hasta';
      Text002@1100253003 : TextConst 'ENU=Must fill date period;ESP=Debe de rellenar el periodo de fechas';
      rEmpresa@1100253004 : Record 79;
      Text006@1100253005 : TextConst 'ENU=Page;ESP="P gina  "';
      rParA@1100253007 : Record 7009700;
      rParPer@1100253014 : Record 7009701;
      rTarf@1100253017 : Record 7009901;
      rPrec@1100253016 : Record 7009902;
      fNoms@1100253006 : Codeunit 7009702;
      wAdultos@1100253013 : ARRAY [2] OF Decimal;
      wNi¤os@1100253012 : ARRAY [2] OF Decimal;
      wImporte@1100253011 : Decimal;
      wTotAdultos@1100253010 : ARRAY [2] OF Decimal;
      wTotNi¤os@1100253009 : ARRAY [2] OF Decimal;
      wTotImporte@1100253008 : Decimal;
      wRango@1100253015 : Decimal;
      wEnc@1100253018 : Boolean;

    LOCAL PROCEDURE _ControlFechas@1100253003();
    BEGIN
      // _ControlFechas
      IF (wFechaDesde > wFechaHasta) AND (wFechaHasta <> 0D) THEN
        ERROR(Text001);
    END;

    LOCAL PROCEDURE _AplicaPrecioPax@1100217000();
    VAR
      lrResTrn@1100217001 : Record 7009744;
    BEGIN
      // wAdultos y wNi¤os tienen dos dimensiones: La primera corresponde a los transportados y la segunda a los aplicados/facturados
      CLEAR(wAdultos);
      CLEAR(wNi¤os);
      CLEAR(wImporte);

      CLEAR(lrResTrn);
      IF diVuelo."Entrada/Salida" = diVuelo."Entrada/Salida"::Entrada THEN BEGIN
        lrResTrn.SETCURRENTKEY("Fecha entrada",
                              "Compa¤ia entrada",
                              "Vuelo entrada",
                              "IATA origen entrada");
        lrResTrn.SETRANGE("Fecha entrada"      , diVuelo.Fecha);
        lrResTrn.SETRANGE("Compa¤ia entrada"   , diVuelo.Compa¤ia);
        lrResTrn.SETRANGE("Vuelo entrada"      , diVuelo.Vuelo);
        lrResTrn.SETRANGE("IATA origen entrada", diVuelo.Origen);
      END
      ELSE BEGIN
        lrResTrn.SETCURRENTKEY("Fecha salida",
                              "Compa¤ia salida",
                              "Vuelo salida",
                              "IATA destino salida");
        lrResTrn.SETRANGE("Fecha salida"       , diVuelo.Fecha);
        lrResTrn.SETRANGE("Compa¤ia salida"    , diVuelo.Compa¤ia);
        lrResTrn.SETRANGE("Vuelo salida"       , diVuelo.Vuelo);
        lrResTrn.SETRANGE("IATA destino salida", diVuelo.Destino);
      END;

      IF lrResTrn.FINDSET THEN BEGIN
        REPEAT
          CASE lrResTrn."Tipo Persona" OF
            rParPer."Codigo Adulto" :
            BEGIN
              wAdultos[1] += 1;
              IF wEnc THEN
                wAdultos[2] += 1;
            END;
            rParPer."Codigo Ni¤o" :
            BEGIN
              wNi¤os[1] += 1;

              IF wEnc THEN BEGIN
                IF (rTarf."Limite Edad Ni¤os" <> 0) THEN BEGIN
                  lrResTrn.TESTFIELD(Edad);
                  IF lrResTrn.Edad > rTarf."Limite Edad Ni¤os" THEN
                    wAdultos[2] += 1
                  ELSE
                    wNi¤os[2] += 1;
                END
                ELSE
                  wNi¤os[2] += 1;
              END;
            END;
          END;
        UNTIL lrResTrn.NEXT=0;
      END;
    END;

    LOCAL PROCEDURE _BuscaRangoPax@1100217001(VAR prPersV@1100217002 : Record 7009907);
    VAR
      lrVuel@1100217000 : Record 7009754;
      lrResTrn@1100217001 : Record 7009744;
    BEGIN
      // _BuscaRangoPax

      IF prPersV.FINDSET THEN
      BEGIN
        REPEAT
          CLEAR(lrVuel);
          IF lrVuel.GET(prPersV.Fecha, prPersV.Compa¤ia, prPersV.Vuelo, prPersV.Origen, prPersV.Destino) THEN
          BEGIN
            CLEAR(lrResTrn);
            IF lrVuel."Entrada/Salida" = lrVuel."Entrada/Salida"::Entrada THEN
            BEGIN
              lrResTrn.SETCURRENTKEY("Fecha entrada",
                                    "Compa¤ia entrada",
                                    "Vuelo entrada",
                                    "IATA origen entrada");
              lrResTrn.SETRANGE("Fecha entrada"      , prPersV.Fecha);
              lrResTrn.SETRANGE("Compa¤ia entrada"   , prPersV.Compa¤ia);
              lrResTrn.SETRANGE("Vuelo entrada"      , prPersV.Vuelo);
              lrResTrn.SETRANGE("IATA origen entrada", prPersV.Origen);
            END
            ELSE BEGIN
              lrResTrn.SETCURRENTKEY("Fecha salida",
                                    "Compa¤ia salida",
                                    "Vuelo salida",
                                    "IATA destino salida");
              lrResTrn.SETRANGE("Fecha salida"       , prPersV.Fecha);
              lrResTrn.SETRANGE("Compa¤ia salida"    , prPersV.Compa¤ia);
              lrResTrn.SETRANGE("Vuelo salida"       , prPersV.Vuelo);
              lrResTrn.SETRANGE("IATA destino salida", prPersV.Destino);
            END;

            IF lrResTrn.FINDSET THEN
            BEGIN
              REPEAT
                //-$001lrResTrn.CALCFIELDS(Personas);
                wRango += lrResTrn."N§ Personas"; //+$001
              UNTIL lrResTrn.NEXT = 0;
            END;

          END;
        UNTIL prPersV.NEXT = 0;
      END;
    END;

    PROCEDURE _BuscaRangoServicios@1100217002(VAR prPersV@1100217000 : Record 7009907);
    BEGIN
      IF prPersV.FINDSET THEN
        wRango := prPersV.COUNT;
    END;

    BEGIN
    {
      JPT 14/05/12 CNT-CAR-12004 / FLI-07 Airport Assitance Service

      $001 AJS 14042014 Las personas no se cuentan a partir de la tabla de Elementos a transportar

      $002 AJS 28042015 Correccion del caption del informes
    }
    END.
  }
  RDLDATA
  {
  }
}
