OBJECT Report 1198 Date Compress Resource Ledger
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=NAVW16.00.01;
  }
  PROPERTIES
  {
    Permissions=TableData 203=rimd,
                TableData 240=rimd,
                TableData 87=rimd,
                TableData 355=imd;
    CaptionML=[ENU=Date Compress Resource Ledger;
               ESP=Comprimir fechas mov. recurso];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  DimSelectionBuf.CompareDimText(
                    3,REPORT::"Date Compress Resource Ledger",'',RetainDimText,Text010);
                  ResLedgEntryFilter := COPYSTR("Res. Ledger Entry".GETFILTERS,1,MAXSTRLEN(DateComprReg.Filter));
                END;

  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table203;
        DataItemTableView=SORTING(Resource No.,Posting Date);
        OnPreDataItem=VAR
                        GLSetup@1000 : Record 98;
                      BEGIN
                        IF NOT
                          CONFIRM(
                            Text000 +
                            Text001 +
                            Text002,FALSE)
                        THEN
                          CurrReport.BREAK;

                        IF EntrdDateComprReg."Ending Date" = 0D THEN
                          ERROR(STRSUBSTNO(Text003,EntrdDateComprReg.FIELDCAPTION("Ending Date")));

                        Window.OPEN(
                          Text004 +
                          Text005 +
                          Text006 +
                          Text007 +
                          Text008);

                        SourceCodeSetup.GET;
                        SourceCodeSetup.TESTFIELD("Compress Res. Ledger");

                        SelectedDim.GetSelectedDim(
                          USERID,3,REPORT::"Date Compress Resource Ledger",'',TempSelectedDim);
                        GLSetup.GET;
                        Retain[5] :=
                          TempSelectedDim.GET(
                            USERID,3,REPORT::"Date Compress Resource Ledger",'',GLSetup."Global Dimension 1 Code");
                        Retain[6] :=
                          TempSelectedDim.GET(
                            USERID,3,REPORT::"Date Compress Resource Ledger",'',GLSetup."Global Dimension 2 Code");

                        NewResLedgEntry.LOCKTABLE;
                        ResReg.LOCKTABLE;
                        DateComprReg.LOCKTABLE;

                        IF ResLedgEntry2.FIND('+') THEN;
                        LastEntryNo := ResLedgEntry2."Entry No.";
                        SETRANGE("Entry No.",0,LastEntryNo);
                        SETRANGE("Posting Date",EntrdDateComprReg."Starting Date",EntrdDateComprReg."Ending Date");

                        InitRegisters;
                      END;

        OnAfterGetRecord=BEGIN
                           ResLedgEntry2 := "Res. Ledger Entry";
                           WITH ResLedgEntry2 DO BEGIN
                             SETCURRENTKEY("Resource No.","Posting Date");
                             COPYFILTERS("Res. Ledger Entry");
                             SETRANGE("Entry Type","Entry Type");
                             SETRANGE("Resource No.","Resource No.");
                             SETRANGE("Resource Group No.","Resource Group No.");
                             SETFILTER("Posting Date",DateComprMgt.GetDateFilter("Posting Date",EntrdDateComprReg,TRUE));

                             IF RetainNo(FIELDNO("Document No.")) THEN
                               SETRANGE("Document No.","Document No.");
                             IF RetainNo(FIELDNO("Work Type Code")) THEN
                               SETRANGE("Work Type Code","Work Type Code");
                             IF RetainNo(FIELDNO("Job No.")) THEN
                               SETRANGE("Job No.","Job No.");
                             IF RetainNo(FIELDNO("Unit of Measure Code")) THEN
                               SETRANGE("Unit of Measure Code","Unit of Measure Code");
                             IF RetainNo(FIELDNO("Global Dimension 1 Code")) THEN
                               SETRANGE("Global Dimension 1 Code","Global Dimension 1 Code");
                             IF RetainNo(FIELDNO("Global Dimension 2 Code")) THEN
                               SETRANGE("Global Dimension 2 Code","Global Dimension 2 Code");
                             IF RetainNo(FIELDNO(Chargeable)) THEN
                               SETRANGE(Chargeable,Chargeable);
                             IF RetainNo(FIELDNO("Source Type")) THEN
                               SETRANGE("Source Type","Source Type");
                             IF RetainNo(FIELDNO("Source No.")) THEN
                               SETRANGE("Source No.","Source No.");

                             IF Quantity >= 0 THEN
                               SETFILTER(Quantity,'>=0')
                             ELSE
                               SETFILTER(Quantity,'<0');

                             InitNewEntry(NewResLedgEntry);

                             DimBufMgt.CollectDimEntryNo(
                               TempSelectedDim,DATABASE::"Res. Ledger Entry","Entry No.",
                               0,FALSE,DimEntryNo);
                             ComprDimEntryNo := DimEntryNo;
                             SummarizeEntry(NewResLedgEntry,ResLedgEntry2);
                             WHILE NEXT <> 0 DO BEGIN
                               DimBufMgt.CollectDimEntryNo(
                                 TempSelectedDim,DATABASE::"Res. Ledger Entry","Entry No.",
                                 ComprDimEntryNo,TRUE,DimEntryNo);
                               IF DimEntryNo = ComprDimEntryNo THEN
                                 SummarizeEntry(NewResLedgEntry,ResLedgEntry2);
                             END;

                             InsertNewEntry(NewResLedgEntry,ComprDimEntryNo);

                             ComprCollectedEntries;
                           END;

                           IF DateComprReg."No. Records Deleted" >= NoOfDeleted + 10 THEN BEGIN
                             NoOfDeleted := DateComprReg."No. Records Deleted";
                             InsertRegisters(ResReg,DateComprReg);
                           END;
                         END;

        OnPostDataItem=BEGIN
                         IF DateComprReg."No. Records Deleted" > NoOfDeleted THEN
                           InsertRegisters(ResReg,DateComprReg);
                       END;

        ReqFilterFields=Entry Type,Resource No.,Resource Group No.;
      }
      SECTIONS
      {
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=11440;
      Height=4950;
      SaveValues=Yes;
      OnOpenForm=BEGIN
                   IF EntrdDateComprReg."Ending Date" = 0D THEN
                     EntrdDateComprReg."Ending Date" := TODAY;
                   IF EntrdResLedgEntry.Description = '' THEN
                     EntrdResLedgEntry.Description := Text009;

                   WITH "Res. Ledger Entry" DO BEGIN
                     InsertField(FIELDNO("Document No."),FIELDCAPTION("Document No."));
                     InsertField(FIELDNO("Work Type Code"),FIELDCAPTION("Work Type Code"));
                     InsertField(FIELDNO("Job No."),FIELDCAPTION("Job No."));
                     InsertField(FIELDNO("Unit of Measure Code"),FIELDCAPTION("Unit of Measure Code"));
                     InsertField(FIELDNO("Global Dimension 1 Code"),FIELDCAPTION("Global Dimension 1 Code"));
                     InsertField(FIELDNO("Global Dimension 2 Code"),FIELDCAPTION("Global Dimension 2 Code"));
                     InsertField(FIELDNO(Chargeable),FIELDCAPTION(Chargeable));
                     InsertField(FIELDNO("Source Type"),FIELDCAPTION("Source No."));
                     InsertField(FIELDNO("Source No."),FIELDCAPTION("Source No."));
                   END;

                   RetainDimText := DimSelectionBuf.GetDimSelectionText(3,REPORT::"Date Compress Resource Ledger",'');
                 END;

    }
    CONTROLS
    {
      { 1   ;TextBox      ;3410 ;0    ;1650 ;440  ;CaptionML=[ENU=Starting Date;
                                                              ESP=Fecha inicial];
                                                   SourceExpr=EntrdDateComprReg."Starting Date" }
      { 21  ;Label        ;0    ;0    ;3300 ;440  ;ParentControl=1 }
      { 2   ;TextBox      ;3410 ;550  ;1650 ;440  ;CaptionML=[ENU=Ending Date;
                                                              ESP=Fecha final];
                                                   SourceExpr=EntrdDateComprReg."Ending Date" }
      { 22  ;Label        ;0    ;550  ;3300 ;440  ;ParentControl=2 }
      { 3   ;TextBox      ;3410 ;1100 ;2750 ;440  ;CaptionML=[ENU=Period Length;
                                                              ESP=Longitud periodo];
                                                   OptionCaptionML=[ENU=Day,Week,Month,Quarter,Year,Period;
                                                                    ESP=D¡a,Semana,Mes,Trimestre,A¤o,Periodo];
                                                   OptionString=Day,Week,Month,Quarter,Year,Period;
                                                   SourceExpr=EntrdDateComprReg."Period Length" }
      { 23  ;Label        ;0    ;1100 ;3300 ;440  ;ParentControl=3 }
      { 4   ;TextBox      ;3410 ;1650 ;5500 ;440  ;CaptionML=[ENU=Posting Description;
                                                              ESP=Texto de registro];
                                                   SourceExpr=EntrdResLedgEntry.Description }
      { 24  ;Label        ;0    ;1650 ;3300 ;440  ;ParentControl=4 }
      { 5   ;CheckBox     ;3410 ;2310 ;3850 ;440  ;CaptionML=[ENU=Document No.;
                                                              ESP=N§ documento];
                                                   SourceExpr=Retain[1] }
      { 25  ;Label        ;0    ;2310 ;3300 ;440  ;ParentControl=5;
                                                   CaptionML=[ENU=Retain Field Contents;
                                                              ESP=Guardar contenido campo] }
      { 6   ;CheckBox     ;3410 ;2860 ;3850 ;440  ;CaptionML=[ENU=Work Type Code;
                                                              ESP=C¢d. tipo trabajo];
                                                   SourceExpr=Retain[2] }
      { 7   ;CheckBox     ;3410 ;3410 ;3850 ;440  ;CaptionML=[ENU=Job No.;
                                                              ESP=N§ proyecto];
                                                   SourceExpr=Retain[3] }
      { 10  ;CheckBox     ;3410 ;3960 ;3850 ;440  ;CaptionML=[ENU=Unit of Measure Code;
                                                              ESP=C¢d. unidad medida];
                                                   SourceExpr=Retain[4] }
      { 11  ;CheckBox     ;7370 ;3410 ;3850 ;440  ;CaptionML=[ENU=Chargeable;
                                                              ESP=Facturable];
                                                   SourceExpr=Retain[7] }
      { 12  ;TextBox      ;3410 ;4510 ;5500 ;440  ;Editable=No;
                                                   PermanentAssist=Yes;
                                                   CaptionML=[ENU=Retain Dimensions;
                                                              ESP=Retener dimensiones];
                                                   SourceExpr=RetainDimText;
                                                   OnAssistEdit=BEGIN
                                                                  DimSelectionBuf.SetDimSelectionMultiple(3,REPORT::"Date Compress Resource Ledger",RetainDimText);
                                                                END;
                                                                 }
      { 13  ;Label        ;0    ;4510 ;3300 ;440  ;ParentControl=12 }
      { 8   ;CheckBox     ;7370 ;2310 ;3850 ;440  ;CaptionML=[ENU=Source Type;
                                                              ESP=Tipo procedencia mov.];
                                                   SourceExpr=Retain[8] }
      { 9   ;CheckBox     ;7370 ;2860 ;3850 ;440  ;CaptionML=[ENU=Source No.;
                                                              ESP=C¢d. procedencia mov.];
                                                   SourceExpr=Retain[9] }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   IF EntrdDateComprReg."Ending Date" = 0D THEN
                     EntrdDateComprReg."Ending Date" := TODAY;
                   IF EntrdResLedgEntry.Description = '' THEN
                     EntrdResLedgEntry.Description := Text009;

                   WITH "Res. Ledger Entry" DO BEGIN
                     InsertField(FIELDNO("Document No."),FIELDCAPTION("Document No."));
                     InsertField(FIELDNO("Work Type Code"),FIELDCAPTION("Work Type Code"));
                     InsertField(FIELDNO("Job No."),FIELDCAPTION("Job No."));
                     InsertField(FIELDNO("Unit of Measure Code"),FIELDCAPTION("Unit of Measure Code"));
                     InsertField(FIELDNO("Global Dimension 1 Code"),FIELDCAPTION("Global Dimension 1 Code"));
                     InsertField(FIELDNO("Global Dimension 2 Code"),FIELDCAPTION("Global Dimension 2 Code"));
                     InsertField(FIELDNO(Chargeable),FIELDCAPTION(Chargeable));
                     InsertField(FIELDNO("Source Type"),FIELDCAPTION("Source No."));
                     InsertField(FIELDNO("Source No."),FIELDCAPTION("Source No."));
                   END;

                   RetainDimText := DimSelectionBuf.GetDimSelectionText(3,REPORT::"Date Compress Resource Ledger",'');
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             ESP=Opciones] }

      { 1   ;2   ;Field     ;
                  CaptionML=[ENU=Starting Date;
                             ESP=Fecha inicial];
                  SourceExpr=EntrdDateComprReg."Starting Date" }

      { 2   ;2   ;Field     ;
                  CaptionML=[ENU=Ending Date;
                             ESP=Fecha final];
                  SourceExpr=EntrdDateComprReg."Ending Date" }

      { 3   ;2   ;Field     ;
                  CaptionML=[ENU=Period Length;
                             ESP=Longitud periodo];
                  OptionCaptionML=[ENU=Day,Week,Month,Quarter,Year,Period;
                                   ESP=D¡a,Semana,Mes,Trimestre,A¤o,Periodo];
                  SourceExpr=EntrdDateComprReg."Period Length" }

      { 4   ;2   ;Field     ;
                  CaptionML=[ENU=Posting Description;
                             ESP=Texto de registro];
                  SourceExpr=EntrdResLedgEntry.Description }

      { 1907651001;2;Group  ;
                  CaptionML=[ENU=Retain Field Contents;
                             ESP=Guardar contenido campo] }

      { 5   ;3   ;Field     ;
                  CaptionML=[ENU=Document No.;
                             ESP=N§ documento];
                  SourceExpr=Retain[1] }

      { 6   ;3   ;Field     ;
                  CaptionML=[ENU=Work Type Code;
                             ESP=C¢d. tipo trabajo];
                  SourceExpr=Retain[2] }

      { 7   ;3   ;Field     ;
                  CaptionML=[ENU=Job No.;
                             ESP=N§ proyecto];
                  SourceExpr=Retain[3] }

      { 10  ;3   ;Field     ;
                  CaptionML=[ENU=Unit of Measure Code;
                             ESP=C¢d. unidad medida];
                  SourceExpr=Retain[4] }

      { 8   ;3   ;Field     ;
                  CaptionML=[ENU=Source Type;
                             ESP=Tipo procedencia mov.];
                  SourceExpr=Retain[8] }

      { 9   ;3   ;Field     ;
                  CaptionML=[ENU=Source No.;
                             ESP=C¢d. procedencia mov.];
                  SourceExpr=Retain[9] }

      { 11  ;3   ;Field     ;
                  CaptionML=[ENU=Chargeable;
                             ESP=Facturable];
                  SourceExpr=Retain[7] }

      { 12  ;2   ;Field     ;
                  CaptionML=[ENU=Retain Dimensions;
                             ESP=Retener dimensiones];
                  SourceExpr=RetainDimText;
                  Editable=FALSE;
                  OnAssistEdit=BEGIN
                                 DimSelectionBuf.SetDimSelectionMultiple(3,REPORT::"Date Compress Resource Ledger",RetainDimText);
                               END;
                                }

    }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=This batch job deletes entries.;ESP=Este proceso borra movimientos.';
      Text001@1001 : TextConst 'ENU=Therefore, it is important that you make a backup of the database before you run the batch job.\\;ESP=Es muy importante realizar una copia de seguridad de la base de datos antes de ejecutar este proceso.\\';
      Text002@1002 : TextConst 'ENU=Do you want to date compress the entries?;ESP=¨Confirma que desea comprimir los movimientos?';
      Text003@1003 : TextConst 'ENU=%1 must be specified.;ESP=Se debe indicar %1.';
      Text004@1004 : TextConst 'ENU=Date compressing resource ledger entries...\\;ESP=Comprimiendo por fechas movs. recurso...\\';
      Text005@1005 : TextConst 'ENU=Resource No.         #1##########\;ESP=N§ recurso           #1##########\';
      Text006@1006 : TextConst 'ENU=Date                 #2######\\;ESP=Fecha                #2######\\';
      Text007@1007 : TextConst 'ENU=No. of new entries   #3######\;ESP=Nuevo n§ movs.       #3######\';
      Text008@1008 : TextConst 'ENU=No. of entries del.  #4######;ESP=N§ movs. borrados    #4######';
      Text009@1009 : TextConst 'ENU=Date Compressed;ESP=Comprimido por fechas';
      Text010@1010 : TextConst 'ENU=Retain Dimensions;ESP=Retener dimensiones';
      SourceCodeSetup@1011 : Record 242;
      DateComprReg@1012 : Record 87;
      EntrdDateComprReg@1013 : Record 87;
      ResReg@1014 : Record 240;
      EntrdResLedgEntry@1015 : Record 203;
      NewResLedgEntry@1016 : Record 203;
      ResLedgEntry2@1017 : Record 203;
      SelectedDim@1018 : Record 369;
      TempSelectedDim@1019 : TEMPORARY Record 369;
      DimSelectionBuf@1020 : Record 368;
      DateComprMgt@1021 : Codeunit 356;
      DimBufMgt@1022 : Codeunit 411;
      DimMgt@1023 : Codeunit 408;
      Window@1024 : Dialog;
      ResLedgEntryFilter@1025 : Text[250];
      NoOfFields@1026 : Integer;
      Retain@1027 : ARRAY [10] OF Boolean;
      FieldNumber@1028 : ARRAY [10] OF Integer;
      FieldNameArray@1029 : ARRAY [10] OF Text[100];
      LastEntryNo@1030 : Integer;
      NoOfDeleted@1031 : Integer;
      ResRegExists@1032 : Boolean;
      i@1033 : Integer;
      ComprDimEntryNo@1034 : Integer;
      DimEntryNo@1035 : Integer;
      RetainDimText@1036 : Text[250];

    LOCAL PROCEDURE InitRegisters@4();
    BEGIN
      IF ResReg.FIND('+') THEN;
      ResReg.INIT;
      ResReg."No." := ResReg."No." + 1;
      ResReg."Creation Date" := TODAY;
      ResReg."Source Code" := SourceCodeSetup."Compress Res. Ledger";
      ResReg."User ID" := USERID;
      ResReg."From Entry No." := LastEntryNo + 1;

      IF DateComprReg.FIND('+') THEN;
      DateComprReg.INIT;
      DateComprReg."No." := DateComprReg."No." + 1;
      DateComprReg."Table ID" := DATABASE::"Res. Ledger Entry";
      DateComprReg."Creation Date" := TODAY;
      DateComprReg."Starting Date" := EntrdDateComprReg."Starting Date";
      DateComprReg."Ending Date" := EntrdDateComprReg."Ending Date";
      DateComprReg."Period Length" := EntrdDateComprReg."Period Length";
      FOR i := 1 TO NoOfFields DO
        IF Retain[i] THEN
          DateComprReg."Retain Field Contents" :=
            COPYSTR(
              DateComprReg."Retain Field Contents" + ',' + FieldNameArray[i],1,
              MAXSTRLEN(DateComprReg."Retain Field Contents"));
      DateComprReg."Retain Field Contents" := COPYSTR(DateComprReg."Retain Field Contents",2);
      DateComprReg.Filter := ResLedgEntryFilter;
      DateComprReg."Register No." := ResReg."No.";
      DateComprReg."Source Code" := SourceCodeSetup."Compress Res. Ledger";
      DateComprReg."User ID" := USERID;

      ResRegExists := FALSE;
      NoOfDeleted := 0;
    END;

    LOCAL PROCEDURE InsertRegisters@1(VAR ResReg@1000 : Record 240;VAR DateComprReg@1001 : Record 87);
    BEGIN
      ResReg."To Entry No." := NewResLedgEntry."Entry No.";

      IF ResRegExists THEN BEGIN
        ResReg.MODIFY;
        DateComprReg.MODIFY;
      END ELSE BEGIN
        ResReg.INSERT;
        DateComprReg.INSERT;
        ResRegExists := TRUE;
      END;
      COMMIT;

      NewResLedgEntry.LOCKTABLE;
      ResReg.LOCKTABLE;
      DateComprReg.LOCKTABLE;

      ResLedgEntry2.RESET;
      IF ResLedgEntry2.FIND('+') THEN;
      IF LastEntryNo <> ResLedgEntry2."Entry No." THEN BEGIN
        LastEntryNo := ResLedgEntry2."Entry No.";
        InitRegisters;
      END;
    END;

    LOCAL PROCEDURE InsertField@2(Number@1000 : Integer;Name@1001 : Text[100]);
    BEGIN
      NoOfFields := NoOfFields + 1;
      FieldNumber[NoOfFields] := Number;
      FieldNameArray[NoOfFields] := Name;
    END;

    LOCAL PROCEDURE RetainNo@3(Number@1000 : Integer) : Boolean;
    BEGIN
      EXIT(Retain[Index(Number)]);
    END;

    LOCAL PROCEDURE Index@6(Number@1000 : Integer) : Integer;
    BEGIN
      FOR i := 1 TO NoOfFields DO
        IF Number = FieldNumber[i] THEN
          EXIT(i);
    END;

    PROCEDURE SummarizeEntry@5(VAR NewResLedgEntry@1000 : Record 203;ResLedgEntry@1001 : Record 203);
    VAR
      LedgEntryDim@1002 : Record 355;
    BEGIN
      WITH ResLedgEntry DO BEGIN
        NewResLedgEntry.Quantity := NewResLedgEntry.Quantity + Quantity;
        NewResLedgEntry."Quantity (Base)" := NewResLedgEntry."Quantity (Base)" + "Quantity (Base)";
        NewResLedgEntry."Total Cost" := NewResLedgEntry."Total Cost" + "Total Cost";
        NewResLedgEntry."Total Price" := NewResLedgEntry."Total Price" + "Total Price";
        DELETE;
        LedgEntryDim.RESET;
        LedgEntryDim.SETRANGE("Table ID",DATABASE::"Res. Ledger Entry");
        LedgEntryDim.SETRANGE("Entry No.","Entry No.");
        LedgEntryDim.DELETEALL;
        DateComprReg."No. Records Deleted" := DateComprReg."No. Records Deleted" + 1;
        Window.UPDATE(4,DateComprReg."No. Records Deleted");
      END;
    END;

    PROCEDURE ComprCollectedEntries@12();
    VAR
      ResLedgEntry@1000 : Record 203;
      OldDimEntryNo@1001 : Integer;
      Found@1002 : Boolean;
      ResLedgEntryNo@1003 : Integer;
    BEGIN
      OldDimEntryNo := 0;
      IF DimBufMgt.FindFirstDimEntryNo(DimEntryNo,ResLedgEntryNo) THEN BEGIN
        InitNewEntry(NewResLedgEntry);
        REPEAT
          ResLedgEntry.GET(ResLedgEntryNo);
          SummarizeEntry(NewResLedgEntry,ResLedgEntry);
          OldDimEntryNo := DimEntryNo;
          Found := DimBufMgt.NextDimEntryNo(DimEntryNo,ResLedgEntryNo);
          IF (OldDimEntryNo <> DimEntryNo) OR NOT Found THEN BEGIN
            InsertNewEntry(NewResLedgEntry,OldDimEntryNo);
            IF Found THEN
              InitNewEntry(NewResLedgEntry);
          END;
          OldDimEntryNo := DimEntryNo;
        UNTIL NOT Found;
      END;
      DimBufMgt.DeleteAllDimEntryNo;
    END;

    PROCEDURE InitNewEntry@7(VAR NewResLedgEntry@1000 : Record 203);
    BEGIN
      LastEntryNo := LastEntryNo + 1;

      WITH ResLedgEntry2 DO BEGIN
        NewResLedgEntry.INIT;
        NewResLedgEntry."Entry No." := LastEntryNo;
        NewResLedgEntry."Entry Type" := "Entry Type";
        NewResLedgEntry."Resource No." := "Resource No.";
        NewResLedgEntry."Resource Group No." := "Resource Group No.";
        NewResLedgEntry."Posting Date" := GETRANGEMIN("Posting Date");
        NewResLedgEntry.Description := EntrdResLedgEntry.Description;
        NewResLedgEntry."Source Code" := SourceCodeSetup."Compress Res. Ledger";
        NewResLedgEntry."User ID" := USERID;

        IF RetainNo(FIELDNO("Document No.")) THEN
          NewResLedgEntry."Document No." := "Document No.";
        IF RetainNo(FIELDNO("Work Type Code")) THEN
          NewResLedgEntry."Work Type Code" := "Work Type Code";
        IF RetainNo(FIELDNO("Job No.")) THEN
          NewResLedgEntry."Job No." := "Job No.";
        IF RetainNo(FIELDNO("Unit of Measure Code")) THEN
          NewResLedgEntry."Unit of Measure Code" := "Unit of Measure Code";
        IF RetainNo(FIELDNO("Global Dimension 1 Code")) THEN
          NewResLedgEntry."Global Dimension 1 Code" := "Global Dimension 1 Code";
        IF RetainNo(FIELDNO("Global Dimension 2 Code")) THEN
          NewResLedgEntry."Global Dimension 2 Code" := "Global Dimension 2 Code";
        IF RetainNo(FIELDNO(Chargeable)) THEN
          NewResLedgEntry.Chargeable := Chargeable;

        Window.UPDATE(1,NewResLedgEntry."Resource No.");
        Window.UPDATE(2,NewResLedgEntry."Posting Date");
        DateComprReg."No. of New Records" := DateComprReg."No. of New Records" + 1;
        Window.UPDATE(3,DateComprReg."No. of New Records");
      END;
    END;

    PROCEDURE InsertNewEntry@23(VAR NewResLedgEntry@1000 : Record 203;DimEntryNo@1001 : Integer);
    VAR
      TempDimBuf@1002 : TEMPORARY Record 360;
    BEGIN
      NewResLedgEntry.INSERT;
      TempDimBuf.DELETEALL;
      DimBufMgt.GetDimensions(DimEntryNo,TempDimBuf);
      DimMgt.MoveDimBufToLedgEntryDim(
        TempDimBuf,DATABASE::"Res. Ledger Entry",NewResLedgEntry."Entry No.");
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}
