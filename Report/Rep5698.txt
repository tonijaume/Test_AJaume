OBJECT Report 5698 Date Compress Maint. Ledger
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=NAVW16.00.01;
  }
  PROPERTIES
  {
    Permissions=TableData 87=rimd,
                TableData 355=imd,
                TableData 5617=rimd,
                TableData 5625=rimd;
    CaptionML=[ENU=Date Compress Maint. Ledger;
               ESP=Comprimir fechas movs. mnto];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  DimSelectionBuf.CompareDimText(
                    3,REPORT::"Date Compress Maint. Ledger",'',RetainDimText,Text010);

                  MaintenanceLedgEntryFilter := COPYSTR("Maintenance Ledger Entry".GETFILTERS,1,MAXSTRLEN(DateComprReg.Filter));
                END;

  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table5625;
        DataItemTableView=SORTING(FA No.,Depreciation Book Code,FA Posting Date);
        OnPreDataItem=VAR
                        GLSetup@1000 : Record 98;
                      BEGIN
                        IF NOT
                           CONFIRM(
                             Text000 +
                             Text001 +
                             Text002,FALSE)
                        THEN
                          CurrReport.BREAK;

                        IF EntrdDateComprReg."Ending Date" = 0D THEN
                          ERROR(STRSUBSTNO(Text003,EntrdDateComprReg.FIELDCAPTION("Ending Date")));

                        Window.OPEN(
                          Text004 +
                          Text005 +
                          Text006 +
                          Text007 +
                          Text008);

                        SourceCodeSetup.GET;
                        SourceCodeSetup.TESTFIELD("Compress Maintenance Ledger");

                        SelectedDim.GetSelectedDim(
                          USERID,3,REPORT::"Date Compress Maint. Ledger",'',TempSelectedDim);
                        GLSetup.GET;
                        Retain[4] :=
                          TempSelectedDim.GET(
                            USERID,3,REPORT::"Date Compress Maint. Ledger",'',GLSetup."Global Dimension 1 Code");
                        Retain[5] :=
                          TempSelectedDim.GET(
                            USERID,3,REPORT::"Date Compress Maint. Ledger",'',GLSetup."Global Dimension 2 Code");

                        NewMaintenanceLedgEntry.LOCKTABLE;
                        FAReg.LOCKTABLE;
                        DateComprReg.LOCKTABLE;

                        IF MaintenanceLedgEntry2.FIND('+') THEN;
                        LastEntryNo := MaintenanceLedgEntry2."Entry No.";
                        SETRANGE("Entry No.",0,LastEntryNo);
                        SETRANGE("FA Posting Date",EntrdDateComprReg."Starting Date",EntrdDateComprReg."Ending Date");

                        InitRegisters;
                      END;

        OnAfterGetRecord=BEGIN
                           MaintenanceLedgEntry2 := "Maintenance Ledger Entry";
                           WITH MaintenanceLedgEntry2 DO BEGIN
                             SETCURRENTKEY("FA No.","Depreciation Book Code","FA Posting Date");
                             COPYFILTERS("Maintenance Ledger Entry");

                             SETRANGE("FA No.","FA No.");
                             SETRANGE("Depreciation Book Code","Depreciation Book Code");
                             SETRANGE("FA Posting Group","FA Posting Group");
                             SETRANGE("Document Type","Document Type");

                             SETFILTER("FA Posting Date",DateComprMgt.GetDateFilter("FA Posting Date",EntrdDateComprReg,TRUE));

                             IF RetainNo(FIELDNO("Document No.")) THEN
                               SETRANGE("Document No.","Document No.");
                             IF RetainNo(FIELDNO("Maintenance Code")) THEN
                               SETRANGE("Maintenance Code","Maintenance Code");
                             IF RetainNo(FIELDNO("Index Entry")) THEN
                               SETRANGE("Index Entry","Index Entry");
                             IF RetainNo(FIELDNO("Global Dimension 1 Code")) THEN
                               SETRANGE("Global Dimension 1 Code","Global Dimension 1 Code");
                             IF RetainNo(FIELDNO("Global Dimension 2 Code")) THEN
                               SETRANGE("Global Dimension 2 Code","Global Dimension 2 Code");
                             IF Quantity >= 0 THEN
                               SETFILTER(Quantity,'>=0')
                             ELSE
                               SETFILTER(Quantity,'<0');

                             InitNewEntry(NewMaintenanceLedgEntry);

                             DimBufMgt.CollectDimEntryNo(
                               TempSelectedDim,DATABASE::"Maintenance Ledger Entry","Entry No.",
                               0,FALSE,DimEntryNo);
                             ComprDimEntryNo := DimEntryNo;
                             SummarizeEntry(NewMaintenanceLedgEntry,MaintenanceLedgEntry2);
                             WHILE NEXT <> 0 DO BEGIN
                               DimBufMgt.CollectDimEntryNo(
                                 TempSelectedDim,DATABASE::"Maintenance Ledger Entry","Entry No.",
                                 ComprDimEntryNo,TRUE,DimEntryNo);
                               IF DimEntryNo = ComprDimEntryNo THEN
                                 SummarizeEntry(NewMaintenanceLedgEntry,MaintenanceLedgEntry2);
                             END;

                             InsertNewEntry(NewMaintenanceLedgEntry,ComprDimEntryNo);

                             ComprCollectedEntries;
                           END;

                           IF DateComprReg."No. Records Deleted" >= NoOfDeleted + 10 THEN BEGIN
                             NoOfDeleted := DateComprReg."No. Records Deleted";
                             InsertRegisters(FAReg,DateComprReg);
                           END;
                         END;

        OnPostDataItem=BEGIN
                         IF DateComprReg."No. Records Deleted" > NoOfDeleted THEN
                           InsertRegisters(FAReg,DateComprReg);
                       END;

        ReqFilterFields=FA No.,Depreciation Book Code;
      }
      SECTIONS
      {
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=8910;
      Height=4510;
      SaveValues=Yes;
      OnOpenForm=BEGIN
                   IF EntrdDateComprReg."Ending Date" = 0D THEN
                     EntrdDateComprReg."Ending Date" := TODAY;
                   IF EntrdMaintenanceLedgEntry.Description = '' THEN
                     EntrdMaintenanceLedgEntry.Description := Text009;

                   WITH "Maintenance Ledger Entry" DO BEGIN
                     InsertField(FIELDNO("Document No."),FIELDCAPTION("Document No."));
                     InsertField(FIELDNO("Maintenance Code"),FIELDCAPTION("Maintenance Code"));
                     InsertField(FIELDNO("Index Entry"),FIELDCAPTION("Index Entry"));
                     InsertField(FIELDNO("Global Dimension 1 Code"),FIELDCAPTION("Global Dimension 1 Code"));
                     InsertField(FIELDNO("Global Dimension 2 Code"),FIELDCAPTION("Global Dimension 2 Code"));
                   END;

                   RetainDimText := DimSelectionBuf.GetDimSelectionText(3,REPORT::"Date Compress Maint. Ledger",'');
                 END;

    }
    CONTROLS
    {
      { 1   ;TextBox      ;3410 ;0    ;1650 ;440  ;CaptionML=[ENU=Starting Date;
                                                              ESP=Fecha inicial];
                                                   SourceExpr=EntrdDateComprReg."Starting Date" }
      { 21  ;Label        ;0    ;0    ;3300 ;440  ;ParentControl=1 }
      { 2   ;TextBox      ;3410 ;550  ;1650 ;440  ;CaptionML=[ENU=Ending Date;
                                                              ESP=Fecha final];
                                                   SourceExpr=EntrdDateComprReg."Ending Date" }
      { 22  ;Label        ;0    ;550  ;3300 ;440  ;ParentControl=2 }
      { 3   ;TextBox      ;3410 ;1100 ;2750 ;440  ;CaptionML=[ENU=Period Length;
                                                              ESP=Longitud periodo];
                                                   OptionCaptionML=[ENU=Day,Week,Month,Quarter,Year,Period;
                                                                    ESP=D¡a,Semana,Mes,Trimestre,A¤o,Periodo];
                                                   OptionString=Day,Week,Month,Quarter,Year,Period;
                                                   SourceExpr=EntrdDateComprReg."Period Length" }
      { 23  ;Label        ;0    ;1100 ;3300 ;440  ;ParentControl=3 }
      { 4   ;TextBox      ;3410 ;1650 ;5500 ;440  ;CaptionML=[ENU=Posting Description;
                                                              ESP=Texto de registro];
                                                   SourceExpr=EntrdMaintenanceLedgEntry.Description }
      { 24  ;Label        ;0    ;1650 ;3300 ;440  ;ParentControl=4 }
      { 5   ;CheckBox     ;3410 ;2310 ;3850 ;440  ;CaptionML=[ENU=Document No.;
                                                              ESP=N§ documento];
                                                   SourceExpr=Retain[1] }
      { 25  ;Label        ;0    ;2310 ;3300 ;440  ;ParentControl=5;
                                                   CaptionML=[ENU=Retain Field Contents;
                                                              ESP=Guardar contenido campo] }
      { 6   ;CheckBox     ;3410 ;2860 ;3850 ;440  ;CaptionML=[ENU=Maintenance Code;
                                                              ESP=C¢d. mantenimiento];
                                                   SourceExpr=Retain[2] }
      { 7   ;CheckBox     ;3410 ;3410 ;3850 ;440  ;CaptionML=[ENU=Index Entry;
                                                              ESP=Mov. valor ajuste];
                                                   SourceExpr=Retain[3] }
      { 8   ;Label        ;0    ;4070 ;3300 ;440  ;ParentControl=9 }
      { 9   ;TextBox      ;3410 ;4070 ;5500 ;440  ;Editable=No;
                                                   PermanentAssist=Yes;
                                                   CaptionML=[ENU=Retain Dimensions;
                                                              ESP=Retener dimensiones];
                                                   SourceExpr=RetainDimText;
                                                   OnAssistEdit=BEGIN
                                                                  DimSelectionBuf.SetDimSelectionMultiple(3,REPORT::"Date Compress Maint. Ledger",RetainDimText);
                                                                END;
                                                                 }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   IF EntrdDateComprReg."Ending Date" = 0D THEN
                     EntrdDateComprReg."Ending Date" := TODAY;
                   IF EntrdMaintenanceLedgEntry.Description = '' THEN
                     EntrdMaintenanceLedgEntry.Description := Text009;

                   WITH "Maintenance Ledger Entry" DO BEGIN
                     InsertField(FIELDNO("Document No."),FIELDCAPTION("Document No."));
                     InsertField(FIELDNO("Maintenance Code"),FIELDCAPTION("Maintenance Code"));
                     InsertField(FIELDNO("Index Entry"),FIELDCAPTION("Index Entry"));
                     InsertField(FIELDNO("Global Dimension 1 Code"),FIELDCAPTION("Global Dimension 1 Code"));
                     InsertField(FIELDNO("Global Dimension 2 Code"),FIELDCAPTION("Global Dimension 2 Code"));
                   END;

                   RetainDimText := DimSelectionBuf.GetDimSelectionText(3,REPORT::"Date Compress Maint. Ledger",'');
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             ESP=Opciones] }

      { 1   ;2   ;Field     ;
                  CaptionML=[ENU=Starting Date;
                             ESP=Fecha inicial];
                  SourceExpr=EntrdDateComprReg."Starting Date" }

      { 2   ;2   ;Field     ;
                  CaptionML=[ENU=Ending Date;
                             ESP=Fecha final];
                  SourceExpr=EntrdDateComprReg."Ending Date" }

      { 3   ;2   ;Field     ;
                  CaptionML=[ENU=Period Length;
                             ESP=Longitud periodo];
                  OptionCaptionML=[ENU=Day,Week,Month,Quarter,Year,Period;
                                   ESP=D¡a,Semana,Mes,Trimestre,A¤o,Periodo];
                  SourceExpr=EntrdDateComprReg."Period Length" }

      { 4   ;2   ;Field     ;
                  CaptionML=[ENU=Posting Description;
                             ESP=Texto de registro];
                  SourceExpr=EntrdMaintenanceLedgEntry.Description }

      { 1907651001;2;Group  ;
                  CaptionML=[ENU=Retain Field Contents;
                             ESP=Guardar contenido campo] }

      { 5   ;3   ;Field     ;
                  CaptionML=[ENU=Document No.;
                             ESP=N§ documento];
                  SourceExpr=Retain[1] }

      { 6   ;3   ;Field     ;
                  CaptionML=[ENU=Maintenance Code;
                             ESP=C¢d. mantenimiento];
                  SourceExpr=Retain[2] }

      { 7   ;3   ;Field     ;
                  CaptionML=[ENU=Index Entry;
                             ESP=Mov. valor ajuste];
                  SourceExpr=Retain[3] }

      { 9   ;2   ;Field     ;
                  CaptionML=[ENU=Retain Dimensions;
                             ESP=Retener dimensiones];
                  SourceExpr=RetainDimText;
                  Editable=FALSE;
                  OnAssistEdit=BEGIN
                                 DimSelectionBuf.SetDimSelectionMultiple(3,REPORT::"Date Compress Maint. Ledger",RetainDimText);
                               END;
                                }

    }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=This batch job deletes entries.;ESP=Este proceso borra movimientos.';
      Text001@1001 : TextConst 'ENU=Therefore, it is important that you make a backup of the database before you run the batch job.\\;ESP=Es muy importante realizar una copia de seguridad de la base de datos antes de ejecutar este proceso.\\';
      Text002@1002 : TextConst 'ENU=Do you want to date compress the entries?;ESP=¨Confirma que desea comprimir los movimientos?';
      Text003@1003 : TextConst 'ENU=%1 must be specified.;ESP=Se debe indicar %1.';
      Text004@1004 : TextConst 'ENU=Date compressing maintenance ledger entries...\\;ESP=Comprimiendo por fechas movs. mantenimiento...\\';
      Text005@1005 : TextConst 'ENU=FA No.               #1##########\;ESP=A/F N§               #1##########\';
      Text006@1006 : TextConst 'ENU=Date                 #2######\\;ESP=Fecha                #2######\\';
      Text007@1007 : TextConst 'ENU=No. of new entries   #3######\;ESP=Nuevo n§ movs.       #3######\';
      Text008@1008 : TextConst 'ENU=No. of entries del.  #4######;ESP=N§ movs. borrados    #4######';
      Text009@1009 : TextConst 'ENU=Date Compressed;ESP=Comprimido por fechas';
      Text010@1010 : TextConst 'ENU=Retain Dimensions;ESP=Retener dimensiones';
      SourceCodeSetup@1011 : Record 242;
      DateComprReg@1012 : Record 87;
      EntrdDateComprReg@1013 : Record 87;
      FAReg@1014 : Record 5617;
      EntrdMaintenanceLedgEntry@1015 : Record 5625;
      NewMaintenanceLedgEntry@1016 : Record 5625;
      MaintenanceLedgEntry2@1017 : Record 5625;
      SelectedDim@1018 : Record 369;
      TempSelectedDim@1019 : TEMPORARY Record 369;
      DimSelectionBuf@1020 : Record 368;
      DateComprMgt@1021 : Codeunit 356;
      DimBufMgt@1022 : Codeunit 411;
      DimMgt@1023 : Codeunit 408;
      FAInsertLedgEntry@1024 : Codeunit 5600;
      Window@1025 : Dialog;
      MaintenanceLedgEntryFilter@1026 : Text[250];
      NoOfFields@1027 : Integer;
      Retain@1028 : ARRAY [10] OF Boolean;
      FieldNumber@1029 : ARRAY [10] OF Integer;
      FieldNameArray@1030 : ARRAY [10] OF Text[100];
      LastEntryNo@1031 : Integer;
      NoOfDeleted@1032 : Integer;
      FARegExists@1033 : Boolean;
      i@1034 : Integer;
      ComprDimEntryNo@1035 : Integer;
      DimEntryNo@1036 : Integer;
      RetainDimText@1037 : Text[250];

    LOCAL PROCEDURE InitRegisters@4();
    BEGIN
      IF FAReg.FIND('+') THEN;
      FAReg.INIT;
      FAReg."No." := FAReg."No." + 1;
      FAReg."Creation Date" := TODAY;
      FAReg."Journal Type" := FAReg."Journal Type"::"Fixed Asset";
      FAReg."Source Code" := SourceCodeSetup."Compress Maintenance Ledger";
      FAReg."User ID" := USERID;
      FAReg."From Maintenance Entry No." := LastEntryNo + 1;

      IF DateComprReg.FIND('+') THEN;
      DateComprReg.INIT;
      DateComprReg."No." := DateComprReg."No." + 1;
      DateComprReg."Table ID" := DATABASE::"Maintenance Ledger Entry";
      DateComprReg."Creation Date" := TODAY;
      DateComprReg."Starting Date" := EntrdDateComprReg."Starting Date";
      DateComprReg."Ending Date" := EntrdDateComprReg."Ending Date";
      DateComprReg."Period Length" := EntrdDateComprReg."Period Length";
      FOR i := 1 TO NoOfFields DO
        IF Retain[i] THEN
          DateComprReg."Retain Field Contents" :=
            COPYSTR(
              DateComprReg."Retain Field Contents" + ',' + FieldNameArray[i],1,
              MAXSTRLEN(DateComprReg."Retain Field Contents"));
      DateComprReg."Retain Field Contents" := COPYSTR(DateComprReg."Retain Field Contents",2);
      DateComprReg.Filter := MaintenanceLedgEntryFilter;
      DateComprReg."Register No." := FAReg."No.";
      DateComprReg."Source Code" := SourceCodeSetup."Compress Maintenance Ledger";
      DateComprReg."User ID" := USERID;

      FARegExists := FALSE;
      NoOfDeleted := 0;
    END;

    LOCAL PROCEDURE InsertRegisters@1(VAR FAReg@1000 : Record 5617;VAR DateComprReg@1001 : Record 87);
    VAR
      FAReg2@1002 : Record 5617;
    BEGIN
      FAReg."To Maintenance Entry No.":= NewMaintenanceLedgEntry."Entry No.";

      IF FARegExists THEN BEGIN
        FAReg.MODIFY;
        DateComprReg.MODIFY;
      END ELSE BEGIN
        FAReg.INSERT;
        DateComprReg.INSERT;
        FARegExists := TRUE;
      END;

      COMMIT;

      NewMaintenanceLedgEntry.LOCKTABLE;
      FAReg.LOCKTABLE;
      DateComprReg.LOCKTABLE;

      MaintenanceLedgEntry2.RESET;
      IF MaintenanceLedgEntry2.FIND('+') THEN;
      IF FAReg2.FIND('+') THEN;
      IF (LastEntryNo <> MaintenanceLedgEntry2."Entry No.") OR (FAReg."No." <> FAReg2."No.") THEN BEGIN
        LastEntryNo := MaintenanceLedgEntry2."Entry No.";
        InitRegisters;
      END;
    END;

    LOCAL PROCEDURE InsertField@2(Number@1000 : Integer;Name@1001 : Text[100]);
    BEGIN
      NoOfFields := NoOfFields + 1;
      FieldNumber[NoOfFields] := Number;
      FieldNameArray[NoOfFields] := Name;
    END;

    LOCAL PROCEDURE RetainNo@3(Number@1000 : Integer) : Boolean;
    BEGIN
      EXIT(Retain[Index(Number)]);
    END;

    LOCAL PROCEDURE Index@6(Number@1000 : Integer) : Integer;
    BEGIN
      FOR i := 1 TO NoOfFields DO
        IF Number = FieldNumber[i] THEN
          EXIT(i);
    END;

    PROCEDURE SummarizeEntry@5(VAR NewMaintenanceLedgEntry@1000 : Record 5625;MaintenanceLedgEntry@1001 : Record 5625);
    VAR
      LedgEntryDim@1002 : Record 355;
    BEGIN
      WITH MaintenanceLedgEntry DO BEGIN
        NewMaintenanceLedgEntry.Quantity := NewMaintenanceLedgEntry.Quantity + Quantity;
        NewMaintenanceLedgEntry.Amount := NewMaintenanceLedgEntry.Amount + Amount;
        DELETE;
        LedgEntryDim.RESET;
        LedgEntryDim.SETRANGE("Table ID",DATABASE::"Maintenance Ledger Entry");
        LedgEntryDim.SETRANGE("Entry No.","Entry No.");
        LedgEntryDim.DELETEALL;
        DateComprReg."No. Records Deleted" := DateComprReg."No. Records Deleted" + 1;
        Window.UPDATE(4,DateComprReg."No. Records Deleted");
      END;
    END;

    PROCEDURE ComprCollectedEntries@12();
    VAR
      MaintenanceLedgEntry@1000 : Record 5625;
      OldDimEntryNo@1001 : Integer;
      Found@1002 : Boolean;
      MaintenanceLedgEntryNo@1003 : Integer;
    BEGIN
      OldDimEntryNo := 0;
      IF DimBufMgt.FindFirstDimEntryNo(DimEntryNo,MaintenanceLedgEntryNo) THEN BEGIN
        InitNewEntry(NewMaintenanceLedgEntry);
        REPEAT
          MaintenanceLedgEntry.GET(MaintenanceLedgEntryNo);
          SummarizeEntry(NewMaintenanceLedgEntry,MaintenanceLedgEntry);
          OldDimEntryNo := DimEntryNo;
          Found := DimBufMgt.NextDimEntryNo(DimEntryNo,MaintenanceLedgEntryNo);
          IF (OldDimEntryNo <> DimEntryNo) OR NOT Found THEN BEGIN
            InsertNewEntry(NewMaintenanceLedgEntry,OldDimEntryNo);
            IF Found THEN
              InitNewEntry(NewMaintenanceLedgEntry);
          END;
          OldDimEntryNo := DimEntryNo;
        UNTIL NOT Found;
      END;
      DimBufMgt.DeleteAllDimEntryNo;
    END;

    PROCEDURE InitNewEntry@7(VAR NewMaintenanceLedgEntry@1000 : Record 5625);
    BEGIN
      LastEntryNo := LastEntryNo + 1;

      WITH MaintenanceLedgEntry2 DO BEGIN
        NewMaintenanceLedgEntry.INIT;
        NewMaintenanceLedgEntry."Entry No." := LastEntryNo;

        NewMaintenanceLedgEntry."FA No." := "FA No.";
        NewMaintenanceLedgEntry."Depreciation Book Code" := "Depreciation Book Code";
        NewMaintenanceLedgEntry."FA Posting Group" := "FA Posting Group";
        NewMaintenanceLedgEntry."Document Type" := "Document Type";

        NewMaintenanceLedgEntry."FA Posting Date" := GETRANGEMIN("FA Posting Date");
        NewMaintenanceLedgEntry."Posting Date" := GETRANGEMIN("FA Posting Date");
        NewMaintenanceLedgEntry.Description := EntrdMaintenanceLedgEntry.Description;
        NewMaintenanceLedgEntry."Source Code" := SourceCodeSetup."Compress Maintenance Ledger";
        NewMaintenanceLedgEntry."User ID" := USERID;

        IF RetainNo(FIELDNO("Document No.")) THEN
          NewMaintenanceLedgEntry."Document No." := "Document No.";
        IF RetainNo(FIELDNO("Maintenance Code")) THEN
          NewMaintenanceLedgEntry."Maintenance Code" := "Maintenance Code";
        IF RetainNo(FIELDNO("Index Entry")) THEN
          NewMaintenanceLedgEntry."Index Entry" := "Index Entry";
        IF RetainNo(FIELDNO("Global Dimension 1 Code")) THEN
          NewMaintenanceLedgEntry."Global Dimension 1 Code" := "Global Dimension 1 Code";
        IF RetainNo(FIELDNO("Global Dimension 2 Code")) THEN
          NewMaintenanceLedgEntry."Global Dimension 2 Code" := "Global Dimension 2 Code";

        Window.UPDATE(1,NewMaintenanceLedgEntry."FA No.");
        Window.UPDATE(2,NewMaintenanceLedgEntry."FA Posting Date");
        DateComprReg."No. of New Records" := DateComprReg."No. of New Records" + 1;
        Window.UPDATE(3,DateComprReg."No. of New Records");
      END;
    END;

    PROCEDURE InsertNewEntry@23(VAR NewMaintenanceLedgEntry@1000 : Record 5625;DimEntryNo@1001 : Integer);
    VAR
      TempDimBuf@1002 : TEMPORARY Record 360;
    BEGIN
      NewMaintenanceLedgEntry.INSERT;
      IF NewMaintenanceLedgEntry."FA No." <> '' THEN
        FAInsertLedgEntry.SetMaintenanceLastDate(NewMaintenanceLedgEntry);
      TempDimBuf.DELETEALL;
      DimBufMgt.GetDimensions(DimEntryNo,TempDimBuf);
      DimMgt.MoveDimBufToLedgEntryDim(
        TempDimBuf,DATABASE::"Maintenance Ledger Entry",NewMaintenanceLedgEntry."Entry No.");
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}
