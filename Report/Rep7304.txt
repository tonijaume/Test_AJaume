OBJECT Report 7304 Get Outbound Source Documents
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVW16.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Get Outbound Source Documents;
               ESP=Traer documentos origen salida];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  ActivitiesCreated := 0;
                  LineCreated := FALSE;
                END;

    OnPostReport=VAR
                   WhseWkshLine@1000 : Record 7326;
                 BEGIN
                   IF NOT HideDialog THEN
                     IF NOT LineCreated THEN
                       ERROR(Text000);

                   Completed := TRUE;
                 END;

  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table7325;
        DataItemTableView=SORTING(Document Type,Production Subtype,Document No.,Location Code)
                          WHERE(Status=CONST(Released),
                                Completely Picked=CONST(No));
        ReqFilterFields=Document Type,Document No.;
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=12000;
            SectionHeight=846;
          }
          CONTROLS
          {
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table7320;
        DataItemTableView=SORTING(No.);
        OnPreDataItem=BEGIN
                        IF "Whse. Pick Request"."Document Type" <>
                           "Whse. Pick Request"."Document Type"::Shipment
                        THEN
                          CurrReport.BREAK;
                      END;

        DataItemLink=No.=FIELD(Document No.);
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=12000;
            SectionHeight=846;
          }
          CONTROLS
          {
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=2;
        DataItemTable=Table7321;
        DataItemTableView=SORTING(No.,Line No.);
        OnPreDataItem=BEGIN
                        SETFILTER("Qty. Outstanding",'>0');
                      END;

        OnAfterGetRecord=BEGIN
                           CALCFIELDS("Pick Qty.","Pick Qty. (Base)");
                           IF "Qty. (Base)" > "Qty. Picked (Base)" + "Pick Qty. (Base)" THEN BEGIN
                             IF "Destination Type" = "Destination Type"::Customer THEN BEGIN
                               TESTFIELD("Destination No.");
                               Cust.GET("Destination No.");
                               Cust.CheckBlockedCustOnDocs(Cust,"Source Document",FALSE,FALSE);
                             END;

                             IF WhsePickWkshCreate.FromWhseShptLine(
                               PickWkshTemplate,PickWkshName,LocationCode,"Warehouse Shipment Line")
                             THEN
                               LineCreated := TRUE;
                           END;
                         END;

        DataItemLink=No.=FIELD(No.);
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=12000;
            SectionHeight=846;
          }
          CONTROLS
          {
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table7333;
        DataItemTableView=SORTING(No.);
        OnPreDataItem=BEGIN
                        IF "Whse. Pick Request"."Document Type" <> "Whse. Pick Request"."Document Type"::"Internal Pick" THEN
                          CurrReport.BREAK;
                      END;

        DataItemLink=No.=FIELD(Document No.);
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=12000;
            SectionHeight=846;
          }
          CONTROLS
          {
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=2;
        DataItemTable=Table7334;
        DataItemTableView=SORTING(No.,Line No.);
        OnPreDataItem=BEGIN
                        SETFILTER("Qty. Outstanding",'>0');
                      END;

        OnAfterGetRecord=BEGIN
                           CALCFIELDS("Pick Qty.","Pick Qty. (Base)");
                           IF "Qty. (Base)" > "Qty. Picked (Base)" + "Pick Qty. (Base)" THEN BEGIN
                             IF WhsePickWkshCreate.FromWhseInternalPickLine(
                               PickWkshTemplate,PickWkshName,LocationCode,"Whse. Internal Pick Line")
                             THEN
                               LineCreated := TRUE;
                           END;
                         END;

        DataItemLink=No.=FIELD(No.);
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=12000;
            SectionHeight=846;
          }
          CONTROLS
          {
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table5405;
        DataItemTableView=SORTING(Status,No.)
                          WHERE(Status=CONST(Released));
        OnPreDataItem=BEGIN
                        IF "Whse. Pick Request"."Document Type" <> "Whse. Pick Request"."Document Type"::Production THEN
                          CurrReport.BREAK;
                      END;

        DataItemLink=Status=FIELD(Production Subtype),
                     No.=FIELD(Document No.);
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=12000;
            SectionHeight=846;
          }
          CONTROLS
          {
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=2;
        DataItemTable=Table5407;
        DataItemTableView=SORTING(Status,Prod. Order No.,Prod. Order Line No.,Line No.)
                          WHERE(Flushing Method=FILTER(Manual|Pick + Forward|Pick + Backward),
                                Planning Level Code=CONST(0));
        OnPreDataItem=BEGIN
                        SETRANGE("Location Code","Whse. Pick Request"."Location Code");
                      END;

        OnAfterGetRecord=VAR
                           ToBinCode@1000 : Code[20];
                         BEGIN
                           IF ("Flushing Method" = "Flushing Method"::"Pick + Forward") AND ("Routing Link Code" = '') THEN
                             CurrReport.SKIP;

                           GetLocation("Location Code");
                           IF Location."Directed Put-away and Pick" THEN
                             ToBinCode := Location."Inbound Production Bin Code"
                           ELSE
                             ToBinCode := "Bin Code";

                           CALCFIELDS("Pick Qty.");
                           IF "Expected Quantity" > "Qty. Picked" + "Pick Qty." THEN
                             IF WhsePickWkshCreate.FromProdOrderCompLine(
                               PickWkshTemplate,PickWkshName,Location.Code,
                               ToBinCode,"Prod. Order Component")
                             THEN
                               LineCreated := TRUE;
                         END;

        DataItemLink=Status=FIELD(Status),
                     Prod. Order No.=FIELD(No.);
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=12000;
            SectionHeight=846;
          }
          CONTROLS
          {
          }
           }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=3850;
      Height=440;
    }
    CONTROLS
    {
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=There are no Warehouse Worksheet Lines created.;ESP=No existen l¡ns. hoja almac‚n creadas.';
      Location@1002 : Record 14;
      Cust@1005 : Record 18;
      WhsePickWkshCreate@1006 : Codeunit 7311;
      PickWkshTemplate@1001 : Code[10];
      PickWkshName@1003 : Code[10];
      LocationCode@1004 : Code[10];
      ActivitiesCreated@1007 : Integer;
      Completed@1010 : Boolean;
      LineCreated@1012 : Boolean;
      HideDialog@1013 : Boolean;

    PROCEDURE SetHideDialog@6(NewHideDialog@1000 : Boolean);
    BEGIN
      HideDialog := NewHideDialog;
    END;

    PROCEDURE NotCancelled@4() : Boolean;
    BEGIN
      EXIT(Completed);
    END;

    PROCEDURE SetPickWkshName@2(PickWkshTemplate2@1002 : Code[10];PickWkshName2@1000 : Code[10];LocationCode2@1001 : Code[10]);
    BEGIN
      PickWkshTemplate := PickWkshTemplate2;
      PickWkshName := PickWkshName2;
      LocationCode := LocationCode2;
    END;

    LOCAL PROCEDURE GetLocation@1(LocationCode@1000 : Code[10]);
    BEGIN
      IF LocationCode = '' THEN
        CLEAR(Location)
      ELSE
        IF Location.Code <> LocationCode THEN BEGIN
          Location.GET(LocationCode);
          IF Location."Directed Put-away and Pick" THEN BEGIN
            Location.TESTFIELD("Open Shop Floor Bin Code");
            Location.TESTFIELD("Inbound Production Bin Code");
          END;
        END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}
