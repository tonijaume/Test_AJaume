OBJECT Report 7010153 CNT-Resumen comision Guia Vent
{
  OBJECT-PROPERTIES
  {
    Date=01/07/14;
    Time=15:20:21;
    Modified=Yes;
    Version List=AIC2009,CNT-OC-14047;
  }
  PROPERTIES
  {
    CaptionML=[ENU=CNT-Sale Guide commission summary;
               ESP=CNT-Resumen comision Guia Venta];
    OnInitReport=BEGIN
                   wDiaInicio := CALCDATE('<-1M>', TODAY);
                   wDiaInicio := DMY2DATE(1, DATE2DMY(wDiaInicio, 2), DATE2DMY(wDiaInicio, 3));

                   wDiaFin := CALCDATE('<+1M-1D>', wDiaInicio);
                 END;

    OnPreReport=BEGIN
                  rCompanyInfo.FINDFIRST;
                END;

  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table7010241;
        DataItemTableView=SORTING(Codigo)
                          WHERE(Bloqueado=CONST(No),
                                Trabaja a credito=CONST(No));
        NewPagePerRecord=Yes;
        DataItemVarName=diGuia;
        PrintOnlyIfDetail=Yes;
        OnPreDataItem=BEGIN
                        IF (wDiaInicio = 0D) OR
                           (wDiaFin = 0D) THEN
                          ERROR(Text001);

                        IF wDiaInicio > wDiaFin THEN
                          ERROR(Text002);

                        //+$002 <
                        wTVentasGuia     := 0;
                        wTComisionGuia   := 0;
                        wTComisionGuiaDL := 0;
                        //+$002 >
                      END;

        OnAfterGetRecord=BEGIN
                           wID := 0;

                           CLEAR(rBufferTMP);
                           rBufferTMP.DELETEALL;

                           CLEAR(rEquipoTMP);
                           rEquipoTMP.DELETEALL;

                           IF "Trabaja en un Pool" THEN
                             _CalculaComisionPool
                           ELSE
                           BEGIN
                             _CalculaComisionPrincipal;
                             _CalculaComisionNormal(FALSE, wDiaInicio, wDiaFin, 0D, '');
                           END;
                         END;

        ReqFilterFields=Codigo;
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Header;
            PrintOnEveryPage=Yes;
            SectionWidth=18150;
            SectionHeight=1269;
          }
          CONTROLS
          {
            { 1100253001;Label  ;0    ;0    ;7500 ;423  ;FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=[ENU=Sales guide commission summary;
                                                                    ESP=Resumen comisiones Guia venta] }
            { 1100253002;TextBox;15000;423  ;3150 ;423  ;HorzAlign=Right;
                                                         SourceExpr=FORMAT(TODAY,0,4) }
            { 1100253003;TextBox;0    ;846  ;7500 ;423  ;SourceExpr=rCompanyInfo.Name }
            { 1100253004;TextBox;17700;846  ;450  ;423  ;CaptionML=ESP=P g.;
                                                         SourceExpr=CurrReport.PAGENO }
            { 1100253005;Label  ;16950;846  ;750  ;423  ;ParentControl=1100253004 }
            { 1100253006;TextBox;14100;0    ;4050 ;423  ;HorzAlign=Right;
                                                         SourceExpr=USERID }
          }
           }
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=18150;
            SectionHeight=846;
          }
          CONTROLS
          {
            { 1100253008;TextBox;3150 ;0    ;6600 ;423  ;HorzAlign=Left;
                                                         SourceExpr=Nombre }
            { 1100253009;Label  ;0    ;0    ;3000 ;423  ;ParentControl=1100253008;
                                                         LeaderDots=Yes }
            { 1100217000;Label  ;0    ;423  ;3000 ;423  ;ParentControl=1100217001;
                                                         LeaderDots=Yes }
            { 1100217001;TextBox;3150 ;423  ;6600 ;423  ;HorzAlign=Left;
                                                         CaptionML=[ENU=Period;
                                                                    ESP=Periodo];
                                                         SourceExpr=FORMAT(wDiaInicio) + ' - ' + FORMAT(wDiaFin) }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number);
        DataItemVarName=diResumen;
        OnPreDataItem=BEGIN
                        wVentasGuia     := 0;
                        wComisionGuia   := 0;
                        wComisionGuiaDL := 0;

                        CLEAR(rBufferTMP);
                        rBufferTMP.SETCURRENTKEY("Fecha venta", Excursion, "Porcentaje comision");
                        SETRANGE(Number, 1, rBufferTMP.COUNT);
                        IF NOT rBufferTMP.FINDSET THEN
                          CurrReport.SKIP;
                      END;

        OnAfterGetRecord=BEGIN
                           IF Number <> 1 THEN
                             rBufferTMP.NEXT;

                           wVentasGuia     += rBufferTMP.Importe;
                           wComisionGuia   += rBufferTMP."Importe comision";
                           wComisionGuiaDL += rBufferTMP."Importe comision DL";
                         END;

        OnPostDataItem=BEGIN
                         //+$002 <
                         wTVentasGuia     += wVentasGuia;
                         wTComisionGuia   += wComisionGuia;
                         wTComisionGuiaDL += wComisionGuiaDL;
                         //+$002 >
                       END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Header;
            SectionWidth=18150;
            SectionHeight=846;
          }
          CONTROLS
          {
            { 1100253007;Label  ;150  ;0    ;5250 ;846  ;ParentControl=1100253000;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1100253015;Label  ;10350;0    ;900  ;846  ;ParentControl=1100253010;
                                                         HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1100253016;Label  ;11550;0    ;1650 ;846  ;ParentControl=1100253011;
                                                         HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1100253017;Label  ;13500;0    ;1500 ;846  ;ParentControl=1100253013;
                                                         HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1100253018;Label  ;15300;0    ;750  ;846  ;ParentControl=1100253012;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1100253019;Label  ;16350;0    ;1800 ;846  ;ParentControl=1100253014;
                                                         HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1100217005;Label  ;5700 ;0    ;1350 ;846  ;ParentControl=1100217002;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1100217006;Label  ;7350 ;0    ;1650 ;846  ;ParentControl=1100217003;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1100217007;Label  ;9300 ;0    ;750  ;846  ;ParentControl=1100217004;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
          }
           }
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=18150;
            SectionHeight=423;
          }
          CONTROLS
          {
            { 1100253000;TextBox;150  ;0    ;5250 ;423  ;CaptionML=ESP=Excursion;
                                                         SourceExpr=rBufferTMP.Excursion + ' - ' + cNom.nom_producto(rBufferTMP.Excursion) }
            { 1100253010;TextBox;10350;0    ;900  ;423  ;CaptionML=ESP=% Comision;
                                                         SourceExpr=rBufferTMP."Porcentaje comision" }
            { 1100253011;TextBox;11550;0    ;1650 ;423  ;CaptionML=ESP=Ventas;
                                                         SourceExpr=rBufferTMP.Importe }
            { 1100253012;TextBox;15300;0    ;750  ;423  ;CaptionML=ESP=Divisa;
                                                         SourceExpr=rBufferTMP.Divisa }
            { 1100253013;TextBox;13500;0    ;1500 ;423  ;CaptionML=ESP=Comision;
                                                         SourceExpr=rBufferTMP."Importe comision" }
            { 1100253014;TextBox;16350;0    ;1800 ;423  ;CaptionML=ESP=Comision (DL);
                                                         SourceExpr=rBufferTMP."Importe comision DL" }
            { 1100217002;TextBox;5700 ;0    ;1350 ;423  ;HorzAlign=Left;
                                                         CaptionML=ESP=Fecha venta;
                                                         SourceExpr=rBufferTMP."Fecha venta" }
            { 1100217003;TextBox;7350 ;0    ;1650 ;423  ;CaptionML=ESP=Hotel;
                                                         SourceExpr=rBufferTMP.Hotel }
            { 1100217004;TextBox;9300 ;0    ;750  ;423  ;CaptionML=ESP=Pool;
                                                         SourceExpr=rBufferTMP.Pool }
          }
           }
        { PROPERTIES
          {
            SectionType=Footer;
            SectionWidth=18150;
            SectionHeight=846;
          }
          CONTROLS
          {
            { 1100253020;TextBox;16350;423  ;1800 ;423  ;CaptionML=ESP=Comision (DL);
                                                         SourceExpr=wComisionGuiaDL }
            { 1100253021;TextBox;13500;423  ;1500 ;423  ;CaptionML=ESP=Comision;
                                                         SourceExpr=wComisionGuia }
            { 1100253022;TextBox;11550;423  ;1650 ;423  ;CaptionML=ESP=Ventas;
                                                         SourceExpr=wVentasGuia }
            { 1100253023;Shape  ;11550;0    ;1650 ;423  ;ShapeStyle=HorzLine }
            { 1100253024;Shape  ;13500;0    ;1500 ;423  ;ShapeStyle=HorzLine }
            { 1100253025;Shape  ;16350;0    ;1800 ;423  ;ShapeStyle=HorzLine }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number);
        MaxIteration=1;
        DataItemVarName=diTotal;
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=18150;
            SectionHeight=846;
          }
          CONTROLS
          {
            { 1100217008;Label  ;6150 ;423  ;5250 ;423  ;VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         LeaderDots=Yes;
                                                         CaptionML=[ENU=Grand Total;
                                                                    ESP=Total general] }
            { 1100217009;Shape  ;11550;0    ;6600 ;423  ;ShapeStyle=HorzLine }
            { 1100217010;TextBox;11550;423  ;1650 ;423  ;CaptionML=ESP=Ventas;
                                                         SourceExpr=wTVentasGuia }
            { 1100217011;TextBox;13500;423  ;1500 ;423  ;CaptionML=ESP=Comision;
                                                         SourceExpr=wTComisionGuia }
            { 1100217012;TextBox;16350;423  ;1800 ;423  ;CaptionML=ESP=Comision (DL);
                                                         SourceExpr=wTComisionGuiaDL }
          }
           }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=9020;
      Height=3410;
      CaptionML=[ENU=CNT-Sale Guide commission summary;
                 ESP=CNT-Resumen comision Guia Venta];
    }
    CONTROLS
    {
      { 1100253000;TextBox;3630 ;220  ;1700 ;440  ;InPage=-1;
                                                   CaptionML=[ENU=From date;
                                                              ESP=Fecha inicio];
                                                   SourceExpr=wDiaInicio }
      { 1100253001;Label  ;220  ;220  ;3300 ;440  ;ParentControl=1100253000 }
      { 1100253002;Label  ;220  ;770  ;3300 ;440  ;ParentControl=1100253003;
                                                   InPage=-1 }
      { 1100253003;TextBox;3630 ;770  ;1700 ;440  ;CaptionML=[ENU=To date;
                                                              ESP=Fecha final];
                                                   SourceExpr=wDiaFin }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      rCompanyInfo@1100253004 : Record 79;
      Text001@1100253002 : TextConst 'ENU=You must specify a date range.;ESP=Se debe especificar un periodo de fechas.';
      Text002@1100253003 : TextConst 'ENU=The period end date must be after start date.;ESP=La fecha de final del periodo debe ser posterior a la fecha de inicio.';
      rBufferTMP@1100253005 : TEMPORARY Record 88002;
      rEquipoTMP@1100217002 : TEMPORARY Record 7010249;
      rTipoCam@1100217000 : Record 330;
      cNom@1100217001 : Codeunit 7009702;
      wDiaInicio@1100253001 : Date;
      wDiaFin@1100253000 : Date;
      wID@1100253006 : Integer;
      wVentasGuia@1100253007 : Decimal;
      wComisionGuia@1100253008 : Decimal;
      wComisionGuiaDL@1100253009 : Decimal;
      wTVentasGuia@1100217003 : Decimal;
      wTComisionGuia@1100217004 : Decimal;
      wTComisionGuiaDL@1100217005 : Decimal;

    LOCAL PROCEDURE _CalculaComisionPool@1100253000();
    VAR
      lrEquipo@1100253002 : Record 7010249;
      lrTMPFechas@1100217000 : TEMPORARY Record 7010162;
    BEGIN
      // _CalculaComisionPool
      IF NOT diGuia."Trabaja en un Pool" THEN
        EXIT;

      //. Mexico calcula las comisiones sobre la fecha de excursion, pero para la gesti¢n de los POOL
      //. Hay que seguir trabajando con la fecha de venta
      //. Vamos a recorrer las reservas con el filtro de fecha excursion y crearemos un temporal de fechas de venta
      _TemporalFechasVenta(lrTMPFechas);

      //. Para cada dia del periodo comprobamos en que pool esta trabajando el guia
      lrTMPFechas.RESET;
      IF lrTMPFechas.FINDSET THEN
      BEGIN
        REPEAT
          lrEquipo.RESET;
          lrEquipo.SETRANGE ("Guia venta" , diGuia.Codigo);
          lrEquipo.SETFILTER("Fecha desde", '<=%1', lrTMPFechas."Fecha Venta");
          lrEquipo.SETFILTER("Fecha hasta", '>=%1', lrTMPFechas."Fecha Venta");
          lrEquipo.SETRANGE (Hotel        , lrTMPFechas."Hotel Cliente");
          IF lrEquipo.FINDSET THEN
          BEGIN
            REPEAT
              IF NOT rEquipoTMP.GET(lrEquipo.ID) THEN
              BEGIN
                _CalculaComisionEquipo(lrEquipo, lrTMPFechas."Fecha Venta"); //+$001

                CLEAR(rEquipoTMP);
                rEquipoTMP.ID := lrEquipo.ID;
                rEquipoTMP.INSERT;
              END;
            UNTIL lrEquipo.NEXT = 0;
          END
          //. Si un dia no esta dentro de ningun equipo le calculamos solo su comision
          ELSE
            _CalculaComisionNormal(TRUE, wDiaInicio, wDiaFin, lrTMPFechas."Fecha Venta", lrTMPFechas."Hotel Cliente");
        UNTIL lrTMPFechas.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE _CalculaComisionEquipo@1100253004(prEquipo@1100253000 : Record 7010249;pwDia@1100253004 : Date);
    VAR
      lrEquipo@1100253002 : Record 7010249;
      lrRsv@1100253001 : Record 7010162;
      lrBufferTMP@1100253010 : TEMPORARY Record 88002;
      lwGuias@1100253005 : Integer;
      lwTempExc@1100217000 : TEMPORARY Record 7009710;
      lwPrCm@1100217001 : Decimal;
    BEGIN
      // _CalculaComisionEquipo

      //. Preparamos el apuntador de reservas
      lrRsv.RESET;
      lrRsv.SETCURRENTKEY("Guia Venta", "Fecha Excursion");

      //. Buscamos todos los guias que estan en el mismo Pool

      lrEquipo.RESET;
      lrEquipo.SETRANGE (Hotel        , prEquipo.Hotel);
      lrEquipo.SETFILTER("Fecha desde", '<=%1', pwDia);
      lrEquipo.SETFILTER("Fecha hasta", '>=%1', pwDia);
      IF lrEquipo.FINDSET THEN
      BEGIN
        lwGuias      := 0;

        lrBufferTMP.RESET;
        lrBufferTMP.DELETEALL;
        REPEAT
          //. Para cada dia acumulamos ventas y comisiones
          lrRsv.SETRANGE ("Guia Venta"     , lrEquipo."Guia venta");
          lrRsv.SETRANGE ("Hotel Cliente"  , lrEquipo.Hotel);
          lrRsv.SETRANGE ("Fecha Venta"    , lrEquipo."Fecha desde", lrEquipo."Fecha hasta");
          lrRsv.SETRANGE ("Fecha Excursion", wDiaInicio, wDiaFin);
          //+$001 <
          IF lrEquipo."Equipo definido por" = lrEquipo."Equipo definido por"::Ticket THEN
          BEGIN
            prEquipo.TESTFIELD("Num. Ticket inicial");
            prEquipo.TESTFIELD("Num. Ticket final");
            lrRsv.SETRANGE("N§ Ticket", lrEquipo."Num. Ticket inicial", lrEquipo."Num. Ticket final");
          END;
          //+$001 >
          lrRsv.SETRANGE (Anulada          , FALSE);
          lrRsv.SETRANGE (Reembolsada      , FALSE);
          lrRsv.SETFILTER("N§ Ticket"      , '<>%1', '');
          lrRsv.SETRANGE("No comisionable" , FALSE);       //+$003
          //.lrRsv.SETRANGE(Confirmada     , TRUE);
          IF lrRsv.FINDSET THEN
          BEGIN
            //. Contamos cuantos guias tienen reservas dentro del Pool
            lwGuias += 1;

            _AcumularComisionReserva(lrRsv, lrBufferTMP, TRUE);
          END;
        UNTIL lrEquipo.NEXT = 0;


        // Creamos un temporal de excursiones
        CLEAR(lwTempExc);
        CLEAR(lrBufferTMP);
        IF lrBufferTMP.FINDSET THEN
        BEGIN
          REPEAT
            IF NOT lwTempExc.GET(lrBufferTMP.Excursion) THEN BEGIN
              lwTempExc.Codigo := lrBufferTMP.Excursion;
              lwTempExc.INSERT;
            END;
          UNTIL lrBufferTMP.NEXT=0;
        END;

        // Por cada excursi¢n buscamos el tipo mas bajo de comision
        CLEAR(lwTempExc);
        IF lwTempExc.FINDSET THEN
        BEGIN
          REPEAT
            CLEAR(lrBufferTMP);
            lrBufferTMP.SETCURRENTKEY(Excursion, "Porcentaje comision");
            lrBufferTMP.SETRANGE(Excursion, lwTempExc.Codigo);
            CLEAR(lwPrCm);
            IF lrBufferTMP.FINDFIRST THEN // Buscamos la comision minima
              lwPrCm := lrBufferTMP."Porcentaje comision";
            lrBufferTMP.SETCURRENTKEY(ID); // Cambiamos la clave ya que modificamos el campo afectado
            IF lrBufferTMP.FINDSET THEN
            BEGIN
              REPEAT
                lrBufferTMP."Importe comision"    := lrBufferTMP.Importe * lwPrCm / 100;
                lrBufferTMP."Importe comision DL" := rTipoCam.ExchangeAmtFCYToFCY(lrBufferTMP."Fecha Cambio",
                                                                                  lrBufferTMP.Divisa, '',
                                                                                  lrBufferTMP."Importe comision");
                // Calculamos el diferencial de comision
                lrBufferTMP."Porcentaje comision 2" := lrBufferTMP."Porcentaje comision" - lwPrCm;
                lrBufferTMP."Porcentaje comision"   := lwPrCm;
                lrBufferTMP.MODIFY;
              UNTIL lrBufferTMP.NEXT = 0
              //
            END;
          UNTIL lwTempExc.NEXT = 0;
        END;

        //. Pasar al acumulado total, indicando el numero de guias que componian el grupo
        CLEAR(lrBufferTMP);
        _AcumularTotalesGuia(lrBufferTMP, lwGuias);

        // Ahora buscamos la diferencia que le toca con respecto a su comision
        CLEAR(lrBufferTMP);
        lrBufferTMP.SETRANGE("Guia Venta", diGuia.Codigo);
        IF lrBufferTMP.FINDSET THEN BEGIN
          REPEAT
            lrBufferTMP."Porcentaje comision" := lrBufferTMP."Porcentaje comision 2";
            lrBufferTMP."Importe comision"    := lrBufferTMP.Importe * lrBufferTMP."Porcentaje comision" / 100;
            lrBufferTMP."Importe comision DL" := rTipoCam.ExchangeAmtFCYToFCY(lrBufferTMP."Fecha Cambio",
                                                                       lrBufferTMP.Divisa, '',
                                                                       lrBufferTMP."Importe comision");
            // Ponemos los pax a 0 ya que ya se han sumado en su vuelta anterior
            rBufferTMP.Adultos                := 0;
            rBufferTMP.Ni¤os                  := 0;
            lrBufferTMP.MODIFY;
          UNTIL lrBufferTMP.NEXT=0
        END;
        // Ojo esta filtrado por guia venta
        _AcumularTotalesGuia(lrBufferTMP, 0);
      END;
    END;

    LOCAL PROCEDURE _CalculaComisionPrincipal@1100253001();
    VAR
      lrEquipo@1100253002 : Record 7010249;
      lrRsv@1100253001 : Record 7010162;
      lrBufferTMP@1100253000 : TEMPORARY Record 88002;
      lwDia@1100253003 : Date;
    BEGIN
      IF NOT diGuia."Guia principal" THEN
        EXIT;

      //. Preparamos el apuntador de reservas
      lrRsv.RESET;
      lrRsv.SETCURRENTKEY("Guia Venta", "Fecha Excursion");

      //. Acumular las ventas normales

      _CalculaComisionNormal(TRUE, wDiaInicio, wDiaFin, 0D, '');

      //. Buscar las reservas de sus guias asistentes para acumular sobre la comision del guia principal

      lrBufferTMP.RESET;
      lrBufferTMP.DELETEALL;

      FOR lwDia := wDiaInicio TO wDiaFin DO
      BEGIN
        lrEquipo.RESET;
        lrEquipo.SETRANGE ("Guia principal", diGuia.Codigo);
        lrEquipo.SETFILTER("Fecha desde"   , '<=%1', lwDia);
        lrEquipo.SETFILTER("Fecha hasta"   , '>=%1', lwDia);
        IF lrEquipo.FINDSET THEN
        BEGIN
          REPEAT
            lrRsv.SETRANGE ("Guia Venta"   , lrEquipo."Guia venta");
            lrRsv.SETRANGE ("Hotel Cliente", lrEquipo.Hotel);
            lrRsv.SETRANGE ("Fecha Venta"  , lwDia);
            //.lrRsv.SETRANGE(Confirmada     , TRUE);
            lrRsv.SETRANGE (Anulada        , FALSE);
            lrRsv.SETRANGE (Reembolsada    , FALSE);
            lrRsv.SETFILTER("N§ Ticket"    , '<>%1', '');
            lrRsv.SETRANGE("No comisionable" , FALSE);       //+$003
            IF lrRsv.FINDSET THEN
              _AcumularComisionAsistente(lrRsv, lrBufferTMP);
          UNTIL lrEquipo.NEXT = 0;
        END;
      END;

      //. Pasar al acumulado total
      CLEAR(lrBufferTMP);
      _AcumularTotalesGuia(lrBufferTMP, 0);
    END;

    LOCAL PROCEDURE _CalculaComisionNormal@1100253002(pwCalculoDesdePrincipal@1100253002 : Boolean;pwDiaInicio@1100217000 : Date;pwDiaFinal@1100217001 : Date;pwDiaVenta@1100217002 : Date;pwHotel@1100217003 : Code[20]);
    VAR
      lrRsv@1100253000 : Record 7010162;
      lrBufferTMP@1100253001 : TEMPORARY Record 88002;
    BEGIN
      IF (diGuia."Guia principal" AND NOT pwCalculoDesdePrincipal) THEN
        EXIT;

      lrBufferTMP.RESET;
      lrBufferTMP.DELETEALL;

      //. Acumular las ventas normales de este guia

      lrRsv.RESET;
      lrRsv.SETCURRENTKEY("Guia Venta", "Fecha Excursion");
      lrRsv.SETRANGE ("Guia Venta"     , diGuia.Codigo);
      lrRsv.SETRANGE ("Fecha Excursion", wDiaInicio, wDiaFin);

      IF pwDiaVenta <> 0D THEN
        lrRsv.SETRANGE("Fecha Venta", pwDiaVenta);
      IF pwHotel <> '' THEN
        lrRsv.SETRANGE("Hotel Cliente", pwHotel);

      lrRsv.SETRANGE (Anulada          , FALSE);
      lrRsv.SETRANGE (Reembolsada      , FALSE);
      lrRsv.SETFILTER("N§ Ticket"      , '<>%1', '');
      lrRsv.SETRANGE("No comisionable" , FALSE);       //+$003

      //.lrRsv.SETRANGE(Confirmada     , TRUE);
      IF lrRsv.FINDSET THEN
        _AcumularComisionReserva(lrRsv, lrBufferTMP, FALSE);

      //. Pasar al acumulado total
      CLEAR(lrBufferTMP);
      _AcumularTotalesGuia(lrBufferTMP, 0);
    END;

    LOCAL PROCEDURE _AcumularComisionReserva@1100253007(VAR prRsv@1100253000 : Record 7010162;VAR prBufferTMP@1100253001 : TEMPORARY Record 88002;pwDesgl@1100217000 : Boolean);
    VAR
      lrDetEco@1100253002 : Record 7010245;
      lwID@1100253004 : Integer;
      lwNew@1100217001 : Boolean;
    BEGIN
      // _AcumularComisionReserva
      // pwDesgl Lo que le indicamos realmente es que haga una por reserva
      // En Pool debemos hacer asi ya que necesitamos volver a calcular la comisi¢n por cada reserva
      // ya que si no tendr¡amos diferencias de redondeo

      lwID := 0;
      lwNew := TRUE;
      IF prBufferTMP.FINDLAST THEN
        lwID := prBufferTMP.ID;
      REPEAT
        IF NOT pwDesgl THEN BEGIN
          prBufferTMP.SETRANGE(Excursion             , prRsv.Producto);
          prBufferTMP.SETRANGE("Porcentaje comision" , prRsv."Precio Comision Guia Venta");
          prBufferTMP.SETRANGE(Divisa                , prRsv.Divisa);
          prBufferTMP.SETRANGE("Fecha Cambio"        , prRsv."Fecha cambio");
          prBufferTMP.SETRANGE("Guia Venta"          , prRsv."Guia Venta");
          prBufferTMP.SETRANGE(Hotel                 , prRsv."Hotel Cliente");
          prBufferTMP.SETRANGE("Fecha venta"         , prRsv."Fecha Venta");
          lwNew :=  NOT prBufferTMP.FINDFIRST;
        END;
        IF lwNew THEN BEGIN
          lwID += 100;

          prBufferTMP.INIT;
          prBufferTMP.ID                    := lwID;
          prBufferTMP.Excursion             := prRsv.Producto;
          prBufferTMP."Porcentaje comision" := prRsv."Precio Comision Guia Venta";
          prBufferTMP.Divisa                := prRsv.Divisa;
          prBufferTMP."Fecha Cambio"        := prRsv."Fecha cambio";
          prBufferTMP."Guia Venta"          := prRsv."Guia Venta";
          prBufferTMP.Hotel                 := prRsv."Hotel Cliente";
          prBufferTMP."Fecha venta"         := prRsv."Fecha Venta";
          prBufferTMP.Pool                  := pwDesgl;
          prBufferTMP.INSERT;
        END;

        lrDetEco.GET(prRsv.Delegacion, prRsv."N§ Reserva");

        prBufferTMP.Importe               += lrDetEco."Ingreso comisionable neto";

        prBufferTMP."Importe comision"    += prRsv."Comision Guia Venta";
        prBufferTMP."Importe comision DL" += rTipoCam.ExchangeAmtFCYToFCY(prRsv."Fecha cambio",
                                                                           prRsv.Divisa, '',
                                                                           prRsv."Comision Guia Venta");
        prBufferTMP.Adultos               += (prRsv.Adultos - prRsv."Venta - Invitados Adultos");
        prBufferTMP.Ni¤os                 += (prRsv.Ni¤os - prRsv."Venta - Invitados ni¤os");
        prBufferTMP.MODIFY;
      UNTIL prRsv.NEXT = 0;
    END;

    LOCAL PROCEDURE _AcumularComisionAsistente@1100253005(VAR prRsv@1100253001 : Record 7010162;VAR prBufferTMP@1100253000 : TEMPORARY Record 88002);
    VAR
      lrDetEco@1100253004 : Record 7010245;
      lrTipoCam@1100253003 : Record 330;
      lwID@1100253002 : Integer;
    BEGIN
      // _AcumularComisionAsistente

      lwID := 0;
      IF prBufferTMP.FINDLAST THEN
        lwID := prBufferTMP.ID;

      REPEAT
        prBufferTMP.Excursion             := prRsv.Producto;
        prBufferTMP."Porcentaje comision" := prRsv."Precio Comision Guia Venta";
        prBufferTMP.Divisa                := prRsv.Divisa;
        prBufferTMP.Hotel                 := prRsv."Hotel Cliente";
        prBufferTMP."Fecha venta"         := prRsv."Fecha Venta";
        IF NOT prBufferTMP.FIND THEN
        BEGIN
          lwID += 100;

          prBufferTMP.INIT;
          prBufferTMP.ID                    := lwID;
          prBufferTMP.Excursion             := prRsv.Producto;
          prBufferTMP."Porcentaje comision" := prRsv."Precio Comision Guia Venta";
          prBufferTMP.Divisa                := prRsv.Divisa;
          prBufferTMP.Hotel                 := prRsv."Hotel Cliente";
          prBufferTMP."Fecha venta"         := prRsv."Fecha Venta";
          prBufferTMP.INSERT;
        END;

        lrDetEco.GET(prRsv.Delegacion, prRsv."N§ Reserva");

        prBufferTMP."Importe comision"    += lrDetEco."Comision GV asistente";
        prBufferTMP."Importe comision DL" += lrTipoCam.ExchangeAmtFCYToFCY(prRsv."Fecha cambio",
                                                                           prRsv.Divisa,
                                                                           '',
                                                                           lrDetEco."Comision GV asistente");
        prBufferTMP.MODIFY;
      UNTIL prRsv.NEXT = 0;
    END;

    LOCAL PROCEDURE _AcumularTotalesGuia@1100253008(VAR prBufferTMP@1100253000 : TEMPORARY Record 88002;pwNumGuias@1100253001 : Integer);
    BEGIN
      // _AcumularTotalesGuia

      //. Pasar al acumulado total

      CLEAR(rBufferTMP);
      prBufferTMP.SETFILTER("Porcentaje comision", '<>%1',0);
      IF prBufferTMP.FINDSET THEN
      BEGIN
        REPEAT
          rBufferTMP.SETRANGE(Excursion             , prBufferTMP.Excursion);
          rBufferTMP.SETRANGE("Porcentaje comision" , prBufferTMP."Porcentaje comision");
          rBufferTMP.SETRANGE(Divisa                , prBufferTMP.Divisa);
          rBufferTMP.SETRANGE(Hotel                 , prBufferTMP.Hotel);
          rBufferTMP.SETRANGE("Fecha venta"         , prBufferTMP."Fecha venta");
          IF NOT rBufferTMP.FINDFIRST THEN
          BEGIN
            wID += 100;

            rBufferTMP.INIT;
            rBufferTMP.Excursion             := prBufferTMP.Excursion;
            rBufferTMP."Porcentaje comision" := prBufferTMP."Porcentaje comision";
            rBufferTMP.Divisa                := prBufferTMP.Divisa;
            rBufferTMP.Hotel                 := prBufferTMP.Hotel;
            rBufferTMP.ID                    := wID;
            rBufferTMP.Pool                  := prBufferTMP.Pool;
            rBufferTMP."Fecha venta"         := prBufferTMP."Fecha venta";
            rBufferTMP.INSERT;
          END;

          IF pwNumGuias = 0 THEN
          BEGIN
            rBufferTMP.Importe               += prBufferTMP.Importe;
            rBufferTMP."Importe comision"    += prBufferTMP."Importe comision";
            rBufferTMP."Importe comision DL" += prBufferTMP."Importe comision DL";
          END
          //. Prorrateo de las ventas/comisiones para los guias que trabajan en un Pool
          ELSE
          BEGIN
            rBufferTMP.Importe               += ROUND(prBufferTMP.Importe / pwNumGuias);
            rBufferTMP."Importe comision"    += ROUND(prBufferTMP."Importe comision" / pwNumGuias);
            rBufferTMP."Importe comision DL" += ROUND(prBufferTMP."Importe comision DL" / pwNumGuias);
          END;

          rBufferTMP.Adultos               += prBufferTMP.Adultos;
          rBufferTMP.Ni¤os                 += prBufferTMP.Ni¤os;
          rBufferTMP.MODIFY;
        UNTIL prBufferTMP.NEXT = 0;
      END;

      CLEAR(prBufferTMP);
    END;

    PROCEDURE _TemporalFechasVenta@1100217001(VAR prTMPFechas@1100217000 : TEMPORARY Record 7010162);
    VAR
      lrRsv@1100217001 : Record 7010162;
    BEGIN
      // _TemporalFechasVenta

      //. Buscar las fechas de venta que hay dentro del periodo de fechas de servicio que se estan calculando

      prTMPFechas.RESET;
      prTMPFechas.DELETEALL;

      lrRsv.RESET;
      lrRsv.SETCURRENTKEY("Guia Venta", "Fecha Excursion");
      lrRsv.SETRANGE ("Guia Venta"     , diGuia.Codigo);
      lrRsv.SETRANGE ("Fecha Excursion", wDiaInicio, wDiaFin);
      lrRsv.SETRANGE (Anulada          , FALSE);
      lrRsv.SETRANGE (Reembolsada      , FALSE);
      lrRsv.SETFILTER("N§ Ticket"      , '<>%1', '');
      lrRsv.SETRANGE("No comisionable" , FALSE);       //+$003
      IF lrRsv.FINDSET THEN
      BEGIN
        REPEAT
          prTMPFechas.SETRANGE("Fecha Venta"  , lrRsv."Fecha Venta");
          prTMPFechas.SETRANGE("Hotel Cliente", lrRsv."Hotel Cliente");
          IF NOT prTMPFechas.FINDFIRST THEN
          BEGIN
            prTMPFechas.INIT;
            prTMPFechas."N§ Reserva"    := lrRsv."N§ Reserva";
            prTMPFechas."Fecha Venta"   := lrRsv."Fecha Venta";
            prTMPFechas."Hotel Cliente" := lrRsv."Hotel Cliente";
            prTMPFechas.INSERT;
          END;
        UNTIL lrRsv.NEXT = 0;
      END;
    END;

    BEGIN
    {
      $001 AJS 04112013 CNT-OC-13017 Contemplar la definicion de equipos por numeracion de ticket

      $002 AJS 19122013 Agrego un gran total

      $003 MNC 01072014 no incluyo las reservas No Comisionable
    }
    END.
  }
  RDLDATA
  {
  }
}
