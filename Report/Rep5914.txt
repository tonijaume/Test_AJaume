OBJECT Report 5914 Delete Invoiced Service Orders
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVW16.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Delete Invoiced Service Orders;
               ESP=Eliminar ped. servicio facturados];
    ProcessingOnly=Yes;
  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table5900;
        DataItemTableView=SORTING(Document Type,No.)
                          WHERE(Document Type=CONST(Order));
        ReqFilterHeadingML=[ENU=Service Order;
                            ESP=Pedido servicio];
        OnPreDataItem=BEGIN
                        Window.OPEN(Text000);
                      END;

        OnAfterGetRecord=BEGIN
                           Window.UPDATE(1,"No.");

                           DocDim.RESET;
                           DocDim.SETRANGE("Document Type","Document Type");
                           DocDim.SETRANGE("Document No.","No.");
                           ItemChargeAssgntService.RESET;
                           ItemChargeAssgntService.SETRANGE("Document Type","Document Type");
                           ItemChargeAssgntService.SETRANGE("Document No.","No.");


                           ServiceOrderLine.RESET;
                           ServiceOrderLine.SETRANGE("Document Type","Document Type");
                           ServiceOrderLine.SETRANGE("Document No.","No.");
                           ServiceOrderLine.SETFILTER("Quantity Invoiced",'<>0');
                           IF ServiceOrderLine.FIND('-') THEN BEGIN
                             ServiceOrderLine.SETRANGE("Quantity Invoiced");
                             ServiceOrderLine.SETFILTER("Outstanding Quantity",'<>0');
                             IF NOT ServiceOrderLine.FIND('-') THEN BEGIN
                               ServiceOrderLine.SETRANGE("Outstanding Quantity");
                               ServiceOrderLine.SETFILTER("Qty. Shipped Not Invoiced",'<>0');
                               IF NOT ServiceOrderLine.FIND('-') THEN BEGIN
                                 ServiceOrderLine.LOCKTABLE;
                                 IF NOT ServiceOrderLine.FIND('-') THEN BEGIN
                                   ServiceOrderLine.SETRANGE("Qty. Shipped Not Invoiced");
                                   DocDim.SETRANGE("Table ID",DATABASE::"Service Line");
                                   IF ServiceOrderLine.FIND('-') THEN
                                     REPEAT
                                       DocDim.SETRANGE("Line No.",ServiceOrderLine."Line No.");
                                       DocDim.DELETEALL;
                                       ServiceOrderLine.DELETE;
                                     UNTIL ServiceOrderLine.NEXT = 0;

                                   ServiceOrderItemLine.RESET;
                                   ServiceOrderItemLine.SETRANGE("Document Type","Document Type");
                                   ServiceOrderItemLine.SETRANGE("Document No.","No.");
                                   IF ServiceOrderItemLine.FINDSET THEN
                                     REPEAT
                                       ServiceOrderItemLine.DELETE;
                                     UNTIL ServiceOrderItemLine.NEXT = 0;

                                   ServicePost.DeleteHeader("Service Header",ServiceShptHeader,ServiceInvHeader,ServiceCrMemoHeader);

                                   ReserveServiceLine.DeleteInvoiceSpecFromHeader("Service Header");

                                   ServiceCommentLine.SETRANGE(Type,"Document Type");
                                   ServiceCommentLine.SETRANGE("No.","No.");
                                   ServiceCommentLine.DELETEALL;

                                   DocDim.SETRANGE("Table ID",DATABASE::"Service Header");
                                   DocDim.SETRANGE("Line No.",0);
                                   DocDim.DELETEALL;

                                   WhseRequest.SETRANGE("Source Type",DATABASE::"Service Line");
                                   WhseRequest.SETRANGE("Source Subtype","Document Type");
                                   WhseRequest.SETRANGE("Source No.","No.");
                                   WhseRequest.DELETEALL(TRUE);

                                   ServOrderAlloc.RESET;
                                   ServOrderAlloc.SETCURRENTKEY("Document Type");
                                   ServOrderAlloc.SETRANGE("Document Type","Document Type");
                                   ServOrderAlloc.SETRANGE("Document No.","No.");
                                   ServOrderAlloc.SETRANGE(Posted,FALSE);
                                   ServOrderAlloc.DELETEALL;
                                   ServAllocMgt.SetServOrderAllocStatus("Service Header");

                                   DELETE;
                                   COMMIT;
                                 END;
                               END;
                             END;
                           END;
                         END;

        ReqFilterFields=No.,Customer No.,Bill-to Customer No.;
      }
      SECTIONS
      {
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Processing Service orders #1##########;ESP=Procesando peds. servicio #1##########';
      ServiceOrderItemLine@1012 : Record 5901;
      ServiceOrderLine@1001 : Record 5902;
      ServiceShptHeader@1009 : Record 5990;
      ServiceInvHeader@1010 : Record 5992;
      ServiceCrMemoHeader@1011 : Record 5994;
      ServiceCommentLine@1002 : Record 5906;
      DocDim@1003 : Record 357;
      ItemChargeAssgntService@1007 : Record 5809;
      WhseRequest@1008 : Record 5765;
      ServOrderAlloc@1014 : Record 5950;
      ServicePost@1005 : Codeunit 5980;
      ReserveServiceLine@1006 : Codeunit 99000842;
      ServAllocMgt@1013 : Codeunit 5930;
      Window@1004 : Dialog;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}
