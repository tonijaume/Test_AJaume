OBJECT Report 7010074 Transfer-Hotel Passenger List
{
  OBJECT-PROPERTIES
  {
    Date=22/06/15;
    Time=18:17:43;
    Modified=Yes;
    Version List=AIC2009,CNT;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Transfer-Hotel Passenger List;
               ESP=Transfer-Hotel Passenger List];
    LeftMargin=1500;
    OnInitReport=BEGIN
                   rInfEmp.FINDFIRST;
                   rInfEmp.CALCFIELDS(Picture);
                 END;

    OnPreReport=BEGIN
                  IF (wFechaDesde = 0D) OR (wFechaHasta=0D) THEN
                    ERROR(Text001);

                  IF (wFechaDesde > wFechaHasta) THEN
                    ERROR(Text002);

                  wTextDia := STRSUBSTNO(Text007, CURRENTDATETIME);
                END;

  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number);
        MaxIteration=1;
        DataItemVarName=Pagina;
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Footer;
            SectionWidth=18450;
            SectionHeight=423;
          }
          CONTROLS
          {
            { 1100217031;TextBox;18000;0    ;450  ;423  ;CaptionML=ESP=P g.;
                                                         SourceExpr=CurrReport.PAGENO }
            { 1100217030;Label  ;17250;0    ;750  ;423  ;ParentControl=1100217031 }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number);
        DataItemVarName=INT1;
        OnPreDataItem=BEGIN
                        IF wStCancel THEN
                          BuildTempCancel
                        ELSE
                          BuildTemp;
                        CLEAR(rTemp);
                        wHotelAnt:= 'XXXXXXXXXXXX';
                        wFirst := TRUE;

                        CASE wOrden OF
                          wOrden::Hotel : rTemp.SETCURRENTKEY(Code01,Code02,Date01,Time01, Code05);
                          wOrden::Agencia : rTemp.SETCURRENTKEY(Code02,Code01,Date01,Time01, Code05);
                        END;
                      END;

        OnAfterGetRecord=VAR
                           lwOk@1100217000 : Boolean;
                           lrTemp2@1100217001 : TEMPORARY Record 7010251;
                           lwMismoBono@1100217002 : Boolean;
                         BEGIN

                           IF wFirst THEN
                             lwOk := rTemp.FINDFIRST
                           ELSE
                             lwOk := rTemp.NEXT<>0;

                           IF NOT lwOk THEN
                             CurrReport.BREAK;

                           IF wShowTotal THEN
                            CLEAR(wTotalPax);

                           wNewHotel := wHotelAnt <> rTemp.Code01;
                           wHotelAnt := rTemp.Code01;

                           wTotalPax[1] += rTemp.Dec01;
                           wTotalPax[2] += rTemp.Dec02;
                           //+$001 <
                           wGTotalPax[1] += rTemp.Dec01;
                           wGTotalPax[2] += rTemp.Dec02;
                           //+$001 >
                           lrTemp2 := rTemp;
                           IF rTemp.NEXT <> 0 THEN BEGIN
                             wShowTotal := rTemp.Code01 <> lrTemp2.Code01;
                           END
                           ELSE
                             wShowTotal := TRUE;

                           rTemp := lrTemp2; // Se deja el puntero como estaba

                           lwMismoBono := (rTempAnt.Code05 = rTemp.Code05) AND (rTempAnt.Date01 = rTemp.Date01) AND
                                          (rTempAnt.Date02 = rTemp.Date02) AND (rTempAnt.Code03 = rTemp.Code03) AND
                                          (rTempAnt.Code04 = rTemp.Code04);
                           rTempSw := rTemp;
                           rTempAnt:= rTemp;
                           IF lwMismoBono THEN BEGIN
                             CLEAR(rTempSw.Code02);
                             CLEAR(rTempSw.Code03);
                             CLEAR(rTempSw.Code04);
                             CLEAR(rTempSw.Code05);
                             CLEAR(rTempSw.Dec01);
                             CLEAR(rTempSw.Dec02);
                             CLEAR(rTempSw.Date01);
                             CLEAR(rTempSw.Date02);
                             CLEAR(rTempSw.Time01);
                             CLEAR(rTempSw.Time02);
                           END
                           ELSE BEGIN
                             // Buscamos todos los pax relacionados
                             lrTemp2.COPY(rTemp);
                             CLEAR(rTemp);
                             rTemp.SETRANGE(Code05 , lrTemp2.Code05);
                             rTemp.SETRANGE(Date01 , lrTemp2.Date01);
                             rTemp.SETRANGE(Date02 , lrTemp2.Date02);
                             rTemp.SETRANGE(Code03 , lrTemp2.Code03);
                             rTemp.SETRANGE(Code04 , lrTemp2.Code04);
                             IF rTemp.FINDSET THEN BEGIN
                               CLEAR(rTempSw.Dec01);
                               CLEAR(rTempSw.Dec02);
                               REPEAT
                                 rTempSw.Dec01 += rTemp.Dec01;
                                 rTempSw.Dec02 += rTemp.Dec02;
                               UNTIL rTemp.NEXT=0;
                             END;
                             rTemp.COPY(lrTemp2); // Se deja el puntero como estaba
                           END;

                           IF wPagxHotel THEN BEGIN // Salto de pagina x hotel
                             IF wNewHotel AND (NOT wFirst) THEN
                               CurrReport.NEWPAGE;
                           END;

                           wFirst := FALSE;
                         END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Header;
            PrintOnEveryPage=Yes;
            SectionWidth=18450;
            SectionHeight=2115;
            KeepWithNext=Yes;
          }
          CONTROLS
          {
            { 1100217026;TextBox;6900 ;0    ;6300 ;423  ;HorzAlign=Center;
                                                         FontSize=10;
                                                         FontBold=Yes;
                                                         SourceExpr=GetText(1) }
            { 1100217027;TextBox;6900 ;423  ;6300 ;423  ;HorzAlign=Center;
                                                         SourceExpr=GetText(2) }
            { 1100217028;TextBox;14250;0    ;4200 ;423  ;HorzAlign=Right;
                                                         SourceExpr=GetText(3) }
            { 1100217029;TextBox;14250;423  ;4200 ;423  ;HorzAlign=Right;
                                                         SourceExpr=wTextDia }
            { 1100217032;PictureBox;0 ;0    ;6150 ;2115 ;SourceExpr=rInfEmp.Picture }
          }
           }
        { PROPERTIES
          {
            SectionType=Header;
            PrintOnEveryPage=Yes;
            SectionWidth=18450;
            SectionHeight=1269;
          }
          CONTROLS
          {
            { 1100217022;Shape  ;0    ;846  ;18450;423  ;ShapeStyle=HorzLine }
            { 1100217024;Shape  ;11550;0    ;4050 ;846  ;ShapeStyle=HorzLine }
            { 1100217023;Shape  ;7350 ;0    ;4050 ;846  ;ShapeStyle=HorzLine }
            { 1100253002;Label  ;0    ;423  ;4650 ;423  ;ParentControl=1100253001;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1100253004;Label  ;4800 ;423  ;1500 ;423  ;ParentControl=1100253003;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1100217001;Label  ;6450 ;423  ;750  ;423  ;ParentControl=1100217000;
                                                         HorzAlign=Center;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1100217003;Label  ;7350 ;423  ;1200 ;423  ;ParentControl=1100217002;
                                                         HorzAlign=Left;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1100217007;Label  ;8700 ;423  ;1350 ;423  ;ParentControl=1100217006;
                                                         HorzAlign=Left;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1100217009;Label  ;17400;423  ;1050 ;423  ;ParentControl=1100217008;
                                                         HorzAlign=Left;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1100217011;Label  ;15750;423  ;1500 ;423  ;ParentControl=1100217010;
                                                         HorzAlign=Left;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1100217005;Label  ;10200;423  ;1200 ;423  ;ParentControl=1100217004;
                                                         HorzAlign=Left;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1100217015;Label  ;14400;423  ;1200 ;423  ;ParentControl=1100217012;
                                                         HorzAlign=Left;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1100217016;Label  ;12900;423  ;1350 ;423  ;ParentControl=1100217013;
                                                         HorzAlign=Left;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1100217017;Label  ;11550;423  ;1200 ;423  ;ParentControl=1100217014;
                                                         HorzAlign=Left;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1100217020;Label  ;7350 ;0    ;4050 ;423  ;HorzAlign=Center;
                                                         FontBold=Yes;
                                                         CaptionML=[ENU=ARRIVAL;
                                                                    ESP=LLEGADA] }
            { 1100217021;Label  ;11550;0    ;4050 ;423  ;HorzAlign=Center;
                                                         FontBold=Yes;
                                                         CaptionML=[ENU=DEPARTURE;
                                                                    ESP=SALIDA] }
          }
           }
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=18450;
            SectionHeight=846;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT(wNewHotel);
                         END;

          }
          CONTROLS
          {
            { 1100253000;TextBox;0    ;423  ;8550 ;423  ;FontSize=10;
                                                         FontBold=Yes;
                                                         SourceExpr=NombreHotel(rTemp.Code01) }
          }
           }
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=18450;
            SectionHeight=423;
          }
          CONTROLS
          {
            { 1100253001;TextBox;0    ;0    ;4650 ;423  ;CaptionML=ESP=NOMBRE;
                                                         SourceExpr=rTemp.Text01 }
            { 1100253003;TextBox;4800 ;0    ;1500 ;423  ;CaptionML=ESP=BOOKING;
                                                         SourceExpr=rTempSw.Code05 }
            { 1100217000;TextBox;6450 ;0    ;750  ;423  ;HorzAlign=Center;
                                                         CaptionML=ESP=Pax;
                                                         DecimalPlaces=0:1;
                                                         BlankZero=Yes;
                                                         SourceExpr=GetPax(rTempSw) }
            { 1100217002;TextBox;7350 ;0    ;1200 ;423  ;HorzAlign=Left;
                                                         CaptionML=[ENU=DATE;
                                                                    ESP=FECHA];
                                                         SourceExpr=rTempSw.Date01 }
            { 1100217006;TextBox;8700 ;0    ;1350 ;423  ;HorzAlign=Center;
                                                         CaptionML=[ENU=FLIGHT;
                                                                    ESP=VUELO];
                                                         SourceExpr=rTempSw.Code03 }
            { 1100217008;TextBox;17400;0    ;1050 ;423  ;HorzAlign=Left;
                                                         CaptionML=ESP=REF;
                                                         BlankZero=Yes;
                                                         SourceExpr=rTempSw.Int01 }
            { 1100217010;TextBox;15750;0    ;1500 ;423  ;HorzAlign=Left;
                                                         CaptionML=[ENU=AGENCY;
                                                                    ESP=AGENCIA];
                                                         SourceExpr=rTempSw.Code02 }
            { 1100217004;TextBox;10200;0    ;1200 ;423  ;HorzAlign=Left;
                                                         CaptionML=[ENU=TIME;
                                                                    ESP=HORA];
                                                         SourceExpr=rTempSw.Time01 }
            { 1100217012;TextBox;14400;0    ;1200 ;423  ;HorzAlign=Left;
                                                         CaptionML=[ENU=TIME;
                                                                    ESP=HORA];
                                                         SourceExpr=rTempSw.Time02 }
            { 1100217013;TextBox;12900;0    ;1350 ;423  ;HorzAlign=Left;
                                                         CaptionML=[ENU=FLIGHT;
                                                                    ESP=Vuelo];
                                                         SourceExpr=rTempSw.Code04 }
            { 1100217014;TextBox;11550;0    ;1200 ;423  ;HorzAlign=Left;
                                                         CaptionML=[ENU=DATE;
                                                                    ESP=FECHA];
                                                         SourceExpr=rTempSw.Date02 }
          }
           }
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=18450;
            SectionHeight=423;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT(wShowTotal);
                         END;

          }
          CONTROLS
          {
            { 1100217018;TextBox;6450 ;0    ;750  ;423  ;HorzAlign=Center;
                                                         FontBold=Yes;
                                                         DecimalPlaces=0:1;
                                                         SourceExpr=STRSUBSTNO('%1.%2',wTotalPax[1],wTotalPax[2]) }
            { 1100217019;Shape  ;0    ;0    ;6300 ;423  ;ShapeStyle=HorzLine }
            { 1100217025;Shape  ;7350 ;0    ;11100;423  ;ShapeStyle=HorzLine }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number);
        MaxIteration=1;
        DataItemVarName=TotalFinal;
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=18450;
            SectionHeight=846;
          }
          CONTROLS
          {
            { 1100217033;TextBox;6450 ;423  ;750  ;423  ;HorzAlign=Center;
                                                         FontBold=Yes;
                                                         DecimalPlaces=0:1;
                                                         SourceExpr=STRSUBSTNO('%1.%2',wGTotalPax[1],wGTotalPax[2]) }
            { 1100217034;Shape  ;0    ;423  ;6300 ;423  ;ShapeStyle=HorzLine }
            { 1100217035;Shape  ;7350 ;423  ;11100;423  ;ShapeStyle=HorzLine }
          }
           }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=11110;
      Height=7260;
      CaptionML=[ENU=Transfer-Hotel Passenger List;
                 ESP=Transfer-Hotel Passenger List];
      ActiveControlOnOpen=1100217000;
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1100217000;TextBox;2860 ;220  ;2970 ;440  ;InPage=-1;
                                                   CaptionML=[ENU=Service Type;
                                                              ESP=Tipo de Servicio];
                                                   SourceExpr=wTipoServicio }
      { 1100217001;Label  ;220  ;220  ;2530 ;440  ;ParentControl=1100217000 }
      { 1100217002;TextBox;2860 ;770  ;1700 ;440  ;InPage=-1;
                                                   CaptionML=[ENU=From;
                                                              ESP=Inicio];
                                                   NextControl=1100217007;
                                                   SourceExpr=wFechaDesde;
                                                   OnAfterValidate=BEGIN
                                                                     IF wFechaHasta = 0D THEN
                                                                       wFechaHasta := wFechaDesde;
                                                                   END;
                                                                    }
      { 1100217003;Label  ;220  ;770  ;2530 ;440  ;ParentControl=1100217002 }
      { 1100217007;TextBox;5940 ;770  ;1700 ;440  ;InPage=-1;
                                                   CaptionML=[ENU=To;
                                                              ESP=Fin];
                                                   SourceExpr=wFechaHasta }
      { 1100217008;Label  ;4730 ;770  ;1100 ;440  ;ParentControl=1100217007 }
      { 1100217004;TextBox;220  ;2090 ;10670;440  ;InPage=-1;
                                                   SourceExpr=wFiltroHotel;
                                                   OnValidate=VAR
                                                                lrHotel@1100217000 : Record 7009724;
                                                              BEGIN

                                                                wFiltroHotel := UPPERCASE(CONVERTSTR(wFiltroHotel,',','|'));
                                                              END;

                                                   OnLookup=VAR
                                                              lrHotel@1100217000 : Record 7009724;
                                                            BEGIN
                                                              CLEAR(lrHotel);
                                                              IF FORM.RUNMODAL(0, lrHotel)= ACTION::LookupOK THEN BEGIN
                                                                IF STRPOS(wFiltroHotel, lrHotel.Hotel)=0 THEN BEGIN
                                                                  IF wFiltroHotel <> '' THEN
                                                                    wFiltroHotel += '|';
                                                                  wFiltroHotel += lrHotel.Hotel;
                                                                END;
                                                              END;
                                                            END;
                                                             }
      { 1100217005;Label  ;220  ;1650 ;3300 ;440  ;LeaderDots=No;
                                                   CaptionML=ESP=Hotel }
      { 1100217006;TextBox;220  ;3080 ;10670;440  ;InPage=-1;
                                                   SourceExpr=wFiltroTTOO;
                                                   OnValidate=VAR
                                                                lrHotel@1100217000 : Record 7009724;
                                                              BEGIN

                                                                wFiltroTTOO  := UPPERCASE(CONVERTSTR(wFiltroTTOO ,',','|'));
                                                              END;

                                                   OnLookup=VAR
                                                              lrTTOO@1100217000 : Record 7009717;
                                                            BEGIN
                                                              CLEAR(lrTTOO);
                                                              IF FORM.RUNMODAL(0, lrTTOO)= ACTION::LookupOK THEN BEGIN
                                                                IF STRPOS(wFiltroTTOO, lrTTOO.TourOperador)=0 THEN BEGIN
                                                                  IF wFiltroTTOO <> '' THEN
                                                                    wFiltroTTOO += '|';
                                                                  wFiltroTTOO += lrTTOO.TourOperador;
                                                                END;
                                                              END;
                                                            END;
                                                             }
      { 1100217009;Label  ;220  ;2640 ;3300 ;440  ;LeaderDots=No;
                                                   CaptionML=ESP=TTOO }
      { 1100217011;TextBox;3630 ;4730 ;1700 ;440  ;InPage=-1;
                                                   CaptionML=[ENU=Order;
                                                              ESP=Orden];
                                                   SourceExpr=wOrden }
      { 1100217012;Label  ;220  ;4730 ;3300 ;440  ;ParentControl=1100217011 }
      { 1100217013;CheckBox;3630;5280 ;440  ;440  ;InPage=-1;
                                                   ShowCaption=No;
                                                   CaptionML=[ENU=Page Break by Hotel;
                                                              ESP=Salto de p gina por Hotel];
                                                   SourceExpr=wPagxHotel }
      { 1100217014;Label  ;220  ;5280 ;3300 ;440  ;ParentControl=1100217013 }
      { 1100217010;TextBox;220  ;4070 ;10670;440  ;InPage=-1;
                                                   SourceExpr=wFiltroVuelo;
                                                   OnValidate=BEGIN
                                                                wFiltroVuelo := UPPERCASE(CONVERTSTR(wFiltroVuelo,',','|'));
                                                              END;

                                                   OnLookup=BEGIN
                                                              rPlanVuelo.RESET;
                                                              rPlanVuelo.SETRANGE(Fecha, wFechaDesde, wFechaHasta);
                                                              IF wTipoServicio = wTipoServicio::LLegadas THEN
                                                                rPlanVuelo.SETRANGE("Entrada/Salida", rPlanVuelo."Entrada/Salida"::Entrada)
                                                              ELSE
                                                                rPlanVuelo.SETRANGE("Entrada/Salida", rPlanVuelo."Entrada/Salida"::Salida);
                                                              IF rPlanVuelo.FINDSET THEN
                                                              BEGIN
                                                                IF FORM.RUNMODAL(0, rPlanVuelo) = ACTION::LookupOK THEN
                                                                  wFiltroVuelo := rPlanVuelo.Compa¤ia + rPlanVuelo.Vuelo;
                                                              END;
                                                            END;
                                                             }
      { 1100217015;Label  ;220  ;3630 ;3300 ;440  ;ParentControl=1100217010;
                                                   LeaderDots=No;
                                                   CaptionML=[ENU=Flights;
                                                              ESP=Vuelos] }
      { 1100217016;CheckBox;3630;5830 ;440  ;440  ;InPage=-1;
                                                   ShowCaption=No;
                                                   CaptionML=[ENU=Cancel;
                                                              ESP=Cancelada];
                                                   SourceExpr=wStCancel }
      { 1100217017;Label  ;220  ;5830 ;3300 ;440  ;ParentControl=1100217016 }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      rTemp@1100217005 : TEMPORARY Record 7010251;
      rTempAnt@1100217000 : TEMPORARY Record 7010251;
      rTempSw@1100217001 : TEMPORARY Record 7010251;
      rPlanVuelo@1100217029 : Record 7009754;
      rInfEmp@1100217022 : Record 79;
      wTipoServicio@1100253000 : 'LLegadas,Salidas';
      wFechaDesde@1100253001 : Date;
      wFechaHasta@1100253002 : Date;
      Text001@1100217003 : TextConst 'ENU=Must set a date range;ESP=Debe de insertar un rango de fechas';
      Text002@1100217004 : TextConst 'ENU=From date can''t be later To date;ESP=Fecha Inicio no puede ser posterior a Fecha Fin';
      wFiltroHotel@1100217006 : Text[250];
      wFiltroTTOO@1100217007 : Text[250];
      wFiltroVuelo@1100217024 : Text[250];
      wTextDia@1100217020 : Text[30];
      wHotelAnt@1100217008 : Code[20];
      wNewHotel@1100217009 : Boolean;
      wShowTotal@1100217015 : Boolean;
      wPagxHotel@1100217023 : Boolean;
      wFirst@1100217010 : Boolean;
      wStNoShow@1100217026 : Boolean;
      wStCancel@1100217027 : Boolean;
      wTotal@1100217011 : Integer;
      wCont@1100217012 : Integer;
      wDialog@1100217013 : Dialog;
      Text003@1100217014 : TextConst 'ENU=Building Temporary;ESP=Creando Temporal';
      wTotalPax@1100217016 : ARRAY [2] OF Integer;
      wGTotalPax@1100217028 : ARRAY [2] OF Integer;
      wOrden@1100217017 : 'Hotel,Agencia';
      Text004@1100217002 : TextConst 'ENU=LIST OF %1 (HOTEL);ESP=LISTA DE %1 (Por Hotel)';
      Text005@1100217018 : TextConst 'ENU=FROM %1 TO %2;ESP=DEL %1 AL %2';
      Text006@1100217019 : TextConst 'ENU=Report Created by %1;ESP=Reporte Generado por %1';
      Text007@1100217021 : TextConst 'ENU=Day:;ESP="El d¡a %1  "';
      Text008@1100217025 : TextConst 'ENU=No Hotel;ESP=Sin Hotel';

    PROCEDURE NombreHotel@1100253001(pwHotel@1100217000 : Code[10]) : Text[250];
    VAR
      lwText@1100253000 : Text[250];
      lrHotel@1100217001 : Record 7009724;
    BEGIN
      // NombreHotel

      IF lrHotel.GET(pwHotel) THEN
        lwText := STRSUBSTNO('%1 (%2)', lrHotel.Nombre, lrHotel."Zona Fisica")
      ELSE
        lwText := pwHotel;
      IF lwText = '' THEN
        lwText := Text008;

      EXIT(lwText);
    END;

    PROCEDURE BuildTemp@1100217006();
    VAR
      lrResTr@1100217001 : Record 7009744;
      lwId@1100217000 : Integer;
      lwOk@1100217002 : Boolean;
    BEGIN
      // BuildTemp

      CLEAR(rTemp);

      CLEAR(lrResTr);
      CASE wTipoServicio OF
         wTipoServicio::LLegadas : BEGIN
                                lrResTr.SETCURRENTKEY("Fecha entrada",TourOperador,Nombre);
                                lrResTr.SETRANGE("Fecha entrada", wFechaDesde, wFechaHasta);
                                lrResTr.SETRANGE(Entrada, 1); // +$003
                                IF wFiltroHotel <> '' THEN
                                  lrResTr.SETFILTER("Hotel entrada", wFiltroHotel);
                              END;
         wTipoServicio::Salidas : BEGIN
                                lrResTr.SETCURRENTKEY("Fecha salida",TourOperador,Nombre);
                                lrResTr.SETRANGE("Fecha salida", wFechaDesde, wFechaHasta);
                                lrResTr.SETRANGE(Salida , 1); // +$003
                                IF wFiltroHotel <> '' THEN
                                  lrResTr.SETFILTER("Hotel salida", wFiltroHotel);
                              END;
      END;

      IF wFiltroTTOO <> '' THEN
        lrResTr.SETRANGE(TourOperador, wFiltroTTOO);

      IF lrResTr.FINDSET THEN BEGIN
        wDialog.OPEN(Text003 + ' @1@@@@@@@@');
        wTotal := lrResTr.COUNT;
        wCont  := 0;
        CLEAR(lwId);
        REPEAT
          CLEAR(rTemp);
            lwId +=1;
            rTemp.Id := lwId;
            CASE wTipoServicio OF
              wTipoServicio::LLegadas : rTemp.Code01 := lrResTr."Hotel entrada";
              wTipoServicio::Salidas  : rTemp.Code01 := lrResTr."Hotel salida";
            END;
            rTemp.Code02 := lrResTr.TourOperador;
            rTemp.Code03 := lrResTr."Compa¤ia entrada" + lrResTr."Vuelo entrada";
            rTemp.Code04 := lrResTr."Compa¤ia salida" + lrResTr."Vuelo salida";
            rTemp.Date01 := lrResTr."Fecha entrada";
            rTemp.Date02 := lrResTr."Fecha salida";
            rTemp.Time01 := lrResTr.GetHoraVueloEntrada;
            rTemp.Time02 := lrResTr.GetHoraVueloSalida;
            rTemp.Text01 := lrResTr.Nombre;
            rTemp.Code05 := lrResTr.Bono;
            rTemp.Int01  := lrResTr."N§ Reserva";

            //-$002lrResTr.CALCFIELDS(Personas, Ni¤os);
            rTemp.Dec01  := lrResTr."N§ Personas" - lrResTr."N§ Ni¤os"; //+$002
            rTemp.Dec02  := lrResTr."N§ Ni¤os"; //+$002

            // Mira si alguno de los dos vuelos est  en el filtro
            lwOk := TRUE;
            IF wFiltroVuelo <> '' THEN
              lwOk :=  (STRPOS(wFiltroVuelo, rTemp.Code03)<>0) OR (STRPOS(wFiltroVuelo, rTemp.Code04)<>0);

            IF lwOk THEN
              rTemp.INSERT;
          wCont += 1;
          wDialog.UPDATE(1, ROUND(wCont/wTotal*10000,1));
        UNTIL lrResTr.NEXT=0;
        wDialog.CLOSE;
      END;
    END;

    PROCEDURE BuildTempCancel@1100217002();
    VAR
      lrResTrCn@1100217001 : Record 7009848;
      lwId@1100217000 : Integer;
      lwOk@1100217002 : Boolean;
    BEGIN
      // BuildTempCancel
      // Igual que el anterior pero trabaja sobre las canceladas

      CLEAR(rTemp);

      CLEAR(lrResTrCn);
      CASE wTipoServicio OF
         wTipoServicio::LLegadas : BEGIN
                                lrResTrCn.SETCURRENTKEY("Fecha entrada",TourOperador,Nombre);
                                lrResTrCn.SETRANGE("Fecha entrada", wFechaDesde, wFechaHasta);
                                lrResTrCn.SETRANGE(Entrada, 1); // +$003
                                IF wFiltroHotel <> '' THEN
                                  lrResTrCn.SETFILTER("Hotel entrada", wFiltroHotel);
                              END;
         wTipoServicio::Salidas : BEGIN
                                lrResTrCn.SETCURRENTKEY("Fecha salida",TourOperador,Nombre);
                                lrResTrCn.SETRANGE("Fecha salida", wFechaDesde, wFechaHasta);
                                lrResTrCn.SETRANGE(Salida, 1); // +$003
                                IF wFiltroHotel <> '' THEN
                                  lrResTrCn.SETFILTER("Hotel salida", wFiltroHotel);
                              END;
      END;

      IF wFiltroTTOO <> '' THEN
        lrResTrCn.SETRANGE(TourOperador, wFiltroTTOO);

      IF lrResTrCn.FINDSET THEN BEGIN
        wDialog.OPEN(Text003 + ' @1@@@@@@@@');
        wTotal := lrResTrCn.COUNT;
        wCont  := 0;
        CLEAR(lwId);
        REPEAT
          CLEAR(rTemp);
            lwId +=1;
            rTemp.Id := lwId;
            CASE wTipoServicio OF
              wTipoServicio::LLegadas : rTemp.Code01 := lrResTrCn."Hotel entrada";
              wTipoServicio::Salidas  : rTemp.Code01 := lrResTrCn."Hotel salida";
            END;
            rTemp.Code02 := lrResTrCn.TourOperador;
            rTemp.Code03 := lrResTrCn."Compa¤ia entrada" + lrResTrCn."Vuelo entrada";
            rTemp.Code04 := lrResTrCn."Compa¤ia salida" + lrResTrCn."Vuelo salida";
            rTemp.Date01 := lrResTrCn."Fecha entrada";
            rTemp.Date02 := lrResTrCn."Fecha salida";
            //rTemp.Time01 := lrResTrCn.GetHoraVueloEntrada;
            //rTemp.Time02 := lrResTrCn.GetHoraVueloSalida;
            rTemp.Text01 := lrResTrCn.Nombre;
            rTemp.Code05 := lrResTrCn.Bono;
            rTemp.Int01  := lrResTrCn."N§ Reserva";

            //-$002lrResTrCn.CALCFIELDS(Personas, Ni¤os);
            rTemp.Dec01  := lrResTrCn."N§ Personas" - lrResTrCn."N§ Ni¤os"; //+$002
            rTemp.Dec02  := lrResTrCn."N§ Ni¤os"; //+$002

            // Mira si alguno de los dos vuelos est  en el filtro
            lwOk := TRUE;
            IF wFiltroVuelo <> '' THEN
              lwOk :=  (STRPOS(wFiltroVuelo, rTemp.Code03)<>0) OR (STRPOS(wFiltroVuelo, rTemp.Code04)<>0);

            IF lwOk THEN
              rTemp.INSERT;
          wCont += 1;
          wDialog.UPDATE(1, ROUND(wCont / wTotal * 10000, 1));
        UNTIL lrResTrCn.NEXT=0;
        wDialog.CLOSE;
      END;
    END;

    PROCEDURE GetText@1100217000(pwNum@1100217000 : Integer) : Text[1024];
    VAR
      lwText@1100217001 : Text[1024];
    BEGIN
      // GetText

      CASE pwNum OF
        1 : lwText := STRSUBSTNO(Text004, wTipoServicio);
        2 : lwText := STRSUBSTNO(Text005, wFechaDesde, wFechaHasta);
        3 : lwText := STRSUBSTNO(Text006, NomUsuario);
      END;

      EXIT(lwText);
    END;

    PROCEDURE NomUsuario@1100217001() : Text[250];
    VAR
      lrUser@1100217000 : Record 2000000002;
      lwNom@1100217001 : Text[250];
    BEGIN
      // NomUsuario

      CLEAR(lwNom);
      CLEAR(lrUser);
      IF lrUser.GET(USERID) THEN
        lwNom := lrUser.Name;
      IF lwNom='' THEN
        lwNom := USERID;
      EXIT(lwNom);
    END;

    PROCEDURE GetPax@1100217003(prTemp@1100217000 : Record 7010251) : Text[30];
    VAR
      lwText@1100217001 : Text[30];
      lwAdult@1100217002 : Integer;
      lwNi¤os@1100217003 : Integer;
    BEGIN
      // GetPax

      lwAdult := rTemp.Dec01;
      lwNi¤os := rTemp.Dec02;
      CLEAR(lwText);
      IF lwNi¤os <> 0 THEN BEGIN
        lwText := STRSUBSTNO('%1.%2', lwAdult, lwNi¤os);
      END
      ELSE
        lwText := FORMAT(lwAdult);

      EXIT(lwText);
    END;

    BEGIN
    {
      $001 AJS 14062013 Crear un total final para el informe

      $002 AJS 14042014 La suma personas no se hace sobre campos calculados de reserva transfer

      $003 ARM 22062015 CNT-14-122 A¤adido filtro Entrada o Salida = 1
    }
    END.
  }
  RDLDATA
  {
  }
}
