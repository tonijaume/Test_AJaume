OBJECT Report 7010430 Comprobacion Partes x proveedo
{
  OBJECT-PROPERTIES
  {
    Date=30/10/08;
    Time=12:43:16;
    Version List=TRANSFER;
  }
  PROPERTIES
  {
    LeftMargin=1600;
    OnInitReport=BEGIN
                   wMostrarDetalle     := TRUE;
                   wMostrarResumenxDia := TRUE;
                 END;

    OnPreReport=BEGIN
                  wCrearExcel := (wOpcionExcel <> wOpcionExcel::No);

                  IF wCrearExcel THEN
                    IniciaExcel;

                  // AJF 29/10/08
                  IF wOpcionExcel = wOpcionExcel::"Resumen mensual" THEN
                    CabResumenMes;
                END;

    OnPostReport=BEGIN
                   IF wCrearExcel THEN BEGIN
                     rExcel.CreateSheet('PartesxProveedor', 'Partes x Proveedor', COMPANYNAME, USERID, FALSE, TRUE, 'Creando Excel...');
                     rExcel.GiveUserControl;
                   END;
                 END;

    Orientation=Portrait;
  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number);
        MaxIteration=1;
        DataItemVarName=Total;
        OnPreDataItem=BEGIN
                        wTotalFac       := 0;
                        wTotalCoste     := 0;
                        wTotalPax       := 0;
                        wTotalPartes[4] := 0;
                      END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Header;
            PrintOnEveryPage=Yes;
            SectionWidth=18450;
            SectionHeight=846;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT(NOT wCrearExcel);
                         END;

          }
          CONTROLS
          {
            { 1103355001;TextBox;0    ;0    ;7500 ;423  ;FontSize=8;
                                                         SourceExpr=COMPANYNAME }
            { 1103355003;Shape  ;0    ;423  ;18450;423  ;ShapeStyle=HorzLine }
            { 1103355028;Label  ;10950;0    ;7500 ;423  ;HorzAlign=Right;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=[ENU=Vendor;
                                                                    ESP=Comprobacion Partes x proveedor] }
          }
           }
        { PROPERTIES
          {
            SectionType=Footer;
            PrintOnEveryPage=Yes;
            PlaceInBottom=Yes;
            SectionWidth=18450;
            SectionHeight=846;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT(NOT wCrearExcel);
                         END;

          }
          CONTROLS
          {
            { 1103355010;Shape  ;0    ;0    ;18450;423  ;ShapeStyle=HorzLine }
            { 1103355002;TextBox;0    ;423  ;3150 ;423  ;HorzAlign=Right;
                                                         FontSize=8;
                                                         SourceExpr=FORMAT(TODAY,0,4) }
            { 1103355006;TextBox;3150 ;423  ;13050;423  ;HorzAlign=Center;
                                                         FontSize=8;
                                                         SourceExpr=USERID }
            { 1103355004;TextBox;18000;423  ;450  ;423  ;FontSize=8;
                                                         CaptionML=ESP=P gina;
                                                         SourceExpr=CurrReport.PAGENO }
            { 1103355005;Label  ;16800;423  ;1200 ;423  ;ParentControl=1103355004;
                                                         FontSize=8;
                                                         LeaderDots=Yes }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table23;
        DataItemTableView=SORTING(No.);
        NewPagePerRecord=Yes;
        OnPreDataItem=BEGIN
                        IF wExcluyeAgregados THEN
                          wTextoAgregados := Text007
                        ELSE
                          wTextoAgregados := '';

                        IF wEstadoPartes = wEstadoPartes::Todos THEN
                          wTextoEstadoPartes := ''
                        ELSE
                          wTextoEstadoPartes := STRSUBSTNO(Text006, wEstadoPartes);

                        IF wFiltroPax[1] + wFiltroPax[2] <> 0 THEN BEGIN
                          IF wTextoEstadoPartes <> '' THEN
                            wTextoEstadoPartes += ' - ';
                          wTextoEstadoPartes += STRSUBSTNO(Text009,wFiltroPax[1],wFiltroPax[2]);
                        END;
                      END;

        OnAfterGetRecord=BEGIN
                           CLEAR(wTotalFacProveedor);
                           CLEAR(wTotalCosteProveedor);
                           wTotalPdteProveedor  := 0;
                           wTotalPaxProv        := 0;
                           wTotalPartes[1]      := 0;

                           IF wOpcionExcel = wOpcionExcel::Informe THEN BEGIN
                             RellenaCelda('Proveedor: ' + Vendor."No." + '(' + Vendor.Name + ')   ' + wTextoAgregados, TRUE, FALSE, '');
                             MueveFila(1);
                             RellenaCelda(STRSUBSTNO(Text005, wEstadoFacturacion), FALSE, FALSE, '');
                             MueveFila(1);
                             RellenaCelda(wTextoEstadoPartes                     , FALSE, FALSE, '');
                             MueveFila(2);
                           END;

                           // AJF 29/10/08
                           // Resumen mensual excel.
                           IF wOpcionExcel = wOpcionExcel::"Resumen mensual" THEN
                             IniciaPeriodoProv;
                         END;

        OnPostDataItem=BEGIN
                         IF wOpcionExcel = wOpcionExcel::"Resumen mensual" THEN
                           TotalPeriodoProv(Vendor);
                       END;

        ReqFilterFields=No.;
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=18450;
            SectionHeight=1692;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT(NOT wCrearExcel);
                         END;

          }
          CONTROLS
          {
            { 1103355008;TextBox;3150 ;0    ;2250 ;423  ;HorzAlign=Left;
                                                         VertAlign=Bottom;
                                                         FontSize=9;
                                                         FontBold=Yes;
                                                         SourceExpr="No." }
            { 1103355009;Label  ;0    ;0    ;3000 ;423  ;ParentControl=1103355008;
                                                         FontSize=9;
                                                         FontBold=Yes;
                                                         LeaderDots=Yes;
                                                         CaptionML=ESP=Proveedor }
            { 1103355011;TextBox;5550 ;0    ;7350 ;423  ;HorzAlign=Left;
                                                         VertAlign=Bottom;
                                                         FontSize=9;
                                                         FontBold=Yes;
                                                         SourceExpr=Name }
            { 1103355029;Shape  ;0    ;1269 ;10800;423  ;ShapeStyle=HorzLine }
            { 1103355038;TextBox;0    ;423  ;18450;423  ;HorzAlign=Left;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         SourceExpr=STRSUBSTNO(Text005, wEstadoFacturacion) }
            { 1103355039;TextBox;0    ;846  ;18450;423  ;HorzAlign=Left;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         SourceExpr=wTextoEstadoPartes }
            { 1103355042;TextBox;13050;0    ;5400 ;423  ;HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         SourceExpr=wTextoAgregados }
          }
           }
        { PROPERTIES
          {
            SectionType=Footer;
            PrintOnEveryPage=No;
            PlaceInBottom=No;
            SectionWidth=18450;
            SectionHeight=846;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT(NOT wCrearExcel);

                           wDif          := wTotalFac - wTotalCoste;

                           IF wTotalCoste <> 0 THEN
                             wPorcentaje := (wDif / wTotalCoste) * 100
                           ELSE
                             wPorcentaje := 0;

                           IF (wOpcionExcel = wOpcionExcel::Informe) THEN BEGIN
                             RellenaCelda('TOTAL PROVEEDORES'    , TRUE , FALSE, ''); MueveColm(1);
                             RellenaCelda(''                     , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(''                     , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(''                     , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(''                     , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(''                     , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(FORMAT(wTotalPax)      , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(FORMAT(wTotalFac)      , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(FORMAT(wTotalCoste)    , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(FORMAT(wDif)           , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(FORMAT(wPorcentaje)    , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(FORMAT(wTotalPartes[4]), FALSE, FALSE, ''); MueveColm(1);
                             MueveFila(1);
                           END;
                         END;

          }
          CONTROLS
          {
            { 1103355072;TextBox;17250;423  ;900  ;423  ;FontSize=8;
                                                         CaptionML=ESP=Partes;
                                                         SourceExpr=wTotalPartes[4] }
            { 1103355075;TextBox;13500;423  ;2250 ;423  ;FontSize=8;
                                                         CaptionML=ESP=Diferencia;
                                                         SourceExpr=wDif }
            { 1103355076;TextBox;15900;423  ;1200 ;423  ;HorzAlign=Right;
                                                         FontSize=8;
                                                         CaptionML=ESP=Cant.;
                                                         SourceExpr=wPorcentaje }
            { 1103355077;TextBox;11100;423  ;2250 ;423  ;FontSize=8;
                                                         SourceExpr=wTotalCoste }
            { 1103355078;TextBox;8700 ;423  ;2250 ;423  ;FontSize=8;
                                                         SourceExpr=wTotalFac }
            { 1103355079;TextBox;7650 ;423  ;900  ;423  ;FontSize=8;
                                                         DecimalPlaces=0:2;
                                                         SourceExpr=wTotalPax }
            { 1103355081;Shape  ;7650 ;0    ;10800;423  ;BorderWidth=3pt;
                                                         ShapeStyle=HorzLine }
            { 1103355080;Label  ;0    ;423  ;7500 ;423  ;FontSize=8;
                                                         FontBold=Yes;
                                                         LeaderDots=Yes;
                                                         CaptionML=ESP=TOTAL PROVEEDORES }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=2;
        DataItemTable=Table2000000007;
        DataItemTableView=SORTING(Period Type,Period Start)
                          WHERE(Period Type=CONST(Date));
        DataItemVarName=Fechas;
        PrintOnlyIfDetail=Yes;
        OnPreDataItem=BEGIN
                        IF Fechas.GETFILTER("Period Start") = '' THEN
                          ERROR(Text001);

                        wFechaTemp := Fechas.GETRANGEMIN("Period Start");

                        wFechaTemp := Fechas.GETRANGEMAX("Period Start");
                      END;

        OnAfterGetRecord=BEGIN
                           IF NOT wMostrarResumenxDia THEN
                             Fechas.FINDLAST;

                           wTotalFacDia   := 0;
                           wTotalCosteDia := 0;
                           wTotalPdteDia  := 0;
                           wTotalPaxDia   := 0;
                           wTotalPartes[2]:= 0;

                           wControlCabExcel := TRUE;
                         END;

        ReqFilterFields=Period Start;
        GroupTotalFields=Period Start;
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=18450;
            SectionHeight=846;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT(NOT wCrearExcel AND wMostrarResumenxDia);
                         END;

          }
          CONTROLS
          {
            { 1103355000;TextBox;3150 ;0    ;1800 ;423  ;VertAlign=Bottom;
                                                         FontSize=9;
                                                         SourceExpr="Period Start" }
            { 1103355007;Label  ;450  ;0    ;2550 ;423  ;ParentControl=1103355000;
                                                         HorzAlign=Left;
                                                         VertAlign=Bottom;
                                                         FontSize=9;
                                                         MultiLine=Yes;
                                                         LeaderDots=Yes;
                                                         CaptionML=ESP=Dia }
            { 1103355030;Shape  ;450  ;423  ;4500 ;423  ;ShapeStyle=HorzLine }
          }
           }
        { PROPERTIES
          {
            SectionType=GroupFooter;
            SectionWidth=18450;
            SectionHeight=1269;
            OnPreSection=BEGIN
                           wDif          := wTotalFacDia - wTotalCosteDia;

                           IF wTotalCosteDia <> 0 THEN
                             wPorcentaje := (wDif / wTotalCosteDia) * 100
                           ELSE
                             wPorcentaje := 0;

                           IF wMostrarResumenxDia AND (wOpcionExcel = wOpcionExcel::Informe) AND NOT wControlCabExcel THEN BEGIN

                             RellenaCelda('  ' + STRSUBSTNO(Text003, "Period Start"), TRUE , FALSE, ''); MueveColm(1);
                             RellenaCelda(''                                        , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(''                                        , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(''                                        , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(''                                        , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(''                                        , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(FORMAT(wTotalPaxDia)                      , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(FORMAT(wTotalFacDia)                      , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(FORMAT(wTotalCosteDia)                    , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(FORMAT(wDif)                              , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(FORMAT(wPorcentaje)                       , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(FORMAT(wTotalPartes[2])                   , FALSE, FALSE, ''); MueveColm(1);
                             MueveFila(2);

                           END;
                           CurrReport.SHOWOUTPUT(NOT wCrearExcel AND wMostrarResumenxDia);
                         END;

          }
          CONTROLS
          {
            { 1103355043;Shape  ;7650 ;0    ;10800;423  ;BorderWidth=2pt;
                                                         ShapeStyle=HorzLine }
            { 1103355044;TextBox;8700 ;423  ;2250 ;423  ;FontSize=8;
                                                         SourceExpr=wTotalFacDia }
            { 1103355045;TextBox;11100;423  ;2250 ;423  ;FontSize=8;
                                                         SourceExpr=wTotalCosteDia }
            { 1103355050;TextBox;1200 ;423  ;6300 ;423  ;FontSize=8;
                                                         FontBold=Yes;
                                                         LeaderDots=Yes;
                                                         SourceExpr=STRSUBSTNO(Text003, "Period Start") }
            { 1103355055;TextBox;7650 ;423  ;900  ;423  ;FontSize=8;
                                                         DecimalPlaces=0:2;
                                                         SourceExpr=wTotalPaxDia }
            { 1103355060;TextBox;17250;423  ;900  ;423  ;FontSize=8;
                                                         CaptionML=ESP=Partes;
                                                         SourceExpr=wTotalPartes[2] }
            { 1103355064;TextBox;13500;423  ;2250 ;423  ;FontSize=8;
                                                         CaptionML=ESP=Diferencia;
                                                         SourceExpr=wDif }
            { 1103355073;TextBox;15900;423  ;1200 ;423  ;HorzAlign=Right;
                                                         FontSize=8;
                                                         CaptionML=ESP=Cant.;
                                                         SourceExpr=wPorcentaje }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=3;
        DataItemTable=Table7010319;
        DataItemTableView=SORTING(Codigo);
        DataItemVarName=TipoServicio;
        PrintOnlyIfDetail=Yes;
        OnAfterGetRecord=BEGIN
                           wTotalPartes[3]:= 0;
                         END;

        ReqFilterFields=Codigo,Tipo fijo;
        GroupTotalFields=Codigo;
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=18450;
            SectionHeight=846;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT(NOT wCrearExcel);
                         END;

          }
          CONTROLS
          {
            { 1103355012;TextBox;3150 ;0    ;2850 ;423  ;VertAlign=Bottom;
                                                         FontSize=9;
                                                         SourceExpr=Codigo }
            { 1103355013;Label  ;750  ;0    ;2250 ;423  ;ParentControl=1103355012;
                                                         VertAlign=Bottom;
                                                         FontSize=9;
                                                         MultiLine=Yes;
                                                         LeaderDots=Yes;
                                                         CaptionML=ESP=Tipo Servicio }
            { 1103355031;Shape  ;450  ;423  ;5550 ;423  ;ShapeStyle=HorzLine }
          }
           }
        { PROPERTIES
          {
            SectionType=GroupFooter;
            SectionWidth=18450;
            SectionHeight=1269;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT(NOT wCrearExcel);

                           wDif          := Parte."Ingreso DL" - Parte."Coste DL";
                           IF Parte."Coste DL" <> 0 THEN
                             wPorcentaje := (wDif / Parte."Coste DL") * 100
                           ELSE
                             wPorcentaje := 0;

                           IF (wOpcionExcel = wOpcionExcel::Informe) AND NOT wControlCabExcel THEN BEGIN
                             RellenaCelda('    ' + STRSUBSTNO(Text002, Codigo), TRUE , FALSE, ''); MueveColm(1);
                             RellenaCelda(''                                  , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(''                                  , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(''                                  , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(''                                  , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(''                                  , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(FORMAT(wPaxParte)                   , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(FORMAT(Parte."Ingreso DL")          , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(FORMAT(Parte."Coste DL")            , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(FORMAT(wDif)                        , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(FORMAT(wPorcentaje)                 , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(FORMAT(wTotalPartes[3])             , FALSE, FALSE, ''); MueveColm(1);
                             MueveFila(1);
                           END;
                         END;

          }
          CONTROLS
          {
            { 1103355032;TextBox;1200 ;423  ;6300 ;423  ;FontSize=8;
                                                         FontBold=Yes;
                                                         LeaderDots=Yes;
                                                         SourceExpr=STRSUBSTNO(Text002, Codigo) }
            { 1103355037;Shape  ;7650 ;0    ;10800;423  ;ShapeStyle=HorzLine }
            { 1103355046;TextBox;8700 ;423  ;2250 ;423  ;FontSize=8;
                                                         SourceExpr=Parte."Ingreso DL" }
            { 1103355048;TextBox;11100;423  ;2250 ;423  ;FontSize=8;
                                                         SourceExpr=Parte."Coste DL" }
            { 1103355054;TextBox;7650 ;423  ;900  ;423  ;HorzAlign=Right;
                                                         FontSize=8;
                                                         CaptionML=ESP=Pax;
                                                         DecimalPlaces=0:2;
                                                         SourceExpr=wPaxParte }
            { 1103355057;TextBox;17250;423  ;900  ;423  ;HorzAlign=Right;
                                                         FontSize=8;
                                                         CaptionML=ESP=Cant.;
                                                         SourceExpr=wTotalPartes[3] }
            { 1103355063;TextBox;13500;423  ;2250 ;423  ;FontSize=8;
                                                         CaptionML=ESP=Diferencia;
                                                         SourceExpr=wDif }
            { 1103355071;TextBox;15900;423  ;1200 ;423  ;HorzAlign=Right;
                                                         FontSize=8;
                                                         CaptionML=ESP=Cant.;
                                                         SourceExpr=wPorcentaje }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=4;
        DataItemTable=Table7010360;
        DataItemTableView=SORTING(Proveedor,Tipo Servicio,Fecha,Hora inicio);
        OnPreDataItem=BEGIN
                        SETRANGE(Proveedor      , Vendor."No.");
                        SETRANGE("Tipo Servicio", TipoServicio.Codigo);

                        IF wMostrarResumenxDia THEN
                          SETRANGE (Fecha, Fechas."Period Start")
                        ELSE
                          SETFILTER(Fecha, Fechas.GETFILTER("Period Start"));

                        CASE wEstadoPartes OF
                          wEstadoPartes::Confirmados: SETRANGE(Confirmado, TRUE);
                          wEstadoPartes::Pendientes: SETRANGE(Confirmado, FALSE);
                        END;

                        CurrReport.CREATETOTALS("Ingreso DL","Coste DL", wFacturacionPendiente, wPaxParte);
                      END;

        OnAfterGetRecord=VAR
                           lwExcuido@1103355000 : Boolean;
                           lwCont@1103355001 : Integer;
                           lrPC@1103355002 : Record 7035393;
                         BEGIN
                           // Si se ha marcado Excluir agregados, buscamos el vehiculo para ver si lo s

                           lwExcuido := FALSE;

                           IF wExcluyeAgregados THEN // Filtro por agregado
                             lwExcuido := "Vehiculo Agregado";

                           CALCFIELDS("Adultos transportados" , "Ni¤os transportados"); // Filtro rango pax
                           wPaxParte := "Adultos transportados" + "Ni¤os transportados";
                           IF (wFiltroPax[1] <> 0) AND (wFiltroPax[1] > wPaxParte) THEN
                             lwExcuido:= TRUE;
                           IF (wFiltroPax[2] <> 0) AND (wFiltroPax[2] < wPaxParte) THEN
                             lwExcuido:= TRUE;

                           IF lwExcuido THEN
                             CurrReport.SKIP;

                           // Buscamos si tiene facturacion pendiente

                           wFacturacionPendiente := 0;

                           CLEAR(lrPC);
                           lrPC.SETRANGE("N§ Parte"  , "N§ Parte");
                           lrPC.SETRANGE("N§ Factura", '');
                           IF lrPC.FIND('-') THEN BEGIN
                             REPEAT
                               wFacturacionPendiente += lrPC."Importe sin impuesto DL";
                             UNTIL lrPC.NEXT = 0;
                           END;

                           CASE wEstadoFacturacion OF
                             wEstadoFacturacion::"Completamente Facturados":
                             BEGIN
                               IF wFacturacionPendiente <> 0 THEN
                                 CurrReport.SKIP;
                             END;
                             wEstadoFacturacion::"Solo Facturacion Pendiente":
                             BEGIN
                               IF wFacturacionPendiente = 0 THEN
                                 CurrReport.SKIP;
                             END
                           END;

                           // Acumulamos en los totales

                           // Hacemos que en este campo se sume el total de Coste/Ingreso + Produccion Ingreso

                           "Ingreso DL" := TotalIngreso;
                           // JPT 11/09/08 Reutilizamos este campo para el importe con impuestos
                           "Ingreso DL Prod" := TotalIngresoCon;

                           AjusteValoracion(Parte);

                           wDif := "Ingreso DL" - "Coste DL";
                           IF "Coste DL" <> 0 THEN
                             wPorcentaje := (wDif / "Coste DL") * 100
                           ELSE
                             wPorcentaje := 0;

                           wTotalFac   += "Ingreso DL";
                           wTotalCoste += "Coste DL";
                           wTotalPax   += wPaxParte;

                           wTotalFacProveedor[1]   += "Ingreso DL";
                           wTotalFacProveedor[2]   += "Ingreso DL Prod"; // Importe con impuestos
                           wTotalCosteProveedor[1] += "Coste DL";
                           wTotalCosteProveedor[2] += TotalCosteCon;
                           wTotalPdteProveedor  += wFacturacionPendiente;
                           wTotalPaxProv        += wPaxParte;

                           wTotalFacDia   += "Ingreso DL";
                           wTotalCosteDia += "Coste DL";
                           wTotalPdteDia  += wFacturacionPendiente;
                           wTotalPaxDia   += wPaxParte;

                           FOR lwCont:= 1 TO 4 DO
                             wTotalPartes[lwCont] += 1;

                           // Si el parte es shuttle el TTOO principal debe ser SHUTTLE TRANSUNION.

                           IF "Origen creacion" = "Origen creacion"::Shuttle THEN
                             wTTOO := Text010
                           ELSE
                             wTTOO := "Touroperador principal";

                           // AJF 29/10/08
                           // Resumen mensual excel
                           IF wOpcionExcel = wOpcionExcel::"Resumen mensual" THEN
                             CompruebaPeriodoProv(Vendor, Fecha, wPaxParte, "Ingreso DL", "Coste DL");

                           IF wOpcionExcel = wOpcionExcel::Informe THEN BEGIN

                             IF wControlCabExcel THEN BEGIN
                               IF wMostrarResumenxDia THEN BEGIN
                                 RellenaCelda('  Dia : ' + FORMAT(Fechas."Period Start"), TRUE, FALSE, '');
                                 MueveFila(1);
                               END;

                               RellenaCelda('    Tipo Servicio: ' + TipoServicio.Codigo, TRUE, FALSE, '');
                               MueveFila(1);

                               // Encabezado detalle.

                               RellenaCelda('    N§ Parte'     , TRUE, FALSE, ''); MueveColm(1);
                               RellenaCelda('Codigo Servicio'  , TRUE, FALSE, ''); MueveColm(1);
                               RellenaCelda('Cliente'          , TRUE, FALSE, ''); MueveColm(1);
                               RellenaCelda('TTOO Principal'   , TRUE, FALSE, ''); MueveColm(1);
                               RellenaCelda('Zona Parte'       , TRUE, FALSE, ''); MueveColm(1);
                               RellenaCelda('Fecha/Hora Inicio', TRUE, FALSE, ''); MueveColm(1);
                               RellenaCelda('Pax'              , TRUE, FALSE, ''); MueveColm(1);
                               RellenaCelda('Facturacion'      , TRUE, FALSE, ''); MueveColm(1);
                               RellenaCelda('Coste Subcotr.'   , TRUE, FALSE, ''); MueveColm(1);
                               RellenaCelda('Diferencia'       , TRUE, FALSE, ''); MueveColm(1);
                               RellenaCelda('%'                , TRUE, FALSE, ''); MueveColm(1);
                               RellenaCelda('Cant.'            , TRUE, FALSE, ''); MueveColm(1);
                               MueveFila(1);

                               wControlCabExcel := FALSE;
                             END;

                             RellenaCelda('    ' + "N§ Parte"                        , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda("Codigo Servicio"                          , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(Cliente                                    , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(wTTOO                                      , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda("Zona parte"                               , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(FORMAT(Fecha) + ' ' + FORMAT("Hora inicio"), FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(FORMAT(wPaxParte)                          , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(FORMAT("Ingreso DL")                       , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(FORMAT("Coste DL")                         , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(FORMAT(wDif)                               , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(FORMAT(wPorcentaje)                        , FALSE, FALSE, ''); MueveColm(1);
                             MueveFila(1);

                           END;
                         END;

        ReqFilterFields=Codigo Servicio,Zona parte,Cliente,Vehiculo;
        CalcFields=Coste DL;
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Header;
            SectionWidth=18450;
            SectionHeight=846;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT(NOT wCrearExcel AND wMostrarDetalle);
                         END;

          }
          CONTROLS
          {
            { 1103355015;Label  ;0    ;0    ;1800 ;846  ;ParentControl=1103355014;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1103355017;Label  ;1950 ;0    ;1650 ;846  ;ParentControl=1103355016;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1103355023;Label  ;3750 ;0    ;1800 ;846  ;ParentControl=1103355022;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=ESP=TTOO Principal }
            { 1103355019;Label  ;8700 ;0    ;2250 ;846  ;ParentControl=1103355018;
                                                         HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=ESP=Facturacion }
            { 1103355021;Label  ;11100;0    ;2250 ;846  ;ParentControl=1103355020;
                                                         HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=ESP=Coste Subcotr. }
            { 1103355025;Label  ;5700 ;0    ;1800 ;846  ;ParentControl=1103355024;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1103355053;Label  ;7650 ;0    ;900  ;846  ;ParentControl=1103355052;
                                                         HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1103355058;Label  ;17250;0    ;900  ;846  ;ParentControl=1103355057;
                                                         HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1103355062;Label  ;13500;0    ;2250 ;846  ;ParentControl=1103355059;
                                                         HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=ESP=Diferencia }
            { 1103355068;Label  ;15900;0    ;1200 ;846  ;HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=ESP=% }
          }
           }
        { PROPERTIES
          {
            SectionType=TransHeader;
            SectionWidth=18450;
            SectionHeight=846;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT(NOT wCrearExcel);
                         END;

          }
          CONTROLS
          {
            { 1103355026;Label  ;0    ;0    ;1800 ;846  ;ParentControl=1103355014;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1103355027;Label  ;1950 ;0    ;1650 ;846  ;ParentControl=1103355016;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1103355035;Label  ;3750 ;0    ;1800 ;846  ;VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=ESP=TTOO Principal }
            { 1103355036;Label  ;8700 ;0    ;2250 ;846  ;HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=ESP=Facturacion }
            { 1103355041;Label  ;11100;0    ;2250 ;846  ;HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=ESP=Coste Subcotr. }
            { 1103355047;Label  ;5700 ;0    ;1800 ;846  ;ParentControl=1103355024;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1103355049;Label  ;7650 ;0    ;900  ;846  ;ParentControl=1103355052;
                                                         HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1103355066;Label  ;17250;0    ;900  ;846  ;HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=ESP=Cant. }
            { 1103355067;Label  ;13500;0    ;2250 ;846  ;HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=ESP=Diferencia }
            { 1103355069;Label  ;15900;0    ;1200 ;846  ;HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=ESP=% }
          }
           }
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=18450;
            SectionHeight=423;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT(NOT wCrearExcel AND wMostrarDetalle);
                         END;

          }
          CONTROLS
          {
            { 1103355014;TextBox;0    ;0    ;1800 ;423  ;HorzAlign=Left;
                                                         FontSize=8;
                                                         SourceExpr="N§ Parte" }
            { 1103355016;TextBox;1950 ;0    ;1650 ;423  ;FontSize=8;
                                                         SourceExpr="Codigo Servicio" }
            { 1103355018;TextBox;8700 ;0    ;2250 ;423  ;FontSize=8;
                                                         SourceExpr="Ingreso DL" }
            { 1103355020;TextBox;11100;0    ;2250 ;423  ;FontSize=8;
                                                         SourceExpr="Coste DL" }
            { 1103355022;TextBox;3750 ;0    ;1800 ;423  ;FontSize=8;
                                                         SourceExpr=wTTOO }
            { 1103355024;TextBox;5700 ;0    ;1800 ;423  ;FontSize=8;
                                                         SourceExpr="Zona parte" }
            { 1103355052;TextBox;7650 ;0    ;900  ;423  ;HorzAlign=Right;
                                                         FontSize=8;
                                                         CaptionML=ESP=Pax;
                                                         DecimalPlaces=0:2;
                                                         SourceExpr=wPaxParte }
            { 1103355059;TextBox;13500;0    ;2250 ;423  ;FontSize=8;
                                                         CaptionML=ESP=Diferencia;
                                                         SourceExpr=wDif }
            { 1103355070;TextBox;15900;0    ;1200 ;423  ;HorzAlign=Right;
                                                         FontSize=8;
                                                         CaptionML=ESP=Cant.;
                                                         SourceExpr=wPorcentaje }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=2;
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number);
        MaxIteration=1;
        DataItemVarName=TotalProveedor;
        OnPreDataItem=BEGIN
                        IF (wTotalFacProveedor[1] = 0) AND (wTotalCosteProveedor[1] = 0) AND (wTotalPdteProveedor = 0) THEN
                          CurrReport.BREAK;
                      END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=18450;
            SectionHeight=846;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT(NOT wCrearExcel);

                           wDif          := wTotalFacProveedor[1] - wTotalCosteProveedor[1];

                           IF wTotalCosteProveedor[1] <> 0 THEN
                             wPorcentaje := (wDif / wTotalCosteProveedor[1]) * 100
                           ELSE
                             wPorcentaje := 0;


                           IF (wOpcionExcel = wOpcionExcel::Informe) THEN BEGIN
                             RellenaCelda('  ' + STRSUBSTNO(Text004, Vendor.Name)   , TRUE , FALSE, ''); MueveColm(1);
                             RellenaCelda(''                                        , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(''                                        , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(''                                        , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(''                                        , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(''                                        , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(FORMAT(wTotalPaxProv)                     , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(FORMAT(wTotalFacProveedor[1])             , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(FORMAT(wTotalCosteProveedor[1])           , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(FORMAT(wDif)                              , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(FORMAT(wPorcentaje)                       , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(FORMAT(wTotalPartes[1])                   , FALSE, FALSE, ''); MueveColm(1);
                             MueveFila(1);
                           END;
                         END;

          }
          CONTROLS
          {
            { 1103355033;Shape  ;7650 ;0    ;10800;423  ;BorderWidth=3pt;
                                                         ShapeStyle=HorzLine }
            { 1103355034;TextBox;8700 ;423  ;2250 ;423  ;FontSize=8;
                                                         SourceExpr=wTotalFacProveedor[1] }
            { 1103355040;TextBox;11100;423  ;2250 ;423  ;FontSize=8;
                                                         SourceExpr=wTotalCosteProveedor[1] }
            { 1103355051;TextBox;150  ;423  ;7350 ;423  ;FontSize=8;
                                                         FontBold=Yes;
                                                         LeaderDots=Yes;
                                                         SourceExpr=STRSUBSTNO(Text004, Vendor.Name) }
            { 1103355056;TextBox;7650 ;423  ;900  ;423  ;FontSize=8;
                                                         DecimalPlaces=0:2;
                                                         SourceExpr=wTotalPaxProv }
            { 1103355061;TextBox;17250;423  ;900  ;423  ;FontSize=8;
                                                         CaptionML=ESP=Partes;
                                                         SourceExpr=wTotalPartes[1] }
            { 1103355065;TextBox;13500;423  ;2250 ;423  ;FontSize=8;
                                                         CaptionML=ESP=Diferencia;
                                                         SourceExpr=wDif }
            { 1103355074;TextBox;15900;423  ;1200 ;423  ;HorzAlign=Right;
                                                         FontSize=8;
                                                         CaptionML=ESP=Cant.;
                                                         SourceExpr=wPorcentaje }
          }
           }
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=18450;
            SectionHeight=423;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT(NOT wCrearExcel);

                           wDif          := wTotalFacProveedor[2] - wTotalCosteProveedor[2];

                           CLEAR(wPorcentaje);
                           IF wTotalCosteProveedor[2] <> 0 THEN
                             wPorcentaje := (wDif / wTotalCosteProveedor[2]) * 100;

                           IF (wOpcionExcel = wOpcionExcel::Informe) THEN BEGIN
                             RellenaCelda('  ' + Text011                            , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(''                                        , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(''                                        , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(''                                        , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(''                                        , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(''                                        , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(''                                        , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(FORMAT(wTotalFacProveedor[2])             , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(FORMAT(wTotalCosteProveedor[2])           , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(FORMAT(wDif)                              , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(FORMAT(wPorcentaje)                       , FALSE, FALSE, ''); MueveColm(1);
                             RellenaCelda(''                                        , FALSE, FALSE, ''); MueveColm(1);
                             MueveFila(2);
                           END;
                         END;

          }
          CONTROLS
          {
            { 1103355086;TextBox;150  ;0    ;7350 ;423  ;FontSize=8;
                                                         FontBold=Yes;
                                                         SourceExpr=Text011 }
            { 1103355082;TextBox;8700 ;0    ;2250 ;423  ;FontSize=8;
                                                         SourceExpr=wTotalFacProveedor[2] }
            { 1103355083;TextBox;11100;0    ;2250 ;423  ;FontSize=8;
                                                         SourceExpr=wTotalCosteProveedor[2] }
            { 1103355084;TextBox;13500;0    ;2250 ;423  ;FontSize=8;
                                                         CaptionML=ESP=Diferencia;
                                                         SourceExpr=wDif }
            { 1103355085;TextBox;15900;0    ;1200 ;423  ;HorzAlign=Right;
                                                         FontSize=8;
                                                         CaptionML=ESP=Cant.;
                                                         SourceExpr=wPorcentaje }
          }
           }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=9460;
      Height=4400;
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1103355001;Label  ;220  ;220  ;4290 ;440  ;CaptionML=ESP=Seleccion x estado facturacion }
      { 1103355002;TextBox;4620 ;220  ;4510 ;440  ;SourceExpr=wEstadoFacturacion }
      { 1103355003;Label  ;220  ;770  ;4290 ;440  ;CaptionML=ESP=Seleccion x estado del parte }
      { 1103355004;TextBox;4620 ;770  ;4510 ;440  ;SourceExpr=wEstadoPartes }
      { 1103355000;Label  ;220  ;1320 ;4290 ;440  ;CaptionML=ESP=Excluir vehiculos agregados }
      { 1103355005;CheckBox;4620;1320 ;440  ;440  ;ShowCaption=No;
                                                   SourceExpr=wExcluyeAgregados }
      { 1103355006;CheckBox;4620;1870 ;440  ;440  ;ShowCaption=No;
                                                   CaptionML=ESP=Mostrar Detalle;
                                                   SourceExpr=wMostrarDetalle }
      { 1103355007;Label  ;220  ;1870 ;4290 ;440  ;ParentControl=1103355006 }
      { 1103355008;TextBox;4620 ;2970 ;1210 ;440  ;CaptionML=ESP=Rango Pax;
                                                   BlankZero=Yes;
                                                   SourceExpr=wFiltroPax[1];
                                                   OnValidate=BEGIN
                                                                CompruebaRangoPax;
                                                              END;
                                                               }
      { 1103355009;Label  ;220  ;2970 ;4290 ;440  ;ParentControl=1103355008 }
      { 1103355010;TextBox;5940 ;2970 ;1210 ;440  ;BlankZero=Yes;
                                                   SourceExpr=wFiltroPax[2];
                                                   OnValidate=BEGIN
                                                                CompruebaRangoPax;
                                                              END;
                                                               }
      { 1103355011;CheckBox;4620;2420 ;440  ;440  ;ShowCaption=No;
                                                   CaptionML=ESP=Mostrar Detalle;
                                                   SourceExpr=wMostrarResumenxDia }
      { 1103355012;Label  ;220  ;2420 ;4290 ;440  ;ParentControl=1103355011;
                                                   CaptionML=ESP=Resumen Diario }
      { 1103355015;Label  ;220  ;3740 ;4290 ;440  ;CaptionML=ESP=Generar Excel }
      { 1103355013;TextBox;4620 ;3740 ;2970 ;440  ;SourceExpr=wOpcionExcel }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      rCI@1103355003 : Record 7010414;
      rVeh@1103355018 : Record 7010346;
      rPar@1103355041 : Record 7010311;
      cCalcPartes@1103355042 : Codeunit 7010407;
      wTextoAgregados@1103355022 : Text[50];
      wTextoEstadoPartes@1103355023 : Text[1024];
      wEstadoFacturacion@1103355000 : 'Todos,Completamente Facturados,Solo Facturacion Pendiente';
      wEstadoPartes@1103355001 : 'Todos,Confirmados,Pendientes';
      wExcluyeAgregados@1103355017 : Boolean;
      wFacturacionPendiente@1103355002 : Decimal;
      Text001@1103355004 : TextConst 'ESP=El filtro de fechas es obligatorio.';
      Text002@1103355005 : TextConst 'ESP=Totales del Tipo Servicio %1';
      Text003@1103355006 : TextConst 'ESP=Totales del dia %1';
      Text004@1103355007 : TextConst 'ESP=Totales del proveedor %1';
      wTotalFacProveedor@1103355008 : ARRAY [2] OF Decimal;
      wTotalCosteProveedor@1103355009 : ARRAY [2] OF Decimal;
      wTotalPdteProveedor@1103355010 : Decimal;
      wTotalFacDia@1103355011 : Decimal;
      wTotalCosteDia@1103355012 : Decimal;
      wTotalPdteDia@1103355013 : Decimal;
      wTotalFacTipo@1103355014 : Decimal;
      wTotalCosteTipo@1103355015 : Decimal;
      wTotalPdteTipo@1103355016 : Decimal;
      Text005@1103355019 : TextConst 'ESP=Se incluyen los partes con estado facturacion %1';
      Text006@1103355020 : TextConst 'ESP=Se incluyen los partes que estan %1';
      Text007@1103355021 : TextConst 'ESP=Se excluyen los vehiculos agregados';
      wFechaTemp@1103355024 : Date;
      wMostrarDetalle@1103355025 : Boolean;
      wMostrarResumenxDia@1103355036 : Boolean;
      wFiltroPax@1103355026 : ARRAY [2] OF Integer;
      wPaxParte@1103355027 : Decimal;
      Text008@1103355028 : TextConst 'ESP=El rango de Pax Desde no puede ser superior a Rango Pax Hasta';
      wTotalPaxProv@1103355029 : Decimal;
      wTotalPaxDia@1103355030 : Decimal;
      wDif@1103355033 : Decimal;
      wPorcentaje@1103355037 : Decimal;
      wTotalPartes@1103355031 : ARRAY [4] OF Integer;
      Text009@1103355032 : TextConst 'ESP=Rango Pax %1..%2';
      Text010@1103355034 : TextConst 'ESP=SHUTTLE TRANSUNION';
      wTTOO@1103355035 : Text[30];
      wTotalPax@1103355038 : Decimal;
      wTotalFac@1103355039 : Decimal;
      wTotalCoste@1103355040 : Decimal;
      rExcel@1103355043 : TEMPORARY Record 7035385;
      wCrearExcel@1103355044 : Boolean;
      wOpcionExcel@1103355058 : 'No,Informe,Resumen mensual';
      wExcelFila@1103355045 : Integer;
      wExcelColm@1103355046 : Integer;
      wControlCabExcel@1103355047 : Boolean;
      Text011@1103355050 : TextConst 'ESP=Importes con Impuesto';
      wNoPeriodo@1103355049 : Integer;
      wA¤o@1103355060 : Integer;
      wServPeriodo@1103355051 : Decimal;
      wPaxPeriodo@1103355052 : Decimal;
      wFactPeriodo@1103355053 : Decimal;
      wCostePeriodo@1103355054 : Decimal;
      wServPeriodoTotal@1103355057 : Decimal;
      wPaxPeriodoTotal@1103355056 : Decimal;
      wFactPeriodoTotal@1103355055 : Decimal;
      wCostePeriodoTotal@1103355048 : Decimal;
      wFechaperiodo@1103355059 : Date;

    PROCEDURE CompruebaRangoPax@1103355012();
    BEGIN
      // CompruebaRangoPax

      IF (wFiltroPax[1] > wFiltroPax[2]) AND (wFiltroPax[2]<>0) THEN
        ERROR(Text008);
    END;

    PROCEDURE AjusteValoracion@1103355002(VAR prParte@1103355000 : Record 7010360);
    VAR
      lrPrecioVta@1103355002 : Record 7010405;
      lrContratoVta@1103355006 : Record 7010403;
      lrCI@1103355004 : Record 7010414;
      lrPI@1103355005 : Record 7035392;
      lrZonaPreciosParte@1103355007 : Record 7010364;
      lwOk@1103355003 : Boolean;
      lwContratoVta@1103355001 : Code[10];
      lrTTOOParte@1103355008 : Record 7010365;
      lwPaxes@1103355009 : Integer;
      lrCITemp@1103355010 : TEMPORARY Record 7010414;
      lwLinea@1103355011 : Integer;
    BEGIN
      // AjusteValoracion.

      lwOk          := FALSE;
      lwContratoVta := BuscaContratoVenta(prParte);

      prParte.CALCFIELDS("Adultos transportados", "Ni¤os transportados");

      rPar.FINDFIRST;

      IF lwContratoVta <> '' THEN BEGIN

        // Recuperamos el contrato para poder ver si es un contrato basado en otro o no.
        lrContratoVta.SETFILTER(Garaje       , '%1|%2', prParte.Garaje, rPar."Todos los garajes");
        lrContratoVta.SETRANGE ("N§ Contrato", lwContratoVta);

        IF NOT lrContratoVta.FINDFIRST THEN
          EXIT;

        IF prParte."Codigo Servicio" = rPar."Codigo Entradas" THEN BEGIN
          // Buscamos los precios de los partes de salida para ver si el TTOO calcula las salidas por separado.
          lrPrecioVta.SETRANGE ("N§ Contrato"    , ContratoReal(lrContratoVta));
          lrPrecioVta.SETRANGE ("Codigo servicio", rPar."Codigo Salidas");
          lrPrecioVta.SETFILTER("Fecha desde"    , '<=%1', prParte.Fecha);
          lrPrecioVta.SETFILTER("Fecha hasta"    , '>=%1', prParte.Fecha);
          lrPrecioVta.SETRANGE ("Tipo precio"    , lrPrecioVta."Tipo precio"::"Precio Base");
          lrPrecioVta.SETRANGE (Activo           , TRUE);
          lwOk := lrPrecioVta.FINDFIRST;

          IF lwOk THEN BEGIN
            CASE lrPrecioVta."Tipo aplicacion" OF
              lrPrecioVta."Tipo aplicacion"::Vehiculo: BEGIN
                IF lrPrecioVta."Precio Vehiculo" = 0 THEN
                  lwOk := FALSE;
              END;

              lrPrecioVta."Tipo aplicacion"::Pax: BEGIN
                IF (lrPrecioVta."Precio Adulto" = 0) AND (lrPrecioVta."Precio Ni¤o" = 0) THEN
                  lwOk := FALSE;
              END;

            END;
          END;

          IF NOT lwOk THEN BEGIN
            prParte."Ingreso DL" := prParte."Ingreso DL" / 2;
            prParte."Ingreso DL Prod" := prParte."Ingreso DL Prod" / 2;
          END;
        END;

        IF prParte."Codigo Servicio" = rPar."Codigo Salidas" THEN BEGIN
          IF (prParte."Ingreso DL" = 0) AND prParte.Facturable THEN BEGIN
            lrPrecioVta.SETRANGE ("N§ Contrato"    , ContratoReal(lrContratoVta));
            lrPrecioVta.SETRANGE ("Codigo servicio", rPar."Codigo Entradas");
            lrPrecioVta.SETFILTER("Fecha desde"    , '<=%1', prParte.Fecha);
            lrPrecioVta.SETFILTER("Fecha hasta"    , '>=%1', prParte.Fecha);
            lrPrecioVta.SETRANGE ("Tipo precio"    , lrPrecioVta."Tipo precio"::"Precio Base");

            IF lrPrecioVta.ISEMPTY THEN
              EXIT;

            lwLinea := 1;

            lrPI.SETRANGE("N§ Parte"  , prParte."N§ Parte");
            lrPI.SETRANGE("Tipo linea", lrPI."Tipo linea"::Base);
            IF lrPI.FINDSET THEN BEGIN
              REPEAT
               lrCITemp.TRANSFERFIELDS(lrPI);
               lrCITemp."N§ Linea" := lwLinea;
               lrCITemp.INSERT;

               lwLinea += 1;

              UNTIL lrPI.NEXT = 0;
            END;

            lrCI.SETRANGE("N§ Parte"  , prParte."N§ Parte");
            lrCI.SETRANGE("Tipo linea", lrCI."Tipo linea"::Base);
            IF lrCI.FINDSET THEN BEGIN
              REPEAT
               lrCITemp := (lrCI);
               lrCITemp."N§ Linea" := lwLinea;
               lrCITemp.INSERT;

               lwLinea += 1;

              UNTIL lrCI.NEXT = 0;
            END;

            CalculaParte(prParte, lrCITemp, lrContratoVta, lrPrecioVta);

          END;
        END;

      END;
    END;

    PROCEDURE TraduceOrigen@1103355000(VAR prParte@1103355000 : Record 7010360;VAR prContrato@1103355003 : Record 7010403) : Code[10];
    VAR
      lrPtoRecogida@1103355001 : Record 7010315;
      lrZonaContr@1103355002 : Record 7010404;
      lrTipoSer@1103355004 : Record 7010319;
    BEGIN
      // TraduceOrigen

      rPar.FINDFIRST;
      lrTipoSer.GET(prParte."Tipo Servicio");
      lrPtoRecogida.GET(prParte."Origen/Destino");

      // Al buscar los precios habra que chequear que exista para el garaje del servicio o para el garaje TODOS.

      lrZonaContr.SETFILTER(Garaje        , '%1|%2', prParte.Garaje, rPar."Todos los garajes");
      lrZonaContr.SETRANGE("N§ Contrato"  , ContratoReal(prContrato));
      lrZonaContr.SETRANGE("Tipo contrato", lrZonaContr."Tipo contrato"::Venta);
      lrZonaContr.SETRANGE("Codigo Origen" , lrPtoRecogida."Zona fisica");
      lrZonaContr.SETRANGE("Tipo Servicio fijo", lrTipoSer."Tipo fijo");

      IF lrZonaContr.FINDFIRST THEN
        EXIT(lrZonaContr."Zona Precio");
    END;

    PROCEDURE ContratoReal@1103355004(VAR prContrato@1103355000 : Record 7010403) : Code[10];
    BEGIN
      // ContratoReal
      // Devuelve el numero de contrato de Venta a facturar, es decir si esta asociado a otro contrato
      // ser  el n£mero de este £ltimo, si no, ser  su propio numero

      IF prContrato."Basado en contrato n§"<>'' THEN
        EXIT (prContrato."Basado en contrato n§")
      ELSE
        EXIT (prContrato."N§ Contrato");
    END;

    PROCEDURE BuscaContratoVenta@1103355006(VAR prParte@1103355002 : Record 7010360) : Code[10];
    VAR
      lrPI@1103355000 : Record 7035392;
      lrCI@1103355001 : Record 7010414;
    BEGIN
      // BuscaContratoVenta
      // Devolvemos el contrato de venta que consta en las l¡neas de CI o PI.
      // Si no hay devolvemos ''.

      lrPI.SETRANGE("N§ Parte", prParte."N§ Parte");

      IF lrPI.FINDSET THEN BEGIN
        REPEAT
          IF lrPI."N§ Contrato" <> '' THEN
            EXIT(lrPI."N§ Contrato");
        UNTIL lrPI.NEXT = 0;
      END;

      lrCI.SETRANGE("N§ Parte", prParte."N§ Parte");

      IF lrCI.FINDSET THEN BEGIN
        REPEAT
          IF lrCI."N§ Contrato" <> '' THEN
            EXIT(lrCI."N§ Contrato");
        UNTIL lrCI.NEXT = 0;
      END;

      EXIT('');
    END;

    PROCEDURE CalculaParte@1103355001(VAR prParte@1103355000 : Record 7010360;VAR prCI@1103355001 : TEMPORARY Record 7010414;VAR prContrato@1103355002 : Record 7010403;VAR prPrecioVta@1103355003 : Record 7010405);
    VAR
      lrZonaPreciosParte@1103355007 : Record 7010364;
      lwOk@1103355006 : Boolean;
      lrTTOOParte@1103355005 : Record 7010365;
      lwPaxes@1103355004 : Integer;
      lwIVA@1103355008 : Decimal;
      lwImporte@1103355009 : Decimal;
      lwImpSin@1103355010 : Decimal;
      lwImpCon@1103355011 : Decimal;
    BEGIN
      // CalculaParte

      IF prCI.FINDSET THEN BEGIN
        REPEAT

          // Buscamos el precio de la l¡nea de produccion.
          prPrecioVta.SETRANGE ("Zona desde"   , TraduceOrigen(prParte, prContrato));
          prPrecioVta.SETRANGE ("Zona hasta"   , prCI."Zona Precios");

          IF prParte."Busca precio pasaje x zona ing" THEN BEGIN

            IF prParte."Busca precio ingreso" = prParte."Busca precio ingreso"::"Pasaje independiente" THEN BEGIN

              prPrecioVta.SETFILTER("Rango desde", '<=%1', prCI."Pax Transportados");
              prPrecioVta.SETFILTER("Rango hasta", '>=%1', prCI."Pax Transportados");

            END
            ELSE BEGIN

              lrZonaPreciosParte.RESET;
              lrZonaPreciosParte.SETRANGE("N§ Parte"     , prParte."N§ Parte");
              lrZonaPreciosParte.SETRANGE("Tipo contrato", lrZonaPreciosParte."Tipo contrato"::Venta);
              lrZonaPreciosParte.SETRANGE("Zona Precio"  , prCI."Zona Precios");

              lwPaxes := 0;
              IF lrZonaPreciosParte.FINDSET THEN BEGIN
                REPEAT
                  lwPaxes := lrZonaPreciosParte."Adultos Transportados zona" + lrZonaPreciosParte."Ni¤os Transportados zona";
                UNTIL lrZonaPreciosParte.NEXT = 0;
              END;

              prPrecioVta.SETFILTER("Rango desde", '<=%1', lwPaxes);
              prPrecioVta.SETFILTER("Rango hasta", '>=%1', lwPaxes);

            END;

          END
          ELSE BEGIN
            IF prParte."Busca precio ingreso" = prParte."Busca precio ingreso"::"Pasaje independiente" THEN BEGIN

              lrTTOOParte.SETRANGE("N§ Parte"  , prParte."N§ Parte");
              lrTTOOParte.SETRANGE(Touroperador, prCI.Touroperador);

              lrTTOOParte.FINDFIRST;

              prPrecioVta.SETFILTER("Rango desde", '<=%1',
                                    lrTTOOParte."Adultos transportados" + lrTTOOParte."Ni¤os transportados");
              prPrecioVta.SETFILTER("Rango desde", '<=%1',
                                    lrTTOOParte."Adultos transportados" + lrTTOOParte."Ni¤os transportados");

            END
            ELSE BEGIN
              prPrecioVta.SETFILTER("Rango desde", '<=%1', prParte."Adultos transportados" + prParte."Ni¤os transportados");
              prPrecioVta.SETFILTER("Rango hasta", '>=%1', prParte."Adultos transportados" + prParte."Ni¤os transportados");
            END;

          END;



          CLEAR(lwImporte);
          IF prCI."Tipo elemento" = 'VEHICULO' THEN BEGIN
            prPrecioVta.SETRANGE("Tipo aplicacion", prPrecioVta."Tipo aplicacion"::Vehiculo);
            IF prPrecioVta.FINDFIRST THEN BEGIN
              lwImporte := prPrecioVta."Precio Vehiculo";
            END;
          END
          ELSE BEGIN
            prPrecioVta.SETRANGE("Tipo aplicacion", prPrecioVta."Tipo aplicacion"::Pax);
            IF prPrecioVta.FINDFIRST THEN BEGIN
              IF prCI."Tipo elemento" = rPar."Codigo Adulto" THEN BEGIN
                lwImporte := prCI."Pax Facturados" * prPrecioVta."Precio Adulto";
              END;
              IF prCI."Tipo elemento" = rPar."Codigo Ni¤o" THEN BEGIN
                lwImporte := prCI."Pax Facturados" * prPrecioVta."Precio Ni¤o";
              END;
            END;
          END;

          lwIVA := BuscaIVA(prContrato);
          IF prContrato."Impuestos incluidos" THEN BEGIN
            lwImpSin  := ROUND(lwImporte / (1 + (lwIVA / 100)));
            lwImpCon  := lwImporte;
          END
          ELSE BEGIN
            lwImpSin  := lwImporte;
            lwImpCon  := ROUND(lwImporte * (1 + (lwIVA / 100)));
          END;

          prParte."Ingreso DL"      += lwImpSin;
          prParte."Ingreso DL Prod" += lwImpCon;
        UNTIL prCI.NEXT = 0;

      END;

      prParte."Ingreso DL" := prParte."Ingreso DL" / 2;
      prParte."Ingreso DL Prod" := prParte."Ingreso DL Prod" / 2;
    END;

    PROCEDURE IniciaExcel@1103355003();
    BEGIN
      // IniciaExcel

      wExcelFila := 1;
      wExcelColm := 1;

      rExcel.DELETEALL;

      rExcel.CreateBook;
    END;

    PROCEDURE MueveFila@1103355005(pwIncremento@1103355000 : Integer);
    BEGIN
      // MueveFila
      // Saltamos pwIncremento filas y nos colocamos al inicio de la proxima fila.

      wExcelFila += pwIncremento;
      wExcelColm := 1;
    END;

    PROCEDURE MueveColm@1103355011(pwIncremento@1103355000 : Integer);
    BEGIN
      // MueveColm

      wExcelColm += pwIncremento;
    END;

    LOCAL PROCEDURE RellenaCelda@3(pwCellValue@1002 : Text[250];pwBold@1003 : Boolean;pwUnderLine@1004 : Boolean;pwNumberFormat@1005 : Text[30]);
    BEGIN
      // RellenaCelda
      rExcel.INIT;

      rExcel.VALIDATE("Row No."    , wExcelFila);
      rExcel.VALIDATE("Column No." , wExcelColm);

      rExcel."Cell Value as Text" := pwCellValue;
      rExcel.Formula              := '';
      rExcel.Bold                 := pwBold;
      rExcel.Underline            := pwUnderLine;
      rExcel.NumberFormat         := pwNumberFormat;
      rExcel.INSERT;
    END;

    PROCEDURE BuscaIVA@1103355008(VAR prContrato@1103355000 : Record 7010403) : Decimal;
    VAR
      lrCli@1103355002 : Record 18;
      lrConfIVA@1103355003 : Record 325;
    BEGIN
      // BuscaIVA

      lrCli.GET(prContrato.Cliente);
      lrCli.TESTFIELD("VAT Bus. Posting Group");

      CLEAR(lrConfIVA);
      lrConfIVA.GET (lrCli."VAT Bus. Posting Group", prContrato."Grupo Registro IVA Producto");
      EXIT(lrConfIVA."VAT+EC %");
    END;

    PROCEDURE IniciaPeriodoProv@1103355007();
    VAR
      lrPeriodo@1103355000 : Record 2000000007;
    BEGIN
      // IniciaPeriodoProv


      wNoPeriodo := 0;
      wFechaperiodo := 0D;

      wServPeriodo  := 0;
      wPaxPeriodo   := 0;
      wFactPeriodo  := 0;
      wCostePeriodo := 0;

      wServPeriodoTotal  := 0;
      wPaxPeriodoTotal   := 0;
      wFactPeriodoTotal  := 0;
      wCostePeriodoTotal := 0;
    END;

    PROCEDURE CompruebaPeriodoProv@1103355009(VAR prProv@1103355007 : Record 23;pwFecha@1103355000 : Date;pwPaxes@1103355003 : Decimal;pwFact@1103355002 : Decimal;pwCoste@1103355005 : Decimal);
    VAR
      lwDif@1103355004 : Decimal;
      lwPor@1103355006 : Decimal;
      lwNuevoPeriodo@1103355001 : Integer;
      lwA¤o@1103355008 : Integer;
    BEGIN
      // CompruebaPeriodoProv

      lwNuevoPeriodo := DATE2DMY(pwFecha, 2);
      lwA¤o          := DATE2DMY(pwFecha, 3);

      IF (wNoPeriodo <> lwNuevoPeriodo) OR (wA¤o <> lwA¤o) THEN BEGIN

        IF wNoPeriodo <> 0 THEN BEGIN
          lwDif := wFactPeriodo - wCostePeriodo;

          IF wCostePeriodo <> 0 THEN
            lwPor := (lwDif / wCostePeriodo) * 100
          ELSE
            lwPor := 0;

          RellenaCelda(prProv.Name          , FALSE, FALSE, ''); MueveColm(1);
          RellenaCelda(FORMAT(wFechaperiodo, 0, '<Month Text> <Year4>'), FALSE, FALSE, ''); MueveColm(1);
          RellenaCelda(FORMAT(wServPeriodo) , FALSE, FALSE, ''); MueveColm(1);
          RellenaCelda(FORMAT(wPaxPeriodo)  , FALSE, FALSE, ''); MueveColm(1);
          RellenaCelda(FORMAT(ROUND(wFactPeriodo, 0.01)) , FALSE, FALSE, ''); MueveColm(1);
          RellenaCelda(FORMAT(ROUND(wCostePeriodo, 0.01)), FALSE, FALSE, ''); MueveColm(1);
          RellenaCelda(FORMAT(ROUND(lwDif, 0.01))        , FALSE, FALSE, ''); MueveColm(1);
          RellenaCelda(FORMAT(ROUND(lwPor, 0.01))        , FALSE, FALSE, ''); MueveColm(1);
          MueveFila(1);

        END;

        wNoPeriodo    := lwNuevoPeriodo;
        wA¤o          := lwA¤o;
        wFechaperiodo := DMY2DATE(1, wNoPeriodo, lwA¤o);
        wServPeriodo  := 0;
        wPaxPeriodo   := 0;
        wFactPeriodo  := 0;
        wCostePeriodo := 0;

      END;

      wServPeriodo       += 1;
      wPaxPeriodo        += pwPaxes;
      wFactPeriodo       += pwFact;
      wCostePeriodo      += pwCoste;

      wServPeriodoTotal  += 1;
      wPaxPeriodoTotal   += pwPaxes;
      wFactPeriodoTotal  += pwFact;
      wCostePeriodoTotal += pwCoste;
    END;

    PROCEDURE TotalPeriodoProv@1103355021(VAR prProv@1103355000 : Record 23);
    VAR
      lwDif@1103355002 : Decimal;
      lwPor@1103355001 : Decimal;
    BEGIN
      // TotalPeriodoProv

      IF wNoPeriodo <> 0 THEN BEGIN
        lwDif := wFactPeriodo - wCostePeriodo;

        IF wCostePeriodo <> 0 THEN
          lwPor := (lwDif / wCostePeriodo) * 100
        ELSE
          lwPor := 0;

        RellenaCelda(prProv.Name          , FALSE, FALSE, ''); MueveColm(1);
        RellenaCelda(FORMAT(wFechaperiodo, 0, '<Month Text> <Year4>'), FALSE, FALSE, ''); MueveColm(1);
        RellenaCelda(FORMAT(wServPeriodo) , FALSE, FALSE, ''); MueveColm(1);
        RellenaCelda(FORMAT(wPaxPeriodo)  , FALSE, FALSE, ''); MueveColm(1);
        RellenaCelda(FORMAT(ROUND(wFactPeriodo, 0.01)) , FALSE, FALSE, ''); MueveColm(1);
        RellenaCelda(FORMAT(ROUND(wCostePeriodo, 0.01)), FALSE, FALSE, ''); MueveColm(1);
        RellenaCelda(FORMAT(ROUND(lwDif, 0.01))        , FALSE, FALSE, ''); MueveColm(1);
        RellenaCelda(FORMAT(ROUND(lwPor, 0.01))        , FALSE, FALSE, ''); MueveColm(1);
        MueveFila(1);

      END;

      lwDif := wFactPeriodoTotal - wCostePeriodoTotal;

      IF wCostePeriodoTotal <> 0 THEN
        lwPor := (lwDif / wCostePeriodoTotal) * 100
      ELSE
        lwPor := 0;


      RellenaCelda('Total ' + prProv.Name    , TRUE, FALSE, ''); MueveColm(1);
      RellenaCelda(''                        , TRUE, FALSE, ''); MueveColm(1);
      RellenaCelda(FORMAT(wServPeriodoTotal) , TRUE, FALSE, ''); MueveColm(1);
      RellenaCelda(FORMAT(wPaxPeriodoTotal)  , TRUE, FALSE, ''); MueveColm(1);
      RellenaCelda(FORMAT(ROUND(wFactPeriodoTotal, 0.01)) , TRUE, FALSE, ''); MueveColm(1);
      RellenaCelda(FORMAT(ROUND(wCostePeriodoTotal, 0.01)), TRUE, FALSE, ''); MueveColm(1);
      RellenaCelda(FORMAT(ROUND(lwDif,0.01))             , TRUE, FALSE, ''); MueveColm(1);
      RellenaCelda(FORMAT(ROUND(lwPor, 0.01))             , TRUE, FALSE, ''); MueveColm(1);
      MueveFila(2);
    END;

    PROCEDURE CabResumenMes@1103355010();
    BEGIN
      // CabResumenMes
      RellenaCelda('Proveedor' , TRUE, FALSE, ''); MueveColm(1);
      RellenaCelda('Mes'       , TRUE, FALSE, ''); MueveColm(1);
      RellenaCelda('Servicios' , TRUE, FALSE, ''); MueveColm(1);
      RellenaCelda('Paxes'     , TRUE, FALSE, ''); MueveColm(1);
      RellenaCelda('Facturado' , TRUE, FALSE, ''); MueveColm(1);
      RellenaCelda('Coste'     , TRUE, FALSE, ''); MueveColm(1);
      RellenaCelda('Diferencia', TRUE, FALSE, ''); MueveColm(1);
      RellenaCelda('Porcentaje', TRUE, FALSE, ''); MueveColm(1);
      MueveFila(1);
    END;

    BEGIN
    {
      JPT 11/09/08
      Los Totales de Proveedor tienen dos dimensiones: 1:Sin Impuesto 2: Impuestos Incluiodos
    }
    END.
  }
  RDLDATA
  {
  }
}
