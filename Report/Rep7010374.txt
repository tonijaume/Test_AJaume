OBJECT Report 7010374 Parte de trabajo SANJOSE
{
  OBJECT-PROPERTIES
  {
    Date=16/10/09;
    Time=12:34:35;
    Version List=TRANSFER,INV;
  }
  PROPERTIES
  {
    CaptionML=ESP=Parte de trabajo SANJOSE;
    TopMargin=600;
    BottomMargin=1100;
    LeftMargin=1000;
    Orientation=Portrait;
  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table7010360;
        DataItemTableView=SORTING(N§ Parte);
        NewPagePerRecord=No;
        OnPreDataItem=VAR
                        rPar@1100244002 : Record 7010311;
                      BEGIN
                        //Si el rango es superior a un parte-> entonces realizamos estas validaciones.
                        rPar.FINDFIRST;
                        vCodigoEntradas := rPar."Codigo Entradas";
                        vCodigoSalidas  := rPar."Codigo Salidas";

                        IF COUNT > 1 THEN BEGIN

                          //Controlamos que no estemos emitiendo s¢lo un parte.
                          IF vFltFecha = 0D THEN
                            ERROR(FALTA_FECHA);

                          IF vFltGaraje = '' THEN
                            ERROR(FALTA_GARAJE);

                          //Este filtro est  puesto a dredes para que los partes salgan ordenaditos.
                          RESET;
                          SETCURRENTKEY(Fecha,
                                        "Cod Conductor",
                                        "Dia siguiente",
                                        "Hora inicio");
                          SETRANGE(Fecha,vFltFecha);

                          IF vFltConductor<>'' THEN
                            SETRANGE("Cod Conductor",vFltConductor);

                          IF vFltTipoServ <> '' THEN
                            SETRANGE("Tipo Servicio",vFltTipoServ);

                          IF vFltCodServ <> '' THEN
                            SETRANGE("Codigo Servicio",vFltCodServ);

                          IF vFltParte<>'' THEN
                            SETRANGE("N§ Parte",vFltParte);

                          IF vFltCliente <> '' THEN
                            SETRANGE(Cliente,vFltCliente);

                          //Siempre debemos haber introducido un garaje.
                          SETRANGE(Garaje,vFltGaraje);

                          IF vSoloNoImpresas THEN
                            SETRANGE(Impreso,FALSE);

                        END;

                        vNPartes := 0;
                      END;

        OnAfterGetRecord=VAR
                           rTTOO@1100244006 : Record 7010312;
                           rCli@1100244000 : Record 18;
                           rPR@1100244001 : Record 7010315;
                           rTS@1100244002 : Record 7010319;
                           rCS@1100244003 : Record 7010320;
                           rSP@1100244004 : Record 7010359;
                           vDia@1100244005 : Text[2];
                         BEGIN
                           vNPartes+=1;
                           IF vNPartes > 1 THEN
                             CurrReport.NEWPAGE;

                           vVuelos        := '';
                           vCliente       := '';
                           vTTOO          := '';
                           vPuntoRecogida := '';
                           vHoraRef       := 0T;

                           //Si no hay regs. en servicios-partes, pasamos de el.
                           rSP.RESET;
                           rSP.SETRANGE("N§ Parte","N§ Parte");
                           IF NOT rSP.FINDFIRST THEN
                             CurrReport.SKIP;

                           vCliente       := Cliente;
                           IF rCli.GET(Cliente) THEN
                             vCliente := rCli.Name;

                           CALCFIELDS("Adultos transportados","Ni¤os transportados");

                           vTotalAD := "Adultos transportados";
                           vTotalNI := "Ni¤os transportados";

                           vCodServicio := Text000;
                           vSAR         := "Codigo Servicio";
                           rCS.RESET;
                           IF rCS.GET("Codigo Servicio") THEN vSAR := rCS.Descripcion;

                           CASE "Codigo Servicio" OF
                             vCodigoEntradas: BEGIN
                                                vCodServicio := Text002;
                                                vSAR         := Text001+' '+Text002;
                                              END;
                             vCodigoSalidas : BEGIN
                                                vCodServicio := Text003;
                                                vSAR         := Text001+' '+Text003;
                                              END;
                           END;

                           ObtenerDatos("N§ Parte",vTTOO,vVuelos,vIATA,vPuntoRecogida,vHoraRef);
                           ArreglarDatos("Codigo Servicio","Origen/Destino","Hora inicio",vPuntoRecogida,vHoraRef);

                           IF vTTOO <> '' THEN BEGIN
                             rTTOO.RESET;
                             rTTOO.GET(vTTOO);
                             vTTOO := rTTOO.Nombre;
                           END;

                           vPreFecha := '';
                           IF (vHoraRef >= 000000T) AND (vHoraRef <= 060000T) THEN BEGIN
                             vDia := FORMAT(DATE2DMY(Fecha-1,1));
                             IF STRLEN(vDia) = 1 THEN
                               vDia := '0'+vDia;

                             vPreFecha := vDia+'-';
                           END;


                           rPR.RESET;
                           IF rPR.GET(vPuntoRecogida) THEN
                             vPuntoRecogida:=rPR.Descripci¢n;

                           TratarObservaciones(Observaciones);

                           IF (NOT CurrReport.PREVIEW) AND (NOT Impreso) THEN BEGIN
                             Impreso := TRUE;
                             MODIFY;
                           END;
                         END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=20250;
            SectionHeight=4653;
          }
          CONTROLS
          {
            { 4   ;TextBox      ;150  ;2366 ;900  ;423  ;FontSize=10;
                                                         FontBold=Yes;
                                                         SourceExpr="N§ Vehiculo" }
            { 5   ;TextBox      ;1200 ;2366 ;3450 ;423  ;FontSize=10;
                                                         FontBold=Yes;
                                                         SourceExpr=Conductor }
            { 7   ;TextBox      ;1950 ;1542 ;6150 ;423  ;FontSize=10;
                                                         FontBold=Yes;
                                                         SourceExpr=vTTOO }
            { 8   ;TextBox      ;16650;846  ;3450 ;423  ;FontSize=10;
                                                         FontBold=Yes;
                                                         SourceExpr=vVuelos }
            { 15  ;TextBox      ;8400 ;1912 ;7650 ;423  ;FontSize=10;
                                                         FontBold=Yes;
                                                         SourceExpr=vPuntoRecogida }
            { 47  ;TextBox      ;150  ;3384 ;7950 ;846  ;FontSize=16;
                                                         FontBold=Yes;
                                                         SourceExpr=vCodServicio }
            { 49  ;TextBox      ;10050;846  ;3150 ;423  ;HorzAlign=Left;
                                                         FontSize=14;
                                                         FontBold=Yes;
                                                         SourceExpr=Fecha }
            { 53  ;TextBox      ;13650;846  ;2250 ;423  ;FontSize=14;
                                                         FontBold=Yes;
                                                         SourceExpr=FORMAT(vHoraRef,5) }
            { 1100244000;TextBox;4950 ;2366 ;3150 ;423  ;FontSize=10;
                                                         FontBold=Yes;
                                                         SourceExpr=Guia }
            { 1100244003;TextBox;8400 ;2758 ;7650 ;423  ;FontSize=10;
                                                         FontBold=Yes;
                                                         SourceExpr=vSAR }
            { 1100244004;TextBox;16650;1912 ;3450 ;423  ;FontSize=10;
                                                         FontBold=Yes;
                                                         SourceExpr=vIATA }
            { 1100244007;TextBox;10200;0    ;3450 ;423  ;FontSize=10;
                                                         FontBold=Yes;
                                                         SourceExpr="N§ Parte" }
            { 1100244008;Label  ;8250 ;0    ;1800 ;423  ;FontSize=12;
                                                         CaptionML=ESP=N§ Parte }
            { 1100244010;TextBox;9000 ;846  ;1050 ;423  ;HorzGlue=Right;
                                                         HorzAlign=Right;
                                                         FontSize=14;
                                                         FontBold=Yes;
                                                         SourceExpr=vPreFecha }
          }
           }
        { PROPERTIES
          {
            SectionType=Footer;
            PrintOnEveryPage=Yes;
            PlaceInBottom=Yes;
            SectionWidth=20250;
            SectionHeight=1269;
          }
          CONTROLS
          {
            { 1100244005;TextBox;0    ;0    ;20250;423  ;FontSize=10;
                                                         SourceExpr=vObs1 }
            { 1100244006;TextBox;0    ;423  ;20250;423  ;FontSize=10;
                                                         SourceExpr=vObs2 }
            { 1100244009;TextBox;0    ;846  ;20250;423  ;FontSize=10;
                                                         SourceExpr=vObs3 }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table7010359;
        DataItemTableView=SORTING(N§ Servicio,N§ Linea)
                          ORDER(Ascending);
        OnPreDataItem=BEGIN
                        IF vFltOrden = vFltOrden::"Hora Vuelo+Letra" THEN
                          SETCURRENTKEY("N§ Parte","Hora Vuelo",Letra);

                        IF vFltOrden = vFltOrden::"Hora recogida+Letra" THEN
                          SETCURRENTKEY("N§ Parte","Hora recogida",Letra);
                      END;

        OnAfterGetRecord=VAR
                           rPR@1100244000 : Record 7010315;
                           SOBREPASAMIENTO@1100244001 : TextConst 'ESP=El parte tiene m s lineas de puntos de recogida de los que se pueden imprimir.';
                         BEGIN

                           vPRLinea   := "Punto recogida";
                           IF rPR.GET("Punto recogida") THEN
                             vPRLinea := rPR.Descripci¢n;
                         END;

        DataItemLink=N§ Parte=FIELD(N§ Parte);
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=20250;
            SectionHeight=423;
            KeepWithNext=Yes;
          }
          CONTROLS
          {
            { 11  ;TextBox      ;1350 ;0    ;6450 ;423  ;FontSize=9;
                                                         SourceExpr=vPRLinea }
            { 50  ;TextBox      ;9450 ;0    ;600  ;423  ;FontSize=9;
                                                         SourceExpr="Adultos transportados" }
            { 52  ;TextBox      ;12150;0    ;600  ;423  ;FontSize=9;
                                                         SourceExpr="Ni¤os transportados" }
            { 3   ;TextBox      ;300  ;0    ;900  ;423  ;FontSize=9;
                                                         SourceExpr=COPYSTR(FORMAT("Hora recogida"),1,5) }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number)
                          ORDER(Ascending);
        MaxIteration=1;
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=20250;
            SectionHeight=423;
          }
          CONTROLS
          {
            { 1100244001;TextBox;9150 ;0    ;900  ;423  ;FontSize=12;
                                                         FontBold=Yes;
                                                         DecimalPlaces=0:0;
                                                         SourceExpr=vTotalAD }
            { 1100244002;TextBox;11850;0    ;900  ;423  ;FontSize=12;
                                                         FontBold=Yes;
                                                         SourceExpr=vTotalNI }
          }
           }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=10560;
      Height=5060;
      OnOpenForm=VAR
                   cFunBas@1100244001 : Codeunit 7010310;
                   ORDEN_LISTADO@1100244002 : TextConst 'ESP=Hay que especificar el orden de los listados para los tipos de servicio';
                   rAuxParte@1100244000 : Record 7010360;
                 BEGIN
                   vFltFecha   := TODAY + 1;
                   vFltGaraje  := cFunBas.ObtenerGaraje();

                   //Caso de que el garaje sea todos, habr¡a quiz s que sugerir uno.
                   IF vFltGaraje<>'' THEN
                     RequestOptionsForm.FltGaraje.EDITABLE := FALSE;

                   vFltOrden := vFltOrden::Ninguno;
                 END;

    }
    CONTROLS
    {
      { 1   ;TextBox      ;3080 ;220  ;2750 ;440  ;Name=FltGaraje;
                                                   SourceExpr=vFltGaraje;
                                                   TableRelation=Garaje }
      { 2   ;TextBox      ;3080 ;1870 ;2750 ;440  ;Name=FltCodServ;
                                                   NotBlank=No;
                                                   SourceExpr=vFltCodServ;
                                                   TableRelation="Codigo servicio";
                                                   OnValidate=VAR
                                                                rCS@1100244001 : Record 7010320;
                                                              BEGIN
                                                                rCS.RESET;
                                                                IF rCS.GET(vFltCodServ) THEN
                                                                  vFltTipoServ := rCS."Tipo servicio";
                                                              END;
                                                               }
      { 3   ;TextBox      ;3080 ;2420 ;2200 ;440  ;NotBlank=Yes;
                                                   SourceExpr=vFltFecha }
      { 4   ;Label        ;220  ;220  ;2750 ;440  ;CaptionML=ESP=Garaje }
      { 5   ;Label        ;220  ;1870 ;2750 ;440  ;CaptionML=ESP=C¢digo Servicio }
      { 7   ;Label        ;220  ;2420 ;2750 ;440  ;CaptionML=ESP=Fecha }
      { 8   ;Label        ;220  ;3520 ;2750 ;440  ;CaptionML=ESP=Conductor }
      { 9   ;Label        ;220  ;770  ;2750 ;440  ;CaptionML=ESP=N§ Parte }
      { 10  ;TextBox      ;3080 ;770  ;2750 ;440  ;SourceExpr=vFltParte;
                                                   TableRelation=Parte;
                                                   OnValidate=VAR
                                                                rParte@1100244001 : Record 7010360;
                                                              BEGIN
                                                                IF vFltParte <> '' THEN BEGIN
                                                                  rParte.RESET;
                                                                  IF rParte.GET(vFltParte) THEN BEGIN
                                                                    vFltFecha := rParte.Fecha;
                                                                    vFltTipoServ := rParte."Tipo Servicio";
                                                                    vFltCodServ  := rParte."Codigo Servicio";
                                                                    vFltGaraje   := rParte.Garaje;
                                                                    vFltCliente  := '';
                                                                  END;
                                                                END;
                                                              END;
                                                               }
      { 11  ;TextBox      ;3080 ;3520 ;2750 ;440  ;SourceExpr=vFltConductor;
                                                   TableRelation=Conductor;
                                                   OnValidate=VAR
                                                                rConductor@1100244001 : Record 7010327;
                                                              BEGIN
                                                                IF vFltConductor='' THEN
                                                                  vFltNomAbr:=''
                                                                ELSE BEGIN
                                                                  IF rConductor.GET(vFltConductor) THEN
                                                                    vFltNomAbr := rConductor."Nombre Abreviado"
                                                                END
                                                              END;
                                                               }
      { 6   ;TextBox      ;5940 ;3520 ;3520 ;440  ;Editable=No;
                                                   SourceExpr=vFltNomAbr;
                                                   TableRelation=Conductor }
      { 12  ;TextBox      ;3080 ;1320 ;2750 ;440  ;Name=FltCodServ;
                                                   NotBlank=No;
                                                   SourceExpr=vFltTipoServ;
                                                   TableRelation="Tipo Servicio" }
      { 13  ;Label        ;220  ;1320 ;2750 ;440  ;CaptionML=ESP=Tipo Servicio }
      { 14  ;TextBox      ;3080 ;2970 ;2750 ;440  ;SourceExpr=vFltCliente;
                                                   TableRelation=Customer;
                                                   OnValidate=VAR
                                                                rParte@1100244001 : Record 7010360;
                                                              BEGIN
                                                                IF vFltParte <> '' THEN BEGIN
                                                                  rParte.RESET;
                                                                  IF rParte.GET(vFltParte) THEN BEGIN
                                                                    vFltFecha := rParte.Fecha;
                                                                    vFltTipoServ := rParte."Tipo Servicio";
                                                                    vFltCodServ  := rParte."Codigo Servicio";
                                                                  END;
                                                                END;
                                                              END;
                                                               }
      { 15  ;Label        ;220  ;2970 ;2750 ;440  ;CaptionML=ESP=Cliente }
      { 16  ;TextBox      ;3080 ;4070 ;3960 ;440  ;SourceExpr=vFltOrden;
                                                   OnValidate=VAR
                                                                rParte@1100244001 : Record 7010360;
                                                              BEGIN
                                                                IF vFltParte <> '' THEN BEGIN
                                                                  rParte.RESET;
                                                                  IF rParte.GET(vFltParte) THEN BEGIN
                                                                    vFltFecha := rParte.Fecha;
                                                                    vFltTipoServ := rParte."Tipo Servicio";
                                                                    vFltCodServ  := rParte."Codigo Servicio";
                                                                    vFltGaraje   := rParte.Garaje;
                                                                    vFltCliente  := '';
                                                                  END;
                                                                END;
                                                              END;
                                                               }
      { 17  ;Label        ;220  ;4070 ;2750 ;440  ;CaptionML=ESP=Especificar orden }
      { 18  ;CheckBox     ;3080 ;4620 ;440  ;440  ;ShowCaption=No;
                                                   SourceExpr=vSoloNoImpresas }
      { 19  ;Label        ;220  ;4620 ;2750 ;440  ;CaptionML=ESP=S¢lo no impresas }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      rPar@1100244001 : Record 7010311;
      vCodigoEntradas@1100244002 : Code[10];
      vCodigoSalidas@1100244017 : Code[10];
      vFltGaraje@1100244003 : Code[10];
      vFltTipoServ@1100244004 : Code[10];
      vFltCodServ@1100244005 : Code[10];
      vFltFecha@1100244006 : Date;
      vFltConductor@1100244007 : Code[10];
      vFltParte@1100244008 : Code[10];
      vFltNomAbr@1100244009 : Code[20];
      vFltCliente@1100244010 : Code[20];
      vFltTTOO@1100244011 : Code[10];
      vFltOrden@1100244012 : 'Ninguno,Hora Vuelo+Letra,Hora recogida+Letra';
      vCliente@1100244013 : Text[250];
      vTTOO@1100244014 : Text[250];
      vOrigenDestino@1100244019 : Text[60];
      vCodServicio@1100244020 : Text[30];
      vTipoServicio@1100244021 : Text[30];
      vTotalAD@1100244024 : Integer;
      vTotalNI@1100244015 : Integer;
      vVuelos@1100244025 : Text[250];
      vSoloNoImpresas@1100244026 : Boolean;
      vNPartes@1100244029 : Integer;
      vPuntoRecogida@1100244030 : Text[60];
      vPRLinea@1100244040 : Text[60];
      vIATA@1100244000 : Text[50];
      vSAR@1100244016 : Text[100];
      vHoraRef@1100244018 : Time;
      Text000@1100244022 : TextConst 'ESP=EXCURSION';
      Text001@1100244023 : TextConst 'ESP=TRANSFER';
      Text002@1100244031 : TextConst 'ESP=ENTRADA';
      Text003@1100244032 : TextConst 'ESP=SALIDA';
      FALTA_FECHA@1100244036 : TextConst 'ESP=Falta especificar la fecha.';
      FALTA_TIPOSERVICIO@1100244035 : TextConst 'ESP=Falta especificar el tipo de servicio.';
      FALTA_CODSERVICIO@1100244034 : TextConst 'ESP=Falta especificar el c¢digo de servicio.';
      FALTA_GARAJE@1100244033 : TextConst 'ESP=Falta especificar el garaje.';
      vObs1@1100244037 : Text[200];
      vObs2@1100244038 : Text[200];
      vObs3@1100244039 : Text[200];
      vPreFecha@1100244027 : Text[3];

    PROCEDURE ObtenerDatos@9(pParte@1100244000 : Code[10];VAR v_TTOO@1100244003 : Text[250];VAR v_Vuelo@1100244004 : Text[250];VAR v_IATA@1100244005 : Text[50];VAR v_PuntoRecogida@1100244007 : Text[100];VAR v_HoraRef@1100244008 : Time);
    VAR
      rTTOO@1100244001 : Record 7010312;
      rServParte@1100244002 : Record 7010359;
      vAux@1100244006 : Integer;
      v10horas@1100244009 : Integer;
      vCambio@1100244010 : Boolean;
    BEGIN
      //ObtenerTTOOs("N§ Parte",vTTOO,vVuelos,vIATA,vPuntoRecogida);

      //10 horas x 36000 sec/hora x 1000 ms/s
      v10horas := 10 * 3600 * 1000;

      v_TTOO  := '';
      v_Vuelo := '';
      v_IATA  := '';
      v_PuntoRecogida := '';
      v_HoraRef:= 0T;


      rServParte.RESET;
      rServParte.SETCURRENTKEY("N§ Parte");
      rServParte.SETRANGE("N§ Parte",pParte);
      IF rServParte.FINDSET THEN REPEAT

        IF v_TTOO = '' THEN
          v_TTOO  := rServParte.Touroperador;

        IF v_Vuelo = '' THEN
          v_Vuelo := rServParte.Vuelo;

        IF v_IATA = '' THEN
          v_IATA := rServParte.IATA;

        IF v_PuntoRecogida = '' THEN
          v_PuntoRecogida := rServParte."Punto recogida";

        IF v_HoraRef = 0T THEN
          v_HoraRef := rServParte."Hora recogida";

        IF (rServParte."Hora recogida" <> 0T) AND  (v_HoraRef <> 0T)  THEN BEGIN
          IF rServParte."Hora recogida" < v_HoraRef THEN
            vAux := v_HoraRef - rServParte."Hora recogida"
          ELSE
            vAux := rServParte."Hora recogida" - v_HoraRef;

          vCambio := FALSE;
          IF vAux < v10horas THEN BEGIN
            IF rServParte."Hora recogida" < v_HoraRef THEN
              vCambio := TRUE;
          END
          ELSE BEGIN
            IF vAux > v10horas THEN BEGIN
              IF rServParte."Hora recogida" > v_HoraRef THEN
                vCambio := TRUE;
            END;
          END;

          IF vCambio THEN BEGIN
            v_PuntoRecogida := rServParte."Punto recogida";
            v_HoraRef := rServParte."Hora recogida";
          END;

        END;

      UNTIL rServParte.NEXT=0;
    END;

    PROCEDURE ArreglarDatos@1100244001(pCodServ@1100244004 : Code[10];pOrigenDestino@1100244000 : Text[60];pHoraInicio@1100244001 : Time;VAR v_PuntoRecogida@1100244002 : Text[60];VAR v_HoraRef@1100244003 : Time);
    BEGIN
      //ArreglarDatos("Origen/Destino","Hora Inicio",vPuntoRecogida,vHoraRef);
      //Si es una entrada, recomponemos estos valores.
      IF pCodServ = vCodigoEntradas THEN BEGIN
        v_PuntoRecogida := Parte."Origen/Destino";
        v_HoraRef := pHoraInicio;
      END;

      IF v_HoraRef = 0T THEN
        v_HoraRef := pHoraInicio;
    END;

    PROCEDURE TratarObservaciones@1100244000(pObserv@1100244000 : Text[250]);
    VAR
      vConta@1100244001 : Integer;
      vLong@1100244002 : Integer;
      vAcabado@1100244003 : Boolean;
    BEGIN
      vObs1 := '';
      vObs2 := '';
      vObs3 := '';
      vLong := 80;

      vObs1  := COPYSTR(pObserv,1,vLong);
      pObserv:= COPYSTR(pObserv,vLong+1);

      IF pObserv <> '' THEN BEGIN
        vConta   := 1;
        vAcabado := FALSE;
        WHILE (NOT vAcabado) AND (vConta <= 30) DO BEGIN
          IF COPYSTR(pObserv,vConta,1) = ' ' THEN BEGIN
            vAcabado := TRUE;
          END
          ELSE BEGIN
            vObs1  += COPYSTR(pObserv,vConta,1);
            vConta += 1;
          END;
        END;
        pObserv := COPYSTR(pObserv,vConta+1);

        vObs2   := COPYSTR(pObserv,1,vLong);
        pObserv := COPYSTR(pObserv,vLong+1);

        IF pObserv <> '' THEN BEGIN
          vConta   := 1;
          vAcabado := FALSE;
          WHILE (NOT vAcabado) AND (vConta <= 30) DO BEGIN
            IF COPYSTR(pObserv,vConta,1) = ' ' THEN BEGIN
              vAcabado := TRUE;
            END
            ELSE BEGIN
              vObs2  += COPYSTR(pObserv,vConta,1);
              vConta += 1;
            END;
          END;
        END;

        pObserv := COPYSTR(pObserv,vConta+1);

        vObs3  := COPYSTR(pObserv,1);

      END;
    END;

    BEGIN
    {
      EN LAS SALIDAS -> Examinamos las lineas de servicios-partes. De alli obtenemos el punto de recogida. Tambien obtenemos
      la hora de recogida. (Cogeremos la menor)
      EN LAS ENTRADAS-> obtendremos SIEMPRE la hora de "HORA INICIO" y el punto de recogida de ORIGEN/DESTINO.
      EN LAS EXCURSIONES-> COMO en las salidas, pero si no ponemos la hora no pasa nada ya que cogeremos HORA_INICIO.
    }
    END.
  }
  RDLDATA
  {
  }
}
