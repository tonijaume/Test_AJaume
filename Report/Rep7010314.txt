OBJECT Report 7010314 Ranking Conductores
{
  OBJECT-PROPERTIES
  {
    Date=16/10/09;
    Time=12:34:24;
    Version List=TRANSFER;
  }
  PROPERTIES
  {
    CaptionML=ESP=Ranking Conductores;
  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table7010335;
        DataItemTableView=SORTING(Usuario,Garaje,Orden,Fecha Antiguedad,Nombre,Apellidos,Conductor)
                          ORDER(Ascending);
        NewPagePerGroup=Yes;
        DataItemVarName=Temporal Conductor;
        OnPreDataItem=VAR
                        Contador@1100244000 : Integer;
                      BEGIN
                         //Borraremos la tabla Temporal Conductores.
                         rTemporal.SETRANGE(Usuario,USERID);
                         rTemporal.DELETEALL;

                         //Crearemos un array con el valor orden del tipo de contrato.
                         Contador:=0;
                         rTipocontrato.RESET;
                         IF rTipocontrato.FINDSET THEN REPEAT
                           Contador := Contador+1;
                           aContratos[Contador,1] := rTipocontrato."Tipo Contrato";
                           aContratos[Contador,2] := FORMAT(rTipocontrato.Orden);
                         UNTIL (rTipocontrato.NEXT=0) OR (Contador = 10);


                         //Y la cargaremos.
                         rPar.FINDFIRST;
                         rConductor.RESET;
                         rConductor.SETCURRENTKEY(Garaje,Conductor);
                         IF (vGaraje <> '') AND (vGaraje<>rPar."Todos los garajes") THEN
                           rConductor.SETRANGE(Garaje,vGaraje);

                         rConductor.SETRANGE(Externo,FALSE);
                         rConductor.SETRANGE(Bloqueado,FALSE);

                         IF rConductor.FINDSET THEN REPEAT
                           GrabarRegistro(Contador);
                         UNTIL rConductor.NEXT=0;
                         COMMIT;

                         SETRANGE(Usuario,USERID);
                      END;

        GroupTotalFields=Garaje;
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Header;
            PrintOnEveryPage=Yes;
            SectionWidth=18000;
            SectionHeight=2538;
          }
          CONTROLS
          {
            { 1   ;Label        ;13650;0    ;4350 ;423  ;HorzAlign=Right;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=Ranking de Conductores }
            { 3   ;TextBox      ;0    ;0    ;7500 ;423  ;SourceExpr=COMPANYNAME }
            { 13  ;TextBox      ;2100 ;1269 ;1500 ;423  ;SourceExpr=vGaraje }
            { 16  ;Label        ;0    ;1269 ;1950 ;423  ;FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=Filtro Garaje }
            { 7   ;TextBox      ;2100 ;1692 ;1500 ;423  ;SourceExpr=Garaje }
            { 10  ;Label        ;0    ;1692 ;1950 ;423  ;ParentControl=7;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=ESP=Garaje Actual }
            { 25  ;Shape        ;0    ;423  ;18000;423  ;ShapeStyle=HorzLine }
          }
           }
        { PROPERTIES
          {
            SectionType=Header;
            PrintOnEveryPage=Yes;
            SectionWidth=18000;
            SectionHeight=846;
          }
          CONTROLS
          {
            { 9   ;Label        ;0    ;0    ;1800 ;846  ;ParentControl=8;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 12  ;Label        ;2100 ;0    ;1800 ;846  ;ParentControl=11;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 15  ;Label        ;4200 ;0    ;3150 ;846  ;ParentControl=14;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 18  ;Label        ;11550;0    ;2100 ;846  ;ParentControl=17;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 21  ;Label        ;13800;0    ;4200 ;846  ;ParentControl=20;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 23  ;Label        ;7500 ;0    ;3900 ;846  ;ParentControl=22;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
          }
           }
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=18000;
            SectionHeight=423;
          }
          CONTROLS
          {
            { 8   ;TextBox      ;0    ;0    ;1800 ;423  ;HorzAlign=Left;
                                                         SourceExpr="Tipo Contrato" }
            { 11  ;TextBox      ;2100 ;0    ;1800 ;423  ;HorzAlign=Center;
                                                         SourceExpr="Fecha Antiguedad" }
            { 14  ;TextBox      ;4200 ;0    ;3150 ;423  ;HorzAlign=Left;
                                                         SourceExpr=Nombre }
            { 17  ;TextBox      ;11550;0    ;2100 ;423  ;HorzAlign=Left;
                                                         SourceExpr=Telefono }
            { 20  ;TextBox      ;13800;0    ;4200 ;423  ;HorzAlign=Left;
                                                         SourceExpr=Domicilio }
            { 22  ;TextBox      ;7500 ;0    ;3900 ;423  ;SourceExpr=Apellidos }
          }
           }
        { PROPERTIES
          {
            SectionType=Footer;
            PrintOnEveryPage=Yes;
            PlaceInBottom=Yes;
            SectionWidth=18000;
            SectionHeight=846;
          }
          CONTROLS
          {
            { 24  ;Shape        ;0    ;0    ;18000;423  ;ShapeStyle=HorzLine }
            { 2   ;TextBox      ;7200 ;423  ;3150 ;423  ;HorzAlign=Right;
                                                         SourceExpr=FORMAT(TODAY,0,4) }
            { 4   ;TextBox      ;17550;423  ;450  ;423  ;CaptionML=ESP=P gina;
                                                         SourceExpr=CurrReport.PAGENO }
            { 5   ;Label        ;16800;423  ;750  ;423  ;ParentControl=4 }
          }
           }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=9020;
      Height=3410;
      OnOpenForm=VAR
                   cFunBas@1100244000 : Codeunit 7010310;
                 BEGIN
                   vGaraje:=cFunBas.ObtenerGaraje();
                   IF vGaraje<>'' THEN
                     RequestOptionsForm.FltGaraje.EDITABLE := FALSE;
                 END;

    }
    CONTROLS
    {
      { 1   ;TextBox      ;3630 ;110  ;2860 ;440  ;Name=FltGaraje;
                                                   SourceExpr=vGaraje;
                                                   TableRelation=Garaje.Garaje;
                                                   OnValidate=VAR
                                                                cFunBas@1100244001 : Codeunit 7010310;
                                                              BEGIN
                                                                cFunBas.TestRestringido(vGaraje);
                                                              END;
                                                               }
      { 3   ;Label        ;220  ;110  ;3300 ;440  ;CaptionML=ESP=Garaje }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      rConductor@1100244000 : Record 7010327;
      rTipocontrato@1100244001 : Record 7010328;
      aContratos@1100244002 : ARRAY [10,2] OF Text[30];
      rTemporal@1100244003 : Record 7010335;
      vGaraje@1100244004 : Code[10];
      rPar@1100244005 : Record 7010311;

    PROCEDURE GrabarRegistro@17(pContador@1100244000 : Integer);
    VAR
      vOrden@1100244001 : Integer;
      rHist@1100244002 : Record 7010331;
      vTipoContrato@1100244003 : Code[10];
    BEGIN
        //GrabarRegistro();
        rHist.SETCURRENTKEY(Conductor,"Fecha Alta");
        rHist.SETRANGE(Conductor,rConductor.Conductor);
        rHist.SETRANGE(Confirmado,TRUE);
        IF rHist.FINDLAST THEN
          vTipoContrato := rHist."Tipo Contrato";

        //Obtenido el tipo de contrato, buscamos el orden que le corresponde.
        vOrden:=ObtenerOrden(pContador,vTipoContrato);

        rTemporal.INIT;
        rTemporal.Usuario           := USERID;
        rTemporal.Garaje            := rConductor.Garaje;
        rTemporal.Nombre            := rConductor.Nombre;
        rTemporal.Apellidos         := rConductor.Apellidos;
        rTemporal.Conductor         := rConductor.Conductor;
        rTemporal."Nombre Abreviado":= rConductor."Nombre Abreviado";
        rTemporal.Telefono          := rConductor.Telefono;
        rTemporal.Domicilio         := rConductor.Domicilio;
        rTemporal."Fecha Antiguedad":= rConductor."Fecha Antiguedad";
        rTemporal."Tipo Contrato"   := vTipoContrato;

        rTemporal.Orden             := vOrden;
        rTemporal.INSERT;
    END;

    PROCEDURE ObtenerOrden@18(pMaximo@1100244000 : Integer;pTipoContrato@1100244001 : Code[10]) result : Integer;
    VAR
      conta@1100244002 : Integer;
    BEGIN
      //ObtenerOrden.
      result := 999;
      conta  :=1;
      REPEAT
        IF aContratos[conta,1] = pTipoContrato THEN BEGIN
          EVALUATE(result,aContratos[conta,2]);
          EXIT(result);
        END;
        conta := conta + 1;
      UNTIL conta>pMaximo;
    END;

    BEGIN
    {
      //Los conductores de tipo EXTERNO no aparecer n en este listado.
    }
    END.
  }
  RDLDATA
  {
  }
}
