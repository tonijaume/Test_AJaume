OBJECT Report 7113 Export Analysis Rep. to Excel
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=NAVW16.00.01;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Export Analysis Rep. to Excel;
               ESP=Exportar inf. an lisis a Excel];
    ProcessingOnly=Yes;
  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number)
                          WHERE(Number=CONST(1));
        OnAfterGetRecord=VAR
                           Window@1000 : Dialog;
                           RecNo@1001 : Integer;
                           TotalRecNo@1002 : Integer;
                           RowNo@1003 : Integer;
                           ColumnNo@1004 : Integer;
                         BEGIN
                           Window.OPEN(
                             Text000 +
                             '@1@@@@@@@@@@@@@@@@@@@@@\');
                           Window.UPDATE(1,0);
                           TotalRecNo := AnalysisLine.COUNTAPPROX;
                           RecNo :=0;

                           TempExcelBuffer.DELETEALL;
                           CLEAR(TempExcelBuffer);

                           AnalysisLineTemplate.GET(AnalysisLine."Analysis Area",AnalysisLine."Analysis Line Template Name");
                           IF AnalysisLineTemplate."Item Analysis View Code" <> '' THEN
                             ItemAnalysisView.GET(AnalysisLineTemplate."Analysis Area",AnalysisLineTemplate."Item Analysis View Code");
                           GLSetup.GET;

                           RowNo := 1;
                           EnterCell(RowNo,1,Text001,FALSE,FALSE,TRUE);
                           IF AnalysisLine.GETFILTER("Date Filter") <> '' THEN BEGIN
                             RowNo := RowNo + 1;
                             EnterFilterInCell(
                               RowNo,
                               AnalysisLine.GETFILTER("Date Filter"),
                               AnalysisLine.FIELDCAPTION("Date Filter"));
                           END;
                           IF (AnalysisLine.GETFILTER("Item Budget Filter") <> '') THEN BEGIN
                             RowNo := RowNo + 1;
                             EnterFilterInCell(
                               RowNo,
                               AnalysisLine.GETFILTER("Item Budget Filter"),
                               AnalysisLine.FIELDCAPTION("Item Budget Filter"));
                           END;
                           IF (AnalysisLine.GETFILTER("Dimension 1 Filter") <> '') THEN BEGIN
                             RowNo := RowNo + 1;
                             EnterFilterInCell(
                               RowNo,
                               AnalysisLine.GETFILTER("Dimension 1 Filter"),
                               GetDimFilterCaption(1));
                           END;
                           IF (AnalysisLine.GETFILTER("Dimension 2 Filter") <> '') THEN BEGIN
                             RowNo := RowNo + 1;
                             EnterFilterInCell(
                               RowNo,
                               AnalysisLine.GETFILTER("Dimension 2 Filter"),
                               GetDimFilterCaption(2));
                           END;
                           IF (AnalysisLine.GETFILTER("Dimension 3 Filter") <> '') THEN BEGIN
                             RowNo := RowNo + 1;
                             EnterFilterInCell(
                               RowNo,
                               AnalysisLine.GETFILTER("Dimension 3 Filter"),
                               GetDimFilterCaption(3));
                           END;

                           RowNo := RowNo + 1;
                           IF GLSetup."LCY Code" <> '' THEN BEGIN
                             RowNo := RowNo + 1;
                             EnterFilterInCell(
                               RowNo,
                               GLSetup."LCY Code",
                               Currency.TABLECAPTION);
                           END;

                           RowNo := RowNo + 1;
                           IF AnalysisLine.FIND('-') THEN BEGIN
                             IF ColumnLayout.FIND('-') THEN BEGIN
                               RowNo := RowNo + 1;
                               ColumnNo := 1;
                               REPEAT
                                 ColumnNo := ColumnNo + 1;
                                 EnterCell(
                                   RowNo,
                                   ColumnNo,
                                   ColumnLayout."Column Header",
                                   FALSE,
                                   FALSE,
                                   FALSE);
                               UNTIL ColumnLayout.NEXT = 0;
                             END;
                             REPEAT
                               RecNo := RecNo + 1;
                               Window.UPDATE(1,ROUND(RecNo / TotalRecNo * 10000,1));
                               RowNo := RowNo + 1;
                               ColumnNo := 1;
                               EnterCell(
                                 RowNo,
                                 ColumnNo,
                                 AnalysisLine.Description,
                                 AnalysisLine.Bold,
                                 AnalysisLine.Italic,
                                 AnalysisLine.Underline);
                               IF ColumnLayout.FIND('-') THEN BEGIN
                                 REPEAT
                                   ColumnValue := AnalysisReportManagement.CalcCell(AnalysisLine,ColumnLayout,FALSE);
                                     IF AnalysisReportManagement.GetDivisionError THEN
                                       ColumnValue := 0;
                                   ColumnNo := ColumnNo + 1;
                                   IF ColumnValue <> 0 THEN
                                     EnterCell(
                                       RowNo,
                                       ColumnNo,
                                       FORMAT(ColumnValue),
                                       AnalysisLine.Bold,
                                       AnalysisLine.Italic,
                                       AnalysisLine.Underline)
                                   ELSE
                                     EnterCell(
                                       RowNo,
                                       ColumnNo,
                                       '',
                                       AnalysisLine.Bold,
                                       AnalysisLine.Italic,
                                       AnalysisLine.Underline);
                                 UNTIL ColumnLayout.NEXT = 0;
                               END;
                             UNTIL AnalysisLine.NEXT = 0;
                           END;

                           Window.CLOSE;

                           IF Option = Option::"Update Workbook" THEN BEGIN
                             IF ISSERVICETIER THEN
                               IF UploadedFileName = '' THEN
                                 UploadFile
                               ELSE
                                 FileName := UploadedFileName;

                             TempExcelBuffer.OpenBook(FileName,SheetName);
                             TempExcelBuffer.CreateSheet(SheetName,'',COMPANYNAME,USERID);
                           END ELSE BEGIN
                             TempExcelBuffer.CreateBook;
                             TempExcelBuffer.CreateSheet(AnalysisTemplateName,AnalysisLine.Description,COMPANYNAME,USERID)
                           END;
                           TempExcelBuffer.GiveUserControl;
                         END;

      }
      SECTIONS
      {
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=8910;
      Height=1540;
      SaveValues=Yes;
      OnOpenForm=BEGIN
                   UpdateRequestForm;
                 END;

    }
    CONTROLS
    {
      { 1   ;TextBox      ;3410 ;550  ;5500 ;440  ;Name=FileName;
                                                   CaptionML=[ENU=Workbook File Name;
                                                              ESP=Nombre fichero libro];
                                                   SourceExpr=FileName;
                                                   OnAssistEdit=BEGIN
                                                                  UploadFile;
                                                                END;

                                                   OnAfterValidate=BEGIN
                                                                     UploadFile;
                                                                   END;
                                                                    }
      { 4   ;Label        ;0    ;550  ;3300 ;440  ;ParentControl=1 }
      { 5   ;TextBox      ;3410 ;1100 ;5500 ;440  ;Name=SheetName;
                                                   CaptionML=[ENU=Worksheet Name;
                                                              ESP=Nombre hoja];
                                                   SourceExpr=SheetName;
                                                   OnAssistEdit=VAR
                                                                  ExcelBuf@1001 : Record 370;
                                                                BEGIN
                                                                  IF ISSERVICETIER THEN
                                                                    SheetName := ExcelBuf.SelectSheetsName(UploadedFileName)
                                                                  ELSE
                                                                    SheetName := ExcelBuf.SelectSheetsName(FileName);
                                                                END;
                                                                 }
      { 6   ;Label        ;0    ;1100 ;3300 ;440  ;ParentControl=5 }
      { 7   ;TextBox      ;3410 ;0    ;2750 ;440  ;CaptionML=[ENU=Option;
                                                              ESP=Opci¢n];
                                                   OptionCaptionML=[ENU=Create Workbook,Update Workbook;
                                                                    ESP=Crear libro,Actualizar libro];
                                                   SourceExpr=Option;
                                                   OnValidate=BEGIN
                                                                UpdateRequestForm;
                                                              END;
                                                               }
      { 8   ;Label        ;0    ;0    ;3300 ;440  ;ParentControl=7 }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnInit=BEGIN
               SheetNameEnable := TRUE;
               FileNameEnable := TRUE;
             END;

      OnOpenPage=BEGIN
                   UpdateRequestForm;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             ESP=Opciones] }

      { 7   ;2   ;Field     ;
                  CaptionML=[ENU=Option;
                             ESP=Opci¢n];
                  OptionCaptionML=[ENU=Create Workbook,Update Workbook;
                                   ESP=Crear libro,Actualizar libro];
                  SourceExpr=Option;
                  OnValidate=BEGIN
                               UpdateRequestForm;
                             END;
                              }

      { 1   ;2   ;Field     ;
                  Name=FileName;
                  CaptionML=[ENU=Workbook File Name;
                             ESP=Nombre fichero libro];
                  SourceExpr=FileName;
                  Enabled=FileNameEnable;
                  OnValidate=BEGIN
                               FileNameOnAfterValidate;
                             END;

                  OnAssistEdit=BEGIN
                                 UploadFile;
                               END;
                                }

      { 5   ;2   ;Field     ;
                  Name=SheetName;
                  CaptionML=[ENU=Worksheet Name;
                             ESP=Nombre hoja];
                  SourceExpr=SheetName;
                  Enabled=SheetNameEnable;
                  OnAssistEdit=VAR
                                 ExcelBuf@1001 : Record 370;
                               BEGIN
                                 IF ISSERVICETIER THEN
                                   SheetName := ExcelBuf.SelectSheetsName(UploadedFileName)
                                 ELSE
                                   SheetName := ExcelBuf.SelectSheetsName(FileName);
                               END;
                                }

    }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Analyzing Data...\\;ESP=Analizar Datos...\\';
      Text001@1001 : TextConst 'ENU=Filters;ESP=Filtros';
      Text002@1002 : TextConst 'ENU=Update Workbook;ESP=Actualizar libro';
      AnalysisLineTemplate@1003 : Record 7112;
      AnalysisLine@1004 : Record 7114;
      ColumnLayout@1005 : Record 7118;
      TempExcelBuffer@1006 : TEMPORARY Record 370;
      GLSetup@1013 : Record 98;
      ItemAnalysisView@1014 : Record 7152;
      Currency@1015 : Record 4;
      AnalysisReportManagement@1007 : Codeunit 7110;
      ColumnValue@1009 : Decimal;
      FileName@1010 : Text[250];
      UploadedFileName@1008 : Text[1024];
      SheetName@1011 : Text[250];
      Option@1012 : 'Create Workbook,Update Workbook';
      AnalysisTemplateName@1102601000 : Code[10];
      FileNameEnable@19078740 : Boolean INDATASET;
      SheetNameEnable@19012330 : Boolean INDATASET;

    PROCEDURE SetOptions@3(VAR AnalysisLine2@1000 : Record 7114;ColumnLayoutName2@1001 : Code[10];NewAnalysisTemplateName@1002 : Code[10]);
    BEGIN
      AnalysisTemplateName := NewAnalysisTemplateName;
      AnalysisLine.COPYFILTERS(AnalysisLine2);
      AnalysisLine := AnalysisLine2;
      AnalysisLine.SETFILTER("Analysis Line Template Name",NewAnalysisTemplateName);
      ColumnLayout.SETRANGE("Analysis Area",AnalysisLine2."Analysis Area");
      ColumnLayout.SETRANGE("Analysis Column Template",ColumnLayoutName2);
    END;

    PROCEDURE UpdateRequestForm@1();
    BEGIN
      IF ISSERVICETIER THEN BEGIN
        PageUpdateRequestForm;
        EXIT;
      END;
      IF Option = Option::"Update Workbook" THEN BEGIN
        IF NOT ISSERVICETIER THEN BEGIN
          RequestOptionsForm.FileName.ENABLED(TRUE);
          RequestOptionsForm.SheetName.ENABLED(TRUE);
        END;
      END ELSE BEGIN
        FileName := '';
        UploadedFileName := '';
        SheetName := '';
        IF NOT ISSERVICETIER THEN BEGIN
          RequestOptionsForm.FileName.ENABLED(FALSE);
          RequestOptionsForm.SheetName.ENABLED(FALSE);
        END;
      END;
    END;

    LOCAL PROCEDURE EnterFilterInCell@5(RowNo@1000 : Integer;Filter@1001 : Text[250];FieldName@1002 : Text[100]);
    BEGIN
      IF Filter <> '' THEN BEGIN
        EnterCell(RowNo,1,FieldName,FALSE,FALSE,FALSE);
        EnterCell(RowNo,2,Filter,FALSE,FALSE,FALSE);
      END;
    END;

    LOCAL PROCEDURE EnterCell@2(RowNo@1000 : Integer;ColumnNo@1001 : Integer;CellValue@1002 : Text[250];Bold@1003 : Boolean;Italic@1004 : Boolean;UnderLine@1005 : Boolean);
    BEGIN
      TempExcelBuffer.INIT;
      TempExcelBuffer.VALIDATE("Row No.",RowNo);
      TempExcelBuffer.VALIDATE("Column No.",ColumnNo);
      TempExcelBuffer."Cell Value as Text" := CellValue;
      TempExcelBuffer.Formula := '';
      TempExcelBuffer.Bold := Bold;
      TempExcelBuffer.Italic := Italic;
      TempExcelBuffer.Underline := UnderLine;
      TempExcelBuffer.INSERT;
    END;

    LOCAL PROCEDURE GetDimFilterCaption@4(DimFilterNo@1000 : Integer) : Text[80];
    VAR
      Dimension@1001 : Record 348;
    BEGIN
      IF AnalysisLineTemplate."Item Analysis View Code" = '' THEN
        CASE DimFilterNo OF
          1:
            Dimension.GET(GLSetup."Global Dimension 1 Code");
          2:
            Dimension.GET(GLSetup."Global Dimension 2 Code");
        END
      ELSE
        CASE DimFilterNo OF
          1:
            Dimension.GET(ItemAnalysisView."Dimension 1 Code");
          2:
            Dimension.GET(ItemAnalysisView."Dimension 2 Code");
          3:
            Dimension.GET(ItemAnalysisView."Dimension 3 Code");
        END;
      EXIT(COPYSTR(Dimension.GetMLFilterCaption(GLOBALLANGUAGE),1,80));
    END;

    PROCEDURE UploadFile@6();
    VAR
      CommonDialogMgt@1000 : Codeunit 412;
    BEGIN
      UploadedFileName := CommonDialogMgt.OpenFile(Text002,FileName,2,'',0);
      FileName := UploadedFileName;
    END;

    LOCAL PROCEDURE FileNameOnAfterValidate@19040090();
    BEGIN
      UploadFile;
    END;

    LOCAL PROCEDURE PageUpdateRequestForm@19031953();
    BEGIN
      IF Option = Option::"Update Workbook" THEN BEGIN
        IF NOT ISSERVICETIER THEN BEGIN
          FileNameEnable := TRUE;
          SheetNameEnable := TRUE;
        END;
      END ELSE BEGIN
        FileName := '';
        UploadedFileName := '';
        SheetName := '';
        IF NOT ISSERVICETIER THEN BEGIN
          FileNameEnable := FALSE;
          SheetNameEnable := FALSE;
        END;
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}
