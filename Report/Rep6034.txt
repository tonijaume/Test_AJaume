OBJECT Report 6034 Remove Lines from Contract
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVW16.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Remove Lines from Contract;
               ESP=Eliminar l멽s. del contrato];
    ProcessingOnly=Yes;
    OnInitReport=BEGIN
                   DelToDate := WORKDATE;
                   ServMgtSetup.GET;
                 END;

    OnPreReport=BEGIN
                  CreateCreditfromContractLines.InitVariables;
                END;

    OnPostReport=BEGIN
                   IF DeleteLines = DeleteLines::"Delete Lines" THEN
                     IF LinesRemoved > 1 THEN
                       MESSAGE(Text000,LinesRemoved)
                     ELSE
                       MESSAGE(Text001,LinesRemoved);

                   IF CreditMemoCreated = 1 THEN
                     MESSAGE(Text006);

                   IF CreditMemoCreated > 1 THEN
                     MESSAGE(Text007);
                   CreateCreditfromContractLines.InitVariables;
                 END;

  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table5964;
        DataItemTableView=SORTING(Contract Type,Contract No.,Credited,New Line)
                          WHERE(Contract Type=CONST(Contract),
                                Contract Status=CONST(Signed),
                                New Line=CONST(No));
        OnPreDataItem=BEGIN
                        IF DeleteLines = DeleteLines::"Print Only" THEN BEGIN
                          CLEAR(ExpiredContractLinesTest);
                          ExpiredContractLinesTest.InitVariables(DelToDate,ReasonCode);
                          ExpiredContractLinesTest.SETTABLEVIEW("Service Contract Line");
                          ExpiredContractLinesTest.RUNMODAL;
                          CurrReport.BREAK;
                        END;

                        IF DelToDate = 0D THEN
                          ERROR(Text002);
                        ServMgtSetup.GET;
                        IF ServMgtSetup."Use Contract Cancel Reason" THEN
                          IF ReasonCode = '' THEN
                            ERROR(Text003);
                        "Service Contract Line".SETFILTER("Contract Expiration Date",'<>%1&<=%2',0D,DelToDate);

                        Window.OPEN(
                          Text004 +
                          '@1@@@@@@@@@@@@@@@@@@@@@@@@@@@');
                        i := "Service Contract Line".COUNTAPPROX;
                        j := 0;
                        LinesRemoved := 0;
                        LastContractNo := '';
                        CreditMemoCreated := 0;
                      END;

        OnAfterGetRecord=BEGIN
                           j := j + 1;
                           Window.UPDATE(1,ROUND(j / i * 10000,1));

                           IF LastContractNo <> "Contract No." THEN BEGIN
                             LastContractNo := "Service Contract Line"."Contract No.";
                             ServContract.GET("Contract Type","Contract No.");
                             FiledServContract.FileContract(ServContract);
                             IF ServContract."Automatic Credit Memos" AND
                                ("Credit Memo Date" > 0D) AND
                                "Service Contract Line".CreditMemoBaseExists
                             THEN
                               CreditMemoCreated := CreditMemoCreated + 1;
                           END;
                           "Service Contract Line".SuspendStatusCheck(TRUE);
                           DELETE(TRUE);

                           LinesRemoved := LinesRemoved + 1;
                         END;

        ReqFilterFields=Contract No.,Service Item No.;
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=12000;
            SectionHeight=846;
          }
          CONTROLS
          {
          }
           }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=7910;
      Height=2750;
    }
    CONTROLS
    {
      { 5   ;TextBox      ;3410 ;0    ;1650 ;440  ;CaptionML=[ENU=Remove Lines to;
                                                              ESP=Elimina l멽eas hasta];
                                                   SourceExpr=DelToDate }
      { 6   ;Label        ;0    ;0    ;3300 ;440  ;ParentControl=5 }
      { 1   ;TextBox      ;3410 ;550  ;2750 ;440  ;CaptionML=[ENU=Reason Code;
                                                              ESP=C묛. auditor며];
                                                   SourceExpr=ReasonCode;
                                                   OnValidate=BEGIN
                                                                ReasonCode2.GET(ReasonCode);
                                                              END;

                                                   OnLookup=BEGIN
                                                              ReasonCode2.RESET;
                                                              ReasonCode2.Code := ReasonCode;
                                                              IF FORM.RUNMODAL(0,ReasonCode2) = ACTION::LookupOK THEN BEGIN
                                                                ReasonCode2.GET(ReasonCode2.Code);
                                                                ReasonCode := ReasonCode2.Code;
                                                              END;
                                                            END;
                                                             }
      { 4   ;Label        ;0    ;550  ;3300 ;440  ;ParentControl=1 }
      { 7   ;TextBox      ;3410 ;1100 ;4500 ;440  ;Name=Reason Code;
                                                   Editable=No;
                                                   Focusable=No;
                                                   SourceExpr=ReasonCode2.Description }
      { 8   ;Label        ;0    ;1100 ;3300 ;440  ;ParentControl=7;
                                                   CaptionML=[ENU=Reason Code Description;
                                                              ESP=Descripci묥 c묛. auditor며] }
      { 9   ;Label        ;0    ;1760 ;3300 ;440  ;CaptionML=[ENU=Action;
                                                              ESP=Acci묥] }
      { 10  ;OptionButton ;3410 ;1760 ;2750 ;440  ;CaptionML=[ENU=Delete Lines;
                                                              ESP=Borrar l멽eas];
                                                   SourceExpr=DeleteLines;
                                                   OptionValue=Delete Lines }
      { 11  ;OptionButton ;3410 ;2310 ;2750 ;440  ;CaptionML=[ENU=Print Only;
                                                              ESP=S묣o imprimir];
                                                   SourceExpr=DeleteLines;
                                                   OptionValue=Print Only }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             ESP=Opciones] }

      { 5   ;2   ;Field     ;
                  CaptionML=[ENU=Remove Lines to;
                             ESP=Elimina l멽eas hasta];
                  SourceExpr=DelToDate }

      { 1   ;2   ;Field     ;
                  CaptionML=[ENU=Reason Code;
                             ESP=C묛. auditor며];
                  SourceExpr=ReasonCode;
                  OnValidate=BEGIN
                               ReasonCode2.GET(ReasonCode);
                             END;

                  OnLookup=BEGIN
                             ReasonCode2.RESET;
                             ReasonCode2.Code := ReasonCode;
                             IF FORM.RUNMODAL(0,ReasonCode2) = ACTION::LookupOK THEN BEGIN
                               ReasonCode2.GET(ReasonCode2.Code);
                               ReasonCode := ReasonCode2.Code;
                             END;
                           END;
                            }

      { 7   ;2   ;Field     ;
                  Name=Reason Code;
                  CaptionML=[ENU=Reason Code Description;
                             ESP=Descripci묥 c묛. auditor며];
                  SourceExpr=ReasonCode2.Description;
                  Editable=FALSE }

      { 10  ;2   ;Field     ;
                  CaptionML=[ENU=Action;
                             ESP=Acci묥];
                  OptionCaptionML=[ENU=Delete Lines,Print Only;
                                   ESP=Eliminar l멽eas,S묣o imprimir];
                  SourceExpr=DeleteLines }

    }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=%1 contract lines were removed.;ESP=Se han eliminado %1 l멽s. contrato.';
      Text001@1001 : TextConst 'ENU=%1 contract line was removed.;ESP=Se ha eliminado %1 l멽. contrato.';
      Text002@1002 : TextConst 'ENU=You must fill in the Remove Lines to field.;ESP=Debe rellenar el campo Eliminar l멽s. hasta.';
      Text003@1003 : TextConst 'ENU=You must fill in the Reason Code field.;ESP=Debe rellenar el campo C묛. auditor며.';
      Text004@1004 : TextConst 'ENU=Removing contract lines... \\;ESP=Eliminando l멽s. contrato... \\';
      ServMgtSetup@1006 : Record 5911;
      ServContract@1007 : Record 5965;
      FiledServContract@1008 : Record 5970;
      ReasonCode2@1009 : Record 231;
      ExpiredContractLinesTest@1022 : Report 5987;
      CreateCreditfromContractLines@1010 : Codeunit 5945;
      Window@1012 : Dialog;
      i@1013 : Integer;
      j@1014 : Integer;
      LinesRemoved@1015 : Integer;
      DelToDate@1017 : Date;
      DeleteLines@1018 : 'Delete Lines,Print Only';
      ReasonCode@1019 : Code[10];
      LastContractNo@1020 : Code[20];
      Text006@1023 : TextConst 'ENU=A credit memo was created/updated.;ESP=Se ha creado/actualizado un abono.';
      CreditMemoCreated@1011 : Integer;
      Text007@1016 : TextConst 'ENU=Credit memos were created/updated.;ESP=Se han creado/actualizado abonos.';

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}
