OBJECT Report 7010188 CNT - Liquidacion guia venta
{
  OBJECT-PROPERTIES
  {
    Date=12/12/14;
    Time=[ 0:03:17];
    Modified=Yes;
    Version List=AIC2009,CNT;
  }
  PROPERTIES
  {
    OnPreReport=BEGIN
                  CompanyInfo.FINDFIRST;
                END;

  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table7010162;
        DataItemTableView=SORTING(Guia Venta,N§ Ticket,Liquidado GV,N§ liquidacion GV,N§ liquidacion GV reembolso);
        MaxIteration=1;
        DataItemVarName=diFiltros;
        OnPreDataItem=BEGIN
                        SETRANGE ("Cobros con problemas", FALSE);
                        SETFILTER("N§ Ticket"           , '<>%1', '');
                      END;

        OnAfterGetRecord=BEGIN
                           rGuia.GET("Guia Venta");

                           IF GETFILTER("N§ liquidacion GV") <> '' THEN
                           BEGIN
                             wNumLiquidacion := "N§ liquidacion GV";
                             wReimpresion    := TRUE;
                           END
                           ELSE
                           BEGIN
                             IF GETFILTER("N§ liquidacion GV reembolso") <> '' THEN
                             BEGIN
                               wNumLiquidacion := "N§ liquidacion GV reembolso";
                               SETRANGE("N§ liquidacion GV", wNumLiquidacion);
                               wReimpresion    := TRUE;
                             END;
                           END;

                           IF wNumLiquidacion <> 0 THEN
                           BEGIN
                             rLiquidacion.RESET;
                             rLiquidacion.SETRANGE("N§ Liquidacion", wNumLiquidacion);
                             IF rLiquidacion.FINDFIRST THEN
                               diFiltros.SETFILTER("Fecha Venta", rLiquidacion."Filtro Fecha");
                           END
                           ELSE
                             diFiltros.SETRANGE("Liquidado GV", FALSE);

                           wFechaInicio := GETRANGEMIN("Fecha Venta");
                           wFechaFinal  := GETRANGEMAX("Fecha Venta");

                           wAdultosGuia  := 0;
                           wNi¤osGuia    := 0;
                           wIngresoGuia  := 0;
                           wCobroMasGuia := 0;
                           wCobrosGuia   := 0;

                           rTMPCobro.RESET;
                           rTMPCobro.DELETEALL;

                           wDetalleCobro := 0;

                           cLiqGV.VerificarSetupContable(diFiltros);

                           cLiqGV.Facturar(diFiltros, 2); // Modo Consultar

                           _BuscaSaltos;
                         END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Header;
            PrintOnEveryPage=Yes;
            SectionWidth=18000;
            SectionHeight=2961;
          }
          CONTROLS
          {
            { 1100217000;TextBox;0    ;0    ;6300 ;846  ;HorzAlign=Left;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         SourceExpr=CompanyInfo.Name }
            { 1100217001;Label  ;12750;0    ;3450 ;423  ;HorzAlign=Right;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=Reporte representante }
            { 1100217002;TextBox;16350;0    ;1650 ;423  ;FontSize=8;
                                                         SourceExpr=WORKDATE }
            { 1100217003;TextBox;6450 ;0    ;5850 ;423  ;HorzAlign=Center;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         SourceExpr=rGuia.Nombre }
            { 1100217004;Label  ;7050 ;423  ;1200 ;423  ;VertAlign=Bottom;
                                                         FontSize=8;
                                                         CaptionML=[ENU=Period:;
                                                                    ESP=Periodo:] }
            { 1100217005;TextBox;8250 ;423  ;1350 ;423  ;VertAlign=Bottom;
                                                         FontSize=8;
                                                         SourceExpr=wFechaInicio }
            { 1100217006;Label  ;9600 ;423  ;600  ;423  ;HorzAlign=Center;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         CaptionML=[ENU=to;
                                                                    ESP=al] }
            { 1100217007;TextBox;10200;423  ;1350 ;423  ;VertAlign=Bottom;
                                                         FontSize=8;
                                                         SourceExpr=wFechaFinal }
            { 1100217008;Label  ;7350 ;846  ;1950 ;846  ;VertAlign=Center;
                                                         FontSize=8;
                                                         CaptionML=[ENU=LIQUIDATION:;
                                                                    ESP=LIQUIDACION:] }
            { 1100217009;TextBox;9300 ;846  ;1950 ;846  ;HorzAlign=Left;
                                                         VertAlign=Center;
                                                         FontSize=10;
                                                         FontBold=Yes;
                                                         SourceExpr=wNumLiquidacion }
            { 1100217011;Label  ;750  ;1692 ;2250 ;846  ;VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=[ENU=COUPON;
                                                                    ESP=CUPON] }
            { 1100217015;Label  ;3300 ;1692 ;4950 ;846  ;VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=[ENU=SERVICE;
                                                                    ESP=SERVICIO] }
            { 1100217014;Label  ;8550 ;1692 ;1050 ;846  ;HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=[ENU=PAX;
                                                                    ESP=PAX] }
            { 1100217017;Shape  ;750  ;2538 ;17250;423  ;ShapeStyle=HorzLine }
            { 1100217018;Label  ;9900 ;1692 ;1800 ;846  ;VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=[ENU=SERVICE DATE;
                                                                    ESP=FECHA SERVICIO] }
            { 1100217020;Label  ;12000;1692 ;1800 ;846  ;HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=[ENU=AMOUNT;
                                                                    ESP=IMPORTE] }
            { 1100217022;Label  ;14100;1692 ;1800 ;846  ;HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=[ENU=+ PAYMENT;
                                                                    ESP=COBRO DE +] }
            { 1100217024;Label  ;16200;1692 ;1800 ;846  ;HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=[ENU=TOTAL;
                                                                    ESP=TOTAL] }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table2000000007;
        DataItemTableView=SORTING(Period Type,Period Start);
        DataItemVarName=diFechas;
        PrintOnlyIfDetail=Yes;
        OnPreDataItem=BEGIN
                        diFechas.SETRANGE("Period Type", diFechas."Period Type"::Date);
                        diFiltros.COPYFILTER("Fecha Venta", "Period Start");
                      END;

        OnAfterGetRecord=BEGIN
                           wAdultosDia  := 0;
                           wNi¤osDia    := 0;
                           wIngresoDia  := 0;
                           wCobroMasDia := 0;
                           wCobrosDia   := 0;
                           wTicketsDia  := 0;
                         END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=18000;
            SectionHeight=423;
          }
          CONTROLS
          {
            { 1100217013;TextBox;0    ;0    ;1500 ;423  ;HorzAlign=Left;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         SourceExpr="Period Start" }
          }
           }
        { PROPERTIES
          {
            SectionType=Footer;
            SectionWidth=18000;
            SectionHeight=846;
          }
          CONTROLS
          {
            { 1100217026;Shape  ;12000;0    ;6000 ;423  ;ShapeStyle=HorzLine }
            { 1100217039;Shape  ;8550 ;0    ;1050 ;423  ;ShapeStyle=HorzLine }
            { 1100217040;TextBox;4650 ;423  ;3750 ;423  ;HorzAlign=Left;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         SourceExpr=rGuia.Nombre }
            { 1100217041;TextBox;2700 ;423  ;1800 ;423  ;HorzAlign=Left;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         SourceExpr=rGuia.Codigo }
            { 1100217027;TextBox;16200;423  ;1800 ;423  ;FontSize=8;
                                                         SourceExpr=wCobrosGuia }
            { 1100217028;TextBox;14100;423  ;1800 ;423  ;FontSize=8;
                                                         SourceExpr=wCobroMasGuia }
            { 1100217029;TextBox;12000;423  ;1800 ;423  ;FontSize=8;
                                                         SourceExpr=wIngresoGuia }
            { 1100217037;TextBox;8550 ;423  ;1050 ;423  ;HorzAlign=Right;
                                                         FontSize=8;
                                                         SourceExpr=FORMAT(wAdultosGuia) + '.' + FORMAT(wNi¤osGuia) }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=2;
        DataItemTable=Table7010162;
        DataItemTableView=SORTING(Guia Venta,Fecha Venta,N§ Ticket)
                          WHERE(Anulada=CONST(No));
        DataItemVarName=diVentas;
        OnPreDataItem=BEGIN
                        diFiltros.COPYFILTER("Guia Venta"       , "Guia Venta");
                        diFiltros.COPYFILTER("N§ liquidacion GV", "N§ liquidacion GV");
                        diFiltros.COPYFILTER("Liquidado GV"     , "Liquidado GV");

                        SETFILTER("N§ Ticket"           , '<>%1', '');
                        SETRANGE ("Cobros con problemas", FALSE);
                        IF NOT wReimpresion THEN
                          SETRANGE(Reembolsada, FALSE);
                      END;

        OnAfterGetRecord=BEGIN
                           //. Comprobaciones
                           IF "Guia Venta" <> rGuia.Codigo THEN
                             ERROR(Text0001);

                           IF (Adultos = 0) AND (Ni¤os = 0) THEN
                             ERROR(Text0012, "N§ Ticket");

                           //. Si estamos imprimiendo una liquidacion que solo tenga tickets reembolsados
                           //. saltamos el dataitem de ventas normales
                           IF (GETFILTER("N§ liquidacion GV") = '') AND (wReimpresion) THEN
                             CurrReport.SKIP;

                           // Se supone que todas la reservas que estan en la misma liquidaci¢n
                           // tienen que tener la misma fecha de cambio.
                           TESTFIELD("Fecha cambio");
                           IF wFechaCambio = 0D THEN
                             wFechaCambio := "Fecha cambio";

                           IF wFechaCambio <> "Fecha cambio" THEN
                             ERROR(Text0003);

                           //. Acumulamos totales por dia
                           CALCFIELDS("Importe cobros");

                           wCobroMas := "Importe cobros" - "Ingreso reserva";

                           wAdultosDia  += Adultos;
                           wNi¤osDia    += Ni¤os;
                           wIngresoDia  += "Ingreso reserva";
                           wCobroMasDia += wCobroMas;
                           wCobrosDia   += "Importe cobros";
                           wTicketsDia  += 1;

                           _AcumulaCobros(diVentas, FALSE);
                         END;

        DataItemLink=Fecha Venta=FIELD(Period Start);
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=18000;
            SectionHeight=423;
          }
          CONTROLS
          {
            { 1100217010;TextBox;750  ;0    ;2250 ;423  ;HorzAlign=Left;
                                                         FontSize=8;
                                                         SourceExpr="N§ Ticket" }
            { 1100217012;TextBox;3300 ;0    ;4950 ;423  ;FontSize=8;
                                                         SourceExpr=cNom.nom_producto(Producto) }
            { 1100217016;TextBox;8550 ;0    ;1050 ;423  ;HorzAlign=Right;
                                                         FontSize=8;
                                                         SourceExpr=FORMAT(Adultos) + '.' + FORMAT(Ni¤os) }
            { 1100217019;TextBox;9900 ;0    ;1800 ;423  ;HorzAlign=Left;
                                                         FontSize=8;
                                                         SourceExpr="Fecha Excursion" }
            { 1100217021;TextBox;12000;0    ;1800 ;423  ;FontSize=8;
                                                         SourceExpr="Ingreso reserva" }
            { 1100217023;TextBox;14100;0    ;1800 ;423  ;FontSize=8;
                                                         SourceExpr=wCobroMas }
            { 1100217025;TextBox;16200;0    ;1800 ;423  ;FontSize=8;
                                                         SourceExpr="Importe cobros" }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=2;
        DataItemTable=Table7010266;
        DataItemTableView=SORTING(Guia Venta,Liquidado GV,N§ liquidacion GV);
        DataItemVarName=diReembolsos;
        OnPreDataItem=BEGIN
                        diFiltros.COPYFILTER("Guia Venta"       , "Guia Venta");
                        diFiltros.COPYFILTER("Liquidado GV"     , "Liquidado GV");
                        diFiltros.COPYFILTER("N§ liquidacion GV", "N§ liquidacion GV");
                      END;

        OnAfterGetRecord=BEGIN
                           rResRe.RESET;
                           IF rResRe.GET(Delegacion,"Num Reserva") THEN BEGIN
                             rTMPNoDeclara.SETRANGE("N§ Ticket", rResRe."N§ Ticket");
                             IF rTMPNoDeclara.FINDFIRST THEN
                               rTMPNoDeclara.DELETE;

                             CALCFIELDS("Importe Reembolsado");

                             wAduRe := - diReembolsos."Adultos Reembolsados";
                             wNiRe  := - diReembolsos."Ni¤os Reembolsados";
                             wImpRe := - "Importe Reembolsado";

                             wAdultosDia  += wAduRe;
                             wNi¤osDia    += wNiRe;
                             wIngresoDia  += wImpRe;
                             wTicketsDia  += 1;
                             wCobrosDia   += wImpRe;

                             _AcumulaCobrosReemb(diReembolsos, rResRe);
                           END;
                         END;

        DataItemLink=Fecha venta=FIELD(Period Start);
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=18000;
            SectionHeight=846;
          }
          CONTROLS
          {
            { 1000000000;Label  ;750  ;0    ;300  ;423  ;FontSize=8;
                                                         MultiLine=Yes;
                                                         CaptionML=[ENU=R;
                                                                    ESP=R] }
            { 1000000001;TextBox;1050 ;0    ;1950 ;423  ;HorzAlign=Left;
                                                         FontSize=8;
                                                         SourceExpr=rResRe."N§ Ticket" }
            { 1000000002;TextBox;3300 ;0    ;4950 ;423  ;FontSize=8;
                                                         SourceExpr=cNom.nom_producto(rResRe.Producto) }
            { 1000000003;TextBox;8550 ;0    ;1050 ;423  ;HorzAlign=Right;
                                                         FontSize=8;
                                                         SourceExpr=FORMAT(wAduRe) + '.' + FORMAT(wNiRe) }
            { 1000000004;TextBox;9900 ;0    ;1800 ;423  ;HorzAlign=Left;
                                                         FontSize=8;
                                                         SourceExpr=rResRe."Fecha Excursion" }
            { 1000000005;TextBox;12000;0    ;1800 ;423  ;FontSize=8;
                                                         SourceExpr=wImpRe }
            { 1000000007;TextBox;16200;0    ;1800 ;423  ;FontSize=8;
                                                         SourceExpr=wImpRe }
            { 1000000006;TextBox;1050 ;423  ;7200 ;423  ;FontSize=8;
                                                         SourceExpr=Comentario }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=2;
        DataItemTable=Table7010162;
        DataItemTableView=SORTING(Guia Venta,Fecha Venta,N§ Ticket)
                          WHERE(Anulada=CONST(Yes),
                                Reembolsada=CONST(No));
        DataItemVarName=diAnuladas;
        OnPreDataItem=BEGIN
                        diFiltros.COPYFILTER("Guia Venta"       , "Guia Venta");
                        diFiltros.COPYFILTER("N§ liquidacion GV", "N§ liquidacion GV");
                        diFiltros.COPYFILTER("Liquidado GV"     , "Liquidado GV");
                      END;

        OnAfterGetRecord=BEGIN
                           wTicketsDia  += 1;

                           rTMPNoDeclara.SETRANGE("N§ Ticket", "N§ Ticket");
                           IF rTMPNoDeclara.FINDFIRST THEN
                             rTMPNoDeclara.DELETE;
                         END;

        DataItemLink=Fecha Venta=FIELD(Period Start);
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=18000;
            SectionHeight=423;
          }
          CONTROLS
          {
            { 1100217049;Label  ;750  ;0    ;300  ;423  ;FontSize=8;
                                                         MultiLine=Yes;
                                                         CaptionML=[ENU=C;
                                                                    ESP=A] }
            { 1100217050;TextBox;1050 ;0    ;1950 ;423  ;HorzAlign=Left;
                                                         FontSize=8;
                                                         SourceExpr="N§ Ticket" }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=2;
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number);
        MaxIteration=1;
        DataItemVarName=diTotalDia;
        OnAfterGetRecord=BEGIN
                           IF wTicketsDia = 0 THEN
                             CurrReport.SKIP;

                           wAdultosGuia  += wAdultosDia;
                           wNi¤osGuia    += wNi¤osDia;
                           wIngresoGuia  += wIngresoDia;
                           wCobroMasGuia += wCobroMasDia;
                           wCobrosGuia   += wCobrosDia;
                         END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=18000;
            SectionHeight=846;
          }
          CONTROLS
          {
            { 1100217030;Shape  ;12000;0    ;6000 ;423  ;ShapeStyle=HorzLine }
            { 1100217031;TextBox;12000;423  ;1800 ;423  ;FontSize=8;
                                                         SourceExpr=wIngresoDia }
            { 1100217032;TextBox;14100;423  ;1800 ;423  ;FontSize=8;
                                                         SourceExpr=wCobroMasDia }
            { 1100217033;TextBox;16200;423  ;1800 ;423  ;FontSize=8;
                                                         SourceExpr=wCobrosDia }
            { 1100217034;TextBox;8550 ;423  ;1050 ;423  ;HorzAlign=Right;
                                                         FontSize=8;
                                                         SourceExpr=FORMAT(wAdultosDia) + '.' + FORMAT(wNi¤osDia) }
            { 1100217035;TextBox;6900 ;423  ;1500 ;423  ;HorzAlign=Left;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         SourceExpr=diFechas."Period Start" }
            { 1100217036;Shape  ;8550 ;0    ;1050 ;423  ;ShapeStyle=HorzLine }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number)
                          WHERE(Number=FILTER(>=1));
        DataItemVarName=diNoDeclarados;
        OnPreDataItem=BEGIN
                        CLEAR(rTMPNoDeclara);
                        rTMPNoDeclara.SETCURRENTKEY("Guia Venta", "N§ Ticket", "Liquidado GV", "N§ liquidacion GV", "N§ liquidacion GV reembolso");
                        wSig := rTMPNoDeclara.FINDSET;
                      END;

        OnAfterGetRecord=BEGIN
                           IF diNoDeclarados.Number > 1 THEN // Si no es el primero
                             wSig := rTMPNoDeclara.NEXT <> 0;

                           IF NOT wSig THEN
                             CurrReport.BREAK;

                           CLEAR(wTxtNoDecla);
                           IF INCSTR(rTMPNoDeclara."N§ Ticket") = rTMPNoDeclara."N§ Habitacion" THEN
                             wTxtNoDecla := rTMPNoDeclara."N§ Ticket"
                           ELSE
                             wTxtNoDecla := STRSUBSTNO('%1..%2', rTMPNoDeclara."N§ Ticket", rTMPNoDeclara."N§ Habitacion");
                         END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Header;
            SectionWidth=18000;
            SectionHeight=846;
          }
          CONTROLS
          {
            { 1100217063;Label  ;0    ;423  ;4050 ;423  ;VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=[ENU=NON DECLARED TICKETS;
                                                                    ESP=TICKETS NO DECLARADOS] }
          }
           }
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=18000;
            SectionHeight=423;
          }
          CONTROLS
          {
            { 1100217064;TextBox;0    ;0    ;9600 ;423  ;HorzAlign=Left;
                                                         FontSize=8;
                                                         SourceExpr=wTxtNoDecla }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number)
                          WHERE(Number=FILTER(>=1));
        DataItemVarName=diResumenCobros;
        OnPreDataItem=BEGIN
                        rTMPCobro.RESET;
                        wSig := rTMPCobro.FINDSET;

                        wTotalCobrosUSD := 0;
                      END;

        OnAfterGetRecord=BEGIN
                           IF Number > 1 THEN // Si no es el primero
                             wSig := rTMPCobro.NEXT <> 0;

                           IF NOT wSig THEN
                             CurrReport.BREAK
                           ELSE
                             wTotalCobrosUSD += rTMPCobro."Importe Divisa Reserva";
                         END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Header;
            SectionWidth=18000;
            SectionHeight=2115;
          }
          CONTROLS
          {
            { 1100217052;Shape  ;5400 ;1692 ;7950 ;423  ;ShapeStyle=HorzLine }
            { 1100217053;Label  ;7050 ;846  ;2100 ;846  ;VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=[ENU=PAYMENT METHOD;
                                                                    ESP=FORMA DE PAGO] }
            { 1100217054;Label  ;9450 ;846  ;1800 ;846  ;HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=[ENU=AMOUNT;
                                                                    ESP=IMPORTE] }
            { 1100217055;Label  ;11550;846  ;1800 ;846  ;HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=[ENU=DOLLARS;
                                                                    ESP=DOLARES] }
            { 1100217058;Label  ;5400 ;846  ;1350 ;846  ;VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=[ENU=CURRENCY;
                                                                    ESP=DIVISA] }
          }
           }
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=18000;
            SectionHeight=423;
          }
          CONTROLS
          {
            { 1100217056;TextBox;5400 ;0    ;1350 ;423  ;HorzAlign=Left;
                                                         FontSize=8;
                                                         SourceExpr=rTMPCobro."Cod. Divisa" }
            { 1100217057;TextBox;7050 ;0    ;2100 ;423  ;HorzAlign=Left;
                                                         FontSize=8;
                                                         SourceExpr=rTMPCobro."Forma de Pago" }
            { 1100217059;TextBox;9450 ;0    ;1800 ;423  ;FontSize=8;
                                                         SourceExpr=rTMPCobro."Importe Recibido" }
            { 1100217060;TextBox;11550;0    ;1800 ;423  ;FontSize=8;
                                                         SourceExpr=rTMPCobro."Importe Divisa Reserva" }
          }
           }
        { PROPERTIES
          {
            SectionType=Footer;
            SectionWidth=18000;
            SectionHeight=846;
          }
          CONTROLS
          {
            { 1100217051;Label  ;9450 ;423  ;1800 ;423  ;HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=[ENU=TOTAL;
                                                                    ESP=TOTAL] }
            { 1100217061;TextBox;11550;423  ;1800 ;423  ;FontSize=8;
                                                         SourceExpr=wTotalCobrosUSD }
            { 1100217062;Shape  ;11550;0    ;1800 ;423  ;ShapeStyle=HorzLine }
          }
           }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=9020;
      Height=3410;
    }
    CONTROLS
    {
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      CompanyInfo@1100217000 : Record 79;
      rGuia@1100217001 : Record 7010241;
      rTMPCobro@1100217018 : TEMPORARY Record 7010240;
      rTMPNoDeclara@1100217030 : TEMPORARY Record 7010162;
      rCobro@1100217019 : Record 7010240;
      rTalonario@1100217032 : Record 7010146;
      rLiquidacion@1100217034 : Record 7010178;
      cNom@1100217005 : Codeunit 7009702;
      cLiqGV@1100217022 : Codeunit 7010144;
      wFechaInicio@1100217002 : Date;
      wFechaFinal@1100217003 : Date;
      wFechaCambio@1100217027 : Date;
      wNumLiquidacion@1100217004 : Integer;
      wAdultosDia@1100217008 : Integer;
      wNi¤osDia@1100217007 : Integer;
      wTicketsDia@1100217012 : Integer;
      wAdultosGuia@1100217014 : Integer;
      wNi¤osGuia@1100217013 : Integer;
      wDetalleCobro@1100217021 : Integer;
      wCobroMas@1100217006 : Decimal;
      wIngresoDia@1100217009 : Decimal;
      wCobroMasDia@1100217010 : Decimal;
      wCobrosDia@1100217011 : Decimal;
      wIngresoGuia@1100217017 : Decimal;
      wCobroMasGuia@1100217016 : Decimal;
      wCobrosGuia@1100217015 : Decimal;
      wTotalCobrosUSD@1100217028 : Decimal;
      wSig@1100217020 : Boolean;
      wReimpresion@1100217023 : Boolean;
      Text0001@1100217026 : TextConst 'ENU=Must filter by only one excursions sale representative;ESP=Debe de filtrarse por un solo Representante de Excursiones';
      Text0003@1100217025 : TextConst 'ENU=All bookings must have the same date of change;ESP=Todas las reservas deben de tener la misma fecha de cambio.';
      Text0012@1100217024 : TextConst 'ENU=The ticket %1 has an error. You must indicate adults and/or childs.;ESP=El ticket %1 tiene un error. Debe indicar adultos y/o ni¤os.';
      wTxtNoDecla@1100217033 : Text[250];
      wAduRe@1000000000 : Decimal;
      wNiRe@1000000001 : Decimal;
      wImpRe@1000000002 : Decimal;
      rResRe@1000000003 : Record 7010162;

    LOCAL PROCEDURE _AcumulaCobros@1100217001(prRsv@1100217000 : Record 7010162;pwReembolso@1100217001 : Boolean);
    BEGIN
      rCobro.RESET;
      rCobro.SETRANGE(Delegacion   , prRsv.Delegacion);
      rCobro.SETRANGE("Num Reserva", prRsv."N§ Reserva");
      IF rCobro.FINDSET THEN
      BEGIN
        REPEAT
          rTMPCobro.SETRANGE("Forma de Pago", rCobro."Forma de Pago");
          rTMPCobro.SETRANGE("Cod. Divisa"  , rCobro."Cod. Divisa");
          IF NOT rTMPCobro.FINDFIRST THEN
          BEGIN
            wDetalleCobro += 1;

            CLEAR(rTMPCobro);
            rTMPCobro."Forma de Pago"      := rCobro."Forma de Pago";
            rTMPCobro."Cod. Divisa"        := rCobro."Cod. Divisa";
            rTMPCobro."ID Cobro"           := wDetalleCobro;
            rTMPCobro."Fecha cambio cobro" := rCobro."Fecha cambio cobro";
            rTMPCobro.INSERT;
          END;
          IF pwReembolso THEN
          BEGIN
            rTMPCobro."Importe Recibido"       -= rCobro."Importe Recibido";
            rTMPCobro."Importe Divisa Reserva" -= rCobro."Importe Divisa Reserva";
          END
          ELSE
          BEGIN
            rTMPCobro."Importe Recibido"       += rCobro."Importe Recibido";
            rTMPCobro."Importe Divisa Reserva" += rCobro."Importe Divisa Reserva";
          END;
          rTMPCobro.MODIFY;
        UNTIL rCobro.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE _AcumulaCobrosReemb@1000000000(prReemb@1100217000 : Record 7010266;prRes@1000000001 : Record 7010162);
    VAR
      rCobroReemb@1000000000 : Record 7010267;
    BEGIN
      rCobroReemb.RESET;
      rCobroReemb.SETRANGE(Delegacion    , prReemb.Delegacion);
      rCobroReemb.SETRANGE("Num Reserva" , prReemb."Num Reserva");
      rCobroReemb.SETRANGE("Id Reembolso", prReemb."ID Reembolso");
      IF rCobroReemb.FINDSET THEN
      BEGIN
        REPEAT
          rTMPCobro.SETRANGE("Forma de Pago", rCobroReemb."Forma de Pago");
          rTMPCobro.SETRANGE("Cod. Divisa"  , rCobroReemb."Cod. Divisa");
          IF NOT rTMPCobro.FINDFIRST THEN
          BEGIN
            wDetalleCobro += 1;

            CLEAR(rTMPCobro);
            rTMPCobro."Forma de Pago"      := rCobroReemb."Forma de Pago";
            rTMPCobro."Cod. Divisa"        := rCobroReemb."Cod. Divisa";
            rTMPCobro."ID Cobro"           := wDetalleCobro;
            rTMPCobro."Fecha cambio cobro" := prRes."Fecha cambio";
            rTMPCobro.INSERT;
          END;
          rTMPCobro."Importe Recibido"       -= rCobroReemb.Importe;
          rTMPCobro."Importe Divisa Reserva" -= rCobroReemb."Importe Divisa Reserva";
          rTMPCobro.MODIFY;
        UNTIL rCobroReemb.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE _BuscaSaltos@1100217000();
    VAR
      lrRsv@1100217000 : Record 7010162;
      lrRsvAux@1100217003 : Record 7010162;
      lwNoTicketAnt@1100217001 : Code[10];
      lwNoTicket@1100217002 : Code[10];
    BEGIN
      // BuscaSaltos

      //. Recorremos los tickets para ver si se ha producido un salto de numeraci¢n

      lrRsv.RESET;
      lrRsv.SETCURRENTKEY("N§ Ticket");
      lrRsv.SETFILTER("N§ Ticket"           , '<>%1', '');
      lrRsv.SETRANGE ("Cobros con problemas", FALSE);

      diFiltros.COPYFILTER("Guia Venta"       , lrRsv."Guia Venta");
      diFiltros.COPYFILTER("N§ liquidacion GV", lrRsv."N§ liquidacion GV");
      diFiltros.COPYFILTER("Liquidado GV"     , lrRsv."Liquidado GV");
      diFiltros.COPYFILTER("Fecha Venta"      , lrRsv."Fecha Venta");

      //-$003lwNoTicketAnt := rGuia."Ultimo Ticket Liquidado";
      CLEAR(lwNoTicketAnt); //+$003

      IF lrRsv.FINDSET(TRUE) THEN
      BEGIN
        lrRsvAux.RESET;
        lrRsvAux.SETCURRENTKEY("N§ Ticket");
        REPEAT
          IF lwNoTicketAnt <> '' THEN //+$003
          BEGIN
            lwNoTicket := INCSTR(lwNoTicketAnt);
            IF lwNoTicket <> lrRsv."N§ Ticket" THEN
            BEGIN
              lrRsvAux.SETRANGE("N§ Ticket", lwNoTicket);
              IF NOT lrRsvAux.FINDSET THEN
              BEGIN
                rTalonario.RESET;
                rTalonario.SETRANGE ("Guia Venta"       , lrRsv."Guia Venta");
                rTalonario.SETFILTER("N§ Ticket inicial", '<=%1', lwNoTicket);
                rTalonario.SETFILTER("N§ Ticket final"  , '>=%1', lwNoTicket);
                IF rTalonario.FINDFIRST THEN
                BEGIN
                  rTMPNoDeclara := lrRsv;
                  rTMPNoDeclara."N§ Ticket"     := lwNoTicket;
                  rTMPNoDeclara."N§ Habitacion" := lrRsv."N§ Ticket";
                  rTMPNoDeclara.INSERT;
                END;
              END;
            END;
          END;

          lwNoTicketAnt := lrRsv."N§ Ticket";
        UNTIL lrRsv.NEXT = 0;
      END;
    END;

    BEGIN
    {
      $001 AJS 22052014 Nueva funcion _BuscaSaltos para detectar los saltos de numeracion

      $002 AJS 12082014 Mostrar el texto de comentario en los reembolsos

      $003 AJS 06102014 Corrijo error en el control de saltos de numeracion

      $004 AJS 12122014 Vuelvo a poner para que los reembolsos salgan por fecha de venta original
    }
    END.
  }
  RDLDATA
  {
  }
}
