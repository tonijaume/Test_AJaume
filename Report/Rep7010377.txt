OBJECT Report 7010377 Estad. Conductor Comp.
{
  OBJECT-PROPERTIES
  {
    Date=16/10/09;
    Time=12:34:35;
    Version List=TRANSFER,INV;
  }
  PROPERTIES
  {
    CaptionML=ESP=Estad. Conductor Comp.;
    ShowPrintStatus=Yes;
    UseReqForm=Yes;
    TopMargin=1000;
    BottomMargin=1000;
    LeftMargin=1000;
    RightMargin=400;
    Orientation=Landscape;
  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number);
        MaxIteration=1;
        DataItemVarName=Cab1;
        OnPreDataItem=BEGIN
                        rParametros.FINDFIRST;
                        IF  (wFiltroFecha[1]='') AND  (wFiltroFecha[2]='') THEN
                          ERROR(ERROR2);
                        wImpresoTotal := FALSE;

                        //Para el titulo del HEADER.
                        vSelecCond := FALSE;
                        IF vConductores = vConductores::"Seg£n Selecci¢n" THEN
                          vSelecCond := TRUE;
                        //.....
                      END;

        OnAfterGetRecord=BEGIN
                           vMostrarTotalGeneral := FALSE;

                           IF vGarajeResult = rParametros."Todos los garajes" THEN
                             vGarajeResult := '';

                           vCodEntrada := rParametros."Codigo Entradas";
                           IF vCodEntrada = '' THEN
                             ERROR(ERROR1);
                         END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Header;
            PrintOnEveryPage=Yes;
            SectionWidth=28050;
            SectionHeight=3807;
          }
          CONTROLS
          {
            { 111 ;Shape        ;14400;2538 ;12150;846   }
            { 1   ;Label        ;20850;0    ;7200 ;423  ;HorzAlign=Right;
                                                         FontSize=9;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=Estadisticas Conductores Comparadas }
            { 3   ;TextBox      ;0    ;0    ;7500 ;423  ;HorzAlign=Left;
                                                         FontSize=9;
                                                         FontBold=Yes;
                                                         SourceExpr=COMPANYNAME }
            { 14  ;Label        ;0    ;1692 ;28050;423  ;CaptionML=ESP=____________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ }
            { 36  ;Label        ;0    ;423  ;3000 ;423  ;VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=ESP=Periodo Actual }
            { 38  ;TextBox      ;3150 ;423  ;3300 ;423  ;SourceExpr=wFiltroFecha[1] }
            { 50  ;Label        ;6600 ;423  ;150  ;423  ;CaptionML=ESP=/ }
            { 91  ;Label        ;6600 ;846  ;150  ;423  ;CaptionML=ESP=/ }
            { 194 ;Label        ;6900 ;423  ;5100 ;423  ;VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=ESP=Garaje a considerar en resultados }
            { 195 ;TextBox      ;12150;423  ;2850 ;423  ;VertAlign=Bottom;
                                                         SourceExpr=vFltGarajeResult }
            { 109 ;TextBox      ;3150 ;846  ;3300 ;423  ;SourceExpr=wFiltroFecha[2] }
            { 110 ;Label        ;0    ;846  ;3000 ;423  ;VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=ESP=Periodo Anterior }
            { 21  ;Label        ;0    ;2961 ;1650 ;846  ;HorzAlign=Left;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=ESP=Conductor }
            { 33  ;Label        ;1800 ;2538 ;12150;423  ;HorzAlign=Center;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=Pax Facturados }
            { 34  ;Label        ;1800 ;3384 ;1350 ;423  ;HorzAlign=Right;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=P. Act. }
            { 101 ;Label        ;8100 ;2961 ;5850 ;423  ;HorzAlign=Center;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=Acumulados }
            { 22  ;Label        ;3300 ;3384 ;1350 ;423  ;HorzAlign=Right;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=P. Ant. }
            { 29  ;Label        ;8100 ;3384 ;1350 ;423  ;HorzAlign=Right;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=P. Act. }
            { 31  ;Label        ;9600 ;3384 ;1350 ;423  ;HorzAlign=Right;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=P. Ant. }
            { 10  ;Label        ;4800 ;3384 ;1500 ;423  ;HorzAlign=Right;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=Dif. }
            { 16  ;Label        ;11100;3384 ;1500 ;423  ;HorzAlign=Right;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=Dif. }
            { 24  ;Label        ;6450 ;3384 ;1200 ;423  ;HorzAlign=Right;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=% Dif. }
            { 25  ;Label        ;12750;3384 ;1200 ;423  ;HorzAlign=Right;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=% Dif. }
            { 11  ;Label        ;25350;3384 ;1200 ;423  ;HorzAlign=Right;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=% Dif. }
            { 18  ;Label        ;23700;3384 ;1500 ;423  ;HorzAlign=Right;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=Dif. }
            { 20  ;Label        ;20700;2961 ;5850 ;423  ;HorzAlign=Center;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=Acumulados }
            { 37  ;Label        ;22200;3384 ;1350 ;423  ;HorzAlign=Right;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=P. Ant. }
            { 39  ;Label        ;20700;3384 ;1350 ;423  ;HorzAlign=Right;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=P. Act. }
            { 40  ;Label        ;19050;3384 ;1200 ;423  ;HorzAlign=Right;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=% Dif. }
            { 41  ;Label        ;17400;3384 ;1500 ;423  ;HorzAlign=Right;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=Dif. }
            { 42  ;Label        ;14400;2538 ;12150;423  ;HorzAlign=Center;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=N§ Viajes }
            { 43  ;Label        ;15900;3384 ;1350 ;423  ;HorzAlign=Right;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=P. Ant. }
            { 44  ;Label        ;14400;3384 ;1350 ;423  ;HorzAlign=Right;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=P. Act. }
            { 97  ;TextBox      ;12150;846  ;2850 ;440  ;SourceExpr=vTipoConductor }
            { 98  ;Label        ;6900 ;846  ;5100 ;440  ;ParentControl=97;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=Selecci¢n Tipo Conductor }
            { 99  ;TextBox      ;3150 ;1269 ;3300 ;440  ;SourceExpr=vTipoAcuerdo;
                                                         TableRelation="Tipo Acuerdo Conductor"."Tipo Acuerdo" }
            { 100 ;Label        ;0    ;1269 ;3000 ;440  ;FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=Tipo Acuerdo }
            { 103 ;Label        ;6900 ;1269 ;5100 ;440  ;FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=S¢lo conductores con actividad }
            { 104 ;Label        ;15450;1269 ;3450 ;440  ;FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=Visualizar bloqueados }
            { 105 ;Label        ;6600 ;1269 ;150  ;423  ;CaptionML=ESP=/ }
            { 106 ;TextBox      ;12150;1269 ;2850 ;423  ;SourceExpr=vSoloConActividad }
            { 107 ;TextBox      ;19050;1269 ;2850 ;423  ;SourceExpr=vVerBloqueados }
            { 102 ;Shape        ;1800 ;2538 ;12150;846   }
            { 112 ;Shape        ;8100 ;2961 ;5850 ;423   }
            { 115 ;Shape        ;20700;2961 ;5850 ;423   }
            { 116 ;Shape        ;1800 ;2961 ;5850 ;423   }
            { 120 ;Label        ;1800 ;2961 ;5850 ;423  ;HorzAlign=Center;
                                                         VertAlign=Center;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=ESP=Periodos }
            { 121 ;Label        ;14400;2961 ;5850 ;423  ;HorzAlign=Center;
                                                         VertAlign=Center;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=ESP=Periodos }
            { 122 ;Shape        ;14400;2961 ;5850 ;423   }
            { 144 ;TextBox      ;19050;846  ;2850 ;423  ;SourceExpr=vGrupoVehiculo }
            { 145 ;Label        ;15450;846  ;3450 ;423  ;FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=Grupo Vehiculo }
            { 146 ;TextBox      ;19050;423  ;600  ;423  ;SourceExpr=vSelecCond }
            { 147 ;Label        ;15450;423  ;3450 ;423  ;FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=Selecci¢n Conductores }
            { 148 ;Label        ;15150;423  ;150  ;423  ;CaptionML=ESP=/ }
            { 149 ;Label        ;15150;846  ;150  ;423  ;CaptionML=ESP=/ }
            { 150 ;Label        ;15150;1269 ;150  ;423  ;CaptionML=ESP=/ }
          }
           }
        { PROPERTIES
          {
            SectionType=Header;
            PrintOnEveryPage=Yes;
            SectionWidth=28050;
            SectionHeight=1269;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT(wImpresoTotal);
                         END;

          }
          CONTROLS
          {
            { 77  ;Label        ;0    ;423  ;3600 ;423  ;FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=T O T A L E S }
            { 78  ;Label        ;0    ;846  ;28050;423  ;CaptionML=ESP=____________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ }
            { 87  ;Label        ;0    ;0    ;28050;423  ;CaptionML=ESP=____________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ }
          }
           }
        { PROPERTIES
          {
            SectionType=Footer;
            PrintOnEveryPage=Yes;
            PlaceInBottom=Yes;
            SectionWidth=28050;
            SectionHeight=863;
          }
          CONTROLS
          {
            { 119 ;TextBox      ;21450;423  ;4500 ;423  ;HorzAlign=Center;
                                                         SourceExpr=FORMAT(TODAY,0,4) + '-' + USERID }
            { 127 ;TextBox      ;27450;423  ;600  ;423  ;CaptionML=ESP=P gina;
                                                         SourceExpr=CurrReport.PAGENO }
            { 128 ;Label        ;26400;423  ;900  ;423  ;ParentControl=127 }
            { 129 ;Shape        ;0    ;0    ;28050;423  ;ShapeStyle=HorzLine }
            { 108 ;TextBox      ;3150 ;423  ;17700;440  ;SourceExpr=Conductores.GETFILTERS }
            { 151 ;Label        ;0    ;423  ;3000 ;440  ;FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=Filtro Conductor }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table7010327;
        DataItemTableView=SORTING(Garaje,Nombre,Apellidos);
        DataItemVarName=Conductores;
        OnPreDataItem=BEGIN

                        IF (vGarajeResult<>'') AND (vGarajeResult<>rParametros."Todos los garajes") THEN
                          SETRANGE(Garaje,vGarajeResult);

                        IF GETFILTER("Tipo Acuerdo")='' THEN
                          SETCURRENTKEY(Garaje,"Tipo Acuerdo","Nombre Abreviado");

                        CASE vTipoConductor OF
                          vTipoConductor::Propios : SETRANGE(Externo,FALSE);
                          vTipoConductor::Externos: SETRANGE(Externo,TRUE)
                        END;

                        IF NOT vVerBloqueados THEN
                          SETRANGE(Bloqueado,FALSE);

                        IF vTipoAcuerdo <> '' THEN
                          SETRANGE("Tipo Acuerdo",vTipoAcuerdo);

                        IF vGrupoVehiculo <> '' THEN
                          SETRANGE("Grupo Vehiculo",vGrupoVehiculo);

                        wTotal := COUNT;
                        wCont  := 0;
                        wVentana1.OPEN(Text50000);
                      END;

        OnAfterGetRecord=VAR
                           rSel@1103350000 : Record 7035378;
                           rCond@1103350001 : Record 7010327;
                           vFinPer1@1103350002 : Date;
                           vFinPer2@1103350003 : Date;
                         BEGIN
                           wCont +=1;
                           wVentana1.UPDATE(1, ROUND(((wCont/wTotal ) * 10000),1));

                           IF vConductores = vConductores::"Seg£n Selecci¢n" THEN
                             IF rSel.GET(USERID,Conductor) THEN
                               IF NOT rSel.Seleccion THEN
                                 CurrReport.SKIP;

                           //RRT.240902.
                           IF vSoloConActividad THEN BEGIN
                             vFinPer1 := ObtenerFinalPeriodo(wFiltroFecha[1]);
                             vFinPer2 := ObtenerFinalPeriodo(wFiltroFecha[2]);

                             rCond.RESET;
                             rCond := Conductores;
                             rCond.COPYFILTERS(Conductores);
                             rCond.SETFILTER("Filtro Fechas",'%1..%2|%3..%4',wIniAcum[1],vFinPer1,wIniAcum[2],vFinPer2);
                             rCond.SETRANGE("Filtro Tipo Servicio");
                             rCond.SETCURRENTKEY(Garaje,Nombre,Apellidos);

                             rCond.CALCFIELDS("N§ Viajes (Estadist)");
                             IF rCond."N§ Viajes (Estadist)" <= 0 THEN
                               CurrReport.SKIP;
                           END;
                           //END.RRT.
                         END;

        OnPostDataItem=BEGIN
                         wVentana1.CLOSE;
                       END;

        ReqFilterFields=Conductor,Nombre Abreviado,Garaje;
        GroupTotalFields=Garaje;
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=28050;
            SectionHeight=423;
          }
          CONTROLS
          {
            { 7   ;TextBox      ;0    ;0    ;6750 ;423  ;FontSize=8;
                                                         FontBold=Yes;
                                                         SourceExpr=NombreCond }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=2;
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number)
                          ORDER(Ascending);
        MaxIteration=1;
        DataItemVarName=Cab2;
      }
      SECTIONS
      {
      }
       }
    { PROPERTIES
      {
        DataItemIndent=3;
        DataItemTable=Table7010319;
        DataItemTableView=SORTING(Orden Listado)
                          ORDER(Ascending);
        DataItemVarName=Tipo Servicio;
        OnPreDataItem=BEGIN
                        ContaTS := 1;
                        //Inicializar las matrices que tienen el valor TOTAL para cada vehiculo.

                        vTextoNormal:='$$';
                        CurrReport.CREATETOTALS(wPaxTrans,wViajes);
                      END;

        OnAfterGetRecord=VAR
                           vMesViajes@1103350000 : Decimal;
                           vMesPaxTrans@1103350001 : Decimal;
                           vMesCliEntrados@1103350002 : Decimal;
                           vMesCantFact@1103350003 : Decimal;
                           vMesPaxFact@1103350004 : Decimal;
                           vAcuViajes@1103350005 : Decimal;
                           vAcuPaxTrans@1103350006 : Decimal;
                           vAcuCliEntrados@1103350007 : Decimal;
                           vAcuCantFact@1103350008 : Decimal;
                           vAcuPaxFact@1103350009 : Decimal;
                           ERROR_INCONSISTENCIA@1103350011 : TextConst 'ESP=Inconsitencia detectada en la selecci¢n de vehiculos';
                           cFunBas@1103350012 : Codeunit 7010310;
                         BEGIN
                           // Realiza los distintos calculos de:
                           CLEAR(wPaxTrans);
                           CLEAR(wViajes);

                           // Periodo1
                           Calcula(Conductores,"Tipo Servicio".Codigo,1);
                           // Periodo2
                           Calcula(Conductores,"Tipo Servicio".Codigo,2);

                           CalcDif;
                         END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=28050;
            SectionHeight=423;
            OnPreSection=BEGIN
                           //CurrReport.SHOWOUTPUT(vMostrarTTOO);
                           vPrimerTexto := FALSE;
                         END;

          }
          CONTROLS
          {
            { 113 ;TextBox      ;1800 ;0    ;1350 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=wPaxTrans[1,1] }
            { 114 ;TextBox      ;8100 ;0    ;1350 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=wPaxTrans[1,2] }
            { 117 ;TextBox      ;9600 ;0    ;1350 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=wPaxTrans[2,2] }
            { 118 ;TextBox      ;3300 ;0    ;1350 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=wPaxTrans[2,1] }
            { 35  ;TextBox      ;26700;0    ;1350 ;423  ;SourceExpr=Codigo }
            { 12  ;TextBox      ;4800 ;0    ;1500 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=wDiferencia[1,1] }
            { 19  ;TextBox      ;11100;0    ;1500 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=wDiferencia[2,1] }
            { 26  ;TextBox      ;6450 ;0    ;1200 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=ROUND("w%Dif"[1,1],0.01) }
            { 27  ;TextBox      ;12750;0    ;1200 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=ROUND("w%Dif"[2,1],0.01) }
            { 54  ;TextBox      ;25350;0    ;1200 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=ROUND("w%Dif"[2,2],0.01) }
            { 55  ;TextBox      ;14400;0    ;1350 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=wViajes[1,1] }
            { 63  ;TextBox      ;15900;0    ;1350 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=wViajes[2,1] }
            { 65  ;TextBox      ;17400;0    ;1500 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=wDiferencia[1,2] }
            { 66  ;TextBox      ;19050;0    ;1200 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=ROUND("w%Dif"[1,2],0.01) }
            { 67  ;TextBox      ;20700;0    ;1350 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=wViajes[1,2] }
            { 68  ;TextBox      ;22200;0    ;1350 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=wViajes[2,2] }
            { 69  ;TextBox      ;23700;0    ;1500 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=wDiferencia[2,2] }
          }
           }
        { PROPERTIES
          {
            SectionType=Footer;
            SectionWidth=28050;
            SectionHeight=423;
            OnPreSection=BEGIN
                           CalcDif;
                         END;

          }
          CONTROLS
          {
            { 123 ;TextBox      ;9600 ;0    ;1350 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=wPaxTrans[2,2] }
            { 124 ;TextBox      ;8100 ;0    ;1350 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=wPaxTrans[1,2] }
            { 125 ;TextBox      ;3300 ;0    ;1350 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=wPaxTrans[2,1] }
            { 126 ;TextBox      ;1800 ;0    ;1350 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=wPaxTrans[1,1] }
            { 32  ;Label        ;26700;0    ;1350 ;423  ;CaptionML=ESP=TOTAL }
            { 15  ;TextBox      ;4800 ;0    ;1500 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=wDiferencia[1,1] }
            { 23  ;TextBox      ;11100;0    ;1500 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=wDiferencia[2,1] }
            { 28  ;TextBox      ;6450 ;0    ;1200 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=ROUND("w%Dif"[1,1],0.01) }
            { 30  ;TextBox      ;12750;0    ;1200 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=ROUND("w%Dif"[2,1],0.01) }
            { 45  ;TextBox      ;25350;0    ;1200 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=ROUND("w%Dif"[2,2],0.01) }
            { 46  ;TextBox      ;23700;0    ;1500 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=wDiferencia[2,2] }
            { 47  ;TextBox      ;22200;0    ;1350 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=wViajes[2,2] }
            { 48  ;TextBox      ;20700;0    ;1350 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=wViajes[1,2] }
            { 49  ;TextBox      ;19050;0    ;1200 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=ROUND("w%Dif"[1,2],0.01) }
            { 51  ;TextBox      ;17400;0    ;1500 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=wDiferencia[1,2] }
            { 52  ;TextBox      ;15900;0    ;1350 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=wViajes[2,1] }
            { 53  ;TextBox      ;14400;0    ;1350 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=wViajes[1,1] }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=2;
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number)
                          WHERE(Number=FILTER(>0));
        MaxIteration=5;
        DataItemVarName=Totaliza;
        OnPreDataItem=VAR
                        rSel@1103350000 : Record 7035378;
                        vTrobat@1103350001 : Boolean;
                      BEGIN
                        //Las agrupaciones generales, se ver n en una nueva p gina.
                        //IF vAgrupacionGeneral THEN
                        //  CurrReport.NEWPAGE;

                        //IF Conductor.GETFILTER(Externo) <> '' THEN
                        //  SETRANGE(N£mero,4);

                        rCond2.RESET;
                        rCond2.COPY(Conductores);
                        wResult := rCond2.NEXT;

                        //Tendremos en cuenta la posible selecci¢n de conductores.
                        vTrobat:= FALSE;
                        IF (vConductores=vConductores::"Seg£n Selecci¢n") AND (wResult>0) THEN BEGIN
                          rSel.RESET;
                          REPEAT
                            IF rSel.GET(USERID,rCond2.Conductor) THEN
                              IF rSel.Seleccion THEN
                                vTrobat := TRUE
                              ELSE
                                wResult := rCond2.NEXT;
                          UNTIL vTrobat OR (wResult=0);
                        END;
                      END;

        OnAfterGetRecord=VAR
                           rSel@1103350000 : Record 7035378;
                         BEGIN
                           // Seg£n lo que totalice
                           //IF NOT vAgrupacionGeneral THEN
                           //  CurrReport.SKIP;

                           IF vConductores = vConductores::"Seg£n Selecci¢n" THEN
                             IF rSel.GET(USERID,Conductores.Conductor) THEN
                               IF NOT rSel.Seleccion THEN
                                 CurrReport.SKIP;

                           IF wResult <> 0 THEN BEGIN
                             IF ((Number=1) AND (Conductores."Tipo Acuerdo" = rCond2."Tipo Acuerdo")) OR
                             ((Number=2) AND (Conductores.Garaje = rCond2.Garaje)) OR
                             (Number>2) THEN
                               CurrReport.SKIP;
                           END;

                           IF ((Number=3) OR (Number=4)) AND (Conductores.GETFILTER(Externo) <> '') OR
                             ((Number=1) AND (Conductores.GETFILTER("Tipo Acuerdo") <> ''))  OR
                             ((Number=2) AND (Conductores.GETFILTER(Garaje) <> '')) THEN
                               CurrReport.SKIP;

                           IF (Number>2) AND (wImpresoTotal = FALSE) THEN BEGIN
                             wImpresoTotal := TRUE;
                             CurrReport.NEWPAGE;
                           END;


                           CASE Number OF
                             1:vTextoTotal := Text50001 + Conductores."Tipo Acuerdo";
                             2:vTextoTotal := Text50002 + Conductores.Garaje;
                             3:vTextoTotal := Text50003;
                             4:vTextoTotal := Text50004;
                             5:vTextoTotal := '';
                           END;
                         END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Header;
            SectionWidth=28050;
            SectionHeight=1269;
          }
          CONTROLS
          {
            { 2   ;Label        ;0    ;0    ;28050;423  ;CaptionML=ESP=____________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ }
            { 5   ;Label        ;1800 ;423  ;1350 ;423  ;HorzAlign=Center;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=---------------------- }
            { 6   ;Label        ;3300 ;423  ;1350 ;423  ;HorzAlign=Center;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=------------------------- }
            { 130 ;Label        ;4800 ;423  ;1500 ;423  ;HorzAlign=Center;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=------------- }
            { 131 ;Label        ;6450 ;423  ;1200 ;423  ;HorzAlign=Center;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=------------- }
            { 132 ;Label        ;8100 ;423  ;1350 ;423  ;HorzAlign=Center;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=------------- }
            { 133 ;Label        ;9600 ;423  ;1350 ;423  ;HorzAlign=Center;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=------------- }
            { 134 ;Label        ;11100;423  ;1500 ;423  ;HorzAlign=Center;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=------------- }
            { 135 ;Label        ;12750;423  ;1200 ;423  ;HorzAlign=Center;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=------------- }
            { 136 ;Label        ;14400;423  ;1350 ;423  ;HorzAlign=Center;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=------------- }
            { 137 ;Label        ;15900;423  ;1350 ;423  ;HorzAlign=Center;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=------------- }
            { 138 ;Label        ;17400;423  ;1500 ;423  ;HorzAlign=Center;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=------------- }
            { 139 ;Label        ;19050;423  ;1200 ;423  ;HorzAlign=Center;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=------------- }
            { 140 ;Label        ;20700;423  ;1350 ;423  ;HorzAlign=Center;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=------------- }
            { 141 ;Label        ;22200;423  ;1350 ;423  ;HorzAlign=Center;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=------------- }
            { 142 ;Label        ;23700;423  ;1500 ;423  ;HorzAlign=Center;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=------------- }
            { 143 ;Label        ;25350;423  ;1200 ;423  ;HorzAlign=Center;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=------------- }
          }
           }
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=28050;
            SectionHeight=846;
          }
          CONTROLS
          {
            { 85  ;TextBox      ;1050 ;423  ;3900 ;423  ;FontSize=8;
                                                         FontBold=Yes;
                                                         SourceExpr=vTextoTotal }
            { 4   ;Label        ;0    ;423  ;1050 ;423  ;FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=Total }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=3;
        DataItemTable=Table7010319;
        DataItemTableView=SORTING(Orden Listado)
                          ORDER(Ascending);
        DataItemVarName=TipoServicio4;
        OnPreDataItem=VAR
                        rVehiculo@1103350000 : Record 7010346;
                      BEGIN
                        ContaTS := 1;
                        CurrReport.CREATETOTALS(wPaxTrans,wViajes);
                      END;

        OnAfterGetRecord=VAR
                           lrCondt@1103350000 : Record 7010327;
                         BEGIN

                           //IF NOT vAgrupacionGeneral THEN
                           //  CurrReport.SKIP;

                           lrCondt.COPY(Conductores);

                           CASE Totaliza.Number OF
                             1:BEGIN
                                 lrCondt.SETRANGE("Tipo Acuerdo",Conductores."Tipo Acuerdo");
                               END;
                             2:BEGIN
                                 lrCondt.SETRANGE(Garaje,Conductores.Garaje);
                               END;
                             3:BEGIN
                                 lrCondt.SETRANGE(Externo,FALSE);
                               END;
                             4:BEGIN
                                 lrCondt.SETRANGE(Externo,TRUE);
                               END;
                             5:BEGIN
                                //lrCondt.SETRANGE(Externo);
                               END;
                           END;

                           // Realiza los distintos calculos de:
                           CLEAR(wPaxTrans);
                           CLEAR(wViajes);
                           // Periodo1
                           CalculaTotal(lrCondt,TipoServicio4.Codigo,1);
                           // Periodo2
                           CalculaTotal(lrCondt,TipoServicio4.Codigo,2);

                           CalcDif;
                         END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=28050;
            SectionHeight=423;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT(vAgrupacionGeneral);
                           vPrimerTexto := FALSE;
                         END;

          }
          CONTROLS
          {
            { 84  ;TextBox      ;26700;0    ;1350 ;423  ;SourceExpr=Codigo }
            { 8   ;TextBox      ;12750;0    ;1200 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=ROUND("w%Dif"[2,1],0.01) }
            { 9   ;TextBox      ;11100;0    ;1500 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=wDiferencia[2,1] }
            { 13  ;TextBox      ;9600 ;0    ;1350 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=wPaxTrans[2,2] }
            { 17  ;TextBox      ;8100 ;0    ;1350 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=wPaxTrans[1,2] }
            { 56  ;TextBox      ;6450 ;0    ;1200 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=ROUND("w%Dif"[1,1],0.01) }
            { 57  ;TextBox      ;4800 ;0    ;1500 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=wDiferencia[1,1] }
            { 58  ;TextBox      ;3300 ;0    ;1350 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=wPaxTrans[2,1] }
            { 59  ;TextBox      ;1800 ;0    ;1350 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=wPaxTrans[1,1] }
            { 70  ;TextBox      ;25350;0    ;1200 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=ROUND("w%Dif"[2,2],0.01) }
            { 72  ;TextBox      ;14400;0    ;1350 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=wViajes[1,1] }
            { 73  ;TextBox      ;15900;0    ;1350 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=wViajes[2,1] }
            { 79  ;TextBox      ;17400;0    ;1500 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=wDiferencia[1,2] }
            { 80  ;TextBox      ;19050;0    ;1200 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=ROUND("w%Dif"[1,2],0.01) }
            { 81  ;TextBox      ;20700;0    ;1350 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=wViajes[1,2] }
            { 82  ;TextBox      ;22200;0    ;1350 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=wViajes[2,2] }
            { 83  ;TextBox      ;23700;0    ;1500 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=wDiferencia[2,2] }
          }
           }
        { PROPERTIES
          {
            SectionType=Footer;
            SectionWidth=28050;
            SectionHeight=423;
            OnPreSection=BEGIN
                           CalcDif;
                         END;

          }
          CONTROLS
          {
            { 92  ;Label        ;26700;0    ;1350 ;423  ;CaptionML=ESP=TOTAL }
            { 60  ;TextBox      ;12750;0    ;1200 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=ROUND("w%Dif"[2,1],0.01) }
            { 61  ;TextBox      ;11100;0    ;1500 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=wDiferencia[2,1] }
            { 62  ;TextBox      ;9600 ;0    ;1350 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=wPaxTrans[2,2] }
            { 64  ;TextBox      ;8100 ;0    ;1350 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=wPaxTrans[1,2] }
            { 71  ;TextBox      ;6450 ;0    ;1200 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=ROUND("w%Dif"[1,1],0.01) }
            { 74  ;TextBox      ;4800 ;0    ;1500 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=wDiferencia[1,1] }
            { 75  ;TextBox      ;3300 ;0    ;1350 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=wPaxTrans[2,1] }
            { 76  ;TextBox      ;1800 ;0    ;1350 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=wPaxTrans[1,1] }
            { 86  ;TextBox      ;25350;0    ;1200 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=ROUND("w%Dif"[2,2],0.01) }
            { 88  ;TextBox      ;14400;0    ;1350 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=wViajes[1,1] }
            { 89  ;TextBox      ;15900;0    ;1350 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=wViajes[2,1] }
            { 90  ;TextBox      ;17400;0    ;1500 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=wDiferencia[1,2] }
            { 93  ;TextBox      ;19050;0    ;1200 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=ROUND("w%Dif"[1,2],0.01) }
            { 94  ;TextBox      ;20700;0    ;1350 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=wViajes[1,2] }
            { 95  ;TextBox      ;22200;0    ;1350 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=wViajes[2,2] }
            { 96  ;TextBox      ;23700;0    ;1500 ;423  ;DecimalPlaces=0:2;
                                                         SourceExpr=wDiferencia[2,2] }
          }
           }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=12540;
      Height=6270;
      OnOpenForm=VAR
                   rConf@1103350000 : Record 98;
                   rPar@1103350001 : Record 7010311;
                   cFunEst@1103350002 : Codeunit 7010312;
                   cFunBas@1103350003 : Codeunit 7010310;
                   cCond@1103350004 : Codeunit 7010313;
                 BEGIN
                   rPar.FINDFIRST;


                   wIniAcum[1]         := rPar."Fecha Inicio Acumulados";
                   wIniAcum[2]         := wIniAcum[1];


                   vAgrupacionGeneral  :=TRUE;

                   //............


                   vSoloConActividad   :=FALSE;
                   wIniAcum[1]         :=rPar."Fecha Inicio Acumulados";
                   wIniAcum[2]         := wIniAcum[1];

                   vGarajeResult:=cFunBas.ObtenerGaraje();
                   IF vGarajeResult<>'' THEN
                     RequestOptionsForm.FltGaraje.EDITABLE := FALSE;

                   //Actualizamos el temporal de selecci¢n de clientes.
                   cFunEst.Actualiza_Clientes_Usuario;

                   //Actualizamos el la tabla paralela de uso estad¡stico a Cliente/TTOO.
                   cFunEst.Actualizar_Temporal_Clientes;

                   //Inicializaci¢n de la divisa.
                   vDivisa:= '';

                   //.. Acerca de la posibilidad de seleccionar conductores.
                   cCond.ActualizarSeleccionConductores;
                   vConductores      := vConductores::"Todos los Conductores";
                   RequestOptionsForm.Seleccionar.VISIBLE:=FALSE;
                   //.............
                 END;

    }
    CONTROLS
    {
      { 23  ;Label        ;220  ;330  ;5060 ;440  ;MultiLine=Yes;
                                                   CaptionML=ESP=Garaje a considerar en resultados;
                                                   ToolTipML=ESP=Si se marca s¢lo se considerar n los vehiculos que han tenido actividad }
      { 24  ;TextBox      ;5390 ;330  ;2310 ;440  ;Name=FltGaraje;
                                                   NextControl=21;
                                                   SourceExpr=vGarajeResult;
                                                   TableRelation=Garaje.Garaje;
                                                   OnValidate=VAR
                                                                cfunbas@1103350001 : Codeunit 7010310;
                                                              BEGIN
                                                                cfunbas.TestRestringido(vGaraje);
                                                              END;
                                                               }
      { 26  ;TextBox      ;5390 ;4180 ;3960 ;440  ;Name=ff11;
                                                   SourceExpr=wFiltroFecha[1];
                                                   OnValidate=VAR
                                                                lcGestApl@1103350001 : Codeunit 1;
                                                              BEGIN
                                                                FormatoFiltro(wFiltroFecha[1]);
                                                              END;
                                                               }
      { 25  ;TextBox      ;5390 ;4730 ;3960 ;440  ;Name=ff11;
                                                   SourceExpr=wFiltroFecha[2];
                                                   OnValidate=BEGIN
                                                                FormatoFiltro(wFiltroFecha[2]);
                                                              END;
                                                               }
      { 1   ;Label        ;220  ;4180 ;5060 ;440  ;CaptionML=ESP=Periodo 1 }
      { 4   ;Label        ;220  ;4730 ;5060 ;440  ;CaptionML=ESP=Periodo 2 }
      { 5   ;Label        ;220  ;5280 ;5060 ;440  ;CaptionML=ESP=Inicio Acumulados Periodo 1 }
      { 6   ;Label        ;220  ;5830 ;5060 ;440  ;CaptionML=ESP=Inicio Acumulados Periodo 2 }
      { 17  ;TextBox      ;5390 ;5280 ;2310 ;440  ;SourceExpr=wIniAcum[1];
                                                   OnValidate=BEGIN
                                                                IF (wIniAcum[1] =0D) OR (wIniAcum[2] = 0D ) THEN
                                                                  ERROR(err3)
                                                              END;
                                                               }
      { 18  ;TextBox      ;5390 ;5830 ;2310 ;440  ;SourceExpr=wIniAcum[2];
                                                   OnValidate=BEGIN
                                                                IF (wIniAcum[1] =0D) OR (wIniAcum[2] = 0D ) THEN
                                                                  ERROR(err3)
                                                              END;
                                                               }
      { 2   ;TextBox      ;5390 ;880  ;2310 ;440  ;SourceExpr=vTipoConductor }
      { 3   ;Label        ;220  ;880  ;5060 ;440  ;ParentControl=2;
                                                   CaptionML=ESP=Selecci¢n Tipo Conductor }
      { 7   ;CheckBox     ;5390 ;3080 ;440  ;440  ;ShowCaption=No;
                                                   NextControl=11;
                                                   SourceExpr=vSoloConActividad }
      { 8   ;Label        ;220  ;3080 ;5060 ;440  ;CaptionML=ESP=S¢lo conductores con actividad }
      { 9   ;TextBox      ;5390 ;1430 ;2310 ;440  ;SourceExpr=vTipoAcuerdo;
                                                   TableRelation="Tipo Acuerdo Conductor"."Tipo Acuerdo" }
      { 10  ;Label        ;220  ;1430 ;5060 ;440  ;CaptionML=ESP=Tipo Acuerdo }
      { 11  ;CheckBox     ;5390 ;3630 ;440  ;440  ;ShowCaption=No;
                                                   NextControl=26;
                                                   SourceExpr=vVerBloqueados }
      { 12  ;Label        ;220  ;3630 ;5060 ;440  ;CaptionML=ESP=Visualizar bloqueados }
      { 13  ;CommandButton;8910 ;1980 ;440  ;440  ;Name=Seleccionar;
                                                   HorzGlue=Left;
                                                   VertGlue=Top;
                                                   CaptionML=ESP=...;
                                                   ToolTipML=ESP=Seleccionar Vehiculos;
                                                   OnPush=VAR
                                                            rSel@1103350001 : Record 7035378;
                                                            fSel@1103350002 : Form 7035399;
                                                            rPar@1103350003 : Record 7010311;
                                                          BEGIN
                                                            rPar.FINDFIRST;

                                                            rSel.RESET;
                                                            rSel.INIT;
                                                            rSel.SETCURRENTKEY(Usuario,Garaje,"Nombre Abreviado");
                                                            rSel.FILTERGROUP(2);
                                                            rSel.SETRANGE(Usuario,USERID);

                                                            IF (vGaraje<>'') AND (vGaraje<>rPar."Todos los garajes") THEN
                                                              rSel.SETRANGE(Garaje, vGaraje);

                                                            IF vTipoConductor = vTipoConductor::Propios THEN
                                                              rSel.SETRANGE(Externo,FALSE)
                                                            ELSE
                                                              IF vTipoConductor = vTipoConductor::Externos THEN
                                                                rSel.SETRANGE(Externo,TRUE);


                                                            rSel.FILTERGROUP(0);

                                                            CLEAR(fSel);
                                                            fSel.SETTABLEVIEW(rSel);
                                                            fSel.RUN;
                                                            CLEAR(fSel);
                                                            rSel.RESET;
                                                          END;
                                                           }
      { 14  ;TextBox      ;5390 ;1980 ;3520 ;440  ;SourceExpr=vConductores;
                                                   OnValidate=BEGIN
                                                                IF vConductores=vConductores::"Todos los Conductores" THEN
                                                                  RequestOptionsForm.Seleccionar.VISIBLE:=FALSE
                                                                ELSE
                                                                  RequestOptionsForm.Seleccionar.VISIBLE:=TRUE;
                                                              END;
                                                               }
      { 15  ;Label        ;220  ;1980 ;5060 ;440  ;CaptionML=ESP=Selecci¢n Conductores }
      { 16  ;TextBox      ;5390 ;2530 ;2310 ;440  ;SourceExpr=vGrupoVehiculo;
                                                   TableRelation="Tipo Vehiculo".Codigo }
      { 19  ;Label        ;220  ;2530 ;5060 ;440  ;CaptionML=ESP="Grupo Vehiculo ";
                                                   ToolTipML=ESP=Filtro para considerar s¢lo la pertenencia del conductor a un determinado grupo de veh¡culos. }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      Text50000@1103355000 : TextConst 'ESP=Procesando  @1@@@@@@@@@\';
      Text50001@1103355001 : TextConst 'ESP="Tipo de Acuerdo: "';
      Text50002@1103355002 : TextConst 'ESP="Garaje: + "';
      Text50003@1103355003 : TextConst 'ESP=Conductores Propios';
      Text50004@1103355004 : TextConst 'ESP=Conductores Ajenos';
      LastFieldNo@1103350000 : Integer;
      FooterPrinted@1103350001 : Boolean;
      vCodEntrada@1103350002 : Code[10];
      wIniAcum@1103350003 : ARRAY [2] OF Date;
      vGaraje@1103350004 : Code[10];
      ContaTS@1103350005 : Integer;
      vFltGaraje@1103350006 : Text[10];
      vFltGarajeResult@1103350007 : Text[30];
      vGarajeResult@1103350008 : Code[10];
      vPrecision@1103350009 : Decimal;
      vTextoNormal@1103350010 : Text[60];
      vTextoTotal@1103350011 : Text[60];
      vMostrarTotales@1103350012 : Boolean;
      vImprimirTotales@1103350013 : Boolean;
      vPrimerTexto@1103350014 : Boolean;
      vMostrarTotalGeneral@1103350015 : Boolean;
      vTipoLinea@1103350016 : Text[50];
      vTipoElemento@1103350017 : Text[50];
      vDivisa@1103350018 : Code[10];
      rParametros@1103350019 : Record 7010311;
      wFiltroFecha@1103350020 : ARRAY [2] OF Text[250];
      wPaxTrans@1103350021 : ARRAY [2,2] OF Decimal;
      err1@1103350022 : TextConst 'ESP=%1 No es un filtro v lido';
      err2@1103350023 : TextConst 'ESP=%1 no puede ser superior a %2';
      err3@1103350024 : TextConst 'ESP=Los Inicios de Acumulados no pueden permanecer en blanco';
      wDiferencia@1103350025 : ARRAY [2,2] OF Decimal;
      "w%Dif"@1103350026 : ARRAY [2,2] OF Decimal;
      wServicio@1103350027 : 'Todos,Propios,Arrendados';
      vSoloConActividad@1103350028 : Boolean;
      vTipoConductor@1103350029 : 'Todos,Propios,Externos';
      vTipoAcuerdo@1103350030 : Code[10];
      vVerBloqueados@1103350031 : Boolean;
      vAgrupacionGeneral@1103350032 : Boolean;
      ERROR1@1103350033 : TextConst 'ESP=Falta asignar el identificador de C¢digo Entrada en la ficha de par metros';
      wViajes@1103350034 : ARRAY [2,2] OF Decimal;
      ERROR2@1103350035 : TextConst 'ESP=No se ha asignado ning£n periodo';
      rCond2@1103350036 : Record 7010327;
      wResult@1103350037 : Integer;
      wImpresoTotal@1103350038 : Boolean;
      wVentana1@1103350039 : Dialog;
      wTotal@1103350040 : Integer;
      wCont@1103350041 : Integer;
      vConductores@1103350042 : 'Todos los Conductores,Seg£n Selecci¢n';
      vGrupoVehiculo@1103350043 : Code[10];
      vSelecCond@1103350044 : Boolean;

    PROCEDURE CalculaMediaPax@15(pPax@1103350000 : Decimal;pViajes@1103350001 : Decimal) : Decimal;
    VAR
      vResult@1103350002 : Integer;
    BEGIN
      vResult := 0;
      IF pViajes <> 0 THEN
        vResult := ROUND(pPax / pViajes,1);
      EXIT(vResult);
    END;

    PROCEDURE Calcula@3(VAR prConductor@1103350000 : Record 7010327;pwCodTipoServicio@1103350001 : Code[10];pwPeriodo@1103350002 : Integer);
    VAR
      lwPaxTrans@1103350003 : Decimal;
      cFunBas@1103350004 : Codeunit 7010310;
      lwPaxTransAcum@1103350005 : Decimal;
      lrConductores@1103350006 : Record 7010327;
      lwViajes@1103350007 : Decimal;
      lwViajesAcum@1103350008 : Decimal;
    BEGIN
      // Calcula
      // Calcula El N§Viajes y Pasajeros
      lrConductores.RESET;
      lrConductores.COPY(prConductor);

      IF wFiltroFecha[pwPeriodo] <> '' THEN
        lrConductores.SETFILTER("Filtro Fechas",wFiltroFecha[pwPeriodo]);


      IF pwCodTipoServicio <> '' THEN
        lrConductores.SETRANGE("Filtro Tipo Servicio",pwCodTipoServicio);

      lrConductores.CALCFIELDS("N§ Viajes (Estadist)","AD Transportados (Estadist)","NI Transportados (Estadist)","N§ Viajes (Estadist)"
      );

      lwPaxTrans := lrConductores."AD Transportados (Estadist)" + lrConductores."NI Transportados (Estadist)";
      lwViajes   := lrConductores."N§ Viajes (Estadist)";

      //Calculamos los acumulados anuales.
      IF wFiltroFecha[pwPeriodo] <> '' THEN BEGIN
        lrConductores.SETRANGE("Filtro Fechas", wIniAcum[pwPeriodo] , lrConductores.GETRANGEMAX("Filtro Fechas"));
        lrConductores.CALCFIELDS("N§ Viajes (Estadist)","AD Transportados (Estadist)","NI Transportados (Estadist)");

        lwPaxTransAcum := lrConductores."AD Transportados (Estadist)" + lrConductores."NI Transportados (Estadist)";
        lwViajesAcum   := lrConductores."N§ Viajes (Estadist)";
      END;

      // Asigna las cantidades de periodo y acumulados
      IF wFiltroFecha[pwPeriodo] <> '' THEN BEGIN
        wPaxTrans[pwPeriodo,1] := lwPaxTrans;
        wPaxTrans[pwPeriodo,2] := lwPaxTransAcum;
        wViajes  [pwPeriodo,1] := lwViajes;
        wViajes  [pwPeriodo,2] := lwViajesAcum;
      END;
    END;

    PROCEDURE FormatoFiltro@7(VAR TextFiltroFech@1103350000 : Text[250]);
    VAR
      wFecha1@1103350001 : Date;
      wFecha2@1103350002 : Date;
      PosicionCadena@1103350003 : Integer;
      i@1103350004 : Integer;
      lcGestApl@1103350005 : Codeunit 1;
      Text1@1103350006 : Text[250];
      Text2@1103350007 : Text[250];
    BEGIN
      lcGestApl.MakeDateFilter(TextFiltroFech);

      PosicionCadena := STRPOS(TextFiltroFech,'..');

      IF PosicionCadena = 0 THEN BEGIN
        IF EVALUATE(wFecha1,TextFiltroFech) THEN
          TextFiltroFech := FORMAT(wFecha1)
        ELSE
          ERROR(err1,TextFiltroFech);
      END
      ELSE
      BEGIN
        Text1 := COPYSTR(TextFiltroFech,1,PosicionCadena - 1);
        Text2 := COPYSTR(TextFiltroFech,PosicionCadena + 2, STRLEN(TextFiltroFech));
        IF (EVALUATE(wFecha1,Text1)) AND (EVALUATE(wFecha2,Text2))   THEN BEGIN
          TextFiltroFech := FORMAT(wFecha1)+'..'+FORMAT(wFecha2);
          IF wFecha1 > wFecha2 THEN
            ERROR(err2,wFecha1,wFecha2);
        END
        ELSE
          ERROR(err1,TextFiltroFech);

      END;
    END;

    PROCEDURE CalcDif@16();
    BEGIN
      // CalcDif
      // Calcula las diferencias entre periodos, as¡ como el % de dicha diferencia

      wDiferencia[1,1] := wPaxTrans[1,1] - wPaxTrans[2,1];
      wDiferencia[2,1] := wPaxTrans[1,2] - wPaxTrans[2,2];

      wDiferencia[1,2] := wViajes[1,1] - wViajes[2,1];
      wDiferencia[2,2] := wViajes[1,2] - wViajes[2,2];


      CLEAR("w%Dif");
      IF wPaxTrans[2,1] <>0 THEN
        "w%Dif"[1,1] :=wDiferencia[1,1] * 100 / wPaxTrans[2,1];
      IF wPaxTrans[2,2] <>0 THEN
        "w%Dif"[2,1] :=wDiferencia[2,1] * 100 / wPaxTrans[2,2];

      IF wViajes[2,1] <>0 THEN
        "w%Dif"[1,2] :=wDiferencia[1,2] * 100 / wViajes[2,1];
      IF wViajes[2,2] <>0 THEN
        "w%Dif"[2,2] :=wDiferencia[2,2] * 100 / wViajes[2,2];
    END;

    PROCEDURE NombreCond@27() : Text[65];
    BEGIN
      // NombreCond

      EXIT(Conductores.Apellidos + ', ' + Conductores.Nombre);
    END;

    PROCEDURE CalculaTotal@11(VAR prConductor@1103350000 : Record 7010327;pwCodTipoServicio@1103350001 : Code[10];pwPeriodo@1103350002 : Integer);
    VAR
      lrCond2@1103350003 : Record 7010327;
      lwTotalTrans@1103350004 : ARRAY [2] OF Decimal;
      lwTotalViajes@1103350005 : ARRAY [2] OF Decimal;
    BEGIN
      CLEAR(lwTotalTrans);
      CLEAR(lwTotalViajes);

      lrCond2.RESET;
      lrCond2.COPY(prConductor);
      lrCond2.INIT;
      lrCond2.Conductor := '';

      {// JPT 24/11/06 Esto parece que no funciona
      IF lrCond2.GETFILTERS ='' THEN BEGIN
        Calcula(lrCond2,pwCodTipoServicio,pwPeriodo);
      END
      ELSE}
       BEGIN
        IF lrCond2.FINDSET THEN
          REPEAT
            IF TestFiltro(lrCond2) THEN BEGIN
              Calcula(lrCond2,pwCodTipoServicio,pwPeriodo);
              lwTotalTrans[1] += wPaxTrans[pwPeriodo,1];
              lwTotalTrans[2] += wPaxTrans[pwPeriodo,2];

              lwTotalViajes[1]+= wViajes  [pwPeriodo,1];
              lwTotalViajes[2]+= wViajes  [pwPeriodo,2];
            END;
          UNTIL lrCond2.NEXT=0;
        wPaxTrans[pwPeriodo,1] := lwTotalTrans[1];
        wPaxTrans[pwPeriodo,2] := lwTotalTrans[2];

        wViajes[pwPeriodo,1]   := lwTotalViajes[1];
        wViajes[pwPeriodo,2]   := lwTotalViajes[2];


      END;
    END;

    PROCEDURE TestFiltro@1(rCond@1103350000 : Record 7010327) : Boolean;
    VAR
      rSel@1103350001 : Record 7035378;
    BEGIN
      //TestFiltro.
      IF vConductores = vConductores::"Todos los Conductores" THEN
        EXIT(TRUE);

      rSel.RESET;
      IF rSel.GET(USERID,rCond.Conductor) THEN
        IF rSel.Seleccion THEN
          EXIT(TRUE);

      EXIT(FALSE);
    END;

    PROCEDURE ObtenerFinalPeriodo@2(pStr@1103350000 : Text[250]) : Date;
    VAR
      vPos@1103350001 : Integer;
      vResult@1103350002 : Date;
    BEGIN
      //ObtenerFinalPeriodo.
      vPos  := STRPOS(pStr,'..')+2;
      EVALUATE(vResult,COPYSTR(pStr,vPos,10));
      EXIT(vResult);
    END;

    BEGIN
    {
      wPaxFact tiene dos dimensiones la primera sirve para difereciar  entre el primer y el segundo periodo
      la segunda para el acumulado en los dos periodos
      wDiferencia y "w%Dif" tambien tienen dos dimensiones, una para las diferencias entre los dos periodos y la otra para las
      diferencias de acumulados

      Periodo actual   = wFiltroFecha[1]
      Periodo anterior = wFiltroFecha[2]

      <23/08/02> Modificado por RRT para incorporar:
      a) Selecci¢n de conductores.
      b) Filtro por Grupo de Vehiculo.
      c) A¤adir total al final (no se ha hecho porque ya existe).

      RRT 250902 - Modificado por defecto en la opci¢n "Mostrar s¢lo conductores con actividad".
      Que siempre salga el total de conductores.
    }
    END.
  }
  RDLDATA
  {
  }
}
