OBJECT Report 5979 Copy Service Document
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=NAVW16.00.01;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Copy Service Document;
               ESP=Copiar documento servicio];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  IF DocNo = '' THEN
                    ERROR(Text004);
                  ValidateDocNo;
                  IF FromServContractHeader."Ship-to Code" <> ServContractHeader."Ship-to Code" THEN
                    IF NOT CONFIRM(Text003,FALSE) THEN BEGIN
                      CurrReport.QUIT;
                      EXIT;
                    END;
                  AllLinesCopied := CopyDocMgt.CopyServContractLines(ServContractHeader,DocType,DocNo,OutServContractLine);
                END;

    OnPostReport=BEGIN
                   COMMIT;
                   IF NOT AllLinesCopied THEN
                     IF CONFIRM(
                         Text000 +
                         Text001,
                         TRUE)
                     THEN BEGIN
                       OutServContractLine.MARKEDONLY := TRUE;
                       FORM.RUNMODAL(FORM::"Service Contract Line List",OutServContractLine);
                     END;
                 END;

  }
  DATAITEMS
  {
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=9130;
      Height=2310;
      SaveValues=Yes;
      OnOpenForm=BEGIN
                   IF DocNo <> '' THEN BEGIN
                     CASE DocType OF
                       DocType::Quote:
                         IF FromServContractHeader.GET(FromServContractHeader."Contract Type"::Quote,DocNo) THEN;
                       DocType::Contract:
                         IF FromServContractHeader.GET(FromServContractHeader."Contract Type"::Contract,DocNo) THEN;
                     END;
                     IF FromServContractHeader."Contract No." = '' THEN
                       DocNo := ''
                     ELSE
                       FromServContractHeader.CALCFIELDS(Name);
                   END;
                 END;

    }
    CONTROLS
    {
      { 3   ;TextBox      ;3410 ;0    ;2750 ;440  ;CaptionML=[ENU=Document Type;
                                                              ESP=Tipo documento];
                                                   OptionCaptionML=[ENU=Quote,Contract;
                                                                    ESP=Oferta,Contrato];
                                                   SourceExpr=DocType;
                                                   OnValidate=BEGIN
                                                                DocNo := '';
                                                                ValidateDocNo;
                                                              END;
                                                               }
      { 23  ;Label        ;0    ;0    ;3300 ;440  ;ParentControl=3 }
      { 8   ;TextBox      ;3410 ;550  ;2750 ;440  ;CaptionML=[ENU=Document No.;
                                                              ESP=N§ documento];
                                                   SourceExpr=DocNo;
                                                   OnValidate=BEGIN
                                                                ValidateDocNo;
                                                              END;

                                                   OnLookup=BEGIN
                                                              LookupDocNo;
                                                            END;
                                                             }
      { 9   ;Label        ;0    ;550  ;3300 ;440  ;ParentControl=8 }
      { 1   ;Label        ;0    ;1100 ;3300 ;440  ;ParentControl=2 }
      { 2   ;TextBox      ;3410 ;1100 ;2750 ;440  ;Editable=No;
                                                   HorzAlign=Left;
                                                   CaptionML=[ENU=Customer No.;
                                                              ESP=N§ cliente];
                                                   SourceExpr=FromServContractHeader."Customer No." }
      { 4   ;Label        ;0    ;1650 ;3300 ;440  ;ParentControl=5;
                                                   CaptionML=[ENU=Customer Name;
                                                              ESP=Nombre cliente] }
      { 5   ;TextBox      ;3410 ;1650 ;5500 ;440  ;Editable=No;
                                                   CaptionML=[ENU=Name;
                                                              ESP=Nombre];
                                                   SourceExpr=FromServContractHeader.Name }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   IF DocNo <> '' THEN BEGIN
                     CASE DocType OF
                       DocType::Quote:
                         IF FromServContractHeader.GET(FromServContractHeader."Contract Type"::Quote,DocNo) THEN;
                       DocType::Contract:
                         IF FromServContractHeader.GET(FromServContractHeader."Contract Type"::Contract,DocNo) THEN;
                     END;
                     IF FromServContractHeader."Contract No." = '' THEN
                       DocNo := ''
                     ELSE
                       FromServContractHeader.CALCFIELDS(Name);
                   END;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             ESP=Opciones] }

      { 3   ;2   ;Field     ;
                  CaptionML=[ENU=Document Type;
                             ESP=Tipo documento];
                  OptionCaptionML=[ENU=Quote,Contract;
                                   ESP=Oferta,Contrato];
                  SourceExpr=DocType;
                  OnValidate=BEGIN
                               DocNo := '';
                               ValidateDocNo;
                             END;
                              }

      { 8   ;2   ;Field     ;
                  CaptionML=[ENU=Document No.;
                             ESP=N§ documento];
                  SourceExpr=DocNo;
                  OnValidate=BEGIN
                               ValidateDocNo;
                             END;

                  OnLookup=BEGIN
                             LookupDocNo;
                           END;
                            }

      { 2   ;2   ;Field     ;
                  CaptionML=[ENU=Customer No.;
                             ESP=N§ cliente];
                  SourceExpr=FromServContractHeader."Customer No.";
                  Editable=FALSE }

      { 5   ;2   ;Field     ;
                  CaptionML=[ENU=Customer Name;
                             ESP=Nombre cliente];
                  SourceExpr=FromServContractHeader.Name;
                  Editable=FALSE }

    }
  }
  CODE
  {
    VAR
      ServContractHeader@1007 : Record 5965;
      FromServContractHeader@1010 : Record 5965;
      DocType@1026 : 'Quote,Contract';
      DocNo@1027 : Code[20];
      CopyDocMgt@1000 : Codeunit 6620;
      OutServContractLine@1001 : Record 5964;
      AllLinesCopied@1003 : Boolean;
      Text000@1005 : TextConst 'ENU=It was not possible to copy all of the service contract lines.\\;ESP=No fue posible copiar todas las l¡neas del contrato servicio.\\';
      Text001@1004 : TextConst 'ENU=Do you want to see these lines?;ESP=¨Desea ver estas l¡neas?';
      Text002@1002 : TextConst 'ENU=You can only copy the document with the same %1;ESP=S¢lo puede copiar el documento con el mismo %1';
      Text003@1006 : TextConst 'ENU=The document has a different ship-to code.\\Do you want to continue?;ESP=El documento tiene un C¢d. direcci¢n env¡o diferente.\\¨Desea continuar?';
      Text004@1008 : TextConst 'ENU=You must fill in the Document No. field.;ESP=Debe rellenar el campo N§ documento.';

    PROCEDURE SetServContractHeader@2(VAR NewServContractHeader@1000 : Record 5965);
    BEGIN
      ServContractHeader := NewServContractHeader;
    END;

    LOCAL PROCEDURE ValidateDocNo@10();
    BEGIN
      IF DocNo = '' THEN
        FromServContractHeader.INIT
      ELSE BEGIN
        FromServContractHeader.INIT;
        FromServContractHeader.GET(DocType,DocNo);
        IF FromServContractHeader."Customer No." <> ServContractHeader."Customer No." THEN
          ERROR(Text002,ServContractHeader.FIELDCAPTION("Customer No."));
        IF FromServContractHeader."Currency Code" <> ServContractHeader."Currency Code" THEN
          ERROR(Text002,ServContractHeader.FIELDCAPTION("Currency Code"));
        FromServContractHeader.CALCFIELDS(Name);
      END;
    END;

    LOCAL PROCEDURE LookupDocNo@3();
    BEGIN
      FromServContractHeader.FILTERGROUP := 2;
      FromServContractHeader.SETRANGE("Contract Type",CopyDocMgt.ServContractHeaderDocType(DocType));
      IF ServContractHeader."Contract Type" = CopyDocMgt.ServContractHeaderDocType(DocType) THEN
        FromServContractHeader.SETFILTER("Contract No.",'<>%1',ServContractHeader."Contract No.");
      FromServContractHeader."Contract Type" := CopyDocMgt.ServContractHeaderDocType(DocType);
      FromServContractHeader."Contract No." := DocNo;
      FromServContractHeader.SETCURRENTKEY("Customer No.","Currency Code","Ship-to Code");
      FromServContractHeader.SETRANGE("Customer No.",ServContractHeader."Customer No.");
      FromServContractHeader.SETRANGE("Currency Code",ServContractHeader."Currency Code");
      FromServContractHeader.FILTERGROUP := 0;
      FromServContractHeader.SETRANGE("Ship-to Code",ServContractHeader."Ship-to Code");
      IF FORM.RUNMODAL(0,FromServContractHeader) = ACTION::LookupOK THEN
        DocNo := FromServContractHeader."Contract No.";
      ValidateDocNo;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}
