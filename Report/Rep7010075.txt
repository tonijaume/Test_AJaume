OBJECT Report 7010075 Excursions Detail of sales
{
  OBJECT-PROPERTIES
  {
    Date=29/07/14;
    Time=23:59:12;
    Modified=Yes;
    Version List=AIC2009,CNT;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Excursions Detail of sales;
               ESP=Excursions Detail of sales];
    OnInitReport=BEGIN
                   wFechaAct := CURRENTDATETIME;
                   rInfEmp.FINDFIRST;
                 END;

    OnPreReport=BEGIN
                  IF (FiltResExc.GETFILTER("Fecha Excursion")='') AND (FiltResExc.GETFILTER("Fecha Venta")='') THEN
                    ERROR(Text001);

                  // La fecha de cambio de divisa es la ultima fecha del rango del listado
                  IF (FiltResExc.GETFILTER("Fecha Excursion")<>'') THEN
                    wFechaCmbDiv := FiltResExc.GETRANGEMAX("Fecha Excursion")
                  ELSE
                    wFechaCmbDiv := FiltResExc.GETRANGEMAX("Fecha Venta");

                  wFiltroFecha := FiltResExc.GETFILTER("Fecha Excursion");
                  IF wFiltroFecha='' THEN
                    wFiltroFecha := FiltResExc.GETFILTER("Fecha Venta");

                  // Divisa del listado
                  CLEAR(rDivisa);
                  IF NOT rDivisa.GET(wDivList) THEN
                    CLEAR(rDivisa);
                END;

    Orientation=Landscape;
  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table23;
        DataItemTableView=SORTING(No.);
        MaxIteration=1;
        DataItemVarName=FiltrProv;
        ReqFilterFields=No.;
      }
      SECTIONS
      {
      }
       }
    { PROPERTIES
      {
        DataItemTable=Table7010162;
        DataItemTableView=SORTING(Delegacion,N§ Reserva)
                          WHERE(Anulada=CONST(No),
                                Reembolsada=CONST(No));
        MaxIteration=1;
        DataItemVarName=FiltResExc;
        OnPreDataItem=BEGIN


                        IF (GETFILTER("Fecha Excursion")<>'') THEN
                          SETCURRENTKEY("Fecha Excursion","N§ Servicio","Orden zona","Orden hotel","Hotel Cliente")
                        ELSE
                          SETCURRENTKEY("Guia Venta","Fecha Venta",Confirmada);
                        {
                        IF BuildTemp(Rep) AND (NOT wFirstRep) THEN
                          CurrReport.NEWPAGE;
                        }
                        BuildTemp;

                        wFirstRep := FALSE;
                      END;

        ReqFilterFields=Fecha Excursion,Fecha Venta,Producto;
        DataItemLinkReference=FiltResExc;
      }
      SECTIONS
      {
      }
       }
    { PROPERTIES
      {
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number);
        DataItemVarName=IResvs;
        OnPreDataItem=BEGIN
                        CLEAR(rTempT);
                        CLEAR(rTemp);
                        rTemp.SETCURRENTKEY(Code01,Code02,Date01,Time01,Code05);
                        wFirst := TRUE;
                      END;

        OnAfterGetRecord=VAR
                           lwOk@1100217000 : Boolean;
                           lrTemp2@1100217001 : TEMPORARY Record 7010251;
                         BEGIN
                           IF wFirst THEN
                             lwOk := rTemp.FINDFIRST
                           ELSE
                             lwOk := rTemp.NEXT<>0;

                           IF NOT lwOk THEN
                             CurrReport.BREAK;

                           // Muestra el rotulo de producto + proveedor
                           CLEAR(wDescrpGrp);
                           IF (rTempAnt.Code01 <> rTemp.Code01) OR (rTempAnt.Code02 <> rTemp.Code02) THEN BEGIN
                             wDescrpGrp := STRSUBSTNO('%1 (%2)', NomExcursion(rTemp.Code01), NomProv(rTemp.Code02));
                             CLEAR(rTempT); // Inicializa las lineas de total
                           END;

                           wBenef := Redond(rTemp.Dec01 - rTemp.Dec02);
                           wUtil  := Redond(wBenef - rTemp.Dec03 - rTemp.Dec04);

                           rTempT.Int03 += rTemp.Int03;
                           rTempT.Int05 += rTemp.Int05;
                           rTempT.Int06 += rTemp.Int06;
                           rTempT.Dec01 += rTemp.Dec01;
                           rTempT.Dec02 += rTemp.Dec02;
                           rTempT.Dec03 += rTemp.Dec03;
                           rTempT.Dec04 += rTemp.Dec04;
                           rTempT.Dec05 += wBenef;
                           rTempT.Dec06 += wUtil;

                           // Muestra los totales si cambia en el siguiente registro o es la ultima linea
                           lrTemp2.COPY(rTemp);
                           IF rTemp.NEXT <> 0 THEN
                             wShowTotal := (lrTemp2.Code01 <> rTemp.Code01) OR (lrTemp2.Code02 <> rTemp.Code02)
                           ELSE
                             wShowTotal := TRUE;
                           rTemp.COPY(lrTemp2);

                           wFirst := FALSE;
                           rTempAnt := rTemp;
                         END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Header;
            PrintOnEveryPage=Yes;
            SectionWidth=22350;
            SectionHeight=1269;
          }
          CONTROLS
          {
            { 1100217024;Label  ;6750 ;0    ;6450 ;423  ;HorzAlign=Center;
                                                         FontSize=9;
                                                         FontBold=Yes;
                                                         CaptionML=[ENU=Excursions Detailed by Service;
                                                                    ESP=Excursiones Detalle por Servicio] }
            { 1100217025;TextBox;6750 ;423  ;6450 ;423  ;HorzAlign=Center;
                                                         SourceExpr=wFiltroFecha }
            { 1100217021;TextBox;18750;0    ;3600 ;423  ;HorzAlign=Right;
                                                         SourceExpr=NomUsuario }
            { 1100217022;TextBox;18750;423  ;3600 ;423  ;HorzAlign=Right;
                                                         SourceExpr=wFechaAct }
            { 1100217026;TextBox;0    ;0    ;6300 ;423  ;HorzAlign=Left;
                                                         SourceExpr=rInfEmp.Name }
            { 1100217049;TextBox;13200;0    ;2700 ;423  ;HorzAlign=Left;
                                                         FontSize=9;
                                                         FontBold=Yes;
                                                         SourceExpr=[ STRSUBSTNO(Text002, wModoIVA)] }
            { 1100217018;TextBox;6750 ;846  ;6450 ;423  ;HorzAlign=Center;
                                                         SourceExpr=STRSUBSTNO(Text003, wDivList ) }
          }
           }
        { PROPERTIES
          {
            SectionType=Header;
            PrintOnEveryPage=Yes;
            SectionWidth=22350;
            SectionHeight=1269;
          }
          CONTROLS
          {
            { 1100217009;Label  ;10650;0    ;1800 ;846  ;ParentControl=1100217008;
                                                         HorzAlign=Center;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=ESP=PAX }
            { 1100217027;Shape  ;0    ;846  ;22350;423  ;ShapeStyle=HorzLine }
            { 1100217013;Label  ;3750 ;0    ;2100 ;846  ;ParentControl=1100217012;
                                                         HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1100217023;Label  ;12600;0    ;1500 ;846  ;ParentControl=1100217020;
                                                         HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=[ENU=AMOUNT;
                                                                    ESP=IMPORTE] }
            { 1100217035;Label  ;17550;0    ;1500 ;846  ;ParentControl=1100217033;
                                                         HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=[ENU=TTOO COMMISSION;
                                                                    ESP=COMISION TTOO] }
            { 1100217001;Label  ;6000 ;0    ;2550 ;846  ;ParentControl=1100217000;
                                                         HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1100217003;Label  ;14250;0    ;1500 ;846  ;ParentControl=1100217002;
                                                         HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1100217005;Label  ;19200;0    ;1500 ;846  ;ParentControl=1100217004;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=[ENU=REP. COMISSION;
                                                                    ESP=COMISION REP.] }
            { 1100217007;Label  ;20850;0    ;1500 ;846  ;ParentControl=1100217006;
                                                         HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1100217016;Label  ;15900;0    ;1500 ;846  ;ParentControl=1100217015;
                                                         HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1100217030;Label  ;8700 ;0    ;1800 ;846  ;HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=[ENU=Service No.;
                                                                    ESP=Num. Servicio] }
          }
           }
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=22350;
            SectionHeight=423;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT(wDescrpGrp<>'');
                         END;

          }
          CONTROLS
          {
            { 1100217028;TextBox;0    ;0    ;12300;423  ;HorzAlign=Left;
                                                         FontSize=9;
                                                         FontBold=Yes;
                                                         SourceExpr=wDescrpGrp }
          }
           }
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=22350;
            SectionHeight=423;
          }
          CONTROLS
          {
            { 1100217008;TextBox;10650;0    ;1800 ;423  ;HorzAlign=Center;
                                                         SourceExpr=GetPax(rTemp) }
            { 1100217012;TextBox;3750 ;0    ;2100 ;423  ;HorzAlign=Right;
                                                         CaptionML=[ENU=Date;
                                                                    ESP=Fecha];
                                                         SourceExpr=rTemp.Date01 }
            { 1100217020;TextBox;12600;0    ;1500 ;423  ;HorzAlign=Right;
                                                         SourceExpr=rTemp.Dec01 }
            { 1100217033;TextBox;17550;0    ;1500 ;423  ;HorzAlign=Right;
                                                         SourceExpr=rTemp.Dec03 }
            { 1100217000;TextBox;6000 ;0    ;2550 ;423  ;HorzAlign=Right;
                                                         CaptionML=ESP=Ticket;
                                                         SourceExpr=rTemp.Code04 }
            { 1100217002;TextBox;14250;0    ;1500 ;423  ;HorzAlign=Right;
                                                         CaptionML=[ENU=AG COMMISSION;
                                                                    ESP=COMISION AG];
                                                         SourceExpr=wBenef }
            { 1100217004;TextBox;19200;0    ;1500 ;423  ;CaptionML=[ENU=REP. COMMISSION;
                                                                    ESP=COMIS.REP.];
                                                         SourceExpr=rTemp.Dec04 }
            { 1100217006;TextBox;20850;0    ;1500 ;423  ;HorzAlign=Right;
                                                         CaptionML=[ENU=UTILITY;
                                                                    ESP=UTILIDAD];
                                                         SourceExpr=wUtil }
            { 1100217015;TextBox;15900;0    ;1500 ;423  ;HorzAlign=Right;
                                                         CaptionML=[ENU=COST;
                                                                    ESP=COSTO];
                                                         SourceExpr=rTemp.Dec02 }
            { 1100217029;TextBox;8700 ;0    ;1800 ;423  ;HorzAlign=Right;
                                                         CaptionML=ESP=Ticket;
                                                         SourceExpr=rTemp.Code05 }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number);
        MaxIteration=1;
        DataItemVarName=ITotal;
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=22350;
            SectionHeight=846;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT(wShowTotal);
                         END;

          }
          CONTROLS
          {
            { 1100217041;TextBox;15900;423  ;1500 ;423  ;HorzAlign=Right;
                                                         SourceExpr=rTempT.Dec02 }
            { 1100217044;TextBox;12600;423  ;1500 ;423  ;HorzAlign=Right;
                                                         SourceExpr=rTempT.Dec01 }
            { 1100217048;TextBox;10650;423  ;1800 ;423  ;HorzAlign=Center;
                                                         SourceExpr=GetPax(rTempT) }
            { 1100217010;TextBox;17550;423  ;1500 ;423  ;HorzAlign=Right;
                                                         SourceExpr=rTempT.Dec03 }
            { 1100217011;TextBox;14250;423  ;1500 ;423  ;HorzAlign=Right;
                                                         SourceExpr=rTempT.Dec05 }
            { 1100217014;TextBox;19200;423  ;1500 ;423  ;HorzAlign=Right;
                                                         SourceExpr=rTempT.Dec04 }
            { 1100217017;TextBox;20850;423  ;1500 ;423  ;HorzAlign=Right;
                                                         SourceExpr=rTempT.Dec05 }
            { 1100217019;Shape  ;3750 ;0    ;18600;423  ;ShapeStyle=HorzLine }
          }
           }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=5170;
      Height=1430;
      CaptionML=[ENU=Excursions Detail of sales;
                 ESP=Excursions Detail of sales];
    }
    CONTROLS
    {
      { 1100217000;TextBox;2420 ;220  ;2530 ;440  ;InPage=-1;
                                                   CaptionML=[ENU=VAT;
                                                              ESP=IVA];
                                                   SourceExpr=wModoIVA }
      { 1100217001;Label  ;220  ;220  ;2090 ;440  ;ParentControl=1100217000 }
      { 1100217002;TextBox;2420 ;770  ;2530 ;440  ;InPage=-1;
                                                   CaptionML=[ENU=Currency;
                                                              ESP=Divisa];
                                                   SourceExpr=wDivList;
                                                   TableRelation=Currency }
      { 1100217003;Label  ;220  ;770  ;2090 ;440  ;ParentControl=1100217002 }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      Text008@1100217000 : TextConst 'ENU=No Hotel;ESP=Sin Hotel';
      wFechaAct@1100217001 : DateTime;
      rInfEmp@1100217002 : Record 79;
      Text001@1100217003 : TextConst 'ENU=Must set a range date;ESP=Debe de definir una rango de fechas';
      rTemp@1100217006 : TEMPORARY Record 7010251;
      rTempT@1100217009 : TEMPORARY Record 7010251;
      rTempAnt@1100217021 : TEMPORARY Record 7010251;
      rCamb@1100217008 : Record 330;
      rDivisa@1100217016 : Record 4;
      codVAL@1100217007 : Codeunit 7010143;
      wFiltroFecha@1100217005 : Text[250];
      wFirst@1100217004 : Boolean;
      wFirstRep@1100217013 : Boolean;
      wShowTotal@1100217022 : Boolean;
      wModoIVA@1100217010 : 'Incluido,No Incluido';
      Text002@1100217011 : TextConst 'ENU=-VAT %1;ESP=- IVA %1';
      wDivList@1100217014 : Code[10];
      wFechaCmbDiv@1100217015 : Date;
      wBenef@1100217017 : Decimal;
      wUtil@1100217018 : Decimal;
      Text003@1100217019 : TextConst 'ENU=Currency %1;ESP=Divisa: %1';
      wDescrpGrp@1100217020 : Text[250];

    PROCEDURE NomUsuario@1100217001() : Text[250];
    VAR
      lrUser@1100217000 : Record 2000000002;
      lwNom@1100217001 : Text[250];
    BEGIN
      // NomUsuario

      CLEAR(lwNom);
      CLEAR(lrUser);
      IF lrUser.GET(USERID) THEN
        lwNom := lrUser.Name;
      IF lwNom='' THEN
        lwNom := USERID;
      EXIT(lwNom);
    END;

    PROCEDURE NomExcursion@1100217002(pwExc@1100217000 : Code[10]) : Text[80];
    VAR
      lrProd@1100217001 : Record 7009710;
      lwText@1100217002 : Text[80];
    BEGIN
      // NomExcursion

      CLEAR(lwText);
      IF lrProd.GET(pwExc) THEN
        lwText := lrProd.Descripcion;

      IF lwText = '' THEN
        lwText := pwExc;

      EXIT(lwText);
    END;

    PROCEDURE GetProv@1100217009(prResEx@1100217001 : Record 7010162) : Code[20];
    VAR
      lrPrest@1100217000 : Record 7010170;
      lrCon@1100217004 : Record 7010142;
    BEGIN
      // GetProv

      CLEAR(lrPrest);
      lrPrest.SETRANGE(Delegacion     , prResEx.Delegacion);
      lrPrest.SETRANGE("N§ Servicio"  , prResEx."N§ Servicio");
      lrPrest.SETRANGE("Tipo Contrato", lrPrest."Tipo Contrato"::Excursion);
      IF lrPrest.FINDFIRST THEN BEGIN
        CLEAR(lrCon);
        IF lrCon.GET(lrPrest.Delegacion, lrPrest."N§ Contrato", lrPrest."Tipo Contrato") THEN
          EXIT(lrCon.Proveedor)
      END;
    END;

    PROCEDURE NomProv@1100217000(pwCode@1100217000 : Code[20]) : Text[50];
    VAR
      lrPro@1100217001 : Record 23;
      lwText@1100217002 : Text[50];
    BEGIN
      // NomProv

      CLEAR(lrPro);
      IF lrPro.GET(pwCode) THEN
        lwText := lrPro.Name;

      IF lwText ='' THEN
        lwText := pwCode;

      EXIT(lwText);
    END;

    PROCEDURE BuildTemp@1100217021() : Boolean;
    VAR
      lrResExc@1100217001 : Record 7010162;
      lrVend@1100217003 : Record 23;
      lwId@1100217002 : Integer;
      lwCodPro@1100217004 : Code[20];
      lwFiltroxPro@1100217005 : Boolean;
      lwFiltroTXT@1100217000 : Text[250];
      lwOK@1100217006 : Boolean;
    BEGIN
      // BuildTemp
      // Devuelve true si se genera alg£n registro

      CLEAR(rTemp);
      rTemp.DELETEALL;

      CLEAR(lrVend);
      lrVend.COPY(FiltrProv);
      lwFiltroxPro := lrVend.GETFILTERS <> '';
      lwFiltroTXT  := lrVend.GETFILTERS;
      lrVend.FILTERGROUP(2);

      CLEAR(lrResExc);
      lrResExc.COPY(FiltResExc);
      lrResExc.SETFILTER("N§ Ticket"    , '<>%1', '');
      lrResExc.SETFILTER("Hotel Cliente", '<>%1', '');
      lrResExc.SETFILTER(Producto       , '<>%1', '');
      IF lrResExc.FINDSET THEN BEGIN
        CLEAR(lwId);
        REPEAT
          lwCodPro := GetProv(lrResExc);
          lwOK := TRUE;
          IF lwFiltroxPro THEN
            //lwOK := lrVend.GET(lwCodPro);
            lwOK := (STRPOS(lwFiltroTXT, lwCodPro) <> 0);

          IF lwOK THEN BEGIN
            lwId +=1;
            CLEAR(rTemp);
            rTemp.Id     := lwId;
            rTemp.Code01 := lrResExc.Producto;
            rTemp.Code02 := lwCodPro;
            rTemp.Code03 := lrResExc.Delegacion;
            rTemp.Int01  := lrResExc."N§ Servicio";
            rTemp.Int02  := lrResExc."N§ Reserva";
            rTemp.Int03  := lrResExc.Adultos + lrResExc.Ni¤os - lrResExc."Personas Reembolsadas";
            // Pax sin invitados
            rTemp.Int04  := rTemp.Int03 - lrResExc."Venta - Invitados Adultos" - lrResExc."Venta - Invitados ni¤os";
            rTemp.Int05  := lrResExc.Adultos - lrResExc."Adultos Reembolsados";
            rTemp.Int06  := lrResExc.Ni¤os - lrResExc."Ni¤os Reembolsados";
            rTemp.Date01 := lrResExc."Fecha Excursion";
            rTemp.Code04 := lrResExc."N§ Ticket";
            rTemp.Code05 := FORMAT(lrResExc."N§ Servicio"); //+$005
            //. Comision del guia venta
            rTemp.Dec04  := lrResExc."Comision Guia Venta" * lrResExc."Tipo cambio";
            rTemp.Dec05  := lrResExc."Tipo cambio";

            rTemp.INSERT;
          END;
        UNTIL lrResExc.NEXT=0;
      END;

      BuscaImportes;

      CLEAR(rTemp);
      EXIT(rTemp.FINDFIRST);
    END;

    PROCEDURE BuscaImportes@1100217008();
    VAR
      lrServ@1100217000 : Record 7010163;
      lrCoste@1100217001 : Record 7010166;
      lrMarg@1100217005 : Record 7010174;
      lrDetEco@1100217004 : Record 7010245;
      lrRes@1000000000 : Record 7010162;
      lwCoste@1100217006 : Decimal;
      lwCosteP@1100217002 : Decimal;
      lwPax@1100217003 : Decimal;
    BEGIN
      // BuscaImportes

      // Por cada servicio buscamos el su coste y calculamos el coste de la reserva por prorraeo

      CLEAR(lrServ);
      CLEAR(rTemp);
      rTemp.SETCURRENTKEY(Int01, Code01);
      IF rTemp.FINDSET THEN BEGIN
        REPEAT
          IF rTemp.Int01 <> 0 THEN BEGIN
            IF (lrServ.Delegacion <> rTemp.Code03) OR (lrServ."N§ Servicio" <> rTemp.Int01) THEN BEGIN
              lrServ.GET(rTemp.Code03, rTemp.Int01);
              lrServ.CALCFIELDS("N§ Adultos", "N§ Ni¤os", "Venta - Adultos Invitados", "Venta - Ni¤os Invitados");
              lwPax := lrServ."N§ Adultos" + lrServ."N§ Ni¤os" - lrServ."Venta - Adultos Invitados" - lrServ."Venta - Ni¤os Invitados";
              CLEAR(lwCoste);
              IF lrServ.Estado = lrServ.Estado::Confirmada THEN
              BEGIN
                CLEAR(lrCoste);
                lrCoste.SETRANGE (Delegacion   , lrServ.Delegacion);
                lrCoste.SETRANGE ("N§ Servicio", lrServ."N§ Servicio");
                lrCoste.SETFILTER(Concepto     , '%1|%2|%3', 'EXAC', 'EXCC', 'EXGO');
                IF lrCoste.FINDSET THEN
                BEGIN
                  REPEAT
                    CLEAR(lwCosteP);
                    CASE wModoIVA OF
                      wModoIVA::Incluido      : lwCosteP  := lrCoste."Importe con Impuesto";
                      wModoIVA::"No Incluido" : lwCosteP  := lrCoste."Importe sin Impuesto";
                    END;
                    lwCosteP := CamDiv(lrCoste."Cod. divisa", lwCosteP);
                    lwCoste  += lwCosteP;
                  UNTIL lrCoste.NEXT = 0;
                END;

              END
              ELSE
              BEGIN
                IF lrServ."Pendiente Recalcular" THEN BEGIN
                  lrServ."Tipo Calculo" := lrServ."Tipo Calculo"::Margenes;
                  codVAL.CostesIngresosExcursion(lrServ, TRUE); //+$006
                END;

                CLEAR(lrMarg);
                lrMarg.SETRANGE (Delegacion   , lrServ.Delegacion);
                lrMarg.SETRANGE ("N§ Servicio", lrServ."N§ Servicio");
                lrMarg.SETFILTER(Concepto     , '%1|%2|%3', 'EXAC', 'EXCC', 'EXGO');
                IF lrMarg.FINDSET THEN
                BEGIN
                  REPEAT
                    CLEAR(lwCosteP);
                    CASE wModoIVA OF
                      wModoIVA::Incluido      : lwCosteP  := lrMarg."Importe con impuestos";
                      wModoIVA::"No Incluido" : lwCosteP  := lrMarg."Importe sin impuestos";
                    END;
                    lwCoste  += lwCosteP;
                  UNTIL lrMarg.NEXT = 0;
                  // Los margenes est n siempre en divisa local
                  lwCoste := CamDiv('', lwCoste);
                END;
              END;
              // Se cambia el signo
              lwCoste := -lwCoste;
              // Coste prorrateado
              IF lwPax <> 0 THEN
                lwCoste := lwCoste / lwPax;
            END;
          END
          ELSE
            CLEAR(lwCoste);

          IF NOT lrDetEco.GET(rTemp.Code03, rTemp.Int02) THEN
            CLEAR(lrDetEco);
          IF NOT lrRes.GET(rTemp.Code03, rTemp.Int02) THEN
            CLEAR(lrRes);
          CASE wModoIVA OF
            wModoIVA::Incluido      : rTemp.Dec01  := lrDetEco."Ingreso reserva" - lrRes."Importe Reembolsado";
            wModoIVA::"No Incluido" : rTemp.Dec01  := lrDetEco."Ingreso reserva neto" - lrRes."Importe Reembolsado Neto";
          END;
          rTemp.Dec01  := rTemp.Dec01 * rTemp.Dec05;
          // La comision No tiene IVA
          rTemp.Dec03  := (lrDetEco."Comision TO adultos" + lrDetEco."Comision TO ni¤os") * rTemp.Dec05;

          rTemp.Dec02 := Redond(lwCoste * rTemp.Int04);
          rTemp.MODIFY;
        UNTIL rTemp.NEXT = 0;
      END;
    END;

    PROCEDURE CamDiv@1100217018(pwDivisa@1100217000 : Code[10];pwImporte@1100217002 : Decimal) : Decimal;
    VAR
      lwImp@1100217003 : Decimal;
    BEGIN
      // CamDiv
      // La fecha de cambio de divisa es la ultima fecha del rango del listado

      CLEAR(lwImp);
      lwImp := rCamb.ExchangeAmtFCYToFCY(wFechaCmbDiv , pwDivisa, wDivList, pwImporte);
      EXIT(lwImp);
    END;

    PROCEDURE Redond@1100217019(pwImporte@1100217000 : Decimal) : Decimal;
    VAR
      lwImp@1100217001 : Decimal;
    BEGIN
      // Redond

      CLEAR(lwImp);
      lwImp := ROUND(pwImporte, rDivisa."Amount Rounding Precision");
      EXIT(lwImp);
    END;

    PROCEDURE GetPax@1100217003(prTemp@1100217000 : Record 7010251) : Text[30];
    VAR
      lwText@1100217001 : Text[30];
    BEGIN
      // GetPax

      CLEAR(lwText);
      IF prTemp.Int06 <> 0 THEN BEGIN
        lwText := STRSUBSTNO('%1.%2', prTemp.Int05, prTemp.Int06);
      END
      ELSE
        lwText := FORMAT(prTemp.Int05);

      EXIT(lwText);
    END;

    BEGIN
    {
      $001 AJS 04012012 Modificar la funcion NomExcursion para que el retorno sea de 80

      $002 AJS 07022013 No tomar en cuenta los tickets reembolsados

      $003 AJS 27022013 Modifico la funcion BuildTemp para que no repase las que reservas que no tengan
                        Ticket, Hotel y Excursion

      $004 AJS 01072013 Corregir un error de division por cero al prorratear el coste

      $005 AJS 01072013 Agrego una columna para ver el numero de servicio

      $006 AJS 13052014 Nuevo parametro en funcion de calcular servicios

      $007 ARM  29072014 Reembolsos CNT-OC-14047
    }
    END.
  }
  RDLDATA
  {
  }
}
