OBJECT Report 6032 Post Prepaid Contract Entries
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVW16.00;
  }
  PROPERTIES
  {
    Permissions=TableData 5907=rm;
    CaptionML=[ENU=Post Prepaid Contract Entries;
               ESP=Registrar movs. contr. prepago];
    ProcessingOnly=Yes;
    OnInitReport=BEGIN
                   PostingDate := WORKDATE;
                 END;

    OnPreReport=BEGIN
                  ServLedgerFilters := "Service Ledger Entry".GETFILTERS;
                END;

    OnPostReport=BEGIN
                   IF PostPrepaidContracts = PostPrepaidContracts::"Post Prepaid Transactions" THEN
                     Window.CLOSE;
                 END;

  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table5907;
        DataItemTableView=SORTING(Service Contract No.)
                          WHERE(Type=CONST(Service Contract),
                                Moved from Prepaid Acc.=CONST(No),
                                Open=CONST(No));
        OnPreDataItem=BEGIN
                        IF PostPrepaidContracts = PostPrepaidContracts::"Print Only" THEN BEGIN
                          CLEAR(PrepaidContractEntriesTest);
                          PrepaidContractEntriesTest.InitVariables(UntilDate,PostingDate);
                          PrepaidContractEntriesTest.SETTABLEVIEW("Service Ledger Entry");
                          PrepaidContractEntriesTest.RUNMODAL;
                          CurrReport.BREAK;
                        END;

                        IF PostPrepaidContracts = PostPrepaidContracts::"Post Prepaid Transactions" THEN BEGIN
                          ServContractHdr.SETFILTER("Contract No.","Service Ledger Entry".GETFILTER("Service Contract No."));
                          IF ServContractHdr.FIND('-') THEN BEGIN
                            REPEAT
                              ServContractHdr.CALCFIELDS("No. of Unposted Credit Memos");
                              IF ServContractHdr."No. of Unposted Credit Memos" <> 0 THEN BEGIN
                                ERROR(Text005,Text007,Text008,ServContractHdr."Contract No.",Text006);
                              END;
                            UNTIL ServContractHdr.NEXT = 0;
                          END;
                        END;

                        LastFieldNo := FIELDNO("Entry No.");
                        LastContract := '';
                        LastServiceLedgerEntryNo := 0;
                        IF UntilDate = 0D THEN
                          ERROR(Text000);
                        IF PostingDate = 0D THEN
                          ERROR(Text001);

                        SETRANGE("Posting Date",0D,UntilDate);

                        NoOfContracts := "Service Ledger Entry".COUNT;

                        Window.OPEN(
                          Text002 +
                          Text003 +
                          '@2@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@');

                        ServMgtSetup.GET;
                        ServMgtSetup.TESTFIELD("Prepaid Posting Document Nos.");
                        SourceCodeSetup.GET;
                        SourceCodeSetup.TESTFIELD("Service Management");
                      END;

        OnAfterGetRecord=BEGIN
                           Counter := Counter + 1;
                           Window.UPDATE(1,"Service Ledger Entry"."Service Contract No.");
                           Window.UPDATE(2,ROUND(Counter / NoOfContracts * 10000,1));

                           ServLedgEntry.GET("Entry No.");
                           ServLedgEntry."Moved from Prepaid Acc." := TRUE;
                           ServLedgEntry.MODIFY;

                           IF (TotalAmount <> 0) AND (LastContract <> '') AND (LastContract <> "Service Contract No.") THEN
                             PostGenJnlLine;

                           LastServiceLedgerEntryNo := "Entry No.";
                           LastContract := "Service Contract No.";
                           TotalAmount := TotalAmount + "Amount (LCY)";
                         END;

        OnPostDataItem=BEGIN
                         IF PostPrepaidContracts = PostPrepaidContracts::"Post Prepaid Transactions" THEN
                           IF TotalAmount <> 0 THEN
                             PostGenJnlLine;
                       END;

        ReqFilterFields=Service Contract No.;
        TotalFields=Amount (LCY);
        GroupTotalFields=;
      }
      SECTIONS
      {
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=7150;
      Height=2200;
    }
    CONTROLS
    {
      { 1   ;Label        ;0    ;0    ;3300 ;423  ;ParentControl=2;
                                                   VertAlign=Bottom;
                                                   FontBold=No;
                                                   MultiLine=Yes;
                                                   CaptionML=[ENU=Post until Date;
                                                              ESP=Registra hasta fecha] }
      { 2   ;TextBox      ;3410 ;0    ;1800 ;423  ;HorzAlign=Right;
                                                   SourceExpr=UntilDate }
      { 3   ;Label        ;0    ;550  ;3300 ;423  ;ParentControl=4;
                                                   VertAlign=Bottom;
                                                   FontBold=No;
                                                   MultiLine=Yes;
                                                   CaptionML=[ENU=Posting Date;
                                                              ESP=Fecha registro] }
      { 4   ;TextBox      ;3410 ;567  ;1800 ;423  ;HorzAlign=Right;
                                                   SourceExpr=PostingDate }
      { 5   ;OptionButton ;3410 ;1210 ;3740 ;440  ;CaptionML=[ENU=Post Prepaid Transactions;
                                                              ESP=Regis. transacciones prepag.];
                                                   SourceExpr=PostPrepaidContracts;
                                                   OptionValue=Post Prepaid Transactions }
      { 6   ;Label        ;0    ;1210 ;3300 ;440  ;CaptionML=[ENU=Action;
                                                              ESP=Acci¢n] }
      { 9   ;OptionButton ;3410 ;1760 ;3740 ;440  ;CaptionML=[ENU=Print Only;
                                                              ESP=S¢lo imprimir];
                                                   SourceExpr=PostPrepaidContracts;
                                                   OptionValue=Print Only }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             ESP=Opciones] }

      { 2   ;2   ;Field     ;
                  CaptionML=[ENU=Post until Date;
                             ESP=Registra hasta fecha];
                  SourceExpr=UntilDate;
                  MultiLine=Yes }

      { 4   ;2   ;Field     ;
                  CaptionML=[ENU=Posting Date;
                             ESP=Fecha registro];
                  SourceExpr=PostingDate;
                  MultiLine=Yes }

      { 5   ;2   ;Field     ;
                  CaptionML=[ENU=Action;
                             ESP=Acci¢n];
                  OptionCaptionML=[ENU=Post Prepaid Transactions,Print Only;
                                   ESP=Regis. transacciones prepag.,S¢lo imprimir];
                  SourceExpr=PostPrepaidContracts }

    }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=You must fill in the Post Until Date field.;ESP=Debe rellenar el campo Registra hasta fecha.';
      Text001@1001 : TextConst 'ENU=You must fill in the Posting Date field.;ESP=Debe rellenar el campo Fecha registro.';
      Text002@1002 : TextConst 'ENU=Posting prepaid contract entries...\;ESP=Registrando movs. contrato prepag....\';
      Text003@1003 : TextConst 'ENU=Service Contract: #1###############\\;ESP=Contrato servicio: #1###############\\';
      Text004@1004 : TextConst 'ENU=Service Contract;ESP=Contrato servicio';
      GenJnlLine@1005 : Record 81;
      ServLedgEntry@1006 : Record 5907;
      ServLedgEntry2@1007 : Record 5907;
      ServContractAccGr@1028 : Record 5973;
      ServMgtSetup@1008 : Record 5911;
      SourceCodeSetup@1009 : Record 242;
      LedgEntryDim@1010 : Record 355;
      ServContractHdr@1029 : Record 5965;
      JnlLineDim@1011 : Record 356;
      NoSeriesMgt@1012 : Codeunit 396;
      DimMgt@1013 : Codeunit 408;
      GenJnlPostLine@1014 : Codeunit 12;
      PrepaidContractEntriesTest@1027 : Report 5986;
      Window@1015 : Dialog;
      PostPrepaidContracts@1016 : 'Post Prepaid Transactions,Print Only';
      DocNo@1017 : Code[20];
      LastFieldNo@1018 : Integer;
      UntilDate@1019 : Date;
      PostingDate@1020 : Date;
      NoOfContracts@1021 : Integer;
      Counter@1022 : Integer;
      TotalAmount@1023 : Decimal;
      LastContract@1024 : Code[20];
      LastServiceLedgerEntryNo@1025 : Integer;
      ServLedgerFilters@1026 : Text[250];
      Text005@1030 : TextConst 'ENU=You cannot post %1 because %2 %3 has at least one %4 linked to it.;ESP=No puede registrar %1 porque %2 %3 tiene al menos un %4 vinculado.';
      Text006@1102601000 : TextConst 'ENU=Unposted Credit Memo;ESP=Abono no registrado';
      Text007@1102601001 : TextConst 'ENU=Prepaid Contract Entries;ESP=Mov. contrato prepago';
      Text008@1102601002 : TextConst 'ENU=Service Contract;ESP=Contrato servicio';

    PROCEDURE PostGenJnlLine@1();
    BEGIN
      IF NOT ServLedgEntry2.GET(LastServiceLedgerEntryNo) THEN
        EXIT;

      DocNo := NoSeriesMgt.GetNextNo(ServMgtSetup."Prepaid Posting Document Nos.",WORKDATE,TRUE);

      GenJnlLine.RESET;
      GenJnlLine.INIT;
      GenJnlLine."Document No." := DocNo;
      GenJnlLine."Account Type" := GenJnlLine."Account Type"::"G/L Account";
      GenJnlLine."VAT Posting" := GenJnlLine."VAT Posting"::"Manual VAT Entry";
      ServContractAccGr.GET(ServLedgEntry2."Serv. Contract Acc. Gr. Code");
      ServContractAccGr.TESTFIELD("Non-Prepaid Contract Acc.");
      GenJnlLine.VALIDATE("Account No.",ServContractAccGr."Non-Prepaid Contract Acc.");
      GenJnlLine."Posting Date" := PostingDate;
      GenJnlLine.Description := Text004;
      GenJnlLine."External Document No." := ServLedgEntry2."Service Contract No.";
      GenJnlLine.VALIDATE(Amount,TotalAmount);
      GenJnlLine."Shortcut Dimension 1 Code" := ServLedgEntry2."Global Dimension 1 Code";
      GenJnlLine."Shortcut Dimension 2 Code" := ServLedgEntry2."Global Dimension 2 Code";
      GenJnlLine."Source Code" := SourceCodeSetup."Service Management";
      GenJnlLine."System-Created Entry" := TRUE;
      GenJnlLine."Gen. Posting Type" := GenJnlLine."Gen. Posting Type"::" ";
      GenJnlLine."Gen. Bus. Posting Group" := '';
      GenJnlLine."Gen. Prod. Posting Group" := '';
      GenJnlLine."VAT Bus. Posting Group" := '';
      GenJnlLine."VAT Prod. Posting Group" := '';

      DimMgt.DeleteJnlLineDim(
        DATABASE::"Gen. Journal Line",'','',0,0);

      LedgEntryDim.RESET;
      LedgEntryDim.SETRANGE("Table ID",DATABASE::"Service Ledger Entry");
      LedgEntryDim.SETRANGE("Entry No.",ServLedgEntry2."Entry No.");
      IF LedgEntryDim.FIND('-') THEN BEGIN
        REPEAT
          JnlLineDim.INIT;
          JnlLineDim."Table ID" := DATABASE::"Gen. Journal Line";
          JnlLineDim."Journal Line No." := 0;
          JnlLineDim."Allocation Line No." := 0;
          JnlLineDim."Dimension Code" := LedgEntryDim."Dimension Code";
          JnlLineDim."Dimension Value Code" := LedgEntryDim."Dimension Value Code";
          JnlLineDim.INSERT;
        UNTIL LedgEntryDim.NEXT = 0;
      END;

      JnlLineDim.RESET;
      JnlLineDim.SETRANGE("Table ID",DATABASE::"Gen. Journal Line");
      JnlLineDim.SETRANGE("Journal Template Name",'');
      JnlLineDim.SETRANGE("Journal Batch Name",'');
      JnlLineDim.SETRANGE("Journal Line No.",0);
      JnlLineDim.SETRANGE("Allocation Line No.",0);
      GenJnlPostLine.RunWithCheck(GenJnlLine,JnlLineDim);

      ServContractAccGr.GET(ServLedgEntry2."Serv. Contract Acc. Gr. Code");
      ServContractAccGr.TESTFIELD("Prepaid Contract Acc.");
      GenJnlLine.VALIDATE("Account No.",ServContractAccGr."Prepaid Contract Acc.");
      GenJnlLine.VALIDATE(Amount,-TotalAmount);
      GenJnlLine."Shortcut Dimension 1 Code" := ServLedgEntry2."Global Dimension 1 Code";
      GenJnlLine."Shortcut Dimension 2 Code" := ServLedgEntry2."Global Dimension 2 Code";
      GenJnlLine."Gen. Posting Type" := GenJnlLine."Gen. Posting Type"::" ";
      GenJnlLine."Gen. Bus. Posting Group" := '';
      GenJnlLine."Gen. Prod. Posting Group" := '';
      GenJnlLine."VAT Bus. Posting Group" := '';
      GenJnlLine."VAT Prod. Posting Group" := '';

      DimMgt.DeleteJnlLineDim(
        DATABASE::"Gen. Journal Line",'','',0,0);

      LedgEntryDim.RESET;
      LedgEntryDim.SETRANGE("Table ID",DATABASE::"Service Ledger Entry");
      LedgEntryDim.SETRANGE("Entry No.",ServLedgEntry2."Entry No.");
      IF LedgEntryDim.FIND('-') THEN BEGIN
        REPEAT
          JnlLineDim.INIT;
          JnlLineDim."Table ID" := DATABASE::"Gen. Journal Line";
          JnlLineDim."Journal Line No." := 0;
          JnlLineDim."Allocation Line No." := 0;
          JnlLineDim."Dimension Code" := LedgEntryDim."Dimension Code";
          JnlLineDim."Dimension Value Code" := LedgEntryDim."Dimension Value Code";
          JnlLineDim.INSERT;
        UNTIL LedgEntryDim.NEXT = 0;
      END;

      JnlLineDim.RESET;
      JnlLineDim.SETRANGE("Table ID",DATABASE::"Gen. Journal Line");
      JnlLineDim.SETRANGE("Journal Template Name",'');
      JnlLineDim.SETRANGE("Journal Batch Name",'');
      JnlLineDim.SETRANGE("Journal Line No.",0);
      JnlLineDim.SETRANGE("Allocation Line No.",0);
      GenJnlPostLine.RunWithCheck(GenJnlLine,JnlLineDim);

      TotalAmount := 0;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}
