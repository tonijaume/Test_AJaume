OBJECT Report 7009997 Prevision Cierre llegadas
{
  OBJECT-PROPERTIES
  {
    Date=02/10/12;
    Time=12:00:00;
    Modified=Yes;
    Version List=AIC2009;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Arrivals closure forecast;
               ESP=Prevision Cierre llegadas];
    ProcessingOnly=Yes;
  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table7010018;
        DataItemTableView=SORTING(Delegacion,TourOperador,Bono,N§ Reserva,N§ Secuencia,N§ Orden);
        DataItemVarName=Costes;
        OnPreDataItem=BEGIN
                        IF Costes.GETFILTER(Delegacion) = '' THEN
                          ERROR(Text000);
                        rCie.SETCURRENTKEY("N§ Cierre");
                        IF rCie.FIND('+') THEN
                          ultimo_cierre := rCie."N§ Cierre" + 1
                        ELSE
                          ultimo_cierre := 1;
                        rCie.RESET;
                      END;

        OnAfterGetRecord=BEGIN
                           IF Costes."N§ cierre central" <> 0 THEN
                             CurrReport.SKIP;
                           busca_bono(Costes);
                           IF sw THEN
                             CurrReport.SKIP;
                           rCie.SETRANGE(Delegacion    , Delegacion);
                           rCie.SETRANGE(TourOperador  , TourOperador);
                           IF rCon."Tipo de Contrato" = rCon2."Tipo de Contrato"::"En nombre propio" THEN BEGIN
                             IF rRes.Circuito <> '' THEN
                               rCie.SETRANGE("Tipo bono"   , rCie."Tipo bono"::"Circuito Nombre Propio")
                             ELSE
                               rCie.SETRANGE("Tipo bono"   , rCie."Tipo bono"::"Nombre Propio");
                           END
                           ELSE BEGIN
                             IF rRes.Circuito <> '' THEN
                               rCie.SETRANGE("Tipo bono"   , rCie."Tipo bono"::"Circuito Intermediacion")
                             ELSE
                               rCie.SETRANGE("Tipo bono"   , rCie."Tipo bono"::Intermediacion);
                           END;
                           rCie.SETRANGE(Hotel         , "Hotel Pago");
                           rCie.SETRANGE("Fecha cierre", "Fecha llegada");
                           rCie.SETRANGE("N§ Cierre"   , ultimo_cierre);
                           IF rCie.FIND('-') THEN BEGIN
                             rCie."Total coste" := rCie."Total coste" + Coste;
                             rCie.MODIFY;
                           END
                           ELSE BEGIN
                             rCie.INIT;
                             rCie.Delegacion := Delegacion;
                             rCie.TourOperador := TourOperador;
                             rCie.Hotel := "Hotel Pago";
                             IF rCon."Tipo de Contrato" = rCon."Tipo de Contrato"::"En nombre propio" THEN BEGIN
                               IF rRes.Circuito <> '' THEN
                                 rCie."Tipo bono" := rCie."Tipo bono"::"Circuito Nombre Propio"
                               ELSE
                                 rCie."Tipo bono" := rCie."Tipo bono"::"Nombre Propio";
                             END
                             ELSE BEGIN
                               IF rRes.Circuito <> '' THEN
                                 rCie."Tipo bono" := rCie."Tipo bono"::"Circuito Intermediacion"
                               ELSE
                                 rCie."Tipo bono" := rCie."Tipo bono"::Intermediacion;
                             END;
                             rCie."Fecha cierre" := "Fecha llegada";
                             rCie."N§ Cierre" := ultimo_cierre;
                             rCie."Total coste" := Coste;
                             rCie.Contabilizado := FALSE;
                             IF rDimVal.Code = '' THEN
                               rCie."Global Dimension 1 Code" := Delegacion
                             ELSE
                               rCie."Global Dimension 1 Code" := rDimVal.Code;
                             rCie.INSERT;
                           END;
                           "N§ cierre central" := ultimo_cierre;
                           Costes.MODIFY;
                           acumular_provision(Costes);
                         END;

        ReqFilterFields=Delegacion,Fecha llegada,Hotel Pago;
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=18150;
            SectionHeight=0;
          }
          CONTROLS
          {
          }
           }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=7150;
      Height=880;
      CaptionML=[ENU=Arrivals closure forecast;
                 ESP=Prevision Cierre llegadas];
    }
    CONTROLS
    {
      { 1   ;Label        ;220  ;220  ;3300 ;440  ;CaptionML=[ENU=Deparment code;
                                                              ESP=Cod. Departamento] }
      { 2   ;TextBox      ;3630 ;220  ;3300 ;440  ;SourceExpr=rDimVal.Code;
                                                   TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1)) }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      Text000@1103355012 : TextConst 'ENU=Must indicate a Local Office;ESP=Se debe indicar una Delegacion.';
      rDel@1103355000 : Record 7009718;
      rCie@1103355001 : Record 7010012;
      rBono@1103355002 : Record 7010013;
      rCon@1103355003 : Record 7009723;
      rCon2@1103355004 : Record 7009723;
      rRes@1103355005 : Record 7009771;
      rDimVal@1103355006 : Record 349;
      delegacion_anterior@1103355007 : Code[10];
      bono_anterior@1103355008 : Code[10];
      ultimo_cierre@1103355009 : Integer;
      sw@1103355010 : Boolean;
      ok@1103355011 : Boolean;

    PROCEDURE busca_bono@7(coste@1103355000 : Record 7010018) : Boolean;
    BEGIN
      sw := FALSE;
      rBono.SETRANGE(Delegacion    , coste.Delegacion);
      rBono.SETRANGE(TourOperador  , coste.TourOperador);
      rBono.SETRANGE(Bono          , coste.Bono);
      rBono.SETRANGE("N§ Reserva"  , coste."N§ Reserva");
      rBono.SETRANGE("N§ Secuencia", coste."N§ Secuencia");
      IF rBono.FIND('-') THEN BEGIN
        IF (rBono."Creado por" = rBono."Creado por"::Regularizacion) AND (rBono."Bono garantia") THEN
          sw := TRUE;
      END;
      rBono.RESET;

      ok := rCon.GET(rBono.Delegacion, rBono."N§ Contrato");

      CLEAR(rRes);
      rRes.SETCURRENTKEY(Delegacion,
                         TourOperador,
                         Bono,
                         "N§ Reserva",
                         "N§ Cierre");
      rRes.SETRANGE(Delegacion  , rBono.Delegacion);
      rRes.SETRANGE(TourOperador, rBono."TourOperador Compra");
      rRes.SETRANGE(Bono        , rBono.Bono);
      rRes.SETRANGE("N§ Reserva", rBono."N§ Reserva");
      IF rRes.FIND('+') THEN
        ;
    END;

    PROCEDURE acumular_provision@3(coste@1103355000 : Record 7010018);
    BEGIN
      rBono.SETRANGE(Delegacion    , coste.Delegacion);
      rBono.SETRANGE(TourOperador  , coste.TourOperador);
      rBono.SETRANGE(Bono          , coste.Bono);
      rBono.SETRANGE("N§ Reserva"  , coste."N§ Reserva");
      rBono.SETRANGE("N§ Secuencia", coste."N§ Secuencia");
      IF rBono.FIND('-') THEN BEGIN
        rBono."Provision generada" := rBono."Provision generada" + coste.Coste;
        rBono.MODIFY;
      END;
      rBono.RESET;
    END;

    BEGIN
    {
      JPT 26/11/08  Cambio Ordenacion clave
      (Delegacion,TourOperador,Bono,Hotel Pago,N§ Reserva,N§ Orden)
      Por clave primaria, ya que es el unico sitio en la que se emplea.
    }
    END.
  }
  RDLDATA
  {
  }
}
