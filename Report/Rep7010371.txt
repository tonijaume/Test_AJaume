OBJECT Report 7010371 Factura Transunion
{
  OBJECT-PROPERTIES
  {
    Date=16/10/09;
    Time=12:34:34;
    Version List=TRANSFER,TRN;
  }
  PROPERTIES
  {
    CaptionML=ESP=Factura Transunion;
    LeftMargin=1500;
    OnInitReport=BEGIN

                   rInfEmp.FINDFIRST;
                   rInfEmp.CALCFIELDS(Picture);
                   rPar.GET;
                 END;

  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table7010415;
        DataItemTableView=SORTING(N§ Prefactura);
        NewPagePerRecord=Yes;
        DataItemVarName=Prefactura;
        OnPreDataItem=BEGIN
                        LastFieldNo := FIELDNO("N§ Prefactura");
                      END;

        OnAfterGetRecord=BEGIN
                           IF NOT CurrReport.PREVIEW THEN BEGIN // Marca la prefactura como impresa;
                             CASE Imprimir OF
                               Imprimir::Prefactura: Prefactura."Prefactura Impresa":= TRUE;
                               Imprimir::Factura   : Prefactura."Factura Impresa"   := TRUE;
                             END;
                             MODIFY;
                           END;

                           CASE Imprimir OF
                             Imprimir::Prefactura: wTextoAlternativo := "Tipo prefactura" = "Tipo prefactura"::"Texto alternativo";
                             Imprimir::Factura   : wTextoAlternativo := "Tipo factura"    = "Tipo factura"::"Texto alternativo";
                           END;

                           // AJS 28.04.2004
                           // En la impresion de las facturas tomaremos los datos fiscales de la cabecera de factura
                           // para el caso de los clientes varios

                           CLEAR(wDirClie);
                           CLEAR(wCifNif);
                           { JPT 14/11/06 Ahora los datos estan en la prefactura
                           IF Prefactura.Facturada THEN BEGIN
                             rFraVenta.RESET;
                             rFraVenta.SETFILTER("Document Type",'%1|%2',rFraVenta."Document Type"::Invoice,rFraVenta."Document Type"::"Credit Memo");
                             rFraVenta.SETRANGE("No.", Prefactura."N§ Factura");
                             IF rFraVenta.FINDFIRST THEN BEGIN
                               IF rFraVenta."Posting Date" = Prefactura."Fecha Registro factura" THEN BEGIN
                                 //FormatDire.SalesHeaderSellTo(wDirClie, rFraVenta);
                                 //wCifNif := rFraVenta."VAT Registration No.";
                               END
                               ELSE BEGIN
                                 IF rCliente.GET(Cliente) THEN BEGIN
                                   //FormatDire.Customer(wDirClie,rCliente);
                                   //wCifNif := rCliente."VAT Registration No.";
                                 END;
                               END;
                             END
                             ELSE BEGIN
                               IF rCliente.GET(Cliente) THEN BEGIN
                                 //FormatDire.Customer(wDirClie,rCliente);
                                 //wCifNif := rCliente."VAT Registration No.";
                               END;
                             END;
                           END
                           ELSE BEGIN
                             rCliente.RESET;
                             IF rCliente.GET(Cliente) THEN BEGIN
                               FormatDire.Customer(wDirClie,rCliente);
                               wCifNif := rCliente."VAT Registration No.";
                             END;
                           END;
                           }
                           Prefactura.DevuelveDatosCli(wDirClie);
                           wCifNif := wDirClie[8];

                           CASE Imprimir OF
                             Imprimir::Prefactura : BEGIN
                               wFecha   := "Fecha Registro factura"; // TEST AJS ANTES PONIA FECHA
                               wNo      := Prefactura."N§ Prefactura";
                               // Para no tener que duplicar codigo asigno el tipo de prefactura a la factura (OJO A NO VALIDAR)
                               "Tipo factura" := "Tipo prefactura";
                             END;

                             Imprimir::Factura : BEGIN
                               wFecha := "Fecha Registro factura";
                               wNo    := Prefactura."N§ Factura";
                             END;
                           END;

                           rTempIVA.RESET;
                           IF rTempIVA.FINDFIRST THEN
                             rTempIVA.DELETEALL;

                           Prefactura.BuscaTotalIVA(rTempIVA); // Busca el desglose del iva

                           CLEAR(wTotal);
                           CurrReport.PAGENO:=1;

                           // Borramos el temporal de Total transportados
                           rTempRangPre.RESET;
                           IF rTempRangPre.FINDFIRST THEN
                             rTempRangPre.DELETEALL;

                           CLEAR(wMostrarSubt);
                           CLEAR(rCondFact);
                         END;

        ReqFilterFields=N§ Prefactura,N§ Factura,Fecha Registro factura;
        GroupTotalFields=N§ Prefactura;
      }
      SECTIONS
      {
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number);
        MaxIteration=1;
        DataItemVarName=Cabecera;
        OnPreDataItem=BEGIN
                        // Solo se utiliza para impresi¢n de la cabecera
                      END;

        OnAfterGetRecord=BEGIN

                           // Informaci¢n cabecera empresa
                           CLEAR(wInfEmp);
                           // JPT 30/05/05  Si es ha utilizado una serie alternativa (la de contrato) no deben aparecer los datos de empresa
                           IF NOT Prefactura."No Serie Alternativa" THEN BEGIN
                             wInfEmp[1]:= rInfEmp.Name;
                             wInfEmp[2]:= rInfEmp.Address;
                             wInfEmp[3]:= rInfEmp."Post Code" + ' ' + rInfEmp.City;
                             wInfEmp[4]:= Text50000 + rInfEmp."Phone No.";
                             wInfEmp[5]:= Text50001 + rInfEmp."Fax No.";
                             wInfEmp[6]:= Text50002 + rInfEmp."VAT Registration No.";
                           END;
                         END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Header;
            PrintOnEveryPage=Yes;
            SectionWidth=18450;
            SectionHeight=4653;
          }
          CONTROLS
          {
            { 1100244004;TextBox;18000;0    ;450  ;423  ;CaptionML=ESP=P gina;
                                                         SourceExpr=CurrReport.PAGENO }
            { 1100244005;Label  ;17100;0    ;900  ;423  ;ParentControl=1100244004 }
            { 1100244000;TextBox;11250;423  ;7200 ;423  ;FontSize=9;
                                                         SourceExpr=wDirClie[1] }
            { 1100244007;TextBox;11250;846  ;7200 ;423  ;FontSize=9;
                                                         SourceExpr=wDirClie[2] }
            { 1100244010;TextBox;11250;1269 ;7200 ;423  ;FontSize=9;
                                                         SourceExpr=wDirClie[3] }
            { 1100244013;TextBox;11250;1692 ;7200 ;423  ;FontSize=9;
                                                         SourceExpr=wDirClie[4] }
            { 1100244015;TextBox;150  ;0    ;7350 ;423  ;FontSize=9;
                                                         FontBold=Yes;
                                                         SourceExpr=wInfEmp[1] }
            { 1100244016;TextBox;150  ;423  ;7350 ;423  ;SourceExpr=wInfEmp[2] }
            { 1100244017;TextBox;150  ;846  ;7350 ;423  ;SourceExpr=wInfEmp[3] }
            { 1100244018;TextBox;150  ;1269 ;7350 ;423  ;SourceExpr=wInfEmp[4] }
            { 1100244019;TextBox;150  ;1692 ;7350 ;423  ;SourceExpr=wInfEmp[5] }
            { 1100244021;TextBox;150  ;2115 ;7350 ;423  ;SourceExpr=wInfEmp[6] }
            { 1100244045;TextBox;150  ;3807 ;18300;846  ;FontSize=10;
                                                         SourceExpr=Prefactura."Texto Registro" }
            { 1100244006;TextBox;2250 ;2961 ;2550 ;423  ;HorzAlign=Left;
                                                         VertAlign=Bottom;
                                                         FontSize=11;
                                                         FontBold=Yes;
                                                         SourceExpr=Prefactura.Imprimir }
            { 1100244012;TextBox;2250 ;3384 ;2550 ;423  ;HorzAlign=Left;
                                                         FontSize=11;
                                                         SourceExpr=wNo }
            { 1100244001;TextBox;150  ;3384 ;1950 ;423  ;HorzAlign=Left;
                                                         FontSize=11;
                                                         CaptionML=ESP=Fecha;
                                                         SourceExpr=wFecha }
            { 1100244002;Label  ;150  ;2961 ;1950 ;423  ;ParentControl=1100244001;
                                                         HorzAlign=Left;
                                                         VertAlign=Bottom;
                                                         FontSize=11;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1103355002;TextBox;11250;2961 ;7200 ;423  ;FontSize=9;
                                                         SourceExpr=wDirClie[7] }
            { 1103355003;TextBox;11250;2538 ;7200 ;423  ;FontSize=9;
                                                         SourceExpr=wDirClie[6] }
            { 1103355004;TextBox;11250;2115 ;7200 ;423  ;FontSize=9;
                                                         SourceExpr=wDirClie[5] }
            { 1103355005;TextBox;11250;3384 ;7200 ;423  ;FontSize=9;
                                                         SourceExpr=wDirClie[8] }
          }
           }
        { PROPERTIES
          {
            SectionType=Header;
            PrintOnEveryPage=Yes;
            SectionWidth=18450;
            SectionHeight=1269;
            OnPreSection=BEGIN
                           //CurrReport.SHOWOUTPUT(NOT wTextoAlternativo);
                         END;

          }
          CONTROLS
          {
            { 1100244024;Label  ;16800;0    ;1650 ;846  ;ParentControl=1100244023;
                                                         HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=ESP=Importe }
            { 1100244034;Label  ;15450;0    ;1200 ;846  ;ParentControl=1100244033;
                                                         HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=ESP=Precio }
            { 1100244027;Label  ;7800 ;0    ;7500 ;846  ;ParentControl=1100244026;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1100244020;Label  ;4950 ;0    ;1050 ;846  ;HorzAlign=Left;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=ESP=Plazas }
            { 1100244022;Label  ;3900 ;0    ;900  ;846  ;ParentControl=1100244011;
                                                         HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1100244030;Label  ;1800 ;0    ;1950 ;846  ;ParentControl=1100244029;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes }
            { 1100244009;Label  ;150  ;0    ;1500 ;846  ;ParentControl=1100244008;
                                                         HorzAlign=Left;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1100244028;Shape  ;150  ;846  ;18300;423  ;ShapeStyle=HorzLine }
          }
           }
        { PROPERTIES
          {
            SectionType=Header;
            PrintOnEveryPage=Yes;
            SectionWidth=18450;
            SectionHeight=1269;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT(wTextoAlternativo AND (Prefactura."Texto alternativo" <>''));
                         END;

          }
          CONTROLS
          {
            { 1100244053;TextBox;150  ;423  ;18300;846  ;HorzAlign=Left;
                                                         VertAlign=Top;
                                                         FontSize=9;
                                                         MultiLine=Yes;
                                                         SourceExpr=Prefactura."Texto alternativo" }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=2;
        DataItemTable=Table7035394;
        DataItemTableView=SORTING(Tipo,Codigo,No Linea)
                          WHERE(Tipo=CONST(Prefactura));
        OnPreDataItem=BEGIN
                        IF NOT wTextoAlternativo THEN // Solo para facturas de texto alternativo
                          CurrReport.BREAK;
                      END;

        DataItemLinkReference=Prefactura;
        DataItemLink=Codigo=FIELD(N§ Prefactura);
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=18450;
            SectionHeight=423;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT(wTextoAlternativo);
                         END;

          }
          CONTROLS
          {
            { 1103355000;TextBox;0    ;0    ;16500;423  ;FontSize=9;
                                                         SourceExpr=Texto }
            { 1103355001;TextBox;16650;0    ;1650 ;423  ;FontSize=9;
                                                         SourceExpr=Importe }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=2;
        DataItemTable=Table7010417;
        DataItemTableView=SORTING(N§ Prefactura,Fecha,Codigo Servicio,Hora,Parte,Tipo)
                          WHERE(Tipo=FILTER(Base|Suplemento|Extra|Zona));
        DataItemVarName=Linea;
        OnPreDataItem=BEGIN

                        CASE Prefactura."Tipo factura" OF
                          Prefactura."Tipo factura"::"Resumen x Vuelo"     : SETCURRENTKEY("N§ Prefactura", Fecha, "Codigo Servicio", Vuelo);

                          Prefactura."Tipo factura"::"Resumen x Referencia": SETCURRENTKEY("N§ Prefactura", Fecha, Referencia);

                          {JPT 19,07.04 Se queja de este orden Maria
                          Prefactura."Tipo factura"::"Resumen x Referencia": SETCURRENTKEY("N§ Prefactura", "Codigo Servicio", Fecha,
                                                                                           Referencia, Parte, Tipo);}
                        END;
                        CLEAR(wTotalPaxT);

                        CurrReport.CREATETOTALS(wImporte);
                      END;

        OnAfterGetRecord=VAR
                           lrZona@1100244002 : Record 7010429;
                           lrCodSer@1100244000 : Record 7010320;
                           lrLin@1100244003 : Record 7010417;
                           lrTipVeh@1100244007 : Record 7010345;
                           lwZonas@1100244004 : Text[250];
                           lwCodSers@1100244006 : Text[250];
                           lwOk@1100244001 : Boolean;
                           lwText@1100244005 : Text[100];
                         BEGIN

                           CLEAR(wRefCliente);
                           CLEAR(wServicio);
                           CLEAR(lwZonas);
                           CLEAR(lwCodSers);
                           CLEAR(wPrecio);

                           IF NOT rParte.GET(Parte) THEN
                             CLEAR(rParte);

                           lwZonas   := lrLin.Zona;
                           lwCodSers := lrLin."Codigo Servicio";

                           IF lwZonas = '' THEN
                             lwZonas := Zona;

                           IF (lwCodSers='') OR (lwCodSers = "Codigo Servicio") THEN
                             lwCodSers := TextoCodigo("Codigo Servicio");

                           // Buscamos la referencia cliente, y el valor de la columna servicio

                           lrCodSer.RESET;
                           IF rCondFact.GET(Prefactura.Cliente, Touroperador, "Tipo Servicio Fijo") THEN BEGIN
                             wRefCliente := RefCliente(rCondFact);
                             wMostrarSubt:= rCondFact."Mostrar Subtotal sin maletas";

                             CASE Tipo OF
                               //IF "Cod Suplemento"= rPar."Codigo Ni¤o" THEN
                               Tipo::Base, Tipo::Zona: BEGIN
                                 CASE rCondFact."Contenido Columna Servicio" OF
                                   rCondFact."Contenido Columna Servicio"::"Codigo Servicio": BEGIN
                                       wServicio := lwCodSers;
                                     END;
                                   rCondFact."Contenido Columna Servicio"::Zona: BEGIN
                                     IF "Concepto facturacion" <> '' THEN
                                       wServicio := "Concepto facturacion"
                                     ELSE
                                       wServicio := lwZonas;
                                   END;
                                   rCondFact."Contenido Columna Servicio"::"Codigo Servicio + Zona": BEGIN
                                     IF "Concepto facturacion" <> '' THEN BEGIN
                                       CASE "Tipo Servicio Fijo" OF
                                         "Tipo Servicio Fijo"::Excursion: wServicio := "Concepto facturacion";
                                         "Tipo Servicio Fijo"::Traslado: wServicio := STRSUBSTNO('%1 (%2)', lwCodSers, "Concepto facturacion");
                                       END;
                                     END
                                     ELSE
                                       CASE "Tipo Servicio Fijo" OF
                                         "Tipo Servicio Fijo"::Traslado:  wServicio := STRSUBSTNO('%1 (%2)', lwCodSers, lwZonas);
                                         "Tipo Servicio Fijo"::Excursion: wServicio := lwCodSers;
                                       END;
                                   END;
                                 END;
                               END;
                               Tipo::Zona, Tipo::Suplemento:
                               BEGIN
                                 rCodSuplement.GET("Cod Suplemento");
                                 wServicio := rCodSuplement.Descripcion;
                               END;
                               Tipo::Extra:
                               BEGIN
                                 // En el campo "Cod suplemento" se almacenan tanto los codigos de suplemento como los codigos de extra

                                 rCodExt.GET("Cod Suplemento");
                                 wServicio := rCodExt.Descripcion;
                               END;
                             END;

                             { JPT 17/05/06
                             IF NOT rCondFact."Mostrar Precio en Factura" THEN
                               CLEAR("Precio sin impuestos");
                             }

                             CLEAR(wPax);
                             wPlazasTxt := '(' + FORMAT(Plazas) + ')';

                             IF rCondFact."Mostrar Paxes en Factura" THEN BEGIN
                               // IF Tipo=Tipo::Base THEN BEGIN
                               wPax := Pax;
                               // END;
                             END;

                           END;

                           IF "Precio manual" AND ("Concepto facturacion" <> '') THEN
                             wServicio := "Concepto facturacion";

                           CLEAR(lwText);
                           IF (Prefactura."Tipo prefactura" = Prefactura."Tipo prefactura"::"Resumen x Codigo") AND
                              ("Tipo aplicacion" = "Tipo aplicacion"::Vehiculo) THEN BEGIN
                             wPlazasTxt := '(' + FORMAT("N§ de Servicios") + ')';
                             IF "N§ de Servicios" = 1 THEN
                               lwText := Parte
                           END
                           ELSE BEGIN
                             IF "N§ de Servicios" = 1 THEN
                               lwText := Parte;
                           END;

                           wServicio := STRSUBSTNO('(%1) ', lwText) + wServicio;

                           IF (Prefactura."Tipo prefactura" = Prefactura."Tipo prefactura"::"Resumen x Referencia") THEN
                             wServicio := STRSUBSTNO(Text50003, Linea.Referencia) + wServicio;

                           IF rCondFact."Indicar Ma¤ana/Tarde" THEN BEGIN
                             IF rParte."Hora inicio"<> 0T THEN BEGIN
                               IF rParte."Hora inicio" < 140000T THEN
                                 wServicio += STRSUBSTNO(' (%1)', Text005)
                               ELSE
                                 wServicio += STRSUBSTNO(' (%1)', Text006);
                             END;
                           END;


                           CLEAR(wPrecioPor);
                           IF NOT "Precio manual" THEN BEGIN
                             CASE "Tipo aplicacion" OF
                               "Tipo aplicacion"::Pax: BEGIN

                                 // AJS 26.04.2004
                                 // Si el precio es por plaza y has mas de un touroperador en la prefactura mostrar el touroperador en la linea

                                 // AJS 27.04.2004
                                 // Hay una nueva condicion de facturacion para esta modificacion

                                 IF (Prefactura."Multiples touroperadores") AND rCondFact."Mostrar TTOO en linea factura" THEN
                                   wServicio := wServicio + ' ' + Linea.Touroperador;

                                 CASE "Cod Suplemento" OF
                                   rPar."Codigo Adulto" : wPrecioPor := Text003;
                                   rPar."Codigo Ni¤o"   : wPrecioPor := Text004;
                                 END;
                               END;
                               "Tipo aplicacion"::Vehiculo:BEGIN
                                 IF NOT lrTipVeh.GET(rParte."Tipo Vehiculo facturacion") THEN
                                   CLEAR(lrTipVeh);
                                 wPrecioPor := COPYSTR(lrTipVeh.Descripcion,1,MAXSTRLEN(wPrecioPor));
                               END;
                             END;
                           END;

                           // Tratamos el temporal de transportados

                           IF Tipo IN [Tipo::Base,Tipo::Zona] THEN BEGIN
                             // Solo Sumaremos transportados o servicios en caso que sean entradas o salidas
                             lwOk := "Codigo Servicio" IN [rPar."Codigo Salidas",rPar."Codigo Entradas"];
                             IF rCondFact."Totalizar Transportados" THEN BEGIN
                               CASE Prefactura."Modo Desglose Transportados" OF

                                 Prefactura."Modo Desglose Transportados"::"Sin desglose": BEGIN
                                   IF NOT rTempRangPre.GET('',0) THEN
                                     BEGIN
                                       CLEAR(rTempRangPre);
                                       rTempRangPre.INSERT;
                                     END;
                                     rTempRangPre.Pax += Pax;
                                     rTempRangPre.MODIFY;
                                 END;

                                 Prefactura."Modo Desglose Transportados"::"Entradas/Salidas": BEGIN
                                   IF "Tipo Servicio Fijo"="Tipo Servicio Fijo"::Traslado THEN BEGIN
                                     IF lwOk THEN BEGIN
                                       IF NOT rTempRangPre.GET("Codigo Servicio",0) THEN BEGIN
                                         CLEAR(rTempRangPre);
                                         rTempRangPre."N§ Prefactura" := "Codigo Servicio";
                                         CASE "Codigo Servicio" OF
                                           rPar."Codigo Salidas"  : rTempRangPre.Descripcion:= Text008;
                                         rPar."Codigo Entradas" : rTempRangPre.Descripcion:= Text007;
                                         END;
                                         rTempRangPre.INSERT;
                                       END;
                                       rTempRangPre.Pax += Pax;
                                       rTempRangPre.MODIFY;
                                     END;
                                   END;
                                 END;

                                 Prefactura."Modo Desglose Transportados"::"Rango Precio": BEGIN
                                   IF lwOk THEN BEGIN
                                     IF NOT rTempRangPre.GET('',Plazas) THEN BEGIN
                                       CLEAR(rTempRangPre);
                                       rTempRangPre."N§ Linea"  := Plazas;
                                       rTempRangPre.Descripcion := FORMAT(Plazas);
                                       IF lwOk THEN
                                         rTempRangPre.INSERT;
                                     END;
                                     rTempRangPre.Pax += Linea."N§ de Servicios";
                                     rTempRangPre.MODIFY;
                                   END;
                                 END;
                               END;
                             END;
                           END;

                           IF rCondFact."Mostrar Precios con Iva" THEN BEGIN
                             IF Prefactura."Mostrar Descuentos" THEN
                               wImporte := "Importe Con IVA Sin Dto"
                             ELSE
                               wImporte := "Importe con impuestos";
                             IF rCondFact."Mostrar Precio en Factura" THEN
                               wPrecio := "Precio con impuestos";
                           END ELSE
                           BEGIN
                             IF Prefactura."Mostrar Descuentos" THEN
                               wImporte := "Importe Sin IVA Sin Dto"
                             ELSE
                               wImporte := "Importe sin impuestos";
                             IF rCondFact."Mostrar Precio en Factura" THEN
                               wPrecio := "Precio sin impuestos";
                           END;
                         END;

        TotalFields=Importe Sin IVA Sin Dto;
        DataItemLinkReference=Prefactura;
        DataItemLink=N§ Prefactura=FIELD(N§ Prefactura);
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=18450;
            SectionHeight=423;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT(((Tipo = Tipo::Base) OR (Tipo = Tipo::Zona)) AND (NOT wTextoAlternativo));
                         END;

          }
          CONTROLS
          {
            { 1100244008;TextBox;150  ;0    ;1500 ;423  ;HorzAlign=Left;
                                                         FontSize=9;
                                                         BlankZero=Yes;
                                                         SourceExpr=Fecha }
            { 1100244011;TextBox;3900 ;0    ;900  ;423  ;HorzAlign=Right;
                                                         FontSize=9;
                                                         CaptionML=ESP=Pax;
                                                         DecimalPlaces=0:2;
                                                         BlankZero=Yes;
                                                         SourceExpr=wPax }
            { 1100244023;TextBox;16800;0    ;1650 ;423  ;FontSize=9;
                                                         DecimalPlaces=2:2;
                                                         SourceExpr=wImporte }
            { 1100244026;TextBox;7800 ;0    ;7500 ;423  ;FontSize=9;
                                                         CaptionML=ESP=Servicio;
                                                         SourceExpr=wServicio }
            { 1100244029;TextBox;1800 ;0    ;1950 ;423  ;FontSize=9;
                                                         CaptionML=ESP=Ref. Cliente;
                                                         SourceExpr=wRefCliente }
            { 1100244033;TextBox;15450;0    ;1200 ;423  ;FontSize=9;
                                                         CaptionML=ESP=Precio;
                                                         DecimalPlaces=0:2;
                                                         BlankZero=Yes;
                                                         SourceExpr=wPrecio }
            { 1100244048;TextBox;4950 ;0    ;1050 ;423  ;HorzAlign=Center;
                                                         FontSize=9;
                                                         BlankZero=Yes;
                                                         SourceExpr=wPlazasTxt }
            { 1100244052;TextBox;6150 ;0    ;1500 ;423  ;HorzAlign=Left;
                                                         FontSize=9;
                                                         SourceExpr=wPrecioPor }
          }
           }
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=18450;
            SectionHeight=423;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT(((Tipo = Tipo::Suplemento) OR (Tipo = Tipo::Extra)) AND (NOT wTextoAlternativo));
                         END;

          }
          CONTROLS
          {
            { 1100244059;TextBox;16800;0    ;1650 ;423  ;FontSize=9;
                                                         DecimalPlaces=2:2;
                                                         SourceExpr=wImporte }
            { 1100244061;TextBox;7800 ;0    ;7500 ;423  ;FontSize=9;
                                                         CaptionML=ESP=Servicio;
                                                         SourceExpr=wServicio }
            { 1100244060;TextBox;4950 ;0    ;1050 ;423  ;HorzAlign=Center;
                                                         FontSize=9;
                                                         BlankZero=Yes;
                                                         SourceExpr=wPlazasTxt }
            { 1100244062;TextBox;15450;0    ;1200 ;423  ;FontSize=9;
                                                         CaptionML=ESP=Precio;
                                                         DecimalPlaces=0:2;
                                                         BlankZero=Yes;
                                                         SourceExpr=wPrecio }
            { 1100244057;TextBox;1800 ;0    ;1950 ;423  ;FontSize=9;
                                                         CaptionML=ESP=Ref. Cliente;
                                                         SourceExpr=wRefCliente }
            { 1100244058;TextBox;150  ;0    ;1500 ;423  ;HorzAlign=Left;
                                                         FontSize=9;
                                                         BlankZero=Yes;
                                                         SourceExpr=Fecha }
          }
           }
        { PROPERTIES
          {
            SectionType=TransFooter;
            SectionWidth=18450;
            SectionHeight=423;
            OnPreSection=BEGIN
                           IF Prefactura."Mostrar Descuentos" THEN
                             wImporte2 := "Importe Sin IVA Sin Dto"
                           ELSE
                             wImporte2 := "Importe sin impuestos";
                         END;

          }
          CONTROLS
          {
            { 1100244047;Label  ;14550;0    ;2100 ;423  ;HorzAlign=Right;
                                                         FontSize=9;
                                                         CaptionML=ESP=Suma y sigue }
            { 1100244065;TextBox;16800;0    ;1650 ;423  ;FontSize=9;
                                                         DecimalPlaces=2:2;
                                                         SourceExpr=wImporte }
          }
           }
        { PROPERTIES
          {
            SectionType=Footer;
            SectionWidth=18450;
            SectionHeight=846;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT(wMostrarSubt);

                           IF Prefactura."Mostrar Descuentos" THEN
                             wImporte2 := "Importe Sin IVA Sin Dto"
                           ELSE
                             wImporte2 := "Importe sin impuestos";
                         END;

          }
          CONTROLS
          {
            { 1100244003;TextBox;16650;423  ;1800 ;423  ;FontSize=9;
                                                         FontBold=Yes;
                                                         DecimalPlaces=2:2;
                                                         SourceExpr=wImporte }
            { 1100253000;Label  ;13800;423  ;2700 ;423  ;HorzAlign=Right;
                                                         FontSize=9;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=SubTotal }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=3;
        DataItemTable=Table7010417;
        DataItemTableView=SORTING(N§ Prefactura,Fecha,Codigo Servicio,Hora,Parte,Tipo)
                          WHERE(Tipo=FILTER(Localizador));
        DataItemVarName=Localizadores;
        DataItemLinkReference=Linea;
        DataItemLink=N§ Prefactura=FIELD(N§ Prefactura),
                     Parte=FIELD(Parte),
                     Cod Suplemento=FIELD(Cod Suplemento);
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=18450;
            SectionHeight=423;
            OnPreSection=BEGIN
                           // AJS 13.06.2008

                           CurrReport.SHOWOUTPUT(wDesgloseLoc);
                         END;

          }
          CONTROLS
          {
            { 1103355013;TextBox;2850 ;0    ;3300 ;423  ;FontSize=9;
                                                         SourceExpr=Referencia }
            { 1103355014;TextBox;6300 ;0    ;8250 ;423  ;FontSize=9;
                                                         CaptionML=ESP=Servicio;
                                                         SourceExpr="Concepto facturacion" }
            { 1103355015;TextBox;14850;0    ;600  ;423  ;FontSize=9;
                                                         SourceExpr=Pax }
            { 1103355017;TextBox;15750;0    ;600  ;423  ;HorzAlign=Left;
                                                         FontSize=9;
                                                         SourceExpr="Ni¤os Facturados" }
            { 1103355018;Label  ;15450;0    ;300  ;423  ;HorzAlign=Center;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=ESP=/ }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=2;
        DataItemTable=Table7010417;
        DataItemTableView=SORTING(N§ Prefactura,Fecha,Codigo Servicio,Hora,Parte)
                          WHERE(Tipo=CONST(Maletas));
        DataItemVarName=Maletas;
        OnAfterGetRecord=BEGIN
                           IF rCondFact."Mostrar Precios con Iva" THEN BEGIN
                             IF Prefactura."Mostrar Descuentos" THEN
                               wImporte := "Importe Con IVA Sin Dto"
                             ELSE
                               wImporte := "Importe con impuestos";
                           END ELSE
                           BEGIN
                             IF Prefactura."Mostrar Descuentos" THEN
                               wImporte := "Importe Sin IVA Sin Dto"
                             ELSE
                               wImporte := "Importe sin impuestos";
                           END;
                         END;

        DataItemLinkReference=Prefactura;
        DataItemLink=N§ Prefactura=FIELD(N§ Prefactura);
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=18450;
            SectionHeight=1269;
          }
          CONTROLS
          {
            { 1100244050;TextBox;14700;423  ;1800 ;423  ;HorzAlign=Center;
                                                         FontSize=9;
                                                         BlankZero=Yes;
                                                         SourceExpr=Pax }
            { 1100244051;TextBox;16650;423  ;1800 ;423  ;HorzAlign=Center;
                                                         FontSize=9;
                                                         DecimalPlaces=0:2;
                                                         SourceExpr=wImporte }
            { 1100244049;Label  ;9750 ;423  ;4800 ;423  ;VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=ESP=CARGA-DESCARGA EQUIPAJE }
            { 1100244063;Shape  ;14700;423  ;1800 ;423   }
            { 1100244064;Shape  ;16650;423  ;1800 ;423   }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=2;
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number);
        DataItemVarName=TotalTransportados;
        OnPreDataItem=BEGIN
                        rTempRangPre.RESET;
                        wRompe := NOT rTempRangPre.FINDSET;
                      END;

        OnAfterGetRecord=BEGIN
                           IF wRompe THEN
                             CurrReport.BREAK;

                           wTotalPaxT   := rTempRangPre.Pax;
                           wTextoTransp := rTempRangPre.Descripcion;
                           wRompe := rTempRangPre.NEXT=0;
                         END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Header;
            SectionWidth=18450;
            SectionHeight=423;
          }
          CONTROLS
          {
            { 1100244055;Label  ;12600;0    ;3900 ;423  ;ParentControl=1100244054;
                                                         HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=ESP=TOTAL TRANSPORTADOS }
          }
           }
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=18450;
            SectionHeight=423;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT(rCondFact."Totalizar Transportados");
                         END;

          }
          CONTROLS
          {
            { 1100244054;TextBox;16650;0    ;1650 ;423  ;FontSize=9;
                                                         CaptionML=ESP=Total Transportados:;
                                                         DecimalPlaces=0:2;
                                                         SourceExpr=wTotalPaxT }
            { 1100244056;Shape  ;16650;0    ;1800 ;423   }
            { 1100244066;TextBox;12600;0    ;3900 ;423  ;HorzAlign=Right;
                                                         FontSize=9;
                                                         SourceExpr=wTextoTransp }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=2;
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number);
        MaxIteration=1;
        DataItemVarName=Descuentos;
        OnPreDataItem=BEGIN
                        // Se muestran totales de descuento

                        IF NOT Prefactura."Mostrar Descuentos" THEN
                          CurrReport.BREAK;

                        wRompe := NOT rTempIVA.FINDSET;

                        CLEAR(wTotalSinDto);
                        CLEAR(wTotalconDto);
                      END;

        OnAfterGetRecord=BEGIN
                           IF wRompe THEN
                             CurrReport.BREAK;

                           wTotalSinDto += rTempIVA."Inv. Disc. Base Amount" ;
                           wTotalconDto += rTempIVA."VAT+EC Base";
                           wRompe := rTempIVA.NEXT=0;
                         END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=18450;
            SectionHeight=1692;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT(Prefactura."Mostrar Descuentos");
                         END;

          }
          CONTROLS
          {
            { 1103350000;TextBox;600  ;846  ;1950 ;423  ;HorzAlign=Center;
                                                         FontSize=9;
                                                         DecimalPlaces=0:2;
                                                         SourceExpr=wTotalSinDto }
            { 1103350001;TextBox;2550 ;846  ;1500 ;423  ;HorzAlign=Center;
                                                         FontSize=9;
                                                         DecimalPlaces=0:2;
                                                         SourceExpr=Prefactura."% Dto" }
            { 1103350002;TextBox;4050 ;846  ;1950 ;423  ;HorzAlign=Center;
                                                         FontSize=9;
                                                         DecimalPlaces=0:2;
                                                         SourceExpr=wTotalconDto }
            { 1103350004;Label  ;600  ;423  ;1950 ;423  ;HorzAlign=Center;
                                                         FontSize=10;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=Base }
            { 1103350005;Label  ;2550 ;423  ;1500 ;423  ;HorzAlign=Center;
                                                         FontSize=10;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=% Dto }
            { 1103350006;Label  ;4050 ;423  ;1950 ;423  ;HorzAlign=Center;
                                                         FontSize=10;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=Subtotal }
            { 1103350003;Shape  ;4050 ;423  ;1950 ;423   }
            { 1103350007;Shape  ;2550 ;423  ;1500 ;423   }
            { 1103350008;Shape  ;600  ;423  ;1950 ;423   }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=2;
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number);
        DataItemVarName=IVA;
        OnPreDataItem=BEGIN
                        wRompe := NOT rTempIVA.FINDSET;
                      END;

        OnAfterGetRecord=BEGIN

                           IF wRompe THEN
                             CurrReport.BREAK;

                           rIVA := rTempIVA;
                           wTotal += rIVA."Amount Including VAT+EC";
                           wRompe := rTempIVA.NEXT=0;
                         END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Header;
            SectionWidth=18450;
            SectionHeight=1269;
          }
          CONTROLS
          {
            { 1100244031;Label  ;10050;423  ;2250 ;846  ;ParentControl=1100244025;
                                                         HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1100244035;Label  ;12450;423  ;1500 ;846  ;ParentControl=1100244032;
                                                         HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1100244037;Label  ;14100;423  ;1800 ;846  ;ParentControl=1100244036;
                                                         HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1100244040;Label  ;16050;423  ;2400 ;846  ;ParentControl=1100244039;
                                                         HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
          }
           }
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=18450;
            SectionHeight=423;
          }
          CONTROLS
          {
            { 1100244025;TextBox;10050;0    ;2250 ;423  ;HorzAlign=Right;
                                                         FontSize=9;
                                                         CaptionML=ESP=Base Imponible;
                                                         DecimalPlaces=0:2;
                                                         SourceExpr=rIVA."VAT+EC Base" }
            { 1100244032;TextBox;12450;0    ;1200 ;423  ;HorzAlign=Right;
                                                         FontSize=9;
                                                         CaptionML=ESP=% IVA;
                                                         DecimalPlaces=0:2;
                                                         SourceExpr=rIVA."VAT %" }
            { 1100244036;TextBox;14100;0    ;1800 ;423  ;HorzAlign=Right;
                                                         FontSize=9;
                                                         CaptionML=ESP=Importe IVA;
                                                         DecimalPlaces=0:2;
                                                         SourceExpr=rIVA."VAT Amount" }
            { 1100244039;TextBox;16050;0    ;2400 ;423  ;HorzAlign=Right;
                                                         FontSize=9;
                                                         CaptionML=ESP=Total;
                                                         DecimalPlaces=0:2;
                                                         SourceExpr=rIVA."Amount Including VAT+EC" }
            { 1100244044;Label  ;13650;0    ;300  ;423  ;FontSize=9;
                                                         CaptionML=ESP=% }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=2;
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number);
        MaxIteration=1;
        DataItemVarName=Total;
        OnAfterGetRecord=VAR
                           lrLin@1100244000 : Record 7010417;
                         BEGIN

                           IF wTotal = 0 THEN BEGIN // En caso de que no se haya registrado IVA Pillamos el total de todas maneras de las lineas
                             lrLin.RESET;
                             lrLin.SETRANGE("N§ Prefactura",Prefactura."N§ Prefactura");
                             IF lrLin.FINDSET THEN BEGIN
                               REPEAT
                                 wTotal += lrLin."Importe con impuestos";
                               UNTIL lrLin.NEXT=0;
                             END;
                           END;
                         END;

        DataItemLinkReference=Linea;
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=18450;
            SectionHeight=846;
          }
          CONTROLS
          {
            { 1100244038;TextBox;15900;423  ;2400 ;423  ;HorzAlign=Right;
                                                         FontSize=9;
                                                         FontBold=Yes;
                                                         CaptionML=ESP=Total:;
                                                         DecimalPlaces=0:2;
                                                         SourceExpr=wTotal }
            { 1100244041;Label  ;13950;423  ;1800 ;423  ;ParentControl=1100244038;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=ESP=Total Fact.: }
            { 1100244042;Shape  ;15900;423  ;2550 ;423   }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table7035398;
        DataItemTableView=SORTING(Num Prefactura,Num Linea);
        NewPagePerGroup=No;
        NewPagePerRecord=No;
        OnPreDataItem=VAR
                        lrPie@1103355000 : Record 7035398;
                        lwNum@1103355001 : Integer;
                      BEGIN
                        // Claro,hay un problema y es que si pretendemos que los pie de pagina estn en el pie de
                        // documenteo, solo podemos utilizar un footer con una sola linea. Si pretendemos tener
                        // n lineas no podr n estar al pie ya que ser n bodies que se situan a continuaci¢n
                        // Opto por soluci¢n salominica:
                        // Si hay 5 o menos lineas de pie se van a un footer, si hay m s a los bodies

                        CLEAR(wPies);
                        CLEAR(lrPie);

                        lrPie.ASCENDING(FALSE);
                        lrPie.SETRANGE("Num Prefactura", Prefactura."N§ Prefactura");
                        IF NOT lrPie.FINDFIRST THEN
                          CurrReport.BREAK;
                        wPieenelPie := lrPie.COUNT <= 5;

                        IF wPieenelPie THEN BEGIN
                          // Colocamos las lineas en el footer empezando por abajo
                          lwNum := 5;
                          REPEAT
                            wPies[lwNum] := lrPie.Texto;
                            lwNum -=1;
                          UNTIL lrPie.NEXT=0;
                        END;
                      END;

        DataItemLink=Num Prefactura=FIELD(N§ Prefactura);
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Header;
            SectionWidth=18450;
            SectionHeight=846;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT(NOT wPieenelPie);
                         END;

          }
          CONTROLS
          {
          }
           }
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=18450;
            SectionHeight=423;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT(NOT wPieenelPie);
                         END;

          }
          CONTROLS
          {
            { 1103355006;TextBox;0    ;0    ;18450;423  ;SourceExpr=Texto }
          }
           }
        { PROPERTIES
          {
            SectionType=Footer;
            PlaceInBottom=Yes;
            SectionWidth=18450;
            SectionHeight=2538;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT(wPieenelPie);
                         END;

          }
          CONTROLS
          {
            { 1103355008;TextBox;0    ;0    ;18450;423  ;SourceExpr=wPies[1] }
            { 1103355009;TextBox;0    ;423  ;18450;423  ;SourceExpr=wPies[2] }
            { 1103355010;TextBox;0    ;846  ;18450;423  ;SourceExpr=wPies[3] }
            { 1103355011;TextBox;0    ;1269 ;18450;423  ;SourceExpr=wPies[4] }
            { 1103355012;TextBox;0    ;1692 ;18450;423  ;SourceExpr=wPies[5] }
            { 1103355007;Shape  ;0    ;2115 ;18300;423  ;ShapeStyle=HorzLine }
          }
           }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=9020;
      Height=3410;
    }
    CONTROLS
    {
      { 1103355001;CheckBox;3850;220  ;440  ;440  ;ShowCaption=No;
                                                   SourceExpr=wDesgloseLoc }
      { 1103355002;Label  ;220  ;220  ;3520 ;440  ;ParentControl=1103355001;
                                                   CaptionML=ESP=Desglosar Localizadores }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      Text50000@1103355004 : TextConst 'ESP="Telf.: "';
      Text50001@1103355005 : TextConst 'ESP="Fax: "';
      Text50002@1103355006 : TextConst 'ESP="C.I.F.: "';
      Text50003@1103355007 : TextConst 'ESP="Ref. %1 "';
      rInfEmp@1100244003 : Record 79;
      FormatDire@1100244004 : Codeunit 365;
      rCondFact@1100244012 : Record 7010416;
      rTempIVA@1100244015 : TEMPORARY Record 290;
      rIVA@1100244016 : TEMPORARY Record 290;
      rCliente@1100244008 : Record 18;
      rParte@1100244020 : Record 7010360;
      rPar@1100244025 : Record 7010311;
      rCodSuplement@1100244026 : Record 7010318;
      rVeh@1100244027 : Record 7010346;
      rCodExt@1100244031 : Record 7010321;
      rFraVenta@1100244032 : Record 36;
      rTempRangPre@1100244034 : TEMPORARY Record 7010417;
      LastFieldNo@1100244000 : Integer;
      FooterPrinted@1100244001 : Boolean;
      wDirClie@1100244002 : ARRAY [10] OF Text[100];
      wCifNif@1100244033 : Text[30];
      wFecha@1100244006 : Date;
      wNo@1100244007 : Code[20];
      Text001@1100244009 : TextConst 'ESP=Factura';
      Text002@1100244010 : TextConst 'ESP=Prefactura';
      wInfEmp@1103350000 : ARRAY [10] OF Text[100];
      wRefCliente@1100244011 : Text[30];
      wServicio@1100244013 : Text[1024];
      wTextoPrecio@1100244014 : Text[30];
      wRompe@1100244017 : Boolean;
      wTotal@1100244018 : Decimal;
      wPlazasTxt@1100244005 : Text[30];
      wPax@1100244019 : Decimal;
      wTotalPaxT@1100244021 : Decimal;
      wPrecioPor@1100244022 : Text[30];
      Text003@1100244023 : TextConst 'ESP=Adulto';
      Text004@1100244024 : TextConst 'ESP=Ni¤o';
      wTextoAlternativo@1100244028 : Boolean;
      Text005@1100244029 : TextConst 'ESP=Ma¤ana';
      Text006@1100244030 : TextConst 'ESP=Tarde';
      Text007@1100244035 : TextConst 'ESP=Entradas';
      Text008@1100244036 : TextConst 'ESP=Salidas';
      Text009@1100244037 : TextConst 'ESP=Excursion';
      wTextoTransp@1100244038 : Text[30];
      wTotalSinDto@1103350001 : Decimal;
      wTotalconDto@1103350002 : Decimal;
      wImporte@1103350003 : Decimal;
      wImporte2@1103350004 : Decimal;
      wPrecio@1103355000 : Decimal;
      wMostrarSubt@1100253000 : Boolean;
      wPies@1103355001 : ARRAY [5] OF Text[250];
      wPieenelPie@1103355002 : Boolean;
      wDesgloseLoc@1103355003 : Boolean;

    PROCEDURE TextoZona@1100244000(pwCodigo@1100244000 : Code[10]) : Text[30];
    VAR
      lrZonaTra@1100244001 : Record 7010429;
    BEGIN
      // TextoZona
      // Devuelve la descripci¢n de la zona de Trabajo

      IF lrZonaTra.GET(pwCodigo) THEN
        EXIT(lrZonaTra.Descripcion)
      ELSE
        EXIT(pwCodigo);
    END;

    PROCEDURE TextoCodigo@1100244003(pwCodigo@1100244001 : Code[10]) : Text[30];
    VAR
      lrCodSer@1100244000 : Record 7010320;
    BEGIN
      // TextoCodigo
      // Devuelve la descripcion del codigo de servicio

      IF lrCodSer.GET(pwCodigo) THEN
        EXIT(lrCodSer.Descripcion)
      ELSE
        EXIT(pwCodigo);
    END;

    PROCEDURE TextoTTOO@1100244006(pwCodigo@1100244000 : Code[10]) : Text[30];
    VAR
      lrTTOO@1100244001 : Record 7010312;
    BEGIN
      // TextoTTOO

      lrTTOO.RESET;
      IF lrTTOO.GET(pwCodigo) THEN
        EXIT(lrTTOO.Nombre)
      ELSE
        EXIT('');
    END;

    BEGIN
    {
      JPT 30-04/04 Utilizamos una tabla temporal "Temporary" rTempRangPre que en realidad apunta a lineas prefactura
      Se utiliza para desglosar transportados;

      AJS 13.07.2004 - Cambio de clave por defecto para las lineas de prefactura antes era "N§ Prefactura,Fecha,
                       Codigo Servicio,Hora,Parte" y ahora "N§ Prefactura,Zona Trabajo,Fecha,Hora,Parte"

      JPT 19,07.04  - Restituyo el orden antiguo por quejas de Maria

      ## AJS 13.06.2008, Miquel Ramis

        - No quieren que se impriman las lineas de tipo Localizador
    }
    END.
  }
  RDLDATA
  {
  }
}
