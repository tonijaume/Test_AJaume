OBJECT Report 7010333 Manifiesto Llegadas/Salidas
{
  OBJECT-PROPERTIES
  {
    Date=16/10/09;
    Time=12:34:27;
    Version List=TRANSFER,TER;
  }
  PROPERTIES
  {
    CaptionML=ESP=Manifiesto Llegadas/Salidas;
    ProcessingOnly=Yes;
    OnInitReport=BEGIN
                   rPar.FINDFIRST;
                   rInfEmp.FINDFIRST;
                   rPar.TESTFIELD("Codigo Salidas");
                   rPar.TESTFIELD("Codigo Entradas");
                   rInfEmp.CALCFIELDS(Picture);
                   wPrimeraCol :=1;
                 END;

    OnPostReport=BEGIN
                   rExcel.CreateBook;
                   rExcel.CreateSheet(Tex0005,Tex0005,COMPANYNAME,USERID,TRUE,FALSE,'');
                   rExcel.GiveUserControl;
                 END;

    Orientation=Landscape;
  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table7010360;
        DataItemTableView=SORTING(Fecha,Tipo Servicio,Codigo Servicio);
        OnPreDataItem=BEGIN
                        CLEAR(wFila);
                        CLEAR(wCol);

                        IF wFecha <> 0D THEN
                          SETRANGE(Fecha, wFecha);

                        IF GETFILTER(Fecha)= '' THEN
                          ERROR(Tex0002);

                        IF GETRANGEMIN(Fecha) <> GETRANGEMAX(Fecha) THEN
                          ERROR(Tex0003);

                        SETFILTER("Codigo Servicio", '%1|%2', rPar."Codigo Salidas", rPar."Codigo Entradas");

                        rParteTemp := Parte;
                        //wPrimero   := TRUE;
                      END;

        OnAfterGetRecord=BEGIN
                           IF (rParteTemp."Tipo Servicio" <> "Tipo Servicio") OR (rParteTemp."Codigo Servicio" <> "Codigo Servicio") THEN BEGIN
                             CreaTemporal(rParteTemp);
                             EscribeTemp;
                             CLEAR(rParteTemp);
                             rParteTemp.DELETEALL;
                           END;
                           rParteTemp := Parte;
                           rParteTemp.INSERT;
                         END;

        OnPostDataItem=BEGIN
                         CreaTemporal(rParteTemp);
                         EscribeTemp;
                       END;

        ReqFilterFields=Fecha;
      }
      SECTIONS
      {
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=9020;
      Height=3410;
    }
    CONTROLS
    {
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      Text50000@1103355035 : TextConst 'ESP=<Day>-<Month Text>';
      Text50001@1103355036 : TextConst 'ESP=<Hours24>:<Minutes>';
      rPar@1103355031 : Record 7010311;
      rInfEmp@1103355014 : Record 79;
      rtemp@1103355000 : TEMPORARY Record 7035397;
      rSerPar@1103355007 : Record 7010359;
      rExcel@1103355009 : TEMPORARY Record 7035385;
      rParteTemp@1103355011 : TEMPORARY Record 7010360;
      wVentana@1103355001 : Dialog;
      Tex0001@1103355002 : TextConst 'ESP=Creando Temporal\@1@@@@@@@@@';
      wFecha@1103355003 : Date;
      Tex0002@1103355004 : TextConst 'ESP="El listado debe de filtrarse por Fecha "';
      Tex0003@1103355005 : TextConst 'ESP="El listado debe de filtrarse por un solo d¡a "';
      wFin@1103355006 : Boolean;
      wText@1103355008 : ARRAY [10] OF Text[100];
      wFila@1103355012 : Integer;
      wCol@1103355013 : Integer;
      Tex0004@1103355015 : TextConst 'ESP=c:\Imagen.BMP';
      wPrimeraCol@1103355016 : Integer;
      Tex0005@1103355010 : TextConst 'ESP=Manifiesto Llegadas-Salidas';
      Tex0100@1103355017 : TextConst 'ESP=PAX';
      Tex0101@1103355018 : TextConst 'ESP=RESERV';
      Tex0102@1103355019 : TextConst 'ESP=CUENTA';
      Tex0103@1103355020 : TextConst 'ESP=NOMBRE';
      Tex0104@1103355021 : TextConst 'ESP=DIA';
      Tex0105@1103355022 : TextConst 'ESP=VUELO';
      Tex0106@1103355023 : TextConst 'ESP=HORA';
      Tex0107@1103355024 : TextConst 'ESP=HTL';
      Tex0108@1103355025 : TextConst 'ESP=PICK UP';
      Tex0109@1103355026 : TextConst 'ESP=UNIT';
      Tex0110@1103355027 : TextConst 'ESP=STATUS';
      Tex0111@1103355028 : TextConst 'ESP=LLEGADA';
      Tex0112@1103355029 : TextConst 'ESP=SALIDA';
      wPrimero@1103355030 : Boolean;
      Tex0113@1103355032 : TextConst 'ESP=GRUPO';
      wTextoGrupo@1103355033 : Text[250];
      wColorTexto@1103355034 : 'Negro,Azul,Rojo';

    PROCEDURE CreaTemporal@1103355002(VAR prParte@1103355007 : Record 7010360);
    VAR
      lrSerPar@1103355000 : Record 7010359;
      lrVuelLin@1103355001 : Record 7035397;
      lrCodSer@1103355004 : Record 7010320;
      lwNum@1103355003 : Integer;
      lwTotal@1103355005 : Integer;
      lwCont@1103355006 : Integer;
    BEGIN
      // CreaTemporal
      // La creaci¢n del temporal es necesaria para la ordenaci¢n por hora de vuelo ya que no tenemos ninguna clave adecuada

      CLEAR(rtemp);
      rtemp.DELETEALL;

      CLEAR(lrSerPar);
      CLEAR(lwNum); // Clave primaria del temporal
      lrSerPar.SETCURRENTKEY("N§ Parte","N§ Linea");
      IF prParte.FINDSET THEN BEGIN
        wVentana.OPEN(Tex0001);
        CLEAR(lwCont);
        lwTotal :=prParte.COUNT;
        REPEAT
          lrSerPar.SETRANGE("N§ Parte", prParte."N§ Parte");
          IF lrSerPar.FINDSET THEN BEGIN
            REPEAT
              CLEAR(lrVuelLin);
              CLEAR(rtemp);
              lrVuelLin.SETCURRENTKEY("N§ Servicio","N§ Linea",Fecha,Hora);
              lrVuelLin.SETRANGE(Tipo         , lrVuelLin.Tipo::Servicio);
              lrVuelLin.SETRANGE("N§ Servicio", lrSerPar."N§ Servicio");
              lrVuelLin.SETRANGE("N§ Linea"   , lrSerPar."N§ Linea");
              IF lrVuelLin.FINDFIRST THEN
                rtemp := lrVuelLin
              ELSE BEGIN // Si no tiene lineas de vuelo se crea una temporal para ese Servicio - Parte
                rtemp.Tipo         := rtemp.Tipo::Servicio;
                rtemp."N§ Linea"   := lrSerPar."N§ Linea";
                rtemp."N§ Servicio":= lrSerPar."N§ Servicio";
                IF lrSerPar.Vuelo <> '' THEN
                  rtemp.Vuelo      := SELECTSTR(1,lrSerPar.Vuelo);
                rtemp.Parte        := lrSerPar."N§ Parte";
                rtemp.TTOO         := lrSerPar.Touroperador;
                rtemp.Fecha        := lrSerPar.Fecha;
                rtemp.Hora         := lrSerPar."Hora Vuelo";
                IF lrCodSer.GET(lrSerPar."Codigo Servicio") THEN
                  rtemp."E/S"      := lrCodSer."Tipo orden" +1;
              END;
              lwNum += 1;
              rtemp.Num:= lwNum;
              rtemp.INSERT;
            UNTIL lrSerPar.NEXT=0;
          END;
          lwCont +=1;
          wVentana.UPDATE(1,ROUND(lwCont/lwTotal*10000,1));
        UNTIL prParte.NEXT=0;
        wVentana.CLOSE;
      END;
    END;

    PROCEDURE BuscaVehCond@1103355007(prSerPar@1103355000 : Record 7010359) : Text[150];
    VAR
      lrHist@1103355005 : Record 7010361;
      lwText@1103355001 : Text[150];
      lrParte@1103355002 : Record 7010360;
      lrGrp@1103355003 : Record 7010373;
      lwOk@1103355004 : Boolean;
    BEGIN
      // BuscaVehCond
      // Devuelve el texto del vehiculo y conductor del parte
      // Aprovechamos para insertar el codigo de grupo
      // ... y el color del texto

      CLEAR(wTextoGrupo);
      CLEAR(wColorTexto);
      IF NOT lrParte.GET(prSerPar."N§ Parte") THEN
        EXIT;
      lwText := STRSUBSTNO('%1 - %2', lrParte."N§ Vehiculo", lrParte."Cod Conductor");

      IF lrParte."Cod Grupo" <> '' THEN BEGIN
        IF NOT lrGrp.GET(lrParte."Cod Grupo") THEN
          CLEAR(lrGrp);
        wTextoGrupo := STRSUBSTNO('%1 - %2', lrParte."Cod Grupo" , lrGrp.Nombre);
      END;

      CLEAR(wColorTexto);
      IF lrParte.Privado THEN   //  Si es privado el color del texto ser  azul
        wColorTexto := wColorTexto::Azul;

      // Si ha habido modificaciones el mismo d¡a del servicio se imprime en rojo
      CLEAR(lwOk);
      CLEAR(lrHist);   // Cambios en cabecera de reserva
      lrHist.SETRANGE("Tipo Fichero", lrHist."Tipo Fichero"::Parte);
      lrHist.SETRANGE("N§"          , lrParte."N§ Parte");
      lrHist.SETRANGE(Fecha         , lrParte.Fecha);
      lwOk := lrHist.FINDFIRST;

      IF NOT lwOk THEN BEGIN // Cambios en las lineas
        CLEAR(lrHist);
        lrHist.SETCURRENTKEY("Tipo Fichero",NoParte);
        lrHist.SETRANGE("Tipo Fichero", lrHist."Tipo Fichero"::Linea);
        lrHist.SETRANGE(NoParte       , lrParte."N§ Parte");
        lrHist.SETRANGE(Fecha         , lrParte.Fecha);
        lwOk := lrHist.FINDFIRST;
      END;
      IF lwOk THEN
        wColorTexto := wColorTexto::Rojo;

      EXIT(lwText);
    END;

    PROCEDURE CreaCab@1103355003();
    VAR
      lwText@1103355000 : Text[250];
      lwWidth@1103355001 : Integer;
      lwCont@1103355002 : Integer;
      lrCoSer@1103355003 : Record 7010320;
    BEGIN
      // CreaCab
      // Crea la cabecera

      CLEAR(rExcel);
      wFila +=2;
      rExcel.VALIDATE("Row No.", wFila);
      wCol := wPrimeraCol;
      rExcel.VALIDATE("Column No.", wCol);
      rExcel."Texto Alineacion Horizontal" := 3; // Centro
      IF rInfEmp.Picture.HASVALUE THEN BEGIN // Pasamos el logo
        rInfEmp.Picture.EXPORT(Tex0004);
        rExcel."Fusionar hasta celda":= rExcel.DevuelveCelda(wFila+1,wCol+1);
        rExcel.Imagen := Tex0004;
        rExcel.INSERT;
      END;

      wCol := 13;
      rExcel.VALIDATE("Column No.", wCol);
      rExcel."Fusionar hasta celda":= '';
      rExcel.Imagen := '';
      rExcel.Bold   := TRUE;
      rExcel."Tama¤o Fuente" :=12;
      rExcel."Cell Value as Text" := FORMAT(rParteTemp.Fecha,0,Text50000);
      rExcel.INSERT;
      wFila +=1;

      rExcel."Color Fuente" := 16777215; // Blanco
      rExcel."Color Fondo"  := 0; // Negro
      rExcel.VALIDATE("Row No.", wFila);
      IF lrCoSer.GET(rParteTemp."Codigo Servicio") THEN
        rExcel."Cell Value as Text" := lrCoSer.Descripcion;
      rExcel.INSERT;
      wFila +=1;

      CLEAR(rExcel);
      rExcel.VALIDATE("Row No.", wFila);
      rExcel.VALIDATE(Bordes, 3);
      rExcel."Borde Abaj" :=0;
      rExcel."Texto Alineacion Horizontal" := 3; // Centro
      rExcel.Bold := TRUE;
      FOR lwCont := 1 TO 15 DO BEGIN
        wCol := wPrimeraCol + lwCont -1;
        CASE lwCont OF
          5 : BEGIN
                rExcel."Fusionar hasta celda":= rExcel.DevuelveCelda(wFila,wCol+2);
                rExcel."Cell Value as Text" := Tex0111;
              END;
          9 : BEGIN
                rExcel."Fusionar hasta celda":= rExcel.DevuelveCelda(wFila,wCol+2);
                rExcel."Cell Value as Text" := Tex0112;
              END;

          ELSE BEGIN
                rExcel."Fusionar hasta celda":= '';
                rExcel."Cell Value as Text" := '';
          END;
        END;
        rExcel.VALIDATE("Column No.", wCol);
        rExcel.INSERT;
      END;
      wFila +=1;


      CLEAR(rExcel);
      rExcel.VALIDATE("Row No.", wFila);
      rExcel.VALIDATE(Bordes, 3);
      rExcel."Borde Sup" :=0;
      rExcel."Texto Alineacion Horizontal" := 3; // Centro
      rExcel.Bold := TRUE;
      FOR lwCont := 1 TO 15 DO BEGIN
        CASE lwCont OF
          1    : rExcel."Cell Value as Text" := Tex0100;
          2    : rExcel."Cell Value as Text" := Tex0101;
          3    : rExcel."Cell Value as Text" := Tex0102;
          4    : rExcel."Cell Value as Text" := Tex0103;
          5,9  : rExcel."Cell Value as Text" := Tex0104;
          6,10 : rExcel."Cell Value as Text" := Tex0105;
          7,11 : rExcel."Cell Value as Text" := Tex0106;
          8    : rExcel."Cell Value as Text" := Tex0107;
          12   : rExcel."Cell Value as Text" := Tex0108;
          13   : rExcel."Cell Value as Text" := Tex0109;
          14   : rExcel."Cell Value as Text" := Tex0110;
          15   : rExcel."Cell Value as Text" := Tex0113;
        END;
        wCol := wPrimeraCol + lwCont -1;
        rExcel.VALIDATE("Column No.", wCol);
        rExcel.INSERT;
      END;
      wFila +=2;
    END;

    PROCEDURE EscribeTemp@1103355000();
    VAR
      lwCont@1103355000 : Integer;
    BEGIN
      // EscribeTemp

      CLEAR(rtemp);
      rtemp.SETCURRENTKEY(Fecha,Hora);
      IF rtemp.FINDSET THEN BEGIN
        CreaCab;
        REPEAT
          EscribeLinea;
        UNTIL rtemp.NEXT =0;
        wPrimero := FALSE;
      END;
    END;

    PROCEDURE EscribeLinea@1103355016();
    VAR
      lwCont@1103355000 : Integer;
      lrVuelLin@1103355002 : Record 7035397;
    BEGIN
      // EscribeLinea

      CLEAR(wText);
      IF rSerPar.GET(rtemp."N§ Servicio",rtemp."N§ Linea") THEN BEGIN
        CLEAR(lrVuelLin);
        lrVuelLin.SETCURRENTKEY("N§ Servicio","N§ Linea",Fecha,Hora);
        lrVuelLin.SETRANGE(Tipo, lrVuelLin.Tipo::Servicio);
        lrVuelLin.SETRANGE("N§ Servicio", rtemp."N§ Servicio");
        lrVuelLin.SETRANGE("N§ Linea"   , rtemp."N§ Linea");
        FOR lwCont := 0 TO 1 DO BEGIN
          CASE lwCont OF
            0: lrVuelLin.SETRANGE("E/S", rtemp."E/S"::Entrada);
            1: lrVuelLin.SETRANGE("E/S", rtemp."E/S"::Salida);
          END;
          IF lrVuelLin.FINDFIRST THEN BEGIN
            wText[1 + (lwCont*3)] := FORMAT(lrVuelLin.Fecha,0,Text50000);
            wText[2 + (lwCont*3)] := lrVuelLin.Vuelo;
            wText[3 + (lwCont*3)] := FORMAT(lrVuelLin.Hora,0,Text50001);
          END;
        END;
      END
      ELSE
        EXIT;

      wText[10] := BuscaVehCond(rSerPar); // Vehiculo + Conductor;
      CLEAR(rExcel);
      rExcel.VALIDATE("Row No.", wFila);
      rExcel.VALIDATE(Bordes, 2);
      rExcel."Texto Alineacion Horizontal" := 3; // Centro
      FOR lwCont := 1 TO 15 DO BEGIN
        CASE lwCont OF
          1    : rExcel."Cell Value as Text" := FORMAT(rSerPar."Paxes transportados"); // Pax
          2    : rExcel."Cell Value as Text" := rSerPar.Reserva;
          3    : rExcel."Cell Value as Text" := rSerPar.Touroperador;
          4    : rExcel."Cell Value as Text" := rSerPar."Nombre Cliente";
          5    : rExcel."Cell Value as Text" := wText[1]; // Dia Llegada
          6    : rExcel."Cell Value as Text" := wText[2]; // Vuelo Llegada
          7    : rExcel."Cell Value as Text" := wText[3]; // Hora Llegada
          8    : rExcel."Cell Value as Text" := rSerPar."Punto recogida";
          9    : rExcel."Cell Value as Text" := wText[4]; // Dia Salida
          10   : rExcel."Cell Value as Text" := wText[5]; // Vuelo Salida
          11   : rExcel."Cell Value as Text" := wText[6]; // Hora Salida
          12   : rExcel."Cell Value as Text" := FORMAT(rSerPar."Hora recogida",0,Text50001);
          13   : rExcel."Cell Value as Text" := wText[10];
          14   : rExcel."Cell Value as Text" := '';
          15   : rExcel."Cell Value as Text" := wTextoGrupo;
        END;
        rExcel.Bold := lwCont = 13;
        CASE wColorTexto OF
          wColorTexto::Negro : rExcel."Color Fuente" := 0; // Negro
          wColorTexto::Azul  : rExcel."Color Fuente" := 16711680; // Azul
          wColorTexto::Rojo  : rExcel."Color Fuente" := 255; // Rojo
       END;

        wCol := wPrimeraCol + lwCont -1;
        rExcel.VALIDATE("Column No.", wCol);
        rExcel.INSERT;
      END;

      wFila +=1;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}
