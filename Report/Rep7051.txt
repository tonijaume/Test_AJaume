OBJECT Report 7051 Suggest Item Price on Wksh.
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=NAVW16.00.01;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Suggest Item Price on Wksh.;
               ESP=Sugerir precio producto en hoja];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  RoundingMethod.SETRANGE(Code,RoundingMethod.Code);
                  IF ToCurrency.Code = '' THEN BEGIN
                    ToCurrency.InitRoundingPrecision;
                  END ELSE BEGIN
                    ToCurrency.FIND;
                    ToCurrency.TESTFIELD("Unit-Amount Rounding Precision");
                  END;

                  IF (ToSalesCode = '') AND (ToSalesType <> ToSalesType::"All Customers") THEN
                    ERROR(Text002,SalesPrice.FIELDCAPTION("Sales Code"));

                  IF ToUnitofMeasure.Code <> '' THEN
                    ToUnitofMeasure.FIND;
                  WITH SalesPriceWksh DO BEGIN
                    VALIDATE("Sales Type",ToSalesType);
                    VALIDATE("Sales Code",ToSalesCode);
                    VALIDATE("Currency Code",ToCurrency.Code);
                    VALIDATE("Starting Date",ToStartDate);
                    VALIDATE("Ending Date",ToEndDate);
                    "Unit of Measure Code" := ToUnitofMeasure.Code;

                    CASE ToSalesType OF
                      ToSalesType::Customer:
                        BEGIN
                          ToCust."No." := ToSalesCode;
                          ToCust.FIND;
                          "Price Includes VAT" := ToCust."Prices Including VAT";
                          "Allow Line Disc." := ToCust."Allow Line Disc.";
                        END;
                      ToSalesType::"Customer Price Group":
                        BEGIN
                          ToCustPriceGr.Code := ToSalesCode;
                          ToCustPriceGr.FIND;
                          "Price Includes VAT" := ToCustPriceGr."Price Includes VAT";
                          "Allow Line Disc." := ToCustPriceGr."Allow Line Disc.";
                          "Allow Invoice Disc." := ToCustPriceGr."Allow Invoice Disc.";
                        END;
                    END;
                  END;
                END;

  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table27;
        DataItemTableView=SORTING(No.);
        OnPreDataItem=BEGIN
                        Window.OPEN(Text000);
                      END;

        OnAfterGetRecord=BEGIN
                           Window.UPDATE(1,"No.");
                           WITH SalesPriceWksh DO BEGIN
                             INIT;
                             VALIDATE("Item No.",Item."No.");

                             IF NOT ("Unit of Measure Code" IN [Item."Base Unit of Measure",'']) THEN
                               IF NOT ItemUnitOfMeasure.GET("Item No.","Unit of Measure Code") THEN
                                 CurrReport.SKIP;

                             VALIDATE("Unit of Measure Code",ToUnitofMeasure.Code);
                             "Current Unit Price" :=
                               ROUND(
                                 CurrExchRate.ExchangeAmtLCYToFCY(
                                   WORKDATE,ToCurrency.Code,
                                   Item."Unit Price",
                                   CurrExchRate.ExchangeRate(
                                     WORKDATE,ToCurrency.Code)) *
                                     UOMMgt.GetQtyPerUnitOfMeasure(Item,"Unit of Measure Code"),
                                 ToCurrency."Unit-Amount Rounding Precision");

                             IF "Current Unit Price" > PriceLowerLimit THEN
                               "New Unit Price" := "Current Unit Price" * UnitPriceFactor;

                             IF RoundingMethod.Code <> '' THEN BEGIN
                               RoundingMethod."Minimum Amount" := "New Unit Price";
                               IF RoundingMethod.FIND('=<') THEN BEGIN
                                 "New Unit Price" := "New Unit Price" + RoundingMethod."Amount Added Before";
                                 IF RoundingMethod.Precision > 0 THEN
                                   "New Unit Price" :=
                                     ROUND(
                                       "New Unit Price",
                                       RoundingMethod.Precision,COPYSTR('=><',RoundingMethod.Type + 1,1));
                                 "New Unit Price" := "New Unit Price" + RoundingMethod."Amount Added After";
                               END;
                             END;

                             CalcCurrentPrice(PriceAlreadyExists);

                             IF NOT PriceAlreadyExists THEN
                               "VAT Bus. Posting Gr. (Price)" := Item."VAT Bus. Posting Gr. (Price)";

                             IF PriceAlreadyExists OR CreateNewPrices THEN BEGIN
                               SalesPriceWksh2 := SalesPriceWksh;
                               IF SalesPriceWksh2.FIND('=') THEN
                                 SalesPriceWksh.MODIFY
                               ELSE
                                 SalesPriceWksh.INSERT;
                             END;
                           END;
                         END;

        ReqFilterFields=No.,Vendor No.,Inventory Posting Group;
      }
      SECTIONS
      {
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=12540;
      Height=3850;
      SaveValues=Yes;
      OnOpenForm=BEGIN
                   IF UnitPriceFactor = 0 THEN
                     UnitPriceFactor := 1;

                   RequestOptionsForm.SalesCodeCtrl.ENABLED := TRUE;
                   IF ToSalesType = ToSalesType::"All Customers" THEN
                     RequestOptionsForm.SalesCodeCtrl.ENABLED := FALSE;

                   RequestOptionsForm.SalesCodeCtrl.ENABLED := ToSalesType <> ToSalesType::"All Customers";
                   RequestOptionsForm.ToStartDateCtrl.ENABLED := ToSalesType <> ToSalesType::Campaign;
                   RequestOptionsForm.ToEndDateCtrl.ENABLED := ToSalesType <> ToSalesType::Campaign;
                 END;

    }
    CONTROLS
    {
      { 1   ;TextBox      ;3410 ;1100 ;2750 ;440  ;Name=SalesCodeCtrl;
                                                   CaptionML=[ENU=Sales Code;
                                                              ESP=C¢digo ventas];
                                                   SourceExpr=ToSalesCode;
                                                   OnLookup=VAR
                                                              CustList@1004 : Form 22;
                                                              CustPriceGrList@1003 : Form 7;
                                                              CampaignList@1002 : Form 5087;
                                                            BEGIN
                                                              CASE ToSalesType OF
                                                                ToSalesType::Customer:
                                                                  BEGIN
                                                                    CustList.LOOKUPMODE := TRUE;
                                                                    CustList.SETRECORD(ToCust);
                                                                    IF CustList.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                                                      CustList.GETRECORD(ToCust);
                                                                      ToSalesCode := ToCust."No.";
                                                                    END;
                                                                  END;
                                                                ToSalesType::"Customer Price Group":
                                                                  BEGIN
                                                                    CustPriceGrList.LOOKUPMODE := TRUE;
                                                                    CustPriceGrList.SETRECORD(ToCustPriceGr);
                                                                    IF CustPriceGrList.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                                                      CustPriceGrList.GETRECORD(ToCustPriceGr);
                                                                      ToSalesCode := ToCustPriceGr.Code;
                                                                    END;
                                                                  END;
                                                                ToSalesType::Campaign:
                                                                  BEGIN
                                                                    CampaignList.LOOKUPMODE := TRUE;
                                                                    CampaignList.SETRECORD(ToCampaign);
                                                                    IF CampaignList.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                                                      CampaignList.GETRECORD(ToCampaign);
                                                                      ToSalesCode := ToCampaign."No.";
                                                                      ToStartDate := ToCampaign."Starting Date";
                                                                      ToEndDate := ToCampaign."Ending Date";
                                                                    END;
                                                                  END;
                                                              END;
                                                            END;

                                                   OnAfterValidate=BEGIN
                                                                     IF ToSalesType = ToSalesType::Campaign THEN BEGIN
                                                                       IF ToCampaign.GET(ToSalesCode) THEN BEGIN
                                                                         ToStartDate := ToCampaign."Starting Date";
                                                                         ToEndDate := ToCampaign."Ending Date";
                                                                       END ELSE BEGIN
                                                                         ToStartDate := 0D;
                                                                         ToEndDate := 0D;
                                                                       END;
                                                                     END;
                                                                   END;
                                                                    }
      { 21  ;Label        ;0    ;0    ;5500 ;440  ;LeaderDots=No;
                                                   CaptionML=[ENU=Copy to Sales Price Worksheet...;
                                                              ESP=Copiar a Hoja precio venta...] }
      { 31  ;Label        ;220  ;1100 ;3080 ;440  ;ParentControl=1 }
      { 2   ;TextBox      ;3410 ;2200 ;2750 ;440  ;CaptionML=[ENU=Currency Code;
                                                              ESP=C¢d. divisa];
                                                   SourceExpr=ToCurrency.Code;
                                                   TableRelation=Currency }
      { 22  ;Label        ;220  ;2200 ;3080 ;440  ;ParentControl=2 }
      { 3   ;TextBox      ;3410 ;2750 ;1650 ;440  ;Name=ToStartDateCtrl;
                                                   CaptionML=[ENU=Starting Date;
                                                              ESP=Fecha inicial];
                                                   SourceExpr=ToStartDate }
      { 23  ;Label        ;220  ;2750 ;3080 ;440  ;ParentControl=3 }
      { 4   ;TextBox      ;9790 ;0    ;2750 ;440  ;CaptionML=[ENU=Only Amounts Above;
                                                              ESP=S¢lo importes superiores a];
                                                   DecimalPlaces=2:5;
                                                   SourceExpr=PriceLowerLimit }
      { 24  ;Label        ;6380 ;0    ;3300 ;440  ;ParentControl=4 }
      { 5   ;TextBox      ;9790 ;550  ;2750 ;440  ;CaptionML=[ENU=Adjustment Factor;
                                                              ESP=Factor ajuste];
                                                   DecimalPlaces=0:5;
                                                   SourceExpr=UnitPriceFactor;
                                                   MinValue=0 }
      { 25  ;Label        ;6380 ;550  ;3300 ;440  ;ParentControl=5 }
      { 6   ;TextBox      ;9790 ;1100 ;2750 ;440  ;CaptionML=[ENU=Rounding Method;
                                                              ESP=Mtodo redondeo];
                                                   SourceExpr=RoundingMethod.Code;
                                                   TableRelation="Rounding Method" }
      { 26  ;Label        ;6380 ;1100 ;3300 ;440  ;ParentControl=6 }
      { 7   ;CheckBox     ;9790 ;1650 ;440  ;440  ;ShowCaption=No;
                                                   CaptionML=[ENU=Create New Prices;
                                                              ESP=Crear tarifa nueva];
                                                   SourceExpr=CreateNewPrices }
      { 27  ;Label        ;6380 ;1650 ;3300 ;440  ;ParentControl=7 }
      { 9   ;TextBox      ;3410 ;1650 ;2750 ;440  ;CaptionML=[ENU=Unit of Measure Code;
                                                              ESP=C¢d. unidad medida];
                                                   SourceExpr=ToUnitofMeasure.Code;
                                                   TableRelation="Unit of Measure" }
      { 10  ;Label        ;220  ;1650 ;3080 ;440  ;ParentControl=9 }
      { 8   ;TextBox      ;3410 ;550  ;2750 ;440  ;CaptionML=[ENU=Sales Type;
                                                              ESP=Tipo venta];
                                                   OptionCaptionML=[ENU=Customer,Customer Price Group,All Customers,Campaign;
                                                                    ESP=Cliente,Grupo precio cliente,Todos clientes,Campa¤a];
                                                   SourceExpr=ToSalesType;
                                                   OnValidate=BEGIN
                                                                RequestOptionsForm.SalesCodeCtrl.ENABLED := ToSalesType <> ToSalesType::"All Customers";
                                                                RequestOptionsForm.ToStartDateCtrl.ENABLED :=ToSalesType <> ToSalesType::Campaign;
                                                                RequestOptionsForm.ToEndDateCtrl.ENABLED := ToSalesType <> ToSalesType::Campaign;

                                                                ToSalesCode := '';
                                                                ToStartDate := 0D;
                                                                ToEndDate := 0D;
                                                              END;
                                                               }
      { 11  ;Label        ;220  ;550  ;3080 ;440  ;ParentControl=8 }
      { 12  ;TextBox      ;3410 ;3300 ;1650 ;440  ;Name=ToEndDateCtrl;
                                                   CaptionML=[ENU=Ending Date;
                                                              ESP=Fecha final];
                                                   SourceExpr=ToEndDate }
      { 13  ;Label        ;220  ;3300 ;3080 ;440  ;ParentControl=12 }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnInit=BEGIN
               ToEndDateCtrlEnable := TRUE;
               ToStartDateCtrlEnable := TRUE;
               SalesCodeCtrlEnable := TRUE;
             END;

      OnOpenPage=BEGIN
                   IF UnitPriceFactor = 0 THEN
                     UnitPriceFactor := 1;

                   SalesCodeCtrlEnable := TRUE;
                   IF ToSalesType = ToSalesType::"All Customers" THEN
                     SalesCodeCtrlEnable := FALSE;

                   SalesCodeCtrlEnable := ToSalesType <> ToSalesType::"All Customers";
                   ToStartDateCtrlEnable := ToSalesType <> ToSalesType::Campaign;
                   ToEndDateCtrlEnable := ToSalesType <> ToSalesType::Campaign;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             ESP=Opciones] }

      { 21  ;2   ;Group     ;
                  CaptionML=[ENU=Copy to Sales Price Worksheet...;
                             ESP=Copiar a Hoja precio venta...] }

      { 8   ;3   ;Field     ;
                  CaptionML=[ENU=Sales Type;
                             ESP=Tipo venta];
                  OptionCaptionML=[ENU=Customer,Customer Price Group,All Customers,Campaign;
                                   ESP=Cliente,Grupo precio cliente,Todos clientes,Campa¤a];
                  SourceExpr=ToSalesType;
                  OnValidate=BEGIN
                               SalesCodeCtrlEnable := ToSalesType <> ToSalesType::"All Customers";
                               ToStartDateCtrlEnable :=ToSalesType <> ToSalesType::Campaign;
                               ToEndDateCtrlEnable := ToSalesType <> ToSalesType::Campaign;

                               ToSalesCode := '';
                               ToStartDate := 0D;
                               ToEndDate := 0D;
                             END;
                              }

      { 1   ;3   ;Field     ;
                  Name=SalesCodeCtrl;
                  CaptionML=[ENU=Sales Code;
                             ESP=C¢digo ventas];
                  SourceExpr=ToSalesCode;
                  Enabled=SalesCodeCtrlEnable;
                  OnValidate=BEGIN
                               ToSalesCodeOnAfterValidate;
                             END;

                  OnLookup=VAR
                             CustList@1004 : Form 22;
                             CustPriceGrList@1003 : Form 7;
                             CampaignList@1002 : Form 5087;
                           BEGIN
                             CASE ToSalesType OF
                               ToSalesType::Customer:
                                 BEGIN
                                   CustList.LOOKUPMODE := TRUE;
                                   CustList.SETRECORD(ToCust);
                                   IF CustList.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                     CustList.GETRECORD(ToCust);
                                     ToSalesCode := ToCust."No.";
                                   END;
                                 END;
                               ToSalesType::"Customer Price Group":
                                 BEGIN
                                   CustPriceGrList.LOOKUPMODE := TRUE;
                                   CustPriceGrList.SETRECORD(ToCustPriceGr);
                                   IF CustPriceGrList.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                     CustPriceGrList.GETRECORD(ToCustPriceGr);
                                     ToSalesCode := ToCustPriceGr.Code;
                                   END;
                                 END;
                               ToSalesType::Campaign:
                                 BEGIN
                                   CampaignList.LOOKUPMODE := TRUE;
                                   CampaignList.SETRECORD(ToCampaign);
                                   IF CampaignList.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                     CampaignList.GETRECORD(ToCampaign);
                                     ToSalesCode := ToCampaign."No.";
                                     ToStartDate := ToCampaign."Starting Date";
                                     ToEndDate := ToCampaign."Ending Date";
                                   END;
                                 END;
                             END;
                           END;
                            }

      { 9   ;3   ;Field     ;
                  CaptionML=[ENU=Unit of Measure Code;
                             ESP=C¢d. unidad medida];
                  SourceExpr=ToUnitofMeasure.Code;
                  TableRelation="Unit of Measure" }

      { 2   ;3   ;Field     ;
                  CaptionML=[ENU=Currency Code;
                             ESP=C¢d. divisa];
                  SourceExpr=ToCurrency.Code;
                  TableRelation=Currency }

      { 3   ;3   ;Field     ;
                  Name=ToStartDateCtrl;
                  CaptionML=[ENU=Starting Date;
                             ESP=Fecha inicial];
                  SourceExpr=ToStartDate;
                  Enabled=ToStartDateCtrlEnable }

      { 12  ;3   ;Field     ;
                  Name=ToEndDateCtrl;
                  CaptionML=[ENU=Ending Date;
                             ESP=Fecha final];
                  SourceExpr=ToEndDate;
                  Enabled=ToEndDateCtrlEnable }

      { 4   ;2   ;Field     ;
                  CaptionML=[ENU=Only Amounts Above;
                             ESP=S¢lo importes superiores a];
                  DecimalPlaces=2:5;
                  SourceExpr=PriceLowerLimit }

      { 5   ;2   ;Field     ;
                  CaptionML=[ENU=Adjustment Factor;
                             ESP=Factor ajuste];
                  DecimalPlaces=0:5;
                  SourceExpr=UnitPriceFactor;
                  MinValue=0 }

      { 6   ;2   ;Field     ;
                  CaptionML=[ENU=Rounding Method;
                             ESP=Mtodo redondeo];
                  SourceExpr=RoundingMethod.Code;
                  TableRelation="Rounding Method" }

      { 7   ;2   ;Field     ;
                  CaptionML=[ENU=Create New Prices;
                             ESP=Crear tarifa nueva];
                  SourceExpr=CreateNewPrices }

    }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Processing items  #1##########;ESP=Procesando prods. #1##########';
      RoundingMethod@1002 : Record 42;
      SalesPrice@1003 : Record 7002;
      SalesPriceWksh2@1004 : Record 7023;
      SalesPriceWksh@1005 : Record 7023;
      ToCust@1024 : Record 18;
      ToCustPriceGr@1006 : Record 6;
      ToCampaign@1022 : Record 5071;
      ToCurrency@1007 : Record 4;
      CurrExchRate@1008 : Record 330;
      ToUnitofMeasure@1009 : Record 204;
      ItemUnitOfMeasure@1010 : Record 5404;
      UOMMgt@1012 : Codeunit 5402;
      Window@1013 : Dialog;
      PriceAlreadyExists@1014 : Boolean;
      CreateNewPrices@1015 : Boolean;
      UnitPriceFactor@1016 : Decimal;
      PriceLowerLimit@1017 : Decimal;
      ToSalesType@1019 : 'Customer,Customer Price Group,All Customers,Campaign';
      ToSalesCode@1020 : Code[20];
      ToStartDate@1018 : Date;
      ToEndDate@1011 : Date;
      Text002@1021 : TextConst 'ENU=%1 must be specified.;ESP=Se debe indicar %1.';
      SalesCodeCtrlEnable@19004995 : Boolean INDATASET;
      ToStartDateCtrlEnable@19060085 : Boolean INDATASET;
      ToEndDateCtrlEnable@19023823 : Boolean INDATASET;

    PROCEDURE InitializeRequest@3(NewToSalesType@1005 : Option;NewToSalesCode@1004 : Code[20];NewToStartDateText@1002 : Date;NewToEndDateText@1000 : Date;NewToCurrCode@1001 : Code[10];NewToUOMCode@1003 : Code[10]);
    BEGIN
      ToSalesType := NewToSalesType;
      ToSalesCode := NewToSalesCode;
      ToStartDate := NewToStartDateText;
      ToEndDate := NewToEndDateText;
      ToCurrency.Code := NewToCurrCode;
      ToUnitofMeasure.Code := NewToUOMCode;
    END;

    LOCAL PROCEDURE ToSalesCodeOnAfterValidate@19025830();
    BEGIN
      IF ToSalesType = ToSalesType::Campaign THEN BEGIN
        IF ToCampaign.GET(ToSalesCode) THEN BEGIN
          ToStartDate := ToCampaign."Starting Date";
          ToEndDate := ToCampaign."Ending Date";
        END ELSE BEGIN
          ToStartDate := 0D;
          ToEndDate := 0D;
        END;
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}
