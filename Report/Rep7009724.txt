OBJECT Report 7009724 Copiar celda
{
  OBJECT-PROPERTIES
  {
    Date=15/10/12;
    Time=16:29:58;
    Modified=Yes;
    Version List=AIC2009;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Copy cell;
               ESP=Copiar celda;
               FRA=Copier cellule];
    ProcessingOnly=Yes;
  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table7009728;
        DataItemTableView=SORTING(Nombre esq. cuentas,Nombre plantilla columnas,N§ Fila,N§ Columna);
        OnPreDataItem=BEGIN
                        MontarFiltro(wCelda);
                      END;

        OnAfterGetRecord=VAR
                           rLinEsqCtas@1103350000 : Record 85;
                           rPlanCol@1103350005 : Record 334;
                           rPlantillaCeldas2@1103350001 : Record 7009728;
                           wReferencia@1103350002 : Text[11];
                           wNuevaReferencia@1103350003 : Text[11];
                           i@1103350004 : Integer;
                           j@1100253000 : Integer;
                         BEGIN
                           CASE wCopiarCeldaA OF
                             wCopiarCeldaA::Columna: BEGIN
                               rLinEsqCtas.SETRANGE("Schedule Name", AccSchedName);
                               rLinEsqCtas.SETFILTER("Line No.", '<>%1', "N§ Fila");
                               rLinEsqCtas.SETFILTER("Row No.", '<>%1', '');
                               IF rLinEsqCtas.FIND('-') THEN
                                 REPEAT
                                   rPlantillaCeldas2 := "Plantilla celdas";
                                   rPlantillaCeldas2."N§ Fila" := rLinEsqCtas."Line No.";
                                   IF rPlantillaCeldas2.FIND THEN
                                     rPlantillaCeldas2.DELETE;
                                   rPlantillaCeldas2 := "Plantilla celdas";
                                   rPlantillaCeldas2."N§ Fila" := rLinEsqCtas."Line No.";
                                   rPlantillaCeldas2.VALIDATE("Nombre celda");
                                   wFormula := Formula;
                                   IF ("Tipo celda" = "Tipo celda"::Formula) AND
                                      (wTipoCopia = wTipoCopia::"Formulas relativas") AND
                                      (STRPOS(Formula, COPYSTR("Nombre celda", 1,STRPOS("Nombre celda",':'))) > 0) THEN BEGIN
                                        wReferencia := COPYSTR("Nombre celda", 1,STRPOS("Nombre celda",':'));
                                        wNuevaReferencia := rLinEsqCtas."Row No." + ':';
                                        i := 1;
                                        WHILE STRPOS(COPYSTR(wFormula,i), wReferencia) > 0 DO BEGIN
                                          j := STRPOS(COPYSTR(wFormula,i), wReferencia);
                                          i += j-1;
                                          IF i = 1 THEN BEGIN
                                            wFormula := wNuevaReferencia + COPYSTR(wFormula,i+STRLEN(wReferencia));
                                            i += STRLEN(wNuevaReferencia);
                                          END
                                          ELSE IF COPYSTR(wFormula, i-1, 1) IN ['*','/','+','-',' ','(','[','^'] THEN BEGIN
                                            wFormula := COPYSTR(wFormula,1,i-1) + wNuevaReferencia + COPYSTR(wFormula,i+STRLEN(wReferencia));
                                            i += STRLEN(wNuevaReferencia);
                                          END
                                          ELSE
                                            i += STRLEN(wReferencia);
                                        END;
                                        IF STRPOS(wFormula, rPlantillaCeldas2."Nombre celda") > 0 THEN
                                          wRefCircular := TRUE
                                        ELSE
                                          rPlantillaCeldas2.Formula := wFormula;
                                     END ELSE
                                       rPlantillaCeldas2.Formula := wFormula;

                                   IF wFormula = rPlantillaCeldas2.Formula THEN
                                     rPlantillaCeldas2.INSERT;
                                 UNTIL rLinEsqCtas.NEXT = 0;
                             END;
                             wCopiarCeldaA::Fila: BEGIN
                               rPlanCol.SETRANGE("Column Layout Name", AccSchedName);
                               rPlanCol.SETFILTER("Line No.", '<>%1', "N§ Columna");
                               rPlanCol.SETFILTER("Column No.", '<>%1', '');
                               IF rPlanCol.FIND('-') THEN
                                 REPEAT
                                   rPlantillaCeldas2 := "Plantilla celdas";
                                   rPlantillaCeldas2."N§ Columna" := rPlanCol."Line No.";
                                   IF rPlantillaCeldas2.FIND THEN
                                     rPlantillaCeldas2.DELETE;
                                   rPlantillaCeldas2 := "Plantilla celdas";
                                   rPlantillaCeldas2."N§ Columna" := rPlanCol."Line No.";
                                   rPlantillaCeldas2.VALIDATE("Nombre celda");
                                   wFormula := Formula;
                                   IF ("Tipo celda" = "Tipo celda"::Formula) AND
                                      (wTipoCopia = wTipoCopia::"Formulas relativas") AND
                                      (STRPOS(Formula, COPYSTR("Nombre celda", STRPOS("Nombre celda",':'))) > 0) THEN BEGIN
                                        wReferencia := COPYSTR("Nombre celda", STRPOS("Nombre celda",':'));
                                        wNuevaReferencia := ':' + rPlanCol."Column No.";
                                        i := 1;
                                        WHILE STRPOS(COPYSTR(wFormula,i), wReferencia) > 0 DO BEGIN
                                          //i := STRPOS(wFormula, wReferencia);
                                          //IF i = 1 THEN
                                          //  wFormula := wNuevaReferencia + COPYSTR(wFormula,i+STRLEN(wReferencia))
                                          //ELSE
                                          //  wFormula := COPYSTR(wFormula,1,i-1) + wNuevaReferencia + COPYSTR(wFormula,i+STRLEN(wReferencia));
                                          //i += STRLEN(wNuevaReferencia) - STRLEN(wReferencia);

                                          j := STRPOS(COPYSTR(wFormula,i), wReferencia);
                                          i += j-1;
                                          IF i > STRLEN(wFormula)-STRLEN(wReferencia) THEN BEGIN
                                            wFormula := COPYSTR(wFormula,1,i-1) + wNuevaReferencia;
                                            i += STRLEN(wNuevaReferencia);
                                          END
                                          ELSE IF COPYSTR(wFormula, i+STRLEN(wNuevaReferencia), 1) IN ['*','/','+','-',' ',')',']','^'] THEN BEGIN
                                            wFormula := COPYSTR(wFormula,1,i-1) + wNuevaReferencia + COPYSTR(wFormula,i+STRLEN(wReferencia));
                                            i += STRLEN(wNuevaReferencia);
                                          END
                                          ELSE
                                            i += STRLEN(wReferencia);
                                        END;
                                        IF STRPOS(wFormula, rPlantillaCeldas2."Nombre celda") > 0 THEN
                                          wRefCircular := TRUE
                                        ELSE
                                          rPlantillaCeldas2.Formula := wFormula;
                                     END ELSE
                                       rPlantillaCeldas2.Formula := wFormula;

                                   IF wFormula = rPlantillaCeldas2.Formula THEN
                                     rPlantillaCeldas2.INSERT;
                                 UNTIL rPlanCol.NEXT = 0;
                             END;
                           END;

                           IF wRefCircular THEN
                             MESSAGE(Text002);
                         END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=12000;
            SectionHeight=846;
          }
          CONTROLS
          {
          }
           }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=7590;
      Height=4180;
      CaptionML=[ENU=Copy cell;
                 ESP=Copiar celda;
                 FRA=Copier cellule];
    }
    CONTROLS
    {
      { 1103350000;TextBox;3630 ;2420 ;3630 ;440  ;ParentControl=1103350004;
                                                   InFrame=Yes;
                                                   InPage=-1;
                                                   CaptionML=[ENU=Cell to copy;
                                                              ESP=Celda a copiar];
                                                   SourceExpr=wCelda;
                                                   OnLookup=VAR
                                                              PanoramaCeldas@1103350000 : Form 7009823;
                                                            BEGIN
                                                              PanoramaCeldas.LOOKUPMODE := TRUE;
                                                              //PanoramaCeldas.SETRECORD(rPlantillaCeldas);
                                                              IF PanoramaCeldas.RUNMODAL <> ACTION::LookupOK THEN
                                                                EXIT(FALSE);

                                                              MontarFiltro(PanoramaCeldas.CeldaSeleccionada);
                                                              Text := PanoramaCeldas.CeldaSeleccionada;

                                                              EXIT(TRUE);
                                                            END;

                                                   OnAfterValidate=BEGIN
                                                                     RequestOptionsForm.UPDATECONTROLS;
                                                                   END;
                                                                    }
      { 1103350001;Label  ;220  ;2420 ;3300 ;440  ;ParentControl=1103350000 }
      { 1103350002;TextBox;3630 ;2970 ;3630 ;440  ;ParentControl=1103350004;
                                                   InFrame=Yes;
                                                   InPage=-1;
                                                   CaptionML=[ENU=Copy cell to;
                                                              ESP=Copiar celda a;
                                                              FRA=Copier cellule a];
                                                   OptionCaptionML=[ENU=Column,row;
                                                                    ESP=Columna,Fila];
                                                   OptionString=Columna,Fila;
                                                   SourceExpr=wCopiarCeldaA }
      { 1103350003;Label  ;220  ;2970 ;3300 ;440  ;ParentControl=1103350002 }
      { 1103350006;TextBox;3630 ;3520 ;3630 ;440  ;Name=TipoCopia;
                                                   ParentControl=1103350004;
                                                   InFrame=Yes;
                                                   InPage=-1;
                                                   CaptionML=[ENU=Copy type;
                                                              ESP=Tipo copia];
                                                   OptionCaptionML=[ENU=Relative forms,Without relative forms;
                                                                    ESP=Formulas relativas,Sin f¢rmulas relativas];
                                                   OptionString=Formulas relativas,Sin f¢rmulas relativas;
                                                   SourceExpr=wTipoCopia;
                                                   OnFormat=BEGIN
                                                              IF wCelda <> '' THEN BEGIN
                                                                IF wCelda <> "Plantilla celdas"."Nombre celda" THEN
                                                                  MontarFiltro(wCelda);
                                                                RequestOptionsForm.TipoCopia.ENABLED := "Plantilla celdas"."Tipo celda" = "Plantilla celdas"."Tipo celda"::Formula;
                                                              END;
                                                            END;
                                                             }
      { 1103350007;Label  ;220  ;3520 ;3300 ;440  ;ParentControl=1103350006 }
      { 1103350015;TextBox;3630 ;550  ;2750 ;440  ;ParentControl=1103350012;
                                                   InFrame=Yes;
                                                   Lookup=Yes;
                                                   CaptionML=[ENU=Acc. Schedule Name;
                                                              ESP=Nombre esq. cuentas;
                                                              FRA=Nom esq. comptes;
                                                              ITA=Nome situazione contabile];
                                                   SourceExpr=AccSchedName;
                                                   TableRelation="Acc. Schedule Name";
                                                   OnValidate=BEGIN
                                                                AccSchedManagement.CheckName(AccSchedName);
                                                                AccScheduleName.GET(AccSchedName);
                                                                IF AccScheduleName."Default Column Layout" <> '' THEN
                                                                  ColumnLayoutName := AccScheduleName."Default Column Layout";
                                                              END;

                                                   OnLookup=BEGIN
                                                              EXIT(AccSchedManagement.LookupName(AccSchedName,Text));
                                                            END;

                                                   OnAfterValidate=BEGIN
                                                                     RequestOptionsForm.UPDATECONTROLS;
                                                                   END;
                                                                    }
      { 1103350016;Label  ;220  ;550  ;3300 ;440  ;ParentControl=1103350015;
                                                   InPage=-1 }
      { 1103350014;Label  ;220  ;1100 ;3300 ;440  ;ParentControl=1103350013 }
      { 1103350013;TextBox;3630 ;1100 ;2750 ;440  ;ParentControl=1103350012;
                                                   InFrame=Yes;
                                                   InPage=-1;
                                                   Lookup=Yes;
                                                   CaptionML=[ENU=Column Layout Name;
                                                              ESP=Nombre plantilla columna;
                                                              FRA=Nom modle colonne;
                                                              ITA=Nome layout colonna];
                                                   SourceExpr=ColumnLayoutName;
                                                   TableRelation="Column Layout Name";
                                                   OnBeforeInput=BEGIN
                                                                   IF ColumnLayoutName = '' THEN
                                                                     IF AccScheduleName.FIND('-') THEN
                                                                       ColumnLayoutName := AccScheduleName."Default Column Layout";
                                                                 END;

                                                   OnValidate=BEGIN
                                                                AccSchedManagement.CheckColumnName(ColumnLayoutName);
                                                              END;

                                                   OnLookup=BEGIN
                                                              EXIT(AccSchedManagement.LookupColumnName(ColumnLayoutName,Text));
                                                            END;
                                                             }
      { 1103350012;Frame  ;0    ;0    ;7590 ;1760 ;InPage=-1;
                                                   TopLineOnly=Yes;
                                                   CaptionML=[ENU=Layout;
                                                              ESP=Disposici¢n;
                                                              FRA=Disposition;
                                                              ITA=Layout] }
      { 1103350004;Frame  ;0    ;1870 ;7590 ;2310 ;TopLineOnly=Yes;
                                                   CaptionML=[ENU=OT;
                                                              ESP=Otros;
                                                              FRA=Autres;
                                                              ITA=Altro] }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      AccScheduleName@1103350006 : Record 84;
      AccSchedManagement@1103350005 : Codeunit 8;
      wCopiarCeldaA@1103350000 : 'Columna,Fila';
      wCelda@1103350001 : Text[30];
      wTipoCopia@1103350002 : 'Formulas relativas,Sin f¢rmulas relativas';
      AccSchedName@1103350003 : Code[10];
      ColumnLayoutName@1103350004 : Code[10];
      Text001@1103350008 : TextConst 'ENU=Cell %1 is not cleared as it. To copy cells, these must be cleared.;ESP=La celda %1 no est  definida como tal. Para copiar celdas, stas deben estar definidas.';
      wFormula@1103350009 : Text[250];
      wRefCircular@1103350010 : Boolean;
      Text002@1103350011 : TextConst 'ENU=Circular references have been found when doing the formulas, review these cells where the needed values have not been copied;ESP=Se han encontrado referencias circulares al montar las f¢rmula, revise aquellas celdas donde no se han copiado los valores deseados.';

    PROCEDURE PasarCelda@1103350016(par_Celda@1103350000 : Record 7009728);
    BEGIN
      "Plantilla celdas" := par_Celda;
      wCelda := par_Celda."Nombre celda";
      AccSchedName := par_Celda."Nombre esq. cuentas";
      ColumnLayoutName := par_Celda."Nombre plantilla columnas";
      MontarFiltro(wCelda);
    END;

    PROCEDURE MontarFiltro@1103350000(par_Celda@1103350000 : Text[30]);
    BEGIN
      WITH "Plantilla celdas" DO BEGIN
        SETCURRENTKEY("Nombre celda");
        SETRANGE("Nombre celda", par_Celda);
        SETRANGE("Nombre esq. cuentas", AccSchedName);
        SETRANGE("Nombre plantilla columnas", ColumnLayoutName);
        IF NOT FIND('-') THEN
          ERROR(Text001, par_Celda);
      END;
    END;

    BEGIN
    {
      // PLB 30/09/2005
      Nuevo desarrollo: HYG-105, GUI-117

      Esta funcion permite copiar los datos de una celda a toda la columna o a toda la fila

      Opci¢n "Tipo copia" (esta opci¢n solo est  disponible si la celda seleccionada para copiar es una f¢rmula):

       - "Formulas relativas": Si se selecciona esta opci¢n, al copiar, actuar  dependiendo de "Copiar celda a":
         o Columna: Si la celda que se copia tiene una referencia sobre la propia fila, pero de otra columna, estas referencias
           se mantendran en todas las celdas, cambiando la referencia a la fila sobre la que se est  copiando la celda
         o Fila: Si la celda que se copia tiene una referencia sobre la propia columna, pero de otra fila, estas referencias
           se mantendran en todas las celdas, cambiando la referencia a la columna sobre la que se est  copiando

       - "Sin f¢rmulas relativas": esta opci¢n copia la f¢rmula tal cual est  en origen, sin modificar ninguna referencia

      Es posible que al final del proceso de copia salga un mensaje de referencia circular. Este mensaje es debido a que durante
      la copia de la f¢rmula (solo puede suceder en los casos en que se copia una f¢rmula), la celda donde se est n copiando los
      datos contiene una referencia sobre si misma. Esto provocar¡a un error en el c lculo de dicha celda ya que dicha f¢rmula
      no tiene soluci¢n real. Estas celdas quedar n en blanco a la espera que el usuario introduzca manualmente una f¢rmula.
    }
    END.
  }
  RDLDATA
  {
  }
}
