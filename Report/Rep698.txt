OBJECT Report 698 Get Sales Orders
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=NAVW16.00.01;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Get Sales Orders;
               ESP=Traer pedidos venta];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  ReqWkshTmpl.GET(ReqLine."Worksheet Template Name");
                  ReqWkshName.GET(ReqLine."Worksheet Template Name",ReqLine."Journal Batch Name");
                  ReqLine.SETRANGE("Worksheet Template Name",ReqLine."Worksheet Template Name");
                  ReqLine.SETRANGE("Journal Batch Name",ReqLine."Journal Batch Name");
                  ReqLine.LOCKTABLE;
                  IF ReqLine.FIND('+') THEN BEGIN
                    ReqLine.INIT;
                    LineNo := ReqLine."Line No.";
                  END;
                  Window.OPEN(Text000);
                END;

  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table37;
        DataItemTableView=WHERE(Document Type=CONST(Order),
                                Type=CONST(Item),
                                Purch. Order Line No.=CONST(0),
                                Outstanding Quantity=FILTER(<>0));
        ReqFilterHeadingML=[ENU=Sales Order Line;
                            ESP=L¡n. pedido venta];
        OnAfterGetRecord=BEGIN
                           IF ("Sales Line"."Purchasing Code" = '') AND (SpecOrder <> 1)THEN
                             IF "Sales Line"."Drop Shipment" THEN BEGIN
                               LineCount := LineCount + 1;
                               Window.UPDATE(1,LineCount);
                               InsertReqWkshLine("Sales Line");
                             END;

                           IF "Sales Line"."Purchasing Code" <> '' THEN
                             IF PurchasingCode.GET("Sales Line"."Purchasing Code") THEN
                               IF (PurchasingCode."Drop Shipment") AND (SpecOrder <> 1) THEN BEGIN
                                 LineCount := LineCount + 1;
                                 Window.UPDATE(1,LineCount);
                                 InsertReqWkshLine("Sales Line");
                               END ELSE
                                 IF (PurchasingCode."Special Order") AND
                                    ("Special Order Purchase No." = '') AND
                                    (SpecOrder <> 0)
                                 THEN BEGIN
                                   LineCount := LineCount + 1;
                                   Window.UPDATE(1,LineCount);
                                   InsertReqWkshLine("Sales Line");
                                 END;
                         END;

        OnPostDataItem=BEGIN
                         IF LineCount = 0 THEN
                           ERROR(Text001);
                       END;

        ReqFilterFields=Document No.,Sell-to Customer No.,No.;
      }
      SECTIONS
      {
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=7150;
      Height=990;
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1   ;OptionButton ;3410 ;0    ;3740 ;440  ;CaptionML=[ENU=Item;
                                                              ESP=Producto];
                                                   SourceExpr=GetDim;
                                                   OptionValue=Item }
      { 2   ;Label        ;0    ;0    ;3300 ;440  ;ParentControl=1;
                                                   CaptionML=[ENU=Retrieve dimensions from;
                                                              ESP=Recuperar dimensiones de] }
      { 3   ;OptionButton ;3410 ;550  ;3740 ;440  ;CaptionML=[ENU=Sales Line;
                                                              ESP=L¡n. venta];
                                                   SourceExpr=GetDim;
                                                   OptionValue=Sales Line }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             ESP=Opciones] }

      { 1   ;2   ;Field     ;
                  CaptionML=[ENU=Retrieve dimensions from;
                             ESP=Recuperar dimensiones de];
                  OptionCaptionML=[ENU=Item,Sales Line;
                                   ESP=Producto,L¡nea ventas];
                  SourceExpr=GetDim }

    }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Processing sales lines  #1######;ESP=Procesando l¡ns. venta  #1######';
      Text001@1001 : TextConst 'ENU=There are no sales lines to retrieve.;ESP=No hay l¡neas venta para transferir.';
      ReqWkshTmpl@1002 : Record 244;
      ReqWkshName@1003 : Record 245;
      ReqLine@1004 : Record 246;
      SalesHeader@1005 : Record 36;
      PurchasingCode@1009 : Record 5721;
      ItemTrackingMgt@1011 : Codeunit 6500;
      LeadTimeMgt@1012 : Codeunit 5404;
      Window@1006 : Dialog;
      LineCount@1007 : Integer;
      SpecOrder@1010 : Integer;
      GetDim@1008 : 'Item,Sales Line';
      LineNo@1013 : Integer;

    PROCEDURE SetReqWkshLine@1(NewReqLine@1000 : Record 246;SpecialOrder@1001 : Integer);
    BEGIN
      ReqLine := NewReqLine;
      SpecOrder := SpecialOrder;
    END;

    LOCAL PROCEDURE InsertReqWkshLine@2(SalesLine@1000 : Record 37);
    VAR
      DocDim@1001 : Record 357;
      JnlLineDim@1002 : Record 356;
    BEGIN
      ReqLine.RESET;
      ReqLine.SETCURRENTKEY(Type,"No.");
      ReqLine.SETRANGE(Type,"Sales Line".Type);
      ReqLine.SETRANGE("No.","Sales Line"."No.");
      ReqLine.SETRANGE("Sales Order No.","Sales Line"."Document No.");
      ReqLine.SETRANGE("Sales Order Line No.","Sales Line"."Line No.");
      IF ReqLine.FIND('-') THEN
        EXIT;

      LineNo := LineNo + 10000;
      WITH ReqLine DO BEGIN
        INIT;
        "Worksheet Template Name" := ReqWkshName."Worksheet Template Name";
        "Journal Batch Name" := ReqWkshName.Name;
        "Line No." := LineNo;
        VALIDATE(Type,SalesLine.Type);
        VALIDATE("No.",SalesLine."No.");
        "Variant Code" := SalesLine."Variant Code";
        VALIDATE("Location Code",SalesLine."Location Code");
        "Bin Code" := SalesLine."Bin Code";

        // Drop Shipment means replenishment by purchase only
        IF ("Replenishment System" <> "Replenishment System"::Purchase) AND
           SalesLine."Drop Shipment"
        THEN
          VALIDATE("Replenishment System","Replenishment System"::Purchase);

        IF SpecOrder <> 1 THEN
          VALIDATE("Unit of Measure Code",SalesLine."Unit of Measure Code");
        VALIDATE(
          Quantity,
          ROUND(SalesLine."Outstanding Quantity" * SalesLine."Qty. per Unit of Measure" / "Qty. per Unit of Measure",0.00001));
        "Sales Order No." := SalesLine."Document No.";
        "Sales Order Line No." := SalesLine."Line No.";
        "Sell-to Customer No." := SalesLine."Sell-to Customer No.";
        SalesHeader.GET(1,SalesLine."Document No.");
        IF SpecOrder <> 1 THEN
          "Ship-to Code" := SalesHeader."Ship-to Code";
        "Item Category Code" := SalesLine."Item Category Code";
        Nonstock := SalesLine.Nonstock;
        ReqLine."Action Message" := ReqLine."Action Message"::New;
        "Product Group Code" := SalesLine."Product Group Code";
        "Purchasing Code" := SalesLine."Purchasing Code";
        // Backward Scheduling
        "Due Date" := SalesLine."Shipment Date";
        "Ending Date" :=
          LeadTimeMgt.PlannedEndingDate(
            "No.","Location Code","Variant Code","Due Date","Vendor No.","Ref. Order Type");
        CalcStartingDate('');
        UpdateDatetime;

        INSERT;
        ItemTrackingMgt.CopyItemTracking(SalesLine.RowID1,ReqLine.RowID1,TRUE);
        IF GetDim = GetDim::"Sales Line" THEN BEGIN
          JnlLineDim.SETRANGE("Table ID",DATABASE::"Requisition Line");
          JnlLineDim.SETRANGE("Journal Template Name",ReqLine."Worksheet Template Name");
          JnlLineDim.SETRANGE("Journal Batch Name",ReqLine."Journal Batch Name");
          JnlLineDim.SETRANGE("Journal Line No.",ReqLine."Line No.");
          JnlLineDim.SETRANGE("Allocation Line No.",0);
          JnlLineDim.DELETEALL;
          ReqLine."Shortcut Dimension 1 Code" := SalesLine."Shortcut Dimension 1 Code";
          ReqLine."Shortcut Dimension 2 Code" := SalesLine."Shortcut Dimension 2 Code";
          ReqLine.MODIFY;
          DocDim.SETRANGE("Table ID",DATABASE::"Sales Line");
          DocDim.SETRANGE("Document Type",SalesLine."Document Type");
          DocDim.SETRANGE("Document No.",SalesLine."Document No.");
          DocDim.SETRANGE("Line No.",SalesLine."Line No.");
          IF DocDim.FIND('-') THEN BEGIN
            REPEAT
              JnlLineDim.INIT;
              JnlLineDim."Table ID" := DATABASE::"Requisition Line";
              JnlLineDim."Journal Template Name" := ReqLine."Worksheet Template Name";
              JnlLineDim."Journal Batch Name" := ReqLine."Journal Batch Name";
              JnlLineDim."Journal Line No." := ReqLine."Line No.";
              JnlLineDim."Allocation Line No." := 0;
              JnlLineDim."Dimension Code" :=  DocDim."Dimension Code";
              JnlLineDim."Dimension Value Code" := DocDim."Dimension Value Code";
              JnlLineDim.INSERT;
            UNTIL DocDim.NEXT = 0;
          END;
        END;
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}
