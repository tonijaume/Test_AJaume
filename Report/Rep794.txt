OBJECT Report 794 Adjust Item Costs/Prices
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=NAVW16.00.01;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Adjust Item Costs/Prices;
               ESP=Modificar precios de productos];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  RoundingMethod.SETRANGE(Code,RoundingMethod.Code);
                END;

  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table27;
        DataItemTableView=SORTING(No.);
        OnPreDataItem=BEGIN
                        IF AdjustCard = AdjustCard::"Stockkeeping Unit Card" THEN
                          CurrReport.BREAK;

                        Window.OPEN(Text000);
                      END;

        OnAfterGetRecord=VAR
                           RecRef@1000 : RecordRef;
                           xRecRef@1001 : RecordRef;
                           ChangeLogMgt@1002 : Codeunit 423;
                         BEGIN
                           Window.UPDATE(1,"No.");

                           xRecRef.GETTABLE(Item);

                           CASE Selection OF
                             Selection::"Unit Price":
                               OldFieldValue := "Unit Price";
                             Selection::"Profit %":
                               OldFieldValue := "Profit %";
                             Selection::"Indirect Cost %":
                               OldFieldValue := "Indirect Cost %";
                             Selection::"Last Direct Cost":
                               OldFieldValue := "Last Direct Cost";
                             Selection::"Standard Cost":
                               OldFieldValue := "Standard Cost";
                           END;
                           NewFieldValue := OldFieldValue * AdjFactor;

                           GetGLSetup;
                           PriceIsRnded := FALSE;
                           IF RoundingMethod.Code <> '' THEN BEGIN
                             RoundingMethod."Minimum Amount" := NewFieldValue;
                             IF RoundingMethod.FIND('=<') THEN BEGIN
                               NewFieldValue := NewFieldValue + RoundingMethod."Amount Added Before";
                               IF RoundingMethod.Precision > 0 THEN BEGIN
                                 NewFieldValue := ROUND(NewFieldValue,RoundingMethod.Precision,COPYSTR('=><',RoundingMethod.Type+1,1));
                                 PriceIsRnded := TRUE;
                               END;
                               NewFieldValue := NewFieldValue + RoundingMethod."Amount Added After";
                             END;
                           END;
                           IF NOT PriceIsRnded THEN
                             NewFieldValue := ROUND(NewFieldValue,GLSetup."Unit-Amount Rounding Precision");

                           CASE Selection OF
                             Selection::"Unit Price":
                               VALIDATE("Unit Price",NewFieldValue);
                             Selection::"Profit %":
                               VALIDATE("Profit %",NewFieldValue);
                             Selection::"Indirect Cost %":
                               VALIDATE("Indirect Cost %",NewFieldValue);
                             Selection::"Last Direct Cost":
                               VALIDATE("Last Direct Cost",NewFieldValue);
                             Selection::"Standard Cost":
                               VALIDATE("Standard Cost",NewFieldValue);
                           END;
                           MODIFY;

                           RecRef.GETTABLE(Item);
                           ChangeLogMgt.LogModification(RecRef,xRecRef);
                         END;

        ReqFilterFields=No.,Vendor No.,Inventory Posting Group,Costing Method;
      }
      SECTIONS
      {
      }
       }
    { PROPERTIES
      {
        DataItemTable=Table5700;
        DataItemTableView=SORTING(Item No.,Location Code,Variant Code);
        OnPreDataItem=BEGIN
                        IF AdjustCard = AdjustCard::"Item Card" THEN
                          CurrReport.BREAK;

                        Item.COPYFILTER("No.","Stockkeeping Unit"."Item No.");
                        Item.COPYFILTER("Location Filter","Stockkeeping Unit"."Location Code");
                        Item.COPYFILTER("Variant Filter","Stockkeeping Unit"."Variant Code");

                        Window.OPEN(
                          Text002 +
                          Text003 +
                          Text004);
                      END;

        OnAfterGetRecord=VAR
                           RecRef@1002 : RecordRef;
                           xRecRef@1001 : RecordRef;
                           ChangeLogMgt@1000 : Codeunit 423;
                         BEGIN
                           Window.UPDATE(1,"Item No.");
                           Window.UPDATE(2,"Location Code");
                           Window.UPDATE(3,"Variant Code");

                           xRecRef.GETTABLE("Stockkeeping Unit");

                           CASE Selection OF
                             Selection::"Last Direct Cost":
                               OldFieldValue := "Last Direct Cost";
                             Selection::"Standard Cost":
                               OldFieldValue := "Standard Cost";
                           END;
                           NewFieldValue := OldFieldValue * AdjFactor;

                           PriceIsRnded := FALSE;
                           IF RoundingMethod.Code <> '' THEN BEGIN
                             RoundingMethod."Minimum Amount" := NewFieldValue;
                             IF RoundingMethod.FIND('=<') THEN BEGIN
                               NewFieldValue := NewFieldValue + RoundingMethod."Amount Added Before";
                               IF RoundingMethod.Precision > 0 THEN BEGIN
                                 NewFieldValue := ROUND(NewFieldValue,RoundingMethod.Precision,COPYSTR('=><',RoundingMethod.Type+1,1));
                                 PriceIsRnded := TRUE;
                               END;
                               NewFieldValue := NewFieldValue + RoundingMethod."Amount Added After";
                             END;
                           END;
                           IF NOT PriceIsRnded THEN
                             NewFieldValue := ROUND(NewFieldValue,0.00001);

                           CASE Selection OF
                             Selection::"Last Direct Cost":
                               VALIDATE("Last Direct Cost",NewFieldValue);
                             Selection::"Standard Cost":
                               VALIDATE("Standard Cost",NewFieldValue);
                           END;
                           MODIFY;

                           RecRef.GETTABLE("Stockkeeping Unit");
                           ChangeLogMgt.LogModification(RecRef,xRecRef);
                         END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=12000;
            SectionHeight=846;
          }
          CONTROLS
          {
          }
           }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=7260;
      Height=4400;
      SaveValues=Yes;
      OnOpenForm=BEGIN
                   IF AdjFactor = 0 THEN
                     AdjFactor := 1;
                   UpdateEnabled;
                 END;

    }
    CONTROLS
    {
      { 1   ;OptionButton ;3410 ;1650 ;3850 ;440  ;Name=Selection1;
                                                   CaptionML=[ENU=Unit Price;
                                                              ESP=Precio venta];
                                                   SourceExpr=Selection;
                                                   OptionValue=Unit Price }
      { 21  ;Label        ;0    ;550  ;3300 ;440  ;CaptionML=[ENU=Adjust Field;
                                                              ESP=Campo ajuste] }
      { 2   ;OptionButton ;3410 ;2200 ;3850 ;440  ;Name=Selection2;
                                                   CaptionML=[ENU=Profit %;
                                                              ESP=% Bf§ bruto];
                                                   SourceExpr=Selection;
                                                   OptionValue=Profit % }
      { 3   ;OptionButton ;3410 ;2750 ;3850 ;440  ;Name=Selection3;
                                                   CaptionML=[ENU=Indirect Cost %;
                                                              ESP=% Coste indirecto];
                                                   SourceExpr=Selection;
                                                   OptionValue=Indirect Cost % }
      { 4   ;OptionButton ;3410 ;550  ;3850 ;440  ;CaptionML=[ENU=Last Direct Cost;
                                                              ESP=éltimo coste directo];
                                                   SourceExpr=Selection;
                                                   OptionValue=Last Direct Cost }
      { 5   ;OptionButton ;3410 ;1100 ;3850 ;440  ;CaptionML=[ENU=Standard Cost;
                                                              ESP=Coste est ndar];
                                                   SourceExpr=Selection;
                                                   OptionValue=Standard Cost }
      { 7   ;TextBox      ;3410 ;3410 ;2750 ;440  ;CaptionML=[ENU=Adjustment Factor;
                                                              ESP=Factor ajuste];
                                                   DecimalPlaces=0:5;
                                                   SourceExpr=AdjFactor;
                                                   MinValue=0 }
      { 27  ;Label        ;0    ;3410 ;3300 ;440  ;ParentControl=7 }
      { 8   ;TextBox      ;3410 ;3960 ;2750 ;440  ;CaptionML=[ENU=Rounding Method;
                                                              ESP=Mtodo redondeo];
                                                   SourceExpr=RoundingMethod.Code;
                                                   TableRelation="Rounding Method" }
      { 28  ;Label        ;0    ;3960 ;3300 ;440  ;ParentControl=8 }
      { 6   ;TextBox      ;3410 ;0    ;2750 ;440  ;CaptionML=[ENU=Adjust;
                                                              ESP=Ajustar];
                                                   OptionCaptionML=[ENU=Item Card,Stockkeeping Unit Card;
                                                                    ESP=Ficha producto,Ficha uds. almac.];
                                                   SourceExpr=AdjustCard;
                                                   OnValidate=BEGIN
                                                                UpdateEnabled;
                                                              END;
                                                               }
      { 9   ;Label        ;0    ;0    ;3300 ;440  ;ParentControl=6 }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnInit=BEGIN
               Selection3Enable := TRUE;
               Selection2Enable := TRUE;
               Selection1Enable := TRUE;
             END;

      OnOpenPage=BEGIN
                   IF AdjFactor = 0 THEN
                     AdjFactor := 1;
                   UpdateEnabled;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             ESP=Opciones] }

      { 6   ;2   ;Field     ;
                  CaptionML=[ENU=Adjust;
                             ESP=Ajustar];
                  OptionCaptionML=[ENU=Item Card,Stockkeeping Unit Card;
                                   ESP=Ficha producto,Ficha uds. almac.];
                  SourceExpr=AdjustCard;
                  OnValidate=BEGIN
                               UpdateEnabled;
                             END;
                              }

      { 4   ;2   ;Field     ;
                  CaptionML=[ENU=Adjust Field;
                             ESP=Campo ajuste];
                  OptionCaptionML=[ENU=Unit Price,Profit %,Indirect Cost %,Last Direct Cost,Standard Cost;
                                   ESP=Precio unitario,% Beneficio,% Coste indirecto,éltimo coste directo,Coste est ndar];
                  SourceExpr=Selection;
                  OnValidate=BEGIN
                               IF Selection = Selection::"Indirect Cost %" THEN
                                 IndirectCost37SelectionOnValid;
                               IF Selection = Selection::"Profit %" THEN
                                 Profit37SelectionOnValidate;
                               IF Selection = Selection::"Unit Price" THEN
                                 UnitPriceSelectionOnValidate;
                             END;
                              }

      { 7   ;2   ;Field     ;
                  CaptionML=[ENU=Adjustment Factor;
                             ESP=Factor ajuste];
                  DecimalPlaces=0:5;
                  SourceExpr=AdjFactor;
                  MinValue=0 }

      { 8   ;2   ;Field     ;
                  CaptionML=[ENU=Rounding Method;
                             ESP=Mtodo redondeo];
                  SourceExpr=RoundingMethod.Code;
                  TableRelation="Rounding Method" }

    }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Processing items  #1##########;ESP=Procesando prods. #1##########';
      Text002@1001 : TextConst 'ENU=Processing items     #1##########\;ESP=Procesando productos #1##########\';
      Text003@1002 : TextConst 'ENU=Processing locations #2##########\;ESP=Procesando almacenes #2##########\';
      Text004@1003 : TextConst 'ENU=Processing variants  #3##########;ESP=Procesando variantes #3##########';
      RoundingMethod@1004 : Record 42;
      GLSetup@1012 : Record 98;
      Window@1005 : Dialog;
      NewFieldValue@1006 : Decimal;
      OldFieldValue@1007 : Decimal;
      PriceIsRnded@1008 : Boolean;
      GLSetupRead@1013 : Boolean;
      AdjFactor@1009 : Decimal;
      Selection@1010 : 'Unit Price,Profit %,Indirect Cost %,Last Direct Cost,Standard Cost';
      AdjustCard@1011 : 'Item Card,Stockkeeping Unit Card';
      Selection1Enable@19032709 : Boolean INDATASET;
      Selection2Enable@19007109 : Boolean INDATASET;
      Selection3Enable@19016581 : Boolean INDATASET;
      Text666@19003950 : TextConst 'ENU=%1 is not a valid selection.;ESP=%1 no es una selecci¢n v lida.';

    PROCEDURE UpdateEnabled@1();
    BEGIN
      IF ISSERVICETIER THEN BEGIN
        PageUpdateEnabled;
        EXIT;
      END;
      IF AdjustCard = AdjustCard::"Stockkeeping Unit Card" THEN BEGIN
        IF Selection < 3 THEN
          Selection := 3;
        IF NOT ISSERVICETIER THEN BEGIN
          RequestOptionsForm.Selection1.ENABLED(FALSE);
          RequestOptionsForm.Selection2.ENABLED(FALSE);
          RequestOptionsForm.Selection3.ENABLED(FALSE);
        END;
      END ELSE BEGIN
        IF NOT ISSERVICETIER THEN BEGIN
          RequestOptionsForm.Selection1.ENABLED(TRUE);
          RequestOptionsForm.Selection2.ENABLED(TRUE);
          RequestOptionsForm.Selection3.ENABLED(TRUE);
        END;
      END;
    END;

    LOCAL PROCEDURE GetGLSetup@14();
    BEGIN
      IF NOT GLSetupRead THEN
        GLSetup.GET;
      GLSetupRead := TRUE;
    END;

    LOCAL PROCEDURE PageUpdateEnabled@19050232();
    BEGIN
      IF AdjustCard = AdjustCard::"Stockkeeping Unit Card" THEN BEGIN
        IF Selection < 3 THEN
          Selection := 3;
        IF NOT ISSERVICETIER THEN BEGIN
          Selection1Enable := FALSE;
          Selection2Enable := FALSE;
          Selection3Enable := FALSE;
        END;
      END ELSE BEGIN
        IF NOT ISSERVICETIER THEN BEGIN
          Selection1Enable := TRUE;
          Selection2Enable := TRUE;
          Selection3Enable := TRUE;
        END;
      END;
    END;

    LOCAL PROCEDURE UnitPriceSelectionOnValidate@19034063();
    BEGIN
      IF NOT (Selection1Enable) THEN
        ERROR(Text666, Selection);
    END;

    LOCAL PROCEDURE Profit37SelectionOnValidate@19033633();
    BEGIN
      IF NOT (Selection2Enable) THEN
        ERROR(Text666, Selection);
    END;

    LOCAL PROCEDURE IndirectCost37SelectionOnValid@19020400();
    BEGIN
      IF NOT (Selection3Enable) THEN
        ERROR(Text666, Selection);
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}
