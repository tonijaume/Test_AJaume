OBJECT Report 99008512 BizTalk 2004 - System Check
{
  OBJECT-PROPERTIES
  {
    Date=11/12/10;
    Time=12:00:00;
    Version List=NAVW16.00.10;
  }
  PROPERTIES
  {
    CaptionML=[ENU=BizTalk - System Check;
               ESP=BizTalk - Comprobaci¢n sistema];
  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table2000000006;
        NewPagePerRecord=Yes;
        OnAfterGetRecord=VAR
                           Continue@1000 : Boolean;
                         BEGIN
                           Continue := TRUE;
                           CLEAR(BizTalkCheckMessage);
                           BizTalkCheckMessage.CHANGECOMPANY(Name);
                           BizTalkCheckMessage.DELETEALL;

                           BizTalkMgtSetup.CHANGECOMPANY(Name);
                           IF BizTalkMgtSetup.GET THEN BEGIN
                             IF CGeneral THEN
                               Continue := CheckGeneral(Name);
                             IF Continue AND CAgreements THEN
                               Continue := CheckAgreements(Name);
                             IF Continue AND CNas THEN
                               Continue := CheckNas;
                             IF Continue AND CCGAdaptor THEN
                               Continue := CheckCGAdaptor;

                           END ELSE
                             InsertMessage(Text000,Text046,Name);
                         END;

      }
      SECTIONS
      {
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table99008521;
        DataItemTableView=SORTING(Message Check ID);
        DataItemVarName=BizTalkCheckMessage;
        DataItemLink=Company=FIELD(Name);
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Header;
            PrintOnEveryPage=Yes;
            SectionWidth=18150;
            SectionHeight=1269;
          }
          CONTROLS
          {
            { 1   ;Label        ;0    ;0    ;7500 ;423  ;FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=[ENU=BizTalk System Check Messages;
                                                                    ESP=Mensajes de comprobaci¢n de sistema BizTalk];
                                                         DataSetFieldName=BizTalk_System_Check_MessagesCaption }
            { 2   ;TextBox      ;14850;0    ;3150 ;423  ;HorzAlign=Right;
                                                         SourceExpr=FORMAT(TODAY,0,4);
                                                         DataSetFieldName=FORMAT_TODAY_0_4_ }
            { 3   ;TextBox      ;0    ;423  ;7500 ;423  ;SourceExpr=Company;
                                                         DataSetFieldName=BizTalkCheckMessage_Company }
            { 4   ;TextBox      ;17700;423  ;450  ;423  ;CaptionML=[ENU=Page;
                                                                    ESP=P g.];
                                                         SourceExpr=CurrReport.PAGENO;
                                                         DataSetFieldName=CurrReport_PAGENO }
            { 5   ;Label        ;16950;423  ;750  ;423  ;ParentControl=4;
                                                         DataSetFieldName=CurrReport_PAGENOCaption }
            { 6   ;TextBox      ;15900;846  ;2250 ;423  ;HorzAlign=Right;
                                                         SourceExpr=USERID;
                                                         DataSetFieldName=USERID }
          }
           }
        { PROPERTIES
          {
            SectionType=Header;
            PrintOnEveryPage=Yes;
            SectionWidth=18150;
            SectionHeight=1269;
            OnPostSection=BEGIN
                            CheckType := '';
                          END;

          }
          CONTROLS
          {
            { 12  ;Label        ;450  ;0    ;2250 ;846  ;ParentControl=11;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         DataSetFieldName=BizTalkCheckMessage__Check_Type_Caption }
            { 15  ;Label        ;4350 ;0    ;4500 ;846  ;ParentControl=14;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         DataSetFieldName=BizTalkCheckMessage_MessageCaption }
          }
           }
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=18150;
            SectionHeight=1269;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT(CheckType <> "Check Type");
                         END;

            OnPostSection=BEGIN
                            CheckType := "Check Type";
                          END;

          }
          CONTROLS
          {
            { 11  ;TextBox      ;450  ;423  ;3300 ;423  ;HorzAlign=Left;
                                                         SourceExpr="Check Type";
                                                         DataSetFieldName=BizTalkCheckMessage__Check_Type_ }
            { 7   ;Label        ;4350 ;423  ;3150 ;423  ;CaptionML=[ENU=Status;
                                                                    ESP=Estado];
                                                         DataSetFieldName=StatusCaption }
          }
           }
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=18150;
            SectionHeight=423;
          }
          CONTROLS
          {
            { 14  ;TextBox      ;4350 ;0    ;13650;423  ;HorzAlign=Left;
                                                         SourceExpr=Message;
                                                         DataSetFieldName=BizTalkCheckMessage_Message }
          }
           }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=4070;
      Height=2310;
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 7   ;Label        ;0    ;0    ;3300 ;440  ;ParentControl=8;
                                                   CaptionML=[ENU=General Setting Check;
                                                              ESP=Comprobaci¢n de configuraci¢n general] }
      { 8   ;CheckBox     ;3410 ;0    ;440  ;440  ;ShowCaption=No;
                                                   SourceExpr=CGeneral }
      { 2   ;Label        ;0    ;550  ;3300 ;440  ;CaptionML=[ENU=Agreements Check;
                                                              ESP=Comprobar acuerdos] }
      { 3   ;CheckBox     ;3410 ;550  ;440  ;440  ;ShowCaption=No;
                                                   SourceExpr=CAgreements }
      { 1   ;Label        ;0    ;1100 ;3300 ;440  ;CaptionML=[ENU=NAV App. Server;
                                                              ESP=Servidor de apps. NAV] }
      { 4   ;CheckBox     ;3410 ;1100 ;440  ;440  ;ShowCaption=No;
                                                   SourceExpr=CNas }
      { 5   ;CheckBox     ;3410 ;1650 ;440  ;440  ;ShowCaption=No;
                                                   SourceExpr=CCGAdaptor }
      { 9   ;Label        ;0    ;1650 ;3300 ;440  ;CaptionML=[ENU=CG Adaptor;
                                                              ESP=Adaptador CG] }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             ESP=Opciones] }

      { 8   ;2   ;Field     ;
                  CaptionML=[ENU=General Setting Check;
                             ESP=Comprobaci¢n config. general];
                  SourceExpr=CGeneral }

      { 3   ;2   ;Field     ;
                  CaptionML=[ENU=Agreements Check;
                             ESP=Comprobar acuerdos];
                  SourceExpr=CAgreements }

      { 4   ;2   ;Field     ;
                  CaptionML=[ENU=NAV App. Server;
                             ESP=Servidor de apps. NAV];
                  SourceExpr=CNas }

      { 5   ;2   ;Field     ;
                  CaptionML=[ENU=CG Adaptor;
                             ESP=Adaptador CG];
                  SourceExpr=CCGAdaptor }

    }
  }
  CODE
  {
    VAR
      Text000@1007 : TextConst 'ENU=General Setting Check;ESP=Comprobaci¢n config. general';
      Text001@1001 : TextConst 'ENU=Warning: You have not entered a Rqst. Srv. IP Address;ESP=Advertencia: no indic¢ la dir. IP del servidor';
      Text002@1002 : TextConst 'ENU=Warning: You have not entered a Rqst. Srv. Port No;ESP=Advertencia: no indic¢ el n§ de puerto del servidor';
      Text003@1003 : TextConst 'ENU=Warning: You have not entered an Appln. Srv./Broker IP Address;ESP=Advertencia: no indic¢ la dir. IP de Servidor Appl./Broker';
      Text004@1004 : TextConst 'ENU=Warning: You have not entered an Appln. Srv./BrokerPort No.;ESP=Advertencia: no indic¢ el n§ de puerto de Serv. Appl./Broker';
      Text006@1013 : TextConst 'ENU=Warning: You have not entered an e-mail profile name.;ESP=Atenci¢n: No ha introducido ning£n nombre de perfil de correo.';
      Text007@1014 : TextConst 'ENU=Warning: You have not entered the system administrator''s e-mail.;ESP=Atenci¢n: No ha introducido el correo del administrador del sistema.';
      Text008@1015 : TextConst 'ENU=Warning: The program will not send any system error e-mails.;ESP=Atenci¢n: el programa no enviar  ning£n correo de error de sistema.';
      Text009@1016 : TextConst 'ENU=You have not entered a profile for the technical administrator.;ESP=No ha introducido ning£n perfil para el administrador tcnico.';
      Text010@1017 : TextConst 'ENU=There are no messages.;ESP=No hay ning£n mensaje.';
      BizTalkMgtSetup@1020 : Record 99008512;
      Check@1018 : Automation "{244B7B21-2FBE-4189-A6A8-B8E90E6F83B5} 6.0:{1CCD5FFD-4FDF-4C7F-A048-7EAC51AF694C}:Unknown Automation Server.Unknown Class";
      CheckType@1005 : Text[30];
      CGeneral@1000 : Boolean;
      CAgreements@1009 : Boolean;
      CNas@1022 : Boolean;
      CCGAdaptor@1023 : Boolean;
      CLocationOrchestration@1024 : Boolean;
      ErrorsFound@1006 : Boolean;
      Text011@1010 : TextConst 'ENU=There are no Agreements for Partner %1;ESP=No hay acuerdos para el socio %1';
      Text012@1011 : TextConst 'ENU=Agreement %1 for Partner %2 is not active.;ESP=El acuerdo %1 para el socio %2 no est  activo.';
      Text013@1012 : TextConst 'ENU="Partner %1 do not have a Destination Address  ";ESP="No existe una direcci¢n de destino para el socio %1  "';
      Text035@1008 : TextConst 'ENU=Agreement Check;ESP=Comprobaci¢n de acuerdos';
      Text046@1025 : TextConst 'ENU=There is no BizTalk Management Setup record;ESP=No existe ning£n registro de Conf. gesti¢n BizTalk';
      Text047@1019 : TextConst 'ENU=Nas Check;ESP=Comprobaci¢n NAS';
      Text048@1021 : TextConst 'ENU=There is no contact to the Application Server.;ESP=No hay contacto con Application Server.';
      Text049@1026 : TextConst 'ENU=Adaptor Check;ESP=Comprobaci¢n adaptador';
      Text050@1027 : TextConst 'ENU=The adaptor is not installed.;ESP=El adaptador no est  instalado.';
      Text051@1028 : TextConst 'ENU=There is contact to the Application Server.;ESP=Hay contacto con Application Server.';
      Text052@1029 : TextConst 'ENU=The adaptor is installed.;ESP=El adaptador est  instalado.';

    LOCAL PROCEDURE CheckGeneral@6(CompName@1000 : Text[30]) : Boolean;
    VAR
      TechnicalNotification@1003 : Record 99008519;
      SuspQueueCheckers@1004 : Boolean;
    BEGIN
      ErrorsFound := FALSE;

      IF BizTalkMgtSetup."E-Mail Profile Name" = '' THEN
        InsertMessage(Text000,Text006,CompName);

      IF BizTalkMgtSetup."System Administrator E-Mail" = '' THEN
        InsertMessage(Text000,Text007,CompName);

      IF NOT BizTalkMgtSetup."Send System Error Description" THEN
        InsertMessage(Text000,Text008,CompName);

      TechnicalNotification.CHANGECOMPANY(CompName);
      IF NOT TechnicalNotification.GET THEN
        InsertMessage(Text000,Text009,CompName)
      ELSE
        IF TechnicalNotification."E-Mail" = '' THEN
          InsertMessage(Text000,Text009,CompName);

      IF BizTalkMgtSetup."Rqst. Srv. IP Address" = '' THEN
        InsertMessage(Text000,Text001,CompName);

      IF BizTalkMgtSetup."Rqst. Srv. Port No." = 0 THEN
        InsertMessage(Text000,Text002,CompName);

      IF BizTalkMgtSetup."Appln. Srv./Broker IP Address" = '' THEN
        InsertMessage(Text000,Text003,CompName);

      IF BizTalkMgtSetup."Appln. Srv./Broker Port No." = 0 THEN
        InsertMessage(Text000,Text004,CompName);

      IF NOT ErrorsFound THEN
        InsertMessage(Text000,Text010,CompName);

      EXIT(TRUE);
    END;

    LOCAL PROCEDURE CheckAgreements@1(CompName@1000 : Text[30]) : Boolean;
    VAR
      BTSPartnerLine@1001 : Record 99008516;
      BTSPartnerHeader@1002 : Record 99008513;
    BEGIN
      ErrorsFound := FALSE;
      IF BTSPartnerHeader.FIND('-') THEN
        REPEAT
          IF BTSPartnerHeader."Destination Address" = '' THEN
            InsertMessage(Text035,STRSUBSTNO(Text013,BTSPartnerHeader."BizTalk Partner No."),CompName);

          BTSPartnerLine.SETRANGE("BizTalk Partner No.",BTSPartnerHeader."BizTalk Partner No.");
          IF BTSPartnerLine.FIND('-') THEN
            REPEAT
            IF NOT BTSPartnerLine.Active THEN
              InsertMessage(Text035,STRSUBSTNO(Text012,BTSPartnerLine."Agreement Name",BTSPartnerHeader."BizTalk Partner No."),CompName)
      ;
            UNTIL BTSPartnerLine.NEXT = 0
          ELSE
            InsertMessage(Text035,STRSUBSTNO(Text011,BTSPartnerHeader."BizTalk Partner No."),CompName);
        UNTIL BTSPartnerHeader.NEXT = 0;

      IF NOT ErrorsFound THEN
        InsertMessage(Text035,Text010,CompName);
      EXIT(TRUE)
    END;

    LOCAL PROCEDURE CheckNas@2() : Boolean;
    VAR
      BizTalkMgtSetup@1000 : Record 99008512;
      ReturnCode@1001 : Integer;
    BEGIN
      CREATE(Check);
      ErrorsFound := FALSE;
      BizTalkMgtSetup.GET;
      Check.ipAddress := BizTalkMgtSetup."Rqst. Srv. IP Address";
      Check.portNumber := BizTalkMgtSetup."Rqst. Srv. Port No.";
      Check.encrypt := BizTalkMgtSetup."Use Encryption";
      Check.transportType := 1;

      ReturnCode :=
        Check.BTS2004NAS(BizTalkMgtSetup."Appln. Srv./Broker IP Address",BizTalkMgtSetup."Appln. Srv./Broker Port No.",COMPANYNAME);

      IF ReturnCode <> 0 THEN
        InsertMessage(Text047,Text048,COMPANYNAME)
      ELSE
        InsertMessage(Text047,Text051,COMPANYNAME);

      IF NOT ErrorsFound THEN
        InsertMessage(Text047,Text010,COMPANYNAME);

      CLEAR(Check);
      EXIT(TRUE);
    END;

    LOCAL PROCEDURE CheckCGAdaptor@3() : Boolean;
    VAR
      ReturnCode@1000 : Integer;
    BEGIN
      CREATE(Check);
      ErrorsFound := FALSE;
      BizTalkMgtSetup.GET;
      Check.ipAddress := BizTalkMgtSetup."Rqst. Srv. IP Address";
      Check.portNumber := BizTalkMgtSetup."Rqst. Srv. Port No.";
      Check.encrypt := BizTalkMgtSetup."Use Encryption";
      Check.transportType := 1;

      ReturnCode := Check.BTS2004CGAdaptor(COMPANYNAME);

      IF ReturnCode <> 0 THEN
        InsertMessage(Text049,Text050,COMPANYNAME)
      ELSE
        InsertMessage(Text049,Text052,COMPANYNAME);

      IF NOT ErrorsFound THEN
        InsertMessage(Text049,Text010,COMPANYNAME);
      CLEAR(Check);
      EXIT(TRUE)
    END;

    LOCAL PROCEDURE InsertMessage@7(CheckType@1000 : Text[30];Message@1001 : Text[250];CompName@1002 : Text[30]);
    VAR
      NewID@1003 : Integer;
      RestOfString@1004 : Text[250];
      SplitMessage@1005 : Text[250];
      SplitString@1006 : Text[250];
    BEGIN
      IF BizTalkCheckMessage.FIND('+') THEN
        NewID := BizTalkCheckMessage."Message Check ID"
      ELSE
        NewID := 0;

      RestOfString := Message;
      REPEAT
        SplitMessage := RestOfString;
        SplitLine(SplitMessage,120,RestOfString,SplitString);
        NewID := NewID + 1;
        BizTalkCheckMessage."Message Check ID" := NewID;
        BizTalkCheckMessage.Company := CompName;
        BizTalkCheckMessage."Check Type" := CheckType;
        BizTalkCheckMessage.Message := SplitString;
        BizTalkCheckMessage.INSERT;
      UNTIL RestOfString = '';

      ErrorsFound := TRUE;
    END;

    LOCAL PROCEDURE SplitLine@8(StringToSplit@1000 : Text[250];SplitLength@1001 : Integer;VAR RestOfString@1002 : Text[250];VAR SplitString@1003 : Text[250]);
    VAR
      Position@1004 : Integer;
      TestSpace@1005 : Text[30];
      SpaceFound@1006 : Boolean;
      StringToTest@1007 : Text[250];
    BEGIN
      RestOfString := '';
      SplitString := '';
      IF (STRLEN(StringToSplit)=0) OR (SplitLength=0) THEN
        EXIT;
      IF STRLEN(StringToSplit) <= SplitLength THEN BEGIN
        SplitString := StringToSplit;
      END
      ELSE BEGIN
        StringToTest := COPYSTR(StringToSplit,1,SplitLength);
        Position := STRLEN(StringToTest) + 1;
        SpaceFound := FALSE;
        REPEAT
          Position := Position - 1;
          TestSpace := COPYSTR(StringToTest,Position,1);
          IF TestSpace = ' ' THEN
            SpaceFound := TRUE;
        UNTIL (SpaceFound) OR (Position=0);
        IF (Position > 0) THEN BEGIN
          SplitString := COPYSTR(StringToSplit,1,Position - 1);
          RestOfString := COPYSTR(StringToSplit,Position + 1, Position + STRLEN(StringToSplit));
        END;
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}
