OBJECT Report 7310 Calculate Bins
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=NAVW16.00.01;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Calculate Bins;
               ESP=Calcular ubicaciones];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  BinCreateFilter.TESTFIELD(Code);
                  IF BinCreateFilter.GET(BinCreateFilter.Code) THEN;
                  BinCreateWkshLine.SETRANGE("Worksheet Template Name",CurrTemplateName);
                  BinCreateWkshLine.SETRANGE(Name,CurrWorksheetName);
                  BinCreateWkshLine.SETRANGE("Location Code",CurrLocationCode);
                  IF BinCreateWkshLine.FIND('+') THEN
                    LineNo := BinCreateWkshLine."Line No." + 10000
                  ELSE
                    LineNo := 10000;
                  BinCreateWkshLine.INIT;
                  WITH BinCreateWkshLine DO BEGIN
                    "Worksheet Template Name" := CurrTemplateName;
                    Name := CurrWorksheetName;
                    "Location Code" := CurrLocationCode;
                    "Zone Code" := BinCreateFilter."Zone Code";
                    Description := BinCreateFilter."Bin Description";
                    "Bin Type Code" := BinCreateFilter."Bin Type Code";
                    "Warehouse Class Code" := BinCreateFilter."Warehouse Class Code";
                    "Block Movement" := BinCreateFilter."Block Movement";
                    "Special Equipment Code" := BinCreateFilter."Special Equipment Code";
                    "Bin Ranking" := BinCreateFilter."Bin Ranking";
                    "Maximum Cubage" := BinCreateFilter."Maximum Cubage";
                    "Maximum Weight" := BinCreateFilter."Maximum Weight";
                  END;
                END;

  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number);
        DataItemVarName=Rack2;
        OnPreDataItem=BEGIN
                        Rack := FromRack;
                      END;

        OnAfterGetRecord=BEGIN
                           IF INCSTR(Rack) = Rack THEN
                             CurrReport.BREAK;
                           IF Rack > ToRack THEN
                             CurrReport.BREAK;
                           IF STRLEN(Rack) > STRLEN(ToRack) THEN
                             CurrReport.BREAK;

                           IF (FromSection = '') AND (ToSection = '') THEN
                           BinCreateWksh;
                         END;

      }
      SECTIONS
      {
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number);
        DataItemVarName=Section2;
        OnPreDataItem=BEGIN
                        Section := FromSection;
                      END;

        OnAfterGetRecord=BEGIN
                           IF INCSTR(Section) = Section THEN
                             CurrReport.BREAK;
                           IF Section > ToSection THEN
                             CurrReport.BREAK;
                           IF STRLEN(Section) > STRLEN(ToSection) THEN
                             CurrReport.BREAK;

                           IF (FromLevel = '') AND (ToLevel = '') THEN
                           BinCreateWksh;
                         END;

        OnPostDataItem=BEGIN
                         Rack := INCSTR(Rack);
                       END;

      }
      SECTIONS
      {
      }
       }
    { PROPERTIES
      {
        DataItemIndent=2;
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number);
        DataItemVarName=Level2;
        OnPreDataItem=BEGIN
                        Level := FromLevel;
                      END;

        OnAfterGetRecord=BEGIN
                           IF INCSTR(Level) = Level THEN
                             CurrReport.BREAK;
                           IF Level > ToLevel THEN
                             CurrReport.BREAK;
                           IF STRLEN(Level) > STRLEN(ToLevel) THEN
                             CurrReport.BREAK;

                           BinCreateWksh;

                           Level := INCSTR(Level);
                         END;

        OnPostDataItem=BEGIN
                         Section := INCSTR(Section);
                       END;

      }
      SECTIONS
      {
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=8910;
      Height=8690;
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 6   ;Label        ;0    ;2310 ;3300 ;440  ;LeaderDots=No;
                                                   CaptionML=[ENU=Rack;
                                                              ESP=Estanter¡a] }
      { 11  ;TextBox      ;3410 ;2860 ;2750 ;440  ;CaptionML=[ENU=From No.;
                                                              ESP=Desde N§];
                                                   SourceExpr=FromRack;
                                                   OnValidate=BEGIN
                                                                IF (FromRack <> '') AND
                                                                   (ToRack <> '') AND
                                                                   (STRLEN(FromRack) <> STRLEN(ToRack))
                                                                THEN
                                                                  ERROR(Text004);
                                                              END;
                                                               }
      { 12  ;Label        ;220  ;2860 ;3080 ;440  ;ParentControl=11 }
      { 13  ;TextBox      ;3410 ;3410 ;2750 ;440  ;CaptionML=[ENU=To No.;
                                                              ESP=Hasta N§];
                                                   SourceExpr=ToRack;
                                                   OnValidate=BEGIN
                                                                IF (FromRack <> '') AND
                                                                   (ToRack <> '') AND
                                                                   (STRLEN(FromRack) <> STRLEN(ToRack))
                                                                THEN
                                                                  ERROR(Text004);
                                                              END;
                                                               }
      { 14  ;Label        ;220  ;3410 ;3080 ;440  ;ParentControl=13 }
      { 15  ;Label        ;0    ;4070 ;3300 ;440  ;LeaderDots=No;
                                                   CaptionML=[ENU=Section;
                                                              ESP=Secci¢n] }
      { 16  ;TextBox      ;3410 ;4620 ;2750 ;440  ;CaptionML=[ENU=From No.;
                                                              ESP=Desde N§];
                                                   SourceExpr=FromSection;
                                                   OnValidate=BEGIN
                                                                IF (FromSection <> '') AND
                                                                   (ToSection <> '') AND
                                                                   (STRLEN(FromSection) <> STRLEN(ToSection))
                                                                THEN
                                                                  ERROR(Text004);
                                                              END;
                                                               }
      { 17  ;Label        ;220  ;4620 ;3080 ;440  ;ParentControl=16 }
      { 18  ;TextBox      ;3410 ;5170 ;2750 ;440  ;CaptionML=[ENU=To No.;
                                                              ESP=Hasta N§];
                                                   SourceExpr=ToSection;
                                                   OnValidate=BEGIN
                                                                IF (FromSection <> '') AND
                                                                   (ToSection <> '') AND
                                                                   (STRLEN(FromSection) <> STRLEN(ToSection))
                                                                THEN
                                                                  ERROR(Text004);
                                                              END;
                                                               }
      { 19  ;Label        ;220  ;5170 ;3080 ;440  ;ParentControl=18 }
      { 20  ;Label        ;0    ;5830 ;3300 ;440  ;LeaderDots=No;
                                                   CaptionML=[ENU=Level;
                                                              ESP=Nivel] }
      { 21  ;TextBox      ;3410 ;6380 ;2750 ;440  ;CaptionML=[ENU=From No.;
                                                              ESP=Desde N§];
                                                   SourceExpr=FromLevel;
                                                   OnValidate=BEGIN
                                                                IF (FromLevel <> '') AND
                                                                   (ToLevel <> '') AND
                                                                   (STRLEN(FromLevel) <> STRLEN(ToLevel))
                                                                THEN
                                                                  ERROR(Text004);
                                                              END;
                                                               }
      { 22  ;Label        ;220  ;6380 ;3080 ;440  ;ParentControl=21 }
      { 23  ;TextBox      ;3410 ;6930 ;2750 ;440  ;CaptionML=[ENU=To No.;
                                                              ESP=Hasta N§];
                                                   SourceExpr=ToLevel;
                                                   OnValidate=BEGIN
                                                                IF (FromLevel <> '') AND
                                                                   (ToLevel <> '') AND
                                                                   (STRLEN(FromLevel) <> STRLEN(ToLevel))
                                                                THEN
                                                                  ERROR(Text004);
                                                              END;
                                                               }
      { 24  ;Label        ;220  ;6930 ;3080 ;440  ;ParentControl=23 }
      { 25  ;TextBox      ;3410 ;7590 ;550  ;440  ;CaptionML=[ENU=Field Separator;
                                                              ESP=Separador campo];
                                                   SourceExpr=FieldSeparator }
      { 26  ;Label        ;0    ;7590 ;3300 ;440  ;ParentControl=25 }
      { 27  ;CheckBox     ;3410 ;8250 ;440  ;440  ;ShowCaption=No;
                                                   CaptionML=[ENU=Check on Existing Bin;
                                                              ESP=Comprueba en ubic. actual];
                                                   SourceExpr=CheckOnBin }
      { 28  ;Label        ;0    ;8250 ;3300 ;440  ;ParentControl=27 }
      { 29  ;TextBox      ;3410 ;0    ;2750 ;440  ;CaptionML=[ENU=Bin Template Code;
                                                              ESP=C¢d. plantilla ubicaci¢n];
                                                   SourceExpr=BinCreateFilter.Code;
                                                   OnValidate=BEGIN
                                                                IF  BinCreateFilter.Code <> '' THEN BEGIN
                                                                  BinCreateFilter.GET(BinCreateFilter.Code);
                                                                  BinCreateFilter.TESTFIELD("Location Code");
                                                                END ELSE BEGIN
                                                                  BinCreateFilter.Code := '';
                                                                  BinCreateFilter.Description := '';
                                                                  BinCreateFilter."Location Code" := '';
                                                                  BinCreateFilter."Zone Code" := '';
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF CurrLocationCode <> '' THEN BEGIN
                                                                BinCreateFilter.FILTERGROUP := 2;
                                                                BinCreateFilter.SETRANGE("Location Code",CurrLocationCode);
                                                                BinCreateFilter.FILTERGROUP := 0;
                                                              END;
                                                              CLEAR(BinTemplateForm);
                                                              BinTemplateForm.SETTABLEVIEW(BinCreateFilter);
                                                              BinTemplateForm.EDITABLE(FALSE);
                                                              BinTemplateForm.LOOKUPMODE(TRUE);
                                                              IF BinTemplateForm.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                                                BinTemplateForm.GETRECORD(BinCreateFilter);
                                                                BinCreateFilter.VALIDATE(Code);
                                                                BinCreateFilter.TESTFIELD("Location Code");
                                                              END;
                                                            END;
                                                             }
      { 30  ;Label        ;0    ;0    ;3300 ;440  ;ParentControl=29 }
      { 31  ;TextBox      ;3410 ;550  ;5500 ;440  ;CaptionML=[ENU=Description;
                                                              ESP=Descripci¢n];
                                                   SourceExpr=BinCreateFilter.Description }
      { 32  ;Label        ;0    ;550  ;3300 ;440  ;ParentControl=31 }
      { 33  ;TextBox      ;3410 ;1100 ;2750 ;440  ;Editable=No;
                                                   CaptionML=[ENU=Location Code;
                                                              ESP=C¢d. almacn];
                                                   SourceExpr=BinCreateFilter."Location Code" }
      { 34  ;Label        ;0    ;1100 ;3300 ;440  ;ParentControl=33 }
      { 35  ;TextBox      ;3410 ;1650 ;2750 ;440  ;Editable=No;
                                                   CaptionML=[ENU=Zone Code;
                                                              ESP=C¢d. zona];
                                                   SourceExpr=BinCreateFilter."Zone Code" }
      { 36  ;Label        ;0    ;1650 ;3300 ;440  ;ParentControl=35 }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             ESP=Opciones] }

      { 29  ;2   ;Field     ;
                  CaptionML=[ENU=Bin Template Code;
                             ESP=C¢d. plantilla ubicaci¢n];
                  SourceExpr=BinCreateFilter.Code;
                  OnValidate=BEGIN
                               IF  BinCreateFilter.Code <> '' THEN BEGIN
                                 BinCreateFilter.GET(BinCreateFilter.Code);
                                 BinCreateFilter.TESTFIELD("Location Code");
                               END ELSE BEGIN
                                 BinCreateFilter.Code := '';
                                 BinCreateFilter.Description := '';
                                 BinCreateFilter."Location Code" := '';
                                 BinCreateFilter."Zone Code" := '';
                               END;
                             END;

                  OnLookup=BEGIN
                             IF CurrLocationCode <> '' THEN BEGIN
                               BinCreateFilter.FILTERGROUP := 2;
                               BinCreateFilter.SETRANGE("Location Code",CurrLocationCode);
                               BinCreateFilter.FILTERGROUP := 0;
                             END;
                             CLEAR(BinTemplateForm);
                             BinTemplateForm.SETTABLEVIEW(BinCreateFilter);
                             BinTemplateForm.EDITABLE(FALSE);
                             BinTemplateForm.LOOKUPMODE(TRUE);
                             IF BinTemplateForm.RUNMODAL = ACTION::LookupOK THEN BEGIN
                               BinTemplateForm.GETRECORD(BinCreateFilter);
                               BinCreateFilter.VALIDATE(Code);
                               BinCreateFilter.TESTFIELD("Location Code");
                             END;
                           END;
                            }

      { 31  ;2   ;Field     ;
                  CaptionML=[ENU=Description;
                             ESP=Descripci¢n];
                  SourceExpr=BinCreateFilter.Description }

      { 33  ;2   ;Field     ;
                  CaptionML=[ENU=Location Code;
                             ESP=C¢d. almacn];
                  SourceExpr=BinCreateFilter."Location Code";
                  Editable=FALSE }

      { 35  ;2   ;Field     ;
                  CaptionML=[ENU=Zone Code;
                             ESP=C¢d. zona];
                  SourceExpr=BinCreateFilter."Zone Code";
                  Editable=FALSE }

      { 6   ;2   ;Group     ;
                  CaptionML=[ENU=Rack;
                             ESP=Estanter¡a] }

      { 11  ;3   ;Field     ;
                  CaptionML=[ENU=From No.;
                             ESP=Desde N§];
                  SourceExpr=FromRack;
                  OnValidate=BEGIN
                               IF (FromRack <> '') AND
                                  (ToRack <> '') AND
                                  (STRLEN(FromRack) <> STRLEN(ToRack))
                               THEN
                                 ERROR(Text004);
                             END;
                              }

      { 13  ;3   ;Field     ;
                  CaptionML=[ENU=To No.;
                             ESP=Hasta N§];
                  SourceExpr=ToRack;
                  OnValidate=BEGIN
                               IF (FromRack <> '') AND
                                  (ToRack <> '') AND
                                  (STRLEN(FromRack) <> STRLEN(ToRack))
                               THEN
                                 ERROR(Text004);
                             END;
                              }

      { 15  ;2   ;Group     ;
                  CaptionML=[ENU=Section;
                             ESP=Secci¢n] }

      { 16  ;3   ;Field     ;
                  CaptionML=[ENU=From No.;
                             ESP=Desde N§];
                  SourceExpr=FromSection;
                  OnValidate=BEGIN
                               IF (FromSection <> '') AND
                                  (ToSection <> '') AND
                                  (STRLEN(FromSection) <> STRLEN(ToSection))
                               THEN
                                 ERROR(Text004);
                             END;
                              }

      { 18  ;3   ;Field     ;
                  CaptionML=[ENU=To No.;
                             ESP=Hasta N§];
                  SourceExpr=ToSection;
                  OnValidate=BEGIN
                               IF (FromSection <> '') AND
                                  (ToSection <> '') AND
                                  (STRLEN(FromSection) <> STRLEN(ToSection))
                               THEN
                                 ERROR(Text004);
                             END;
                              }

      { 20  ;2   ;Group     ;
                  CaptionML=[ENU=Level;
                             ESP=Nivel] }

      { 21  ;3   ;Field     ;
                  CaptionML=[ENU=From No.;
                             ESP=Desde N§];
                  SourceExpr=FromLevel;
                  OnValidate=BEGIN
                               IF (FromLevel <> '') AND
                                  (ToLevel <> '') AND
                                  (STRLEN(FromLevel) <> STRLEN(ToLevel))
                               THEN
                                 ERROR(Text004);
                             END;
                              }

      { 23  ;3   ;Field     ;
                  CaptionML=[ENU=To No.;
                             ESP=Hasta N§];
                  SourceExpr=ToLevel;
                  OnValidate=BEGIN
                               IF (FromLevel <> '') AND
                                  (ToLevel <> '') AND
                                  (STRLEN(FromLevel) <> STRLEN(ToLevel))
                               THEN
                                 ERROR(Text004);
                             END;
                              }

      { 25  ;2   ;Field     ;
                  CaptionML=[ENU=Field Separator;
                             ESP=Separador campo];
                  SourceExpr=FieldSeparator }

      { 27  ;2   ;Field     ;
                  CaptionML=[ENU=Check on Existing Bin;
                             ESP=Comprueba en ubic. actual];
                  SourceExpr=CheckOnBin }

    }
  }
  CODE
  {
    VAR
      Bin@1027 : Record 7354;
      BinCreateFilter@1016 : Record 7335;
      BinCreateWkshLine@1013 : Record 7338;
      BinTemplateForm@1020 : Form 7367;
      CurrTemplateName@1011 : Code[10];
      CurrWorksheetName@1010 : Code[10];
      CurrLocationCode@1000 : Code[10];
      FromRack@1009 : Code[20];
      FromSection@1008 : Code[20];
      FromLevel@1007 : Code[20];
      ToRack@1006 : Code[20];
      ToSection@1005 : Code[20];
      ToLevel@1004 : Code[20];
      FieldSeparator@1003 : Code[1];
      Rack@1017 : Code[20];
      Section@1018 : Code[20];
      Level@1019 : Code[20];
      CheckOnBin@1026 : Boolean;
      Text000@1002 : TextConst 'ENU=The length of %1+%2+%3 is greater then the max. length of %4 (%5).;ESP=La longitud de %1+%2+%3 es mayor que la longitud m xima de %4 (%5).';
      Text001@1025 : TextConst 'ENU=From Rack;ESP=Desde estanter¡a';
      Text002@1024 : TextConst 'ENU=From Section;ESP=Desde secci¢n';
      Text003@1023 : TextConst 'ENU=From Level;ESP=Desde nivel';
      LenFieldSeparator@1001 : Integer;
      LineNo@1014 : Integer;
      Text004@1012 : TextConst 'ENU=The length of the strings inserted in From No. and To No. must be identical.;ESP=La longitud de las cadenas insertadas en Desde n§ y Hasta n§ debe ser idntica.';

    PROCEDURE BinCreateWksh@1();
    BEGIN
      LenFieldSeparator := 0;
      IF FieldSeparator <> '' THEN
        LenFieldSeparator := 2;

      IF (STRLEN(Rack+Section+Level) + LenFieldSeparator) > MAXSTRLEN(BinCreateWkshLine."Bin Code") THEN
        ERROR(Text000,Text001,Text002,Text003,
          BinCreateWkshLine.FIELDCAPTION("Bin Code"),MAXSTRLEN(BinCreateWkshLine."Bin Code"));

      BinCreateWkshLine."Line No." := LineNo;
      BinCreateWkshLine."Bin Code" := Rack + FieldSeparator + Section + FieldSeparator + Level;
      IF NOT CheckOnBin THEN
        BinCreateWkshLine.INSERT(TRUE)
      ELSE BEGIN
        IF Bin.GET(BinCreateWkshLine."Location Code",BinCreateWkshLine."Bin Code") THEN
          EXIT
        ELSE
          BinCreateWkshLine.INSERT(TRUE);
      END;
      LineNo := LineNo + 10000;
    END;

    PROCEDURE SetTemplAndWorksheet@2(TemplateName@1001 : Code[10];WorksheetName@1000 : Code[10];LocationCode@1002 : Code[10]);
    BEGIN
      CurrTemplateName := TemplateName;
      CurrWorksheetName := WorksheetName;
      CurrLocationCode := LocationCode;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}
