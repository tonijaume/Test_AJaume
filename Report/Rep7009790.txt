OBJECT Report 7009790 EXCEL CNT-Hotel passenger list
{
  OBJECT-PROPERTIES
  {
    Date=23/06/15;
    Time=17:45:37;
    Modified=Yes;
    Version List=AIC2009,CNT;
  }
  PROPERTIES
  {
    CaptionML=ESP=CNT-Hotel passenger list;
    ProcessingOnly=Yes;
  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table7009717;
        DataItemTableView=SORTING(TourOperador);
        DataItemVarName=diTouroperador;
        OnPreDataItem=BEGIN
                        wNumHojas := 0;
                      END;

        OnPostDataItem=BEGIN
                         rExcelTMP.GiveUserControl();
                       END;

        ReqFilterFields=TourOperador;
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=18150;
            SectionHeight=846;
          }
          CONTROLS
          {
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table7009744;
        DataItemTableView=SORTING(Fecha entrada,Compa¤ia entrada,Vuelo entrada,IATA origen entrada,Zona servicio entrada,Hotel entrada,Bono)
                          WHERE(Traslado en destino=CONST(No));
        DataItemVarName=diReserva;
        OnPreDataItem=BEGIN
                        IF GETFILTER("Fecha entrada") <> '' THEN
                        BEGIN
                          SETCURRENTKEY("Fecha entrada", "Compa¤ia entrada", "Vuelo entrada", "IATA origen entrada",
                                        "Zona servicio entrada", "Hotel entrada", Bono);
                          wTipoTransfer := wTipoTransfer::Llegada;
                          SETRANGE(Entrada, 1);  // +$006
                        END
                        ELSE
                          IF GETFILTER("Fecha salida") <> '' THEN
                          BEGIN
                            SETCURRENTKEY("Fecha salida", "Compa¤ia salida", "Vuelo salida", "IATA destino salida",
                                          "Zona servicio salida", "Hotel salida", Bono);
                            wTipoTransfer := wTipoTransfer::Salida;
                            SETRANGE(Salida, 1);  // +$006
                          END
                          ELSE
                            ERROR(Text001);

                        //. Vaciamos la tabla temporal
                        rExcelTMP.DELETEALL;

                        wLinea    := 0;
                        wFecha    := 0D;
                        wCompa¤ia := '';
                        wVuelo    := '';
                      END;

        OnAfterGetRecord=BEGIN
                           IF wLinea = 0 THEN
                           BEGIN
                             _LineaCabeceraInforme;

                             wNumHojas += 1;
                           END;

                           wCambio := FALSE; //+$004

                           //. Con cada cambio de fecha cabeceras nuevas

                           IF wTipoTransfer = wTipoTransfer::Llegada THEN
                           BEGIN
                             IF "Fecha entrada" <> wFecha THEN
                             BEGIN
                               wFecha    := "Fecha entrada";
                               wCompa¤ia := "Compa¤ia entrada";
                               wVuelo    := "Vuelo entrada";
                               wCambio   := TRUE; //+$004

                               wLinea += 1;
                               _LineaCabecera1;
                               _LineaCabecera2;
                             END;

                             IF (wCompa¤ia <> "Compa¤ia entrada") OR
                                (wVuelo <> "Vuelo entrada") THEN
                             BEGIN
                               wLinea += 1;
                               wCompa¤ia := "Compa¤ia entrada";
                               wVuelo    := "Vuelo entrada";
                               wCambio   := TRUE; //+$004
                             END;
                           END
                           ELSE
                           BEGIN
                             IF "Fecha salida" <> wFecha THEN
                             BEGIN
                               wFecha    := "Fecha salida";
                               wCompa¤ia := "Compa¤ia salida";
                               wVuelo    := "Vuelo salida";
                               wCambio   := TRUE; //+$004

                               wLinea += 1;
                               _LineaCabecera1;
                               _LineaCabecera2;
                             END;

                             IF (wCompa¤ia <> "Compa¤ia salida") OR
                                (wVuelo <> "Vuelo salida") THEN
                             BEGIN
                               wLinea += 1;
                               wCompa¤ia := "Compa¤ia salida";
                               wVuelo    := "Vuelo salida";
                               wCambio   := TRUE; //+$004
                             END;

                           END;

                           //. Solo una linea por reserva

                           IF ("N§ Reserva" = "N§ Responsable") OR (wCambio) THEN //+$004
                           BEGIN
                             wLinea += 1;

                             _InsertaCeldaExcel(1, Bono, 2, 2, 2, 2, '', 3, 10, FALSE);
                             _InsertaCeldaExcel(2, Nombre, 2, 2, 2, 2, '', 0, 10, FALSE);
                             IF wTipoTransfer = wTipoTransfer::Llegada THEN
                             BEGIN
                               _InsertaCeldaExcel(3, _NombreHotel("Hotel entrada"), 2, 2, 2, 2, '', 0, 10, FALSE);
                             END
                             ELSE
                             BEGIN
                               _InsertaCeldaExcel(3, _NombreHotel("Hotel salida"), 2, 2, 2, 2, '', 0, 10, FALSE);
                             END;

                             _InsertaCeldaExcel(4, FORMAT("Fecha entrada"), 2, 2, 2, 2, '', 3, 10, FALSE);
                             _InsertaCeldaExcel(5, _VueloLlegada, 2, 2, 2, 2, '', 3, 10, FALSE);
                             _InsertaCeldaExcel(6, FORMAT("Hora entrada", 0, '<Hours24,2>:<Minutes,2>'), 2, 2, 2, 2, '', 3, 10, FALSE);
                             _InsertaCeldaExcel(7, FORMAT("IATA destino entrada"), 2, 2, 2, 2, '', 3, 10, FALSE); //+$001

                             _InsertaCeldaExcel(8, FORMAT("Fecha salida"), 2, 2, 2, 2, '', 3, 10, FALSE);
                             _InsertaCeldaExcel(9, _VueloSalida, 2, 2, 2, 2, '', 3, 10, FALSE);
                             _InsertaCeldaExcel(10, FORMAT("Hora salida", 0, '<Hours24,2>:<Minutes,2>'), 2, 2, 2, 2, '', 3, 10, FALSE);

                             _InsertaCeldaExcel(11, FORMAT(_PersonasReserva), 2, 2, 2, 2, '', 3, 10, FALSE);

                             _InsertaCeldaExcel(12, FORMAT(_Pickup), 2, 2, 2, 2, '', 3, 10, FALSE);

                             _InsertaCeldaExcel(13, '', 2, 2, 2, 2, '', 3, 10, FALSE);
                             _InsertaCeldaExcel(14, '', 2, 2, 2, 2, '', 3, 10, FALSE);
                             _InsertaCeldaExcel(15, '', 2, 2, 2, 2, '', 3, 10, FALSE);

                             //+$005 <
                             IF wTipoTransfer = wTipoTransfer::Llegada THEN
                             BEGIN
                               IF diReserva."Transfer Privado Llegada" THEN
                                 _InsertaCeldaExcel(16, Text002, 2, 2, 2, 2, '', 3, 10, FALSE)
                               ELSE
                                 _InsertaCeldaExcel(16, '', 2, 2, 2, 2, '', 3, 10, FALSE);
                             END
                             ELSE
                             BEGIN
                               IF diReserva."Transfer Privado Salida" THEN
                                 _InsertaCeldaExcel(16, Text002, 2, 2, 2, 2, '', 3, 10, FALSE)
                               ELSE
                                 _InsertaCeldaExcel(16, '', 2, 2, 2, 2, '', 3, 10, FALSE);
                             END;
                             //+$005 >
                           END;
                         END;

        OnPostDataItem=BEGIN
                         IF wLinea <> 0 THEN
                         BEGIN
                           IF wNumHojas = 1 THEN
                           BEGIN
                             rExcelTMP.CreateBook;
                             rExcelTMP.BorraSheets();
                           END;

                           rExcelTMP.CreateSheet(diTouroperador.TourOperador, '', COMPANYNAME, USERID, TRUE, (wNumHojas <> 1), Text016);
                         END;
                       END;

        ReqFilterFields=Fecha entrada,Fecha salida,Zona entrada,Zona salida,Compa¤ia entrada,Vuelo entrada,Compa¤ia salida,Vuelo salida;
        DataItemLink=TourOperador=FIELD(TourOperador);
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=18150;
            SectionHeight=0;
          }
          CONTROLS
          {
          }
           }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=9020;
      Height=3410;
    }
    CONTROLS
    {
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      rExcelTMP@1100217000 : TEMPORARY Record 7009785;
      Text001@1100217001 : TextConst 'ENU=Specify a filter to arrival or departure.;ESP=Especifique un filtro de fecha de llegada o de fecha de salida';
      wTipoTransfer@1100217003 : 'Llegada,Salida';
      wLinea@1100217002 : Integer;
      Text002@1100217004 : TextConst 'ENU=PRIVATE TRF;ESP=TRF PRIVADO';
      wFecha@1100217005 : Date;
      Text003@1100217006 : TextConst 'ENU=ARRIVALS;ESP=LLEGADAS';
      Text004@1100217007 : TextConst 'ENU=DEPARTURES;ESP=SALIDAS';
      Text005@1100217008 : TextConst 'ENU=REF;ESP=REF';
      Text006@1100217009 : TextConst 'ENU=SURNAME;ESP=APELLIDO';
      Text007@1100217010 : TextConst 'ENU=HOTEL;ESP=HOTEL';
      Text008@1100217011 : TextConst 'ENU=DATE;ESP=FECHA';
      Text009@1100217012 : TextConst 'ENU=FLIGHT;ESP=VUELO';
      Text010@1100217013 : TextConst 'ENU=TIME;ESP=HORA';
      Text011@1100217014 : TextConst 'ENU=IATA;ESP=AEROP.';
      Text012@1100217015 : TextConst 'ENU=PAX;ESP=PAX';
      Text013@1100217016 : TextConst 'ENU=PICK-UP;ESP=PICK-UP';
      Text014@1100217017 : TextConst 'ENU=NOTES;ESP=OBSERVACIONES';
      Text015@1100217018 : TextConst 'ENU=TRANSFER;ESP=TRANSFER';
      Text016@1100217019 : TextConst 'ENU=CREATING REPORT;ESP=CREANDO INFORME';
      Text018@1100217021 : TextConst 'ENU=TRANSFERS;ESP=TRASLADOS';
      wCompa¤ia@1100217020 : Code[10];
      wVuelo@1100217022 : Code[10];
      wNumHojas@1100217023 : Integer;
      wCambio@1100217024 : Boolean;

    LOCAL PROCEDURE _LineaCabeceraInforme@1100217001();
    BEGIN
      wLinea += 1;

      _InsertaCeldaExcel(1, Text018, 0, 0, 0, 0, STRSUBSTNO('B%1', wLinea), 0, 14, TRUE);
      IF wTipoTransfer = wTipoTransfer::Llegada THEN
        _InsertaCeldaExcel(3, Text003, 0, 0, 0, 0, '', 0, 14, TRUE)
      ELSE
        _InsertaCeldaExcel(3, Text004, 0, 0, 0, 0, '', 0, 14, TRUE);

      _InsertaCeldaExcel(4, diTouroperador.Nombre, 0, 0, 0, 0, STRSUBSTNO('I%1', wLinea), 0, 14, TRUE);
    END;

    LOCAL PROCEDURE _LineaCabecera1@1100217025();
    BEGIN
      // _LineaCabecera1

      wLinea += 1;

      _InsertaCeldaExcel(1, '', 2, 2, 2, 2, '', 3, 12, TRUE);
      _InsertaCeldaExcel(2, '', 2, 2, 2, 2, STRSUBSTNO('C%1', wLinea), 3, 12, TRUE);
      _InsertaCeldaExcel(4, Text003, 2, 2, 2, 2, STRSUBSTNO('G%1', wLinea), 3, 12, TRUE);
      _InsertaCeldaExcel(8, Text004, 2, 2, 2, 2, STRSUBSTNO('K%1', wLinea), 3, 12, TRUE);
      _InsertaCeldaExcel(12, '', 2, 2, 2, 2, '', 3, 12, TRUE);
      _InsertaCeldaExcel(13, '', 2, 2, 2, 2, '', 3, 12, TRUE);
      _InsertaCeldaExcel(14, '', 2, 2, 2, 2, '', 3, 12, TRUE);
      _InsertaCeldaExcel(15, '', 2, 2, 2, 2, '', 3, 12, TRUE);
      _InsertaCeldaExcel(16, '', 2, 2, 2, 2, '', 3, 12, TRUE);
    END;

    LOCAL PROCEDURE _LineaCabecera2@1100217026();
    BEGIN
      // _LineaCabecera2

      wLinea += 1;

      _InsertaCeldaExcel(1, Text005, 2, 2, 2, 2, '', 3, 12, TRUE);
      _InsertaCeldaExcel(2, Text006, 2, 2, 2, 2, '', 0, 12, TRUE);
      _InsertaCeldaExcel(3, Text007, 2, 2, 2, 2, '', 0, 12, TRUE);
      _InsertaCeldaExcel(4, Text008, 2, 2, 2, 2, '', 3, 12, TRUE);
      _InsertaCeldaExcel(5, Text009, 2, 2, 2, 2, '', 3, 12, TRUE);
      _InsertaCeldaExcel(6, Text010, 2, 2, 2, 2, '', 3, 12, TRUE);
      _InsertaCeldaExcel(7, Text011, 2, 2, 2, 2, '', 3, 12, TRUE);
      _InsertaCeldaExcel(8, Text008, 2, 2, 2, 2, '', 3, 12, TRUE);
      _InsertaCeldaExcel(9, Text009, 2, 2, 2, 2, '', 3, 12, TRUE);
      _InsertaCeldaExcel(10, Text010, 2, 2, 2, 2, '', 3, 12, TRUE);
      _InsertaCeldaExcel(11, Text012, 2, 2, 2, 2, '', 3, 12, TRUE);
      _InsertaCeldaExcel(12, Text013, 2, 2, 2, 2, '', 3, 12, TRUE);
      _InsertaCeldaExcel(13, '', 2, 2, 2, 2, '', 3, 12, TRUE);
      _InsertaCeldaExcel(14, '', 2, 2, 2, 2, '', 3, 12, TRUE);
      _InsertaCeldaExcel(15, '', 2, 2, 2, 2, '', 3, 12, TRUE);
      _InsertaCeldaExcel(16, Text014, 2, 2, 2, 2, '', 3, 12, TRUE);
    END;

    LOCAL PROCEDURE _InsertaCeldaExcel@1100217009(pwColumna@1100217000 : Integer;pwValor@1100217001 : Text[250];pwBordeIzq@1100217002 : Integer;pwBordeSup@1100217003 : Integer;pwBordeDer@1100217004 : Integer;pwBordeInf@1100217005 : Integer;pwCombina@1100217006 : Code[10];pwAlinHor@1100217007 : Integer;pwTama¤oFuente@1100217008 : Integer;pwNegrita@1100217009 : Boolean);
    BEGIN
      // _InsertaCeldaExcel

      //. pwAlinHor, 0 - Izquierda, 3 - Centrar
      rExcelTMP.INIT;
      rExcelTMP.VALIDATE("Row No."             , wLinea);
      rExcelTMP.VALIDATE("Column No."          , pwColumna);
      rExcelTMP.VALIDATE("Cell Value as Text"  , pwValor);
      rExcelTMP.VALIDATE("Borde Izq"           , pwBordeIzq);
      rExcelTMP.VALIDATE("Borde Sup"           , pwBordeSup);
      rExcelTMP.VALIDATE("Borde Der"           , pwBordeDer);
      rExcelTMP.VALIDATE("Borde Abaj"          , pwBordeInf);
      rExcelTMP.VALIDATE("Fusionar hasta celda", pwCombina);
      IF pwCombina <> '' THEN
        rExcelTMP.VALIDATE("Texto Alineacion Vertical", -4108); //. Centrar

      rExcelTMP.VALIDATE("Texto Alineacion Horizontal", pwAlinHor);
      rExcelTMP.VALIDATE("Tama¤o Fuente"              , pwTama¤oFuente);
      rExcelTMP.VALIDATE(Bold                         , pwNegrita);
      rExcelTMP.INSERT;
    END;

    LOCAL PROCEDURE _NombreHotel@1100217003(pwHotel@1100217001 : Code[20]) : Text[250];
    VAR
      lrHotel@1100217000 : Record 7009724;
    BEGIN
      // _NombreHotel

      IF lrHotel.GET(pwHotel) THEN
        EXIT(lrHotel.Nombre);
    END;

    LOCAL PROCEDURE _VueloLlegada@1100217004() : Text[30];
    BEGIN
      // _VueloLlegada

      EXIT(diReserva."Compa¤ia entrada" + diReserva."Vuelo entrada");
    END;

    LOCAL PROCEDURE _VueloSalida@1100217005() : Text[30];
    BEGIN
      // _VueloSalida

      EXIT(diReserva."Compa¤ia salida" + diReserva."Vuelo salida");
    END;

    LOCAL PROCEDURE _PersonasReserva@1100217012() : Integer;
    VAR
      lrRsv@1100217000 : Record 7009744;
      lrParPer@1100217001 : Record 7009701;
      lwAdultos@1100217002 : Integer;
      lwNi¤os@1100217003 : Integer;
    BEGIN
      // _PersonasReserva

      lrParPer.FINDFIRST;

      lrRsv.RESET;
      lrRsv.SETRANGE(Delegacion        , diReserva.Delegacion);
      lrRsv.SETRANGE("N§ Interno"      , diReserva."N§ Interno");
      lrRsv.SETRANGE("Tipo Persona"    , lrParPer."Codigo Adulto");
      //+$004 <
      lrRsv.SETRANGE("Fecha entrada"   , diReserva."Fecha entrada");
      lrRsv.SETRANGE("Compa¤ia entrada", diReserva."Compa¤ia entrada");
      lrRsv.SETRANGE("Vuelo entrada"   , diReserva."Vuelo entrada");
      lrRsv.SETRANGE("Fecha salida"    , diReserva."Fecha salida");
      lrRsv.SETRANGE("Compa¤ia salida" , diReserva."Compa¤ia salida");
      lrRsv.SETRANGE("Vuelo salida"    , diReserva."Vuelo salida");
      //+$004 >
      IF lrRsv.FINDFIRST THEN
        lwAdultos := lrRsv.COUNT;

      lrRsv.SETRANGE("Tipo Persona"  , lrParPer."Codigo Ni¤o");
      IF lrRsv.FINDFIRST THEN
        lwNi¤os := lrRsv.COUNT;

      EXIT(lwAdultos + lwNi¤os);
    END;

    LOCAL PROCEDURE _Pickup@1100217017() : Time;
    VAR
      lrHoraAgr@1100217000 : Record 7009800;
      lrHoraPickup@1100217001 : Record 7010246;
    BEGIN
      // _Pickup

      IF diReserva."Agrupacion salida" <> 0 THEN
      BEGIN
        lrHoraAgr.RESET;
        lrHoraAgr.SETRANGE("N§ Agrupacion", diReserva."Agrupacion salida");
        lrHoraAgr.SETRANGE(Hotel          , diReserva."Hotel salida");
        IF lrHoraAgr.FINDFIRST THEN
          EXIT(lrHoraAgr."Hora recogida");
      END
      ELSE
      BEGIN
        //. Primero buscamos si se ha especificado una prevision para la fecha de este vuelo
        lrHoraPickup.RESET;
        lrHoraPickup.SETCURRENTKEY(Fecha, Compa¤ia, Vuelo, Hotel);
        lrHoraPickup.SETRANGE(Fecha                , diReserva."Fecha salida");
        lrHoraPickup.SETRANGE(Compa¤ia             , diReserva."Compa¤ia salida");
        lrHoraPickup.SETRANGE(Vuelo                , diReserva."Vuelo salida");
        lrHoraPickup.SETRANGE(Hotel                , diReserva."Hotel salida");
        lrHoraPickup.SETRANGE("Prevision temporada", FALSE);
        IF lrHoraPickup.FINDFIRST THEN
          EXIT(lrHoraPickup."Hora recogida")
        ELSE
        BEGIN
          //. Por ultimo buscamos la prevision de temporada de este vuelo
          lrHoraPickup.SETRANGE(Fecha);
          lrHoraPickup.SETRANGE("Prevision temporada", TRUE);
          IF lrHoraPickup.FINDFIRST THEN
            EXIT(lrHoraPickup."Hora recogida")
        END;
      END;
    END;

    BEGIN
    {
      $001 AJS 08012014 Mostrar el IATA destino de la llegada en lugar del origen (el IATA local)

      $002 AJS 08012014 Modifico la funcion _Pickup para que busque primero en la prevision diario de recogidas

      $003 AJS 10042014 Este informe no tiene que trabajar con los traslados en destino

      $004 AJS 29042014 Modificar para mostrar si una reserva tiene mas de un vuelo llegada/salida o fechas diferentes

      $005 AJS 29052014 La marca de transfer privado se separa para entrada y salida

      $006 ARM 23062015 CNT-CAR-14122 A¤adido filtro por Entrada o salida = 1
    }
    END.
  }
  RDLDATA
  {
  }
}
