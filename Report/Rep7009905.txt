OBJECT Report 7009905 Chequeo coste ingreso transfer
{
  OBJECT-PROPERTIES
  {
    Date=14/01/15;
    Time=19:10:11;
    Modified=Yes;
    Version List=AIC2009;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Check Transfer income cost;
               ESP=Chequeo coste ingreso transfer];
    ProcessingOnly=Yes;
  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table7009805;
        DataItemTableView=SORTING(TourOperador,Fecha);
        DataItemVarName=diCosteIngreso;
        OnPreDataItem=BEGIN
                        rPar.FINDFIRST;

                        w_totingnofacturado := 0;
                        w_totingfacturado := 0;
                        w_totcosvalidado := 0;
                        w_totcosgenerado := 0;
                        w_totcosnogenerado := 0;
                        w_totcosmanual := 0;

                        w_filtrofechas := GETFILTER(Fecha);

                        rCI.COPY(diCosteIngreso);
                        rCI.FINDLAST;

                        cExcel.Nuevo;
                        cExcel.ValorCelda(2, 1, COMPANYNAME, TRUE, FALSE, FALSE);
                        cExcel.Rango(2, 1, 2, 4);
                        cExcel.CombinarSinCentrar;
                        cExcel.ValorCelda(2, 7, Text005, TRUE, FALSE, FALSE);
                        cExcel.Rango(2, 7, 2, 9);
                        cExcel.CombinarSinCentrar;
                        cExcel.FormatoTexto('', 0, 0, 0, 4, 0);
                        cExcel.ValorCelda(3, 1, cNom.nom_delegacion(rPar.Delegacion), TRUE, FALSE, FALSE);
                        cExcel.Rango(3, 1, 3, 4);
                        cExcel.CombinarSinCentrar;
                        wLinea := 4;

                        // Cabecera
                        wLinea += 1;
                        cExcel.ValorCelda(wLinea, 1, Text006, TRUE, FALSE, FALSE);
                        cExcel.ValorCelda2(wLinea, 2, w_filtrofechas);

                        wLinea += 2;
                        cExcel.ValorCelda(wLinea, 2, Text007, TRUE, FALSE, FALSE);
                        cExcel.Rango(wLinea, 2, wLinea, 4);
                        cExcel.CombinarCeldas;
                        cExcel.LineaDerecha(cExcel.LineaFina);
                        cExcel.ValorCelda(wLinea, 5, Text009, TRUE, FALSE, FALSE);
                        cExcel.Rango(wLinea, 5, wLinea, 8);
                        cExcel.CombinarCeldas;

                        wLinea += 1;
                        cExcel.ValorCelda(wLinea, 1, UPPERCASE(diCosteIngreso.TourOperador),TRUE,FALSE,FALSE);
                        cExcel.ValorCelda(wLinea, 2, Text010, TRUE, FALSE, FALSE);
                        cExcel.ValorCelda(wLinea, 3, Text011, TRUE, FALSE, FALSE);
                        cExcel.ValorCelda(wLinea, 4, Text008, TRUE, FALSE, FALSE);
                        cExcel.Rango(wLinea, 4, wLinea, 4);
                        cExcel.LineaDerecha(cExcel.LineaFina);
                        cExcel.ValorCelda(wLinea, 5, Text012, TRUE, FALSE, FALSE);
                        cExcel.ValorCelda(wLinea, 6, Text013, TRUE, FALSE, FALSE);
                        cExcel.ValorCelda(wLinea, 7, Text014, TRUE, FALSE, FALSE);
                        cExcel.ValorCelda(wLinea, 8, Text015, TRUE, FALSE, FALSE);
                        cExcel.ValorCelda(wLinea, 9, Text016, TRUE, FALSE, FALSE);
                      END;

        OnAfterGetRecord=BEGIN
                           IF w_touroperador <> TourOperador THEN
                           BEGIN
                             w_ingnofacturado := 0;
                             w_ingfacturado   := 0;
                             w_cosvalidado    := 0;
                             w_cosgenerado    := 0;
                             w_cosnogenerado  := 0;
                             w_cosmanual      := 0;

                             w_touroperador := TourOperador;

                             _GetIngresoNoShow; //+$003
                           END;

                           IF Concepto = Text000 THEN
                           BEGIN
                             CASE "Tipo linea" OF
                               "Tipo linea"::Suplemento: w_oksuma := NOT w_SinSuplementos;
                               "Tipo linea"::Persona: w_oksuma := TRUE;
                               "Tipo linea"::Vehiculo: w_oksuma := TRUE;
                               "Tipo linea"::Manual: w_oksuma := TRUE;
                             END;

                             IF w_oksuma THEN
                             BEGIN
                               IF "N§ Factura" <> '' THEN
                               BEGIN
                                 w_ingfacturado += "Importe sin impuestos (DL)";
                                 w_totingfacturado += "Importe sin impuestos (DL)";
                               END
                               ELSE
                               BEGIN
                                 w_ingnofacturado += "Importe sin impuestos (DL)";
                                 w_totingnofacturado += "Importe sin impuestos (DL)";
                               END;
                             END;
                           END
                           ELSE
                           BEGIN
                             IF "N§ Factura" <> '' THEN
                             BEGIN
                               w_cosvalidado += "Importe sin impuestos (DL)";
                               w_totcosvalidado += "Importe sin impuestos (DL)";
                             END;

                             IF NOT "Pendiente FPR" THEN
                             BEGIN
                               w_cosgenerado += "Importe sin impuestos (DL)";
                               w_totcosgenerado += "Importe sin impuestos (DL)";
                             END
                             ELSE
                             BEGIN
                               w_cosnogenerado += "Importe sin impuestos (DL)";
                               w_totcosnogenerado += "Importe sin impuestos (DL)";
                             END;

                             IF "Tipo creacion" = "Tipo creacion"::Manual THEN
                             BEGIN
                               w_cosmanual += "Importe sin impuestos (DL)";
                               w_totcosmanual += "Importe sin impuestos (DL)";
                             END;
                           END;
                         END;

        OnPostDataItem=BEGIN
                         cExcel.JustificarHoja;
                         cExcel.Mostrar;
                       END;

        ReqFilterFields=Fecha;
        GroupTotalFields=TourOperador;
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Header;
            PrintOnEveryPage=Yes;
            SectionWidth=18150;
            SectionHeight=0;
          }
          CONTROLS
          {
          }
           }
        { PROPERTIES
          {
            SectionType=Header;
            PrintOnEveryPage=Yes;
            SectionWidth=18150;
            SectionHeight=0;
          }
          CONTROLS
          {
          }
           }
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=18150;
            SectionHeight=0;
          }
          CONTROLS
          {
          }
           }
        { PROPERTIES
          {
            SectionType=GroupFooter;
            SectionWidth=18150;
            SectionHeight=0;
            OnPostSection=VAR
                            w_benefttoo@1000000001 : Decimal;
                            w_coste@1000000000 : Decimal;
                          BEGIN
                            w_coste := -1 * (w_cosgenerado + w_cosnogenerado + w_cosmanual);
                            IF w_ingnofacturado + w_ingfacturado + w_ingNoShow <> 0 THEN
                              w_benefttoo := ROUND(( (w_ingnofacturado + w_ingfacturado + w_ingNoShow) - w_coste) /
                                                        (w_ingnofacturado + w_ingfacturado + w_ingNoShow) * 100)
                            ELSE
                              w_benefttoo := 0;


                            wLinea += 1;
                            cExcel.ValorCelda2(wLinea, 1, FORMAT(diCosteIngreso.TourOperador));
                            cExcel.ValorCelda2(wLinea, 2, FORMAT(w_ingfacturado));
                            cExcel.ValorCelda2(wLinea, 3, FORMAT(w_ingnofacturado));
                            cExcel.ValorCelda2(wLinea, 4, FORMAT(w_ingNoShow));
                            cExcel.Rango(wLinea, 4, wLinea, 4);
                            cExcel.LineaDerecha(cExcel.LineaFina);
                            cExcel.ValorCelda2(wLinea, 5, FORMAT(w_cosvalidado));
                            cExcel.ValorCelda2(wLinea, 6, FORMAT(w_cosgenerado));
                            cExcel.ValorCelda2(wLinea, 7, FORMAT(w_cosnogenerado));
                            cExcel.ValorCelda2(wLinea, 8, FORMAT(w_cosmanual));
                            cExcel.ValorCelda2(wLinea, 9, FORMAT(w_benefttoo));
                          END;

          }
          CONTROLS
          {
          }
           }
        { PROPERTIES
          {
            SectionType=GroupFooter;
            SectionWidth=18150;
            SectionHeight=0;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT((Agrupacion = rCI.Agrupacion) AND ("N§ Linea" = rCI."N§ Linea"));

                           w_ingresosTotales  := w_totingnofacturado + w_totingfacturado + w_TotNoShow; //+$003
                           w_costesCalculados := -1 * (w_totcosgenerado + w_totcosnogenerado);

                           IF w_ingresosTotales <> 0 THEN
                             w_beneficio := ROUND((w_ingresosTotales - w_costesCalculados) / w_ingresosTotales * 100)
                           ELSE
                             w_beneficio := 0;

                           //+$002 <
                           wCostesTotales := -1 * (w_totcosgenerado + w_totcosnogenerado + w_totcosmanual);
                           IF w_ingresosTotales <> 0 THEN
                             wBeneficioTotal := ROUND((w_ingresosTotales - wCostesTotales) / w_ingresosTotales * 100)
                           ELSE
                             wBeneficioTotal := 0;
                           //+$002 >
                         END;

          }
          CONTROLS
          {
          }
           }
        { PROPERTIES
          {
            SectionType=Footer;
            PrintOnEveryPage=Yes;
            PlaceInBottom=Yes;
            SectionWidth=18150;
            SectionHeight=0;
            OnPreSection=BEGIN
                           wLinea += 1;
                           cExcel.Rango(wLinea, 2, wLinea, 9);
                           cExcel.LineaArriba(cExcel.LineaFina);

                           cExcel.ValorCelda2(wLinea, 2, FORMAT(w_totingfacturado));
                           cExcel.ValorCelda2(wLinea, 3, FORMAT(w_totingnofacturado));
                           cExcel.ValorCelda2(wLinea, 4, FORMAT(w_TotNoShow));
                           cExcel.Rango(wLinea, 4, wLinea, 4);
                           cExcel.LineaDerecha(cExcel.LineaFina);
                           cExcel.ValorCelda2(wLinea, 5, FORMAT(w_totcosvalidado));
                           cExcel.ValorCelda2(wLinea, 6, FORMAT(w_totcosgenerado));
                           cExcel.ValorCelda2(wLinea, 7, FORMAT(w_totcosnogenerado));
                           cExcel.ValorCelda2(wLinea, 8, FORMAT(w_totcosmanual));

                           wLinea += 2;
                           cExcel.ValorCelda(wLinea, 2, Text017, TRUE, FALSE, FALSE);
                           cExcel.ValorCelda2(wLinea, 3, FORMAT(w_ingresosTotales));
                           cExcel.ValorCelda(wLinea, 5, Text018, TRUE, FALSE, FALSE);
                           cExcel.ValorCelda2(wLinea, 6, FORMAT(w_costesCalculados));
                           cExcel.ValorCelda(wLinea, 7, Text019, TRUE, FALSE, FALSE);
                           cExcel.ValorCelda2(wLinea, 8, FORMAT(w_beneficio));

                           wLinea += 2;
                           cExcel.ValorCelda(wLinea, 5, Text020, TRUE, FALSE, FALSE);
                           cExcel.ValorCelda2(wLinea, 6, FORMAT(wCostesTotales));
                           cExcel.ValorCelda(wLinea, 7, Text021, TRUE, FALSE, FALSE);
                           cExcel.ValorCelda2(wLinea, 8, FORMAT(wBeneficioTotal));
                         END;

          }
          CONTROLS
          {
          }
           }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=9020;
      Height=3410;
      CaptionML=[ENU=Check Transfer income cost;
                 ESP=Chequeo coste ingreso transfer];
    }
    CONTROLS
    {
      { 1100253000;CheckBox;4620;330  ;440  ;440  ;InPage=-1;
                                                   ShowCaption=No;
                                                   CaptionML=[ENU=Incomes without surcharges;
                                                              ESP=Ingresos sin suplementos];
                                                   SourceExpr=w_SinSuplementos }
      { 1100253001;Label  ;220  ;330  ;4290 ;440  ;ParentControl=1100253000 }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      Text000@1103355017 : TextConst 'ENU=TRNI;ESP=TRNI';
      Text001@1103355018 : TextConst 'ENU=page;ESP=P gina';
      rPar@1103355000 : Record 7009700;
      rCI@1103355001 : Record 7009805;
      cNom@1103355002 : Codeunit 7009702;
      cExcel@1000000022 : Codeunit 7009755;
      w_ingnofacturado@1103355003 : Decimal;
      w_ingfacturado@1103355004 : Decimal;
      w_cosvalidado@1103355005 : Decimal;
      w_cosgenerado@1103355006 : Decimal;
      w_cosnogenerado@1103355007 : Decimal;
      w_cosmanual@1103355008 : Decimal;
      w_totingnofacturado@1103355009 : Decimal;
      w_totingfacturado@1103355010 : Decimal;
      w_totcosvalidado@1103355011 : Decimal;
      w_totcosgenerado@1103355012 : Decimal;
      w_totcosnogenerado@1103355013 : Decimal;
      w_totcosmanual@1103355014 : Decimal;
      w_ingresosTotales@1100253002 : Decimal;
      w_costesCalculados@1100253003 : Decimal;
      w_beneficio@1100253004 : Decimal;
      w_filtrofechas@1103355015 : Text[250];
      w_touroperador@1103355016 : Code[10];
      w_SinSuplementos@1100253000 : Boolean;
      w_oksuma@1100253001 : Boolean;
      wCostesTotales@1000000000 : Decimal;
      wBeneficioTotal@1000000001 : Decimal;
      w_ingNoShow@1000000002 : Decimal;
      w_TotNoShow@1000000003 : Decimal;
      Text005@1000000020 : TextConst 'ENU=Check Excursions cost income;ESP=Chequeo coste ingreso Transfer';
      Text006@1000000019 : TextConst 'ENU=Services dates;ESP=Fecha';
      Text007@1000000018 : TextConst 'ENU=Incomes Local Currency;ESP=Ingresos';
      Text008@1000000017 : TextConst 'ENU=Incomes Rate Currency;ESP=No Show';
      Text009@1000000016 : TextConst 'ENU=Costs;ESP=Costes';
      Text010@1000000015 : TextConst 'ENU=Invoiced;ESP=Facturado';
      Text011@1000000014 : TextConst 'ENU=Remaining;ESP=Pendiente';
      Text012@1000000013 : TextConst 'ENU=Validated;ESP=Validado';
      Text013@1000000012 : TextConst 'ENU=Generated;ESP=Generado';
      Text014@1000000011 : TextConst 'ENU=Not Generated;ESP=No Generado';
      Text015@1000000010 : TextConst 'ENU=Manual Ajustment;ESP=Ajuste Manual';
      Text016@1000000009 : TextConst 'ENU=Profit %;ESP=% Beneficio';
      Text017@1000000008 : TextConst 'ESP=Ingresos';
      Text018@1000000007 : TextConst 'ESP=Costes calculados';
      Text019@1000000006 : TextConst 'ESP=Beneficio';
      Text020@1000000005 : TextConst 'ESP=Costes totales';
      Text021@1000000004 : TextConst 'ESP=Beneficio final';
      wLinea@1000000021 : Integer;

    LOCAL PROCEDURE _GetIngresoNoShow@1000000001();
    VAR
      lrNoShow@1000000000 : Record 7010252;
      lrExchange@1000000001 : Record 330;
    BEGIN
      // _GetIngresoNoShow

      w_ingNoShow := 0; //+$003

      lrNoShow.RESET;
      lrNoShow.SETRANGE (Touroperador, w_touroperador);
      diCosteIngreso.COPYFILTER(Fecha, lrNoShow."Fecha entrada");
      lrNoShow.SETFILTER("Num. Factura", '<>%1', '');
      IF lrNoShow.FINDSET THEN
      BEGIN
        REPEAT
          w_ingNoShow += lrNoShow."Importe sin impuestos";
        UNTIL lrNoShow.NEXT = 0;
        //. Lo convertimos a moneda local como el resto del informe
        w_ingNoShow := lrExchange.ExchangeAmtFCYToFCY(lrNoShow."Fecha entrada", lrNoShow."Cod. Divisa", '', w_ingNoShow);
      END;

      w_TotNoShow       += w_ingNoShow;
    END;

    BEGIN
    {
      $001 AJS 23112013 Modifico el informe para que los costes se muestren en divisa local

      $002 AJS 18122014 Incluyo un nuevo total que suma los costes manuales

      $003 AJS 12012015 CNT-OC-14072, Agregar nueva columna para los ingresos No Show
    }
    END.
  }
  RDLDATA
  {
  }
}
