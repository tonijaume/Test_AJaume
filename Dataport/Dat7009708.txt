OBJECT Dataport 7009708 Importacion servicios
{
  OBJECT-PROPERTIES
  {
    Date=02/10/12;
    Time=12:00:00;
    Modified=Yes;
    Version List=AIC2009,GOC;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Services importation;
               ESP=Importacion servicios];
    Import=Yes;
    FileFormat=Fixed;
    UseReqForm=No;
  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table2000000026;
        AutoSave=No;
        AutoUpdate=No;
        DataItemTableView=SORTING(Number);
        OnPreDataItem=BEGIN
                        IF NOT rPar.FIND('-') THEN
                          ERROR(Text000);
                        w_ultima_linea := 1;
                      END;

        OnAfterImportRecord=BEGIN
                              CLEAR(rSer);
                              rSer."ID Servicio" := w_ultima_linea;
                              rSer.Touroperador := DELCHR(COPYSTR(w_texto, 1, 4), '<>');
                              rSer.Bono := DELCHR(COPYSTR(w_texto, 5, 9), '<>');
                              rSer.Temporada := DELCHR(COPYSTR(w_texto, 14, 5), '<>');
                              IF NOT EVALUATE(rSer.Persona, DELCHR(COPYSTR(w_texto, 22, 4), '<>')) THEN
                                EVALUATE(rSer.Persona, '0')
                              ELSE
                                EVALUATE(rSer.Persona, DELCHR(COPYSTR(w_texto, 22, 4), '<>'));
                              IF NOT EVALUATE(rSer."N§ Servicio", DELCHR(COPYSTR(w_texto, 26, 3), '<>')) THEN
                                EVALUATE(rSer."N§ Servicio", '0')
                              ELSE
                                EVALUATE(rSer."N§ Servicio", DELCHR(COPYSTR(w_texto, 26, 3), '<>'));
                              rSer."Tipo Servicio" := devuelve_tipo_servicio(DELCHR(COPYSTR(w_texto, 19, 3), '<>'));
                              rSer.Fichero := w_fichero;
                              rSer.INSERT;
                              w_ultima_linea := w_ultima_linea + 1;
                            END;

        OnPostDataItem=BEGIN
                         rPar.LOCKTABLE(TRUE);
                         IF NOT rPar.FIND('-') THEN
                           ERROR(Text000);
                         rPar."Contador servicios" := w_ultima_linea - 1;
                         rPar.MODIFY;
                       END;

      }
      FIELDS
      {
        { 1    ;29   ;w_texto              }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=9020;
      Height=3410;
      CaptionML=[ENU=Services importation;
                 ESP=Importacion servicios];
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      Text000@1103355006 : TextConst 'ENU=Any registration Interface parameters folder does not exist;ESP=No existe ningun registro en el fichero de Parametros de Interfase.';
      Text001@1103355007 : TextConst 'ENU=PAH;ESP=PAH';
      Text002@1103355008 : TextConst 'ENU=PAF;ESP=PAF';
      w_texto@1103355000 : Text[29];
      w_nombre_fichero@1103355001 : Text[250];
      w_ultima_linea@1103355002 : Integer;
      w_fichero@1103355003 : Integer;
      rPar@1103355004 : Record 7010081;
      rSer@1103355005 : Record 7010080;

    PROCEDURE pasar_numero@2(num_fichero@1103355000 : Integer);
    BEGIN
      // pasar_numero
      //
      w_fichero := num_fichero;
    END;

    PROCEDURE pasar_nombre@4(par_nombre@1103355000 : Text[250]);
    BEGIN
      // pasar_nombre
      //
      w_nombre_fichero := par_nombre;
    END;

    PROCEDURE devuelve_tipo_servicio@1(par_texto@1103355000 : Text[3]) : Integer;
    VAR
      aux_ser@1103355001 : Record 7010080;
    BEGIN
      // devuelve_tipo_servicio
      //
      CASE par_texto OF
        Text001: EXIT(aux_ser."Tipo Servicio"::Hotel);
        Text002: EXIT(aux_ser."Tipo Servicio"::Transfer);
      END;
    END;

    BEGIN
    END.
  }
}
