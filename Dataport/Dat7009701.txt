OBJECT Dataport 7009701 Importacion Vuelos TTOO
{
  OBJECT-PROPERTIES
  {
    Date=02/10/12;
    Time=12:00:00;
    Modified=Yes;
    Version List=AIC2009,GOC;
  }
  PROPERTIES
  {
    CaptionML=[ENU=TTOO Flights importation;
               ESP=Importacion Vuelos TTOO];
    Import=Yes;
    FileFormat=Fixed;
  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table7009754;
        AutoUpdate=No;
        AutoReplace=Yes;
        DataItemTableView=SORTING(Fecha,Compa¤ia,Vuelo,Origen,Destino);
        OnAfterImportRecord=BEGIN
                              IF vDelegacion = Text000 THEN
                                CurrDataport.SKIP;
                              IF vHoraSal1 > '23' THEN
                                vHoraSal1 := '00';
                              IF vMinuSal1 > '60' THEN
                                vMinuSal1 := '59';
                              IF vHoraEnt1 > '23' THEN
                                vHoraEnt1 := '00';
                              IF vMinuEnt1 > '60' THEN
                                vMinuEnt1 := '59';
                              IF (vHoraSal1 <> '') AND (vMinuSal1 <> '') THEN
                                EVALUATE("Hora Salida", vHoraSal1 + ':' + vMinuSal1);
                              IF (vHoraEnt1 <> '') AND (vMinuEnt1 <> '') THEN
                                EVALUATE("Hora Entrada", vHoraEnt1 + ':' + vMinuEnt1);
                              fecha_limite := CALCDATE(Text001, TODAY());
                              IF (Fecha = 0D) OR ((Compa¤ia = '') AND (Vuelo = '')) OR (Fecha < fecha_limite) THEN
                                CurrDataport.SKIP;
                              rPlan2 := "Plan de vuelo";
                              buscar_plan;
                              IF sw_encontrado THEN BEGIN
                                sw_error1 := FALSE;
                                IF ("Hora Salida" <> rPlan3."Hora Salida") OR ("Hora Entrada" <> rPlan3."Hora Entrada") THEN
                                  sw_error1 := comprobar_reservas;
                                IF NOT sw_error1 THEN BEGIN
                                  "Plan de vuelo".VALIDATE("Hora Salida" , "Hora Salida");
                                  "Plan de vuelo".VALIDATE("Hora Entrada", "Hora Entrada");
                                END;
                              END;
                              Terminal := Text002;
                              TourOperador := Text003;
                              insertar_vuelta;
                              IF sw_error1 THEN
                                CurrDataport.SKIP;
                            END;

      }
      FIELDS
      {
        { 1    ;8    ;vDelegacion          }
        { 9    ;8    ;"Cod. Serie"         }
        { 17   ;3    ;Origen               }
        { 20   ;3    ;Destino              }
        { 23   ;3    ;Compa¤ia             }
        { 26   ;4    ;Vuelo                }
        { 31   ;2    ;vHoraSal1            }
        { 33   ;2    ;vMinuSal1            }
        { 35   ;2    ;vHoraEnt1            }
        { 37   ;2    ;vMinuEnt1            }
        { 39   ;3    ;rPlan.Compa¤ia       }
        { 42   ;4    ;rPlan.Vuelo          }
        { 47   ;2    ;vHoraSal2            }
        { 49   ;2    ;vMinuSal2            }
        { 51   ;2    ;vHoraEnt2            }
        { 53   ;2    ;vMinuEnt2            }
        { 55   ;8    ;"Total Pax"          }
        { 63   ;8    ;"Pax garantizados"   }
        { 71   ;8    ;"Asientos vendidos"  }
        { 79   ;8    ;"en opcion"          }
        { 87   ;8    ;"Porcentaje ocupacion" }
        { 95   ;6    ;Fecha                }
        { 101  ;1    ;Temporada            }
        { 102  ;8    ;rPlan."Total Pax"    }
        { 110  ;8    ;rPlan."Asientos vendidos" }
        { 118  ;8    ;rPlan."Pax Salida C" }
        { 126  ;8    ;rPlan."Pax Entrada C" }
        { 134  ;18   ;"Identificador serie" }
        { 152  ;20   ;Observaciones        }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=9790;
      Height=880;
      CaptionML=[ENU=TTOO Flights importation;
                 ESP=Importacion Vuelos TTOO];
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      Text000@1103355023 : TextConst 'ENU=DATENSAT;ESP=DATENSAT';
      Text001@1103355024 : TextConst 'ENU=-30D;ESP=-30D';
      Text002@1103355025 : TextConst 'ENU=A;ESP=A';
      Text003@1103355026 : TextConst 'ENU=ITS;ESP=ITS';
      rError@1103355000 : Record 7009815;
      rError2@1103355001 : Record 7009815;
      rPlan@1103355002 : Record 7009754;
      rPlan2@1103355003 : Record 7009754;
      rPlan3@1103355004 : Record 7009754;
      rRes@1103355005 : Record 7009744;
      vDelegacion@1103355006 : Code[10];
      vHoraEnt1@1103355007 : Text[2];
      vMinuEnt1@1103355008 : Text[2];
      vHoraSal1@1103355009 : Text[2];
      vMinuSal1@1103355010 : Text[2];
      vHoraEnt2@1103355011 : Text[2];
      vMinuEnt2@1103355012 : Text[2];
      vHoraSal2@1103355013 : Text[2];
      vMinuSal2@1103355014 : Text[2];
      NomFich@1103355015 : Text[80];
      ok@1103355016 : Boolean;
      sw_error@1103355017 : Boolean;
      sw_error1@1103355018 : Boolean;
      sw_error2@1103355019 : Boolean;
      sw_encontrado@1103355020 : Boolean;
      ult_linea@1103355021 : Integer;
      fecha_limite@1103355022 : Date;

    PROCEDURE insertar_vuelta@10();
    BEGIN
      IF vHoraSal2 > '23' THEN
        vHoraSal2 := '00';
      IF vMinuSal2 > '60' THEN
        vMinuSal2 := '59';
      IF vHoraEnt2 > '23' THEN
        vHoraEnt2 := '00';
      IF vMinuEnt2 > '60' THEN
        vMinuEnt2 := '59';
      IF (vHoraSal2 <> '') AND (vMinuSal2 <> '') THEN
        EVALUATE(rPlan."Hora Salida", vHoraSal2 + ':' + vMinuSal2);
      IF (vHoraEnt2 <> '') AND (vMinuEnt2 <> '') THEN
        EVALUATE(rPlan."Hora Entrada", vHoraEnt2 + ':' + vMinuEnt2);

      rPlan.Fecha := "Plan de vuelo".Fecha;
      rPlan."Cod. Serie" := "Plan de vuelo"."Cod. Serie";
      rPlan.Origen := "Plan de vuelo".Destino;
      rPlan.Destino := "Plan de vuelo".Origen;
      rPlan.Temporada := "Plan de vuelo".Temporada;
      rPlan.Terminal := "Plan de vuelo".Terminal;
      rPlan."Identificador serie" := "Plan de vuelo"."Identificador serie";
      rPlan.Observaciones := "Plan de vuelo".Observaciones;
      rPlan."Entrada/Salida" := "Plan de vuelo"."Entrada/Salida"::Salida;
      rPlan.TourOperador := "Plan de vuelo".TourOperador;
      IF (rPlan.Fecha = 0D) OR ((rPlan.Compa¤ia = '') AND (rPlan.Vuelo = '')) THEN
        EXIT;
      rPlan2 := rPlan;
      buscar_plan;
      IF sw_encontrado THEN BEGIN
        IF (rPlan."Hora Salida" <> rPlan3."Hora Salida") OR (rPlan."Hora Entrada" <> rPlan3."Hora Entrada") THEN
          sw_error2 := comprobar_reservas;
        IF NOT sw_error2 THEN BEGIN
          rPlan.VALIDATE("Hora Salida", rPlan."Hora Salida");
          rPlan.VALIDATE("Hora Entrada", rPlan."Hora Entrada");
        END
        ELSE
          EXIT;
      END;
      IF NOT rPlan.INSERT THEN
        rPlan.MODIFY;
    END;

    PROCEDURE comprobar_reservas@8() : Boolean;
    BEGIN
      sw_error := FALSE;
      rRes.RESET;
      IF rPlan2."Entrada/Salida" = rPlan2."Entrada/Salida"::Entrada THEN BEGIN
        rRes.SETCURRENTKEY("Fecha entrada",
                           "Compa¤ia entrada",
                           "Vuelo entrada");
        rRes.SETRANGE("Fecha entrada"       , rPlan2.Fecha);
        rRes.SETRANGE("Compa¤ia entrada"    , rPlan2.Compa¤ia);
        rRes.SETRANGE("Vuelo entrada"       , rPlan2.Vuelo);
        rRes.SETRANGE("IATA origen entrada" , rPlan2.Origen);
        rRes.SETRANGE("IATA destino entrada", rPlan2.Destino);
      END
      ELSE BEGIN
        rRes.SETCURRENTKEY("Fecha salida",
                           "Compa¤ia salida",
                           "Vuelo salida");
        rRes.SETRANGE("Fecha salida"       , rPlan2.Fecha);
        rRes.SETRANGE("Compa¤ia salida"    , rPlan2.Compa¤ia);
        rRes.SETRANGE("Vuelo salida"       , rPlan2.Vuelo);
        rRes.SETRANGE("IATA origen salida" , rPlan2.Origen);
        rRes.SETRANGE("IATA destino salida", rPlan2.Destino);
      END;
      IF rRes.FIND('-') THEN BEGIN
        REPEAT
          IF rPlan2."Entrada/Salida" = rPlan2."Entrada/Salida"::Entrada THEN BEGIN
            IF rRes."Agrupacion entrada" <> 0 THEN
              sw_error := TRUE;
          END
          ELSE BEGIN
            IF rRes."Agrupacion salida" <> 0 THEN
              sw_error := TRUE;
          END;
        UNTIL (rRes.NEXT = 0) OR (sw_error)
      END;
      rRes.RESET;
      IF sw_error THEN BEGIN
        ultimo_numero;
        rError."N§ Linea" := ult_linea;
        rError."Fecha Original" := rPlan3.Fecha;
        rError."Compa¤ia Original" := rPlan3.Compa¤ia;
        rError."N§ Vuelo Original" := rPlan3.Vuelo;
        rError."IATA Origen Original" := rPlan3.Origen;
        rError."IATA Destino Original" := rPlan3.Destino;
        rError."Hora Inicio Original" := rPlan3."Hora Salida";
        rError."Hora Final Original" := rPlan3."Hora Entrada";
        rError."Fecha Nueva" := rPlan2.Fecha;
        rError."Compa¤ia Nueva" := rPlan2.Compa¤ia;
        rError."N§ Vuelo Nuevo" := rPlan2.Vuelo;
        rError."IATA Origen Nuevo" := rPlan2.Origen;
        rError."IATA Destino Nuevo" := rPlan2.Destino;
        rError."Hora Inicio Nueva" := rPlan2."Hora Salida";
        rError."Hora Final Nueva" := rPlan2."Hora Entrada";
        rError.INSERT;
      END;
      EXIT(sw_error);
    END;

    PROCEDURE buscar_plan@6();
    BEGIN
      sw_encontrado := FALSE;
      IF rPlan3.GET(rPlan2.Fecha, rPlan2.Compa¤ia, rPlan2.Vuelo, rPlan2.Origen, rPlan2.Destino) THEN
        sw_encontrado := TRUE;
    END;

    PROCEDURE ultimo_numero@7();
    BEGIN
      rError2.RESET;
      IF rError2.FIND('+') THEN
        ult_linea := rError2."N§ Linea" + 1
      ELSE
        ult_linea := 1;
      rError2.RESET;
    END;

    BEGIN
    END.
  }
}
