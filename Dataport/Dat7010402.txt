OBJECT Dataport 7010402 Importar servicios csv
{
  OBJECT-PROPERTIES
  {
    Date=27/11/14;
    Time=14:40:39;
    Modified=Yes;
    Version List=TRANSFER,INV;
  }
  PROPERTIES
  {
    Import=Yes;
    FieldStartDelimiter=none;
    FieldEndDelimiter=none;
    FieldSeparator=[;];
    UseReqForm=No;
  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table7010432;
        OnPreDataItem=BEGIN
                        rPar.FINDFIRST;
                        rParImp.FINDFIRST;

                        CurrDataport.FILENAME := lwFichero;

                        // Buscamos el garaje del usuario que es el que pondremos por defecto
                        // Ya que no viene ning£n garaje en la importacion
                        lrUser.GET(USERID);
                        lrUser.TESTFIELD("Garaje de trabajo");
                        lwGaraje := lrUser."Garaje de trabajo";
                      END;

        OnAfterImportRecord=VAR
                              lwCliente@1000000000 : Code[20];
                              lwTTOO@1000000001 : Code[10];
                            BEGIN

                              // En primer lugar comprobamos si esiste la cabecera, si no la creamos
                              EVALUATE(lwFecha, vFechaServicio);
                              lrCab.RESET;
                              lrCab.SETCURRENTKEY(Importacion,Fecha,Agencia,Subagencia,Servicio,Traspasada);
                              lrCab.SETRANGE(lrCab.Importacion, wNumImportacion);
                              //lrCab.SETRANGE(lrCab.Agencia, vAgencia);
                              //lrCab.SETRANGE(lrCab.Subagencia, vAgencia);
                              lrCab.SETRANGE(lrCab.Servicio, vServicio);
                              lrCab.SETRANGE(lrCab.Fecha, lwFecha);
                              IF NOT lrCab.FINDFIRST THEN BEGIN
                                lrCab.RESET;
                                lrCab.INIT;
                                lrCab.Importacion   := wNumImportacion;
                                lrCab.Agencia       := vTipoTraslado;
                                lrCab.Subagencia    := COPYSTR(lrCab.Agencia,1,3) + '-' + vSubAgencia;
                                lrCab.Fecha         := lwFecha;
                                lrCab.Servicio      := vServicio;
                                lrCab.Referencia    := vServicio;
                                lrCab.Observaciones := COPYSTR(vTipoVehiculo + ' ' + vComentario,1,250);
                                IF UPPERCASE(vTipoTraslado) = 'SHUTTLE' THEN
                                  lrCab."Servicio shuttle" := TRUE;

                                IF UPPERCASE(vTipoRegistro) = 'MODIFICACION' THEN
                                  lrCab."Modificacion sin autorizar" := TRUE;

                                IF UPPERCASE(vTipoRegistro) = 'ANULACION' THEN
                                  lrCab.Cancelacion := TRUE;

                                lrCab.INSERT(TRUE);

                                lwCliente := cTRN.CreaCodigo(2, lrCab.Agencia  ,'','', vNomTTOO);
                                lwTTOO    := cTRN.CreaCodigo(3,lrCab.Subagencia,lwCliente,'', vNomTTOO);

                                cTRN.BuscaParte(lrCab, TRUE);
                              END;

                              lrLin.Importacion      := lrCab.Importacion;
                              lrLin."No Cabecera"    := lrCab."No.";
                              lrLin.Agencia          := lrCab.Agencia;
                              lrLin.Subagencia       := COPYSTR(lrLin.Agencia,1,3) + '-' + vSubAgencia;
                              lrLin.Emp              := lwGaraje;
                              cTRN.CreaCodigo(0,lwGaraje,lwCliente,lwTTOO,'');
                              lrLin.Servicio         := lrCab.Servicio;
                              lrLin."Agencia Viaje"  := vEntradaSalida;
                              cTRN.CreaCodigo(1,lrLin."Agencia Viaje",lwCliente,lwTTOO,'');
                              lrLin.Fecha            := lrCab.Fecha;
                              lrLin."Codigo Hotel"   := vCodHotel;
                              lrLin."Nombre Hotel"   := vNombreHotel;
                              cTRN.CreaCodigo(5, lrLin."Codigo Hotel", lwCliente, lwTTOO, lrLin."Nombre Hotel");

                              IF EVALUATE(lwInt , vTotalPersona) THEN
                                lrLin."Numero Adultos":= lwInt;
                              IF EVALUATE(lwInt , vTotalGratis) THEN
                                lrLin."Adultos invitados" := lwInt;

                              IF EVALUATE(lwHora, vHoraPresentacion) THEN
                                lrLin."Hora Presentacion"  := lwHora;

                              lrLin."Observaciones B" := COPYSTR(vObservacionesB, 1,MAXSTRLEN(lrLin."Observaciones B"));
                              lrLin.INSERT(TRUE);

                              // Vuelos
                              // Buscamos el £ltimo numero de vuelo de esta cabecera por si hay que insertar
                              lrVuelo.RESET;
                              lrVuelo.SETRANGE(lrVuelo.Importacion, wNumImportacion);
                              lrVuelo.SETRANGE(lrVuelo."No. Cabecera", lrCab."No.");
                              IF lrVuelo.FINDLAST THEN
                                lwInt :=  + 1
                              ELSE
                                lwInt := 1;

                              IF (vCiaVuelo <> '') AND (vNumVuelo <> '') THEN BEGIN
                                EVALUATE(lwFecha, vFechaServicio);
                                EVALUATE(lwHora, vHoraVuelo);
                                vComodinTxt := vCiaVuelo + vNumVuelo;
                                lrVuelo.RESET;
                                lrVuelo.SETCURRENTKEY(Importacion,"No. Cabecera",Fecha,Hora);
                                lrVuelo.SETRANGE(lrVuelo.Importacion, wNumImportacion);
                                lrVuelo.SETRANGE(lrVuelo."No. Cabecera", lrCab."No.");
                                lrVuelo.SETRANGE(lrVuelo.Fecha, lwFecha);
                                lrVuelo.SETRANGE(lrVuelo.Hora, lwHora);
                                lrVuelo.SETRANGE(lrVuelo."Num Vuelo", vComodinTxt);
                                IF NOT lrVuelo.FINDFIRST THEN BEGIN
                                  CLEAR(lrVuelo);
                                  lrVuelo.INIT;
                                  lrVuelo.Importacion    := lrCab.Importacion;
                                  lrVuelo."No. Cabecera" := lrCab."No.";
                                  lrVuelo."No. Vuelo"    := lwInt;
                                  lrVuelo."Num Vuelo"    := vComodinTxt;
                                  lrVuelo.Fecha          := lwFecha;
                                  lrVuelo.Hora           := lwHora;
                                  lrVuelo.Touroperador   := COPYSTR(lrCab.Agencia,1,3) + '-' + vSubAgencia;
                                  lrVuelo."Entrada/Salida" := -1;
                                  IF vEntradaSalida = 'E' THEN
                                    lrVuelo."Entrada/Salida" := lrVuelo."Entrada/Salida"::Entrada;
                                  IF vEntradaSalida = 'S' THEN
                                    lrVuelo."Entrada/Salida" := lrVuelo."Entrada/Salida"::Salida;

                                  lrVuelo."Fecha llegada vuelo" := lrVuelo.Fecha;
                                  lrVuelo."E/S depende Serv"    := TRUE; // Dependera del servicio
                                  lrVuelo.INSERT;
                                  lwInt += 1;
                                END;
                              END;

                              IF (vCiaVuelo2 <> '') AND (vNumVuelo2 <> '') THEN BEGIN
                                EVALUATE(lwFecha, vFechaServicio);
                                vComodinTxt := vCiaVuelo2 + vNumVuelo2;
                                lrVuelo.RESET;
                                lrVuelo.SETCURRENTKEY(Importacion,"No. Cabecera",Fecha,Hora);
                                lrVuelo.SETRANGE(lrVuelo.Importacion, wNumImportacion);
                                lrVuelo.SETRANGE(lrVuelo."No. Cabecera", lrCab."No.");
                                lrVuelo.SETRANGE(lrVuelo.Fecha, lwFecha);
                                lrVuelo.SETRANGE(lrVuelo."Num Vuelo", vComodinTxt);
                                IF NOT lrVuelo.FINDFIRST THEN BEGIN
                                  CLEAR(lrVuelo);
                                  lrVuelo.INIT;
                                  lrVuelo.Importacion    := lrCab.Importacion;
                                  lrVuelo."No. Cabecera" := lrCab."No.";
                                  lrVuelo."No. Vuelo"    := lwInt;
                                  lrVuelo."Num Vuelo"    := vComodinTxt;
                                  lrVuelo.Fecha          := lwFecha;
                                  lrVuelo.Touroperador   := COPYSTR(lrCab.Agencia,1,3) + '-' + vSubAgencia;
                                  lrVuelo."Entrada/Salida" := -1;
                                  IF vEntradaSalida = 'E' THEN
                                    lrVuelo."Entrada/Salida" := lrVuelo."Entrada/Salida"::Entrada;
                                  IF vEntradaSalida = 'S' THEN
                                    lrVuelo."Entrada/Salida" := lrVuelo."Entrada/Salida"::Salida;

                                  lrVuelo."Fecha llegada vuelo" := lrVuelo.Fecha;
                                  lrVuelo."E/S depende Serv"    := TRUE; // Dependera del servicio
                                  lrVuelo.INSERT;
                                  lwInt += 1;
                                END;
                              END;
                            END;

      }
      FIELDS
      {
        {      ;     ;vComodinTxt          }
        {      ;     ;vComodinTxt          }
        {      ;     ;vTipoRegistro        }
        {      ;     ;vFechaServicio       }
        {      ;     ;vTipoTraslado        }
        {      ;     ;vEntradaSalida       }
        {      ;     ;vCiaVuelo            }
        {      ;     ;vNumVuelo            }
        {      ;     ;vHoraVuelo           }
        {      ;     ;vComodinTxt          }
        {      ;     ;vServicio            }
        {      ;     ;No                   }
        {      ;     ;vComodinTxt          }
        {      ;     ;vComentario          }
        {      ;     ;vTipoVehiculo        }
        {      ;     ;vComodinTxt          }
        {      ;     ;"Nombre Guia"        }
        {      ;     ;vSubAgencia          }
        {      ;     ;vNomTTOO             }
        {      ;     ;vCodHotel            }
        {      ;     ;vNombreHotel         }
        {      ;     ;vHoraPresentacion    }
        {      ;     ;vObservacionesB      }
        {      ;     ;vCiaVuelo2           }
        {      ;     ;vNumVuelo2           }
        {      ;     ;vTotalPersona        }
        {      ;     ;vComodinTxt          }
        {      ;     ;vTotalGratis         }
        {      ;     ;vComodinTxt          }
        {      ;     ;vComodinTxt          }
        {      ;     ;vComodinTxt          }
        {      ;     ;vComodinTxt          }
        {      ;     ;vComodinTxt          }
        {      ;     ;vComodinTxt          }
        {      ;     ;vComodinTxt          }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=9020;
      Height=3410;
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      rParImp@1000000017 : Record 7010433;
      rPar@1000000016 : Record 7010311;
      lrLin@1000000023 : Record 7010432;
      lrCab@1000000022 : Record 7010431;
      lrExSupl@1000000020 : Record 7035389;
      lrVuelo@1000000019 : Record 7035391;
      lrUser@1000000018 : Record 7010420;
      cTRN@1000000021 : Codeunit 7010402;
      wNumImportacion@1000000024 : Integer;
      lwFichero@1000000000 : Text[250];
      lwGaraje@1000000003 : Code[10];
      lwHora@1000000002 : Time;
      lwFecha@1000000001 : Date;
      lwInt@1000000033 : Integer;
      vComodinTxt@1000000025 : Text[250];
      vTipoRegistro@1000000010 : Text[30];
      vFechaServicio@1000000004 : Text[30];
      vSubAgencia@1000000035 : Text[30];
      vServicio@1000000006 : Text[30];
      vTipoVehiculo@1000000007 : Text[30];
      vComentario@1000000008 : Text[240];
      vTipoTraslado@1000000009 : Text[30];
      vEntradaSalida@1000000011 : Text[30];
      vCiaVuelo@1000000012 : Text[30];
      vNumVuelo@1000000013 : Text[30];
      vHoraVuelo@1000000014 : Text[30];
      vCodHotel@1000000015 : Text[30];
      vNombreHotel@1000000026 : Text[250];
      vHoraPresentacion@1000000027 : Text[30];
      vObservacionesB@1000000028 : Text[250];
      vCiaVuelo2@1000000029 : Text[30];
      vNumVuelo2@1000000030 : Text[30];
      vTotalPersona@1000000031 : Text[30];
      vTotalGratis@1000000032 : Text[30];
      vNomTTOO@1000000034 : Text[250];

    PROCEDURE SetParametros@1000000000(pwNombreFichero@1000000000 : Text[250];pwNumeroImportacion@1000000001 : Integer);
    BEGIN
      lwFichero := pwNombreFichero;
      wNumImportacion := pwNumeroImportacion;
      CurrDataport.FILENAME := lwFichero;
    END;

    BEGIN
    END.
  }
}
