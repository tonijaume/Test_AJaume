OBJECT Dataport 7009702 Importacion Datos BLANK
{
  OBJECT-PROPERTIES
  {
    Date=02/10/12;
    Time=12:00:00;
    Modified=Yes;
    Version List=AIC2009,GOC;
  }
  PROPERTIES
  {
    CaptionML=[ENU=BLANK Data Importation;
               ESP=Importacion Datos BLANK];
    Import=Yes;
    FileFormat=Fixed;
    RecordSeparator=<LF>;
    OnPreDataport=BEGIN
                    IF "Datos Blank".GETFILTER("N§ HPL") <> '' THEN BEGIN
                      NumHPL := "Datos Blank".GETFILTER("N§ HPL");
                      "Datos Blank".SETRANGE("N§ HPL");
                    END
                    ELSE
                      ERROR(Text000);
                  END;

  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table7010004;
        ReqFilterFields=N§ HPL,TourOperador;
        OnPreDataItem=BEGIN
                        NumLinea := 0;

                        wTTOO := GETFILTER(TourOperador);
                        IF wTTOO = '' THEN
                          ERROR(Text002);

                        rTTOO.GET(wTTOO);
                      END;

        OnBeforeImportRecord=BEGIN
                               NumLinea := NumLinea + 1;
                             END;

        OnAfterImportRecord=VAR
                              Codi@1103355000 : Text[1];
                            BEGIN
                              Codi := COPYSTR(TextoImport, 1, 1);
                              CASE Codi OF
                                '1': Reg_Blank;
                                Text001: Reg_Reserva;
                                '3': Reg_Precio;
                                '4': Reg_Coste_Adic;
                                '5': Reg_Otros_Costes;
                              END;
                              CurrDataport.SKIP;
                            END;

      }
      FIELDS
      {
        { 1    ;153  ;TextoImport          }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=8910;
      Height=880;
      CaptionML=[ENU=BLANK Data Importation;
                 ESP=Importacion Datos BLANK];
      OnOpenForm=BEGIN
                   RequestOptionsForm.ACTIVATE;
                 END;

    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      Text000@1103355008 : TextConst 'ENU=Must indicate a number of HPL;ESP=Debe indicar un numero de HPL';
      Text001@1103355009 : TextConst 'ENU=V;ESP=V';
      Text002@1103355010 : TextConst 'ENU=Must indicate a importation touroperator;ESP=Debe indicar un touroperador de importacion';
      Text003@1103355011 : TextConst 'ENU=Hotel does not exist;ESP=No existe el hotel';
      Text004@1103355012 : TextConst 'ENU=for %1;ESP=para %1';
      Text005@1103355013 : TextConst 'ENU=E;ESP=E';
      Text006@1103355014 : TextConst 'ENU=K;ESP=K';
      Text007@1103355015 : TextConst 'ENU=I;ESP=I';
      Text008@1103355016 : TextConst 'ENU=Board type does not exist;ESP=No existe el tipo de regimen';
      rBlank@1103355006 : Record 7010004;
      rTTOO@1103355018 : Record 7009717;
      NumHPL@1103355001 : Code[10];
      auxHotelTO@1103355004 : Code[20];
      auxHotel@1103355005 : Code[20];
      wTTOO@1103355017 : Code[10];
      NumLinea@1103355003 : Integer;
      NumPersona@1103355007 : Integer;
      TextoImport@1103355002 : Text[153];
      NombreFichero@1103355000 : Text[250];

    PROCEDURE Reg_Blank@5();
    VAR
      rHotelTO@1103355000 : Record 7009725;
    BEGIN
      auxHotelTO := COPYSTR(TextoImport, 2, 10);
      rHotelTO.SETRANGE(TourOperador, wTTOO);
      rHotelTO.SETRANGE("Hotel TO"  , auxHotelTO);
      IF rHotelTO.FIND('-') THEN
        auxHotel := rHotelTO."Hotel estancia"
      ELSE
        Insertar_Error( STRSUBSTNO(Text003 + auxHotelTO + Text004, wTTOO) );
      Insertar_Hotel(auxHotelTO);
    END;

    PROCEDURE Reg_Reserva@6();
    VAR
      ParteDecimal@1103355000 : Integer;
    BEGIN
      CLEAR(rBlank);
      NumPersona := 1;
      rBlank.TourOperador         := wTTOO;
      rBlank."N§ HPL"             := NumHPL;
      rBlank.VALIDATE(Bono        , COPYSTR(TextoImport, 2, 8)); // JPT 11/01/05 Se rellena Touroperador venta
      rBlank."Hotel TourOperador" := auxHotelTO;
      rBlank."Fecha Llegada"      := Montar_Fecha(COPYSTR(TextoImport, 30, 6));
      rBlank."N§ Pagina"          := 0;
      rBlank."N§ Linea"           := NumLinea;
      rBlank."Hotel Agencia"      := auxHotel;
      rBlank."Nombre cliente"     := COPYSTR(TextoImport, 10, 20);
      IF COPYSTR(TextoImport, 36, 2) = '' THEN
        rBlank.Estancia           := 0
      ELSE
        EVALUATE(rBlank.Estancia     , COPYSTR(TextoImport, 36, 2));
      rBlank."Tipo habitacion"    := COPYSTR(TextoImport, 38, 3);
      Buscar_Habitacion;
      rBlank."Tipo regimen"       := COPYSTR(TextoImport, 41, 2);
      Buscar_Regimen;

      IF COPYSTR(TextoImport, 43, 2) = '' THEN
        rBlank.Cantidad := 0
      ELSE
        EVALUATE(rBlank.Cantidad     , COPYSTR(TextoImport, 43, 2));

      IF COPYSTR(TextoImport, 46, 2) = '' THEN
        ParteDecimal := 0
      ELSE
        EVALUATE(ParteDecimal, COPYSTR(TextoImport, 46, 2));

      rBlank.Cantidad := rBlank.Cantidad + ROUND(ParteDecimal / 100, 1);

      IF COPYSTR(TextoImport, 48, 2) = '' THEN
        rBlank.Adultos := 0
      ELSE
        EVALUATE(rBlank.Adultos, COPYSTR(TextoImport, 48, 2));

      IF COPYSTR(TextoImport, 50, 2) = '' THEN
        rBlank.Ni¤os := 0
      ELSE
        EVALUATE(rBlank.Ni¤os, COPYSTR(TextoImport, 50, 2));

      IF COPYSTR(TextoImport, 52, 2) = '' THEN
        rBlank.Infants := 0
      ELSE
        EVALUATE(rBlank.Infants, COPYSTR(TextoImport, 52, 2));

      rBlank.Delegacion := COPYSTR(rBlank."Hotel Agencia", 1, 3);
      rBlank.INSERT;
    END;

    PROCEDURE Reg_Precio@7();
    VAR
      rPreciosBLANK@1103355000 : Record 7010072;
      CosteBono@1103355001 : Decimal;
      ParteDecimal@1103355002 : Integer;
    BEGIN
      CLEAR(rPreciosBLANK);
      rPreciosBLANK.TourOperador     := wTTOO;
      rPreciosBLANK.Bono             := rBlank.Bono;
      rPreciosBLANK."Hotel TO"       := auxHotelTO;
      rPreciosBLANK."N§ HPL"         := NumHPL;
      rPreciosBLANK."N§ Linea"       := rBlank."N§ Linea";
      rPreciosBLANK."N§ Persona"     := NumPersona;
      rPreciosBLANK."Tipo Precio"    := rPreciosBLANK."Tipo Precio"::Base;
      rPreciosBLANK."N§ Orden"       := Buscar_Orden(rPreciosBLANK) + 10;
      CASE COPYSTR(TextoImport, 2, 1) OF
        Text005: rPreciosBLANK."Tipo Persona" := rPreciosBLANK."Tipo Persona"::Adulto;
        Text006: rPreciosBLANK."Tipo Persona" := rPreciosBLANK."Tipo Persona"::Ni¤o;
        Text007: rPreciosBLANK."Tipo Persona" := rPreciosBLANK."Tipo Persona"::Infant;
      END;
      rPreciosBLANK."Hotel Agencia"  := rBlank."Hotel Agencia";

      IF COPYSTR(TextoImport, 3, 2) = '' THEN
        rPreciosBLANK."N§ Personas"  := 0
      ELSE
        EVALUATE(rPreciosBLANK."N§ Personas", COPYSTR(TextoImport, 3, 2));

      IF COPYSTR(TextoImport, 5, 2) = '' THEN
        rPreciosBLANK."Edad Ni¤o"    := 0
      ELSE
        EVALUATE(rPreciosBLANK."Edad Ni¤o"  , COPYSTR(TextoImport, 5, 2));

      IF COPYSTR(TextoImport, 8, 11) = '' THEN
        CosteBono                    := 0
      ELSE
        EVALUATE(CosteBono                  , COPYSTR(TextoImport, 8, 11));

      IF COPYSTR(TextoImport, 20, 2) = '' THEN
        ParteDecimal                 := 0
      ELSE
        EVALUATE(ParteDecimal               , COPYSTR(TextoImport, 20, 2));

      rPreciosBLANK.Coste            := CosteBono + ROUND(ParteDecimal / 100, 0.01);
      IF COPYSTR(TextoImport, 7, 1) = '-' THEN
        rPreciosBLANK.Coste          := -rPreciosBLANK.Coste;

      rPreciosBLANK."C¢d. divisa"           := COPYSTR(TextoImport, 22, 3);
      rPreciosBLANK."Importe DL"   := Importe_Ptas(rPreciosBLANK."C¢d. divisa", rPreciosBLANK.Coste);
      rPreciosBLANK."Dias estancia"  := rBlank.Estancia;
      rPreciosBLANK."Tipo Habitacion":= rBlank."Tipo habitacion";
      rPreciosBLANK."Tipo Regimen"   := rBlank."Tipo regimen";
      rPreciosBLANK.Habitaciones     := rBlank.Cantidad;
      rPreciosBLANK."Touroperador Venta" := rBlank."Touroperador Venta";
      rPreciosBLANK.INSERT;
      rBlank.Importe                 := rBlank.Importe + rPreciosBLANK."Importe DL";
      rBlank.MODIFY;
      NumPersona := NumPersona + 1;
    END;

    PROCEDURE Reg_Coste_Adic@8();
    VAR
      rPreciosBLANK@1103355000 : Record 7010072;
      CosteBono@1103355001 : Decimal;
      ParteDecimal@1103355002 : Integer;
    BEGIN

      CLEAR(rPreciosBLANK);
      rPreciosBLANK.TourOperador  := wTTOO;
      rPreciosBLANK.Bono          := rBlank.Bono;
      rPreciosBLANK."Hotel TO"    := auxHotelTO;
      rPreciosBLANK."N§ HPL"      := NumHPL;
      rPreciosBLANK."N§ Linea"    := rBlank."N§ Linea";
      IF NumPersona > 1 THEN
        rPreciosBLANK."N§ Persona"  := NumPersona - 1
      ELSE
        rPreciosBLANK."N§ Persona"  := 1;
      rPreciosBLANK."Tipo Precio" := rPreciosBLANK."Tipo Precio"::"Coste adicional";
      rPreciosBLANK."N§ Orden"    := Buscar_Orden(rPreciosBLANK) + 10;
      rPreciosBLANK."Hotel Agencia":= rBlank."Hotel Agencia";
      IF COPYSTR(TextoImport, 2, 2) = '' THEN
        rPreciosBLANK."N§ Personas":= 0
      ELSE
        EVALUATE(rPreciosBLANK."N§ Personas", COPYSTR(TextoImport, 2, 2));

      IF COPYSTR(TextoImport, 8, 11) = '' THEN
        CosteBono                  := 0
      ELSE
        EVALUATE(CosteBono                  , COPYSTR(TextoImport, 8, 11));

      IF COPYSTR(TextoImport, 20, 2) = '' THEN
        ParteDecimal               := 0
      ELSE
        EVALUATE(ParteDecimal               , COPYSTR(TextoImport, 20, 2));

      rPreciosBLANK.Coste         := CosteBono + ROUND(ParteDecimal / 100, 0.01);
      IF COPYSTR(TextoImport, 7, 1) = '-' THEN
        rPreciosBLANK.Coste       := -rPreciosBLANK.Coste;

      rPreciosBLANK."C¢d. divisa"        := COPYSTR(TextoImport, 22, 3);
      rPreciosBLANK."Importe DL":= Importe_Ptas(rPreciosBLANK."C¢d. divisa", rPreciosBLANK.Coste);
      rPreciosBLANK."Touroperador Venta" := rBlank."Touroperador Venta";
      rPreciosBLANK.INSERT;

      rBlank.Importe              := rBlank.Importe + rPreciosBLANK."Importe DL";
      rBlank.MODIFY;
    END;

    PROCEDURE Reg_Otros_Costes@9();
    VAR
      rPreciosBLANK@1103355000 : Record 7010072;
      CosteBono@1103355001 : Decimal;
      ParteDecimal@1103355002 : Integer;
    BEGIN
      CLEAR(rPreciosBLANK);
      rPreciosBLANK.TourOperador  := wTTOO;
      rPreciosBLANK.Bono          := rBlank.Bono;
      rPreciosBLANK."Hotel TO"    := auxHotelTO;
      rPreciosBLANK."N§ HPL"      := NumHPL;
      rPreciosBLANK."N§ Linea"    := rBlank."N§ Linea";
      IF NumPersona > 1 THEN
        rPreciosBLANK."N§ Persona"  := NumPersona - 1
      ELSE
        rPreciosBLANK."N§ Persona"  := 1;
      rPreciosBLANK."Tipo Precio" := rPreciosBLANK."Tipo Precio"::"Otro coste";
      rPreciosBLANK."N§ Orden"    := Buscar_Orden(rPreciosBLANK) + 10;
      rPreciosBLANK."Hotel Agencia":= rBlank."Hotel Agencia";

      IF COPYSTR(TextoImport, 2, 2) = '' THEN
        rPreciosBLANK."N§ Personas" := 0
      ELSE
        EVALUATE(rPreciosBLANK."N§ Personas", COPYSTR(TextoImport, 2, 2));

      rPreciosBLANK."Codigo coste":= COPYSTR(TextoImport, 4, 6);

      IF COPYSTR(TextoImport, 11, 11) = '' THEN
        CosteBono                   := 0
      ELSE
        EVALUATE(CosteBono                  , COPYSTR(TextoImport, 11, 11));

      IF COPYSTR(TextoImport, 23, 2) = '' THEN
        ParteDecimal                := 0
      ELSE
        EVALUATE(ParteDecimal               , COPYSTR(TextoImport, 23, 2));

      rPreciosBLANK.Coste         := CosteBono + ROUND(ParteDecimal / 100, 0.01);
      IF COPYSTR(TextoImport, 10, 1) = '-' THEN
        rPreciosBLANK.Coste       := -rPreciosBLANK.Coste;

      rPreciosBLANK."C¢d. divisa"        := COPYSTR(TextoImport, 25, 3);
      rPreciosBLANK."Importe DL":= Importe_Ptas(rPreciosBLANK."C¢d. divisa", rPreciosBLANK.Coste);
      rPreciosBLANK."Touroperador Venta" := rBlank."Touroperador Venta";
      rPreciosBLANK.INSERT;

      rBlank.Importe              := rBlank.Importe + rPreciosBLANK."Importe DL";
      rBlank.MODIFY;
    END;

    PROCEDURE Insertar_Hotel@13(par_HotelTO@1103355000 : Code[20]);
    VAR
      rHotelITS@1103355001 : Record 7010074;
    BEGIN
      // Insertar_hotel
      //
      IF NOT rHotelITS.GET(par_HotelTO) THEN BEGIN
        CLEAR(rHotelITS);
        rHotelITS.Codigo      := par_HotelTO;
        rHotelITS.Descripcion := COPYSTR(TextoImport, 17, 50);
        rHotelITS.INSERT;
      END;
    END;

    PROCEDURE Insertar_Error@14(par_Texto_Error@1103355000 : Text[80]);
    VAR
      rError@1103355001 : Record 7010073;
    BEGIN
      rError.RESET;
      rError.SETRANGE("N§ HPL", NumHPL);
      rError.SETRANGE("N§ Linea", NumLinea);
      IF rError.FINDLAST THEN
        rError."N§ Error" := rError."N§ Error" + 10
      ELSE
        rError."N§ Error" := 10;
      rError."N§ HPL"   := NumHPL;
      rError."N§ Linea" := NumLinea;
      rError.Texto      := par_Texto_Error;
      rError.Fecha      := TODAY;
      rError.Hora       := TIME;
      rError.Usuario    := USERID();
      rError.INSERT;
    END;

    PROCEDURE Montar_Fecha@21(par_Fecha@1103355000 : Text[6]) : Date;
    VAR
      vDia@1103355001 : Text[2];
      vMes@1103355002 : Text[2];
      vAny@1103355003 : Text[2];
      vDiaE@1103355004 : Integer;
      vMesE@1103355005 : Integer;
      vAnyE@1103355006 : Integer;
    BEGIN
      vDia := COPYSTR(par_Fecha, 1, 2);
      vMes := COPYSTR(par_Fecha, 3, 2);
      vAny := COPYSTR(par_Fecha, 5, 2);
      IF (vDia <> '') AND (vMes <> '') AND (vAny <> '') THEN BEGIN
        EVALUATE(vDiaE, vDia);
        EVALUATE(vMesE, vMes);
        EVALUATE(vAnyE, vAny);
        IF vAnyE > 80 THEN
          vAnyE := vAnyE + 1900
        ELSE
          vAnyE := vAnyE + 2000;
        EXIT(DMY2DATE(vDiaE, vMesE, vAnyE));
      END;
      EXIT(0D);
    END;

    PROCEDURE Buscar_Habitacion@12();
    VAR
      rHabTO@1103355000 : Record 7009731;
    BEGIN
      //
      // Buscar_Habitacion
    END;

    PROCEDURE Buscar_Regimen@15();
    VAR
      rRegTO@1103355000 : Record 7009719;
    BEGIN
      // Buscar_Regimen

      rRegTO.RESET;
      rRegTO.SETRANGE(TourOperador, wTTOO);
      rRegTO.SETRANGE("Regimen TO", rBlank."Tipo regimen");
      IF NOT rRegTO.FINDFIRST THEN
        Insertar_Error(Text008 + rBlank."Tipo regimen" + Text004);
      rRegTO.RESET;
    END;

    PROCEDURE Importe_Ptas@25(par_Divisa@1103355000 : Code[10];par_importe@1103355001 : Decimal) : Decimal;
    VAR
      rDivisa@1103355002 : Record 4;
      rTipoCambio@1103355003 : Record 330;
    BEGIN
      // Importe_Ptas

      IF par_Divisa <> '' THEN BEGIN
        IF rDivisa.GET(par_Divisa) THEN
          EXIT( ROUND( rTipoCambio.ExchangeAmtFCYToFCY(TODAY, par_Divisa, '', par_importe)) );
      END
      ELSE
        EXIT(par_importe);
    END;

    PROCEDURE Buscar_Orden@2(par_rPreciosBLANK@1103355000 : Record 7010072) : Integer;
    VAR
      rPreciosBLANK@1103355001 : Record 7010072;
    BEGIN
      rPreciosBLANK.SETRANGE(TourOperador , par_rPreciosBLANK.TourOperador);
      rPreciosBLANK.SETRANGE(Bono         , par_rPreciosBLANK.Bono);
      rPreciosBLANK.SETRANGE("Hotel TO"   , par_rPreciosBLANK."Hotel TO");
      rPreciosBLANK.SETRANGE("N§ HPL"     , par_rPreciosBLANK."N§ HPL");
      rPreciosBLANK.SETRANGE("N§ Linea"   , par_rPreciosBLANK."N§ Linea");
      rPreciosBLANK.SETRANGE("N§ Persona" , par_rPreciosBLANK."N§ Persona");
      rPreciosBLANK.SETRANGE("Tipo Precio", par_rPreciosBLANK."Tipo Precio");
      IF rPreciosBLANK.FINDLAST THEN
        EXIT(rPreciosBLANK."N§ Orden")
      ELSE
        EXIT(0);
    END;

    BEGIN
    {

      ## AJF 29/06/09

        .- (09/00319) cambio c¢digos de hotel de code10 a code20.

      ## AJS 05.10.2009

        .- En la funcion Insertar_Error filtro por "N§ Linea" antes de obtener el numero de linea
           porque este campo esta en la clave primaria.
    }
    END.
  }
}
