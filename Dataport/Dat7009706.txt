OBJECT Dataport 7009706 Importacion hotel
{
  OBJECT-PROPERTIES
  {
    Date=02/10/12;
    Time=12:00:00;
    Modified=Yes;
    Version List=AIC2009,GOC;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Hotel importation;
               ESP=Importacion hotel];
    Import=Yes;
    FileFormat=Fixed;
    UseReqForm=No;
  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table2000000026;
        AutoSave=No;
        AutoUpdate=No;
        DataItemTableView=SORTING(Number);
        OnPreDataItem=BEGIN
                        IF NOT rPar.FIND('-') THEN
                          ERROR(Text000);
                        w_ultima_linea := 1;
                      END;

        OnAfterImportRecord=VAR
                              ok@1103355000 : Boolean;
                            BEGIN
                              CLEAR(rHot);
                              rHot."ID Hotel" := w_ultima_linea;
                              rHot.Touroperador := COPYSTR(w_texto, 1, 4);
                              rHot.Bono := COPYSTR(w_texto, 5, 9);
                              rHot.Temporada := COPYSTR(w_texto, 14, 5);
                              ok := EVALUATE(rHot.Contador, COPYSTR(w_texto, 22, 3));
                              // 14-11-99 No se utilizan los 10 caracteres por peticion de LTU-Espa¤a
                              //
                              rHot.Hotel := COPYSTR(w_texto, 25, 8);
                              //
                              // 14-11-99 No se utilizan los 10 caracteres

                              // ----  Se utiliza la ultima letra del codigo del hotel para buscar que paquete se va a  ----
                              // ----  aplicar en el periodo generado por la linea de hotel. AJS - Peticion VLE         ----

                              rHot."Paquete asociado" := traduce_paquete(COPYSTR(w_texto, 33, 1));

                              // ---- FIN 12-02-01. AJS - Peticion VLE  ----

                              rHot."Fecha entrada" := devuelve_fecha(COPYSTR(w_texto, 36, 8));
                              rHot."Fecha salida" := devuelve_fecha(COPYSTR(w_texto, 44, 8));
                              ok := EVALUATE(rHot."N§ Habitaciones", COPYSTR(w_texto, 52, 3));
                              rHot.Habitacion := COPYSTR(w_texto, 55, 6);
                              rHot.Regimen := COPYSTR(w_texto, 61, 2);
                              rHot."Tipo Registro" := convierte_tipo_registro(COPYSTR(w_texto, 72, 2));
                              rHot.Fichero := w_fichero;
                              ok := EVALUATE(rHot."N§ Servicio", COPYSTR(w_texto, 74, 3));
                              IF DELCHR(COPYSTR(w_texto, 77, 2), '<>') = Text001 THEN
                                rHot."Servicio extra" := TRUE
                              ELSE
                                rHot."Servicio extra" := FALSE;
                              rHot.INSERT;
                              w_ultima_linea := w_ultima_linea + 1;
                            END;

        OnPostDataItem=BEGIN
                         rPar.LOCKTABLE(TRUE);
                         IF NOT rPar.FIND('-') THEN
                           ERROR(Text000);
                         rPar."Contador hotel" := w_ultima_linea - 1;
                         rPar.MODIFY;
                       END;

      }
      FIELDS
      {
        { 1    ;79   ;w_texto              }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=9020;
      Height=3410;
      CaptionML=[ENU=Hotel importation;
                 ESP=Importacion hotel];
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      Text000@1103355009 : TextConst 'ENU=Any registration Interface parameters folder does not exist;ESP=No existe ningun registro en el fichero de Parametros de Interfase.';
      Text001@1103355010 : TextConst 'ENU=X;ESP=X';
      Text002@1103355011 : TextConst 'ENU=OK;ESP=OK';
      Text003@1103355012 : TextConst 'ENU=RQ;ESP=RQ';
      Text004@1103355013 : TextConst 'ENU=XX;ESP=XX';
      Text005@1103355014 : TextConst 'ENU=N;ESP=N';
      Text006@1103355015 : TextConst 'ENU=P;ESP=P';
      Text007@1103355016 : TextConst 'ENU=F;ESP=F';
      Text008@1103355017 : TextConst 'ENU=M;ESP=M';
      Text009@1103355018 : TextConst 'ENU=D;ESP=D';
      w_texto@1103355000 : Text[79];
      w_nombre_fichero@1103355001 : Text[250];
      w_ultima_linea@1103355002 : Integer;
      w_fichero@1103355003 : Integer;
      w_dia@1103355004 : Integer;
      w_mes@1103355005 : Integer;
      w_a¤o@1103355006 : Integer;
      rPar@1103355007 : Record 7010081;
      rHot@1103355008 : Record 7010078;

    PROCEDURE pasar_numero@2(num_fichero@1103355000 : Integer);
    BEGIN
      // pasar_numero
      //
      w_fichero := num_fichero;
    END;

    PROCEDURE pasar_nombre@4(par_nombre@1103355000 : Text[250]);
    BEGIN
      // pasar_nombre
      //
      w_nombre_fichero := par_nombre;
    END;

    PROCEDURE devuelve_fecha@3(par_texto@1103355000 : Text[8]) : Date;
    VAR
      ok@1103355001 : Boolean;
    BEGIN
      // devuelve_fecha
      //
      w_dia := 0;
      w_mes := 0;
      w_a¤o := 0;
      ok := EVALUATE(w_dia, COPYSTR(par_texto, 7, 2));
      ok := EVALUATE(w_mes, COPYSTR(par_texto, 5, 2));
      ok := EVALUATE(w_a¤o, COPYSTR(par_texto, 1, 4));
      IF (w_dia <= 0) OR (w_dia > 31) THEN
        EXIT(0D);
      IF (w_mes <= 0) OR (w_mes > 12) THEN
        EXIT(0D);
      IF w_a¤o <= 0 THEN
        EXIT(0D);
      EXIT(DMY2DATE(w_dia, w_mes, w_a¤o));
    END;

    PROCEDURE convierte_tipo_registro@10(par_texto@1103355000 : Text[2]) : Integer;
    VAR
      aux_cab@1103355001 : Record 7010076;
    BEGIN
      // convierte_tipo_registro
      //
      CASE par_texto OF
        Text002: EXIT(aux_cab."Tipo Registro"::Alta);
        Text003: EXIT(aux_cab."Tipo Registro"::Modificacion);
        Text004: EXIT(aux_cab."Tipo Registro"::Borrado);
        '': EXIT(aux_cab."Tipo Registro"::Error);
        ELSE
          EXIT(aux_cab."Tipo Registro"::Alta);
      END;
    END;

    PROCEDURE traduce_paquete@1(pw_paquete@1103355000 : Code[1]) : Code[10];
    VAR
      rPar@1103355001 : Record 7010081;
    BEGIN
      // traduce_paquete
      //
      rPar.FIND('-');
      CASE pw_paquete OF
        Text005: EXIT(rPar."Paquete Solo Hotel");
        Text006, Text007, Text008, Text009: EXIT(rPar."Paquete Hotel + Transfer");
      END;
    END;

    BEGIN
    END.
  }
}
