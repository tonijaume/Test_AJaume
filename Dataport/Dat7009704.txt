OBJECT Dataport 7009704 Importacion cabecera
{
  OBJECT-PROPERTIES
  {
    Date=02/10/12;
    Time=12:00:00;
    Modified=Yes;
    Version List=AIC2009,GOC;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Header importation;
               ESP=Importacion cabecera];
    Import=Yes;
    FileFormat=Fixed;
    UseReqForm=No;
  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table2000000026;
        AutoSave=No;
        AutoUpdate=No;
        DataItemTableView=SORTING(Number);
        OnPreDataItem=BEGIN
                        IF NOT rPar.FIND('-') THEN
                          ERROR(Text000);
                        w_ultima_linea := 1;
                      END;

        OnAfterImportRecord=BEGIN
                              CLEAR(rCab);
                              rCab."ID Cabecera" := w_ultima_linea;
                              rCab.TourOperador := COPYSTR(w_texto, 1, 4);
                              rCab.Bono := COPYSTR(w_texto, 5, 9);
                              rCab.Temporada := COPYSTR(w_texto, 14, 5);
                              rCab."Fecha creacion" := devuelve_fecha(COPYSTR(w_texto, 28, 8));
                              rCab."Fecha cancelacion" := devuelve_fecha(COPYSTR(w_texto, 36, 8));
                              rCab."Fecha modificacion" := devuelve_fecha(COPYSTR(w_texto, 44, 8));
                              rCab.Paquete := convierte_paquete(COPYSTR(w_texto, 67, 1));
                              rCab."Tipo Booking" := convierte_tipo_booking(COPYSTR(w_texto, 77, 1));
                              suma_personas(COPYSTR(w_texto, 115, 9));
                              rCab.Adultos := w_adultos;
                              rCab.Ni¤os := w_ni¤os;
                              rCab.Infants := w_infants;
                              rCab."Tipo Registro" := convierte_tipo_registro(COPYSTR(w_texto, 124, 1));
                              rCab.Estado := rCab.Estado::"No procesada";
                              rCab.Fichero := w_fichero;
                              rCab."Usuario proceso" := '';
                              rCab."Modificado manual" := FALSE;
                              rCab."Pasado errores" := FALSE;
                              IF rCab."Fecha cancelacion" <> 0D THEN
                                rCab."Tipo Registro" := rCab."Tipo Registro"::Borrado;
                              rCab.INSERT(FALSE);
                              w_ultima_linea := w_ultima_linea + 1;
                            END;

        OnPostDataItem=BEGIN
                         rPar.LOCKTABLE(TRUE);
                         IF NOT rPar.FIND('-') THEN
                           ERROR(Text000);
                         rPar."Contador cabecera" := w_ultima_linea - 1;
                         rPar.MODIFY;
                       END;

      }
      FIELDS
      {
        { 1    ;125  ;w_texto              }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=9020;
      Height=3410;
      CaptionML=[ENU=Header importation;
                 ESP=Importacion cabecera];
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      Text000@1103355012 : TextConst 'ENU=Any registration Interface parameters folder does not exist;ESP=No existe ningun registro en el fichero de Parametros de Interfase.';
      Text001@1103355013 : TextConst 'ENU=P;ESP=P';
      Text002@1103355014 : TextConst 'ENU=L;ESP=L';
      Text003@1103355015 : TextConst 'ENU=F;ESP=F';
      Text004@1103355016 : TextConst 'ENU=ONLYFLIGHT;ESP=SOLOVUELO';
      Text005@1103355017 : TextConst 'ENU=N;ESP=N';
      Text006@1103355018 : TextConst 'ENU=R;ESP=R';
      Text007@1103355019 : TextConst 'ENU=M;ESP=M';
      Text008@1103355020 : TextConst 'ENU=A;ESP=A';
      w_texto@1103355000 : Text[125];
      w_nombre_fichero@1103355001 : Text[250];
      w_ultima_linea@1103355002 : Integer;
      w_fichero@1103355003 : Integer;
      w_dia@1103355004 : Integer;
      w_mes@1103355005 : Integer;
      w_a¤o@1103355006 : Integer;
      w_adultos@1103355007 : Integer;
      w_ni¤os@1103355008 : Integer;
      w_infants@1103355009 : Integer;
      rCab@1103355010 : Record 7010076;
      rPar@1103355011 : Record 7010081;

    PROCEDURE pasar_numero@2(num_fichero@1103355000 : Integer);
    BEGIN
      // pasar_numero
      //
      w_fichero := num_fichero;
    END;

    PROCEDURE pasar_nombre@1(par_nombre@1103355000 : Text[250]);
    BEGIN
      // pasar_nombre
      //
      w_nombre_fichero := par_nombre;
    END;

    PROCEDURE devuelve_fecha@3(par_texto@1103355000 : Text[8]) : Date;
    VAR
      ok@1103355001 : Boolean;
    BEGIN
      // devuelve_fecha
      //
      w_dia := 0;
      w_mes := 0;
      w_a¤o := 0;
      ok := EVALUATE(w_dia, COPYSTR(par_texto, 7, 2));
      ok := EVALUATE(w_mes, COPYSTR(par_texto, 5, 2));
      ok := EVALUATE(w_a¤o, COPYSTR(par_texto, 1, 4));
      IF (w_dia <= 0) OR (w_dia > 31) THEN
        EXIT(0D);
      IF (w_mes <= 0) OR (w_mes > 12) THEN
        EXIT(0D);
      IF w_a¤o <= 0 THEN
        EXIT(0D);
      EXIT(DMY2DATE(w_dia, w_mes, w_a¤o));
    END;

    PROCEDURE convierte_paquete@6(par_texto@1103355000 : Text[1]) : Code[10];
    BEGIN
      // convierte_paquete
      //
      CASE par_texto OF
        Text001: EXIT(rPar."Paquete Hotel + Transfer"); // AJS 29-11-2000 Solicitado LTU
        Text002: EXIT(rPar."Paquete Solo Hotel");       // AJS 29-11-2000 Solicitado LTU
        Text003: EXIT(Text004);                     // AJS 12-02-2001 Solicitado VLE

      // ----  AJS 12-02-01 Text005: EXIT(rPar."Paquete Solo Transfer");    ----  //
        ELSE
          EXIT('');
      END;
    END;

    PROCEDURE convierte_tipo_booking@4(par_texto@1103355000 : Text[1]) : Integer;
    VAR
      aux_cab@1103355001 : Record 7010076;
    BEGIN
      // convierte_tipo_booking
      //
      CASE par_texto OF
        '1': EXIT(aux_cab."Tipo Booking"::Ok);
        '2': EXIT(aux_cab."Tipo Booking"::"Fuera cupo");
        ELSE
          EXIT(aux_cab."Tipo Booking"::Error);
      END;
    END;

    PROCEDURE suma_personas@9(par_texto@1103355000 : Text[9]);
    VAR
      ok@1103355001 : Boolean;
    BEGIN
      // suma_personas
      //
      w_adultos := 0;
      w_ni¤os := 0;
      w_infants := 0;
      ok := EVALUATE(w_adultos, COPYSTR(par_texto, 1, 3));
      ok := EVALUATE(w_ni¤os, COPYSTR(par_texto, 4, 3));
      ok := EVALUATE(w_infants, COPYSTR(par_texto, 7, 3));
      w_adultos := w_adultos - w_ni¤os;
    END;

    PROCEDURE convierte_tipo_registro@10(par_texto@1103355000 : Text[1]) : Integer;
    VAR
      aux_cab@1103355001 : Record 7010076;
    BEGIN
      // convierte_tipo_registro
      //
      CASE par_texto OF
        Text006: EXIT(aux_cab."Tipo Registro"::Alta);
        Text007: EXIT(aux_cab."Tipo Registro"::Modificacion);
        Text008: EXIT(aux_cab."Tipo Registro"::Borrado);
        ELSE
          EXIT(aux_cab."Tipo Registro"::Error);
      END;
    END;

    BEGIN
    END.
  }
}
