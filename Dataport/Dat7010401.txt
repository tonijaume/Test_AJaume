OBJECT Dataport 7010401 Importacion combustible
{
  OBJECT-PROPERTIES
  {
    Date=16/10/09;
    Time=12:34:51;
    Version List=TRANSFER,TRN;
  }
  PROPERTIES
  {
    CaptionML=ESP=Importacion combustible;
    Import=Yes;
    FileFormat=Variable;
    FieldSeparator=[;];
    UseReqForm=Yes;
    ShowStatus=No;
  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table7035342;
        DataItemTableView=SORTING(Dia,Vehiculo,Conductor,id);
        OnPreDataItem=BEGIN
                        IF lwFechaReg=0D THEN
                          IF NOT CONFIRM(Text0005,TRUE) THEN
                            CurrDataport.QUIT;


                        IF wIMP=0 THEN
                          ERROR(Text0003);

                        CLEAR(wCont);
                        wVentana.OPEN('@1@@@@@@@@');
                      END;

        OnAfterImportRecord=VAR
                              lrReg2@1100244000 : Record 7035342;
                            BEGIN
                              IF (lwFechaReg<>0D) AND (lwFechaReg<>Dia) THEN
                                CurrDataport.SKIP;

                              IF wTipoTransaccion <> 1 THEN
                                CurrDataport.SKIP;

                              // No podemos insertar transacciones si el contador no va por kilometros
                              IF wTipoContador<> Text50000 THEN
                                CurrDataport.SKIP;

                              "No Importacion" := wIMP;

                              // Para asegurar buscamos el vehiculo por la matricula, si no le pone el codigo importado

                              IF rVeh.GET(Matricula) THEN BEGIN
                                IF Vehiculo <> rVeh.Numero THEN
                                  Vehiculo := rVeh.Numero;
                                VALIDATE(Vehiculo);
                                VALIDATE(Matricula);
                              END
                              ELSE BEGIN // Si no se encuentra piede confirmaci¢n para seguir
                                 IF CONFIRM(Text0001,FALSE,rVeh.TABLECAPTION,Matricula,Dia) THEN BEGIN
                                    CurrDataport.SKIP;
                                 END
                                 ELSE
                                   ERROR(Text0002);
                              END;

                                  // Si no se encuentra el codigo de conductor pide autorizaci¢n para seguir

                              rConductor.RESET;
                              rConductor.SETCURRENTKEY("Nombre Abreviado" , Garaje);
                              rConductor.SETRANGE("Nombre Abreviado"      , Conductor);
                              IF rConductor.FINDFIRST THEN
                                VALIDATE(Conductor)
                              ELSE
                                IF CONFIRM(Text0001,FALSE,rConductor.FIELDCAPTION(rConductor.Conductor),Conductor,Dia) THEN BEGIN
                                  CurrDataport.SKIP;
                                END
                                ELSE
                                  ERROR(Text0002);

                              // Miramos que el kilometraje no sea menor que la ultima vez, en ese caso lo marcaremos como rotura de tacografo
                              lrReg2.RESET;
                              lrReg2.SETCURRENTKEY(Vehiculo,
                                                  Dia,
                                                 "Hora repostaje",
                                                 Anulado);
                              lrReg2.SETRANGE (Vehiculo ,  Vehiculo);
                              lrReg2.SETFILTER(Dia      , '<=%1',  Dia);
                              lrReg2.SETRANGE (Anulado  , FALSE);
                              lrReg2.SETFILTER(id       ,'<>%1' , id);
                              lrReg2.SETFILTER(Kms      ,'>=%1' ,wContador);
                              IF lrReg2.FINDLAST THEN BEGIN
                                IF Dia=lrReg2.Dia THEN
                                  lrReg2.SETFILTER("Hora repostaje",'<=%1',"Hora repostaje");
                                IF lrReg2.FINDLAST THEN
                                  VALIDATE("Rotura Tacografo",TRUE);
                              END;

                              VALIDATE(Kms ,wContador);

                              VALIDATE("Litros repostados","Litros repostados" / 100);
                              ComprobarDuplicidad;
                              wCont+=1;
                              INSERT(TRUE);
                            END;

        OnPostDataItem=BEGIN
                         wVentana.CLOSE;
                         MESSAGE(Text0004,wCont);
                       END;

      }
      FIELDS
      {
        {      ;     ;wTipoTransaccion    ;OnBeforeEvaluateField=BEGIN
                                                                   wVentana.UPDATE(1,ROUND(CurrFile.POS/CurrFile.LEN*10000,1));
                                                                 END;
                                                                  }
        {      ;     ;wNulo                }
        {      ;     ;wNulo                }
        {      ;     ;wNulo                }
        {      ;     ;wNulo                }
        {      ;     ;wNulo                }
        {      ;     ;wNulo                }
        {      ;     ;wNulo                }
        {      ;     ;Dia                 ;OnAfterFormatField=BEGIN
                                                                IF (lwFechaReg <> 0D) AND (lwFechaReg <> Dia) THEN
                                                                  CurrDataport.SKIP;
                                                              END;
                                                               }
        {      ;     ;"Hora repostaje"     }
        {      ;     ;wNulo                }
        {      ;     ;wNulo                }
        {      ;     ;wNulo                }
        {      ;     ;wNulo                }
        {      ;     ;wNulo                }
        {      ;     ;Vehiculo             }
        {      ;     ;wMatricula          ;OnBeforeEvaluateField=BEGIN
                                                                   Matricula := COPYSTR(wMatricula,1,MAXSTRLEN(Matricula));
                                                                 END;
                                                                  }
        {      ;     ;wNulo                }
        {      ;     ;wNulo                }
        {      ;     ;wNulo                }
        {      ;     ;wNulo                }
        {      ;     ;wNulo                }
        {      ;     ;wNulo                }
        {      ;     ;wNulo                }
        {      ;     ;wNulo                }
        { 1    ;20   ;Conductor            }
        {      ;     ;wNulo                }
        {      ;     ;wNulo                }
        {      ;     ;wNulo                }
        {      ;     ;wNulo                }
        {      ;     ;wNulo                }
        {      ;     ;wNulo                }
        {      ;     ;wNulo                }
        {      ;     ;wContador            }
        {      ;     ;wTipoContador        }
        {      ;     ;wNulo                }
        {      ;     ;wNulo                }
        {      ;     ;wNulo                }
        {      ;     ;wNulo                }
        {      ;     ;wNulo                }
        {      ;     ;"Litros repostados"  }
        {      ;     ;wNulo                }
        {      ;     ;wNulo                }
        {      ;     ;wNulo                }
        {      ;     ;wNulo                }
        {      ;     ;wNulo                }
        {      ;     ;wNulo                }
        {      ;     ;wNulo                }
        {      ;     ;wNulo                }
        {      ;     ;wNulo                }
        {      ;     ;wNulo                }
        {      ;     ;wNulo                }
        {      ;     ;wNulo                }
        {      ;     ;wNulo                }
        {      ;     ;wNulo                }
        {      ;     ;wNulo                }
        {      ;     ;wNulo                }
        {      ;     ;wNulo                }
        {      ;     ;wNulo                }
        {      ;     ;wNulo                }
        {      ;     ;wNulo                }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=11550;
      Height=2420;
    }
    CONTROLS
    {
      { 1100244000;TextBox;2970 ;880  ;1700 ;440  ;CaptionML=ESP=Fecha Registros;
                                                   SourceExpr=lwFechaReg }
      { 1100244001;Label  ;220  ;880  ;2640 ;440  ;ParentControl=1100244000 }
      { 1100244002;TextBox;220  ;220  ;11220;440  ;HorzGlue=Both;
                                                   Focusable=No;
                                                   Border=No;
                                                   SourceExpr=CurrDataport.FILENAME }
    }
  }
  CODE
  {
    VAR
      Text50000@1103355000 : TextConst 'ESP=K';
      rVeh@1100244004 : Record 7010346;
      rConductor@1100244007 : Record 7010327;
      wTipoTransaccion@1100244000 : Integer;
      wNulo@1100244001 : Text[50];
      wTipoContador@1100244002 : Code[5];
      wContador@1100244003 : Decimal;
      Text0001@1100244006 : TextConst 'ESP=No se encuentra %1 %2 (dia %3)\¨Desea Continuar con la importaci¢n?';
      Text0002@1100244005 : TextConst 'ESP=Operaci¢n anulada';
      wIMP@1100244008 : Integer;
      Text0003@1100244009 : TextConst 'ESP=Indicar numero de impotaci¢n';
      lwFechaReg@1100244010 : Date;
      wCont@1100244011 : Integer;
      Text0004@1100244012 : TextConst 'ESP=Se han introducido %1 registros';
      Text0005@1100244013 : TextConst 'ESP=No se ha introducido una fecha de traspaso. Se traspasar  todo el archivo. ¨Desea Seguir?';
      wMatricula@1100244014 : Text[20];
      wVentana@1100244015 : Dialog;

    PROCEDURE SetImp@1100244000(pwImp@1100244000 : Integer);
    BEGIN
      // SetImp
      // Introducimos el numero de importacion
      wIMP:= pwImp;
    END;

    BEGIN
    END.
  }
}
