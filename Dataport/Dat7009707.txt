OBJECT Dataport 7009707 Importacion vuelo
{
  OBJECT-PROPERTIES
  {
    Date=02/10/12;
    Time=12:00:00;
    Modified=Yes;
    Version List=AIC2009,GOC;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Flight Importation;
               ESP=Importacion vuelo];
    Import=Yes;
    FileFormat=Fixed;
    UseReqForm=No;
  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table2000000026;
        AutoSave=No;
        AutoUpdate=No;
        DataItemTableView=SORTING(Number);
        OnPreDataItem=BEGIN
                        IF NOT rPar.FIND('-') THEN
                          ERROR(Text000);
                        w_ultima_linea := 1;
                      END;

        OnAfterImportRecord=BEGIN
                              CLEAR(rVue);
                              rVue."ID Vuelo" := w_ultima_linea;
                              rVue.TourOperador := DELCHR(COPYSTR(w_texto, 1, 4), '<>');
                              rVue.Bono := DELCHR(COPYSTR(w_texto, 5, 9), '<>');
                              rVue.Temporada := DELCHR(COPYSTR(w_texto, 14, 5), '<>');
                              IF NOT EVALUATE(rVue.Contador, DELCHR(COPYSTR(w_texto, 22, 2), '<>')) THEN
                                EVALUATE(rVue.Contador, '0')
                              ELSE
                                EVALUATE(rVue.Contador, DELCHR(COPYSTR(w_texto, 22, 2), '<>'));
                              rVue."Tipo Vuelo" := devuelve_tipo_vuelo(DELCHR(COPYSTR(w_texto, 24, 1), '<>'));
                              rVue."IATA origen" := DELCHR(COPYSTR(w_texto, 25, 3), '<>');
                              rVue."IATA destino" := DELCHR(COPYSTR(w_texto, 28, 3), '<>');
                              rVue.Fecha := devuelve_fecha(DELCHR(COPYSTR(w_texto, 31, 8), '<>'));
                              rVue.Vuelo := DELCHR(COPYSTR(w_texto, 42, 4), '<>');
                              IF EVALUATE(rVue.Hora, DELCHR(COPYSTR(w_texto, 48, 4), '<>')) THEN
                                ;
                              rVue.Compa¤ia := DELCHR(COPYSTR(w_texto, 52, 2), '<>');
                              rVue.Fichero := w_fichero;
                              IF NOT EVALUATE(rVue."N§ Servicio", DELCHR(COPYSTR(w_texto, 64, 3), '<>')) THEN
                                EVALUATE(rVue."N§ Servicio", '0')
                              ELSE
                                EVALUATE(rVue."N§ Servicio", DELCHR(COPYSTR(w_texto, 64, 3), '<>'));
                              rVue.INSERT;
                              w_ultima_linea := w_ultima_linea + 1;
                            END;

        OnPostDataItem=BEGIN
                         rPar.LOCKTABLE(TRUE);
                         IF NOT rPar.FIND('-') THEN
                           ERROR(Text000);
                         rPar."Contador vuelo" := w_ultima_linea - 1;
                         rPar.MODIFY;
                       END;

      }
      FIELDS
      {
        { 1    ;67   ;w_texto              }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=9020;
      Height=3410;
      CaptionML=[ENU=Flight Importation;
                 ESP=Importacion vuelo];
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      Text000@1103355009 : TextConst 'ENU=Any registration Interface parameters folder does not exist;ESP=No existe ningun registro en el fichero de Parametros de Interfase.';
      Text001@1103355010 : TextConst 'ENU=H;ESP=H';
      Text002@1103355011 : TextConst 'ENU=R;ESP=R';
      Text003@1103355012 : TextConst 'ENU=I;ESP=I';
      w_texto@1103355000 : Text[67];
      w_nombre_fichero@1103355001 : Text[250];
      w_ultima_linea@1103355002 : Integer;
      w_fichero@1103355003 : Integer;
      w_dia@1103355004 : Integer;
      w_mes@1103355005 : Integer;
      w_a¤o@1103355006 : Integer;
      rPar@1103355007 : Record 7010081;
      rVue@1103355008 : Record 7010077;

    PROCEDURE pasar_numero@2(num_fichero@1103355000 : Integer);
    BEGIN
      // pasar_numero
      //
      w_fichero := num_fichero;
    END;

    PROCEDURE pasar_nombre@5(par_nombre@1103355000 : Text[250]);
    BEGIN
      // pasar_nombre
      //
      w_nombre_fichero := par_nombre;
    END;

    PROCEDURE devuelve_fecha@3(par_texto@1103355000 : Text[8]) : Date;
    VAR
      ok@1103355001 : Boolean;
    BEGIN
      // devuelve_fecha
      //
      w_dia := 0;
      w_mes := 0;
      w_a¤o := 0;
      ok := EVALUATE(w_dia, COPYSTR(par_texto, 7, 2));
      ok := EVALUATE(w_mes, COPYSTR(par_texto, 5, 2));
      ok := EVALUATE(w_a¤o, COPYSTR(par_texto, 1, 4));
      IF (w_dia <= 0) OR (w_dia > 31) THEN
        EXIT(0D);
      IF (w_mes <= 0) OR (w_mes > 12) THEN
        EXIT(0D);
      IF w_a¤o <= 0 THEN
        EXIT(0D);
      EXIT(DMY2DATE(w_dia, w_mes, w_a¤o));
    END;

    PROCEDURE devuelve_tipo_vuelo@1(par_texto@1103355000 : Text[1]) : Integer;
    VAR
      aux_vue@1103355001 : Record 7010077;
    BEGIN
      // devuelve_tipo_vuelo
      //
      CASE par_texto OF
        Text001: EXIT(aux_vue."Tipo Vuelo"::Entrada);
        Text002: EXIT(aux_vue."Tipo Vuelo"::Salida);
        Text003: EXIT(aux_vue."Tipo Vuelo"::Intermedio);
      END;
    END;

    PROCEDURE devuelve_hora@4(par_texto@1103355000 : Text[4]) : Time;
    BEGIN
      // devuelve_hora
      //
    END;

    BEGIN
    END.
  }
}
