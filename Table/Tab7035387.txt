OBJECT Table 7035387 Ruta Servicios Regulares
{
  OBJECT-PROPERTIES
  {
    Date=16/10/09;
    Time=12:30:49;
    Version List=TRANSFER;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               CLEAR(rRuta);
               rRuta.SETRANGE("No. Servicio regular", "No. Servicio regular");
               rRuta.ASCENDING(FALSE);
               IF rRuta.FINDFIRST THEN
                 "No. Ruta" := rRuta."No. Ruta" + 1
               ELSE
                 "No. Ruta" := 1;

               TESTFIELD("Id Ruta");
             END;

    OnModify=BEGIN
               IF "Ruta inhabilitada" THEN
                 ERROR(Text0007);

               ModificaServRep;
             END;

    OnDelete=VAR
               lrLin@1100253000 : Record 7010394;
               lrPartes@1100253001 : Record 7010360;
             BEGIN

               // No dejamos borrar lineas si ya tiene parte

               lrPartes.SETCURRENTKEY("No Servicio Regular");
               lrPartes.SETRANGE("No Servicio Regular" , "No. Servicio regular");
               lrPartes.SETRANGE(Referencia            , "Id Ruta");
               IF lrPartes.FINDFIRST THEN
                 ERROR(Text0003, "Id Ruta");

               // Borra todas las lineas relacionadas con esta ruta

               CLEAR(lrLin);
               lrLin.SETRANGE("No Servicio", "No. Servicio regular");
               lrLin.SETRANGE("No Ruta"    , "No. Ruta");
               IF lrLin.FINDFIRST THEN
                 lrLin.DELETEALL(TRUE);
             END;

    CaptionML=ESP=Ruta Servicios Regulares;
    PasteIsValid=No;
  }
  FIELDS
  {
    { 1   ;   ;No. Servicio regular;Integer       ;CaptionML=ESP=No. Servicio regular;
                                                   NotBlank=Yes }
    { 2   ;   ;No. Ruta            ;Integer       ;CaptionML=ESP=No. Ruta;
                                                   MinValue=0;
                                                   BlankZero=Yes }
    { 10  ;   ;Id Ruta             ;Code20        ;OnValidate=BEGIN
                                                                IF BuscaId("Id Ruta") THEN
                                                                  ERROR(Text0001, "Id Ruta");
                                                              END;

                                                   CaptionML=ESP=Id Ruta;
                                                   NotBlank=Yes }
    { 20  ;   ;Num Vehiculos       ;Integer       ;InitValue=1;
                                                   CaptionML=ESP=Num Vehiculos;
                                                   MinValue=1;
                                                   MaxValue=20;
                                                   NotBlank=Yes }
    { 21  ;   ;Observaciones       ;Text120       ;CaptionML=ESP=Observaciones }
    { 23  ;   ;Origen/Destino      ;Code10        ;TableRelation="Punto de recogida".Codigo;
                                                   OnValidate=VAR
                                                                lrPtoRec@1100253000 : Record 7010315;
                                                              BEGIN
                                                                IF lrPtoRec.GET("Origen/Destino") THEN
                                                                  Presentacion := COPYSTR(lrPtoRec.Descripci¢n, 1, MAXSTRLEN(Presentacion));
                                                              END;

                                                   CaptionML=ESP=Origen/Destino }
    { 24  ;   ;Presentacion        ;Text30        ;CaptionML=ESP=Presentacion }
    { 40  ;   ;Codigo Servicio     ;Code10        ;TableRelation="Codigo servicio".Codigo;
                                                   OnValidate=BEGIN
                                                                IF (("Id Ruta" = '') OR ("Id Ruta" = xRec."Codigo Servicio")) AND (NOT BuscaId("Codigo Servicio")) THEN
                                                                  VALIDATE("Id Ruta", "Codigo Servicio");
                                                              END;

                                                   CaptionML=ESP=Codigo Servicio }
    { 50  ;   ;Precio Medio        ;Decimal       ;OnValidate=VAR
                                                                lrServRe@1100253000 : Record 7010379;
                                                              BEGIN
                                                                IF "Precio Medio" <> 0 THEN BEGIN
                                                                  lrServRe.GET("No. Servicio regular");
                                                                  IF lrServRe."Tipo Aplicacion" = lrServRe."Tipo Aplicacion"::"Servicio Contratado" THEN
                                                                    ERROR(Text0002);
                                                                END;
                                                              END;

                                                   CaptionML=ESP=Precio Medio;
                                                   BlankZero=Yes }
    { 100 ;   ;Cliente Calc        ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Servicios Regulares".Cliente WHERE (No.=FIELD(No. Servicio regular)));
                                                   CaptionML=ESP=Cliente Calc;
                                                   Description=Calculado de cabecera;
                                                   Editable=No }
    { 101 ;   ;TTOO Calc           ;Code10        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Servicios Regulares".TTOO WHERE (No.=FIELD(No. Servicio regular)));
                                                   CaptionML=ESP=TTOO Calc;
                                                   Description=Calculado de cabecera;
                                                   Editable=No }
    { 104 ;   ;Modificada          ;Boolean       ;CaptionML=ESP=Modificada }
    { 105 ;   ;Servicios Creados   ;Boolean       ;CaptionML=ESP=Servicios Creados }
    { 120 ;   ;Orden Hora Recogida ;Boolean       ;CaptionML=ESP=Orden Hora Recogida }
    { 150 ;   ;Peticion Servicio Cliente;Text100  ;OnValidate=VAR
                                                                lwExt@1100253000 : Code[10];
                                                              BEGIN
                                                                IF "Peticion Servicio Cliente" <> '' THEN BEGIN
                                                                  IF NOT EXISTS("Peticion Servicio Cliente") THEN
                                                                    ERROR(Text0005,"Peticion Servicio Cliente");

                                                                  lwExt := COPYSTR("Peticion Servicio Cliente",STRLEN("Peticion Servicio Cliente")-2);
                                                                  IF NOT  (lwExt IN [Text50000,Text50001]) THEN
                                                                    ERROR(Text0006,lwExt);
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              "Peticion Servicio Cliente":= cFunBas.GetDocumento("Peticion Servicio Cliente",Text0004,FIELDCAPTION("Peticion Servicio Cliente"))
                                                              ;
                                                            END;

                                                   CaptionML=ESP=Peticion Servicio Cliente;
                                                   Description=Documento de petici¢n de servicio }
    { 151 ;   ;Ruta inhabilitada   ;Boolean       ;OnValidate=BEGIN
                                                                "Fecha inhabilitada"   := CURRENTDATETIME;
                                                                "Usuario inhabilitada" := USERID;
                                                              END;

                                                   CaptionML=ESP=Ruta inhabilitada }
    { 152 ;   ;Fecha inhabilitada  ;DateTime      ;CaptionML=ESP=Fecha inhabilitada;
                                                   Editable=No }
    { 153 ;   ;Usuario inhabilitada;Code20        ;CaptionML=ESP=Usuario inhabilitada;
                                                   Editable=No }
    { 160 ;   ;Cod Conductor       ;Code10        ;TableRelation=Conductor.Conductor;
                                                   CaptionML=ESP=Cod Conductor }
    { 161 ;   ;Vehiculo            ;Code10        ;TableRelation=Vehiculo.Matricula;
                                                   CaptionML=ESP=Vehiculo }
    { 162 ;   ;Recursos asignados  ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Recursos x ruta" WHERE (No. Servicio regular=FIELD(No. Servicio regular),
                                                                                              No. Ruta=FIELD(No. Ruta)));
                                                   CaptionML=ESP=Recursos asignados;
                                                   Description=Calculado sobre recursos x ruta;
                                                   Editable=No }
    { 200 ;   ;Guia                ;Text30        ;CaptionML=ESP=Guia }
    { 201 ;   ;Vehiculo Escolar    ;Boolean       ;CaptionML=ESP=Vehiculo Escolar }
    { 202 ;   ;Vehiculo Especial   ;Boolean       ;CaptionML=ESP=Vehiculo Especial }
    { 203 ;   ;Vehiculo Minusvalidos;Boolean      ;CaptionML=ESP=Vehiculo Minusvalidos }
  }
  KEYS
  {
    {    ;No. Servicio regular,No. Ruta           ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text50000@1103355000 : TextConst 'ESP=DOC';
      Text50001@1103355001 : TextConst 'ESP=PDF';
      rRuta@1100253000 : Record 7035387;
      Text0001@1100253001 : TextConst 'ESP=Ya existe el identificador de ruta %1';
      Text0002@1100253002 : TextConst 'ESP=El Tipo de Aplicacion del Servicio NO puede ser Servicio Contratado';
      Text0003@1100253003 : TextConst 'ESP=No se puede borrar la ruta %1 ya que tiene partes asignados';
      Text0004@1100253006 : TextConst 'ESP="Word/PDF|*.DOC;*.PDF"';
      Text0005@1100253005 : TextConst 'ESP=No se encuentra el documento\ %1';
      Text0006@1100253004 : TextConst 'ESP=No estan permitidos archivos con extensi¢n %1';
      cFunBas@1100253007 : Codeunit 7010310;
      Text0007@1100253008 : TextConst 'ESP=No se puede modificar una ruta inhabilitada.';
      Text0008@1100253009 : TextConst 'ESP=Desea inhabilitar la ruta %1 del servicio regular %2.';

    PROCEDURE BuscaId@1100253000(pwId@1100253000 : Code[10]) : Boolean;
    BEGIN
      // BuscaId
      // Devuelve True si ya existe otra linea con el mismo codigo

      CLEAR(rRuta);
      rRuta.SETRANGE("No. Servicio regular", "No. Servicio regular");
      rRuta.SETFILTER("No. Ruta", '<>%1',"No. Ruta");
      rRuta.SETRANGE("Id Ruta", pwId);
      EXIT(rRuta.FINDFIRST);
    END;

    PROCEDURE ModificaServRep@1100244001();
    VAR
      lrSerRep@1100244000 : Record 7010379;
      lrRuta@1100253000 : Record 7035387;
    BEGIN
      // ModificaServRep

      lrSerRep.RESET;
      IF lrSerRep.GET("No. Servicio regular") THEN BEGIN
        IF lrSerRep."Servicios Creados" AND "Servicios Creados" THEN BEGIN
          lrSerRep.Modificado:= TRUE;
          lrSerRep.MODIFY;
          Modificada := TRUE;
        END;
      END;
    END;

    PROCEDURE TotalPax@1100253001(pwTipo@1100253001 : 'Todos,Adultos,Ni¤os') : Integer;
    VAR
      lrRecServReg@1100253000 : Record 7010394;
      lwTotal@1100253002 : Integer;
    BEGIN
      // TotalPax
      // Devuelve el total de Pax para esa ruta

      CLEAR(lwTotal);
      CLEAR(lrRecServReg);
      lrRecServReg.SETRANGE("No Servicio", "No. Servicio regular");
      lrRecServReg.SETRANGE("No Ruta"    , "No. Ruta");
      IF lrRecServReg.FINDSET THEN BEGIN
        REPEAT
          IF pwTipo <> pwTipo::Ni¤os THEN
            lwTotal += lrRecServReg.Adultos;
          IF pwTipo <> pwTipo::Adultos THEN
            lwTotal += lrRecServReg.Ni¤os;
        UNTIL lrRecServReg.NEXT=0;
      END;

      EXIT(lwTotal);
    END;

    PROCEDURE InhabilitarRuta@1100253002(VAR prRuta@1100253000 : Record 7035387);
    VAR
      lrSerReg@1100253001 : Record 7010379;
    BEGIN
      // InhabilitarRuta
      //

      IF NOT CONFIRM(Text0008, FALSE, prRuta."Id Ruta", prRuta."No. Servicio regular") THEN
        EXIT;

      // 1. Marcarmos la ruta como Inhabilitada

      prRuta.VALIDATE("Ruta inhabilitada", TRUE);
      prRuta.MODIFY;

      // 2. Deshacemos los partes

      lrSerReg.GET(prRuta."No. Servicio regular");
      lrSerReg.Retroceder(TRUE, 0D, 0D, prRuta."No. Ruta");
    END;

    BEGIN
    END.
  }
}
