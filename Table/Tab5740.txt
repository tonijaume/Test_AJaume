OBJECT Table 5740 Transfer Header
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=NAVW16.00.01,NAVES6.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               GetInventorySetup;
               IF "No." = '' THEN BEGIN
                 TestNoSeries;
                 NoSeriesMgt.InitSeries(GetNoSeriesCode,xRec."No. Series","Posting Date","No.","No. Series");
               END;
               InitRecord;
               VALIDATE("Shipment Date",WORKDATE);
             END;

    OnDelete=VAR
               TransLine@1000 : Record 5741;
               InvtCommentLine@1001 : Record 5748;
             BEGIN
               TESTFIELD(Status,Status::Open);

               DimMgt.DeleteDocDim(DATABASE::"Transfer Header",DocDim."Document Type"::" ","No.",0);

               WhseRequest.SETRANGE("Source Type",DATABASE::"Transfer Line");
               WhseRequest.SETRANGE("Source No.","No.");
               WhseRequest.DELETEALL(TRUE);

               HandleItemTrackingDeletion;
               TransLine.SETRANGE("Document No.","No.");
               TransLine.DELETEALL(TRUE);

               InvtCommentLine.SETRANGE("Document Type",InvtCommentLine."Document Type"::"Transfer Order");
               InvtCommentLine.SETRANGE("No.","No.");
               InvtCommentLine.DELETEALL;
             END;

    OnRename=BEGIN
               ERROR(Text000,TABLECAPTION);
             END;

    CaptionML=[ENU=Transfer Header;
               ESP=Cab. transferencia];
    LookupFormID=Form5742;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;OnValidate=BEGIN
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  GetInventorySetup;
                                                                  NoSeriesMgt.TestManual(GetNoSeriesCode);
                                                                  "No. Series" := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              ESP=N§] }
    { 2   ;   ;Transfer-from Code  ;Code10        ;TableRelation=Location WHERE (Use As In-Transit=CONST(No));
                                                   OnValidate=VAR
                                                                Location@1000 : Record 14;
                                                                Confirmed@1001 : Boolean;
                                                              BEGIN
                                                                TestStatusOpen;
                                                                IF ("Transfer-from Code" = "Transfer-to Code") AND
                                                                   ("Transfer-from Code" <> '')
                                                                THEN
                                                                  ERROR(
                                                                    Text001,
                                                                    FIELDCAPTION("Transfer-from Code"),FIELDCAPTION("Transfer-to Code"),
                                                                    TABLECAPTION,"No.");
                                                                IF (xRec."Transfer-from Code" <> "Transfer-from Code") THEN BEGIN
                                                                  IF HideValidationDialog OR
                                                                    (xRec."Transfer-from Code" = '')
                                                                  THEN
                                                                    Confirmed := TRUE
                                                                  ELSE
                                                                    Confirmed := CONFIRM(Text002,FALSE,FIELDCAPTION("Transfer-from Code"));
                                                                  IF Confirmed THEN BEGIN
                                                                    IF Location.GET("Transfer-from Code") THEN BEGIN
                                                                      "Transfer-from Name" := Location.Name;
                                                                      "Transfer-from Name 2" := Location."Name 2";
                                                                      "Transfer-from Address" := Location.Address;
                                                                      "Transfer-from Address 2" := Location."Address 2";
                                                                      "Transfer-from Post Code" := Location."Post Code";
                                                                      "Transfer-from City" := Location.City;
                                                                      "Transfer-from County" := Location.County;
                                                                      "Trsf.-from Country/Region Code" := Location."Country/Region Code";
                                                                      "Transfer-from Contact" := Location.Contact;
                                                                      "Outbound Whse. Handling Time" := Location."Outbound Whse. Handling Time";
                                                                      TransferRoute.GetTransferRoute(
                                                                        "Transfer-from Code","Transfer-to Code","In-Transit Code",
                                                                        "Shipping Agent Code","Shipping Agent Service Code");
                                                                      TransferRoute.GetShippingTime(
                                                                        "Transfer-from Code","Transfer-to Code",
                                                                        "Shipping Agent Code","Shipping Agent Service Code",
                                                                        "Shipping Time");
                                                                      TransferRoute.CalcReceiptDate(
                                                                        "Shipment Date",
                                                                        "Receipt Date",
                                                                        "Shipping Time",
                                                                        "Outbound Whse. Handling Time",
                                                                        "Inbound Whse. Handling Time",
                                                                        "Transfer-from Code",
                                                                        "Transfer-to Code",
                                                                        "Shipping Agent Code",
                                                                        "Shipping Agent Service Code");
                                                                      TransLine.LOCKTABLE;
                                                                      TransLine.SETRANGE("Document No.","No.");
                                                                      IF TransLine.FINDSET THEN;
                                                                      MODIFY;
                                                                    END;
                                                                    UpdateTransLines(FIELDNO("Transfer-from Code"));
                                                                  END ELSE BEGIN
                                                                    "Transfer-from Code" := xRec."Transfer-from Code";
                                                                    EXIT;
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Transfer-from Code;
                                                              ESP=Transfer. desde-c¢d.] }
    { 3   ;   ;Transfer-from Name  ;Text50        ;CaptionML=[ENU=Transfer-from Name;
                                                              ESP=Transfer. desde-nombre] }
    { 4   ;   ;Transfer-from Name 2;Text50        ;CaptionML=[ENU=Transfer-from Name 2;
                                                              ESP=Transfer. desde-nombre 2] }
    { 5   ;   ;Transfer-from Address;Text50       ;CaptionML=[ENU=Transfer-from Address;
                                                              ESP=Transfer. desde-direcci¢n] }
    { 6   ;   ;Transfer-from Address 2;Text50     ;CaptionML=[ENU=Transfer-from Address 2;
                                                              ESP=Transfer. desde-direcci¢n 2] }
    { 7   ;   ;Transfer-from Post Code;Code20     ;TableRelation="Post Code";
                                                   OnValidate=BEGIN
                                                                PostCode.ValidatePostCode("Transfer-from City","Transfer-from Post Code","Transfer-from County");
                                                              END;

                                                   OnLookup=BEGIN
                                                              PostCode.LookUpPostCode("Transfer-from City","Transfer-from Post Code","Transfer-from County",TRUE);
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Transfer-from Post Code;
                                                              ESP=Transfer. desde-C.P.] }
    { 8   ;   ;Transfer-from City  ;Text30        ;OnValidate=BEGIN
                                                                PostCode.ValidateCity("Transfer-from City","Transfer-from Post Code","Transfer-from County");
                                                              END;

                                                   OnLookup=BEGIN
                                                              PostCode.LookUpCity("Transfer-from City","Transfer-from Post Code","Transfer-from County",TRUE);
                                                            END;

                                                   CaptionML=[ENU=Transfer-from City;
                                                              ESP=Transfer. desde-poblaci¢n] }
    { 9   ;   ;Transfer-from County;Text30        ;CaptionML=[ENU=Transfer-from County;
                                                              ESP=Transfer. desde-provincia] }
    { 10  ;   ;Trsf.-from Country/Region Code;Code10;
                                                   TableRelation=Country/Region;
                                                   CaptionML=[ENU=Trsf.-from Country/Region Code;
                                                              ESP=Transfer. desde-c¢d.pa¡s/regi¢n] }
    { 11  ;   ;Transfer-to Code    ;Code10        ;TableRelation=Location WHERE (Use As In-Transit=CONST(No));
                                                   OnValidate=VAR
                                                                Location@1000 : Record 14;
                                                                Confirmed@1001 : Boolean;
                                                              BEGIN
                                                                TestStatusOpen;
                                                                IF ("Transfer-from Code" = "Transfer-to Code") AND
                                                                   ("Transfer-to Code" <> '')
                                                                THEN
                                                                  ERROR(
                                                                    Text001,
                                                                    FIELDCAPTION("Transfer-from Code"),FIELDCAPTION("Transfer-to Code"),
                                                                    TABLECAPTION,"No.");
                                                                IF (xRec."Transfer-to Code" <> "Transfer-to Code") THEN BEGIN
                                                                  IF HideValidationDialog OR
                                                                    (xRec."Transfer-to Code" = '')
                                                                  THEN
                                                                    Confirmed := TRUE
                                                                  ELSE
                                                                    Confirmed := CONFIRM(Text002,FALSE,FIELDCAPTION("Transfer-to Code"));
                                                                  IF Confirmed THEN BEGIN
                                                                    IF Location.GET("Transfer-to Code") THEN BEGIN
                                                                      "Transfer-to Name" := Location.Name;
                                                                      "Transfer-to Name 2" := Location."Name 2";
                                                                      "Transfer-to Address" := Location.Address;
                                                                      "Transfer-to Address 2" := Location."Address 2";
                                                                      "Transfer-to Post Code" := Location."Post Code";
                                                                      "Transfer-to City" := Location.City;
                                                                      "Transfer-to County" := Location.County;
                                                                      "Trsf.-to Country/Region Code" := Location."Country/Region Code";
                                                                      "Transfer-to Contact" := Location.Contact;
                                                                      "Inbound Whse. Handling Time" := Location."Inbound Whse. Handling Time";
                                                                      TransferRoute.GetTransferRoute(
                                                                        "Transfer-from Code","Transfer-to Code","In-Transit Code",
                                                                        "Shipping Agent Code","Shipping Agent Service Code");
                                                                      TransferRoute.GetShippingTime(
                                                                        "Transfer-from Code","Transfer-to Code",
                                                                        "Shipping Agent Code","Shipping Agent Service Code",
                                                                        "Shipping Time");
                                                                      TransferRoute.CalcReceiptDate(
                                                                        "Shipment Date",
                                                                        "Receipt Date",
                                                                        "Shipping Time",
                                                                        "Outbound Whse. Handling Time",
                                                                        "Inbound Whse. Handling Time",
                                                                        "Transfer-from Code",
                                                                        "Transfer-to Code",
                                                                        "Shipping Agent Code",
                                                                        "Shipping Agent Service Code");
                                                                      TransLine.LOCKTABLE;
                                                                      TransLine.SETRANGE("Document No.","No.");
                                                                      IF TransLine.FINDSET THEN;
                                                                      MODIFY;
                                                                    END;
                                                                    UpdateTransLines(FIELDNO("Transfer-to Code"));
                                                                  END ELSE BEGIN
                                                                    "Transfer-to Code" := xRec."Transfer-to Code";
                                                                    EXIT;
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Transfer-to Code;
                                                              ESP=Transfer. a-c¢d.] }
    { 12  ;   ;Transfer-to Name    ;Text50        ;CaptionML=[ENU=Transfer-to Name;
                                                              ESP=Transfer. a-nombre] }
    { 13  ;   ;Transfer-to Name 2  ;Text50        ;CaptionML=[ENU=Transfer-to Name 2;
                                                              ESP=Transfer. a-nombre 2] }
    { 14  ;   ;Transfer-to Address ;Text50        ;CaptionML=[ENU=Transfer-to Address;
                                                              ESP=Transfer. a-direcci¢n] }
    { 15  ;   ;Transfer-to Address 2;Text50       ;CaptionML=[ENU=Transfer-to Address 2;
                                                              ESP=Transfer. a-direcci¢n 2] }
    { 16  ;   ;Transfer-to Post Code;Code20       ;TableRelation="Post Code";
                                                   OnValidate=BEGIN
                                                                PostCode.ValidatePostCode("Transfer-to City","Transfer-to Post Code","Transfer-to County");
                                                              END;

                                                   OnLookup=BEGIN
                                                              PostCode.LookUpPostCode("Transfer-to City","Transfer-to Post Code","Transfer-to County",TRUE);
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Transfer-to Post Code;
                                                              ESP=Transfer. a-c.p.] }
    { 17  ;   ;Transfer-to City    ;Text30        ;OnValidate=BEGIN
                                                                PostCode.ValidateCity("Transfer-to City","Transfer-to Post Code","Transfer-to County");
                                                              END;

                                                   OnLookup=BEGIN
                                                              PostCode.LookUpCity("Transfer-to City","Transfer-to Post Code","Transfer-to County",TRUE);
                                                            END;

                                                   CaptionML=[ENU=Transfer-to City;
                                                              ESP=Transfer. a-poblac.] }
    { 18  ;   ;Transfer-to County  ;Text30        ;CaptionML=[ENU=Transfer-to County;
                                                              ESP=Transfer. a-provincia] }
    { 19  ;   ;Trsf.-to Country/Region Code;Code10;TableRelation=Country/Region;
                                                   CaptionML=[ENU=Trsf.-to Country/Region Code;
                                                              ESP=Transfer. a-c¢d.pa¡s/regi¢n] }
    { 20  ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              ESP=Fecha registro] }
    { 21  ;   ;Shipment Date       ;Date          ;OnValidate=BEGIN
                                                                TestStatusOpen;
                                                                TransferRoute.CalcReceiptDate(
                                                                  "Shipment Date",
                                                                  "Receipt Date",
                                                                  "Shipping Time",
                                                                  "Outbound Whse. Handling Time",
                                                                  "Inbound Whse. Handling Time",
                                                                  "Transfer-from Code",
                                                                  "Transfer-to Code",
                                                                  "Shipping Agent Code",
                                                                  "Shipping Agent Service Code");
                                                                UpdateTransLines(FIELDNO("Shipment Date"));
                                                              END;

                                                   CaptionML=[ENU=Shipment Date;
                                                              ESP=Fecha env¡o] }
    { 22  ;   ;Receipt Date        ;Date          ;OnValidate=BEGIN
                                                                TestStatusOpen;
                                                                TransferRoute.CalcShipmentDate(
                                                                  "Shipment Date",
                                                                  "Receipt Date",
                                                                  "Shipping Time",
                                                                  "Outbound Whse. Handling Time",
                                                                  "Inbound Whse. Handling Time",
                                                                  "Transfer-from Code",
                                                                  "Transfer-to Code",
                                                                  "Shipping Agent Code",
                                                                  "Shipping Agent Service Code");
                                                                UpdateTransLines(FIELDNO("Receipt Date"));
                                                              END;

                                                   CaptionML=[ENU=Receipt Date;
                                                              ESP=Fecha recepci¢n] }
    { 23  ;   ;Status              ;Option        ;OnValidate=BEGIN
                                                                UpdateTransLines(FIELDNO(Status));
                                                              END;

                                                   CaptionML=[ENU=Status;
                                                              ESP=Estado];
                                                   OptionCaptionML=[ENU=Open,Released;
                                                                    ESP=Abierto,Lanzado];
                                                   OptionString=Open,Released;
                                                   Editable=No }
    { 24  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Inventory Comment Line" WHERE (Document Type=CONST(Transfer Order),
                                                                                                     No.=FIELD(No.)));
                                                   CaptionML=[ENU=Comment;
                                                              ESP=Comentario];
                                                   Editable=No }
    { 25  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Shortcut Dimension 1 Code");
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 1 Code;
                                                              ESP=C¢d. dim. acceso dir. 1];
                                                   CaptionClass='1,2,1' }
    { 26  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2,"Shortcut Dimension 2 Code");
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 2 Code;
                                                              ESP=C¢d. dim. acceso dir. 2];
                                                   CaptionClass='1,2,2' }
    { 27  ;   ;In-Transit Code     ;Code10        ;TableRelation=Location WHERE (Use As In-Transit=CONST(Yes));
                                                   OnValidate=BEGIN
                                                                TestStatusOpen;
                                                                UpdateTransLines(FIELDNO("In-Transit Code"));
                                                              END;

                                                   CaptionML=[ENU=In-Transit Code;
                                                              ESP=C¢d. en tr nsito] }
    { 28  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              ESP=Nos. serie] }
    { 29  ;   ;Last Shipment No.   ;Code20        ;TableRelation="Transfer Shipment Header";
                                                   CaptionML=[ENU=Last Shipment No.;
                                                              ESP=N§ £ltimo env¡o];
                                                   Editable=No }
    { 30  ;   ;Last Receipt No.    ;Code20        ;TableRelation="Transfer Receipt Header";
                                                   CaptionML=[ENU=Last Receipt No.;
                                                              ESP=N§ £ltima recep.];
                                                   Editable=No }
    { 31  ;   ;Transfer-from Contact;Text50       ;CaptionML=[ENU=Transfer-from Contact;
                                                              ESP=Transfer. desde-contacto] }
    { 32  ;   ;Transfer-to Contact ;Text50        ;CaptionML=[ENU=Transfer-to Contact;
                                                              ESP=Transfer. a-contacto] }
    { 33  ;   ;External Document No.;Code20       ;CaptionML=[ENU=External Document No.;
                                                              ESP=N§ documento externo] }
    { 34  ;   ;Shipping Agent Code ;Code10        ;TableRelation="Shipping Agent";
                                                   OnValidate=BEGIN
                                                                TestStatusOpen;
                                                                IF "Shipping Agent Code" <> xRec."Shipping Agent Code" THEN
                                                                  VALIDATE("Shipping Agent Service Code",'');
                                                                UpdateTransLines(FIELDNO("Shipping Agent Code"));
                                                              END;

                                                   CaptionML=[ENU=Shipping Agent Code;
                                                              ESP=C¢d. transportista] }
    { 35  ;   ;Shipping Agent Service Code;Code10 ;TableRelation="Shipping Agent Services".Code WHERE (Shipping Agent Code=FIELD(Shipping Agent Code));
                                                   OnValidate=BEGIN
                                                                TestStatusOpen;
                                                                TransferRoute.GetShippingTime(
                                                                  "Transfer-from Code","Transfer-to Code",
                                                                  "Shipping Agent Code","Shipping Agent Service Code",
                                                                  "Shipping Time");
                                                                TransferRoute.CalcReceiptDate(
                                                                  "Shipment Date",
                                                                  "Receipt Date",
                                                                  "Shipping Time",
                                                                  "Outbound Whse. Handling Time",
                                                                  "Inbound Whse. Handling Time",
                                                                  "Transfer-from Code",
                                                                  "Transfer-to Code",
                                                                  "Shipping Agent Code",
                                                                  "Shipping Agent Service Code");

                                                                UpdateTransLines(FIELDNO("Shipping Agent Service Code"));
                                                              END;

                                                   CaptionML=[ENU=Shipping Agent Service Code;
                                                              ESP=C¢d. servicio transportista] }
    { 36  ;   ;Shipping Time       ;DateFormula   ;OnValidate=BEGIN
                                                                TestStatusOpen;
                                                                TransferRoute.CalcReceiptDate(
                                                                  "Shipment Date",
                                                                  "Receipt Date",
                                                                  "Shipping Time",
                                                                  "Outbound Whse. Handling Time",
                                                                  "Inbound Whse. Handling Time",
                                                                  "Transfer-from Code",
                                                                  "Transfer-to Code",
                                                                  "Shipping Agent Code",
                                                                  "Shipping Agent Service Code");

                                                                UpdateTransLines(FIELDNO("Shipping Time"));
                                                              END;

                                                   CaptionML=[ENU=Shipping Time;
                                                              ESP=Tiempo env¡o] }
    { 37  ;   ;Shipment Method Code;Code10        ;TableRelation="Shipment Method";
                                                   CaptionML=[ENU=Shipment Method Code;
                                                              ESP=C¢d. condiciones env¡o] }
    { 47  ;   ;Transaction Type    ;Code10        ;TableRelation="Transaction Type";
                                                   CaptionML=[ENU=Transaction Type;
                                                              ESP=Naturaleza transacci¢n] }
    { 48  ;   ;Transport Method    ;Code10        ;TableRelation="Transport Method";
                                                   CaptionML=[ENU=Transport Method;
                                                              ESP=Modo transporte] }
    { 59  ;   ;Entry/Exit Point    ;Code10        ;TableRelation="Entry/Exit Point";
                                                   CaptionML=[ENU=Entry/Exit Point;
                                                              ESP=Puerto/Aeropuerto] }
    { 63  ;   ;Area                ;Code10        ;TableRelation=Area;
                                                   CaptionML=[ENU=Area;
                                                              ESP=C¢d. provincia] }
    { 64  ;   ;Transaction Specification;Code10   ;TableRelation="Transaction Specification";
                                                   CaptionML=[ENU=Transaction Specification;
                                                              ESP=Especificaci¢n transacci¢n] }
    { 5750;   ;Shipping Advice     ;Option        ;OnValidate=BEGIN
                                                                TestStatusOpen;
                                                                WhseSourceHeader.TransHeaderVerifyChange(Rec,xRec);
                                                              END;

                                                   CaptionML=[ENU=Shipping Advice;
                                                              ESP=Aviso env¡o];
                                                   OptionCaptionML=[ENU=Partial,Complete;
                                                                    ESP=Parcial,Completo];
                                                   OptionString=Partial,Complete }
    { 5751;   ;Posting from Whse. Ref.;Integer    ;CaptionML=[ENU=Posting from Whse. Ref.;
                                                              ESP=Regis. desde almac. ref.] }
    { 5752;   ;Completely Shipped  ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Min("Transfer Line"."Completely Shipped" WHERE (Document No.=FIELD(No.),
                                                                                                               Shipment Date=FIELD(Date Filter),
                                                                                                               Transfer-from Code=FIELD(Location Filter)));
                                                   CaptionML=[ENU=Completely Shipped;
                                                              ESP=Enviado completamente];
                                                   Editable=No }
    { 5753;   ;Completely Received ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Min("Transfer Line"."Completely Received" WHERE (Document No.=FIELD(No.),
                                                                                                                Receipt Date=FIELD(Date Filter),
                                                                                                                Transfer-to Code=FIELD(Location Filter)));
                                                   CaptionML=[ENU=Completely Received;
                                                              ESP=Recibido completamente];
                                                   Editable=No }
    { 5754;   ;Location Filter     ;Code10        ;FieldClass=FlowFilter;
                                                   TableRelation=Location;
                                                   CaptionML=[ENU=Location Filter;
                                                              ESP=Filtro almacn] }
    { 5793;   ;Outbound Whse. Handling Time;DateFormula;
                                                   OnValidate=BEGIN
                                                                TestStatusOpen;
                                                                TransferRoute.CalcReceiptDate(
                                                                  "Shipment Date",
                                                                  "Receipt Date",
                                                                  "Shipping Time",
                                                                  "Outbound Whse. Handling Time",
                                                                  "Inbound Whse. Handling Time",
                                                                  "Transfer-from Code",
                                                                  "Transfer-to Code",
                                                                  "Shipping Agent Code",
                                                                  "Shipping Agent Service Code");

                                                                UpdateTransLines(FIELDNO("Outbound Whse. Handling Time"));
                                                              END;

                                                   CaptionML=[ENU=Outbound Whse. Handling Time;
                                                              ESP=Tiempo manip. alm. salida] }
    { 5794;   ;Inbound Whse. Handling Time;DateFormula;
                                                   OnValidate=BEGIN
                                                                TestStatusOpen;
                                                                TransferRoute.CalcReceiptDate(
                                                                  "Shipment Date",
                                                                  "Receipt Date",
                                                                  "Shipping Time",
                                                                  "Outbound Whse. Handling Time",
                                                                  "Inbound Whse. Handling Time",
                                                                  "Transfer-from Code",
                                                                  "Transfer-to Code",
                                                                  "Shipping Agent Code",
                                                                  "Shipping Agent Service Code");

                                                                UpdateTransLines(FIELDNO("Inbound Whse. Handling Time"));
                                                              END;

                                                   CaptionML=[ENU=Inbound Whse. Handling Time;
                                                              ESP=Tiempo manip. alm. entrada] }
    { 5796;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Date Filter;
                                                              ESP=Filtro fecha] }
    { 9000;   ;Assigned User ID    ;Code20        ;TableRelation="User Setup";
                                                   CaptionML=[ENU=Assigned User ID;
                                                              ESP=Id. usuario asignado] }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;No.,Transfer-from Code,Transfer-to Code,Shipment Date,Status }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=You cannot rename a %1.;ESP=No se puede cambiar el nombre a %1.';
      Text001@1001 : TextConst 'ENU=%1 and %2 cannot be the same in %3 %4.;ESP=%1 y %2 no puede ser lo mismo en %3 %4.';
      Text002@1002 : TextConst 'ENU=Do you want to change %1?;ESP=¨Confirma que desea cambiar %1?';
      Text003@1003 : TextConst 'ENU=The transfer order %1 has been deleted.;ESP=El ped.transfer. %1 ha sido borrado.';
      TransferRoute@1004 : Record 5742;
      TransHeader@1005 : Record 5740;
      TransLine@1016 : Record 5741;
      PostCode@1006 : Record 225;
      InvtSetup@1007 : Record 313;
      WhseRequest@1008 : Record 5765;
      DocDim@1014 : Record 357;
      DimMgt@1009 : Codeunit 408;
      NoSeriesMgt@1010 : Codeunit 396;
      WhseSourceHeader@1011 : Codeunit 5781;
      HideValidationDialog@1013 : Boolean;
      HasInventorySetup@1012 : Boolean;
      CalledFromWhse@1015 : Boolean;
      Text004@1018 : TextConst 'ENU=The transfer order %1 has item tracking. Do you want to delete it anyway?;ESP=El pedido de transferencia %1 tiene seguimiento de productos. ¨Desea eliminarlo de todas maneras?';
      Text005@1017 : TextConst 'ENU=Reservations exist for this order. These reservations will be canceled if a date conflict is caused by this change.\\;ESP=Existen reservas para este pedido y se cancelar n si este cambio provoca un conflicto de fechas.\\';
      Text006@1019 : TextConst 'ENU=Do you want to continue?;ESP=¨Confirma que desea continuar?';

    PROCEDURE InitRecord@10();
    BEGIN
      IF ("Posting Date" = 0D) THEN
        VALIDATE("Posting Date",WORKDATE);
    END;

    PROCEDURE AssistEdit@1(OldTransHeader@1000 : Record 5740) : Boolean;
    BEGIN
      WITH TransHeader DO BEGIN
        TransHeader := Rec;
        GetInventorySetup;
        TestNoSeries;
        IF NoSeriesMgt.SelectSeries(GetNoSeriesCode,OldTransHeader."No. Series","No. Series") THEN BEGIN
          NoSeriesMgt.SetSeries("No.");
          Rec := TransHeader;
          EXIT(TRUE);
        END;
      END;
    END;

    LOCAL PROCEDURE TestNoSeries@6() : Boolean;
    BEGIN
      InvtSetup.TESTFIELD("Transfer Order Nos.");
    END;

    LOCAL PROCEDURE GetNoSeriesCode@9() : Code[10];
    BEGIN
      EXIT(InvtSetup."Transfer Order Nos.");
    END;

    PROCEDURE SetHideValidationDialog@14(NewHideValidationDialog@1000 : Boolean);
    BEGIN
      HideValidationDialog := NewHideValidationDialog;
    END;

    PROCEDURE ValidateShortcutDimCode@19(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.ValidateDimValueCode(FieldNumber,ShortcutDimCode);
      IF "No." <> '' THEN BEGIN
        DimMgt.SaveDocDim(
          DATABASE::"Transfer Header",DocDim."Document Type"::" ","No.",0,FieldNumber,ShortcutDimCode);
        MODIFY;
      END ELSE
        DimMgt.SaveTempDim(FieldNumber,ShortcutDimCode);
    END;

    LOCAL PROCEDURE GetInventorySetup@2();
    BEGIN
      IF NOT HasInventorySetup THEN BEGIN
        InvtSetup.GET;
        HasInventorySetup := TRUE;
      END;
    END;

    LOCAL PROCEDURE UpdateTransLines@15(FieldRef@1000 : Integer);
    VAR
      TransLine@1001 : Record 5741;
    BEGIN
      IF GUIALLOWED THEN
        CASE FieldRef OF
          FIELDNO("Shipping Agent Code"),
          FIELDNO("Shipping Agent Service Code"),
          FIELDNO("Shipment Date"),
          FIELDNO("Receipt Date"),
          FIELDNO("Shipping Time"),
          FIELDNO("Outbound Whse. Handling Time"),
          FIELDNO("Inbound Whse. Handling Time"):
            ConfirmResvDateConflict;
        END;

      TransLine.SETRANGE("Document No.","No.");
      IF TransLine.FINDSET THEN BEGIN
        DocDim.LOCKTABLE;
        TransLine.LOCKTABLE;
        REPEAT
          CASE FieldRef OF
            FIELDNO("In-Transit Code"):
              TransLine.VALIDATE("In-Transit Code","In-Transit Code");
            FIELDNO("Transfer-from Code"):
              BEGIN
                TransLine.VALIDATE("Transfer-from Code","Transfer-from Code");
                TransLine.VALIDATE("Shipping Agent Code","Shipping Agent Code");
                TransLine.VALIDATE("Shipping Agent Service Code","Shipping Agent Service Code");
                TransLine.VALIDATE("Shipment Date","Shipment Date");
                TransLine.VALIDATE("Receipt Date","Receipt Date");
                TransLine.VALIDATE("Shipping Time","Shipping Time");
              END;
            FIELDNO("Transfer-to Code"):
              BEGIN
                TransLine.VALIDATE("Transfer-to Code","Transfer-to Code");
                TransLine.VALIDATE("Shipping Agent Code","Shipping Agent Code");
                TransLine.VALIDATE("Shipping Agent Service Code","Shipping Agent Service Code");
                TransLine.VALIDATE("Shipment Date","Shipment Date");
                TransLine.VALIDATE("Receipt Date","Receipt Date");
                TransLine.VALIDATE("Shipping Time","Shipping Time");
              END;
            FIELDNO("Shipping Agent Code"):
              BEGIN
                TransLine.VALIDATE("Shipping Agent Code","Shipping Agent Code");
                TransLine.VALIDATE("Shipping Agent Service Code","Shipping Agent Service Code");
                TransLine.VALIDATE("Shipment Date","Shipment Date");
                TransLine.VALIDATE("Receipt Date","Receipt Date");
                TransLine.VALIDATE("Shipping Time","Shipping Time");
              END;
            FIELDNO("Shipping Agent Service Code"):
              BEGIN
                TransLine.VALIDATE("Shipping Agent Service Code","Shipping Agent Service Code");
                TransLine.VALIDATE("Shipment Date","Shipment Date");
                TransLine.VALIDATE("Receipt Date","Receipt Date");
                TransLine.VALIDATE("Shipping Time","Shipping Time");
              END;
            FIELDNO("Shipment Date"):
              BEGIN
                TransLine.VALIDATE("Shipment Date","Shipment Date");
                TransLine.VALIDATE("Receipt Date","Receipt Date");
                TransLine.VALIDATE("Shipping Time","Shipping Time");
              END;
            FIELDNO("Receipt Date"),FIELDNO("Shipping Time"):
              BEGIN
                TransLine.VALIDATE("Shipping Time","Shipping Time");
                TransLine.VALIDATE("Receipt Date","Receipt Date");
              END;
            FIELDNO("Outbound Whse. Handling Time"):
              BEGIN
                TransLine.VALIDATE("Outbound Whse. Handling Time","Outbound Whse. Handling Time");
              END;
            FIELDNO("Inbound Whse. Handling Time"):
              BEGIN
                TransLine.VALIDATE("Inbound Whse. Handling Time","Inbound Whse. Handling Time");
              END;
            FIELDNO(Status): TransLine.VALIDATE(Status,Status);
          END;
          TransLine.MODIFY(TRUE);
        UNTIL TransLine.NEXT = 0;
      END;
    END;

    PROCEDURE ConfirmResvDateConflict@41();
    VAR
      ResvEngMgt@1000 : Codeunit 99000831;
    BEGIN
      IF ResvEngMgt.ResvExistsForTransHeader(Rec) THEN
        IF NOT CONFIRM(Text005 + Text006,FALSE) THEN
          ERROR('');
    END;

    PROCEDURE HandleItemTrackingDeletion@36();
    VAR
      ReservEntry@1000 : Record 337;
      ReservEntry2@1002 : Record 337;
      Confirmed@1001 : Boolean;
    BEGIN
      WITH ReservEntry DO BEGIN
        RESET;
        SETCURRENTKEY(
          "Source ID","Source Ref. No.","Source Type","Source Subtype",
          "Source Batch Name","Source Prod. Order Line","Reservation Status");
        SETRANGE("Source Type", DATABASE::"Transfer Line");
        SETRANGE("Source ID", "No.");
        SETRANGE("Source Batch Name", '');
        SETFILTER("Item Tracking", '> %1', "Item Tracking"::None);
        IF ISEMPTY THEN
          EXIT;

        IF HideValidationDialog OR NOT GUIALLOWED THEN
          Confirmed := TRUE
        ELSE
          Confirmed := CONFIRM(Text004, FALSE, "No.");

        IF NOT Confirmed THEN
          ERROR('');

        IF FINDSET THEN
          REPEAT
            ReservEntry2 := ReservEntry;
            ReservEntry2.ClearItemTrackingFields;
            ReservEntry2.MODIFY;
          UNTIL NEXT = 0;
      END;
    END;

    PROCEDURE DeleteOneTransferOrder@4(VAR TransHeader2@1000 : Record 5740;VAR TransLine2@1001 : Record 5741) : Boolean;
    VAR
      ItemChargeAssgntPurch@1002 : Record 5805;
      WhseRequest@1003 : Record 5765;
      InvtCommentLine@1004 : Record 5748;
      No@1007 : Code[20];
      DoNotDelete@1008 : Boolean;
    BEGIN
      No := TransHeader2."No.";
      IF TransLine2.FIND('-') THEN BEGIN
        REPEAT
          IF (TransLine2.Quantity <> TransLine2."Quantity Shipped") OR
             (TransLine2.Quantity <> TransLine2."Quantity Received") OR
             (TransLine2."Quantity (Base)" <> TransLine2."Qty. Shipped (Base)") OR
             (TransLine2."Quantity (Base)" <> TransLine2."Qty. Received (Base)") OR
             (TransLine2."Quantity Shipped" <> TransLine2."Quantity Received") OR
             (TransLine2."Qty. Shipped (Base)" <> TransLine2."Qty. Received (Base)")
          THEN
            DoNotDelete := TRUE;
        UNTIL TransLine2.NEXT = 0;
      END;

      IF NOT DoNotDelete THEN BEGIN
        WhseRequest.SETRANGE("Source Type",DATABASE::"Transfer Line");
        WhseRequest.SETRANGE("Source No.",No);
        WhseRequest.DELETEALL(TRUE);

        InvtCommentLine.SETRANGE("Document Type",InvtCommentLine."Document Type"::"Transfer Order");
        InvtCommentLine.SETRANGE("No.",No);
        InvtCommentLine.DELETEALL;

        ItemChargeAssgntPurch.SETCURRENTKEY(
          "Applies-to Doc. Type","Applies-to Doc. No.","Applies-to Doc. Line No.");
        ItemChargeAssgntPurch.SETRANGE("Applies-to Doc. Type",ItemChargeAssgntPurch."Applies-to Doc. Type"::"Transfer Receipt");
        ItemChargeAssgntPurch.SETRANGE("Applies-to Doc. No.",TransLine2."Document No.");
        ItemChargeAssgntPurch.DELETEALL;

        IF TransLine2.FIND('-') THEN BEGIN
          REPEAT
            DimMgt.DeleteDocDim(DATABASE::"Transfer Line",DocDim."Document Type"::" ",No,TransLine2."Line No.");
            TransLine2.DELETE;
          UNTIL TransLine2.NEXT = 0;
        END;
        DimMgt.DeleteDocDim(DATABASE::"Transfer Header",DocDim."Document Type"::" ",No,0);
        TransHeader2.DELETE;
        IF NOT HideValidationDialog THEN
          MESSAGE(Text003,No);
        EXIT(TRUE);
      END;
      EXIT(FALSE);
    END;

    LOCAL PROCEDURE TestStatusOpen@37();
    BEGIN
      IF NOT CalledFromWhse THEN
        TESTFIELD(Status,Status::Open);
    END;

    PROCEDURE CalledFromWarehouse@7300(CalledFromWhse2@1000 : Boolean);
    BEGIN
      CalledFromWhse := CalledFromWhse2;
    END;

    PROCEDURE CreateInvtPutAwayPick@29();
    VAR
      WhseRequest@1000 : Record 5765;
    BEGIN
      TESTFIELD(Status,Status::Released);

      WhseRequest.RESET;
      WhseRequest.SETCURRENTKEY("Source Document","Source No.");
      WhseRequest.SETFILTER(
        "Source Document",'%1|%2',
        WhseRequest."Source Document"::"Inbound Transfer",
        WhseRequest."Source Document"::"Outbound Transfer");
      WhseRequest.SETRANGE("Source No.","No.");
      REPORT.RUNMODAL(REPORT::"Create Invt. Put-away / Pick",TRUE,FALSE,WhseRequest);
    END;

    BEGIN
    END.
  }
}
