OBJECT Table 7000025 Cartera Doc. Dimension
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVES6.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TESTFIELD("Dimension Value Code");
               GLSetup.GET;
               UpdateLineDim(Rec,FALSE);
               IF "Dimension Code" = GLSetup."Global Dimension 1 Code" THEN
                 UpdateGlobalDimCode(
                   1,"Table ID","Document Type","Document No.","Line No.","Dimension Value Code");
               IF "Dimension Code" = GLSetup."Global Dimension 2 Code" THEN
                 UpdateGlobalDimCode(
                   2,"Table ID","Document Type","Document No.","Line No.","Dimension Value Code");
             END;

    OnModify=BEGIN
               GLSetup.GET;
               UpdateLineDim(Rec,FALSE);
               IF "Dimension Code" = GLSetup."Global Dimension 1 Code" THEN
                 UpdateGlobalDimCode(
                   1,"Table ID","Document Type","Document No.","Line No.","Dimension Value Code");
               IF "Dimension Code" = GLSetup."Global Dimension 2 Code" THEN
                 UpdateGlobalDimCode(
                   2,"Table ID","Document Type","Document No.","Line No.","Dimension Value Code");
             END;

    OnDelete=BEGIN
               GLSetup.GET;
               UpdateLineDim(Rec,TRUE);
               IF "Dimension Code" = GLSetup."Global Dimension 1 Code" THEN
                 UpdateGlobalDimCode(
                   1,"Table ID","Document Type","Document No.","Line No.",'');
               IF "Dimension Code" = GLSetup."Global Dimension 2 Code" THEN
                 UpdateGlobalDimCode(
                   2,"Table ID","Document Type","Document No.","Line No.",'');
             END;

    OnRename=BEGIN
               ERROR(Text000,TABLECAPTION);
             END;

    CaptionML=[ENU=Cartera Doc. Dimension;
               ESP=Dimensi¢n doc. Cartera];
  }
  FIELDS
  {
    { 1   ;   ;Table ID            ;Integer       ;TableRelation=AllObj."Object ID" WHERE (Object Type=CONST(Table));
                                                   CaptionML=[ENU=Table ID;
                                                              ESP=Id. tabla];
                                                   NotBlank=Yes }
    { 2   ;   ;Document Type       ;Option        ;CaptionML=[ENU=Document Type;
                                                              ESP=Tipo documento];
                                                   OptionCaptionML=[ENU="Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order, ,Bill,Posted Bill,Closed Bill,Posted Invoice,Closed Invoice ";
                                                                    ESP="Oferta,Pedido,Factura,Abono,Pedido abierto,Devoluci¢n, ,Efecto,Efecto registrado,Efecto cerrado,Factura registrada,Factura cerrada "];
                                                   OptionString=[Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order, ,Bill,Posted Bill,Closed Bill,Posted Invoice,Closed Invoice ] }
    { 3   ;   ;Document No.        ;Code20        ;CaptionML=[ENU=Document No.;
                                                              ESP=N§ documento] }
    { 4   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              ESP=N§ l¡nea] }
    { 5   ;   ;Dimension Code      ;Code20        ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                IF NOT DimMgt.CheckDim("Dimension Code") THEN
                                                                  ERROR(DimMgt.GetDimErr);
                                                              END;

                                                   CaptionML=[ENU=Dimension Code;
                                                              ESP=C¢d. dimensi¢n];
                                                   NotBlank=Yes }
    { 6   ;   ;Dimension Value Code;Code20        ;TableRelation="Dimension Value".Code WHERE (Dimension Code=FIELD(Dimension Code));
                                                   OnValidate=BEGIN
                                                                IF NOT DimMgt.CheckDimValue("Dimension Code","Dimension Value Code") THEN
                                                                  ERROR(DimMgt.GetDimErr);
                                                              END;

                                                   CaptionML=[ENU=Dimension Value Code;
                                                              ESP=C¢d. valor dimensi¢n];
                                                   NotBlank=Yes }
    { 7   ;   ;Bill No.            ;Code20        ;CaptionML=[ENU=Bill No.;
                                                              ESP=N§ efecto] }
    { 8   ;   ;Type                ;Option        ;CaptionML=[ENU=Type;
                                                              ESP=Tipo];
                                                   OptionCaptionML=[ENU=Receivable,Payable;
                                                                    ESP=A cobrar,A pagar];
                                                   OptionString=Receivable,Payable }
  }
  KEYS
  {
    {    ;Table ID,Document Type,Type,Document No.,Bill No.,Line No.,Dimension Code;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=You can not rename a %1.;ESP=No puede renombrar un %1.';
      Text001@1001 : TextConst 'ENU=You have changed a dimension.\\;ESP=Ha cambiado una dimensi¢n.\\';
      Text002@1002 : TextConst 'ENU=Do you want to update the lines?;ESP=¨Confirma que desea actualizar las l¡neas?';
      Text003@1003 : TextConst 'ENU=You may have changed a dimension.\\Do you want to update the lines?;ESP=Puede que haya cambiado una dim.\\¨Quiere actualizar las l¡neas?';
      GLSetup@1004 : Record 98;
      DimMgt@1005 : Codeunit 408;

    PROCEDURE UpdateGlobalDimCode@25(GlobalDimCodeNo@1000 : Integer;TableID@1001 : Integer;DocumentType@1002 : Option;DocumentNo@1003 : Code[20];LineNo@1004 : Integer;NewDimValue@1005 : Code[20]);
    VAR
      SalesHeader@1006 : Record 36;
      SalesLine@1007 : Record 37;
      PurchHeader@1008 : Record 38;
      PurchLine@1009 : Record 39;
      ReminderHeader@1010 : Record 295;
      FinChrgMemoHeader@1011 : Record 302;
      TransHeader@1012 : Record 5740;
      TransLine@1013 : Record 5741;
      ServHeader@1014 : Record 5900;
      ServInvLine@1015 : Record 5902;
    BEGIN
      CASE TableID OF
        DATABASE::"Sales Header":
          BEGIN
            IF SalesHeader.GET(DocumentType,DocumentNo) THEN BEGIN
              CASE GlobalDimCodeNo OF
                1:
                  SalesHeader."Shortcut Dimension 1 Code" := NewDimValue;
                2:
                  SalesHeader."Shortcut Dimension 2 Code" := NewDimValue;
              END;
              SalesHeader.MODIFY(TRUE);
            END;
          END;
        DATABASE::"Sales Line":
          BEGIN
            IF SalesLine.GET(DocumentType,DocumentNo,LineNo) THEN BEGIN
              CASE GlobalDimCodeNo OF
                1:
                  SalesLine."Shortcut Dimension 1 Code" := NewDimValue;
                2:
                  SalesLine."Shortcut Dimension 2 Code" := NewDimValue;
              END;
              SalesLine.MODIFY(TRUE);
            END;
          END;
        DATABASE::"Purchase Header":
          BEGIN
            IF PurchHeader.GET(DocumentType,DocumentNo) THEN BEGIN
              CASE GlobalDimCodeNo OF
                1:
                  PurchHeader."Shortcut Dimension 1 Code" := NewDimValue;
                2:
                  PurchHeader."Shortcut Dimension 2 Code" := NewDimValue;
              END;
              PurchHeader.MODIFY(TRUE);
            END;
          END;
        DATABASE::"Purchase Line":
          BEGIN
            IF PurchLine.GET(DocumentType,DocumentNo,LineNo) THEN BEGIN
              CASE GlobalDimCodeNo OF
                1:
                  PurchLine."Shortcut Dimension 1 Code" := NewDimValue;
                2:
                  PurchLine."Shortcut Dimension 2 Code" := NewDimValue;
              END;
              PurchLine.MODIFY(TRUE);
            END;
          END;
        DATABASE::"Reminder Header":
          BEGIN
            IF ReminderHeader.GET(DocumentNo) THEN BEGIN
              CASE GlobalDimCodeNo OF
                1:
                  ReminderHeader."Shortcut Dimension 1 Code" := NewDimValue;
                2:
                  ReminderHeader."Shortcut Dimension 2 Code" := NewDimValue;
              END;
              ReminderHeader.MODIFY(TRUE);
            END;
          END;
        DATABASE::"Finance Charge Memo Header":
          BEGIN
            IF FinChrgMemoHeader.GET(DocumentNo) THEN BEGIN
              CASE GlobalDimCodeNo OF
                1:
                  FinChrgMemoHeader."Shortcut Dimension 1 Code" := NewDimValue;
                2:
                  FinChrgMemoHeader."Shortcut Dimension 2 Code" := NewDimValue;
              END;
              FinChrgMemoHeader.MODIFY(TRUE);
            END;
          END;
        DATABASE::"Transfer Header":
          BEGIN
            IF TransHeader.GET(DocumentNo) THEN BEGIN
              CASE GlobalDimCodeNo OF
                1:
                  TransHeader."Shortcut Dimension 1 Code" := NewDimValue;
                2:
                  TransHeader."Shortcut Dimension 2 Code" := NewDimValue;
              END;
              TransHeader.MODIFY(TRUE);
            END;
          END;
        DATABASE::"Transfer Line":
          BEGIN
            IF TransLine.GET(DocumentNo,LineNo) THEN BEGIN
              CASE GlobalDimCodeNo OF
                1:
                  TransLine."Shortcut Dimension 1 Code" := NewDimValue;
                2:
                  TransLine."Shortcut Dimension 2 Code" := NewDimValue;
              END;
              TransLine.MODIFY(TRUE);
            END;
          END;
        DATABASE::"Service Header":
          BEGIN
            IF ServHeader.GET(DocumentNo) THEN BEGIN
              CASE GlobalDimCodeNo OF
                1:
                  ServHeader."Shortcut Dimension 1 Code" := NewDimValue;
                2:
                  ServHeader."Shortcut Dimension 2 Code" := NewDimValue;
              END;
              ServHeader.MODIFY(TRUE);
            END;
          END;
        DATABASE::"Service Invoice Line":
          BEGIN
            IF ServInvLine.GET(DocumentNo,LineNo) THEN BEGIN
              CASE GlobalDimCodeNo OF
                1:
                  ServInvLine."Shortcut Dimension 1 Code" := NewDimValue;
                2:
                  ServInvLine."Shortcut Dimension 2 Code" := NewDimValue;
              END;
              ServInvLine.MODIFY(TRUE);
            END;
          END;
      END;
    END;

    PROCEDURE UpdateLineDim@1(VAR DocDim@1000 : Record 7000025;FromOnDelete@1001 : Boolean);
    VAR
      NewDocDim@1002 : Record 357;
      SalesLine@1003 : Record 37;
      PurchaseLine@1004 : Record 39;
      TransLine@1005 : Record 5741;
      ServInvLine@1006 : Record 5902;
      Question@1007 : Text[250];
    BEGIN
      WITH DocDim DO BEGIN
        IF ("Table ID" = DATABASE::"Sales Header") OR
           ("Table ID" = DATABASE::"Purchase Header") OR
           ("Table ID" = DATABASE::"Transfer Header") OR
           ("Table ID" = DATABASE::"Service Header")
        THEN BEGIN
          Question := STRSUBSTNO(
            Text001 +
            Text002);
          CASE "Table ID" OF
            DATABASE::"Sales Header":
              NewDocDim.SETRANGE("Table ID",DATABASE::"Sales Line");
            DATABASE::"Purchase Header":
              NewDocDim.SETRANGE("Table ID",DATABASE::"Purchase Line");
            DATABASE::"Transfer Header":
              NewDocDim.SETRANGE("Table ID",DATABASE::"Transfer Line");
            DATABASE::"Service Header":
              NewDocDim.SETRANGE("Table ID",DATABASE::"Service Invoice Line");
          END;
          NewDocDim.SETRANGE("Document Type","Document Type");
          NewDocDim.SETRANGE("Document No.","Document No.");
          NewDocDim.SETRANGE("Dimension Code","Dimension Code");
          IF NewDocDim.FIND('-') THEN BEGIN
            IF NOT FromOnDelete THEN
              IF NewDocDim."Dimension Value Code" = "Dimension Value Code" THEN
                EXIT;
          END ELSE
            IF FromOnDelete THEN
              EXIT;
          CASE "Table ID" OF
            DATABASE::"Sales Header":
              BEGIN
                SalesLine.SETRANGE("Document Type","Document Type");
                SalesLine.SETRANGE("Document No.","Document No.");
                IF SalesLine.FIND('-') THEN BEGIN
                  IF DIALOG.CONFIRM(Question,TRUE) THEN BEGIN
                    NewDocDim.DELETEALL(TRUE);
                    IF NOT FromOnDelete THEN
                      REPEAT
                        InsertNew(DocDim,DATABASE::"Sales Line",SalesLine."Line No.");
                      UNTIL SalesLine.NEXT = 0;
                  END;
                END;
              END;
            DATABASE::"Purchase Header":
              BEGIN
                PurchaseLine.SETRANGE("Document Type","Document Type");
                PurchaseLine.SETRANGE("Document No.","Document No.");
                IF PurchaseLine.FIND('-') THEN BEGIN
                  IF DIALOG.CONFIRM(Question,TRUE) THEN BEGIN
                    NewDocDim.DELETEALL(TRUE);
                    IF NOT FromOnDelete THEN
                      REPEAT
                        InsertNew(DocDim,DATABASE::"Purchase Line",PurchaseLine."Line No.");
                      UNTIL PurchaseLine.NEXT = 0;
                  END;
                END;
              END;
            DATABASE::"Transfer Header":
              BEGIN
                TransLine.SETRANGE("Document No.","Document No.");
                IF TransLine.FIND('-') THEN BEGIN
                  IF DIALOG.CONFIRM(Question,TRUE) THEN BEGIN
                    NewDocDim.DELETEALL(TRUE);
                    IF NOT FromOnDelete THEN
                      REPEAT
                        InsertNew(DocDim,DATABASE::"Transfer Line",TransLine."Line No.");
                      UNTIL TransLine.NEXT = 0;
                  END;
                END;
              END;
            DATABASE::"Service Header":
              BEGIN
                ServInvLine.SETRANGE("Document No.","Document No.");
                IF ServInvLine.FIND('-') THEN BEGIN
                  IF DIALOG.CONFIRM(Question,TRUE) THEN BEGIN
                    NewDocDim.DELETEALL(TRUE);
                    IF NOT FromOnDelete THEN
                      REPEAT
                        InsertNew(DocDim,DATABASE::"Service Invoice Line",ServInvLine."Line No.");
                      UNTIL ServInvLine.NEXT = 0;
                  END;
                END;
              END;
          END;
        END;
      END;
    END;

    LOCAL PROCEDURE InsertNew@2(VAR DocDim@1000 : Record 7000025;TableNo@1001 : Integer;LineNo@1002 : Integer);
    VAR
      NewDocDim@1003 : Record 357;
    BEGIN
      WITH DocDim DO BEGIN
        NewDocDim."Table ID" := TableNo;
        NewDocDim."Document Type" := "Document Type";
        NewDocDim."Document No." := "Document No.";
        NewDocDim."Line No." := LineNo;
        NewDocDim."Dimension Code" := "Dimension Code";
        NewDocDim."Dimension Value Code" := "Dimension Value Code";
        NewDocDim.INSERT(TRUE);
      END;
    END;

    PROCEDURE GetDimensions@3(TableNo@1000 : Integer;DocType@1001 : Option;DocNo@1002 : Code[20];DocLineNo@1003 : Integer;VAR TempDocDim@1004 : Record 7000025);
    VAR
      DocDim@1005 : Record 7000025;
    BEGIN
      TempDocDim.DELETEALL;

      WITH DocDim DO BEGIN
        RESET;
        SETRANGE("Table ID",TableNo);
        SETRANGE("Document Type",DocType);
        SETRANGE("Document No.",DocNo);
        SETRANGE("Line No.",DocLineNo);
        IF FIND('-') THEN
          REPEAT
            TempDocDim := DocDim;
            TempDocDim.INSERT;
          UNTIL NEXT = 0;
      END;
    END;

    PROCEDURE UpdateAllLineDim@4(TableNo@1000 : Integer;DocType@1001 : Option;DocNo@1002 : Code[20];VAR OldDocDimHeader@1003 : Record 7000025);
    VAR
      DocDimHeader@1004 : Record 7000025;
      DocDimLine@1005 : Record 7000025;
      SalesLine@1006 : Record 37;
      PurchaseLine@1007 : Record 39;
      ServInvLine@1008 : Record 5902;
      LineTableNo@1009 : Integer;
    BEGIN
      CASE TableNo OF
        DATABASE::"Sales Header": LineTableNo := DATABASE::"Sales Line";
        DATABASE::"Purchase Header": LineTableNo := DATABASE::"Purchase Line";
        DATABASE::"Service Header": LineTableNo := DATABASE::"Service Invoice Line";
      END;

      DocDimHeader.SETRANGE("Table ID",TableNo);
      DocDimHeader.SETRANGE("Document Type",DocType);
      DocDimHeader.SETRANGE("Document No.",DocNo);
      DocDimHeader.SETRANGE("Line No.",0);

      DocDimLine.SETRANGE("Table ID",LineTableNo);
      DocDimLine.SETRANGE("Document Type",DocType);
      DocDimLine.SETRANGE("Document No.",DocNo);
      DocDimLine.SETFILTER("Line No.",'<>0');

      IF NOT DocDimLine.FIND('-') THEN
        EXIT;

      IF NOT CONFIRM(
        Text003,TRUE)
      THEN
        EXIT;

      // Going through all the dimensions on the Header AFTER they have been updated
      WITH DocDimHeader DO
        IF FIND('-') THEN
          REPEAT
            IF (NOT OldDocDimHeader.GET("Table ID","Document Type","Document No.","Line No.","Dimension Code")) OR
              (OldDocDimHeader."Dimension Value Code" <> "Dimension Value Code")
            THEN BEGIN
              DocDimLine.SETRANGE("Dimension Code","Dimension Code");
              DocDimLine.DELETEALL;
              CASE TableNo OF
                DATABASE::"Sales Header":
                BEGIN
                  SalesLine.SETRANGE("Document Type",DocType);
                  SalesLine.SETRANGE("Document No.",DocNo);
                  IF SalesLine.FIND('-') THEN
                    REPEAT
                      InsertNew(DocDimHeader,LineTableNo,SalesLine."Line No.");
                    UNTIL SalesLine.NEXT = 0;
                END;
                DATABASE::"Purchase Header":
                BEGIN
                  PurchaseLine.SETRANGE("Document Type",DocType);
                  PurchaseLine.SETRANGE("Document No.",DocNo);
                  IF PurchaseLine.FIND('-') THEN
                    REPEAT
                      InsertNew(DocDimHeader,LineTableNo,PurchaseLine."Line No.");
                    UNTIL PurchaseLine.NEXT = 0;
                END;
                DATABASE::"Service Header":
                BEGIN
                  ServInvLine.SETRANGE("Document Type",DocType);
                  ServInvLine.SETRANGE("Document No.",DocNo);
                  IF ServInvLine.FIND('-') THEN
                    REPEAT
                      InsertNew(DocDimHeader,LineTableNo,ServInvLine."Line No.");
                    UNTIL ServInvLine.NEXT = 0;
                END;

              END;
            END;
          UNTIL NEXT = 0;

      // Going through all the dimensions on the Header BEFORE they have been updated
      // If the DimCode were there before but not anymore, all DimLines with the DimCode is deleted
      WITH OldDocDimHeader DO
        IF FIND('-') THEN
          REPEAT
            IF NOT DocDimHeader.GET("Table ID","Document Type","Document No.","Line No.","Dimension Code") THEN BEGIN
              DocDimLine.SETRANGE("Dimension Code","Dimension Code");
              DocDimLine.DELETEALL;
            END;
          UNTIL NEXT = 0;
    END;

    BEGIN
    END.
  }
}
