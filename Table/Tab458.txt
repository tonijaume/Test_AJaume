OBJECT Table 458 Overdue Notification Entry
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVW16.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Overdue Notification Entry;
               ESP=Mov. notificaci¢n vencidos];
  }
  FIELDS
  {
    { 1   ;   ;Table ID            ;Integer       ;CaptionML=[ENU=Table ID;
                                                              ESP=Id. tabla] }
    { 2   ;   ;Document Type       ;Option        ;CaptionML=[ENU=Document Type;
                                                              ESP=Tipo documento];
                                                   OptionCaptionML=[ENU=Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order;
                                                                    ESP=Oferta,Pedido,Factura,Abono,Pedido abierto,Devoluci¢n];
                                                   OptionString=Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order }
    { 3   ;   ;Document No.        ;Code20        ;TableRelation=IF (Table ID=CONST(36)) "Sales Header".No. WHERE (Document Type=FIELD(Document Type))
                                                                 ELSE IF (Table ID=CONST(38)) "Purchase Header".No. WHERE (Document Type=FIELD(Document Type));
                                                   CaptionML=[ENU=Document No.;
                                                              ESP=N§ documento] }
    { 4   ;   ;Sent to ID          ;Code20        ;TableRelation="User Setup";
                                                   CaptionML=[ENU=Sent to ID;
                                                              ESP=Enviado a Id.] }
    { 5   ;   ;Sent Time           ;Time          ;CaptionML=[ENU=Sent Time;
                                                              ESP=Hora env¡o] }
    { 6   ;   ;Sent Date           ;Date          ;CaptionML=[ENU=Sent Date;
                                                              ESP=Fecha env¡o] }
    { 7   ;   ;E-Mail              ;Text100       ;ExtendedDatatype=E-Mail;
                                                   CaptionML=[ENU=E-Mail;
                                                              ESP=Correo electr¢nico] }
    { 8   ;   ;Sent to Name        ;Text30        ;CaptionML=[ENU=Sent to Name;
                                                              ESP=Enviado a nombre] }
    { 9   ;   ;Sequence No.        ;Integer       ;CaptionML=[ENU=Sequence No.;
                                                              ESP=N§ secuencia] }
    { 10  ;   ;Due Date            ;Date          ;CaptionML=[ENU=Due Date;
                                                              ESP=Fecha vencimiento] }
    { 11  ;   ;Approver ID         ;Code20        ;CaptionML=[ENU=Approver ID;
                                                              ESP=Id. aprobador] }
    { 12  ;   ;Approval Code       ;Code20        ;CaptionML=[ENU=Approval Code;
                                                              ESP=C¢digo aprobaci¢n] }
    { 13  ;   ;Approval Type       ;Option        ;CaptionML=[ENU=Approval Type;
                                                              ESP=Tipo aprobaci¢n];
                                                   OptionCaptionML=[ENU=" ,Sales Pers./Purchaser,Approver";
                                                                    ESP=" ,Vendedor/Comprador,Aprobador"];
                                                   OptionString=[ ,Sales Pers./Purchaser,Approver] }
    { 14  ;   ;Limit Type          ;Option        ;CaptionML=[ENU=Limit Type;
                                                              ESP=Tipo l¡mite];
                                                   OptionCaptionML=[ENU=Approval Limits,Credit Limits,Request Limits,No Limits;
                                                                    ESP=L¡mites aprobaci¢n,L¡mites cr‚dito,L¡mites solicitud,Sin l¡mites];
                                                   OptionString=Approval Limits,Credit Limits,Request Limits,No Limits }
  }
  KEYS
  {
    {    ;Table ID,Document Type,Document No.,Sequence No.,Sent Date,Sent Time;
                                                   Clustered=Yes }
    {    ;Approver ID                              }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE ShowDocument@1();
    VAR
      SalesHeader@1001 : Record 36;
      PurchHeader@1000 : Record 38;
    BEGIN
      CASE "Table ID" OF
        DATABASE::"Sales Header":
          BEGIN
            IF NOT SalesHeader.GET("Document Type","Document No.") THEN
              EXIT;
            CASE "Document Type" OF
              "Document Type"::Quote:
                FORM.RUN(FORM::"Sales Quote",SalesHeader);
              "Document Type"::Order:
                FORM.RUN(FORM::"Sales Order",SalesHeader);
              "Document Type"::Invoice:
                FORM.RUN(FORM::"Sales Invoice",SalesHeader);
              "Document Type"::"Credit Memo":
                FORM.RUN(FORM::"Sales Credit Memo",SalesHeader);
              "Document Type"::"Blanket Order":
                FORM.RUN(FORM::"Blanket Sales Order",SalesHeader);
              "Document Type"::"Return Order":
                FORM.RUN(FORM::"Sales Return Order",SalesHeader);
            END;
          END;
        DATABASE::"Purchase Header":
          BEGIN
            IF NOT PurchHeader.GET("Document Type","Document No.") THEN
              EXIT;
            CASE "Document Type" OF
              "Document Type"::Quote:
                FORM.RUN(FORM::"Purchase Quote",PurchHeader);
              "Document Type"::Order:
                FORM.RUN(FORM::"Purchase Order",PurchHeader);
              "Document Type"::Invoice:
                FORM.RUN(FORM::"Purchase Invoice",PurchHeader);
              "Document Type"::"Credit Memo":
                FORM.RUN(FORM::"Purchase Credit Memo",PurchHeader);
              "Document Type"::"Blanket Order":
                FORM.RUN(FORM::"Blanket Purchase Order",PurchHeader);
              "Document Type"::"Return Order":
                FORM.RUN(FORM::"Purchase Return Order",PurchHeader);
            END;
          END;
        ELSE
          EXIT;
      END;
    END;

    BEGIN
    END.
  }
}
