OBJECT Table 5055269 Liquidity Analysis View
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=LIQEM6.00;
  }
  PROPERTIES
  {
    Permissions=TableData 5055271=rimd;
    DataCaptionFields=Code,Name;
    OnDelete=VAR
               AnalysisViewFilter@1140000 : Record 5055270;
             BEGIN
               AnalysisViewReset;
               AnalysisViewFilter.SETRANGE("Analysis View Code",Code);
               AnalysisViewFilter.DELETEALL;
             END;

    CaptionML=[ENU=Liquidity Analysis View;
               ESP=Vista an lisis liquidez];
    LookupFormID=Form5055287;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code10        ;CaptionML=[ENU=Code;
                                                              ESP=C¢digo];
                                                   NotBlank=Yes }
    { 2   ;   ;Name                ;Text50        ;CaptionML=[ENU=Name;
                                                              ESP=Nombre] }
    { 6   ;   ;Last Date Updated   ;Date          ;CaptionML=[ENU=Last Date Updated;
                                                              ESP=élt. fecha actualiz.] }
    { 7   ;   ;Update on Posting   ;Boolean       ;CaptionML=[ENU=Update on Posting;
                                                              ESP=Actualizar al registrar] }
    { 8   ;   ;Blocked             ;Boolean       ;OnValidate=BEGIN
                                                                IF (Blocked = FALSE) AND ("Refresh When Unblocked" = TRUE)
                                                                THEN BEGIN
                                                                  ValidateDelete(FIELDCAPTION(Blocked));
                                                                  AnalysisViewReset;
                                                                  "Refresh When Unblocked" := FALSE;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Blocked;
                                                              ESP=Bloqueado] }
    { 9   ;   ;Liquidity Account Filter;Code250   ;TableRelation="Liquidity Account";
                                                   OnValidate=VAR
                                                                AnalysisViewEntry@1140000 : Record 5055271;
                                                                LiqAcc@1140001 : Record 5055251;
                                                              BEGIN
                                                                TESTFIELD(Blocked,FALSE);
                                                                IF ("Last Date Updated" <> 0D) AND (xRec."Liquidity Account Filter" = '') AND ("Liquidity Account Filter" <> '')
                                                                THEN BEGIN
                                                                  ValidateModify(FIELDCAPTION("Liquidity Account Filter"));
                                                                  LiqAcc.SETFILTER("No.","Liquidity Account Filter");
                                                                  IF LiqAcc.FIND('-') THEN
                                                                    REPEAT
                                                                      LiqAcc.MARK := TRUE;
                                                                    UNTIL LiqAcc.NEXT = 0;
                                                                  LiqAcc.SETRANGE("No.");
                                                                  IF LiqAcc.FIND('-') THEN
                                                                    REPEAT
                                                                      IF NOT LiqAcc.MARK THEN BEGIN
                                                                        AnalysisViewEntry.SETRANGE("Analysis View Code",Code);
                                                                        AnalysisViewEntry.SETRANGE("Liquidity Account No.",LiqAcc."No.");
                                                                        AnalysisViewEntry.DELETEALL;
                                                                      END;
                                                                    UNTIL LiqAcc.NEXT = 0;
                                                                END;
                                                                IF ("Last Date Updated" <> 0D) AND ("Liquidity Account Filter" <> xRec."Liquidity Account Filter")
                                                                   AND (xRec."Liquidity Account Filter" <> '')THEN  BEGIN
                                                                  ValidateDelete(FIELDCAPTION("Liquidity Account Filter"));
                                                                  AnalysisViewReset;
                                                                END;
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Liquidity Account Filter;
                                                              ESP=Filtro cta. liquidez] }
    { 11  ;   ;Starting Date       ;Date          ;OnValidate=BEGIN
                                                                TESTFIELD(Blocked,FALSE);
                                                                IF ("Last Date Updated" <> 0D) AND ("Starting Date" <> xRec."Starting Date") THEN BEGIN
                                                                  ValidateDelete(FIELDCAPTION("Starting Date"));
                                                                  AnalysisViewReset;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Starting Date;
                                                              ESP=Fecha inicial] }
    { 12  ;   ;Date Compression    ;Option        ;OnValidate=BEGIN
                                                                TESTFIELD(Blocked,FALSE);
                                                                IF ("Last Date Updated" <> 0D) AND ("Date Compression" <> xRec."Date Compression") THEN BEGIN
                                                                  ValidateDelete(FIELDCAPTION("Date Compression"));
                                                                  AnalysisViewReset;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Date Compression;
                                                              ESP=Compresi¢n por fechas];
                                                   OptionCaptionML=[ENU=None,Day,Week,Month,Quarter,Year,Period;
                                                                    ESP=Ninguno,D¡a,Semana,Mes,Trimestre,A¤o,Periodo];
                                                   OptionString=None,Day,Week,Month,Quarter,Year,Period }
    { 13  ;   ;Dimension 1 Code    ;Code20        ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Blocked,FALSE);
                                                                IF Dim.CheckIfDimUsed("Dimension 1 Code",13,'',Code,0) THEN
                                                                  ERROR(Text1140000,Dim.GetCheckDimErr);
                                                                ModifyDim(FIELDCAPTION("Dimension 1 Code"),"Dimension 1 Code",xRec."Dimension 1 Code");
                                                                MODIFY;
                                                              END;

                                                   CaptionML=[ENU=Dimension 1 Code;
                                                              ESP=C¢d. dimensi¢n 1] }
    { 14  ;   ;Dimension 2 Code    ;Code20        ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Blocked,FALSE);
                                                                IF Dim.CheckIfDimUsed("Dimension 2 Code",14,'',Code,0) THEN
                                                                  ERROR(Text1140000,Dim.GetCheckDimErr);
                                                                ModifyDim(FIELDCAPTION("Dimension 2 Code"),"Dimension 2 Code",xRec."Dimension 2 Code");
                                                                MODIFY;
                                                              END;

                                                   CaptionML=[ENU=Dimension 2 Code;
                                                              ESP=C¢d. dimensi¢n 2] }
    { 15  ;   ;Dimension 3 Code    ;Code20        ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Blocked,FALSE);
                                                                IF Dim.CheckIfDimUsed("Dimension 3 Code",15,'',Code,0) THEN
                                                                  ERROR(Text1140000,Dim.GetCheckDimErr);
                                                                ModifyDim(FIELDCAPTION("Dimension 3 Code"),"Dimension 3 Code",xRec."Dimension 3 Code");
                                                                MODIFY;
                                                              END;

                                                   CaptionML=[ENU=Dimension 3 Code;
                                                              ESP=C¢d. dimensi¢n 3] }
    { 16  ;   ;Dimension 4 Code    ;Code20        ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Blocked,FALSE);
                                                                IF Dim.CheckIfDimUsed("Dimension 4 Code",16,'',Code,0) THEN
                                                                  ERROR(Text1140000,Dim.GetCheckDimErr);
                                                                ModifyDim(FIELDCAPTION("Dimension 4 Code"),"Dimension 4 Code",xRec."Dimension 4 Code");
                                                                MODIFY;
                                                              END;

                                                   CaptionML=[ENU=Dimension 4 Code;
                                                              ESP=C¢d. dimensi¢n 4] }
    { 18  ;   ;Refresh When Unblocked;Boolean     ;CaptionML=[ENU=Refresh When Unblocked;
                                                              ESP=Refrescar cdo. bloqueado] }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Code,Name                                }
  }
  CODE
  {
    VAR
      Text1140000@1140000 : TextConst 'ENU=%1\You cannot use the same dimension twice in the same analysis view.;ESP=%1\No puede usar la misma dim. dos veces en la misma vista an lisis.';
      Text1140001@1140001 : TextConst 'ENU=The dimension %1 is used in the analysis view %2 %3.;ESP=La dimensi¢n %1 se usa en la vista an lisis %2 %3.';
      Text1140002@1140002 : TextConst 'ENU=" You must therefore retain the dimension to keep consistency between the analysis view and the Liquidity ledger entries.";ESP=" Debe conservar la dimensi¢n para mantener la consistencia entre el an lisis y los movs. contables de Liquidez."';
      Text1140003@1140003 : TextConst 'ENU=All analysis views must be updated with the latest Liquidity ledger entries.;ESP=Todas las vistas an lisis deben ser actualizadas con los £ltimos movimientos liquidez.';
      Text1140004@1140004 : TextConst 'ENU=" Both blocked and unblocked analysis views must be updated.";ESP=" Deben actualizarse las vistas an lisis bloqueadas y sin bloquear."';
      Text1140005@1140005 : TextConst 'ENU=" Note, you must remove the checkmark in the blocked field before updating the blocked analysis views.\";ESP=" Nota, debe borrar la marca en el campo bloqueado antes de actualizar las vistas an lisis bloqueadas.\"';
      Text1140006@1140006 : TextConst 'ENU=Currently, %1 analysis views are not updated.;ESP=Vistas an lisis %1 no est n actualizadas.';
      Text1140007@1140007 : TextConst 'ENU=" Do you wish to update these analysis views?";ESP=" ¨Confirma que desea actualizar estas vistas an lisis?"';
      Text1140008@1140008 : TextConst 'ENU=All analysis views must be updated with the latest Liquidity ledger entries.;ESP=Todas las vistas an lisis deben ser actualizadas con los £ltimos movimientos liquidez.';
      Text1140009@1140009 : TextConst 'ENU=If you change the contents of the %1 field, the analysis view entries will be deleted.;ESP=Si cambia los contenidos del campo %1, se borrar n los movs. vista an lisis.';
      Text1140010@1140010 : TextConst 'ENU=\You will have to update again.\\Do you want to enter a new value in the %1 field?;ESP=\Tendr  que actualizar de nuevo.\\¨Quiere introducir un valor nuevo en el campo %1?';
      Text1140011@1140011 : TextConst 'ENU=The update has been interrupted in response to the warning.;ESP=La actualizaci¢n ha sido interrumpida como repuesta a la advertencia.';
      Text1140012@1140012 : TextConst 'ENU=If you change the contents of the %1 field, the analysis view entries will be changed as well.\\;ESP=Si cambia los contenidos del campo %1, cambiar n tambin los movs. vista an lisis.\\';
      Text1140013@1140013 : TextConst 'ENU=Do you want to enter a new value in the %1 field?;ESP=¨Confirma que desea introducir un valor nuevo en el campo %1?';
      AnalysisViewEntry@1140014 : Record 5055271;
      NewAnalysisViewEntry@1140015 : Record 5055271;
      Dim@1140016 : Record 348;

    PROCEDURE ModifyDim@1140000(DimFieldName@1140000 : Text[100];DimValue@1140001 : Code[20];xDimValue@1140002 : Code[20]);
    BEGIN
      IF ("Last Date Updated" <> 0D) AND (DimValue <> xDimValue) THEN BEGIN
        IF DimValue <> '' THEN BEGIN
          ValidateDelete(DimFieldName);
          AnalysisViewReset;
        END;
        IF DimValue = '' THEN BEGIN
          ValidateModify(DimFieldName);
          CASE DimFieldName OF
            FIELDCAPTION("Dimension 1 Code"):
              BEGIN
                AnalysisViewEntry.SETFILTER("Dimension 1 Value Code",'<>%1','');
              END;
            FIELDCAPTION("Dimension 2 Code"):
              BEGIN
                AnalysisViewEntry.SETFILTER("Dimension 2 Value Code",'<>%1','');
              END;
            FIELDCAPTION("Dimension 3 Code"):
              BEGIN
                AnalysisViewEntry.SETFILTER("Dimension 3 Value Code",'<>%1','');
              END;
            FIELDCAPTION("Dimension 4 Code"):
              BEGIN
                AnalysisViewEntry.SETFILTER("Dimension 4 Value Code",'<>%1','');
              END;
          END;
          AnalysisViewEntry.SETRANGE("Analysis View Code",Code);
          IF AnalysisViewEntry.FIND('-') THEN
            REPEAT
              AnalysisViewEntry.DELETE;
              NewAnalysisViewEntry := AnalysisViewEntry;
              CASE DimFieldName OF
                FIELDCAPTION("Dimension 1 Code"):
                  NewAnalysisViewEntry."Dimension 1 Value Code" := '';
                FIELDCAPTION("Dimension 2 Code"):
                  NewAnalysisViewEntry."Dimension 2 Value Code" := '';
                FIELDCAPTION("Dimension 3 Code"):
                  NewAnalysisViewEntry."Dimension 3 Value Code" := '';
                FIELDCAPTION("Dimension 4 Code"):
                  NewAnalysisViewEntry."Dimension 4 Value Code" := '';
              END;
              InsertAnalysisViewEntry;
             UNTIL AnalysisViewEntry.NEXT = 0;
        END;
      END;
    END;

    PROCEDURE InsertAnalysisViewEntry@1140001();
    BEGIN
      IF NOT NewAnalysisViewEntry.INSERT THEN BEGIN
        NewAnalysisViewEntry.FIND;
        NewAnalysisViewEntry.Amount := NewAnalysisViewEntry.Amount + AnalysisViewEntry.Amount;
      END;
    END;

    PROCEDURE AnalysisViewReset@1140002();
    VAR
      AnalysisViewEntry@1140000 : Record 5055271;
    BEGIN
      AnalysisViewEntry.SETRANGE("Analysis View Code",Code);
      AnalysisViewEntry.DELETEALL;
      "Last Date Updated" := 0D;
    END;

    PROCEDURE CheckDimensionsAreRetained@1140003(ObjectType@1140000 : Integer;ObjectID@1140001 : Integer);
    BEGIN
      RESET;
      IF FIND('-') THEN
        REPEAT
          CheckDimIsRetained(ObjectType,ObjectID,"Dimension 1 Code",Code,Name);
          CheckDimIsRetained(ObjectType,ObjectID,"Dimension 2 Code",Code,Name);
          CheckDimIsRetained(ObjectType,ObjectID,"Dimension 3 Code",Code,Name);
          CheckDimIsRetained(ObjectType,ObjectID,"Dimension 4 Code",Code,Name);
        UNTIL NEXT = 0;
    END;

    LOCAL PROCEDURE CheckDimIsRetained@1140004(ObjectType@1140000 : Integer;ObjectID@1140001 : Integer;DimCode@1140002 : Code[20];AnalysisViewCode@1140003 : Code[10];AnalysisViewName@1140004 : Text[50]);
    VAR
      SelectedDim@1140005 : Record 369;
    BEGIN
      IF DimCode <> '' THEN
        IF NOT SelectedDim.GET(USERID,ObjectType,ObjectID,'',DimCode) THEN
          ERROR(
            Text1140001 +
            Text1140002,
            DimCode,AnalysisViewCode,AnalysisViewName);
    END;

    PROCEDURE CheckViewsAreUpdated@1140005();
    VAR
      LiqLedgEntry@1140000 : Record 5055257;
      UpdateAnalysisView@1140001 : Codeunit 5055265;
      NoNotUpdated@1140002 : Integer;
    BEGIN
      IF LiqLedgEntry.FIND('+') THEN BEGIN
        NoNotUpdated := 0;
        RESET;
        IF FIND('-') THEN
          REPEAT
            NoNotUpdated := NoNotUpdated + 1;
          UNTIL NEXT = 0;
        IF NoNotUpdated > 0 THEN
          IF CONFIRM(
              Text1140003 +
              Text1140004 +
              Text1140005 +
              Text1140006 +
              Text1140007,TRUE,NoNotUpdated)
          THEN BEGIN
            IF FIND('-') THEN
              REPEAT
                IF Blocked THEN BEGIN
                  "Refresh When Unblocked" := TRUE;
                  MODIFY;
                END ELSE
                  UpdateAnalysisView.Update(Rec,TRUE);
              UNTIL NEXT = 0;
          END ELSE
            ERROR(Text1140008);
      END;
    END;

    PROCEDURE ValidateDelete@1140006(FieldName@1140000 : Text[100]);
    VAR
      Question@1140001 : Text[250];
    BEGIN
      Question := STRSUBSTNO(
        Text1140009 +
        Text1140010,FieldName);
      IF NOT DIALOG.CONFIRM(Question, TRUE) THEN
        ERROR(Text1140011);
    END;

    PROCEDURE ValidateModify@1140007(FieldName@1140000 : Text[100]);
    VAR
      Question@1140001 : Text[250];
    BEGIN
      Question := STRSUBSTNO(
        Text1140012 +
        Text1140013,FieldName);
      IF NOT DIALOG.CONFIRM(Question, TRUE) THEN
        ERROR(Text1140011);
    END;

    PROCEDURE CopyAnalysisViewFilters@1140008(ObjectType@1140000 : Integer;ObjectID@1140001 : Integer;AnalysisViewCode@1140002 : Code[10]);
    VAR
      SelectedDim@1140003 : Record 369;
      LiqLedgAcc@1140004 : Record 5055251;
    BEGIN
      IF GET(AnalysisViewCode) THEN BEGIN
        IF "Liquidity Account Filter" <> '' THEN BEGIN
          IF SelectedDim.GET(
            USERID,ObjectType,ObjectID,AnalysisViewCode,LiqLedgAcc.TABLECAPTION)
          THEN BEGIN
            IF SelectedDim."Dimension Value Filter" = '' THEN BEGIN
              SelectedDim."Dimension Value Filter" := "Liquidity Account Filter";
              SelectedDim.MODIFY;
            END;
          END ELSE BEGIN
            SelectedDim.INIT;
            SelectedDim."User ID" := USERID;
            SelectedDim."Object Type" := ObjectType;
            SelectedDim."Object ID" := ObjectID;
            SelectedDim."Analysis View Code" := AnalysisViewCode;
            SelectedDim."Dimension Code" := LiqLedgAcc.TABLECAPTION;
            SelectedDim."Dimension Value Filter" := "Liquidity Account Filter";
            SelectedDim.INSERT;
          END;
        END;
      END;
    END;

    BEGIN
    END.
  }
}
