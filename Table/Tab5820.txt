OBJECT Table 5820 Cost Element Buffer
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=NAVW16.00.01;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Cost Element Buffer;
               ESP=Mem. inter. elementos de coste];
  }
  FIELDS
  {
    { 1   ;   ;Type                ;Option        ;CaptionML=[ENU=Type;
                                                              ESP=Tipo];
                                                   OptionCaptionML=[ENU=Direct Cost,Revaluation,Rounding,Indirect Cost,Variance,Total;
                                                                    ESP=Coste directo,Revalorizaci¢n,Redondeo,Coste indirecto,Desviaci¢n,Total];
                                                   OptionString=Direct Cost,Revaluation,Rounding,Indirect Cost,Variance,Total }
    { 2   ;   ;Variance Type       ;Option        ;CaptionML=[ENU=Variance Type;
                                                              ESP=Tipo desviaci¢n];
                                                   OptionCaptionML=[ENU=" ,Purchase,Material,Capacity,Capacity Overhead,Manufacturing Overhead,Subcontracted";
                                                                    ESP=" ,Compras,Materiales,Capacidad,Gastos gen. capacidad,Gastos gen. fabr.,Subcontrataci¢n"];
                                                   OptionString=[ ,Purchase,Material,Capacity,Capacity Overhead,Manufacturing Overhead,Subcontracted] }
    { 3   ;   ;Actual Cost         ;Decimal       ;CaptionML=[ENU=Actual Cost;
                                                              ESP=Coste real];
                                                   AutoFormatType=1 }
    { 4   ;   ;Actual Cost (ACY)   ;Decimal       ;CaptionML=[ENU=Actual Cost (ACY);
                                                              ESP=Coste real (DA)];
                                                   AutoFormatType=1 }
    { 5   ;   ;Rounding Residual   ;Decimal       ;CaptionML=[ENU=Rounding Residual;
                                                              ESP=Redondeo residual];
                                                   AutoFormatType=1 }
    { 6   ;   ;Rounding Residual (ACY);Decimal    ;CaptionML=[ENU=Rounding Residual (ACY);
                                                              ESP=Redondeo residual (DA)];
                                                   AutoFormatType=1 }
    { 7   ;   ;Expected Cost       ;Decimal       ;CaptionML=[ENU=Expected Cost;
                                                              ESP=Coste previsto];
                                                   AutoFormatType=1 }
    { 8   ;   ;Expected Cost (ACY) ;Decimal       ;CaptionML=[ENU=Expected Cost (ACY);
                                                              ESP=Coste esperado (DA)];
                                                   AutoFormatType=1 }
    { 9   ;   ;Invoiced Quantity   ;Decimal       ;CaptionML=[ENU=Invoiced Quantity;
                                                              ESP=Cantidad facturada] }
    { 10  ;   ;Remaining Quantity  ;Decimal       ;CaptionML=[ENU=Remaining Quantity;
                                                              ESP=Cantidad pendiente] }
    { 11  ;   ;Inbound Completely Invoiced;Boolean;CaptionML=[ENU=Inbound Completely Invoiced;
                                                              ESP=Entrada fact. completamente] }
    { 12  ;   ;Last Valid Value Entry No;Integer  ;CaptionML=[ENU=Last Valid Value Entry No;
                                                              ESP=N§ £ltimo mov. valor v lido] }
  }
  KEYS
  {
    {    ;Type,Variance Type                      ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE AddActualCost@1(NewType@1000 : Option;NewVarianceType@1003 : Option;NewActualCost@1001 : Decimal;NewActualCostACY@1002 : Decimal);
    BEGIN
      IF NOT HasNewCost(NewActualCost,NewActualCostACY) THEN BEGIN
        Retrieve(NewType,NewVarianceType);
        EXIT;
      END;
      IF Retrieve(NewType,NewVarianceType) THEN BEGIN
        "Actual Cost" := "Actual Cost" + NewActualCost;
        "Actual Cost (ACY)" := "Actual Cost (ACY)" + NewActualCostACY;
        MODIFY;
      END ELSE BEGIN
        "Actual Cost" := NewActualCost;
        "Actual Cost (ACY)" := NewActualCostACY;
        INSERT;
      END;
    END;

    PROCEDURE AddExpectedCost@2(NewType@1000 : Option;NewVarianceType@1003 : Option;NewExpectedCost@1001 : Decimal;NewExpectedCostACY@1002 : Decimal);
    BEGIN
      IF NOT HasNewCost(NewExpectedCost,NewExpectedCostACY) THEN BEGIN
        Retrieve(NewType,NewVarianceType);
        EXIT;
      END;
      IF Retrieve(NewType,NewVarianceType) THEN BEGIN
        "Expected Cost" := "Expected Cost" + NewExpectedCost;
        "Expected Cost (ACY)" := "Expected Cost (ACY)" + NewExpectedCostACY;
        MODIFY;
      END ELSE BEGIN
        "Expected Cost" := NewExpectedCost;
        "Expected Cost (ACY)" := NewExpectedCostACY;
        INSERT;
      END;
    END;

    PROCEDURE AddRndgResidual@3(NewType@1000 : Option;NewVarianceType@1003 : Option;NewRndgResidual@1001 : Decimal;NewRndgResidualACY@1002 : Decimal);
    BEGIN
      IF NOT HasNewCost(NewRndgResidual,NewRndgResidualACY) THEN BEGIN
        Retrieve(NewType,NewVarianceType);
        EXIT;
      END;
      IF Retrieve(NewType,NewVarianceType) THEN BEGIN
        "Rounding Residual" := "Rounding Residual" + NewRndgResidual;
        "Rounding Residual (ACY)" := "Rounding Residual (ACY)" + NewRndgResidualACY;
        MODIFY;
      END ELSE BEGIN
        "Rounding Residual" := NewRndgResidual;
        "Rounding Residual (ACY)" := NewRndgResidualACY;
        INSERT;
      END;
    END;

    PROCEDURE RoundActualCost@77(ShareOfTotalCost@1003 : Decimal;AmtRndgPrec@1001 : Decimal;AmtRndgPrecACY@1002 : Decimal);
    BEGIN
      "Actual Cost" := ROUND("Actual Cost" * ShareOfTotalCost,AmtRndgPrec);
      "Actual Cost (ACY)" := ROUND("Actual Cost (ACY)" * ShareOfTotalCost,AmtRndgPrecACY);
    END;

    PROCEDURE ExcludeEntryFromAvgCostCalc@69(ValueEntry@1001 : Record 5802);
    BEGIN
      "Remaining Quantity" := "Remaining Quantity" - ValueEntry."Item Ledger Entry Quantity";
      "Actual Cost" := "Actual Cost" - ValueEntry."Cost Amount (Actual)" - ValueEntry."Cost Amount (Expected)";
      "Actual Cost (ACY)" :=
        "Actual Cost (ACY)" - ValueEntry."Cost Amount (Actual) (ACY)" - ValueEntry."Cost Amount (Expected) (ACY)";
    END;

    PROCEDURE Retrieve@72(NewType@1001 : Option;NewVarianceType@1000 : Option) : Boolean;
    BEGIN
      RESET;
      Type := NewType;
      "Variance Type" := NewVarianceType;
      IF NOT FIND THEN BEGIN
        INIT;
        EXIT(FALSE);
      END;
      EXIT(TRUE);
    END;

    LOCAL PROCEDURE HasNewCost@54(NewCost@1000 : Decimal;NewCostACY@1001 : Decimal) : Boolean;
    BEGIN
      EXIT((NewCost <> 0) OR (NewCostACY <> 0));
    END;

    PROCEDURE UpdateAvgCostBuffer@4(CostElementBuf@1000 : Record 5820;LastValidEntryNo@1001 : Integer);
    BEGIN
      "Actual Cost" := CostElementBuf."Actual Cost";
      "Actual Cost (ACY)" := CostElementBuf."Actual Cost (ACY)";
      "Last Valid Value Entry No" := LastValidEntryNo;
      "Remaining Quantity" := CostElementBuf."Remaining Quantity";
    END;

    PROCEDURE UpdateCostElementBuffer@5(AvgCostBuf@1000 : Record 5820);
    BEGIN
      "Remaining Quantity" := AvgCostBuf."Remaining Quantity";
      "Actual Cost" := AvgCostBuf."Actual Cost";
      "Actual Cost (ACY)" := AvgCostBuf."Actual Cost (ACY)";
      "Rounding Residual" := AvgCostBuf."Rounding Residual";
      "Rounding Residual (ACY)" := AvgCostBuf."Rounding Residual (ACY)";
    END;

    BEGIN
    END.
  }
}
