OBJECT Table 358 Production Document Dimension
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVW16.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF "Document Status" = "Document Status"::Finished THEN
                 ERROR(Text003,"Document Status",TABLECAPTION);

               TESTFIELD("Dimension Value Code");
               GLSetup.GET;
               UpdateLineDim(Rec,FALSE);
               IF "Dimension Code" = GLSetup."Global Dimension 1 Code" THEN
                 UpdateGlobalDimCode(
                   1,"Table ID","Document Status","Document No.","Document Line No.",
                   "Line No.","Dimension Value Code");
               IF "Dimension Code" = GLSetup."Global Dimension 2 Code" THEN
                 UpdateGlobalDimCode(
                   2,"Table ID","Document Status","Document No.","Document Line No.",
                   "Line No.","Dimension Value Code");
             END;

    OnModify=BEGIN
               IF "Document Status" = "Document Status"::Finished THEN
                 ERROR(Text003,"Document Status",TABLECAPTION);

               GLSetup.GET;
               UpdateLineDim(Rec,FALSE);
               IF "Dimension Code" = GLSetup."Global Dimension 1 Code" THEN
                 UpdateGlobalDimCode(
                   1,"Table ID","Document Status","Document No.","Document Line No.",
                   "Line No.","Dimension Value Code");
               IF "Dimension Code" = GLSetup."Global Dimension 2 Code" THEN
                 UpdateGlobalDimCode(
                   2,"Table ID","Document Status","Document No.","Document Line No.",
                   "Line No.","Dimension Value Code");
             END;

    OnDelete=BEGIN
               IF "Document Status" = "Document Status"::Finished THEN
                 ERROR(Text003,"Document Status",TABLECAPTION);

               GLSetup.GET;
               UpdateLineDim(Rec,TRUE);
               IF "Dimension Code" = GLSetup."Global Dimension 1 Code" THEN
                 UpdateGlobalDimCode(
                   1,"Table ID","Document Status","Document No.","Document Line No.",
                   "Line No.",'');
               IF "Dimension Code" = GLSetup."Global Dimension 2 Code" THEN
                 UpdateGlobalDimCode(
                   2,"Table ID","Document Status","Document No.","Document Line No.",
                   "Line No.",'');
             END;

    OnRename=BEGIN
               ERROR(Text000,TABLECAPTION);
             END;

    CaptionML=[ENU=Production Document Dimension;
               ESP=Dimensi¢n documento producci¢n];
  }
  FIELDS
  {
    { 1   ;   ;Table ID            ;Integer       ;TableRelation=AllObj."Object ID" WHERE (Object Type=CONST(Table));
                                                   CaptionML=[ENU=Table ID;
                                                              ESP=Id. tabla];
                                                   NotBlank=Yes }
    { 2   ;   ;Document Status     ;Option        ;CaptionML=[ENU=Document Status;
                                                              ESP=Estado documento];
                                                   OptionCaptionML=[ENU=Simulated,Planned,Firm Planned,Released,Finished;
                                                                    ESP=Simulada,Planificada,Planif. en firme,Lanzada,Terminada];
                                                   OptionString=Simulated,Planned,Firm Planned,Released,Finished }
    { 3   ;   ;Document No.        ;Code20        ;CaptionML=[ENU=Document No.;
                                                              ESP=N§ documento] }
    { 4   ;   ;Document Line No.   ;Integer       ;CaptionML=[ENU=Document Line No.;
                                                              ESP=N§ l¡n. documento] }
    { 5   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              ESP=N§ l¡nea] }
    { 6   ;   ;Dimension Code      ;Code20        ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                IF NOT DimMgt.CheckDim("Dimension Code") THEN
                                                                  ERROR(DimMgt.GetDimErr);
                                                              END;

                                                   CaptionML=[ENU=Dimension Code;
                                                              ESP=C¢d. dimensi¢n];
                                                   NotBlank=Yes }
    { 7   ;   ;Dimension Value Code;Code20        ;TableRelation="Dimension Value".Code WHERE (Dimension Code=FIELD(Dimension Code));
                                                   OnValidate=BEGIN
                                                                IF NOT DimMgt.CheckDimValue("Dimension Code","Dimension Value Code") THEN
                                                                  ERROR(DimMgt.GetDimErr);
                                                              END;

                                                   CaptionML=[ENU=Dimension Value Code;
                                                              ESP=C¢d. valor dimensi¢n];
                                                   NotBlank=Yes }
  }
  KEYS
  {
    {    ;Table ID,Document Status,Document No.,Document Line No.,Line No.,Dimension Code;
                                                   Clustered=Yes }
    {    ;Dimension Code,Dimension Value Code     ;KeyGroups=Dim(Setup) }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=You cannot rename a %1.;ESP=No se puede cambiar el nombre a %1.';
      Text001@1001 : TextConst 'ENU=You have changed a dimension.\\;ESP=Ha cambiado una dimensi¢n.\\';
      Text002@1002 : TextConst 'ENU=Do you want to update the lines?;ESP=¨Confirma que desea actualizar las l¡neas?';
      GLSetup@1003 : Record 98;
      DimMgt@1004 : Codeunit 408;
      Text003@1005 : TextConst 'ENU=A %1 %2 cannot be inserted, modified, or deleted.;ESP=Un %1 %2 no se puede insertar, modificar o eliminar.';
      Text004@1006 : TextConst 'ENU=Do you want to update the components?;ESP=¨Quiere actualizar los componentes?';
      HideConfirmDialogue@1007 : Boolean;

    PROCEDURE SetFilters@1(TableID@1000 : Integer;Status@1001 : Option;DocumentNo@1002 : Code[20];LineNo@1003 : Integer;SublineNo@1004 : Integer);
    BEGIN
      SETRANGE("Table ID",TableID);
      SETRANGE("Document Status",Status);
      SETRANGE("Document No.",DocumentNo);
      SETRANGE("Document Line No.",LineNo);
      SETRANGE("Line No.",SublineNo);
    END;

    PROCEDURE UpdateGlobalDimCode@25(GlobalDimCodeNo@1000 : Integer;"Table ID"@1001 : Integer;"Document Status"@1002 : Option;"Document No."@1003 : Code[20];"Document Line No."@1004 : Integer;"Line No."@1005 : Integer;NewDimValue@1006 : Code[20]);
    VAR
      ProdOrder@1007 : Record 5405;
      ProdOrderLine@1008 : Record 5406;
      ProdOrderComp@1009 : Record 5407;
    BEGIN
      CASE "Table ID" OF
        DATABASE::"Production Order":
          BEGIN
            IF ProdOrder.GET("Document Status","Document No.") THEN BEGIN
              CASE GlobalDimCodeNo OF
                1:
                  ProdOrder."Shortcut Dimension 1 Code" := NewDimValue;
                2:
                  ProdOrder."Shortcut Dimension 2 Code" := NewDimValue;
              END;
              ProdOrder.MODIFY(TRUE);
            END;
          END;
        DATABASE::"Prod. Order Line":
          BEGIN
            IF ProdOrderLine.GET("Document Status","Document No.","Document Line No.") THEN BEGIN
              CASE GlobalDimCodeNo OF
                1:
                  ProdOrderLine."Shortcut Dimension 1 Code" := NewDimValue;
                2:
                  ProdOrderLine."Shortcut Dimension 2 Code" := NewDimValue;
              END;
              ProdOrderLine.MODIFY(TRUE);
            END;
          END;
        DATABASE::"Prod. Order Component":
          BEGIN
            IF ProdOrderComp.GET("Document Status","Document No.","Document Line No.","Line No.") THEN BEGIN
              CASE GlobalDimCodeNo OF
                1:
                  ProdOrderComp."Shortcut Dimension 1 Code" := NewDimValue;
                2:
                  ProdOrderComp."Shortcut Dimension 2 Code" := NewDimValue;
              END;
              ProdOrderComp.MODIFY(TRUE);
            END;
          END;
      END;
    END;

    PROCEDURE UpdateLineDim@3(VAR ProdDocDim@1000 : Record 358;FromOnDelete@1001 : Boolean);
    VAR
      NewProdDocDim@1002 : Record 358;
      ProdOrderLine@1003 : Record 5406;
      ProdOrderComponent@1005 : Record 5407;
      Question@1004 : Text[250];
    BEGIN
      WITH ProdDocDim DO BEGIN

        CASE "Table ID" OF
          DATABASE::"Production Order":
            BEGIN
              NewProdDocDim.SETRANGE("Table ID", DATABASE::"Prod. Order Line");
              NewProdDocDim.SETRANGE("Line No.",0);
              Question := Text001 + Text002;
            END;
          DATABASE::"Prod. Order Line":
            BEGIN
              NewProdDocDim.SETRANGE("Table ID",DATABASE::"Prod. Order Component");
              NewProdDocDim.SETRANGE("Document Line No.","Document Line No.");
              Question := Text001 + Text004;
            END;
        END;

        NewProdDocDim.SETRANGE("Document Status","Document Status");
        NewProdDocDim.SETRANGE("Document No.","Document No.");
        NewProdDocDim.SETRANGE("Dimension Code","Dimension Code");
        IF NewProdDocDim.FINDFIRST THEN BEGIN
          IF NOT FromOnDelete THEN
            IF NewProdDocDim."Dimension Value Code" = "Dimension Value Code" THEN
              EXIT;
        END ELSE
          IF FromOnDelete THEN
            EXIT;

        CASE "Table ID" OF
          DATABASE::"Production Order":
            BEGIN
              ProdOrderLine.SETRANGE(Status,"Document Status");
              ProdOrderLine.SETRANGE("Prod. Order No.","Document No.");
              IF ProdOrderLine.FINDSET THEN BEGIN
                IF ConfirmDialogue(Question) THEN BEGIN
                  NewProdDocDim.SetHideConfirmDialogue(TRUE);
                  IF NewProdDocDim.FINDSET THEN REPEAT
                    NewProdDocDim.SetHideConfirmDialogue(TRUE);
                    NewProdDocDim.DELETE(TRUE);
                  UNTIL NewProdDocDim.NEXT = 0;
                  IF NOT FromOnDelete THEN
                    REPEAT
                      InsertNew(ProdDocDim,DATABASE::"Prod. Order Line",ProdOrderLine."Line No.",0);
                    UNTIL ProdOrderLine.NEXT = 0;
                END;
              END;
            END;

          DATABASE::"Prod. Order Line":
            BEGIN
              ProdOrderComponent.SETRANGE(Status,"Document Status");
              ProdOrderComponent.SETRANGE("Prod. Order No.","Document No.");
              ProdOrderComponent.SETRANGE("Prod. Order Line No.","Document Line No.");
              IF ProdOrderComponent.FINDSET THEN BEGIN
                IF ConfirmDialogue(Question) THEN BEGIN
                  NewProdDocDim.DELETEALL(TRUE);
                  IF NOT FromOnDelete THEN
                    REPEAT
                      InsertNew(ProdDocDim,DATABASE::"Prod. Order Component",ProdOrderComponent."Prod. Order Line No.",
                        ProdOrderComponent."Line No.");
                    UNTIL ProdOrderComponent.NEXT = 0;
                END;
              END;
            END;
          END;
      END;
    END;

    LOCAL PROCEDURE InsertNew@2(VAR ProdDocDim@1000 : Record 358;TableNo@1001 : Integer;DocumentLineNo@1002 : Integer;LineNo@1004 : Integer);
    VAR
      NewProdDocDim@1003 : Record 358;
    BEGIN
      WITH ProdDocDim DO BEGIN
        NewProdDocDim."Table ID" := TableNo;
        NewProdDocDim."Document Status" := "Document Status";
        NewProdDocDim."Document No." := "Document No.";
        NewProdDocDim."Document Line No." := DocumentLineNo;
        NewProdDocDim."Line No." := LineNo;
        NewProdDocDim."Dimension Code" := "Dimension Code";
        NewProdDocDim."Dimension Value Code" := "Dimension Value Code";
        NewProdDocDim.SetHideConfirmDialogue(TRUE);
        NewProdDocDim.INSERT(TRUE);
      END;
    END;

    PROCEDURE SetHideConfirmDialogue@4(Hide@1000 : Boolean);
    BEGIN
      HideConfirmDialogue := Hide;
    END;

    PROCEDURE ConfirmDialogue@6(ShowQuestion@1000 : Text[250]) : Boolean;
    BEGIN
      IF HideConfirmDialogue THEN
        EXIT(TRUE)
      ELSE
        EXIT(DIALOG.CONFIRM(ShowQuestion,TRUE));
    END;

    BEGIN
    END.
  }
}
