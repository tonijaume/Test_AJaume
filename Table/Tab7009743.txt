OBJECT Table 7009743 Reserva Hotel
{
  OBJECT-PROPERTIES
  {
    Date=28/10/14;
    Time=12:15:38;
    Modified=Yes;
    Version List=AIC2009;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               rPar.FINDFIRST;
               IF NOT rPar."Empresa Delegacion" THEN
                 ERROR(Text001);

               IF TourOperador = '' THEN
                 TourOperador := rPar."TourOperador Compra";

               IF "TourOperador Venta" = '' THEN
                 "TourOperador Venta" := rPar."TourOperador Compra";

               IF Delegacion = '' THEN
                 Delegacion := rPar.Delegacion;

               IF "N§ Reserva" = 0 THEN BEGIN
                 rPar.LOCKTABLE;
                 rPar."Contador Reservas hotel" := rPar."Contador Reservas hotel" + 1;
                 rPar.MODIFY;

                 "N§ Reserva" := rPar."Contador Reservas hotel";
               END;

               "Fecha Recepcion" := TODAY; //+$005

               // Procesos para la exportacion del archivo

               cRes.reserva_modificada(Rec, FALSE);
             END;

    OnModify=VAR
               rBajas@1103355000 : Record 7009770;
             BEGIN
               rPar.FINDFIRST;
               IF NOT rPar."Empresa Delegacion" THEN
                 ERROR(Text002);

               // Comprobamos si la reserva se esta calculando

               VALIDATE("Ultimo dia release");

               IF ("Modificacion critica") AND ("Fecha entrada" > TODAY - 3) THEN BEGIN
                 "Comunicado hotel"     := FALSE;
                 "N§ envio hotel"       := 0;
                 "Fecha envio"          := 0D;
                 "Hora envio"           := 0T;
                 "Usuario envio"        := '';
                 "Nombre acep. listado" := '';
                 "Pendiente calculo"    := TRUE;
                 "Modificacion critica" := FALSE;
               END;

               IF "Cambiar booking" THEN BEGIN
                 cRes.borra_reserva_booking(Rec);
                 cRes.genera_reserva_booking(Rec);
                 "Cambiar booking" := FALSE;
               END;

               // Procesos para la exportacion del archivo

               IF "Exportado Fecha" <> 0D THEN BEGIN
                 cRes.actualizar_bajas_reserva(Rec);
                 cRes.reserva_modificada(Rec, FALSE);
                 "Exportado Hotel" := FALSE;
               END;

               // AJF 26/11/08
               // Comprobamos si hay cambios en la reserva que puedan hacer que se tenga que regenerar la proforma.

               IF ("Precio Manual venta"      <> xRec."Precio Manual venta")      OR
                  ("Tipo Precio Manual Venta" <> xRec."Tipo Precio Manual Venta") OR
                  ("N§ Habitaciones"          <> xRec."N§ Habitaciones")          OR
                  ("Fecha entrada"            <> xRec."Fecha entrada")            OR
                  ("Fecha salida"             <> xRec."Fecha salida")             OR
                  ("Hotel booking"            <> xRec."Hotel booking")            OR
                  ("Hotel origen precios"     <> xRec."Hotel origen precios")     OR
                  (Habitacion                 <> xRec.Habitacion)                 OR
                  (Regimen                    <> xRec.Regimen)                    OR
                  ("Tipo Persona"             <> xRec."Tipo Persona")
               THEN
                 cProf.MarcarRegenerarProforma(Delegacion, "N§ Interno", "N§ Periodo");

               // Fin procesos para la exportacion

               Replicado:= FALSE;
             END;

    OnDelete=VAR
               rBack@1103355000 : Record 7009847;
               rBajas@1103355001 : Record 7009770;
               rBono@1103355002 : Record 7010013;
             BEGIN
               rPar.FINDFIRST;
               IF NOT rPar."Empresa Delegacion" THEN
                 ERROR(Text004);

               // Procesos para la exportacion del archivo
               IF "Exportado Fecha" <> 0D THEN BEGIN
                 IF Responsable THEN
                   cRes.reserva_modificada(Rec, TRUE)
                 ELSE
                   cRes.reserva_modificada(Rec, FALSE);
                 cRes.actualizar_bajas_reserva(Rec);
               END
               ELSE BEGIN
                 IF rBajas.GET(Delegacion, "N§ Reserva") THEN
                   rBajas.DELETE;
               END;
               // Fin procesos para la exportacion
               //
               cRes.borra_reserva_hotel(Rec);
               // Modificaci¢n Backup AJS 22-02-2000
               //
               IF rPar."Tipo Anulacion reserva" = rPar."Tipo Anulacion reserva"::Backup THEN BEGIN
                 rBack.TRANSFERFIELDS(Rec);
                 IF NOT rBack.INSERT THEN
                   rBack.MODIFY;
               END;
               // Fin Modificaci¢n Backup AJS 22-02-2000
               //
               IF NOT Responsable THEN
                 comprobar_habitacion(TRUE, "N§ Reserva");

               // AJF 26/11/08
               // Si se borra la reserva hay que regenerar la proforma si esta tiene.
               cProf.MarcarRegenerarProforma(Delegacion, "N§ Interno", "N§ Periodo");

               cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", "N§ Reserva", 2,
                                   Text006, Text007, '');
             END;

    OnRename=BEGIN
               rPar.FINDFIRST;
               IF NOT rPar."Empresa Delegacion" THEN
                 ERROR(Text008);

               Replicado:= FALSE;
             END;

    CaptionML=[ENU=Booking hotel;
               ESP=Reserva Hotel];
    LookupFormID=Form7009876;
    DrillDownFormID=Form7009876;
  }
  FIELDS
  {
    { 1   ;   ;N§ Interno          ;Integer       ;CaptionML=[ENU=Internal No.;
                                                              ESP=N§ Interno];
                                                   Description=FK Cabecera reserva;
                                                   Editable=No }
    { 3   ;   ;N§ Periodo          ;Integer       ;CaptionML=[ENU=Period No.;
                                                              ESP=N§ Periodo];
                                                   Description=FK Periodo reserva;
                                                   Editable=No }
    { 5   ;   ;N§ Reserva          ;Integer       ;CaptionML=[ENU=Reservation No.;
                                                              ESP=N§ Reserva];
                                                   Description=PK;
                                                   Editable=No }
    { 7   ;   ;TourOperador        ;Code10        ;TableRelation=TourOperador.TourOperador;
                                                   OnValidate=BEGIN
                                                                //$008-
                                                                rTTOO.RESET;
                                                                rTTOO.GET(TourOperador);
                                                                rTTOO.TESTFIELD(Bloqueado, FALSE);
                                                                //$008+

                                                                IF (TourOperador <> xRec.TourOperador) THEN
                                                                BEGIN
                                                                  IF "Llegada cerrada" THEN
                                                                    ERROR(Text009);
                                                                  IF NOT Responsable THEN
                                                                  BEGIN
                                                                    TourOperador := xRec.TourOperador;
                                                                    EXIT;
                                                                  END;

                                                                  buscar_contrato;
                                                                  buscar_habitacion(TRUE);
                                                                  buscar_regimen;

                                                                  // Traspasar a acompa¤antes

                                                                  rRsv.RESET;
                                                                  rRsv.SETCURRENTKEY(Delegacion,
                                                                                     "N§ Responsable");
                                                                  rRsv.SETRANGE(Delegacion      , Delegacion);
                                                                  rRsv.SETRANGE("N§ Responsable", "N§ Reserva");
                                                                  rRsv.SETRANGE(Responsable     , FALSE);
                                                                  IF rRsv.FIND('-') THEN BEGIN
                                                                    rRsv.MODIFYALL(TourOperador, TourOperador, TRUE);
                                                                  END;

                                                                  "Modificacion critica" := TRUE;
                                                                  "Cambiar booking" := TRUE;

                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", "N§ Reserva", 2,
                                                                                      FIELDCAPTION(TourOperador), xRec.TourOperador, TourOperador);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=TourOperator;
                                                              ESP=TourOperador];
                                                   NotBlank=Yes;
                                                   Description=FK TourOperador }
    { 9   ;   ;Bono                ;Code10        ;OnValidate=BEGIN
                                                                IF (Bono <> xRec.Bono) THEN BEGIN
                                                                  // AJS 27.10.2008
                                                                  // Poner un control de modificacion, tambien NotBlank = TRUE

                                                                  IF NOT CONFIRM(Text028) THEN
                                                                    ERROR('');

                                                                  IF "Llegada cerrada" THEN
                                                                    ERROR(Text010);
                                                                  IF NOT Responsable THEN BEGIN
                                                                    Bono := xRec.Bono;
                                                                    EXIT;
                                                                  END;

                                                                  // Traspasar a acompa¤antes

                                                                  rRsv.RESET;
                                                                  rRsv.SETCURRENTKEY(Delegacion,
                                                                                     "N§ Responsable");
                                                                  rRsv.SETRANGE(Delegacion      , Delegacion);
                                                                  rRsv.SETRANGE("N§ Responsable", "N§ Reserva");
                                                                  rRsv.SETRANGE(Responsable     , FALSE);
                                                                  IF rRsv.FIND('-') THEN BEGIN
                                                                    rRsv.MODIFYALL(Bono, Bono, TRUE);
                                                                  END;

                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", "N§ Reserva", 2,
                                                                                      FIELDCAPTION(Bono), xRec.Bono, Bono);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Voucher;
                                                              ESP=Bono];
                                                   NotBlank=Yes }
    { 11  ;   ;Nombre              ;Text50        ;OnValidate=BEGIN
                                                                IF Nombre <> xRec.Nombre THEN
                                                                BEGIN
                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", "N§ Reserva", 2,
                                                                                      FIELDCAPTION(Nombre), xRec.Nombre, Nombre);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Name;
                                                              ESP=Nombre] }
    { 13  ;   ;Edad                ;Integer       ;OnValidate=BEGIN
                                                                IF Edad <> xRec.Edad THEN
                                                                BEGIN
                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", "N§ Reserva", 2, FIELDCAPTION(Edad),
                                                                                      STRSUBSTNO('%1', xRec.Edad), STRSUBSTNO('%1', Edad));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Age;
                                                              ESP=Edad] }
    { 15  ;   ;Tipo Persona        ;Code10        ;TableRelation="Tipo elemento"."Tipo elemento" WHERE (Humano=CONST(Yes));
                                                   OnValidate=BEGIN
                                                                TESTFIELD("Tipo Persona");

                                                                IF "Tipo Persona" <> xRec."Tipo Persona" THEN
                                                                BEGIN
                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", "N§ Reserva", 2, FIELDCAPTION("Tipo Persona"),
                                                                                      xRec."Tipo Persona", "Tipo Persona");
                                                                END;
                                                              END;

                                                   OnLookup=VAR
                                                              lrTipoPer@1100253000 : Record 7009715;
                                                            BEGIN
                                                              lrTipoPer.RESET;
                                                              lrTipoPer.SETRANGE(Humano, TRUE);
                                                              IF FORM.RUNMODAL(7009712, lrTipoPer) = ACTION::LookupOK THEN
                                                                VALIDATE("Tipo Persona", lrTipoPer."Tipo elemento");
                                                            END;

                                                   CaptionML=[ENU=Person type;
                                                              ESP=Tipo Persona];
                                                   Description=FK Tipo elemento }
    { 17  ;   ;Compa¤ia entrada    ;Code10        ;TableRelation="Compa¤ia aerea".Codigo;
                                                   OnValidate=BEGIN
                                                                IF "Compa¤ia entrada" <> xRec."Compa¤ia entrada" THEN BEGIN
                                                                  // Historico

                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", "N§ Reserva", 2, FIELDCAPTION("Compa¤ia entrada"),
                                                                                      xRec."Compa¤ia entrada", "Compa¤ia entrada");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Arrival company;
                                                              ESP=Compa¤ia entrada];
                                                   Description=FK Compa¤ia aerea;
                                                   Editable=No }
    { 19  ;   ;Vuelo entrada       ;Code10        ;OnValidate=BEGIN
                                                                IF "Vuelo entrada" <> xRec."Vuelo entrada" THEN BEGIN
                                                                  // Historico

                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", "N§ Reserva", 2, FIELDCAPTION("Vuelo entrada"),
                                                                                      xRec."Vuelo entrada", "Vuelo entrada");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Arrival flight;
                                                              ESP=Vuelo entrada];
                                                   Editable=No }
    { 21  ;   ;Fecha entrada       ;Date          ;OnValidate=BEGIN
                                                                IF ("Fecha entrada" <> xRec."Fecha entrada") THEN BEGIN
                                                                  IF ("Fecha salida" <> 0D) THEN BEGIN
                                                                    IF NOT "Modificacion importacion" THEN BEGIN
                                                                      IF "Fecha entrada" > "Fecha salida" THEN
                                                                        ERROR(Text011);
                                                                    END;
                                                                    Estancia := "Fecha salida" - "Fecha entrada";
                                                                  END;
                                                                  IF Responsable THEN BEGIN
                                                                    comprobar_paro_ventas("Hotel origen precios");
                                                                    buscar_contrato;
                                                                    buscar_habitacion(TRUE);
                                                                    buscar_regimen;
                                                                  END;

                                                                  // Traspasar a acompa¤antes

                                                                  IF NOT "Modificacion importacion" THEN BEGIN
                                                                    IF Responsable THEN BEGIN
                                                                      rRsv.RESET;
                                                                      rRsv.SETCURRENTKEY(Delegacion,
                                                                                        "N§ Responsable");
                                                                      rRsv.SETRANGE(Delegacion      , Delegacion);
                                                                      rRsv.SETRANGE("N§ Responsable", "N§ Reserva");
                                                                      rRsv.SETRANGE(Responsable     , FALSE);
                                                                      IF rRsv.FIND('-') THEN BEGIN
                                                                        rRsv.MODIFYALL("Fecha entrada", "Fecha entrada", TRUE);
                                                                      END;
                                                                    END;
                                                                  END;

                                                                  "Modificacion critica" := TRUE;
                                                                  "Cambiar booking" := TRUE;

                                                                  // Historico

                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", "N§ Reserva", 2, FIELDCAPTION("Fecha entrada"),
                                                                                      STRSUBSTNO('%1', xRec."Fecha entrada"), STRSUBSTNO('%1', "Fecha entrada"));

                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Check-in Date;
                                                              ESP=Fecha entrada] }
    { 23  ;   ;Terminal entrada    ;Code1         ;OnValidate=BEGIN
                                                                IF "Terminal entrada" <> xRec."Terminal entrada" THEN BEGIN
                                                                  // Historico

                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", "N§ Reserva", 2, FIELDCAPTION("Terminal entrada"),
                                                                                      xRec."Terminal entrada", "Terminal entrada");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Arrival terminal;
                                                              ESP=Terminal entrada];
                                                   Editable=No }
    { 25  ;   ;Hora entrada        ;Time          ;OnValidate=BEGIN
                                                                IF "Hora entrada" <> xRec."Hora entrada" THEN BEGIN
                                                                  // Historico

                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", "N§ Reserva", 2, FIELDCAPTION("Hora entrada"),
                                                                                      STRSUBSTNO('%1', xRec."Hora entrada"), STRSUBSTNO('%1', "Hora entrada"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Arrival time;
                                                              ESP=Hora entrada];
                                                   Editable=No }
    { 27  ;   ;IATA origen entrada ;Code10        ;TableRelation=Aeropuerto.Aeropuerto;
                                                   OnValidate=BEGIN
                                                                IF "IATA origen entrada" <> xRec."IATA origen entrada" THEN BEGIN
                                                                  // Historico

                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", "N§ Reserva", 2, FIELDCAPTION("IATA origen entrada"),
                                                                                      xRec."IATA origen entrada", "IATA origen entrada");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Arrival origin IATA;
                                                              ESP=IATA origen entrada];
                                                   Description=FK Aeropuerto;
                                                   Editable=No }
    { 29  ;   ;IATA destino entrada;Code10        ;TableRelation=Aeropuerto.Aeropuerto;
                                                   OnValidate=BEGIN
                                                                IF "IATA destino entrada" <> xRec."IATA destino entrada" THEN BEGIN
                                                                  // Historico

                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", "N§ Reserva", 2, FIELDCAPTION("IATA destino entrada"),
                                                                                      xRec."IATA destino entrada", "IATA destino entrada");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Arrival destination IATA;
                                                              ESP=IATA destino entrada];
                                                   Description=FK Aeropuerto;
                                                   Editable=No }
    { 31  ;   ;Compa¤ia salida     ;Code10        ;TableRelation="Compa¤ia aerea".Codigo;
                                                   OnValidate=BEGIN
                                                                IF "Compa¤ia salida" <> xRec."Compa¤ia salida" THEN BEGIN
                                                                  // Historico

                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", "N§ Reserva", 2, FIELDCAPTION("Compa¤ia salida"),
                                                                                      xRec."Compa¤ia salida", "Compa¤ia salida");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Departure company;
                                                              ESP=Compa¤ia salida];
                                                   Description=FK Compa¤ia aerea;
                                                   Editable=No }
    { 33  ;   ;Vuelo salida        ;Code10        ;OnValidate=BEGIN
                                                                IF "Vuelo salida" <> xRec."Vuelo salida" THEN BEGIN
                                                                  // Historico

                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", "N§ Reserva", 2, FIELDCAPTION("Vuelo salida"),
                                                                                      xRec."Vuelo salida", "Vuelo salida");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Departure flight;
                                                              ESP=Vuelo salida];
                                                   Editable=No }
    { 35  ;   ;Fecha salida        ;Date          ;OnValidate=BEGIN
                                                                IF ("Fecha salida" <> xRec."Fecha salida") THEN BEGIN
                                                                  IF "Fecha entrada" <> 0D THEN BEGIN
                                                                    IF NOT "Modificacion importacion" THEN BEGIN
                                                                      IF "Fecha entrada" > "Fecha salida" THEN
                                                                        ERROR(Text011);
                                                                    END;
                                                                    Estancia := "Fecha salida" - "Fecha entrada";
                                                                  END;

                                                                  IF Responsable THEN BEGIN
                                                                    comprobar_paro_ventas("Hotel origen precios");
                                                                    buscar_contrato;
                                                                    buscar_habitacion(TRUE);
                                                                    buscar_regimen;
                                                                  END;

                                                                  // Pasar a acompa¤antes

                                                                  IF NOT "Modificacion importacion" THEN BEGIN
                                                                    IF Responsable THEN BEGIN
                                                                      rRsv.RESET;
                                                                      rRsv.SETCURRENTKEY(Delegacion,
                                                                                         "N§ Responsable");
                                                                      rRsv.SETRANGE(Delegacion      , Delegacion);
                                                                      rRsv.SETRANGE("N§ Responsable", "N§ Reserva");
                                                                      rRsv.SETRANGE(Responsable     , FALSE);
                                                                      IF rRsv.FIND('-') THEN BEGIN
                                                                        rRsv.MODIFYALL("Fecha salida", "Fecha salida", TRUE);
                                                                      END;
                                                                    END;
                                                                  END;

                                                                  "Modificacion critica" := TRUE;
                                                                  "Cambiar booking" := TRUE;

                                                                  // Historico

                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", "N§ Reserva", 2, FIELDCAPTION("Fecha salida"),
                                                                                      STRSUBSTNO('%1', xRec."Fecha salida"), STRSUBSTNO('%1', "Fecha salida"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Check-out Date;
                                                              ESP=Fecha salida] }
    { 37  ;   ;Terminal salida     ;Code1         ;OnValidate=BEGIN
                                                                IF "Terminal salida" <> xRec."Terminal salida" THEN BEGIN
                                                                  // Historico

                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", "N§ Reserva", 2, FIELDCAPTION("Terminal salida"),
                                                                                      xRec."Terminal salida", "Terminal salida");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Departure terminal;
                                                              ESP=Terminal salida];
                                                   Editable=No }
    { 39  ;   ;Hora salida         ;Time          ;OnValidate=BEGIN
                                                                IF "Hora salida" <> xRec."Hora salida" THEN BEGIN
                                                                  // Historico

                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", "N§ Reserva", 2, FIELDCAPTION("Hora salida"),
                                                                                      STRSUBSTNO('%1', xRec."Hora salida"), STRSUBSTNO('%1', "Hora salida"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Departure time;
                                                              ESP=Hora salida];
                                                   Editable=No }
    { 41  ;   ;IATA origen salida  ;Code10        ;TableRelation=Aeropuerto.Aeropuerto;
                                                   OnValidate=BEGIN
                                                                IF "IATA origen salida" <> xRec."IATA origen salida" THEN BEGIN
                                                                  // Historico

                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", "N§ Reserva", 2, FIELDCAPTION("IATA origen salida"),
                                                                                      xRec."IATA origen salida", "IATA origen salida");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Departure origin IATA;
                                                              ESP=IATA origen salida];
                                                   Description=FK Aeropuerto;
                                                   Editable=No }
    { 43  ;   ;IATA destino salida ;Code10        ;TableRelation=Aeropuerto.Aeropuerto;
                                                   OnValidate=BEGIN
                                                                IF "IATA destino salida" <> xRec."IATA destino salida" THEN BEGIN
                                                                  // Historico

                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", "N§ Reserva", 2, FIELDCAPTION("IATA destino salida"),
                                                                                      xRec."IATA destino salida", "IATA destino salida");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Departure destination IATA;
                                                              ESP=IATA destino salida];
                                                   Description=FK Aeropuerto;
                                                   Editable=No }
    { 45  ;   ;N§ Habitaciones     ;Integer       ;OnValidate=BEGIN
                                                                IF ("N§ Habitaciones" <> xRec."N§ Habitaciones") THEN BEGIN
                                                                  IF NOT Responsable THEN BEGIN
                                                                    "N§ Habitaciones" := xRec."N§ Habitaciones";
                                                                    EXIT;
                                                                  END;

                                                                  // Pasar a acompa¤antes

                                                                  rRsv.RESET;
                                                                  rRsv.SETCURRENTKEY(Delegacion,
                                                                                     "N§ Responsable");
                                                                  rRsv.SETRANGE(Delegacion      , Delegacion);
                                                                  rRsv.SETRANGE("N§ Responsable", "N§ Reserva");
                                                                    rRsv.SETRANGE(Responsable     , FALSE);
                                                                  IF rRsv.FIND('-') THEN BEGIN
                                                                    rRsv.MODIFYALL("N§ Habitaciones", "N§ Habitaciones", TRUE);
                                                                  END;

                                                                  "Modificacion critica" := TRUE;
                                                                  "Cambiar booking" := TRUE;

                                                                  // Historico

                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", "N§ Reserva", 2, FIELDCAPTION("N§ Habitaciones"),
                                                                                      STRSUBSTNO('%1', xRec."N§ Habitaciones"), STRSUBSTNO('%1', "N§ Habitaciones"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Rooms No.;
                                                              ESP=N§ Habitaciones] }
    { 47  ;   ;Habitacion          ;Code10        ;TableRelation="Conversion Habitacion"."Habitacion cupo" WHERE (Delegacion=FIELD(Delegacion),
                                                                                                                  N§ Contrato=FIELD(Contrato compra),
                                                                                                                  Tipo contrato=CONST(Compra));
                                                   OnValidate=BEGIN
                                                                IF (Habitacion <> xRec.Habitacion) OR ("Pendiente asignar") THEN BEGIN
                                                                  IF NOT Responsable THEN BEGIN
                                                                    Habitacion := xRec.Habitacion;
                                                                    EXIT;
                                                                  END;

                                                                  buscar_habitacion(TRUE);
                                                                  comprobar_paro_ventas("Hotel origen precios");

                                                                  rHab.SETRANGE(Delegacion       , Delegacion);
                                                                  rHab.SETRANGE("N§ Contrato"    , "Contrato compra");
                                                                  rHab.SETRANGE("Tipo contrato"  , rHab."Tipo contrato"::Compra);
                                                                  rHab.SETRANGE("Habitacion cupo", Habitacion);
                                                                  IF NOT rHab.FIND('-') THEN
                                                                    ERROR(Text012, Habitacion, "Contrato compra");
                                                                  "Habitacion TO" := rHab."Habitacion TO";
                                                                  "Habitacion basica" := rHab."Habitacion basica";

                                                                  // Pasar a acompa¤antes

                                                                  rRsv.RESET;
                                                                  rRsv.SETCURRENTKEY(Delegacion,
                                                                                     "N§ Responsable");
                                                                  rRsv.SETRANGE(Delegacion      , Delegacion);
                                                                  rRsv.SETRANGE("N§ Responsable", "N§ Reserva");
                                                                  rRsv.SETRANGE(Responsable     , FALSE);
                                                                  IF rRsv.FIND('-') THEN BEGIN
                                                                    rRsv.MODIFYALL(Habitacion, Habitacion, TRUE);
                                                                    rRsv.MODIFYALL("Habitacion basica", "Habitacion basica", TRUE);
                                                                  END;

                                                                  "Modificacion critica" := TRUE;
                                                                  "Cambiar booking" := TRUE;

                                                                  // Historico

                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", "N§ Reserva", 2,
                                                                                      FIELDCAPTION(Habitacion), xRec.Habitacion, Habitacion);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Room;
                                                              ESP=Habitacion];
                                                   Description=FK Conversion habitacion }
    { 49  ;   ;Habitacion TO       ;Code10        ;TableRelation="Conversion Habitacion"."Habitacion TO" WHERE (Delegacion=FIELD(Delegacion),
                                                                                                                N§ Contrato=FIELD(Contrato compra),
                                                                                                                Tipo contrato=CONST(Compra));
                                                   OnValidate=BEGIN
                                                                IF ("Habitacion TO" <> xRec."Habitacion TO") THEN BEGIN
                                                                  IF NOT Responsable THEN BEGIN
                                                                    "Habitacion TO" := xRec."Habitacion TO";
                                                                    EXIT;
                                                                  END;

                                                                  rHab.RESET;
                                                                  rHab.SETRANGE(Delegacion     , Delegacion);
                                                                  rHab.SETRANGE("N§ Contrato"  , "Contrato compra");
                                                                  rHab.SETRANGE("Tipo contrato", rHab."Tipo contrato"::Compra);
                                                                  rHab.SETRANGE("Habitacion TO", "Habitacion TO");
                                                                  IF rHab.FIND('-') THEN BEGIN
                                                                    Habitacion := rHab."Habitacion cupo";
                                                                    buscar_habitacion(TRUE);
                                                                    comprobar_paro_ventas("Hotel origen precios");
                                                                    "Habitacion basica" := rHab."Habitacion basica";
                                                                  END
                                                                  ELSE
                                                                    ERROR(Text013);

                                                                  // Pasar a acompa¤antes

                                                                  rRsv.RESET;
                                                                  rRsv.SETCURRENTKEY(Delegacion,
                                                                                     "N§ Responsable");
                                                                  rRsv.SETRANGE(Delegacion      , Delegacion);
                                                                  rRsv.SETRANGE("N§ Responsable", "N§ Reserva");
                                                                  rRsv.SETRANGE(Responsable     , FALSE);
                                                                  IF rRsv.FIND('-') THEN BEGIN
                                                                    rRsv.MODIFYALL("Habitacion TO", "Habitacion TO", TRUE);
                                                                    rRsv.MODIFYALL(Habitacion, Habitacion, TRUE);
                                                                    rRsv.MODIFYALL("Habitacion basica", "Habitacion basica", TRUE);
                                                                  END;

                                                                  "Modificacion critica" := TRUE;
                                                                  "Cambiar booking" := TRUE;

                                                                  // Historico

                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", "N§ Reserva", 2,
                                                                                      FIELDCAPTION("Habitacion TO"), xRec."Habitacion TO", "Habitacion TO");

                                                                END;
                                                              END;

                                                   CaptionML=[ENU=TO room;
                                                              ESP=Habitacion TO] }
    { 51  ;   ;Regimen             ;Code10        ;TableRelation=Regimen.Regimen;
                                                   OnValidate=BEGIN
                                                                IF (Regimen <> xRec.Regimen) OR ("Pendiente asignar") THEN BEGIN
                                                                  "Regimen TO" := '';
                                                                {*  IF Responsable THEN *}
                                                                    buscar_regimen;

                                                                  // Pasar a acompa¤antes

                                                                  IF Responsable THEN BEGIN
                                                                    rRsv.RESET;
                                                                    rRsv.SETCURRENTKEY(Delegacion,
                                                                                       "N§ Responsable");
                                                                    rRsv.SETRANGE(Delegacion      , Delegacion);
                                                                    rRsv.SETRANGE("N§ Responsable", "N§ Reserva");
                                                                    rRsv.SETRANGE(Responsable     , FALSE);
                                                                    IF rRsv.FIND('-') THEN BEGIN
                                                                      rRsv.MODIFYALL(Regimen, Regimen, TRUE);
                                                                      rRsv.MODIFYALL("Regimen TO", "Regimen TO", TRUE);
                                                                    END;
                                                                  END;

                                                                  "Modificacion critica" := TRUE;
                                                                  "Cambiar booking" := TRUE;

                                                                  // Historico

                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", "N§ Reserva", 2,
                                                                                      FIELDCAPTION(Regimen), xRec.Regimen, Regimen);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Board;
                                                              ESP=Regimen];
                                                   Description=FK Regimen }
    { 53  ;   ;Regimen TO          ;Code10        ;OnValidate=BEGIN
                                                                IF ("Regimen TO" <> xRec."Regimen TO") THEN BEGIN
                                                                  IF rRegTO.GET(TourOperador, "Regimen TO") THEN BEGIN
                                                                    Regimen := rRegTO.Regimen;
                                                                    IF Responsable THEN
                                                                      buscar_regimen;
                                                                  END
                                                                  ELSE
                                                                    ERROR(Text014, "Regimen TO", TourOperador);

                                                                  // Pasar a acompa¤antes

                                                                  IF Responsable THEN BEGIN
                                                                    rRsv.RESET;
                                                                    rRsv.SETCURRENTKEY(Delegacion,
                                                                                       "N§ Responsable");
                                                                    rRsv.SETRANGE(Delegacion      , Delegacion);
                                                                    rRsv.SETRANGE("N§ Responsable", "N§ Reserva");
                                                                    rRsv.SETRANGE(Responsable     , FALSE);
                                                                    IF rRsv.FIND('-') THEN BEGIN
                                                                      rRsv.MODIFYALL("Regimen TO", "Regimen TO", TRUE);
                                                                    END;
                                                                  END;

                                                                  "Modificacion critica" := TRUE;
                                                                  "Cambiar booking" := TRUE;

                                                                  // Historico

                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", "N§ Reserva", 2,
                                                                                      FIELDCAPTION("Regimen TO"), xRec."Regimen TO", "Regimen TO");
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              rCab.RESET;
                                                              IF rCab.GET(Delegacion, "N§ Interno") THEN BEGIN
                                                                rRegTO.RESET;
                                                                rRegTO.SETRANGE(TourOperador, rCab.TourOperador);
                                                                IF FORM.RUNMODAL(7009725, rRegTO) = ACTION::LookupOK THEN BEGIN
                                                                  Regimen := rRegTO.Regimen;
                                                                  "Regimen TO" := rRegTO."Regimen TO";
                                                                END;
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=TO Board;
                                                              ESP=Regimen TO] }
    { 55  ;   ;Hotel reservado     ;Code20        ;TableRelation=Hotel.Hotel;
                                                   OnValidate=BEGIN
                                                                IF ("Hotel reservado" <> xRec."Hotel reservado") THEN BEGIN
                                                                  IF CurrFieldNo = FIELDNO("Hotel reservado") THEN
                                                                    ERROR(Text015);
                                                                  IF NOT Responsable THEN BEGIN
                                                                    "Hotel reservado" := xRec."Hotel reservado";
                                                                    EXIT;
                                                                  END;
                                                                  "Hotel booking" := "Hotel reservado";
                                                                  "Hotel venta" := "Hotel reservado";

                                                                  // Traspasar a los otros Hoteles

                                                                  VALIDATE("Hotel booking", "Hotel reservado");
                                                                  VALIDATE("Hotel venta", "Hotel reservado");
                                                                  VALIDATE("Hotel origen precios", "Hotel reservado");
                                                                  VALIDATE("Hotel Factura", "Hotel reservado");

                                                                  // Pasar a acompa¤antes

                                                                  rRsv.RESET;
                                                                  rRsv.SETCURRENTKEY(Delegacion,
                                                                                     "N§ Responsable");
                                                                  rRsv.SETRANGE(Delegacion      , Delegacion);
                                                                  rRsv.SETRANGE("N§ Responsable", "N§ Reserva");
                                                                  rRsv.SETRANGE(Responsable     , FALSE);
                                                                  IF rRsv.FIND('-') THEN BEGIN
                                                                    rRsv.MODIFYALL("Hotel reservado", "Hotel reservado", TRUE);
                                                                  END;

                                                                  // Historico

                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", "N§ Reserva",0,
                                                                                      FIELDCAPTION("Hotel reservado"), xRec."Hotel reservado","Hotel reservado");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Booked hotel;
                                                              ESP=Hotel Reservado];
                                                   Description=FK Hotel }
    { 57  ;   ;Hotel TO            ;Code20        ;OnValidate=BEGIN
                                                                IF ("Hotel TO" <> xRec."Hotel TO") THEN BEGIN
                                                                  IF NOT Responsable THEN BEGIN
                                                                    "Hotel TO" := xRec."Hotel TO";
                                                                    EXIT;
                                                                  END;

                                                                  rConHotel.RESET;
                                                                  rConHotel.SETRANGE(TourOperador        , rCab.TourOperador);
                                                                  rConHotel.SETRANGE("Touroperador venta", TourOperador);
                                                                  rConHotel.SETRANGE("Hotel TO"          , "Hotel TO");
                                                                  IF NOT rConHotel.FINDFIRST THEN BEGIN
                                                                    rConHotel.SETRANGE("Touroperador venta", '');
                                                                    IF NOT rConHotel.FINDFIRST THEN
                                                                      CLEAR(rConHotel);
                                                                  END;

                                                                  IF rConHotel."Hotel estancia" <> '' THEN BEGIN
                                                                    VALIDATE("Hotel reservado", rConHotel."Hotel estancia");
                                                                    "Hotel TO" := rConHotel."Hotel TO";
                                                                    IF (rConHotel."Hotel precios" <> '') AND (rConHotel."Hotel precios" <> rConHotel."Hotel estancia") THEN BEGIN
                                                                      "Hotel origen precios" := rConHotel."Hotel precios";
                                                                      "Hotel Factura"        := rConHotel."Hotel precios";
                                                                    END;
                                                                  END
                                                                  ELSE
                                                                    ERROR(Text016);

                                                                  // Pasar a acompa¤antes

                                                                  rRsv.RESET;
                                                                  rRsv.SETCURRENTKEY(Delegacion,
                                                                                     "N§ Responsable");
                                                                  rRsv.SETRANGE(Delegacion      , Delegacion);
                                                                  rRsv.SETRANGE("N§ Responsable", "N§ Reserva");
                                                                  rRsv.SETRANGE(Responsable     , FALSE);
                                                                  IF rRsv.FIND('-') THEN BEGIN
                                                                    rRsv.MODIFYALL("Hotel TO", "Hotel TO", TRUE);
                                                                  END;

                                                                  // Historico

                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", "N§ Reserva", 2,
                                                                                      FIELDCAPTION("Hotel TO"), xRec."Hotel TO", "Hotel TO");
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF rCab.GET(Delegacion, "N§ Interno") THEN BEGIN
                                                                rConHotel.SETRANGE(TourOperador, rCab.TourOperador);
                                                                IF FORM.RUNMODAL(7009733, rConHotel) = ACTION::LookupOK THEN
                                                                  VALIDATE("Hotel TO", rConHotel."Hotel TO");
                                                                rConHotel.SETRANGE(TourOperador);
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=TO Hotel;
                                                              ESP=Hotel TO] }
    { 59  ;   ;Estancia            ;Integer       ;CaptionML=[ENU=Stay;
                                                              ESP=Estancia];
                                                   Editable=No }
    { 61  ;   ;Fecha venta         ;Date          ;CaptionML=[ENU=Sale date;
                                                              ESP=Fecha venta];
                                                   Editable=No }
    { 63  ;   ;Comentarios         ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist(Comentarios WHERE (Delegacion=FIELD(Delegacion),
                                                                                        N§ Interno=FIELD(N§ Interno)));
                                                   CaptionML=[ENU=Comments;
                                                              ESP=Comentarios];
                                                   Description=Calculado sobre comentarios;
                                                   Editable=No }
    { 65  ;   ;N§ persona          ;Integer       ;CaptionML=[ENU=Person No.;
                                                              ESP=N§ Persona];
                                                   Editable=No }
    { 67  ;   ;Responsable         ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[ENU="Responsible ";
                                                              ESP=Responsable] }
    { 69  ;   ;N§ Responsable      ;Integer       ;CaptionML=[ENU=Responsible No.;
                                                              ESP=N§ Responsable];
                                                   Editable=No }
    { 71  ;   ;Precio Manual       ;Decimal       ;OnValidate=BEGIN
                                                                IF "Precio Manual" <> xRec."Precio Manual" THEN BEGIN
                                                                  IF NOT Responsable THEN BEGIN
                                                                    "Precio Manual" := xRec."Precio Manual";
                                                                    EXIT;
                                                                  END;

                                                                  // Historico

                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", "N§ Reserva", 2, FIELDCAPTION("Precio Manual"),
                                                                                      STRSUBSTNO('%1', xRec."Precio Manual"), STRSUBSTNO('%1', "Precio Manual"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Manual price;
                                                              ESP=Precio manual];
                                                   AutoFormatType=2;
                                                   AutoFormatExpr="C¢d. divisa" }
    { 73  ;   ;Tipo precio manual  ;Option        ;OnValidate=BEGIN
                                                                IF "Tipo precio manual" <> xRec."Tipo precio manual" THEN BEGIN
                                                                  IF NOT Responsable THEN BEGIN
                                                                    "Tipo precio manual" := xRec."Tipo precio manual";
                                                                    EXIT;
                                                                  END;

                                                                  // Historico

                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", "N§ Reserva", 2, FIELDCAPTION("Tipo precio manual"),
                                                                                      STRSUBSTNO('%1', xRec."Tipo precio manual"), STRSUBSTNO('%1', "Tipo precio manual"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Manual price type;
                                                              ESP=Tipo precio manual];
                                                   OptionCaptionML=[ENU=,Per pax,Per room,Do not apply,Per Stay;
                                                                    ESP=,Por Pax,Por Habitacion,No Aplicar,Por Estancia];
                                                   OptionString=,Por Pax,Por Habitacion,No Aplicar,Por Estancia }
    { 75  ;   ;Precio Manual venta ;Decimal       ;OnValidate=BEGIN
                                                                IF "Precio Manual venta" <> xRec."Precio Manual venta" THEN BEGIN
                                                                  IF NOT Responsable THEN BEGIN
                                                                    "Precio Manual venta" := xRec."Precio Manual venta";
                                                                    EXIT;
                                                                  END;

                                                                  // Historico

                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", "N§ Reserva", 2, FIELDCAPTION("Precio Manual venta"),
                                                                                      STRSUBSTNO('%1', xRec."Precio Manual venta"), STRSUBSTNO('%1', "Precio Manual venta"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Manual sale price;
                                                              ESP=Precio manual venta];
                                                   AutoFormatType=2;
                                                   AutoFormatExpr="C¢d. divisa" }
    { 77  ;   ;Producto            ;Code10        ;TableRelation="Producto agencia".Codigo;
                                                   CaptionML=[ENU=Item;
                                                              ESP=Producto];
                                                   Description=FK Producto Agencia }
    { 79  ;   ;Hotel origen precios;Code20        ;TableRelation=Hotel.Hotel;
                                                   OnValidate=BEGIN
                                                                IF ("Hotel origen precios" <> xRec."Hotel origen precios") THEN BEGIN
                                                                  IF NOT Responsable THEN BEGIN
                                                                    "Hotel origen precios" := xRec."Hotel origen precios";
                                                                    EXIT;
                                                                  END;
                                                                  comprobar_paro_ventas("Hotel origen precios");
                                                                  buscar_contrato;
                                                                  buscar_habitacion(TRUE);
                                                                  buscar_regimen;

                                                                  // Pasar a acompa¤antes

                                                                  rRsv.RESET;
                                                                  rRsv.SETCURRENTKEY(Delegacion,
                                                                                     "N§ Responsable");
                                                                  rRsv.SETRANGE(Delegacion      , Delegacion);
                                                                  rRsv.SETRANGE("N§ Responsable", "N§ Reserva");
                                                                  rRsv.SETRANGE(Responsable     , FALSE);
                                                                  IF rRsv.FIND('-') THEN BEGIN
                                                                    rRsv.MODIFYALL("Hotel origen precios", "Hotel origen precios", TRUE);
                                                                  END;

                                                                  "Modificacion critica" := TRUE;

                                                                  // Historico

                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", "N§ Reserva", 2,
                                                                                      FIELDCAPTION("Hotel origen precios"), xRec."Hotel origen precios", "Hotel origen precios");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Hotel origin prices;
                                                              ESP=Hotel origen precios];
                                                   Description=FK Hotel }
    { 81  ;   ;Hotel booking       ;Code20        ;TableRelation=Hotel.Hotel;
                                                   OnValidate=BEGIN
                                                                IF ("Hotel booking" <> xRec."Hotel booking") THEN BEGIN
                                                                  IF NOT Responsable THEN BEGIN
                                                                    "Hotel booking" := xRec."Hotel booking";
                                                                    EXIT;
                                                                  END;
                                                                  buscar_habitacion(FALSE);
                                                                  IF rHot.GET("Hotel booking") THEN BEGIN
                                                                    IF rHot.NoName THEN
                                                                      "Pendiente asignar" := TRUE
                                                                    ELSE
                                                                      "Pendiente asignar" := FALSE;
                                                                    "Zona hotel" := rHot."Zona Fisica";
                                                                    "Hotel Factura" := "Hotel booking";
                                                                  END;

                                                                  // Pasar a acompa¤antes

                                                                  rRsv.RESET;
                                                                  rRsv.SETCURRENTKEY(Delegacion,
                                                                                     "N§ Responsable");
                                                                  rRsv.SETRANGE(Delegacion      , Delegacion);
                                                                  rRsv.SETRANGE("N§ Responsable", "N§ Reserva");
                                                                  rRsv.SETRANGE(Responsable     , FALSE);
                                                                  IF rRsv.FIND('-') THEN BEGIN
                                                                    rRsv.MODIFYALL("Pendiente asignar", "Pendiente asignar");
                                                                    rRsv.MODIFYALL("Zona hotel", "Zona hotel");
                                                                    rRsv.MODIFYALL("Hotel booking", "Hotel booking");
                                                                    rRsv.MODIFYALL("Hotel Factura", "Hotel Factura", TRUE);
                                                                  END;

                                                                  "Modificacion critica" := TRUE;
                                                                  "Cambiar booking" := TRUE;

                                                                  // Historico

                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", "N§ Reserva", 2,
                                                                                      FIELDCAPTION("Hotel booking"), xRec."Hotel booking", "Hotel booking");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Booking Hotel;
                                                              ESP=Hotel booking];
                                                   Description=FK Hotel }
    { 83  ;   ;Zona hotel          ;Code10        ;TableRelation="Zona fisica"."Zona Fisica";
                                                   CaptionML=[ENU=Hotel zone;
                                                              ESP=Zona hotel];
                                                   Description=FK Zona Fisica;
                                                   Editable=No }
    { 85  ;   ;Ultimo dia release  ;Date          ;OnValidate=BEGIN
                                                                IF ("Fecha entrada" <> 0D) AND(Habitacion <> '') AND
                                                                   (TourOperador <> '') THEN BEGIN
                                                                  IF rConC.GET(Delegacion, "Contrato compra") THEN BEGIN
                                                                    rCupoC.SETRANGE (Delegacion          , rConC.Delegacion);
                                                                    rCupoC.SETRANGE ("N§ Contrato compra", rConC."N§ Contrato compra");
                                                                    rCupoC.SETRANGE ("Habitacion cupo"   , Habitacion);
                                                                    rCupoC.SETFILTER("Fecha desde"       , '<=%1', "Fecha entrada");
                                                                    rCupoC.SETFILTER("Fecha hasta"       , '>=%1', "Fecha entrada");
                                                                    IF rCupoC.FIND('-') THEN
                                                                      "Ultimo dia release" := "Fecha entrada" - rCupoC.Release;
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Last day release;
                                                              ESP=Ultimo dia release];
                                                   Editable=No }
    { 87  ;   ;Fuera cupo          ;Boolean       ;CaptionML=[ENU=Out of allotment;
                                                              ESP=Fuera cupo];
                                                   Editable=No }
    { 89  ;   ;Fuera garantia      ;Boolean       ;CaptionML=[ENU=Out of guarantee;
                                                              ESP=Fuera garantia];
                                                   Editable=No }
    { 91  ;   ;Hotel Factura       ;Code20        ;TableRelation=Hotel.Hotel;
                                                   OnValidate=BEGIN
                                                                IF ("Hotel Factura" <> xRec."Hotel Factura") THEN BEGIN
                                                                  IF NOT Responsable THEN BEGIN
                                                                    "Hotel Factura" := xRec."Hotel Factura";
                                                                    EXIT;
                                                                  END;
                                                                  IF (rHot.GET("Hotel Factura")) AND (CurrFieldNo = FIELDNO("Hotel Factura")) THEN
                                                                    IF rHot.NoName THEN
                                                                      ERROR(Text018);

                                                                  // Pasar a acompa¤antes

                                                                  rRsv.RESET;
                                                                  rRsv.SETCURRENTKEY(Delegacion,
                                                                                     "N§ Responsable");
                                                                  rRsv.SETRANGE(Delegacion      , Delegacion);
                                                                  rRsv.SETRANGE("N§ Responsable", "N§ Reserva");
                                                                  rRsv.SETRANGE(Responsable     , FALSE);
                                                                  IF rRsv.FIND('-') THEN BEGIN
                                                                    rRsv.MODIFYALL("Hotel Factura", "Hotel Factura", TRUE);
                                                                  END;

                                                                  // Historico

                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", "N§ Reserva", 2,
                                                                                      FIELDCAPTION("Hotel Factura"), xRec."Hotel Factura", "Hotel Factura");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Invoice Hotel;
                                                              ESP=Hotel Factura];
                                                   Description=FK Hotel }
    { 93  ;   ;C¢d. divisa         ;Code10        ;TableRelation=Currency.Code;
                                                   CaptionML=[ENU=Currency exchange;
                                                              ESP=C¢d. divisa];
                                                   Description=FK Divisa }
    { 95  ;   ;Comunicado hotel    ;Boolean       ;CaptionML=[ENU=Hotel report;
                                                              ESP=Comunicado hotel];
                                                   Editable=Yes }
    { 97  ;   ;N§ envio hotel      ;Integer       ;CaptionML=[ENU=Hotel sending No.;
                                                              ESP=N§ envio hotel] }
    { 99  ;   ;Hotel venta         ;Code20        ;TableRelation=Hotel.Hotel;
                                                   OnValidate=BEGIN
                                                                IF ("Hotel venta" <> xRec."Hotel venta") THEN BEGIN
                                                                  IF NOT Responsable THEN BEGIN
                                                                    "Hotel venta" := xRec."Hotel venta";
                                                                    EXIT;
                                                                  END;
                                                                  buscar_contrato;
                                                                  buscar_habitacion(TRUE);
                                                                  buscar_regimen;

                                                                  // Pasar a acompa¤antes

                                                                  rRsv.RESET;
                                                                  rRsv.SETCURRENTKEY(Delegacion,
                                                                                     "N§ Responsable");
                                                                  rRsv.SETRANGE(Delegacion      , Delegacion);
                                                                  rRsv.SETRANGE("N§ Responsable", "N§ Reserva");
                                                                  rRsv.SETRANGE(Responsable     , FALSE);
                                                                  IF rRsv.FIND('-') THEN BEGIN
                                                                    rRsv.MODIFYALL("Hotel venta", "Hotel venta", TRUE);
                                                                  END;

                                                                  "Modificacion critica" := TRUE;

                                                                  // Historico

                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", "N§ Reserva", 2,
                                                                                      FIELDCAPTION("Hotel venta"), xRec."Hotel venta", "Hotel venta");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Sale hotel;
                                                              ESP=Hotel venta];
                                                   Description=FK Hotel }
    { 101 ;   ;Idioma              ;Code10        ;TableRelation=Language.Code;
                                                   OnValidate=BEGIN
                                                                IF Idioma <> xRec.Idioma THEN BEGIN
                                                                  // Pasar a acompa¤antes

                                                                  rRsv.RESET;
                                                                  rRsv.SETCURRENTKEY(Delegacion,
                                                                                     "N§ Responsable");
                                                                  rRsv.SETRANGE(Delegacion      , Delegacion);
                                                                  rRsv.SETRANGE("N§ Responsable", "N§ Reserva");
                                                                  rRsv.SETRANGE(Responsable     , FALSE);
                                                                  IF rRsv.FIND('-') THEN BEGIN
                                                                    rRsv.MODIFYALL(Idioma, Idioma, TRUE);
                                                                  END;

                                                                  // Historico

                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", "N§ Reserva", 2,
                                                                                      FIELDCAPTION(Idioma), xRec.Idioma, Idioma);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Language;
                                                              ESP=Idioma];
                                                   Description=FK Idioma }
    { 103 ;   ;Autorizar cupo excedido;Boolean    ;CaptionML=[ENU=Exceeded authorized allotment;
                                                              ESP=Autorizar cupo excedido] }
    { 105 ;   ;Confirmacion hotel  ;Boolean       ;CaptionML=[ENU=Hotel confirmation;
                                                              ESP=Confirmacion hotel];
                                                   Editable=No }
    { 107 ;   ;Llegada cerrada     ;Boolean       ;CaptionML=[ENU=Closed Arrival;
                                                              ESP=Llegada cerrada];
                                                   Editable=No }
    { 109 ;   ;Procesando cierre   ;Boolean       ;CaptionML=[ENU=Processing closure;
                                                              ESP=Procesando cierre];
                                                   Editable=No }
    { 111 ;   ;Nombre acep. listado;Text30        ;CaptionML=[ENU=Accep. Name listed;
                                                              ESP=Nombre acep. listado] }
    { 113 ;   ;Fecha envio         ;Date          ;CaptionML=[ENU=Sending date;
                                                              ESP=Fecha envio];
                                                   Editable=No }
    { 115 ;   ;Hora envio          ;Time          ;CaptionML=[ENU=Sending time;
                                                              ESP=Hora envio];
                                                   Editable=No }
    { 117 ;   ;Usuario envio       ;Code20        ;TableRelation=User."User ID";
                                                   CaptionML=[ENU=Sending user;
                                                              ESP=Usuario envio];
                                                   Description=FK Usuario }
    { 119 ;   ;Pendiente calculo   ;Boolean       ;InitValue=Yes;
                                                   OnValidate=BEGIN
                                                                IF "Pendiente calculo" <> xRec."Pendiente calculo" THEN BEGIN
                                                                  // Historico

                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", "N§ Reserva", 2,
                                                                                      FIELDCAPTION("Pendiente calculo"), FORMAT(xRec."Pendiente calculo"), FORMAT("Pendiente calculo"));

                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Calculation remaining;
                                                              ESP=Pendiente calculo];
                                                   Editable=No }
    { 121 ;   ;Enviar delegacion   ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[ENU=Send local office;
                                                              ESP=Enviar delegacion] }
    { 123 ;   ;Ultimo n§  cierre   ;Integer       ;CaptionML=[ENU=Last closure No.;
                                                              ESP=Ultimo n§  cierre];
                                                   Editable=No }
    { 125 ;   ;Pendiente asignar   ;Boolean       ;OnValidate=BEGIN
                                                                cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", "N§ Reserva", 2,
                                                                                      FIELDCAPTION("Pendiente asignar"),
                                                                                      FORMAT(xRec."Pendiente asignar"),
                                                                                      FORMAT("Pendiente asignar"));
                                                              END;

                                                   CaptionML=[ENU=Remaining to be assigned;
                                                              ESP=Pendiente asignar];
                                                   Editable=No }
    { 127 ;   ;Contrato compra     ;Code10        ;TableRelation="Contrato compra hotel"."N§ Contrato compra" WHERE (Delegacion=FIELD(Delegacion));
                                                   OnValidate=BEGIN
                                                                IF ("Contrato compra" <> xRec."Contrato compra") THEN
                                                                BEGIN
                                                                  // Pasar a acompa¤antes

                                                                  rRsv.RESET;
                                                                  rRsv.SETCURRENTKEY(Delegacion,
                                                                                     "N§ Responsable");
                                                                  rRsv.SETRANGE(Delegacion      , Delegacion);
                                                                  rRsv.SETRANGE("N§ Responsable", "N§ Reserva");
                                                                  rRsv.SETRANGE(Responsable     , FALSE);
                                                                  IF rRsv.FINDSET(TRUE) THEN
                                                                  BEGIN
                                                                    rRsv.MODIFYALL("Contrato compra", "Contrato compra", TRUE);
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Purchate contract;
                                                              ESP=Contrato compra];
                                                   Description=FK Contrato compra hotel;
                                                   Editable=No }
    { 129 ;   ;Tipo contrato       ;Option        ;OnValidate=BEGIN
                                                                IF ("Tipo contrato" <> xRec."Tipo contrato") THEN
                                                                BEGIN
                                                                  // Pasar a acompa¤antes

                                                                  rRsv.RESET;
                                                                  rRsv.SETCURRENTKEY(Delegacion,
                                                                                     "N§ Responsable");
                                                                  rRsv.SETRANGE(Delegacion      , Delegacion);
                                                                  rRsv.SETRANGE("N§ Responsable", "N§ Reserva");
                                                                  rRsv.SETRANGE(Responsable     , FALSE);
                                                                  IF rRsv.FINDSET(TRUE) THEN
                                                                  BEGIN
                                                                    rRsv.MODIFYALL("Tipo contrato", "Tipo contrato", TRUE);
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Contract type;
                                                              ESP=Tipo contrato];
                                                   OptionCaptionML=[ENU=,Intermediary with hotel payment,Intermediary with pro-forma invoice,On its own behalf;
                                                                    ESP=,Intermediacion con Hotel Payment,Intermediacion con Proforma,En nombre propio];
                                                   OptionString=,Intermediacion con Hotel Payment,Intermediacion con Proforma,En nombre propio;
                                                   Editable=No }
    { 131 ;   ;Contrato venta      ;Code10        ;TableRelation="Contrato venta hotel"."N§ Contrato venta" WHERE (Delegacion=FIELD(Delegacion));
                                                   OnValidate=BEGIN
                                                                IF ("Contrato venta" <> xRec."Contrato venta") THEN
                                                                BEGIN
                                                                  // Pasar a acompa¤antes

                                                                  rRsv.RESET;
                                                                  rRsv.SETCURRENTKEY(Delegacion,
                                                                                     "N§ Responsable");
                                                                  rRsv.SETRANGE(Delegacion      , Delegacion);
                                                                  rRsv.SETRANGE("N§ Responsable", "N§ Reserva");
                                                                  rRsv.SETRANGE(Responsable     , FALSE);
                                                                  IF rRsv.FINDSET(TRUE) THEN
                                                                  BEGIN
                                                                    rRsv.MODIFYALL("Contrato venta", "Contrato venta", TRUE);
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU="Sale contract ";
                                                              ESP=Contrato venta];
                                                   Description=FK Contrato venta hotel;
                                                   Editable=No }
    { 133 ;   ;Delegacion          ;Code10        ;TableRelation=Delegacion.Codigo;
                                                   CaptionML=[ENU=Local Office;
                                                              ESP=Delegacion];
                                                   Description=FK Delegacion;
                                                   Editable=No }
    { 135 ;   ;Tipo Persona Facturacion;Code10    ;TableRelation="Tipo elemento"."Tipo elemento" WHERE (Humano=CONST(Yes));
                                                   CaptionML=[ENU=Type of invoicing person;
                                                              ESP=Tipo Persona Facturacion];
                                                   Description=FK Tipo elemento;
                                                   Editable=No }
    { 137 ;   ;Oferta excluyente   ;Boolean       ;CaptionML=[ENU=Exclusive offer;
                                                              ESP=Oferta excluyente];
                                                   Editable=No }
    { 139 ;   ;Fin estancia        ;Date          ;CaptionML=[ENU=End of stay;
                                                              ESP=Fin estancia] }
    { 141 ;   ;Calculo unico       ;Boolean       ;CaptionML=[ENU=Unique calculation;
                                                              ESP=Calculo unico] }
    { 143 ;   ;Mantenimiento       ;Boolean       ;InitValue=Yes;
                                                   OnValidate=BEGIN
                                                                IF NOT Responsable THEN
                                                                BEGIN
                                                                  Mantenimiento := xRec.Mantenimiento;
                                                                  EXIT;
                                                                END;

                                                                // Pasar a acompa¤antes

                                                                rRsv.RESET;
                                                                rRsv.SETCURRENTKEY(Delegacion,
                                                                                   "N§ Responsable");
                                                                rRsv.SETRANGE(Delegacion      , Delegacion);
                                                                rRsv.SETRANGE("N§ Responsable", "N§ Reserva");
                                                                rRsv.SETRANGE(Responsable     , FALSE);
                                                                IF rRsv.FINDSET(TRUE) THEN BEGIN
                                                                  rRsv.MODIFYALL(Mantenimiento, Mantenimiento, TRUE);
                                                                END;

                                                                // modificamos la cabecera y los periodos

                                                                IF rCab.GET(Delegacion, "N§ Interno") THEN BEGIN
                                                                  rCab.Mantenimiento := NOT Mantenimiento ;
                                                                  rCab.MODIFY(TRUE);
                                                                  rPerio.RESET;
                                                                  rPerio.SETRANGE(Delegacion  , Delegacion);
                                                                  rPerio.SETRANGE("N§ Interno", "N§ Interno");
                                                                  IF rPerio.FIND('-') THEN BEGIN
                                                                    rPerio.MODIFYALL(Mantenimiento, NOT Mantenimiento, TRUE);
                                                                  END;
                                                                  rPerio.RESET;
                                                                END;

                                                                // modificamos la reserva de transfers del mismo periodo

                                                                rRsvTra.RESET;
                                                                rRsvTra.SETCURRENTKEY(Delegacion,
                                                                                      "N§ Interno",
                                                                                      "N§ Periodo");
                                                                rRsvTra.SETRANGE(Delegacion  , Delegacion);
                                                                rRsvTra.SETRANGE("N§ Interno", "N§ Interno");
                                                                rRsvTra.SETRANGE("N§ Periodo", "N§ Periodo");
                                                                IF rRsvTra.FIND('-') THEN
                                                                  rRsvTra.MODIFYALL(Mantenimiento, Mantenimiento, FALSE);
                                                                rRsvTra.RESET;

                                                                // Historico

                                                                cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", "N§ Reserva", 2, FIELDCAPTION(Mantenimiento),
                                                                                    STRSUBSTNO('%1', xRec.Mantenimiento), STRSUBSTNO('%1', Mantenimiento));
                                                              END;

                                                   CaptionML=[ENU=Maintenance;
                                                              ESP=Mantenimiento] }
    { 145 ;   ;N§ Acompa¤ante      ;Integer       ;CaptionML=[ENU=Companion No.;
                                                              ESP=N§ Acompa¤ante];
                                                   Editable=No }
    { 147 ;   ;Habitacion basica   ;Code10        ;TableRelation="Habitacion basica"."Codigo Habitacion";
                                                   CaptionML=[ENU=Basic Room;
                                                              ESP=Habitacion basica];
                                                   Description=FK Habitacion basica;
                                                   Editable=No }
    { 149 ;   ;Modificacion critica;Boolean       ;CaptionML=[ENU=Critical modification;
                                                              ESP=Modificacion critica];
                                                   Editable=No }
    { 150 ;   ;Paxes               ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Reserva Hotel" WHERE (Delegacion=FIELD(Delegacion),
                                                                                            N§ Responsable=FIELD(N§ Reserva)));
                                                   CaptionML=[ENU=Paxes;
                                                              ESP=Paxes];
                                                   Description=Calculado;
                                                   Editable=No }
    { 151 ;   ;Fecha Recepcion     ;Date          ;CaptionML=[ENU=Receipt date;
                                                              ESP=Fecha recepcion];
                                                   Editable=No }
    { 153 ;   ;Origen reserva      ;Option        ;CaptionML=[ENU=Booking origin;
                                                              ESP=Origen reserva];
                                                   OptionCaptionML=[ENU=Automatic,Manual;
                                                                    ESP=Automatica,Manual];
                                                   OptionString=Automatica,Manual;
                                                   Editable=No }
    { 154 ;   ;Cambiar booking     ;Boolean       ;CaptionML=[ENU=Change booking;
                                                              ESP=Cambiar booking];
                                                   Editable=No }
    { 156 ;   ;Num confirmacion hotel;Code20      ;OnValidate=BEGIN
                                                                IF xRec."Num confirmacion hotel" <> "Num confirmacion hotel" THEN BEGIN
                                                                  rRsvDiaCmp.RESET;
                                                                  rRsvDiaCmp.SETCURRENTKEY(Delegacion,
                                                                                           "N§ Reserva");
                                                                  rRsvDiaCmp.SETRANGE(Delegacion  , Delegacion);
                                                                  rRsvDiaCmp.SETRANGE("N§ Reserva", "N§ Reserva");
                                                                  IF rRsvDiaCmp.FIND('-') THEN
                                                                    rRsvDiaCmp.MODIFYALL("Num confirmacion hotel", "Num confirmacion hotel");

                                                                  // Registramos el numero de confirmacion en la tabla relacionada con los documentos escaneados
                                                                  cFunVar.ValidateNumConfirmacion("N§ envio hotel", "Num confirmacion hotel", Delegacion, "N§ Reserva");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Hotel No confirmation;
                                                              ESP=Num confirmacion hotel] }
    { 157 ;   ;Codigo Grupo        ;Code10        ;CaptionML=[ENU=Group code;
                                                              ESP=Codigo Grupo];
                                                   Editable=No }
    { 159 ;   ;Exportado Hotel     ;Boolean       ;InitValue=No;
                                                   CaptionML=[ENU=Hotel exported;
                                                              ESP=Exportado Hotel] }
    { 161 ;   ;Exportado Fecha     ;Date          ;CaptionML=[ENU=Date exported;
                                                              ESP=Exportado Fecha] }
    { 163 ;   ;N§ envio delegacion ;Integer       ;CaptionML=[ENU=Local Office Sending No.;
                                                              ESP=N§ envio delegacion] }
    { 169 ;   ;Calculo anulado     ;Boolean       ;CaptionML=[ENU=Cancelled calculation;
                                                              ESP=Calculo anulado] }
    { 171 ;   ;N§ Habitacion       ;Code10        ;CaptionML=[ENU=Room No.;
                                                              ESP=N§ Habitacion] }
    { 175 ;   ;TourOperador Venta  ;Code10        ;TableRelation=TourOperador.TourOperador;
                                                   OnValidate=BEGIN
                                                                IF xRec."TourOperador Venta" <> "TourOperador Venta" THEN
                                                                BEGIN
                                                                  IF "Llegada cerrada" THEN
                                                                    ERROR(Text019);
                                                                  IF NOT Responsable THEN
                                                                  BEGIN
                                                                    TourOperador := xRec.TourOperador;
                                                                    EXIT;
                                                                  END;

                                                                  buscar_contrato;
                                                                  buscar_habitacion(TRUE);
                                                                  buscar_regimen;

                                                                  // Traspasar a acompa¤antes

                                                                  rRsv.RESET;
                                                                  rRsv.SETCURRENTKEY(Delegacion,
                                                                                     "N§ Responsable");
                                                                  rRsv.SETRANGE(Delegacion      , Delegacion);
                                                                  rRsv.SETRANGE("N§ Responsable", "N§ Reserva");
                                                                  rRsv.SETRANGE(Responsable     , FALSE);
                                                                  IF rRsv.FINDSET THEN
                                                                  BEGIN
                                                                    rRsv.MODIFYALL("TourOperador Venta", "TourOperador Venta", TRUE);
                                                                  END;

                                                                  "Modificacion critica" := TRUE;
                                                                  "Cambiar booking" := TRUE;

                                                                  // Historico

                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", "N§ Reserva", 2, FIELDCAPTION("TourOperador Venta"),
                                                                                      xRec."TourOperador Venta", "TourOperador Venta");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Sale touroperator;
                                                              ESP=Touroperador venta];
                                                   Description=FK TourOperador }
    { 177 ;   ;N§ Fichero          ;Integer       ;CaptionML=[ENU=File No.;
                                                              ESP=N§ Fichero] }
    { 179 ;   ;N§ Linea            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              ESP=N§ Linea];
                                                   Editable=No }
    { 181 ;   ;Tipo Precio Manual Venta;Option    ;OnValidate=BEGIN
                                                                IF "Tipo Precio Manual Venta" <> xRec."Tipo Precio Manual Venta" THEN BEGIN
                                                                  // Historico

                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", "N§ Reserva", 2,
                                                                                      FIELDCAPTION("Tipo Precio Manual Venta"),
                                                                                      FORMAT(xRec."Tipo Precio Manual Venta"),
                                                                                      FORMAT("Tipo Precio Manual Venta"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Sale Manual Price Type;
                                                              ESP=Tipo Precio Manual Venta];
                                                   OptionCaptionML=[ENU=,Per pax,Per room,Do not apply,Per Stay;
                                                                    ESP=,Por Pax,Por Habitacion,No Aplicar,Por Estancia];
                                                   OptionString=,Por Pax,Por Habitacion,No Aplicar,Por Estancia }
    { 183 ;   ;Modificacion importacion;Boolean   ;CaptionML=[ENU=Importation modification;
                                                              ESP=Modificacion importacion];
                                                   Editable=No }
    { 185 ;   ;N§ exportacion hotel;Integer       ;CaptionML=[ENU=Hotel Exportation No.;
                                                              ESP=N§ exportacion hotel] }
    { 186 ;   ;Replicado           ;Boolean       ;InitValue=No;
                                                   CaptionML=[ENU=Replicated;
                                                              ESP=Replicado];
                                                   Description=Campo usado por el replicador }
    { 188 ;   ;Fecha Nacimiento    ;Date          ;CaptionML=[ENU=Date of Birth;
                                                              ESP=Fecha Nacimiento] }
    { 190 ;   ;Fecha envio alta    ;Date          ;CaptionML=[ENU=Sending date of signature;
                                                              ESP=Fecha envio alta];
                                                   Editable=No }
    { 192 ;   ;Fecha envio ult modificacion;Date  ;CaptionML=[ENU=Sending date of last modification;
                                                              ESP=Fecha envio ult modificacion];
                                                   Editable=No }
    { 194 ;   ;Fecha emision Request;Date         ;CaptionML=[ENU=Request date of issue;
                                                              ESP=Fecha emision Request];
                                                   Editable=No }
    { 196 ;   ;N§ Bono emitido     ;Code10        ;CaptionML=[ENU=Issued Voucher No.;
                                                              ESP=N§ Bono emitido] }
    { 198 ;   ;Fecha emisi¢n bono  ;Date          ;CaptionML=[ENU=Voucher date of issue;
                                                              ESP=Fecha emisi¢n bono] }
    { 200 ;   ;Circuito            ;Code10        ;TableRelation="Maestro circuitos".Circuito;
                                                   CaptionML=[ENU=Circuit;
                                                              ESP=Circuito];
                                                   Description=FK Circuito;
                                                   Editable=No }
    { 201 ;   ;EBB libre           ;Boolean       ;OnValidate=BEGIN
                                                                IF "EBB libre" <> xRec."EBB libre" THEN
                                                                  // Historico

                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", "N§ Reserva", 2,
                                                                                      FIELDCAPTION("EBB libre"), FORMAT(xRec."EBB libre"), FORMAT("EBB libre"));
                                                              END;

                                                   CaptionML=[ENU=EBB free;
                                                              ESP=EBB libre];
                                                   Description=Early Booking }
    { 202 ;   ;Aplica oferta tipo  ;Option        ;OnValidate=BEGIN
                                                                IF "Aplica oferta tipo" <> xRec."Aplica oferta tipo" THEN
                                                                  // Historico

                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", "N§ Reserva", 2,
                                                                                      FIELDCAPTION("Aplica oferta tipo"), FORMAT(xRec."Aplica oferta tipo"),
                                                                                      FORMAT("Aplica oferta tipo"));
                                                              END;

                                                   CaptionML=[ENU=Apply offer type;
                                                              ESP=Aplica oferta tipo];
                                                   OptionCaptionML=[ENU="All,EBB,SPO,Arrival,Free Night,DA=DZ,Any";
                                                                    ESP="Todas,EBB,SPO,Llegada,Free Night,DA=DZ,Ninguna"];
                                                   OptionString=Todas,EBB,SPO,Llegada,Free Night,DA=DZ,Ninguna }
    { 210 ;   ;Hotel  Transfer     ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Conversion hotel"."Hotel Transfer" WHERE (TourOperador=FIELD(TourOperador),
                                                                                                                 Touroperador venta=FIELD(TourOperador Venta),
                                                                                                                 Hotel TO=FIELD(Hotel TO)));
                                                   OnValidate=BEGIN
                                                                IF "Hotel  Transfer" <> xRec."Hotel  Transfer" THEN
                                                                  // Historico

                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", "N§ Reserva", 2,
                                                                                      FIELDCAPTION("Hotel  Transfer"), xRec."Hotel  Transfer", "Hotel  Transfer");
                                                              END;

                                                   CaptionML=[ENU=Hotel  Transfer;
                                                              ESP=Hotel  Transfer];
                                                   Description=Flowfield;
                                                   Editable=No }
    { 220 ;   ;No Aplica Handling Fee;Boolean     ;OnValidate=BEGIN
                                                                IF "No Aplica Handling Fee" <> xRec."No Aplica Handling Fee" THEN
                                                                  // Historico

                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", "N§ Reserva", 2,
                                                                                      FIELDCAPTION("No Aplica Handling Fee"), FORMAT(xRec."No Aplica Handling Fee"),
                                                                                      FORMAT("No Aplica Handling Fee"));
                                                              END;

                                                   CaptionML=[ENU=Do not apply handling fee;
                                                              ESP=No Aplica Handling Fee] }
    { 230 ;   ;Canal venta         ;Code20        ;TableRelation="Canal venta";
                                                   NotBlank=Yes;
                                                   Description=$009;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Delegacion,N§ Reserva                   ;Clustered=Yes }
    {    ;Delegacion,N§ Interno,N§ Periodo,N§ Reserva;
                                                   KeyGroups=RENUMERING }
    {    ;Responsable,TourOperador,Bono,N§ Responsable,N§ Periodo;
                                                   KeyGroups=RENUMERING }
    {    ;Delegacion,N§ Responsable,Edad          ;KeyGroups=RENUMERING }
    {    ;Responsable,Pendiente asignar,TourOperador Venta,Hotel booking,Fecha entrada,Fecha salida,Regimen,Habitacion;
                                                   KeyGroups=RENUMERING }
    {    ;Confirmacion hotel,Responsable,Hotel booking,Fecha entrada,N§ Responsable;
                                                   KeyGroups=RENUMERING }
    {    ;Hotel booking,Hotel TO,TourOperador Venta,Fecha entrada;
                                                   KeyGroups=RENUMERING }
    {    ;Hotel booking,TourOperador,Fecha entrada;KeyGroups=RENUMERING }
    { No ;TourOperador Venta,Confirmacion hotel,Responsable,Hotel booking,Fecha entrada,N§ Responsable }
    {    ;TourOperador,Confirmacion hotel,Responsable,Hotel booking,Fecha entrada,N§ Responsable;
                                                   KeyGroups=RENUMERING }
    {    ;Responsable,Pendiente asignar,Comunicado hotel,Llegada cerrada,Hotel booking,TourOperador Venta,Fecha entrada;
                                                   KeyGroups=RENUMERING }
    {    ;Responsable,Pendiente asignar,Comunicado hotel,Llegada cerrada,Hotel booking,TourOperador,Fecha entrada;
                                                   KeyGroups=RENUMERING }
    {    ;N§ envio hotel,Hotel booking,Hotel TO,TourOperador Venta,Fecha entrada,Fecha salida;
                                                   KeyGroups=RENUMERING }
    {    ;Fecha entrada,Fecha salida,TourOperador Venta,Bono,N§ Responsable;
                                                   KeyGroups=RENUMERING }
    {    ;Hotel booking,Fecha entrada,Fecha salida,Bono,Responsable;
                                                   KeyGroups=RENUMERING }
    {    ;Delegacion,Contrato venta,Responsable   ;KeyGroups=RENUMERING }
    {    ;Delegacion,Contrato compra,Responsable  ;KeyGroups=RENUMERING }
    {    ;Delegacion,N§ Interno,N§ Periodo,N§ Acompa¤ante,Fecha entrada;
                                                   KeyGroups=RENUMERING }
    { No ;Hotel booking,N§ Responsable,N§ Reserva,Exportado Hotel }
    {    ;Delegacion,N§ Responsable,N§ Reserva    ;KeyGroups=RENUMERING }
    {    ;Pendiente calculo,Fecha entrada,TourOperador Venta,Responsable,Pendiente asignar,Bono;
                                                   KeyGroups=RENUMERING }
    {    ;TourOperador Venta,Hotel booking,Regimen,Habitacion,Fecha entrada;
                                                   KeyGroups=RENUMERING }
    {    ;Delegacion,TourOperador Venta,Zona hotel,Hotel booking,Fecha entrada;
                                                   KeyGroups=RENUMERING }
    {    ;Delegacion,N§ Responsable,N§ Habitacion,N§ Acompa¤ante;
                                                   KeyGroups=RENUMERING }
    {    ;Hotel booking,N§ Responsable,N§ Habitacion,Exportado Hotel;
                                                   KeyGroups=RENUMERING }
    {    ;N§ envio hotel,Comunicado hotel         ;KeyGroups=RENUMERING }
    {    ;Delegacion,N§ Interno,N§ Acompa¤ante,Fecha entrada;
                                                   KeyGroups=RENUMERING }
    {    ;TourOperador,Bono,Nombre                ;KeyGroups=RENUMERING }
    { No ;TourOperador,Bono,Nombre,Hotel TO       ;KeyGroups=RENUMERING }
    {    ;Hotel booking,Fecha entrada,Habitacion,Comunicado hotel,Fuera cupo,Responsable,N§ Habitacion;
                                                   KeyGroups=RENUMERING }
    {    ;Delegacion,Zona hotel,Hotel booking,Fecha entrada;
                                                   KeyGroups=RENUMERING }
    {    ;Num confirmacion hotel,N§ envio hotel,Responsable;
                                                   KeyGroups=RENUMERING }
    {    ;Responsable,Bono                        ;KeyGroups=RENUMERING }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1103355022 : TextConst 'ENU=DB parameters does not exist;ESP=No existe el fichero de parametros de la B.D.';
      Text001@1103355023 : TextConst 'ENU=Only to enter hotel reservations in local offices is possible;ESP=Solo se pueden dar de alta reservas de hotel en las delegaciones.';
      Text002@1103355024 : TextConst 'ENU=Only to modify hotel reservations in local offices is possible;ESP=Solo se pueden modificar reservas de hotel en las delegaciones.';
      Text003@1103355025 : TextConst 'ENU=Unable to modify this reservation because it is being calculated;ESP=No se puede modificar esta reserva porque se esta calculando.';
      Text004@1103355026 : TextConst 'ENU=Only to cancel hotel reservations in local offices is possible;ESP=Solo se pueden dar de baja reservas de hotel en las delegaciones.';
      Text005@1103355027 : TextConst 'ENU=Unable to delete this reservation because it is being calculated;ESP=No se puede borrar esta reserva porque se esta calculando.';
      Text006@1103355028 : TextConst 'ENU=Deleted;ESP=Borrado';
      Text007@1103355029 : TextConst 'ENU=Deleted register;ESP=Borrado registro';
      Text008@1103355030 : TextConst 'ENU=Only to rename hotel reservations in local offices is possible;ESP=Solo se pueden renombrar reservas de hotel en las delegaciones.';
      Text009@1103355031 : TextConst 'ENU=Unable to change the purchase TourOperator in a closed reservation;ESP=No se puede cambiar el TourOperador compra a una reserva ya cerrada.';
      Text010@1103355032 : TextConst 'ENU=Unable to change voucher in a closed reservation;ESP=No se puede cambiar el bono a una reserva ya cerrada.';
      Text011@1103355033 : TextConst 'ENU=Check-out date must be higher check-in date;ESP=La fecha de salida debe ser posterior a la de entrada.';
      Text012@1103355034 : TextConst 'ENU=Room type %1 does not exist in the contract %2;ESP=No existe el tipo de habitacion %1 en el contrato %2.';
      Text013@1103355035 : TextConst 'ENU=This conversion does not exist;ESP=Esta conversion no existe.';
      Text014@1103355036 : TextConst 'ENU=Code %1 does not exist for touroperator %2;ESP=No existe el codigo %1 para el touroperador %2.';
      Text015@1103355037 : TextConst 'ENU=Booked Hotel cannot be modified;ESP=No se puede modificar el Hotel Reservado.';
      Text016@1103355038 : TextConst 'ENU=Conversion does not exist for this code;ESP=No existe conversion para este codigo.';
      Text018@1103355040 : TextConst 'ENU=Invoice destination cannot be an offer hotel;ESP=El destino de la factura no puede ser un hotel oferta.';
      Text019@1103355041 : TextConst 'ENU=Unable to change the sale TourOperator in a closed reservation;ESP=No se puede cambiar el TourOperador venta a una reserva ya cerrada.';
      Text020@1103355042 : TextConst 'ENU=Touroperator %1 does not exist;ESP=No existe el Touroperador %1.';
      Text021@1103355043 : TextConst 'ENU=Hotel %1 is stopped on sales  day %2, would you like to respect it?;ESP=El hotel %1 esta en paro de ventas el dia %2, desea respetarlo.';
      Text022@1103355044 : TextConst 'ENU=Hotel %1 is stopped on sales  day %2;ESP=El hotel %1 esta en paro de ventas el dia %2.';
      Text023@1103355045 : TextConst 'ENU=DB parameters does not exist;ESP=No existe el Fichero de Parametros de B. D.';
      Text024@1103355046 : TextConst 'ENU=Person parameters does not exist;ESP=No existe el fichero de Parametros de Persona.';
      Text025@1103355047 : TextConst 'ENU=The reservation;ESP=La reserva';
      Text026@1103355048 : TextConst 'ENU=" has as room";ESP=" tiene como habitacion"';
      Text027@1103355049 : TextConst 'ENU=" would you like to change to";ESP=" desea cambiar a"';
      rParPer@1103355000 : Record 7009701;
      rPar@1103355001 : Record 7009700;
      rRsv@1103355002 : Record 7009743;
      rRsvDiaCmp@1103355003 : Record 7009755;
      rRsvTra@1103355004 : Record 7009744;
      rCab@1103355005 : Record 7009741;
      rPerio@1103355006 : Record 7009742;
      rConC@1103355007 : Record 7009723;
      rCupoC@1103355008 : Record 7009739;
      rPlan@1103355009 : Record 7009754;
      rHot@1103355010 : Record 7009724;
      rConHotel@1103355011 : Record 7009725;
      rHab@1103355012 : Record 7009731;
      rRegTO@1103355013 : Record 7009719;
      rBuz@1103355014 : Record 7009763;
      rBuz_aux@1103355015 : Record 7009763;
      rParo@1103355017 : Record 7009781;
      rTTOO@1000000000 : Record 7009717;
      cRes@1103355018 : Codeunit 7009703;
      cPar@1103355019 : Codeunit 7009700;
      cCon@1103355020 : Codeunit 7009701;
      cFunVar@1103355050 : Codeunit 7009720;
      cProf@1103355052 : Codeunit 7009902;
      Text028@1103355051 : TextConst 'ENU=Would you like to change the voucher from the hotel reservation;ESP=Desea modificar el bono de la reserva hotel';
      Text029@1100253000 : TextConst 'ENU=Reservation does not have hotel sending No.;ESP=La reserva no tiene N§ de env¡o hotel.';
      Text030@1100253001 : TextConst 'ENU=Confirmation document %1 code has already been used in this reservation;ESP=El c¢digo de documento de confirmaci¢n %1 ya se ha usado en esta reserva.';

    PROCEDURE buscar_contrato@1();
    VAR
      rTO@1103355000 : Record 7009717;
      rPerio@1103355001 : Record 7009742;
      rCab@1103355002 : Record 7009741;
      w_to@1103355003 : Code[10];
    BEGIN
      // buscar_contrato

      IF (Delegacion = '') OR (TourOperador = '') OR ("Hotel origen precios" = '') OR
         ("Fecha entrada" = 0D) OR ("Fecha salida" = 0D) OR ("TourOperador Venta" = '') THEN
        EXIT;

      IF rCab.GET(Delegacion, "N§ Interno") THEN
        ;
      VALIDATE("Contrato compra", cCon.busca_contrato_compra(TourOperador, Delegacion, "Hotel origen precios",
                                                             "Fecha entrada", "Fecha salida"));
      IF rConC.GET(Delegacion, "Contrato compra") THEN BEGIN
        VALIDATE("Tipo contrato", rConC."Tipo de Contrato" + 1);
        IF (rConC."Tipo de Contrato" = rConC."Tipo de Contrato"::"En nombre propio") AND
           (rCab.Circuito = '') THEN BEGIN
          IF NOT rTO.GET("TourOperador Venta") THEN
            ERROR(Text020, "TourOperador Venta");

          //-$001IF rTO."Grupo Touroperador" = '' THEN
          //-$001  w_to := "TourOperador Venta"
          //-$001ELSE

          w_to := "TourOperador Venta";
          VALIDATE("Contrato venta", cCon.busca_contrato_venta(w_to, Delegacion, "Hotel venta",
                                                               "Fecha entrada", "Fecha salida"));
        END
        ELSE BEGIN
          VALIDATE("Contrato venta", '');
        END;

        // AJF 01/12/08
        // Muevo la comprobaci¢n de habitaci¢n dentro del condicional, ya que si no existe el contrato de compra
        // se crea un bucle infinito de llamadas recursivas entre comprobar_habitacion y buscar_contrato.
        comprobar_habitacion(FALSE, 0);

      END;
    END;

    PROCEDURE buscar_habitacion@5(busca_precio@1103355000 : Boolean);
    VAR
      rPerio@1103355001 : Record 7009742;
    BEGIN
      // buscar_habitacion
      //
      IF (Delegacion = '') OR ("TourOperador Venta" = '') OR ("Hotel booking" = '') OR
         ("Fecha entrada" = 0D) OR ("Fecha salida" = 0D) OR (TourOperador = '') OR (Habitacion = '') THEN
        EXIT;
      IF NOT rCab.GET(Delegacion, "N§ Interno") THEN
        EXIT;
      IF "Contrato compra" = '' THEN
        buscar_contrato;
      cCon.busca_cupo_habitacion(TourOperador, Delegacion, "Hotel booking",
                                 "Fecha entrada", "Fecha salida", Habitacion, "Hotel origen precios", busca_precio);
      IF ("Contrato venta" <> '') AND (rCab.Circuito <> '') THEN
        cCon.busca_cupo_habitacion_venta("TourOperador Venta", Delegacion, "Hotel booking",
                                         "Fecha entrada", "Fecha salida", Habitacion, "Hotel venta", busca_precio);
    END;

    PROCEDURE buscar_regimen@6();
    VAR
      rPerio@1103355000 : Record 7009742;
    BEGIN
      // buscar_regimen
      //
      IF (Delegacion = '') OR ("TourOperador Venta" = '') OR ("Hotel booking" = '') OR
         ("Fecha entrada" = 0D) OR ("Fecha salida" = 0D) OR (TourOperador = '') OR (Regimen = '') THEN
        EXIT;
      IF NOT rCab.GET(Delegacion, "N§ Interno") THEN
        EXIT;
      IF "Contrato compra" = '' THEN
        buscar_contrato;
      cCon.busca_precio_regimen(TourOperador, Delegacion, "Hotel origen precios",
                                "Fecha entrada", "Fecha salida", Regimen);
      IF ("Contrato venta" <> '') AND (rCab.Circuito <> '') THEN
        cCon.busca_precio_regimen_venta("TourOperador Venta", Delegacion, "Hotel venta",
                                  "Fecha entrada", "Fecha salida", Regimen);
    END;

    PROCEDURE PasarBuzon@3(reserva@1103355000 : Record 7009743);
    BEGIN
      // PasarBuzon

      rRsv.RESET;
      rRsv.SETCURRENTKEY(Delegacion,
                         "N§ Responsable");
      rRsv.SETRANGE(Delegacion      , reserva.Delegacion);
      rRsv.SETRANGE("N§ Responsable", reserva."N§ Responsable");
      IF rRsv.FIND('-') THEN BEGIN
        REPEAT
          CLEAR(rBuz);
          rBuz_aux.RESET;
          rBuz_aux.SETRANGE(Delegaci¢n  , rRsv.Delegacion);
          rBuz_aux.SETRANGE("N§ Reserva", rRsv."N§ Reserva");
          IF rBuz_aux.FIND('+') THEN BEGIN
            IF rBuz_aux."Baja Comunicada" THEN
              rBuz."N§ Orden" := rBuz_aux."N§ Orden"
            ELSE
              rBuz."N§ Orden" := rBuz_aux."N§ Orden" + 1;
          END
          ELSE
            rBuz."N§ Orden" := 1;
          rBuz_aux.RESET;
          rBuz.Delegaci¢n                := rRsv.Delegacion;
          rBuz."N§ Reserva"              := rRsv."N§ Reserva";
          rBuz."N§ Interno"              := rRsv."N§ Interno";
          rBuz."N§ Periodo"              := rRsv."N§ Periodo";
          rBuz.Producto                  := rRsv.Producto;
          rBuz."Hotel origen precios"    := rRsv."Hotel origen precios";
          rBuz."Hotel Booking"           := rRsv."Hotel booking";
          rBuz."Hotel Reservado"         := rRsv."Hotel reservado";
          rBuz.TourOperador              := rRsv.TourOperador;
          rBuz.Bono                      := rRsv.Bono;
          rBuz.Habitacion                := rRsv.Habitacion;
          rBuz."N§ Habitaciones"         := rRsv."N§ Habitaciones";
          rBuz."Fecha entrada"           := rRsv."Fecha entrada";
          rBuz."Fecha salida"            := rRsv."Fecha salida";
          rBuz.Estancia                  := rRsv.Estancia;
          rBuz.Regimen                   := rRsv.Regimen;
          rBuz."Fecha recepcion reserva" := rRsv."Fecha Recepcion";
          rBuz."Origen reserva"          := rRsv."Origen reserva";
          rBuz.Nombre                    := rRsv.Nombre;
          rBuz."Fecha venta"             := rRsv."Fecha venta";
          rBuz.Edad                      := rRsv.Edad;
          rBuz."Tipo Persona"            := rRsv."Tipo Persona";
          rBuz."Comunicado Hotel"        := rRsv."Comunicado hotel";
          rBuz."N§ envio"                := rRsv."N§ envio hotel";
          rBuz."Hotel venta"             := rRsv."Hotel venta";
          rBuz."Confirmaci¢n Hotel"      := rRsv."Confirmacion hotel";
          rBuz.Responsable               := rRsv.Responsable;
          rBuz."N§ Responsable"          := rRsv."N§ Responsable";
          rBuz."N§ Persona"              := rRsv."N§ persona";
          rBuz."Llegada cerrada"         := rRsv."Llegada cerrada";
          rBuz."Fecha envio"             := rRsv."Fecha envio";
          rBuz."Hora envio"              := rRsv."Hora envio";
          rBuz."Usuario envio"           := rRsv."Usuario envio";
          rBuz."Baja Comunicada"         := FALSE;
          rBuz."Habitacion TO"           := rRsv."Habitacion TO";
          rBuz."Regimen TO"              := rRsv."Regimen TO";
          rBuz."TourOperador Venta"      := rRsv."TourOperador Venta";
          IF rBuz.INSERT(TRUE) THEN
            rBuz.MODIFY;
        UNTIL rRsv.NEXT = 0;
      END;
    END;

    PROCEDURE comprobar_paro_ventas@2(hotel_paro@1103355000 : Code[20]);
    VAR
      w_dia@1103355001 : Date;
      texto_confirm@1103355002 : Text[250];
    BEGIN
      // comprobar_paro_ventas
      //
      IF ("Fecha entrada" = 0D) OR ("Fecha salida" = 0D) THEN
        EXIT;

      IF "Contrato compra" = '' THEN
        buscar_contrato;

      rParo.RESET;
      rParo.SETRANGE(Hotel, hotel_paro);
      FOR w_dia := "Fecha entrada" TO "Fecha salida" - 1 DO BEGIN
        rParo.SETFILTER("Fecha desde", '<=%1', w_dia);
        rParo.SETFILTER("Fecha hasta", '>=%1', w_dia);
        rParo.SETRANGE ("Tipo habitacion", Habitacion);
        IF NOT rParo.FIND('-') THEN BEGIN
          rParo.SETRANGE ("Tipo habitacion");
          IF NOT rParo.FIND('-') THEN
            EXIT;
        END;

        IF NOT "Modificacion importacion" THEN BEGIN
          texto_confirm := STRSUBSTNO(Text021, hotel_paro, w_dia);
          IF CONFIRM(texto_confirm) THEN
            ERROR(Text022, hotel_paro, w_dia);
        END;
      END;
    END;

    PROCEDURE comprobar_habitacion@4(ondelete@1103355000 : Boolean;num_reserva@1103355001 : Integer);
    VAR
      w_paxes@1103355002 : Integer;
      w_habitacion@1103355003 : Integer;
      texto_confirm@1103355004 : Text[120];
    BEGIN
      // comprobar_habitacion
      //
      IF NOT rPar.FIND('-') THEN
        ERROR(Text023);
      IF NOT rPar."Comprobar habitacion" THEN
        EXIT;
      IF "Contrato compra" = '' THEN
        buscar_contrato;
      IF NOT rParPer.FIND('-') THEN
        ERROR(Text024);
      rRsv.RESET;
      rRsv.SETCURRENTKEY(Delegacion,
                         "N§ Responsable");
      rRsv.SETRANGE(Delegacion      , Delegacion);
      rRsv.SETRANGE("N§ Responsable", "N§ Responsable");
      w_paxes := 0;
      IF rRsv.FIND('-') THEN BEGIN
        REPEAT
          IF rRsv."Tipo Persona" <> rParPer."Codigo Infant" THEN
            IF (NOT ondelete) AND (rRsv."N§ Reserva" <> num_reserva) THEN
              w_paxes := w_paxes + 1;
          IF rRsv.Responsable THEN
            w_habitacion := rRsv."N§ Habitaciones";
        UNTIL rRsv.NEXT = 0;
      END;
      rRsv.RESET;
      // Buscar habitacion de uso en funcion de paxes
      //
      rHab.RESET;
      rHab.SETCURRENTKEY(Delegacion,
                         "N§ Contrato",
                         "Tipo contrato",
                         "Ocupacion Maxima");
      rHab.SETRANGE (Delegacion, Delegacion);
      IF "Contrato venta" <> '' THEN BEGIN
        rHab.SETRANGE("N§ Contrato"   , "Contrato venta");
        rHab.SETRANGE ("Tipo contrato", rHab."Tipo contrato"::Venta);
      END
      ELSE BEGIN
        rHab.SETRANGE("N§ Contrato" , "Contrato compra");
        rHab.SETRANGE ("Tipo contrato", rHab."Tipo contrato"::Compra);
      END;
      IF w_habitacion <> 0 THEN
        rHab.SETFILTER("Ocupacion Maxima", '>=%1', ROUND(w_paxes / w_habitacion, 1))
      ELSE
        rHab.SETFILTER("Ocupacion Maxima", '>=%1', w_paxes);
      IF rHab.FIND('-') THEN BEGIN
        IF Habitacion = rHab."Habitacion cupo" THEN
          EXIT;
        IF Habitacion <> '' THEN BEGIN
          texto_confirm := Text025 + Bono + Text026 + Habitacion +
                           Text027 + rHab."Habitacion cupo" + '?';

          IF NOT CONFIRM(texto_confirm) THEN
            EXIT;
        END;
        VALIDATE(Habitacion, rHab."Habitacion cupo");
      END;
      rHab.RESET;
      Rec.MODIFY;
    END;

    PROCEDURE GetNumeroCotizacion@1103355000() : Integer;
    VAR
      lrVinculo@1103355000 : Record 7009884;
    BEGIN
      // GetNumeroCotizacion

      lrVinculo.SETCURRENTKEY("Id Cotizacion", Delegacion, "N§ Interno", "N§ Periodo", Tipo);
      lrVinculo.SETRANGE (Delegacion  , Delegacion);
      lrVinculo.SETRANGE ("N§ Interno", "N§ Reserva");
      lrVinculo.SETRANGE (Tipo        , lrVinculo.Tipo::"Reserva hotel");

      IF lrVinculo.FINDFIRST THEN
        EXIT(lrVinculo."Id Cotizacion");

      EXIT(0);
    END;

    PROCEDURE LookUpCotizacion@1103355001();
    VAR
      lrCabCot@1103355000 : Record 7009871;
      lfCabCot@1103355001 : Form 7010038;
      lwNumCot@1103355002 : Integer;
    BEGIN
      // LookUpCotizacion

      lwNumCot := GetNumeroCotizacion;
      IF lwNumCot = 0 THEN
        EXIT;

      lrCabCot.FILTERGROUP(2);
      lrCabCot.SETRANGE (Id, lwNumCot);
      lrCabCot.FILTERGROUP(0);

      lfCabCot.SETTABLEVIEW(lrCabCot);
      lfCabCot.RUNMODAL;
    END;

    PROCEDURE InsertarConfirmacionxEnvio@1100253000();
    VAR
      lrConfEnv@1100253000 : Record 7009832;
    BEGIN
      // InsertarConfirmacionxEnvio.
      //: Se inserta un registro de confirmaci¢n x env¡o de Hotel cada vez que se inserta
      //: un n£mero de confirmaci¢n de hotel.

      IF "N§ envio hotel" = 0 THEN
        ERROR(Text029);

      lrConfEnv."Num. Envio"               := "N§ envio hotel";
      lrConfEnv."Identificacion documento" := "Num confirmacion hotel";
      lrConfEnv."Num confirmacion hotel"   := "Num confirmacion hotel";
      lrConfEnv.Delegacion                 := Delegacion;
      lrConfEnv."Num. Reserva"             := "N§ Reserva";
      IF lrConfEnv.FIND THEN
        ERROR(Text030, "Num confirmacion hotel");

      lrConfEnv."Fecha recepcion"          := TODAY;
      lrConfEnv.INSERT;
    END;

    BEGIN
    {
      ## AJF 29/06/09

        .- (09/00319) cambio c¢digos de hotel de code10 a code20.

      ## AJF 02/07/09

        .- (09/00333) A¤adida opci¢n "por Estancia" en los campos "Tipo precio manual" y "Tipo Precio Manual Venta"
           para indicar que el precio es por toda la reserva.

      $001 AJS 25102011 En la funcion buscar_contrato se busca siempre el contrato de venta para el Touroperador de venta
                        no empleando el touroperador de grupo.

      JPT 21/11/11 GOC-CAR-10003 (03) Modificaciones Handling Fee. Reservas que no aplican Handling Fee
      Se a¤adio el campo "No Aplica Handling Fee"

      $002 Inhabilitar la clave TourOperador, Bono, Nombre, "Hotel TO"

      $003 Elimino la clave N§ Bono emitido

      $004 AJS 20122012 Damos un margen de 3 dias despues de la llegada para que las modificaciones se
                        vuelvan a enviar al hotel

      $005 AJS 15022014 Rellenar el campo "Fecha recepcion" con la fecha de creacion

      $006 AJS 26022014 Eliminar referencias a la tabla Bloqueo (obsoleta)

      $007 AJS 09062014 Modifico algunos FIND('-') por FINDSET

      $008 MNC 22072014 CNT-LP-14054 No se pueden usar TTOO bloqueados

      $009 ARM 16092014 Nuevo campo canal venta CNT-CAR-14082

      $010 AJS 28102014 Amplio el campo Nombre a Text50
    }
    END.
  }
}
