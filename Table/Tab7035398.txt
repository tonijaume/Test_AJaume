OBJECT Table 7035398 Pie pagina Factura
{
  OBJECT-PROPERTIES
  {
    Date=16/10/09;
    Time=12:30:50;
    Version List=TRANSFER;
  }
  PROPERTIES
  {
    OnInsert=VAR
               lrPref@1103355000 : Record 7010415;
             BEGIN

               CLEAR(lrPref);
               IF lrPref.GET("Num Prefactura") THEN BEGIN
                 IF lrPref.Facturada THEN BEGIN
                   "Tipo Documento" := lrPref."Tipo Documento";
                   "Num Documento"  := lrPref."N§ Factura";
                 END;
               END;
             END;

    CaptionML=ESP=Pie pagina Factura;
    LookupFormID=Form7035358;
    DrillDownFormID=Form7035358;
  }
  FIELDS
  {
    { 1   ;   ;Num Prefactura      ;Code20        ;CaptionML=ESP=Num Prefactura }
    { 3   ;   ;Num Linea           ;Integer       ;CaptionML=ESP=Num Linea }
    { 10  ;   ;Texto               ;Text80        ;CaptionML=ESP=Texto }
    { 20  ;   ;Tipo Documento      ;Option        ;CaptionML=[ENU=Document Type;
                                                              ESP=Tipo documento];
                                                   OptionCaptionML=[ENU=Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order;
                                                                    ESP=Oferta,Pedido,Factura,Abono,Pedido abierto,Devoluci¢n];
                                                   OptionString=Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order }
    { 21  ;   ;Num Documento       ;Code20        ;CaptionML=ESP=Num Documento }
  }
  KEYS
  {
    {    ;Num Prefactura,Num Linea                ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      rPie@1103355000 : Record 7035398;
      TextDEFECTO@1103355001 : TextConst 'ESP=DEFECTO';
      Text1@1103355002 : TextConst 'ESP=Estas Son las lineas por defecto';

    PROCEDURE SigNumero@1103355002();
    BEGIN
      // SigNumero

      // Esta funci¢n rellena el campo "Num Linea" cuando sea necesario
      // es decir cuando tenga que crearse por codigo
      // Manualmente se utliza la opci¢n AutoSplitKey del formulario

      CLEAR(rPie);
      rPie.SETRANGE("Num Prefactura", "Num Prefactura");
      rPie.SETRANGE("Num Documento" , "Num Documento");
      IF rPie.FINDLAST THEN
        "Num Linea" := rPie."Num Linea" + 10000
      ELSE
        "Num Linea" := 10000;
    END;

    PROCEDURE CopiaDefecto@1103355000();
    VAR
      lrPie@1103355000 : Record 7035398;
      lrPie2@1103355001 : Record 7035398;
    BEGIN
      // CopiaDefecto
      // Se copian las lineas por defecto a las indicadas por el usuario que seran las que se facturaran luego

      // Se borran las anteriores
      CLEAR(lrPie);
      lrPie.SETRANGE("Num Prefactura", USERID);
      IF lrPie.FINDFIRST THEN
        lrPie.DELETEALL;

      CLEAR(lrPie2);
      CLEAR(lrPie);
      lrPie.SETRANGE("Num Prefactura", TextDEFECTO);
      IF lrPie.FINDSET THEN BEGIN
        REPEAT
          lrPie2                  := lrPie;
          lrPie2."Num Prefactura" := USERID;
          lrPie2.INSERT;
        UNTIL lrPie.NEXT=0;
      END;
    END;

    PROCEDURE CambiaaDefecto@1103355003();
    VAR
      lrPie@1103355000 : Record 7035398;
      lrPie2@1103355001 : Record 7035398;
      lrPie3@1103355002 : Record 7035398;
    BEGIN
      // CambiaaDefecto
      // Se copian las lineas por defecto a la configuraci¢n actual

      IF "Num Prefactura" = TextDEFECTO THEN
        ERROR(Text1);

      lrPie3 := Rec;

      // Se borran las anteriores
      CLEAR(lrPie);
      lrPie.SETRANGE("Num Prefactura", lrPie3."Num Prefactura");
      IF lrPie.FINDFIRST THEN
        lrPie.DELETEALL;

      CLEAR(lrPie2);
      CLEAR(lrPie);
      lrPie.SETRANGE("Num Prefactura", TextDEFECTO);
      IF lrPie.FINDSET THEN BEGIN
        REPEAT
          lrPie2                  := lrPie;
          lrPie2."Num Prefactura" := lrPie3."Num Prefactura";
          lrPie2.INSERT(TRUE);
        UNTIL lrPie.NEXT=0;
      END;
    END;

    PROCEDURE CopiaPrefactura@1103355004(prPref@1103355002 : Record 7010415);
    VAR
      lrPie@1103355000 : Record 7035398;
      lrPie2@1103355001 : Record 7035398;
    BEGIN
      // CopiaPrefactura
      // Se copian las lineas marcadas por el usuario a la numeraci¢n de prefactura

      CLEAR(lrPie2);
      CLEAR(lrPie);
      lrPie.SETRANGE("Num Prefactura", USERID);
      IF lrPie.FINDSET THEN BEGIN
        REPEAT
          lrPie2                  := lrPie;
          lrPie2."Num Prefactura" := prPref."N§ Prefactura";
          lrPie2.INSERT;
        UNTIL lrPie.NEXT=0;
      END;

      lrPie.DELETEALL; // Se borran las lineas marcadas del usuario
    END;

    PROCEDURE MarcaFacturado@1103355006(prPref@1103355002 : Record 7010415);
    VAR
      lrPie@1103355000 : Record 7035398;
    BEGIN
      // MarcaFacturado
      // Se marcan las lineas con el numero de factura determinado

      CLEAR(lrPie);
      lrPie.SETRANGE("Num Prefactura", prPref."N§ Prefactura");
      IF lrPie.FINDSET THEN BEGIN
        REPEAT
          lrPie."Tipo Documento" := prPref."Tipo Documento";
          lrPie."Num Documento"  := prPref."N§ Factura";
          lrPie.MODIFY;
        UNTIL lrPie.NEXT=0;
      END;
    END;

    PROCEDURE BorraUser@1103355008();
    VAR
      lrPie@1103355000 : Record 7035398;
    BEGIN
      // BorraUser
      // Borra las lineas del usuario

      CLEAR(lrPie);
      lrPie.SETRANGE("Num Prefactura", USERID);
      IF lrPie.FINDSET THEN
        lrPie.DELETEALL;
    END;

    PROCEDURE ShowPiePaginaDefecto@1103355001();
    BEGIN
      // ShowPiePaginaDefecto

      CLEAR(rPie);
      rPie.FILTERGROUP(2);
      rPie.SETRANGE("Num Prefactura", TextDEFECTO);
      rPie.FILTERGROUP(0);
      FORM.RUN(0,rPie);
    END;

    BEGIN
    END.
  }
}
