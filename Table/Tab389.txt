OBJECT Table 389 Service Contract Dimension
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVW16.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TESTFIELD("Dimension Value Code");
               GLSetup.GET;

               IF "Dimension Code" = GLSetup."Global Dimension 1 Code" THEN
                 UpdateGlobalDimCode(
                   1,"Table ID",Type,"No.","Line No.","Dimension Value Code");
               IF "Dimension Code" = GLSetup."Global Dimension 2 Code" THEN
                 UpdateGlobalDimCode(
                   2,"Table ID",Type,"No.","Line No.","Dimension Value Code");
             END;

    OnModify=BEGIN
               GLSetup.GET;

               IF "Dimension Code" = GLSetup."Global Dimension 1 Code" THEN
                 UpdateGlobalDimCode(
                   1,"Table ID",Type,"No.","Line No.","Dimension Value Code");
               IF "Dimension Code" = GLSetup."Global Dimension 2 Code" THEN
                 UpdateGlobalDimCode(
                   2,"Table ID",Type,"No.","Line No.","Dimension Value Code");
             END;

    OnDelete=BEGIN
               GLSetup.GET;

               IF "Dimension Code" = GLSetup."Global Dimension 1 Code" THEN
                 UpdateGlobalDimCode(
                   1,"Table ID",Type,"No.","Line No.",'');
               IF "Dimension Code" = GLSetup."Global Dimension 2 Code" THEN
                 UpdateGlobalDimCode(
                   2,"Table ID",Type,"No.","Line No.",'');
             END;

    OnRename=BEGIN
               ERROR(Text000,TABLECAPTION);
             END;

    CaptionML=[ENU=Service Contract Dimension;
               ESP=Dimensi¢n contrato servicio];
  }
  FIELDS
  {
    { 1   ;   ;Table ID            ;Integer       ;TableRelation=AllObj."Object ID" WHERE (Object Type=CONST(Table));
                                                   CaptionML=[ENU=Table ID;
                                                              ESP=Id. tabla];
                                                   NotBlank=Yes }
    { 2   ;   ;Type                ;Option        ;CaptionML=[ENU=Type;
                                                              ESP=Tipo];
                                                   OptionCaptionML=[ENU=Quote,Contract;
                                                                    ESP=Oferta,Contrato];
                                                   OptionString=Quote,Contract }
    { 3   ;   ;No.                 ;Code20        ;CaptionML=[ENU=No.;
                                                              ESP=N§] }
    { 4   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              ESP=N§ l¡nea] }
    { 5   ;   ;Dimension Code      ;Code20        ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                IF NOT DimMgt.CheckDim("Dimension Code") THEN
                                                                  ERROR(DimMgt.GetDimErr);
                                                              END;

                                                   CaptionML=[ENU=Dimension Code;
                                                              ESP=C¢d. dimensi¢n];
                                                   NotBlank=Yes }
    { 6   ;   ;Dimension Value Code;Code20        ;TableRelation="Dimension Value".Code WHERE (Dimension Code=FIELD(Dimension Code));
                                                   OnValidate=BEGIN
                                                                IF NOT DimMgt.CheckDimValue("Dimension Code","Dimension Value Code") THEN
                                                                  ERROR(DimMgt.GetDimErr);
                                                              END;

                                                   CaptionML=[ENU=Dimension Value Code;
                                                              ESP=C¢d. valor dimensi¢n];
                                                   NotBlank=Yes }
  }
  KEYS
  {
    {    ;Table ID,Type,No.,Line No.,Dimension Code;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=You cannot rename a %1.;ESP=No se puede cambiar el nombre a %1.';
      GLSetup@1004 : Record 98;
      DimMgt@1005 : Codeunit 408;

    PROCEDURE UpdateGlobalDimCode@25(GlobalDimCodeNo@1000 : Integer;"Table ID"@1001 : Integer;Type@1002 : Option;"No."@1003 : Code[20];"Line No."@1004 : Integer;NewDimValue@1005 : Code[20]);
    VAR
      ServContract@1016 : Record 5965;
    BEGIN
      CASE "Table ID" OF
        DATABASE::"Service Contract Header":
          BEGIN
            IF ServContract.GET(Type,"No.") THEN BEGIN
              CASE GlobalDimCodeNo OF
                1:
                  ServContract."Shortcut Dimension 1 Code" := NewDimValue;
                2:
                  ServContract."Shortcut Dimension 2 Code" := NewDimValue;
              END;
              ServContract.MODIFY(TRUE);
            END;
          END;
      END;
    END;

    LOCAL PROCEDURE InsertNew@2(VAR ServContrDim@1000 : Record 389;TableNo@1001 : Integer;LineNo@1002 : Integer);
    VAR
      NewServContrDim@1003 : Record 389;
    BEGIN
      WITH ServContrDim DO BEGIN
        NewServContrDim."Table ID" := TableNo;
        NewServContrDim.Type := Type;
        NewServContrDim."No." := "No.";
        NewServContrDim."Line No." := LineNo;
        NewServContrDim."Dimension Code" := "Dimension Code";
        NewServContrDim."Dimension Value Code" := "Dimension Value Code";
        NewServContrDim.INSERT(TRUE);
      END;
    END;

    PROCEDURE GetDimensions@3(TableNo@1000 : Integer;Type@1001 : Option;No@1002 : Code[20];DocLineNo@1003 : Integer;VAR TempServContrDim@1004 : Record 389);
    VAR
      ServContrDim@1005 : Record 389;
    BEGIN
      TempServContrDim.DELETEALL;

      WITH ServContrDim DO BEGIN
        RESET;
        SETRANGE("Table ID",TableNo);
        SETRANGE(Type,Type);
        SETRANGE("No.",No);
        SETRANGE("Line No.",DocLineNo);
        IF FIND('-') THEN
          REPEAT
            TempServContrDim := ServContrDim;
            TempServContrDim.INSERT;
          UNTIL NEXT = 0;
      END;
    END;

    BEGIN
    END.
  }
}
