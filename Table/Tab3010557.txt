OBJECT Table 3010557 Cost Allocation Target
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=CACEM6.00,NAVES5.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               // Default value according to previous line
               "Allocation Type" := xRec."Allocation Type";
               IF xRec."Target Cost Type" <> '' THEN
                 "Target Cost Type" := xRec."Target Cost Type";

               Base := xRec.Base;
               "Last Date Modified" := TODAY;
               "User ID" := USERID;
             END;

    OnModify=BEGIN
               "Last Date Modified" := TODAY;
               "User ID" := USERID;
             END;

    CaptionML=[ENU=Cost Allocation Target;
               ESP=Destino asignaci¢n costes];
    LookupFormID=Form3010565;
    DrillDownFormID=Form3010565;
  }
  FIELDS
  {
    { 1   ;   ;ID                  ;Code10        ;TableRelation="Cost Allocation Source";
                                                   CaptionML=[ENU=ID;
                                                              ESP=Id.];
                                                   Editable=No }
    { 2   ;   ;Line No.            ;Integer       ;InitValue=0;
                                                   CaptionML=[ENU=Line No.;
                                                              ESP=N§ l¡nea];
                                                   NotBlank=Yes;
                                                   Editable=No }
    { 5   ;   ;Target Cost Type    ;Text20        ;TableRelation="Cost Type";
                                                   CaptionML=[ENU=Target Cost Type;
                                                              ESP=Tipo coste destino] }
    { 6   ;   ;Target Cost Center  ;Code20        ;TableRelation="Cost Center";
                                                   OnValidate=BEGIN
                                                                IF ("Target Cost Center" <> '') AND ("Target Cost Object" <> '') THEN
                                                                  ERROR(Text000);
                                                              END;

                                                   CaptionML=[ENU=Target Cost Center;
                                                              ESP=Centro coste destino] }
    { 7   ;   ;Target Cost Object  ;Code20        ;TableRelation="Cost Object";
                                                   OnValidate=BEGIN
                                                                VALIDATE("Target Cost Center")
                                                              END;

                                                   CaptionML=[ENU=Target Cost Object;
                                                              ESP=Objeto coste destino] }
    { 8   ;   ;Static Base         ;Decimal       ;OnValidate=BEGIN
                                                                VALIDATE("Static Weighting");
                                                              END;

                                                   CaptionML=[ENU=Static Base;
                                                              ESP=Base est tica];
                                                   DecimalPlaces=0:2;
                                                   MinValue=0;
                                                   BlankZero=Yes }
    { 9   ;   ;Static Weighting    ;Decimal       ;OnValidate=BEGIN
                                                                IF Base = Base::Static THEN BEGIN
                                                                  Share := "Static Base" * "Static Weighting";
                                                                  VALIDATE(Share);
                                                                END ELSE BEGIN
                                                                  IF "Static Base" > 0 THEN
                                                                    ERROR(Text001,"Static Base");
                                                                  IF "Static Weighting" > 0 THEN
                                                                    ERROR(Text001,"Static Weighting");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Static Weighting;
                                                              ESP=Ponderaci¢n est tica];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   BlankZero=Yes }
    { 10  ;   ;Share               ;Decimal       ;OnValidate=BEGIN
                                                                CalcPercent;
                                                              END;

                                                   CaptionML=[ENU=Share;
                                                              ESP=Participaci¢n];
                                                   DecimalPlaces=2:5;
                                                   MinValue=0 }
    { 11  ;   ;Percent             ;Decimal       ;CaptionML=[ENU=Percent;
                                                              ESP=Porcentaje];
                                                   DecimalPlaces=2:5;
                                                   MinValue=0;
                                                   MaxValue=100;
                                                   Editable=No }
    { 20  ;   ;Comment             ;Text50        ;CaptionML=[ENU=Comment;
                                                              ESP=Comentario] }
    { 30  ;   ;Base                ;Option        ;OnValidate=BEGIN
                                                                IF Base <> xRec.Base THEN BEGIN
                                                                  Share := 0;
                                                                  Percent := 0;
                                                                  "No. Filter" := '';
                                                                  "Group Filter" := '';
                                                                END;

                                                                IF Base = Base::Static THEN BEGIN
                                                                  "No. Filter" := '';
                                                                  "Cost Center Filter" := '';
                                                                  "Cost Object Filter" := '';
                                                                  "Date Filter Code" := 0;
                                                                  "Group Filter" := '';
                                                                END ELSE BEGIN
                                                                  "Static Base" := 0;
                                                                  "Static Weighting" := 0;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Base;
                                                              ESP=Base];
                                                   OptionCaptionML=[ENU=Static,G/L Movement,G/L Budget,Cost Type Movement,Cost Type Budget,,,,,No of Employees,,Items Sold (Qty),Items Purchased (Qty),Items Sold (Amount),Items Purchased (Amount);
                                                                    ESP=Est tica,Mov. contable,Ppto. contable,Mov. tipo coste,Ppto. tipo coste,,,,,N§ empleados,,Prod. vendidos (cdad.),Prod. comprados (cdad.),Prod. vendidos (Importe),Prod. comprados (Importe)];
                                                   OptionString=Static,G/L Movement,G/L Budget,Cost Type Movement,Cost Type Budget,,,,,No of Employees,,Items Sold (Qty),Items Purchased (Qty),Items Sold (Amount),Items Purchased (Amount) }
    { 31  ;   ;No. Filter          ;Code30        ;TableRelation=IF (Base=CONST(G/L Movement)) "G/L Account" WHERE (Account Type=CONST(Posting))
                                                                 ELSE IF (Base=CONST(G/L Budget)) "G/L Account"
                                                                 ELSE IF (Base=CONST(Cost Type Movement)) "Cost Type" WHERE (Line Type=CONST(Cost Type))
                                                                 ELSE IF (Base=CONST(Cost Type Budget)) "Cost Type"
                                                                 ELSE IF (Base=CONST("Items Sold (Qty)")) Item
                                                                 ELSE IF (Base=CONST("Items Purchased (Qty)")) Item
                                                                 ELSE IF (Base=CONST("Items Sold (Amount)")) Item
                                                                 ELSE IF (Base=CONST("Items Purchased (Amount)")) Item;
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=No. Filter;
                                                              ESP=Filtro N§] }
    { 32  ;   ;Cost Center Filter  ;Code30        ;TableRelation="Cost Center";
                                                   ValidateTableRelation=No;
                                                   CaptionML=[ENU=Cost Center Filter;
                                                              ESP=Filtro centro coste] }
    { 33  ;   ;Cost Object Filter  ;Code30        ;TableRelation="Cost Object";
                                                   ValidateTableRelation=No;
                                                   CaptionML=[ENU=Cost Object Filter;
                                                              ESP=Filtro objeto coste] }
    { 34  ;   ;Date Filter Code    ;Option        ;CaptionML=[ENU=Date Filter Code;
                                                              ESP=C¢d. filtro fecha];
                                                   OptionCaptionML=[ENU=" ,Week,Last Week,Month,Last Month,Month of Last Year,Year,Last Year,Period,Last Period,Period of Last Year,Fiscal Year,Last Fiscal Year";
                                                                    ESP=" ,Semana,Semana anterior,Mes,Mes anterior,Mes de a¤o anterior,A¤o,A¤o anterior,Periodo,Periodo anterior,Periodo de a¤o anterior,Ejercicio,Ejercicio anterior"];
                                                   OptionString=[ ,Week,Last Week,Month,Last Month,Month of Last Year,Year,Last Year,Period,Last Period,Period of Last Year,Fiscal Year,Last Fiscal Year] }
    { 35  ;   ;Group Filter        ;Code30        ;TableRelation=IF (Base=CONST(G/L Budget)) "G/L Budget Name"
                                                                 ELSE IF (Base=CONST(Cost Type Budget)) "Cost Budget Name"
                                                                 ELSE IF (Base=CONST("Items Sold (Qty)")) "Inventory Posting Group"
                                                                 ELSE IF (Base=CONST("Items Purchased (Qty)")) "Inventory Posting Group"
                                                                 ELSE IF (Base=CONST("Items Sold (Amount)")) "Inventory Posting Group"
                                                                 ELSE IF (Base=CONST("Items Purchased (Amount)")) "Inventory Posting Group";
                                                   ValidateTableRelation=No;
                                                   CaptionML=[ENU=Group Filter;
                                                              ESP=Filtro grupo] }
    { 38  ;   ;Allocation Type     ;Option        ;OnValidate=BEGIN
                                                                IF "Allocation Type" <> xRec."Allocation Type" THEN BEGIN
                                                                  "Percent per Share" := 0;
                                                                  "Amount per Share" := 0;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Allocation Type;
                                                              ESP=Tipo distribuci¢n];
                                                   OptionCaptionML=[ENU=All Costs,Percent per Share,Amount per Share;
                                                                    ESP=Todos los costes,Porcentaje por part.,Importe por part.];
                                                   OptionString=All Costs,Percent per Share,Amount per Share }
    { 40  ;   ;Percent per Share   ;Decimal       ;OnValidate=BEGIN
                                                                IF "Percent per Share" <> 0 THEN BEGIN
                                                                  "Allocation Type" := "Allocation Type"::"Percent per Share";
                                                                  "Amount per Share" := 0;
                                                                END ELSE
                                                                  "Allocation Type" := "Allocation Type"::"All Costs";
                                                              END;

                                                   CaptionML=[ENU=Percent per Share;
                                                              ESP=Porcentaje por part.];
                                                   MinValue=0;
                                                   BlankZero=Yes }
    { 41  ;   ;Amount per Share    ;Decimal       ;OnValidate=BEGIN
                                                                IF "Amount per Share" <> 0 THEN BEGIN
                                                                  "Allocation Type" := "Allocation Type"::"Amount per Share";
                                                                  "Percent per Share" := 0;
                                                                END ELSE
                                                                  "Allocation Type" := "Allocation Type"::"All Costs";
                                                              END;

                                                   CaptionML=[ENU=Amount per Share;
                                                              ESP=Importe por part.];
                                                   MinValue=0;
                                                   BlankZero=Yes }
    { 50  ;   ;Share Updated on    ;Date          ;CaptionML=[ENU=Share Updated on;
                                                              ESP=Partic. actualizada el];
                                                   Editable=No }
    { 60  ;   ;Last Date Modified  ;Date          ;CaptionML=[ENU=Last Date Modified;
                                                              ESP=Fecha £lt. modificaci¢n];
                                                   Editable=No }
    { 61  ;   ;User ID             ;Code20        ;TableRelation=User;
                                                   OnLookup=VAR
                                                              LoginMgt@1150000 : Codeunit 418;
                                                            BEGIN
                                                              LoginMgt.LookupUserID("User ID");
                                                            END;

                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=User ID;
                                                              ESP=Id. usuario];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;ID,Line No.                             ;SumIndexFields=Share;
                                                   Clustered=Yes }
    {    ;Target Cost Type                         }
    {    ;Target Cost Center                       }
    {    ;Target Cost Object                       }
    {    ;ID,Allocation Type                       }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1150004 : TextConst 'ENU=You can not define both a cost center and a cost object.;ESP=No se puede definir un centro coste y un objeto coste.';
      Text001@1150005 : TextConst 'ENU=%1 can only be use with static allocations.;ESP=%1 s¢lo se puede usar con asignaciones est ticas.';
      AllocTarget@1150000 : Record 3010557;
      AllocSource@1150001 : Record 3010556;
      PctTotal@1150003 : Decimal;

    PROCEDURE CalcPercent@1();
    BEGIN
      MODIFY;  // Actual line, write share, as contained in FlowField

      WITH AllocTarget DO BEGIN
        COPY(Rec);
        AllocSource.GET(ID);
        AllocSource.CALCFIELDS("Total Share");

        IF FIND('-') THEN REPEAT
            IF AllocSource."Total Share" <> 0 THEN
              Percent := ROUND(100 * Share / AllocSource."Total Share",0.00001)
            ELSE
              Percent := 0;
            PctTotal := PctTotal + Percent;  // Add, to check rounding error
            "Share Updated on" := TODAY;
            MODIFY;
          UNTIL NEXT = 0;

        // If total of percentage <> 100: Rounding on final line
        IF PctTotal <> 100 THEN BEGIN
          Percent := Percent + (100 - PctTotal);
          MODIFY;
        END;
        Rec.COPY(AllocTarget);
      END;
    END;

    BEGIN
    END.
  }
}
