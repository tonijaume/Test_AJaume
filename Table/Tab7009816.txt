OBJECT Table 7009816 Suplemento agrupacion
{
  OBJECT-PROPERTIES
  {
    Date=05/05/15;
    Time=18:07:06;
    Modified=Yes;
    Version List=AIC2009;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               rSupAgr.RESET;
               rSupAgr.SETRANGE("Num Agrupacion", "Num Agrupacion");
               IF rSupAgr.FINDLAST THEN
                 ID := rSupAgr.ID + 1
               ELSE
                 ID := 1;

               comprueba_estado_agrupacion(FALSE); //+$001
             END;

    OnModify=BEGIN
               comprueba_estado_agrupacion(FALSE); //+$001
             END;

    OnDelete=BEGIN
               comprueba_estado_agrupacion(TRUE); //+$001
             END;

    OnRename=BEGIN
               ERROR(Text000);
             END;

    CaptionML=[ENU=Transfer service supplements;
               ESP=Suplemento agrupacion];
    LookupFormID=Form7009878;
    DrillDownFormID=Form7009878;
  }
  FIELDS
  {
    { 1   ;   ;Num Agrupacion      ;Integer       ;CaptionML=[ENU=Service No.;
                                                              ESP=Num Agrupacion];
                                                   Description=PK, FK Agrupacion;
                                                   Editable=No }
    { 3   ;   ;ID                  ;Integer       ;CaptionML=[ENU=ID;
                                                              ESP=ID];
                                                   Description=PK;
                                                   Editable=No }
    { 5   ;   ;Cod Suplemento      ;Code10        ;TableRelation="Tipo elemento"."Tipo elemento" WHERE (Humano=CONST(No));
                                                   CaptionML=[ENU=Supplement code;
                                                              ESP=Cod Suplemento];
                                                   Description=FK Tipo elemento }
    { 7   ;   ;Cantidad            ;Integer       ;CaptionML=[ENU=Quantity;
                                                              ESP=Cantidad];
                                                   MinValue=0 }
    { 9   ;   ;Num Contrato        ;Code10        ;OnValidate=VAR
                                                                lrConCmp@1103355000 : Record 7009787;
                                                              BEGIN
                                                                lrConCmp.RESET;
                                                                lrConCmp.SETRANGE("N§ Contrato compra", "Num Contrato");
                                                                lrConCmp.SETRANGE(Confirmado          , TRUE);
                                                                IF NOT lrConCmp.FINDFIRST THEN
                                                                  ERROR(Text001, "Num Contrato");
                                                              END;

                                                   OnLookup=VAR
                                                              lrAgr@1103355000 : Record 7009796;
                                                              lrConCmp@1103355001 : Record 7009787;
                                                              lfTabContratos@1103355002 : Form 7009899;
                                                            BEGIN
                                                              lrAgr.GET("Num Agrupacion");

                                                              lrConCmp.RESET;
                                                              lrConCmp.SETCURRENTKEY(Proveedor,
                                                                                     "Fecha inicio contrato");
                                                              lrConCmp.SETFILTER("Fecha inicio contrato", '<=%1', lrAgr.Fecha);
                                                              lrConCmp.SETFILTER("Fecha final contrato" , '>=%1', lrAgr.Fecha);
                                                              lrConCmp.SETRANGE (Confirmado             , TRUE);

                                                              CLEAR(lfTabContratos);
                                                              lfTabContratos.EDITABLE(FALSE);
                                                              lfTabContratos.LOOKUPMODE(TRUE);
                                                              lfTabContratos.SETTABLEVIEW(lrConCmp);
                                                              IF lfTabContratos.RUNMODAL = ACTION::LookupOK THEN
                                                              BEGIN
                                                                lfTabContratos.GETRECORD(lrConCmp);
                                                                VALIDATE("Num Contrato", lrConCmp."N§ Contrato compra");
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Contract No;
                                                              ESP=Num Contrato];
                                                   Description=FK Contrato compra transfer }
    { 11  ;   ;Zona                ;Code10        ;OnValidate=VAR
                                                                lrZona@1103355000 : Record 7009791;
                                                              BEGIN
                                                                lrZona.RESET;
                                                                lrZona.SETRANGE(Contrato       , "Num Contrato");
                                                                lrZona.SETRANGE("Tipo contrato", lrZona."Tipo contrato"::Compra);
                                                                lrZona.SETRANGE(Zona            , Zona);
                                                                IF NOT lrZona.FINDFIRST THEN
                                                                  ERROR(Text002, Zona, "Num Contrato");
                                                              END;

                                                   OnLookup=VAR
                                                              lrZona@1103355000 : Record 7009791;
                                                              lfTabZona@1103355001 : Form 7009901;
                                                            BEGIN
                                                              IF "Num Contrato" <> '' THEN
                                                              BEGIN
                                                                lrZona.RESET;
                                                                lrZona.FILTERGROUP(2);
                                                                lrZona.SETRANGE(Contrato       , "Num Contrato");
                                                                lrZona.SETRANGE("Tipo contrato", lrZona."Tipo contrato"::Compra);
                                                                lrZona.FILTERGROUP(0);

                                                                CLEAR(lfTabZona);
                                                                lfTabZona.SETTABLEVIEW(lrZona);
                                                                lfTabZona.EDITABLE(FALSE);
                                                                lfTabZona.LOOKUPMODE(TRUE);
                                                                IF lfTabZona.RUNMODAL = ACTION::LookupOK THEN
                                                                BEGIN
                                                                  lfTabZona.GETRECORD(lrZona);
                                                                  VALIDATE(Zona, lrZona.Zona);
                                                                END;
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Location;
                                                              ESP=Zona];
                                                   Description=FK Zona precio transfer }
  }
  KEYS
  {
    {    ;Num Agrupacion,ID                       ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1103355001 : TextConst 'ENU=Supplements cannot be moved from the service;ESP=No se pueden cambiar de agrupacion los suplementos.';
      Text001@1103355002 : TextConst 'ENU=Contract number %1 does not exist;ESP=No existe el contrato numero %1.';
      Text002@1103355003 : TextConst 'ENU=Zone %1 of the contract %2 does not exist;ESP=No existe la zona %1 dentro del contrato %2.';
      Text003@1103355004 : TextConst 'ENU=Grouping %1 does not exist, contact with your administrator;ESP=No existe la agrupacion %1, consulte con su administrador.';
      Text004@1103355005 : TextConst 'ENU=Unable to modify supplements of a confirmed service.;ESP=No se pueden modificar los suplementos de una agrupacion confirmada.';
      rSupAgr@1103355000 : Record 7009816;
      Text005@1000000000 : TextConst 'ENU=The cost of this service is already validated.;ESP=El coste de esta agrupacion ya esta validado.';
      rPar@1000000001 : Record 7009700;
      Text006@1000000002 : TextConst 'ENU=There is no price for this supplement in the contract %1;ESP=No existe precios para este suplemento en el contrato %1';
      Text007@1000000003 : TextConst 'ENU=The zone %1 doesn''t exist in the contract;ESP=La zona %1 no existe en el contrato';

    PROCEDURE comprueba_estado_agrupacion@1(pwBorrado@1000000003 : Boolean);
    VAR
      lrAgr@1103355000 : Record 7009796;
      lrCoste@1000000000 : Record 7009805;
      lrPreC@1000000001 : Record 7009789;
      lwExistePrecio@1000000002 : Boolean;
      lwOrigen@1000000004 : Code[10];
      lwDestino@1000000005 : Code[10];
    BEGIN
      // comprueba_estado_agrupacion

      rPar.FINDFIRST;

      IF NOT lrAgr.GET("Num Agrupacion") THEN
        ERROR(Text003, "Num Agrupacion");

      IF lrAgr.Estado = lrAgr.Estado::Confirmado THEN
      BEGIN
        IF NOT pwBorrado THEN
        BEGIN
          //+$001 <
          //. Permitimos agregar/modificar un suplemento de una agrupacion confirmada

          //. Comprobamos que el coste de la agrupacion no este validado
          lrCoste.RESET;
          lrCoste.SETRANGE (Agrupacion  , "Num Agrupacion");
          lrCoste.SETRANGE (Concepto    , 'TRNC');
          lrCoste.SETFILTER("N§ Factura", '<>%1', '');
          IF NOT lrCoste.ISEMPTY THEN
            ERROR(Text005);

          //. Comprobar que los campos obligatorios esten rellenados
          TESTFIELD("Cod Suplemento");
          TESTFIELD(Cantidad);
          TESTFIELD("Num Contrato");

          //. Convertimos la zona dentro del contrato
          IF lrAgr."Traslado en destino" THEN
            lwOrigen := _TraduceZonaCompra(lrAgr."Origen/Destino transfer", 1)
          ELSE
            lwOrigen := _TraduceZonaCompra(lrAgr."Origen/Destino transfer", 0);

          IF Zona <> '' THEN
            lwDestino := _TraduceZonaCompra(Zona, 1) //+$003
          ELSE
            lwDestino := '';

          //. Buscamos si tiene precio
          lwExistePrecio := TRUE;

          lrPreC.RESET;
          lrPreC.SETCURRENTKEY(Delegacion,
                               "N§ Contrato",
                               "Codigo precio",
                               Destino,
                               "Tipo vehiculo",
                               "Fecha desde",
                               "Fecha hasta");
          lrPreC.SETRANGE (Delegacion     , rPar.Delegacion);
          lrPreC.SETRANGE ("N§ Contrato"  , "Num Contrato");
          lrPreC.SETRANGE ("Codigo precio", lrPreC."Codigo precio"::Suplemento);
          lrPreC.SETRANGE (Activo         , TRUE);

          lrPreC.SETRANGE (Origen         , lwOrigen);
          lrPreC.SETRANGE (Destino        , lwDestino);

          lrPreC.SETRANGE ("Tipo elemento", "Cod Suplemento");
          lrPreC.SETFILTER("Fecha desde"  , '<=%1', lrAgr.Fecha);
          lrPreC.SETFILTER("Fecha hasta"  , '>=%1', lrAgr.Fecha);
          lrPreC.SETFILTER("Rango desde"  , '<=%1', Cantidad);
          lrPreC.SETFILTER("Rango hasta"  , '>=%1', Cantidad);
          IF NOT lrPreC.FINDFIRST THEN //+$024
          BEGIN
            //. Giramos origen/destino por si han metido la ruta al reves
            lrPreC.SETRANGE(Origen , lwDestino);
            lrPreC.SETRANGE(Destino, lwOrigen);
            lwExistePrecio := lrPreC.FINDFIRST;
          END;

          IF NOT lwExistePrecio THEN
            ERROR(Text006);

          lrAgr."Pendiente recalcular" := TRUE;
          lrAgr.MODIFY;
        END
        //. Si se trata de un borrado marcamos la agrupacion para recalcular
        ELSE
        BEGIN
          //. Comprobamos que el coste de la agrupacion no este validado
          lrCoste.RESET;
          lrCoste.SETRANGE (Agrupacion  , "Num Agrupacion");
          lrCoste.SETRANGE (Concepto    , 'TRNC');
          lrCoste.SETFILTER("N§ Factura", '<>%1', '');
          IF NOT lrCoste.ISEMPTY THEN
            ERROR(Text005);

          lrAgr."Pendiente recalcular" := TRUE;
          lrAgr.MODIFY;
        END;
        //+$001 >

        //-$001ERROR(Text004);
      END;
    END;

    PROCEDURE _TraduceZonaCompra@1000000000(pwCodigo@1000000000 : Code[20];pwTipoCodigo@1000000001 : 'Aeropuerto,Zona') : Code[10];
    VAR
      lrZonaTransfer@1000000002 : Record 7009791;
      lrAeropuerto@1000000003 : Record 7009704;
    BEGIN
      // TraduceZonaCompra

      IF pwTipoCodigo = pwTipoCodigo::Aeropuerto THEN
      BEGIN
        lrAeropuerto.GET(pwCodigo);
        lrAeropuerto.TESTFIELD("Zona fisica");
        pwCodigo := lrAeropuerto."Zona fisica";
      END;

      lrZonaTransfer.RESET;
      lrZonaTransfer.SETRANGE("Tipo contrato", lrZonaTransfer."Tipo contrato"::Compra);
      lrZonaTransfer.SETRANGE(Contrato       , "Num Contrato");
      lrZonaTransfer.SETRANGE("Zona fisica"  , pwCodigo);
      IF lrZonaTransfer.FINDFIRST THEN
        EXIT(lrZonaTransfer.Zona)
      ELSE
        ERROR(Text007, pwCodigo);
    END;

    BEGIN
    {
      $001 AJS 19122014 CNT-OC-13021, Recalcular agrupaciones confirmadas

      $002 AJS 19032015 Comprobar que el coste no este validado tambien si borramos un suplemento

      $003 AJS 05052015 Error en la conversion de la zona especificada en el suplemento
    }
    END.
  }
}
