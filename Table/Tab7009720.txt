OBJECT Table 7009720 Oficina ventas
{
  OBJECT-PROPERTIES
  {
    Date=09/03/15;
    Time=17:24:18;
    Modified=Yes;
    Version List=AIC2009,CNT;
  }
  PROPERTIES
  {
    OnRename=BEGIN
               ERROR(Text0001);
             END;

    CaptionML=[ENU=Sales office;
               ESP=Oficina ventas];
    LookupFormID=Form7009726;
    DrillDownFormID=Form7009726;
  }
  FIELDS
  {
    { 1   ;   ;Codigo              ;Code3         ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1),
                                                                                               Dimension Value Type=CONST(Standard));
                                                   OnValidate=VAR
                                                                lrValDim@1100217000 : Record 349;
                                                              BEGIN
                                                                IF Codigo <> '' THEN BEGIN
                                                                  CLEAR(lrValDim);
                                                                  lrValDim.SETCURRENTKEY(Code,"Global Dimension No.");
                                                                  lrValDim.SETRANGE(Code, Codigo);
                                                                  lrValDim.SETRANGE("Global Dimension No.", 1);
                                                                  IF lrValDim.FINDSET THEN
                                                                    Nombre := lrValDim.Name;
                                                                END
                                                                  ELSE
                                                                    Nombre := '';
                                                              END;

                                                   CaptionML=[ENU=Code;
                                                              ESP=Codigo];
                                                   NotBlank=Yes }
    { 10  ;   ;Nombre              ;Text50        ;CaptionML=[ENU=Name;
                                                              ESP=Nombre] }
    { 100 ;   ;Digito tickets      ;Code1         ;InitValue=0;
                                                   OnValidate=BEGIN
                                                                IF "Digito tickets" <> '0' THEN
                                                                BEGIN
                                                                  rOficina.RESET;
                                                                  rOficina.SETRANGE ("Digito tickets", "Digito tickets");
                                                                  rOficina.SETFILTER(Codigo          , '<>%1', Codigo);
                                                                  IF rOficina.FINDFIRST THEN
                                                                    ERROR(Text0002, rOficina.Codigo);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Tickets Digit;
                                                              ESP=Digito tickets];
                                                   ValuesAllowed=[0;1;2;3;4;5;6;7;8;9] }
    { 200 ;   ;Address             ;Text50        ;CaptionML=[ENU=Address;
                                                              ESP=Direcci¢n] }
    { 205 ;   ;Address 2           ;Text50        ;CaptionML=[ENU=Address 2;
                                                              ESP=Direcci¢n 2] }
    { 210 ;   ;City                ;Text30        ;OnValidate=BEGIN
                                                                PostCode.ValidateCity(City, "Post Code", County);
                                                              END;

                                                   OnLookup=BEGIN
                                                              PostCode.LookUpCity(City, "Post Code", County, TRUE);
                                                            END;

                                                   CaptionML=[ENU=City;
                                                              ESP=Poblaci¢n] }
    { 215 ;   ;Post Code           ;Code20        ;TableRelation="Post Code";
                                                   OnValidate=BEGIN
                                                                PostCode.ValidatePostCode(City, "Post Code", County);
                                                              END;

                                                   OnLookup=BEGIN
                                                              PostCode.LookUpPostCode(City, "Post Code", County, TRUE);
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Post Code;
                                                              ESP=C.P.] }
    { 220 ;   ;County              ;Text30        ;CaptionML=[ENU=County;
                                                              ESP=Provincia] }
    { 225 ;   ;Country/Region Code ;Code10        ;TableRelation=Country/Region;
                                                   CaptionML=[ENU=Country/Region Code;
                                                              ESP=C¢d. pa¡s/regi¢n] }
  }
  KEYS
  {
    {    ;Codigo                                  ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text0001@1100217000 : TextConst 'ENU=Rename is not allowed;ESP=No se puede renombrar';
      rOficina@1100217001 : Record 7009720;
      Text0002@1100217002 : TextConst 'ENU=This digit for the tickets is assigned to the office %1.;ESP=Este digito de ticket esta asignado a la oficina %1.';
      PostCode@1100217003 : Record 225;

    PROCEDURE GetOfficeUserFilters@1100217000(VAR pwFiltros@1100217000 : ARRAY [255] OF Text[250]) : Boolean;
    VAR
      lrUser@1100217002 : Record 91;
      lrProd@1100217001 : Record 7009710;
      i@1100217003 : Integer;
      lwExc@1100217004 : Code[21];
    BEGIN
      // GetOfficeUserFilters
      // JPT 08/08/12
      // Esta funci¢n filnalmente no se utiliza en ning£n lugar. Sin embargo no la he eliminado porque me parece una
      // soluci¢n curiosa para otros casos similares.

      // La finalidad de esta funci¢n es devolver un filtro en una cadena de los codigos de excursion
      // permitidos para el usuario actual.
      // Se nos presenta el problema de que una cadena de filtro tiene una longitud m xima de 250 caracteres
      // Cantidad que nos parece insuficiente dado la gran cantidad de excursiones existentes
      // Es por eso que nos apoyamos en una propiedad del filtrado que es FilterGroup
      // Tenemos hasta 255 niveles de filtrado distintos.
      // Por eso lo que hacemos es ir acumulando cadenas de 250 en el array pwFiltros ques un parametro de salida
      // Por otro lado esta funci¢n devuelve False si el usuario No tiene oficina parametrizada
      // Si tiene oficina relacionada, pero ninguna excursi¢n est  relacionada con esa oficina
      // devolvemos en la primera linea una cadena de caracteres en blanco para que el filtrado no devuelva ningun registro
      // Tengase en cuenta que los grupos de filtro empiezan por el 0, mientas que el array empieza por el 1
      // Espero que funcione.
      // OJO... NUNCA EMPLEAR el filtergroup 1. Casi mejor empezar por el 10

      CLEAR(pwFiltros);

      IF NOT lrUser.GET(USERID) THEN
        EXIT;

      IF lrUser."Oficina Excursiones"='' THEN
        EXIT(FALSE);

      CLEAR(lrProd);
      lrProd.SETRANGE("Tipo Producto", lrProd."Tipo Producto"::Excursion);
      lrProd.SETRANGE(Oficina        , lrUser."Oficina Excursiones");
      IF lrProd.FINDSET THEN BEGIN
        i :=1;
        REPEAT
          lwExc := lrProd.Codigo;
          IF pwFiltros[i] <> '' THEN
            lwExc := '|' + lwExc;
          IF STRLEN(pwFiltros[i]) + STRLEN(lwExc) > MAXSTRLEN(pwFiltros[i]) THEN BEGIN
            i +=1;
            lwExc := lrProd.Codigo; // Al principio no necesitamos el separador |
          END;
          pwFiltros[i] += lwExc;
        UNTIL lrProd.NEXT=0;
      END;
      // En ning£n lugar controlamos que no se sobrepase el array, pero la verdad, eso me pareceria una pasada

      IF pwFiltros[1] = '' THEN
        pwFiltros[1] := '          ';

      EXIT(TRUE);
    END;

    BEGIN
    {
      JPT 08/08/12 CNT-OC-12004 Incluir filtro por oficina en las excursiones

      $001 AJS 30012013 Incluir un campo "Digito tickets" para que el primer numero identifique la oficina en entornos
                        multi oficina donde las cuponeras fisicas puedan duplicarse

      $002 AJS 09032015 Hay que hacer que el codigo de oficina sea solo de 3 digitos
    }
    END.
  }
}
