OBJECT Table 7009728 Plantilla celdas
{
  OBJECT-PROPERTIES
  {
    Date=18/10/12;
    Time=11:41:03;
    Modified=Yes;
    Version List=AIC2009;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               VALIDATE("Nombre celda");
             END;

    CaptionML=[ENU=Cells template;
               ESP=Plantilla celdas];
  }
  FIELDS
  {
    { 1   ;   ;Nombre esq. cuentas ;Code10        ;CaptionML=[ENU=Acc. Schedule Name;
                                                              ESP=Nombre esq. cuentas;
                                                              FRA=Nom esq. comptes;
                                                              ITA=Nome situazione contabile] }
    { 2   ;   ;Nombre plantilla columnas;Code10   ;CaptionML=[ENU=Columns template name;
                                                              ESP=Nombre plantilla columnas;
                                                              FRA=Nom modäle colonnes] }
    { 3   ;   ;Nß Fila             ;Integer       ;CaptionML=[ENU=Row No.;
                                                              ESP=Nß Fila;
                                                              FRA=Nß RangÇe] }
    { 4   ;   ;Nß Columna          ;Integer       ;CaptionML=[ENU=Column No.;
                                                              ESP=Nß Columna;
                                                              FRA=Nß Colonne] }
    { 5   ;   ;Nombre celda        ;Code30        ;OnValidate=BEGIN
                                                                AccSchedLine.GET("Nombre esq. cuentas", "Nß Fila");
                                                                AccSchedLine.TESTFIELD("Row No.");
                                                                ColumnLayout.GET("Nombre plantilla columnas", "Nß Columna");
                                                                ColumnLayout.TESTFIELD("Column No.");
                                                                "Nombre celda" := STRSUBSTNO('%1:%2', AccSchedLine."Row No.", ColumnLayout."Column No.");
                                                              END;

                                                   CaptionML=[ENU=Cell Name;
                                                              ESP=Nombre celda;
                                                              FRA=Nom cellule] }
    { 6   ;   ;Tipo celda          ;Option        ;OnValidate=BEGIN
                                                                IF ("Tipo celda"::Formula IN ["Tipo celda", xRec."Tipo celda"]) AND
                                                                   ("Tipo celda" <> xRec."Tipo celda") THEN BEGIN
                                                                  Formula := '';
                                                                  IF "Tipo celda" = "Tipo celda"::Formula THEN
                                                                    VALIDATE("Tipo mov. cont.", "Tipo mov. cont."::"G/L Entries");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Cell Type;
                                                              ESP=Tipo celda;
                                                              FRA=Type cellule];
                                                   OptionCaptionML=[ENU=Formula,Net Change,Balance at Date,Beginning Balance,Year to Date,Rest of Fiscal Year,Entire Fiscal Year;
                                                                    ESP=F¢rmula,Saldo periodo,Saldo a la fecha,Saldo inicial,Hasta la fecha,Resto del a§o fiscal,A§o fiscal completo;
                                                                    FRA=Formule,Solde pÇriode,Solde Ö la date,Solde initial,Jusqu'Ö la date,Reste de l'annÇe fiscale,AnnÇe fiscale compläte];
                                                   OptionString=Formula,Net Change,Balance at Date,Beginning Balance,Year to Date,Rest of Fiscal Year,Entire Fiscal Year }
    { 7   ;   ;Tipo mov. cont.     ;Option        ;OnValidate=BEGIN
                                                                IF "Tipo mov. cont." IN ["Tipo mov. cont."::"5", "Tipo mov. cont."::"Analytic Data"] THEN
                                                                  Formula := ''
                                                                ELSE BEGIN
                                                                  "Total Hotel" := '';
                                                                  "Total Tipo persona" := '';
                                                                  "Total Tipo habitacion" := '';
                                                                  "Total Tipo regimen" := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Acc. Mov. Type;
                                                              ESP=Tipo mov. cont.;
                                                              FRA=Type mvt. suit.;
                                                              ITA=Tipo mov. contabile];
                                                   OptionCaptionML=[ENU=G/L Entries,G/L Budget Entries,,,,,Analytic Data;
                                                                    ESP=Mov. contabilidad,Mov. contabilidad ppto.,,,,,Dato anal°tico];
                                                   OptionString=G/L Entries,G/L Budget Entries,,,,,Analytic Data }
    { 8   ;   ;Formula             ;Text250       ;CaptionML=[ENU="Formula ";
                                                              ESP=Formula;
                                                              FRA=Formule] }
    { 9   ;   ;Muestra signo opuesto;Boolean      ;CaptionML=[ENU=Shows opposite sign;
                                                              ESP=Muestra signo opuesto;
                                                              FRA=êchantillon signe opposÇ;
                                                              ITA=Mostra con segno opposto] }
    { 10  ;   ;Total Hotel         ;Text80        ;CaptionML=[ENU=Total Hotel;
                                                              ESP=Total Hotel;
                                                              FRA=Total Hìtel;
                                                              ITA=Totale Hotel;
                                                              PTG=Total hotel] }
    { 11  ;   ;Total Tipo persona  ;Text80        ;CaptionML=[ENU=Total Guest Type;
                                                              ESP=Total Tipo persona;
                                                              FRA=Total Type personne] }
    { 12  ;   ;Total Tipo habitacion;Text80       ;CaptionML=[ENU=Total Room Type;
                                                              ESP=Total Tipo habitacion;
                                                              FRA=Total Type chambre] }
    { 13  ;   ;Total Tipo regimen  ;Text80        ;CaptionML=[ENU=Total Board Type;
                                                              ESP=Total Tipo regimen;
                                                              FRA=Total Type rÇgime] }
    { 7010450;;Analytic data Code  ;Code10        ;TableRelation="Dato analitico";
                                                   CaptionML=[ENU=Analysis data Code;
                                                              ESP=C¢d. dato anal°tico;
                                                              FRA=Code donnÇe analytique];
                                                   Description=SGI-118 }
    { 7010451;;Dim. 1 analytic data Tot.;Text80   ;CaptionML=[ENU=Dim. 1 analytic data Tot.;
                                                              ESP=Total Dim. 1 dato anal°tico;
                                                              FRA=Total Dim. 1 donnÇe analytique];
                                                   Description=SGI-118 }
    { 7010452;;Dim. 2 analytic data Tot.;Text80   ;CaptionML=[ENU=Dim. 2 analytic data Tot.;
                                                              ESP=Total Dim. 2 dato anal°tico;
                                                              FRA=Total Dim. 2 donnÇe analytique];
                                                   Description=SGI-118 }
    { 7010453;;Dim. 3 analytic data Tot.;Text80   ;CaptionML=[ENU=Dim. 4 analytic data Tot.;
                                                              ESP=Total Dim. 3 dato anal°tico;
                                                              FRA=Total Dim. 3 donnÇe analytique];
                                                   Description=SGI-118 }
    { 7010454;;Dim. 4 analytic data Tot.;Text80   ;CaptionML=[ENU=Dim. 4 analytic data Tot.;
                                                              ESP=Total Dim. 4 dato anal°tico;
                                                              FRA=Total Dim. 4 donnÇe analytique];
                                                   Description=SGI-118 }
  }
  KEYS
  {
    {    ;Nombre esq. cuentas,Nombre plantilla columnas,Nß Fila,Nß Columna;
                                                   Clustered=Yes }
    {    ;Nombre celda                            ;KeyGroups=RENUMERING }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      AccSchedName@1103355000 : Record 84;
      AccSchedLine@1103350001 : Record 85;
      ColumnLayout@1103350000 : Record 334;

    PROCEDURE Actualizar@1103350000(par_Esquema@1103350000 : Code[10];par_Plantilla@1103350001 : Code[10];par_Fil@1103350002 : Integer;par_Col@1103350003 : Integer;par_Tipo@1103350004 : 'Tipo celda,Tipo mov. cont.,Sumatorio,,Signo,Hotel,Tipo persona,Tipo habitacion,Tipo regimen,Dato analitico,Dim1,Dim2,Dim3,Dim4';par_Valor@1103350005 : Text[250]);
    VAR
      wBorrar@1103355000 : Boolean;
    BEGIN
      IF NOT GET(par_Esquema, par_Plantilla, par_Fil, par_Col) THEN BEGIN
        INIT;
        AccSchedLine.GET(par_Esquema, par_Fil);
        AccSchedLine.TESTFIELD("Row No.");
        ColumnLayout.GET(par_Plantilla, par_Col);
        ColumnLayout.TESTFIELD("Column No.");
        "Nombre esq. cuentas" := par_Esquema;
        "Nombre plantilla columnas" := par_Plantilla;
        "Nß Fila" := par_Fil;
        "Nß Columna" := par_Col;
        "Nombre celda" := STRSUBSTNO('%1:%2', AccSchedLine."Row No.", ColumnLayout."Column No.");
        INSERT;
        xRec := Rec;
      END
      ELSE
        xRec := Rec;


      CASE par_Tipo OF
        par_Tipo::"Tipo celda":
          EVALUATE("Tipo celda", par_Valor);
        par_Tipo::"Tipo mov. cont.":
          EVALUATE("Tipo mov. cont.", par_Valor);
        par_Tipo::Sumatorio:
          Formula := par_Valor;
        par_Tipo::Signo:
          EVALUATE("Muestra signo opuesto", par_Valor);
        par_Tipo::Hotel:
          "Total Hotel" := par_Valor;
        par_Tipo::"Tipo persona":
          "Total Tipo persona" := par_Valor;
        par_Tipo::"Tipo habitacion":
          "Total Tipo habitacion" := par_Valor;
        par_Tipo::"Tipo regimen":
          "Total Tipo regimen" := par_Valor;
        par_Tipo::"Dato analitico":
          "Analytic data Code" := par_Valor;
        par_Tipo::Dim1:
          "Dim. 1 analytic data Tot." := par_Valor;
        par_Tipo::Dim2:
          "Dim. 2 analytic data Tot." := par_Valor;
        par_Tipo::Dim3:
          "Dim. 3 analytic data Tot." := par_Valor;
        par_Tipo::Dim4:
          "Dim. 4 analytic data Tot." := par_Valor;
      END;

      IF (par_Valor = '') AND NOT (par_Tipo IN [par_Tipo::"Tipo celda", par_Tipo::"Tipo mov. cont."]) THEN BEGIN
        wBorrar := ("Tipo mov. cont." IN ["Tipo mov. cont."::"G/L Entries",
           "Tipo mov. cont."::"G/L Budget Entries",
           "Tipo mov. cont."::"7",
           "Tipo mov. cont."::"8"]) AND
          (Formula = '');
        IF NOT wBorrar THEN
          wBorrar := NOT ("Tipo mov. cont." IN ["Tipo mov. cont."::"G/L Entries",
            "Tipo mov. cont."::"G/L Budget Entries",
            "Tipo mov. cont."::"7",
            "Tipo mov. cont."::"8"]) AND
           ("Total Hotel" = '') AND ("Total Tipo persona" = '') AND
           ("Total Tipo habitacion" = '') AND ("Total Tipo regimen" = '');
        IF NOT wBorrar THEN
          wBorrar := ("Tipo mov. cont." = "Tipo mov. cont."::"15") AND
            ("Analytic data Code" = '') AND
            ("Dim. 1 analytic data Tot." = '') AND ("Dim. 2 analytic data Tot." = '') AND
            ("Dim. 3 analytic data Tot." = '') AND ("Dim. 4 analytic data Tot." = '');
      END;

      {
      IF NOT (par_Tipo IN [par_Tipo::"Tipo celda", par_Tipo::"Tipo mov. cont."]) AND
         ((("Tipo mov. cont." IN ["Tipo mov. cont."::"G/L Entries",
            "Tipo mov. cont."::"G/L Budget Entries",
            "Tipo mov. cont."::"Gathered G/L Entries",
            "Tipo mov. cont."::"Gathered G/L Budget Entries"]) AND
           (Formula = '')) OR
          (NOT ("Tipo mov. cont." IN ["Tipo mov. cont."::"G/L Entries",
            "Tipo mov. cont."::"G/L Budget Entries",
            "Tipo mov. cont."::"Gathered G/L Entries",
            "Tipo mov. cont."::"Gathered G/L Budget Entries"]) AND
           ("Total Hotel" = '') AND ("Total Tipo persona" = '') AND
           ("Total Tipo habitacion" = '') AND ("Total Tipo regimen" = '')) OR
          (("Tipo mov. cont." = "Tipo mov. cont."::"Analytic Data") AND
           ("Analytic data Code" = '') AND
           ("Dim. 1 analytic data Tot." = '') AND ("Dim. 2 analytic data Tot." = '') AND
           ("Dim. 3 analytic data Tot." = '') AND ("Dim. 4 analytic data Tot." = '')))
          THEN
        DELETE
      }
      IF wBorrar THEN
        DELETE
      ELSE BEGIN
        CASE par_Tipo OF
          par_Tipo::"Tipo celda":
            IF "Tipo celda" = "Tipo celda"::Formula THEN BEGIN
              IF xRec."Tipo celda" <> "Tipo celda"::Formula THEN
                Formula := '';
              "Tipo mov. cont." := "Tipo mov. cont."::"G/L Entries";
              "Total Hotel" := '';
              "Total Tipo persona" := '';
              "Total Tipo habitacion" := '';
              "Total Tipo regimen" := '';
              "Analytic data Code" := '';
              "Dim. 1 analytic data Tot." := '';
              "Dim. 2 analytic data Tot." := '';
              "Dim. 3 analytic data Tot." := '';
              "Dim. 4 analytic data Tot." := '';
            END
            ELSE IF (xRec."Tipo celda" = "Tipo celda"::Formula) THEN
              Formula := '';
          par_Tipo::"Tipo mov. cont.":
            CASE "Tipo mov. cont." OF
              "Tipo mov. cont."::"G/L Entries","Tipo mov. cont."::"G/L Budget Entries",
              "Tipo mov. cont."::"7","Tipo mov. cont."::"8": BEGIN
                "Total Hotel" := '';
                "Total Tipo persona" := '';
                "Total Tipo habitacion" := '';
                "Total Tipo regimen" := '';
                "Analytic data Code" := '';
                "Dim. 1 analytic data Tot." := '';
                "Dim. 2 analytic data Tot." := '';
                "Dim. 3 analytic data Tot." := '';
                "Dim. 4 analytic data Tot." := '';
              END;
              "Tipo mov. cont."::"5", "Tipo mov. cont."::"Analytic Data",
              "Tipo mov. cont."::"9", "Tipo mov. cont."::"10",
              "Tipo mov. cont."::"11", "Tipo mov. cont."::"12",
              "Tipo mov. cont."::"13", "Tipo mov. cont."::"14": BEGIN
                Formula := '';
                "Analytic data Code" := '';
                "Dim. 1 analytic data Tot." := '';
                "Dim. 2 analytic data Tot." := '';
                "Dim. 3 analytic data Tot." := '';
                "Dim. 4 analytic data Tot." := '';
              END;
              "Tipo mov. cont."::"15": BEGIN
                Formula := '';
                "Total Hotel" := '';
                "Total Tipo persona" := '';
                "Total Tipo habitacion" := '';
                "Total Tipo regimen" := '';
              END;
            END;
          par_Tipo::"Dato analitico": IF "Analytic data Code" <> xRec."Analytic data Code" THEN BEGIN
            "Dim. 1 analytic data Tot." := '';
            "Dim. 2 analytic data Tot." := '';
            "Dim. 3 analytic data Tot." := '';
            "Dim. 4 analytic data Tot." := '';
          END;
        END;
        MODIFY;
      END;
    END;

    PROCEDURE LookUpDimAnaDataFilter@1103355000(DimNo@1000 : Integer;VAR Text@1001 : Text[250]) : Boolean;
    VAR
      AnalyticData@1103355000 : Record 7009911;
      DimVal@1002 : Record 7009913;
      DimValList@1003 : Form 7009761;
    BEGIN
      AccSchedName.GET("Nombre esq. cuentas");
      AccSchedLine.GET("Nombre esq. cuentas", "Nß Fila");
      IF "Analytic data Code" <> '' THEN
        AnalyticData.GET("Analytic data Code")
      ELSE IF AccSchedLine."Analytic data Code" <> '' THEN
        AnalyticData.GET(AccSchedLine."Analytic data Code")
      ELSE IF AccSchedName."Analytic data Code" <> '' THEN
        AnalyticData.GET(AccSchedName."Analytic data Code")
      ELSE
        EXIT;

      DimVal.SETRANGE("Cod. dato analitico", AnalyticData.Codigo);
      DimVal.SETRANGE(Dimension, DimNo-1);
      DimValList.LOOKUPMODE(TRUE);
      DimValList.SETTABLEVIEW(DimVal);
      IF DimValList.RUNMODAL = ACTION::LookupOK THEN BEGIN
        DimValList.GETRECORD(DimVal);
        Text := Text + DimValList.GetSelectionFilter;
        EXIT(TRUE);
      END ELSE
        EXIT(FALSE)
    END;

    BEGIN
    {
      // PLB 30/09/2005
      Nuevo desarrollo: HYG-105, GUI-117

      Posibilidad de calcular datos a nivel de celda para poder sacar datos distintos a los
      resultantes del esquema y panorama seleccionados
    }
    END.
  }
}
