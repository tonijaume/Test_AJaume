OBJECT Table 7009872 Linea calculo cotizacion
{
  OBJECT-PROPERTIES
  {
    Date=21/05/13;
    Time=11:35:52;
    Modified=Yes;
    Version List=AIC2009;
  }
  PROPERTIES
  {
    OnInsert=VAR
               lrLinCot@1103355000 : Record 7009872;
             BEGIN

               IF lrLinCot.FINDLAST THEN
                 Id := lrLinCot.Id + 1
               ELSE
                 Id:= 1;

               "Codigo calculo" := cCotCom.ObtenerCodigoCalculo(Rec);
             END;

    OnDelete=BEGIN

               // El trigger solo deberia usarse cuando se borra de manera interactiva.

               BorrarLineasCalculo;
               EliminarLineasSeleccionHotel;
             END;

    CaptionML=[ENU=Rate calculation line;
               ESP=Linea calculo cotizacion];
  }
  FIELDS
  {
    { 1   ;   ;Id                  ;Integer       ;TableRelation="Cabecera cotizacion".Id;
                                                   CaptionML=[ENU=ID;
                                                              ESP=ID];
                                                   Description=PK }
    { 2   ;   ;Id Cotizacion       ;Integer       ;CaptionML=[ENU=Id Value;
                                                              ESP=Id Cotizacion];
                                                   Description=FK Cabecera cotizacion }
    { 3   ;   ;Tipo                ;Option        ;CaptionML=[ENU=Type;
                                                              ESP=Tipo];
                                                   OptionCaptionML=[ENU=Hote,Transfer,Excursion;
                                                                    ESP=Hotel,Transfer,Excursion];
                                                   OptionString=Hotel,Transfer,Excursion;
                                                   Description=Hotel,Transfer,Excursion }
    { 4   ;   ;Hotel               ;Code20        ;TableRelation=Hotel.Hotel;
                                                   CaptionML=[ENU=Hotel;
                                                              ESP=Hotel] }
    { 5   ;   ;Codigo calculo      ;Code10        ;CaptionML=[ENU=Calculation code;
                                                              ESP=Codigo calculo];
                                                   Description=El codigo usado para rellenar el usuario en las tablas de calculo }
    { 6   ;   ;N§ Personas         ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Personas calculo" WHERE (Usuario=FIELD(Codigo calculo)));
                                                   CaptionML=[ENU=People No.;
                                                              ESP=N§ Personas];
                                                   Description=Calculado }
    { 7   ;   ;N§ Habitaciones     ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Hotel cotizacion"."N§ Habitaciones" WHERE (Id cotizacion=FIELD(Id Cotizacion),
                                                                                                               Id Hotel=FIELD(Id Producto),
                                                                                                               Tipo linea=CONST(Habitacion)));
                                                   CaptionML=[ENU=Rooms No.;
                                                              ESP=N§ Habitaciones];
                                                   Description=Calculado }
    { 8   ;   ;Fecha desde         ;Date          ;CaptionML=[ENU=Date From;
                                                              ESP=Fecha desde] }
    { 9   ;   ;Fecha hasta         ;Date          ;CaptionML=[ENU=Date To;
                                                              ESP=Fecha hasta] }
    { 10  ;   ;Seleccion           ;Boolean       ;CaptionML=[ENU=Selection;
                                                              ESP=Seleccion] }
    { 11  ;   ;Ingreso Regimen     ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Lin. Calculo".Importe WHERE (Usuario=FIELD(Codigo calculo),
                                                                                                 Coste/Ingreso=CONST(Ingreso),
                                                                                                 Concepto Coste=CONST(REGIMENV)));
                                                   CaptionML=[ENU=Board income;
                                                              ESP=Ingreso Regimen];
                                                   Description=Sum("Lin. Calculo".Importe WHERE (Usuario=FIELD(Codigo calculo),Coste/Ingreso=CONST(Ingreso),Concepto Coste=CONST(REGIMENV))) }
    { 12  ;   ;Ingreso Habitacion  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Lin. Calculo".Importe WHERE (Usuario=FIELD(Codigo calculo),
                                                                                                 Coste/Ingreso=CONST(Ingreso),
                                                                                                 Concepto Coste=CONST(HABITACIOV)));
                                                   CaptionML=[ENU=Room income;
                                                              ESP=Ingreso Habitacion];
                                                   Description=Sum("Lin. Calculo".Importe WHERE (Usuario=FIELD(Codigo calculo),Coste/Ingreso=CONST(Ingreso),Concepto Coste=CONST(HABITACIOV))) }
    { 13  ;   ;Ingreso Suplementos ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Lin. Calculo".Importe WHERE (Usuario=FIELD(Codigo calculo),
                                                                                                 Concepto Coste=CONST(SUPLEMENTV),
                                                                                                 Coste/Ingreso=CONST(Ingreso)));
                                                   CaptionML=[ENU=Supplements income;
                                                              ESP=Ingreso Suplementos];
                                                   Description=Sum("Lin. Calculo".Importe WHERE (Usuario=FIELD(Codigo calculo),Concepto Coste=CONST(SUPLEMENTV),Coste/Ingreso=CONST(Ingreso))) }
    { 14  ;   ;Ingreso Reg Habitacion;Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Lin. Calculo".Importe WHERE (Usuario=FIELD(Codigo calculo),
                                                                                                 Concepto Coste=CONST(REG HABITV),
                                                                                                 Coste/Ingreso=CONST(Ingreso)));
                                                   CaptionML=[ENU=Income reg room;
                                                              ESP=Ingreso Reg Habitacion];
                                                   Description=Sum("Lin. Calculo".Importe WHERE (Usuario=FIELD(Codigo calculo),Concepto Coste=CONST(REG HABITV),Coste/Ingreso=CONST(Ingreso)));
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 15  ;   ;Ingreso Reg Suplementos;Decimal    ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Lin. Calculo".Importe WHERE (Usuario=FIELD(Codigo calculo),
                                                                                                 Concepto Coste=CONST(REG SUPLEV),
                                                                                                 Coste/Ingreso=CONST(Ingreso)));
                                                   CaptionML=[ENU=Income reg Surcharges;
                                                              ESP=Ingreso Reg Suplementos];
                                                   Description=Sum("Lin. Calculo".Importe WHERE (Usuario=FIELD(Codigo calculo),Concepto Coste=CONST(REG SUPLEV),Coste/Ingreso=CONST(Ingreso)));
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 16  ;   ;Ingreso Reg Regimen ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Lin. Calculo".Importe WHERE (Usuario=FIELD(Codigo calculo),
                                                                                                 Concepto Coste=CONST(REG REGIMV),
                                                                                                 Coste/Ingreso=CONST(Ingreso)));
                                                   CaptionML=[ENU=Income red Board;
                                                              ESP=Ingreso Reg Regimen];
                                                   Description=Sum("Lin. Calculo".Importe WHERE (Usuario=FIELD(Codigo calculo),Concepto Coste=CONST(REG REGIMV),Coste/Ingreso=CONST(Ingreso)));
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 17  ;   ;Ingreso Extras Fijos;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Lin. Calculo".Importe WHERE (Usuario=FIELD(Codigo calculo),
                                                                                                 Concepto Coste=CONST(EXTRAFIJOV),
                                                                                                 Coste/Ingreso=CONST(Ingreso)));
                                                   CaptionML=[ENU=Fixed extras income;
                                                              ESP=Ingreso Extras Fijos];
                                                   Description=Sum("Lin. Calculo".Importe WHERE (Usuario=FIELD(Codigo calculo),Concepto Coste=CONST(EXTRAFIJOV),Coste/Ingreso=CONST(Ingreso)));
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 18  ;   ;Ingreso Extras Variables;Decimal   ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Lin. Calculo".Importe WHERE (Usuario=FIELD(Codigo calculo),
                                                                                                 Concepto Coste=CONST(EXTRAVARIV),
                                                                                                 Coste/Ingreso=CONST(Ingreso)));
                                                   CaptionML=[ENU=Variable extras income;
                                                              ESP=Ingreso Extras Variables];
                                                   Description=Sum("Lin. Calculo".Importe WHERE (Usuario=FIELD(codigo calculo),Concepto Coste=CONST(EXTRAVARIV),Coste/Ingreso=CONST(Ingreso)));
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 19  ;   ;Id Producto         ;Integer       ;CaptionML=[ENU=Item ID;
                                                              ESP=Id Producto];
                                                   Description=Enlaza con el registro de hotel/transfer de la cotizacion al que se refiere la l¡nea. }
    { 20  ;   ;Coste Regimen       ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Lin. Calculo".Importe WHERE (Usuario=FIELD(Codigo calculo),
                                                                                                 Coste/Ingreso=CONST(Coste),
                                                                                                 Concepto Coste=CONST(REGIMEN)));
                                                   CaptionML=[ENU=Board cost;
                                                              ESP=Coste Regimen];
                                                   Description=Sum("Lin. Calculo".Importe WHERE (Usuario=FIELD(Codigo calculo),Coste/Ingreso=CONST(Coste),Concepto Coste=CONST(REGIMEN))) }
    { 21  ;   ;Coste Habitacion    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Lin. Calculo".Importe WHERE (Usuario=FIELD(Codigo calculo),
                                                                                                 Coste/Ingreso=CONST(Coste),
                                                                                                 Concepto Coste=CONST(HABITACION)));
                                                   CaptionML=[ENU=Room cost;
                                                              ESP=Coste Habitacion];
                                                   Description=Sum("Lin. Calculo".Importe WHERE (Usuario=FIELD(Codigo calculo),Coste/Ingreso=CONST(Coste),Concepto Coste=CONST(HABITACION))) }
    { 22  ;   ;Coste Suplementos   ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Lin. Calculo".Importe WHERE (Usuario=FIELD(Codigo calculo),
                                                                                                 Concepto Coste=CONST(SUPLEMENTO),
                                                                                                 Coste/Ingreso=CONST(Ingreso)));
                                                   CaptionML=[ENU=Supplements cost;
                                                              ESP=Coste Suplementos];
                                                   Description=Sum("Lin. Calculo".Importe WHERE (Usuario=FIELD(Codigo calculo),Concepto Coste=CONST(SUPLEMENTO),Coste/Ingreso=CONST(Coste))) }
    { 23  ;   ;Coste Reg Habitacion;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Lin. Calculo".Importe WHERE (Usuario=FIELD(Codigo calculo),
                                                                                                 Concepto Coste=CONST(REG HABITA),
                                                                                                 Coste/Ingreso=CONST(Coste)));
                                                   CaptionML=[ENU=Cost reg room;
                                                              ESP=Coste Reg Habitacion];
                                                   Description=Sum("Lin. Calculo".Importe WHERE (Usuario=FIELD(Codigo calculo),Concepto Coste=CONST(REG HABITA),Coste/Ingreso=CONST(Coste)));
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 24  ;   ;Coste Reg Suplementos;Decimal      ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Lin. Calculo".Importe WHERE (Usuario=FIELD(Codigo calculo),
                                                                                                 Concepto Coste=CONST(REG SUPLEM),
                                                                                                 Coste/Ingreso=CONST(Coste)));
                                                   CaptionML=[ENU=Cost reg surcharges;
                                                              ESP=Coste Reg Suplementos];
                                                   Description=Sum("Lin. Calculo".Importe WHERE (Usuario=FIELD(Codigo calculo),Concepto Coste=CONST(REG SUPLEM),Coste/Ingreso=CONST(Coste)));
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 25  ;   ;Coste Reg Regimen   ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Lin. Calculo".Importe WHERE (Usuario=FIELD(Codigo calculo),
                                                                                                 Concepto Coste=CONST(REG REGIME),
                                                                                                 Coste/Ingreso=CONST(Coste)));
                                                   CaptionML=[ENU=Cost reg board;
                                                              ESP=Coste Reg Regimen];
                                                   Description=Sum("Lin. Calculo".Importe WHERE (Usuario=FIELD(Codigo calculo),Concepto Coste=CONST(REG REGIME),Cose/Ingreso=CONST(Coste)));
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 26  ;   ;Coste Extras Fijos  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Lin. Calculo".Importe WHERE (Usuario=FIELD(Codigo calculo),
                                                                                                 Concepto Coste=CONST(EXTRAFIJOS),
                                                                                                 Coste/Ingreso=CONST(Coste)));
                                                   CaptionML=[ENU=Fixed extras cost;
                                                              ESP=Coste Extras Fijos];
                                                   Description=Sum("Lin. Calculo".Importe WHERE (Usuario=FIELD(Codigo calculo),Concepto Coste=CONST(EXTRAFIJOS),Coste/Ingreso=CONST(Coste)));
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 27  ;   ;Coste Extras Variables;Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Lin. Calculo".Importe WHERE (Usuario=FIELD(Codigo calculo),
                                                                                                 Concepto Coste=CONST(EXTRAVARIA),
                                                                                                 Coste/Ingreso=CONST(Coste)));
                                                   CaptionML=[ENU=Variable extras cost;
                                                              ESP=Coste Extras Variables];
                                                   Description=Sum("Lin. Calculo".Importe WHERE (Usuario=FIELD(codigo calculo),Concepto Coste=CONST(EXTRAVARIA),Coste/Ingreso=CONST(Coste)));
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 28  ;   ;N§ Errores          ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Error Calculo" WHERE (Usuario=FIELD(Codigo calculo)));
                                                   CaptionML=[ENU=Errors No.;
                                                              ESP=N§ Errores];
                                                   Description=Calculado }
    { 29  ;   ;Total Coste         ;Decimal       ;CaptionML=[ENU=Total Cost;
                                                              ESP=Total Coste];
                                                   Editable=No }
    { 30  ;   ;Total Ingreso       ;Decimal       ;CaptionML=[ENU=Total Income;
                                                              ESP=Total Ingreso];
                                                   Editable=No }
    { 31  ;   ;Ingreso Transfer    ;Decimal       ;CaptionML=[ENU=Transfer income;
                                                              ESP=Ingreso Transfer] }
    { 32  ;   ;Coste Transfer      ;Decimal       ;CaptionML=[ENU=Transfer code;
                                                              ESP=Coste Transfer] }
    { 33  ;   ;N§ Linea            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              ESP=N§ Linea] }
    { 34  ;   ;Id Habitacion       ;Integer       ;CaptionML=[ENU=Room Id;
                                                              ESP=Id Habitacion];
                                                   Description=Enlaza con el registro de habitaci¢n del hotel de cotizaci¢n al que se refiere la l¡nea. }
  }
  KEYS
  {
    {    ;Id                                      ;Clustered=Yes }
    {    ;Id Cotizacion,Id Producto,Hotel         ;SumIndexFields=Total Ingreso,Total Coste;
                                                   KeyGroups=RENUMERING }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      cCotCom@1103355000 : Codeunit 7009913;

    PROCEDURE GetTipoTransfer@1103355000() : Integer;
    BEGIN
      //GetTipoTransfer

      EXIT(Tipo::Transfer);
    END;

    PROCEDURE GetTipoHotel@1103355002() : Integer;
    BEGIN
      // GetTipoHotel

      EXIT(Tipo::Hotel);
    END;

    PROCEDURE BorrarLineasCalculo@1103355003();
    VAR
      lrLinCal@1103355000 : Record 7009736;
      lrErrCal@1103355001 : Record 7009737;
      lrPerCal@1103355002 : Record 7009740;
    BEGIN
      // BorrarLineasCalculo

      lrLinCal.SETRANGE(Usuario, "Codigo calculo");
      lrLinCal.DELETEALL;

      lrErrCal.SETRANGE(Usuario, "Codigo calculo");
      lrErrCal.DELETEALL;

      lrPerCal.SETRANGE(Usuario,  "Codigo calculo");
      lrPerCal.DELETEALL;
    END;

    PROCEDURE ActualizaTotales@1103355004(pwCosteTO@1103355001 : Decimal;pwIngresoTO@1103355002 : Decimal);
    VAR
      lrCabCot@1103355009 : Record 7009871;
      lrConfCont@1103355000 : Record 98;
      lwFechaDiv@1103355011 : Date;
      lrParAgencia@1103355003 : Record 7009700;
    BEGIN
      // ActualizaTotales

      IF Tipo <> Tipo::Hotel THEN
        EXIT;

      lrCabCot.GET("Id Cotizacion");
      lwFechaDiv := DT2DATE(lrCabCot."Fecha creacion");

      lrConfCont.FINDFIRST;
      lrParAgencia.FINDFIRST;

      "Total Coste"   := ActTotalesCompraHotel(lwFechaDiv, lrConfCont."LCY Code", lrParAgencia."Divisa TOs cotizacion", pwCosteTO  );
      "Total Ingreso" := ActTotalesVentaHotel (lwFechaDiv, lrConfCont."LCY Code", lrParAgencia."Divisa TOs cotizacion", pwIngresoTO);
    END;

    PROCEDURE GetPorcentajeDif@1103355005() : Decimal;
    BEGIN
      // GetPorcentajeDif
      // devuelve el % entre coste y ingreso.

      IF "Total Ingreso" <> 0 THEN
        EXIT((("Total Ingreso" - "Total Coste") / "Total Ingreso") * 100)
      ELSE
        EXIT(0);
    END;

    LOCAL PROCEDURE ActTotalesCompraHotel@1103355006(pwFechaDiv@1103355004 : Date;pwLCY@1103355005 : Code[10];pwDivCab@1103355008 : Code[10];pwCosteTO@1103355010 : Decimal) rvImporte : Decimal;
    VAR
      lrLinCal@1103355003 : Record 7009736;
      lrContratos@1103355002 : Record 7009873;
      lrContC@1103355001 : Record 7009723;
      lwFiltroCont@1103355000 : Text[1024];
      lwImporte@1103355006 : Decimal;
      lwDivCont@1103355007 : Code[10];
      lrCurrExc@1103355009 : Record 330;
    BEGIN
      // ActTotalesCompraHotel

      rvImporte := 0;

      IF pwCosteTO <> 0 THEN
        EXIT(pwCosteTO);

      lrContratos.SETCURRENTKEY("Id cotizacion", "Id Hotel");
      lrContratos.SETRANGE ("Id cotizacion", "Id Cotizacion");
      lrContratos.SETRANGE ("Id Hotel"     , "Id Producto");
      lrContratos.SETRANGE ("Tipo linea"   , lrContratos."Tipo linea"::Contrato);
      lrContratos.SETRANGE ("Tipo uso"     , lrContratos."Tipo uso"::Seleccion);
      lrContratos.SETRANGE ("Tipo Contrato", lrContratos."Tipo Contrato"::Compra);

      lwFiltroCont := '';
      IF lrContratos.FINDSET THEN BEGIN
        REPEAT
          lwFiltroCont := lwFiltroCont + lrContratos.Contrato + '|';
        UNTIL lrContratos.NEXT = 0;
      END;
      lwFiltroCont := DELCHR(lwFiltroCont, '>', '|');

      IF lwFiltroCont <> '' THEN BEGIN

        lrContC.SETFILTER("N§ Contrato compra", lwFiltroCont);

        IF lrContC.FINDSET THEN BEGIN
          REPEAT

            lrLinCal.SETCURRENTKEY(Usuario, "Concepto Coste", "Coste/Ingreso", "N§ Contrato");
            lrLinCal.SETRANGE (Usuario        , "Codigo calculo");
            lrLinCal.SETRANGE ("Coste/Ingreso", lrLinCal."Coste/Ingreso"::Coste);
            lrLinCal.SETRANGE ("N§ Contrato"  , lrContC."N§ Contrato compra");

            lrLinCal.CALCSUMS(Importe);

            IF pwCosteTO <> 0 THEN
              lwImporte := pwCosteTO
            ELSE
              lwImporte := lrLinCal.Importe;

            IF lrContC."C¢d. divisa" <> '' THEN
              lwDivCont := lrContC."C¢d. divisa"
            ELSE
              lwDivCont := pwLCY;

            IF lwDivCont <>  pwDivCab THEN BEGIN

              lwImporte := ROUND(lrCurrExc.ExchangeAmtFCYToFCY(pwFechaDiv, lwDivCont, pwDivCab ,lwImporte));
            END;

            // Si se hace el calcula sobre importe ITS SOLO necesitamos el primer contrato.
            IF pwCosteTO <> 0 THEN
              EXIT(lwImporte);

            rvImporte += lwImporte;

          UNTIL lrContC.NEXT = 0;
        END;
      END;
    END;

    LOCAL PROCEDURE ActTotalesVentaHotel@1103355011(pwFechaDiv@1103355004 : Date;pwLCY@1103355005 : Code[10];pwDivCab@1103355008 : Code[10];pwIngresoTO@1103355011 : Decimal) rvImporte : Decimal;
    VAR
      lrLinCal@1103355003 : Record 7009736;
      lrContratos@1103355002 : Record 7009873;
      lrContV@1103355001 : Record 7009727;
      lrCli@1103355010 : Record 18;
      lwFiltroCont@1103355000 : Text[1024];
      lwImporte@1103355006 : Decimal;
      lwDivCont@1103355007 : Code[10];
      lrCurrExc@1103355009 : Record 330;
    BEGIN
      // ActTotalesVentaHotel

      rvImporte := 0;

      // AJS 28.05.2009
      // AJF 02/06/09
      // El importe del touroperador se ense¤a siempre en euros as¡ que no es necesario
      // ninguna conversion de divisa.
      IF pwIngresoTO <> 0 THEN
        EXIT(pwIngresoTO);

      lrContratos.SETCURRENTKEY("Id cotizacion", "Id Hotel");
      lrContratos.SETRANGE ("Id cotizacion", "Id Cotizacion");
      lrContratos.SETRANGE ("Id Hotel"     , "Id Producto");
      lrContratos.SETRANGE ("Tipo linea"   , lrContratos."Tipo linea"::Contrato);
      lrContratos.SETRANGE ("Tipo uso"     , lrContratos."Tipo uso"::Seleccion);
      lrContratos.SETRANGE ("Tipo Contrato", lrContratos."Tipo Contrato"::Venta);

      lwFiltroCont := '';
      IF lrContratos.FINDSET THEN BEGIN
        REPEAT
          lwFiltroCont := lwFiltroCont + lrContratos.Contrato + '|';
        UNTIL lrContratos.NEXT = 0;
      END;
      lwFiltroCont := DELCHR(lwFiltroCont, '>', '|');

      IF lwFiltroCont <> '' THEN BEGIN

        lrContV.SETFILTER("N§ Contrato venta", lwFiltroCont);

        IF lrContV.FINDSET THEN BEGIN
          REPEAT

            lrLinCal.SETCURRENTKEY(Usuario, "Concepto Coste", "Coste/Ingreso", "N§ Contrato");
            lrLinCal.SETRANGE (Usuario        , "Codigo calculo");
            lrLinCal.SETRANGE ("Coste/Ingreso", lrLinCal."Coste/Ingreso"::Ingreso);
            lrLinCal.SETRANGE ("N§ Contrato"  , lrContV."N§ Contrato venta");

            lrLinCal.CALCSUMS(Importe);

            IF pwIngresoTO <> 0 THEN
              lwImporte := pwIngresoTO
            ELSE
              lwImporte := lrLinCal.Importe;

            lrCli.GET(lrContV.Cliente);

            // Conversi¢n de divisa.
            IF lrCli."Currency Code" <> '' THEN
              lwDivCont := lrCli."Currency Code"
            ELSE
              lwDivCont := pwLCY;

            IF lwDivCont <>  pwDivCab THEN BEGIN
              lwImporte := ROUND(lrCurrExc.ExchangeAmtFCYToFCY(pwFechaDiv, lwDivCont, pwDivCab ,lwImporte));
            END;

            // Si el ingreso se Calculo sobre ITS solo necesitamos el primer contrato.
            IF pwIngresoTO <> 0 THEN
              EXIT(lwImporte);

            rvImporte += lwImporte;

          UNTIL lrContV.NEXT = 0;
        END;
      END;
    END;

    PROCEDURE EliminarLineasSeleccionHotel@1103355008();
    VAR
      lrHabitacion@1103355000 : Record 7009873;
      lrLinsCalCot@1103355001 : Record 7009873;
      lrDistribs@1103355002 : Record 7009875;
      lrErrores@1103355003 : Record 7009876;
      lrHabs@1103355004 : Record 7009873;
    BEGIN
      // EliminarLineasSeleccionHotel
      // Se eliminan las l¡neas de seleccion de la cotizaci¢n asociadas a la l¡nea cotizaci¢n.

      IF Tipo <> Tipo::Hotel THEN
        EXIT;

      lrHabs.SETCURRENTKEY("Id cotizacion", "Id Hotel");
      lrHabs.SETRANGE ("Id cotizacion", "Id Cotizacion");
      lrHabs.SETRANGE ("Id Hotel"     , "Id Producto");
      lrHabs.SETRANGE ("Tipo linea"   , lrHabs."Tipo linea"::Habitacion);
      lrHabs.SETRANGE ("Tipo uso"     , lrHabs."Tipo uso"::Seleccion);
      lrHabs.SETFILTER(Id             , '<>%1', "Id Habitacion");

      // Si es la £nica habitaci¢n de la l¡nea de hotel eliminamos la l¡nea y sus asociadas.
      IF lrHabs.ISEMPTY THEN BEGIN
        lrHabs.RESET;
        lrHabs.SETCURRENTKEY("Id cotizacion", "Id Hotel");
        lrHabs.SETRANGE ("Id cotizacion", "Id Cotizacion");
        lrHabs.SETRANGE ("Id Hotel"     , "Id Producto");
        lrHabs.SETFILTER(Id             , '<>%1', "Id Habitacion");
        lrHabs.DELETEALL;

        // Borro los errores del hotel asociados a las dem s l¡neas del hotel.
        lrErrores.SETCURRENTKEY("Id Cotizacion", "Id Hotel");
        lrErrores.SETRANGE ("Id Cotizacion", "Id Cotizacion");
        lrErrores.SETRANGE ("Id Hotel"     , "Id Producto");
        lrErrores.SETFILTER("Id Linea"     , '<>%1', "Id Habitacion");
        lrErrores.DELETEALL;

      END;

      lrDistribs.SETCURRENTKEY("Id habitacion", "N§ habitacion", Posicion);
      lrDistribs.SETRANGE("Id habitacion", "Id Habitacion");
      lrDistribs.DELETEALL;

      lrErrores.RESET;
      lrErrores.SETCURRENTKEY("Id Cotizacion", "Id Hotel");
      lrErrores.SETRANGE("Id Cotizacion", "Id Cotizacion");
      lrErrores.SETRANGE("Id Hotel"     , "Id Producto");
      lrErrores.SETRANGE("Id Linea"     , "Id Habitacion");
      lrErrores.DELETEALL;

      lrHabitacion.GET("Id Habitacion");
      lrHabitacion.DELETE;
    END;

    PROCEDURE GetIngresoDivCabecera@1103355001() : Decimal;
    VAR
      lrCabCot@1103355000 : Record 7009871;
      lrParAg@1103355001 : Record 7009700;
      lrCurrExc@1103355002 : Record 330;
      lwFechaDiv@1103355003 : Date;
    BEGIN
      // GetIngresoDivCabecera

      lrParAg.FINDFIRST;

      lrCabCot.GET("Id Cotizacion");
      lwFechaDiv := DT2DATE(lrCabCot."Fecha creacion");

      EXIT(lrCurrExc.ExchangeAmtFCYToFCY(lwFechaDiv, lrParAg."Divisa TOs cotizacion", lrCabCot.Divisa, "Total Ingreso"));
    END;

    PROCEDURE GetCosteDivCabecera@1103355007() : Decimal;
    VAR
      lrCabCot@1103355002 : Record 7009871;
      lrParAg@1103355001 : Record 7009700;
      lrCurrExc@1103355000 : Record 330;
      lwFechaDiv@1103355003 : Date;
    BEGIN
      // GetCosteDivCabecera

      lrParAg.FINDFIRST;

      lrCabCot.GET("Id Cotizacion");
      lwFechaDiv := DT2DATE(lrCabCot."Fecha creacion");

      EXIT(lrCurrExc.ExchangeAmtFCYToFCY(lwFechaDiv, lrParAg."Divisa TOs cotizacion", lrCabCot.Divisa, "Total Coste"));
    END;

    BEGIN
    {
      ## AJS 28.05.2009

        .- En la funcion ActTotalesVentaHotel se salia si estaba rellenado el Importe TO
           sin tener en cuenta la conversion de divisa.

      ## AJF 02/06/09

        .- La Divisa si el Importe TO est  rellenado ser  EURO con lo que no se tendr  que convertir.
        .- En lugar de convertir a la divisa de la cabecera se convierte siempre a la divisa de parametros agencia
           para cotizaciones y la de la cabecera se usa para visualizaciones.

      $001 AJS 21052013 Redondeo en las funciones ActTotalesCompraHotel y ActTotalesVentaHotel cuando se hacen conversiones de
                        divisa
    }
    END.
  }
}
