OBJECT Table 7009899 Fichero reservas WS
{
  OBJECT-PROPERTIES
  {
    Date=22/09/14;
    Time=12:55:44;
    Modified=Yes;
    Version List=AIC2009,CNT;
  }
  PROPERTIES
  {
    DataPerCompany=No;
    CaptionML=[ENU=Booking File;
               ESP=Fichero reservas];
  }
  FIELDS
  {
    { 1   ;   ;N§ Fichero          ;Integer       ;AutoIncrement=Yes;
                                                   CaptionML=[ENU=File Number;
                                                              ESP=N§ Fichero];
                                                   Description=PK;
                                                   Editable=No }
    { 20  ;   ;Fecha importacion   ;Date          ;CaptionML=[ENU=Import Date;
                                                              ESP=Fecha importacion];
                                                   Editable=No }
    { 30  ;   ;Hora importacion    ;Time          ;CaptionML=[ENU=Import Time;
                                                              ESP=Hora importacion];
                                                   Editable=No }
    { 40  ;   ;Type                ;Option        ;CaptionML=[ENU=Type;
                                                              ESP=Tipo];
                                                   OptionString=Web Service,TXT;
                                                   Editable=No }
    { 50  ;   ;Usuario Importacion ;Code20        ;CaptionML=[ENU=Import User;
                                                              ESP=Usuario Importacion];
                                                   Editable=No }
    { 100 ;   ;Fichero             ;BLOB          ;Compressed=Yes;
                                                   CaptionML=[ENU=File;
                                                              ESP=Fichero];
                                                   Description=$001 }
    { 110 ;   ;Pendiente Destino   ;Boolean       ;CaptionML=[ENU=Destination not Assigned;
                                                              ESP=Pendiente Destino];
                                                   Description=$001 }
    { 120 ;   ;Touroperator        ;Code10        ;CaptionML=[ENU=Touroperator;
                                                              ESP=Touroperator];
                                                   Editable=No }
    { 130 ;   ;Nombre Archivo      ;Text50        ;CaptionML=[ENU=File Name;
                                                              ESP=Nombre Archivo];
                                                   Editable=No }
    { 140 ;   ;Fecha Archivo       ;Date          ;CaptionML=[ENU=File Date;
                                                              ESP=Fecha Archivo];
                                                   Editable=No }
    { 150 ;   ;Hora Archivo        ;Time          ;CaptionML=[ENU=File Time;
                                                              ESP=Hora Archivo];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;N§ Fichero                              ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      rParI@1100253000 : Record 7010081;
      Text001@1100217000 : TextConst 'ENU=Process completed.;ESP=Proceso finalizado.';

    PROCEDURE GetTmpFilename@1100253004() : Text[1024];
    VAR
      lwFilename@1100253000 : Text[1024];
    BEGIN
      // GetTmpFilename

      // Determinamos el fichero temporal
      lwFilename := TEMPORARYPATH + 'Import.XML';
      EXIT(lwFilename);
    END;

    PROCEDURE SaveXML@1100253000();
    BEGIN
      // SaveXML

      IF Type<>Type::"Web Service" THEN
        EXIT;

      //OCmDlg.Filter      := '*.XML|*.XML';
      //OCmDlg.DialogTitle := 'Guardar XML';
      //OCmDlg.ShowSave;
      //IF OCmDlg.CancelError THEN
      //  EXIT;

      //IF OCmDlg.FileName='' THEN
      //  EXIT;

      CALCFIELDS(Fichero);
      //Fichero.EXPORT(OCmDlg.FileName);

      Fichero.EXPORT('C:\Users\ajaume\Desktop\' + FORMAT("N§ Fichero") + '.XML');
    END;

    PROCEDURE ViewXML@1100253001();
    BEGIN
      // ViewXML

      IF Type<>Type::"Web Service" THEN
        EXIT;

      CALCFIELDS(Fichero);
      Fichero.EXPORT(GetTmpFilename);
      HYPERLINK(GetTmpFilename);
    END;

    PROCEDURE ViewFile@1100253009();
    BEGIN
      // ViewFile

      CASE Type OF
        Type::"Web Service" : ViewXML;
        Type::TXT : ShowFile
      END;
    END;

    PROCEDURE GetFilename@1100253002() : Text[1024];
    BEGIN
      // GetFilename
      // Devuelve el nombre y path del archivo guardado

      EXIT(GetFilePath + NomArch);
    END;

    PROCEDURE GetFilePath@1100253003() : Text[1024];
    VAR
      lwFielPath@1100253000 : Text[1024];
    BEGIN
      // GetFilePath
      // Devuelve la ubicaici¢n del archivo guardado

      CLEAR(lwFielPath);
      CLEAR(rParI);
      rParI.FINDFIRST;
      rParI.TESTFIELD("Directorio Importados");

      TESTFIELD("Fecha importacion");
      lwFielPath := rParI."Directorio Importados";
      IF lwFielPath[STRLEN(lwFielPath)] <> '\' THEN
        lwFielPath += '\';

      lwFielPath += FORMAT("Fecha importacion",0,'<Year4>') + '\';
      lwFielPath += FORMAT("Fecha importacion",0,'<Month Text>') + '\';
      EXIT(lwFielPath);
    END;

    PROCEDURE NomArch@1100253007() : Text[30];
    VAR
      lwNomArch@1100253000 : Text[30];
    BEGIN
      // NomArch
      // Devuelve el nombre del archivo guadado

      lwNomArch := FORMAT("N§ Fichero");
      WHILE STRLEN(lwNomArch) < 6 DO
        lwNomArch := '0' + lwNomArch;

      IF Touroperator <> '' THEN
        lwNomArch += STRSUBSTNO('_%1', Touroperator);

      lwNomArch := 'Imp_' + lwNomArch + '.TXT';
      EXIT(lwNomArch);
    END;

    PROCEDURE ShowPath@1100253005();
    BEGIN
      // ShowPath
      // Muestra la carpeta temporal de archivos guardados

      IF Type=Type::TXT THEN
        SHELL(ENVIRON('windir') + '\Explorer.exe', GetFilePath);
    END;

    PROCEDURE ShowFile@1100253006();
    BEGIN
      // ShowFile
      // Muestra el archivo Almacenado

      IF Type=Type::TXT THEN
        HYPERLINK(GetFilename);
    END;

    PROCEDURE BorrarCabeceras@1100217000();
    VAR
      lrCab@1100217000 : Record 7010076;
    BEGIN
      // BorrarCabeceras

      lrCab.RESET;
      lrCab.SETCURRENTKEY(Fichero);
      lrCab.SETRANGE (Fichero, "N§ Fichero");
      lrCab.SETFILTER(Estado , '<>%1', lrCab.Estado::Procesada);
      IF lrCab.FINDSET(TRUE) THEN
        lrCab.DELETEALL(TRUE);

      MESSAGE(Text001);
    END;

    BEGIN
    {
      JPT 04/04/12 CNT-CAR-12004 -

      $001 AJS 02122013 Nueva funcion BorrarCabeceras para borrar las cabeceras no procesadas
    }
    END.
  }
}
