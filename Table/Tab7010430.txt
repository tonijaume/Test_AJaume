OBJECT Table 7010430 Rango Plazas Factura
{
  OBJECT-PROPERTIES
  {
    Date=16/10/09;
    Time=12:30:46;
    Version List=TRANSFER;
  }
  PROPERTIES
  {
    OnInsert=VAR
               lrGrp@1100244000 : Record 7010430;
             BEGIN
               lrGrp.RESET;
               lrGrp.SETRANGE(Cliente              , Cliente);
               lrGrp.SETRANGE(TTOO                 , TTOO);
               lrGrp.SETRANGE("Tipo Servicio Fijo" , "Tipo Servicio Fijo");
               IF lrGrp.FINDLAST THEN
                 No := lrGrp.No +1
               ELSE
                 No := 1;

               // Vamos a rellenar el campo "Fac por Zona trabajo" seg£n est‚ se¤alado en el registro de condiciones de facturacion
               rCond.RESET;
               IF rCond.GET(Cliente,TTOO,"Tipo Servicio Fijo") THEN
                 "Fac por Zona trabajo" := rCond."Fac. por Zona Trabajo";
             END;

    CaptionML=ESP=Rango Plazas Factura;
    LookupFormID=Form7035288;
    DrillDownFormID=Form7035288;
  }
  FIELDS
  {
    { 1   ;   ;Cliente             ;Code20        ;TableRelation=Customer.No.;
                                                   CaptionML=ESP=Cliente;
                                                   NotBlank=Yes;
                                                   Description=FK Cliente }
    { 2   ;   ;TTOO                ;Code10        ;TableRelation=TTOO.Codigo;
                                                   CaptionML=ESP=TTOO;
                                                   NotBlank=Yes;
                                                   Description=FK TTOO }
    { 3   ;   ;Tipo Servicio Fijo  ;Option        ;CaptionML=ESP=Tipo fijo;
                                                   OptionCaptionML=ESP=Excursion,Traslado;
                                                   OptionString=Excursion,Traslado }
    { 5   ;   ;No                  ;Integer       ;CaptionML=ESP=No }
    { 10  ;   ;Plazas Desde        ;Integer       ;OnValidate=BEGIN
                                                                CompruebaSolapamiento;
                                                              END;

                                                   CaptionML=ESP=Plazas Desde }
    { 11  ;   ;Plazas Hasta        ;Integer       ;OnValidate=BEGIN
                                                                CompruebaSolapamiento;
                                                              END;

                                                   CaptionML=ESP=Plazas Hasta }
    { 13  ;   ;Fac por Zona trabajo;Boolean       ;CaptionML=ESP=Fac por Zona trabajo }
    { 14  ;   ;A¤adir a Texto Registro;Text30     ;CaptionML=ESP=A¤adir a Texto Registro }
    { 15  ;   ;Modo Desglose Transportados;Option ;CaptionML=ESP=Modo Desglose Transportados;
                                                   OptionCaptionML=ESP=Sin desglose,Entradas/Salidas,Rango Precio;
                                                   OptionString=Sin desglose,Entradas/Salidas,Rango Precio }
  }
  KEYS
  {
    {    ;Cliente,TTOO,Tipo Servicio Fijo,No      ;Clustered=Yes }
    {    ;Cliente,TTOO,Tipo Servicio Fijo,Plazas Desde,Plazas Hasta }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1100244000 : TextConst 'ESP=Se est  produciendo un solapamiento de rangos';
      rCond@1100244001 : Record 7010416;

    PROCEDURE CompruebaSolapamiento@1100244000();
    VAR
      lrGrp@1100244000 : Record 7010430;
    BEGIN
      // CompruebaSolapamiento

      lrGrp.RESET;
      lrGrp.SETCURRENTKEY(Cliente,TTOO,"Tipo Servicio Fijo","Plazas Desde","Plazas Hasta");
      lrGrp.SETRANGE(Cliente              , Cliente);
      lrGrp.SETRANGE(TTOO                 , TTOO);
      lrGrp.SETRANGE("Tipo Servicio Fijo" , "Tipo Servicio Fijo");
      lrGrp.SETFILTER(No                  , '<>%1',No);
      lrGrp.SETFILTER("Plazas Desde"      , '<=%1', "Plazas Hasta");
      lrGrp.SETFILTER("Plazas Hasta"      , '>=%1', "Plazas Desde");
      IF lrGrp.FINDFIRST THEN
        ERROR(Text001);
    END;

    PROCEDURE Siguiente@1100244005() : Integer;
    VAR
      lwSiguiente@1100244000 : Integer;
      lrGrp@1100244001 : Record 7010430;
    BEGIN
      // Siguiente
      // Devuelve el siguiente valor Plazas Desde que le corresponde;

      lrGrp.RESET;
      lrGrp.SETCURRENTKEY(Cliente,TTOO,"Tipo Servicio Fijo","Plazas Desde","Plazas Hasta");
      lrGrp.SETRANGE(Cliente              , Cliente);
      lrGrp.SETRANGE(TTOO                 , TTOO);
      lrGrp.SETRANGE("Tipo Servicio Fijo" , "Tipo Servicio Fijo");
      IF lrGrp.FINDFIRST THEN
        lwSiguiente := lrGrp."Plazas Hasta" +1
      ELSE
        lwSiguiente := 1;

      EXIT(lwSiguiente);
    END;

    PROCEDURE EstableceFiltro@1100244001(pwRango1@1100244000 : Integer;pwRango2@1100244001 : Integer) : Text[150];
    VAR
      lwTexto@1100244002 : Text[150];
    BEGIN
      // EstableceFiltro
      // Devuelve un filtro seg£n los parametro introducidos

      CLEAR(lwTexto);
      IF (pwRango1 <>0) AND (pwRango2 <>0) THEN BEGIN
        IF pwRango1=0 THEN
          lwTexto := STRSUBSTNO('<=%1', pwRango2)
        ELSE
          IF pwRango2=0 THEN
            lwTexto := STRSUBSTNO('>=%1', pwRango1)
          ELSE
            lwTexto := STRSUBSTNO('%1..%2', pwRango1, pwRango2);
      END;

      EXIT(lwTexto);
    END;

    PROCEDURE DevuelveRango@1100244002(pwPlazas@1100244000 : Integer;VAR prRangos@1100244001 : Record 7010430) : Boolean;
    VAR
      lrRangos@1100244002 : Record 7010430;
      lwEnc@1100244003 : Boolean;
    BEGIN
      // DevuelveRango
      //
      // Devuelve el registro de Renago Plazas correspondiente con las plazas pasadas como parametro
      // Devuelve TRUE si se ha encontrado alg£n rango

      lrRangos.RESET;
      lrRangos.SETCURRENTKEY(Cliente,TTOO,"Tipo Servicio Fijo","Plazas Desde","Plazas Hasta");
      lrRangos.SETRANGE(Cliente , prRangos.Cliente);
      lrRangos.SETRANGE(TTOO    , prRangos.TTOO);
      lrRangos.SETRANGE("Tipo Servicio Fijo" , prRangos."Tipo Servicio Fijo");
      lrRangos.SETFILTER("Plazas Desde" ,'<=%1', pwPlazas);
      lrRangos.SETFILTER("Plazas Hasta" ,'>=%1', pwPlazas);
      lwEnc := lrRangos.FINDFIRST;
      IF lwEnc THEN
        CLEAR(lrRangos);

      prRangos.RESET;
      prRangos := lrRangos;

      EXIT(lwEnc);
    END;

    BEGIN
    END.
  }
}
