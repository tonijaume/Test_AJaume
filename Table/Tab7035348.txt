OBJECT Table 7035348 Prefactura coste
{
  OBJECT-PROPERTIES
  {
    Date=16/10/09;
    Time=12:30:48;
    Version List=TRANSFER;
  }
  PROPERTIES
  {
    OnInsert=VAR
               rPar@1100244000 : Record 7010311;
               GestNoSerie@1100244001 : Codeunit 396;
             BEGIN
               "Fecha creacion" := TODAY;
             END;

    OnDelete=VAR
               lrLineas@1100244000 : Record 7035349;
               lrZonas@1100244001 : Record 7035350;
             BEGIN
               lrLineas.RESET;
               lrLineas.SETRANGE("Num prefactura", "Num prefactura");
               IF lrLineas.FINDFIRST THEN
                 DELETEALL;

               lrZonas.RESET;
               lrZonas.SETRANGE("Num prefactura", "Num prefactura");
               IF lrZonas.FINDFIRST THEN
                 DELETEALL;
             END;

    CaptionML=ESP=Prefactura coste;
    LookupFormID=Form7010477;
    DrillDownFormID=Form7010477;
  }
  FIELDS
  {
    { 1   ;   ;Num prefactura      ;Code20        ;CaptionML=ESP=Num prefactura;
                                                   Description=PK }
    { 3   ;   ;Cliente             ;Code20        ;TableRelation=Customer;
                                                   OnValidate=BEGIN
                                                                Procesada := FALSE;
                                                              END;

                                                   CaptionML=ESP=Cliente;
                                                   Description=FK Cliente }
    { 5   ;   ;Touroperador        ;Code10        ;TableRelation=TTOO;
                                                   OnValidate=BEGIN
                                                                Procesada := FALSE;
                                                              END;

                                                   CaptionML=ESP=Touroperador;
                                                   Description=FK Touroperador }
    { 7   ;   ;Garaje              ;Code10        ;TableRelation=Garaje;
                                                   OnValidate=BEGIN
                                                                Procesada := FALSE;
                                                              END;

                                                   CaptionML=ESP=Garaje;
                                                   Description=FK Garaje }
    { 9   ;   ;Fecha desde         ;Date          ;OnValidate=BEGIN
                                                                Procesada := FALSE;

                                                                revisa_fechas;
                                                              END;

                                                   CaptionML=ESP=Fecha desde }
    { 11  ;   ;Fecha hasta         ;Date          ;OnValidate=BEGIN
                                                                Procesada := FALSE;

                                                                revisa_fechas;
                                                              END;

                                                   CaptionML=ESP=Fecha hasta }
    { 13  ;   ;Tipos Servicio      ;Code150       ;OnValidate=BEGIN
                                                                Procesada := FALSE;
                                                              END;

                                                   OnLookup=BEGIN
                                                              CLEAR(rTipSer);
                                                              CLEAR(fTabTipSer);
                                                              fTabTipSer.LOOKUPMODE(TRUE);
                                                              fTabTipSer.SETTABLEVIEW(rTipSer);
                                                              IF fTabTipSer.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                                                fTabTipSer.GETRECORD(rTipSer);
                                                                IF STRPOS("Tipos Servicio" , rTipSer.Codigo) = 0 THEN BEGIN
                                                                  IF "Tipos Servicio" <> '' THEN
                                                                    VALIDATE("Tipos Servicio", "Tipos Servicio" + '|' + rTipSer.Codigo)
                                                                  ELSE
                                                                    VALIDATE("Tipos Servicio", rTipSer.Codigo);
                                                                END;
                                                              END;
                                                            END;

                                                   CaptionML=ESP=Tipos Servicio }
    { 15  ;   ;Codigos Servicio    ;Code80        ;OnValidate=BEGIN
                                                                Procesada := FALSE;
                                                              END;

                                                   OnLookup=BEGIN
                                                              rCodSer.RESET; rCodSer.INIT;
                                                              rCodSer.SETFILTER("Tipo servicio", "Tipos Servicio");
                                                              CLEAR(fTabCodSer);
                                                              fTabCodSer.LOOKUPMODE(TRUE);
                                                              fTabCodSer.SETRECORD(rCodSer);
                                                              fTabCodSer.SETTABLEVIEW(rCodSer);
                                                              IF fTabCodSer.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                                                fTabCodSer.GETRECORD(rCodSer);
                                                                IF STRPOS("Codigos Servicio" , rCodSer.Codigo) = 0 THEN BEGIN
                                                                  IF "Codigos Servicio" <> '' THEN
                                                                    VALIDATE("Codigos Servicio", "Codigos Servicio" + '|' + rCodSer.Codigo)
                                                                  ELSE
                                                                    VALIDATE("Codigos Servicio", rCodSer.Codigo);
                                                                END;
                                                              END;
                                                            END;

                                                   CaptionML=ESP=Codigos Servicio }
    { 17  ;   ;Texto Registro      ;Text50        ;CaptionML=ESP=Texto Registro }
    { 19  ;   ;Zonas de Precio     ;Code80        ;OnValidate=BEGIN
                                                                Procesada := FALSE;
                                                              END;

                                                   OnLookup=VAR
                                                              lrCon@1100244000 : Record 7010408;
                                                              lrZonCont@1100244001 : Record 7010404;
                                                              lfTablaZonaContrato@1100244002 : Form 7010439;
                                                              lwZona@1100244003 : Text[90];
                                                            BEGIN
                                                              // Busca contrato
                                                              lrCon.RESET;
                                                              lrCon.SETCURRENTKEY(Proveedor,
                                                                                  Cliente,
                                                                                  Touroperador,
                                                                                  "Fecha inicio contrato",
                                                                                  "Fecha final contrato");
                                                              lrCon.SETRANGE (Garaje                 , Garaje );
                                                              lrCon.SETRANGE (Proveedor              , Proveedor);
                                                              IF Touroperador <> '' THEN
                                                                lrCon.SETRANGE (Cliente                , Cliente);

                                                              IF Touroperador <> '' THEN
                                                                lrCon.SETRANGE (Touroperador           , Touroperador);

                                                              lrCon.SETFILTER("Fecha inicio contrato", '<=%1', "Fecha hasta");
                                                              lrCon.SETFILTER("Fecha final contrato" , '>=%1', "Fecha desde");
                                                              lrCon.SETRANGE (Confirmado             , TRUE);
                                                              IF NOT lrCon.FINDFIRST THEN
                                                                ERROR(Text002);  // Error si no hay ning£n contrato

                                                              // Busca las zonas del contrato

                                                              lrZonCont.RESET;
                                                              lrZonCont.CLEARMARKS;
                                                              lrZonCont.FILTERGROUP(2);
                                                              lrZonCont.SETRANGE(Garaje         , Garaje);
                                                              lrZonCont.SETRANGE("N§ Contrato"  , lrCon."N§ Contrato");
                                                              lrZonCont.SETRANGE("Tipo contrato", lrZonCont."Tipo contrato"::Compra);


                                                              lwZona := '';
                                                              IF lrZonCont.FINDSET THEN BEGIN
                                                                REPEAT
                                                                  IF lwZona <> lrZonCont."Zona Precio" THEN BEGIN
                                                                    lrZonCont.MARK(TRUE);
                                                                    lwZona := lrZonCont."Zona Precio";
                                                                  END;
                                                                UNTIL lrZonCont.NEXT = 0;
                                                              END ELSE
                                                                ERROR(Text004); // error si no se encuentra ninguna zona de precios

                                                              lrZonCont.MARKEDONLY(TRUE);

                                                              lrZonCont.FILTERGROUP(0);
                                                              lfTablaZonaContrato.OcultaColumnas;
                                                              lfTablaZonaContrato.EDITABLE(FALSE);
                                                              lfTablaZonaContrato.LOOKUPMODE(TRUE);
                                                              lfTablaZonaContrato.SETTABLEVIEW(lrZonCont);
                                                              IF lfTablaZonaContrato.RUNMODAL = ACTION::LookupOK  THEN BEGIN
                                                                lfTablaZonaContrato.GETRECORD(lrZonCont);
                                                                IF STRPOS("Zonas de Precio" , lrZonCont."Zona Precio") = 0 THEN BEGIN
                                                                  IF "Zonas de Precio" = '' THEN
                                                                    VALIDATE("Zonas de Precio", lrZonCont."Zona Precio")
                                                                  ELSE
                                                                    VALIDATE("Zonas de Precio", "Zonas de Precio" + '|' + lrZonCont."Zona Precio");
                                                                END;
                                                              END;
                                                            END;

                                                   CaptionML=ESP=Zonas de Precio;
                                                   Description=UEX }
    { 21  ;   ;Tipos Vehiculo      ;Code50        ;OnValidate=BEGIN
                                                                Procesada := FALSE;
                                                              END;

                                                   OnLookup=BEGIN
                                                              CLEAR(rTipVeh);
                                                              CLEAR(fTabTipVeh);
                                                              fTabTipVeh.LOOKUPMODE(TRUE);
                                                              fTabTipVeh.SETTABLEVIEW(rTipVeh);
                                                              IF fTabTipVeh.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                                                fTabTipVeh.GETRECORD(rTipVeh);
                                                                IF STRPOS("Tipos Vehiculo" , rTipVeh.Codigo) = 0 THEN BEGIN
                                                                  IF "Tipos Vehiculo" <> '' THEN
                                                                    VALIDATE("Tipos Vehiculo", "Tipos Vehiculo" + '|' + rTipVeh.Codigo)
                                                                  ELSE
                                                                    VALIDATE("Tipos Vehiculo", rTipVeh.Codigo);
                                                                END;
                                                              END;
                                                            END;

                                                   CaptionML=ESP=Tipos Vehiculo;
                                                   Description=UEX }
    { 23  ;   ;Fecha Registro factura;Date        ;CaptionML=ESP=Fecha Registro factura }
    { 25  ;   ;Proveedor           ;Code20        ;TableRelation=Vendor.No.;
                                                   OnValidate=BEGIN
                                                                Procesada := FALSE;
                                                              END;

                                                   CaptionML=ESP=Proveedor;
                                                   Description=FK Proveedor }
    { 27  ;   ;Vehiculo            ;Code10        ;TableRelation=Vehiculo.Matricula;
                                                   OnValidate=BEGIN
                                                                Procesada := FALSE;
                                                              END;

                                                   CaptionML=ESP=Vehiculo;
                                                   Description=FK Vehiculo }
    { 29  ;   ;Procesada           ;Boolean       ;CaptionML=ESP=Procesada }
    { 31  ;   ;Total neto Factura  ;Decimal       ;CaptionML=ESP=Total neto Factura;
                                                   AutoFormatType=1 }
    { 33  ;   ;Fecha creacion      ;Date          ;CaptionML=ESP=Fecha creacion }
    { 35  ;   ;Precios impuestos incluidos;Boolean;CaptionML=ESP=Precios impuestos incluidos }
    { 37  ;   ;% Impuestos         ;Decimal       ;CaptionML=ESP=% Impuestos }
    { 43  ;   ;Num contrato compra ;Code20        ;TableRelation="Contrato compra"."N§ Contrato";
                                                   CaptionML=ESP=Num contrato compra }
    { 45  ;   ;Facturada           ;Boolean       ;CaptionML=ESP=Facturada }
    { 47  ;   ;Impresa             ;Boolean       ;CaptionML=ESP=Impresa }
    { 49  ;   ;Num Parte           ;Code10        ;TableRelation=Parte."N§ Parte" WHERE (Proveedor=FIELD(Proveedor),
                                                                                         Confirmado=CONST(Yes));
                                                   CaptionML=ESP=Num Parte }
  }
  KEYS
  {
    {    ;Num prefactura                          ;Clustered=Yes }
    {    ;Facturada,Proveedor,Fecha Registro factura }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1100244000 : TextConst 'ESP=La fecha desde no puede ser posterior a la fecha hasta en el rango de fechas a facturar';
      rCodSer@1100244001 : Record 7010320;
      rTipSer@1100244002 : Record 7010319;
      rTipVeh@1100244003 : Record 7010345;
      fTabCodSer@1100244004 : Form 7010338;
      fTabTipSer@1100244005 : Form 7010336;
      fTabTipVeh@1100244006 : Form 7010371;
      Text002@1100244007 : TextConst 'ESP=No se encuentra ning£n contrato para estas condiciones';
      Text003@1100244008 : TextConst 'ESP=No puede haber m s de un contrato con las condiciones indicadas';
      Text004@1100244009 : TextConst 'ESP=No se encuentra ninguna Zona de Precios para estas condiciones';
      Text005@1103355000 : TextConst 'ESP=No existe el usuario %1.';

    PROCEDURE revisa_fechas@4();
    BEGIN
      // revisa_fechas
      //
      IF ("Fecha desde" = 0D) OR ("Fecha hasta" = 0D) THEN
        EXIT;

      IF "Fecha desde" > "Fecha hasta" THEN
        ERROR(Text001);
    END;

    PROCEDURE nom_cliente@1() : Text[50];
    VAR
      rCli@1100244000 : Record 18;
    BEGIN
      // nom_cliente
      //
      IF NOT rCli.GET(Cliente) THEN
        EXIT('')
      ELSE
        EXIT(rCli.Name);
    END;

    PROCEDURE nom_touroperador@2() : Text[30];
    VAR
      rTO@1100244000 : Record 7010312;
    BEGIN
      // nom_touroperador
      //
      IF NOT rTO.GET(Touroperador) THEN
        EXIT('')
      ELSE
        EXIT(rTO.Nombre);
    END;

    PROCEDURE nom_proveedor@3() : Text[30];
    VAR
      lrProv@1100244000 : Record 23;
    BEGIN
      // nom_proveedor
      //
      IF NOT lrProv.GET(Proveedor) THEN
        EXIT('')
      ELSE
        EXIT(lrProv.Name);
    END;

    PROCEDURE borra_prefactura@5();
    VAR
      lrLinPre@1100244000 : Record 7035349;
      lrZonPre@1100244001 : Record 7035350;
      lrSupPre@1100244002 : Record 7035351;
    BEGIN
      // borra_prefactura
      //
      lrLinPre.RESET;
      lrLinPre.SETRANGE("Num prefactura", "Num prefactura");
      IF lrLinPre.FINDFIRST THEN
        lrLinPre.DELETEALL;

      lrZonPre.RESET;
      lrZonPre.SETRANGE("Num prefactura", "Num prefactura");
      IF lrZonPre.FINDFIRST THEN
        lrZonPre.DELETEALL;

      lrSupPre.RESET;
      lrSupPre.SETRANGE("Num Prefactura", "Num prefactura");
      IF lrSupPre.FINDFIRST THEN
        lrSupPre.DELETEALL;
    END;

    PROCEDURE alias_proveedor@6() : Code[30];
    VAR
      lrProv@1100244000 : Record 23;
    BEGIN
      // alias_proveedor
      //
      IF NOT lrProv.GET(Proveedor) THEN
        EXIT('')
      ELSE
        EXIT(lrProv."Search Name");
    END;

    PROCEDURE BuscaTotalIVA@1100244001(VAR prTempVATAmountLine@1100244010 : TEMPORARY Record 290);
    VAR
      lrLinPre@1103355000 : Record 7035349;
      lrProv@1100244022 : Record 23;
      VATAmount@1100244005 : Decimal;
      VATAmountText@1100244004 : Text[30];
      ProfitLCY@1100244009 : Decimal;
      ProfitPct@1100244008 : Decimal;
      AmountInclVAT@1100244006 : Decimal;
      PmtDiscAmount@1100244007 : Decimal;
      InvDiscAmount@1100244011 : Decimal;
      lwSigno@1100244015 : Integer;
      lwTipoDoc@1100244018 : 'Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order';
      VATPostingSetup@1100244021 : Record 325;
    BEGIN

      // BuscaTotalIVA

      CLEAR(lwTipoDoc);
      CLEAR(lrProv);

      // AJS 08.07.2009
      // Evito error si el proveedor no esta rellenado

      IF NOT lrProv.GET(Proveedor) THEN
        EXIT;

      lrProv.TESTFIELD("VAT Bus. Posting Group");
      prTempVATAmountLine.RESET;
      IF prTempVATAmountLine.FINDSET(TRUE) THEN
        prTempVATAmountLine.DELETEALL;
      lrLinPre.RESET;
      lrLinPre.SETRANGE("Num prefactura", "Num prefactura");

      IF lrLinPre.FINDSET THEN BEGIN
        VATPostingSetup.RESET;
        REPEAT
          VATPostingSetup.GET(lrProv."VAT Bus. Posting Group", lrLinPre."Grupo reg impuestos producto");
          prTempVATAmountLine.INIT;
          prTempVATAmountLine."VAT Identifier" := VATPostingSetup."VAT Identifier";
          prTempVATAmountLine."VAT Calculation Type" := VATPostingSetup."VAT Calculation Type";
          prTempVATAmountLine."VAT %"  := VATPostingSetup."VAT %";
          prTempVATAmountLine."EC %"   := VATPostingSetup."EC %";
          IF NOT prTempVATAmountLine.FIND THEN
            prTempVATAmountLine.INSERT;

          IF "Precios impuestos incluidos" THEN BEGIN
            prTempVATAmountLine."Amount Including VAT+EC" += lrLinPre."Importe con impuestos";
            prTempVATAmountLine."VAT+EC Base" :=prTempVATAmountLine."Amount Including VAT+EC" / (1 + (prTempVATAmountLine."VAT %"/100));
            prTempVATAmountLine."VAT Amount"  := prTempVATAmountLine."Amount Including VAT+EC" - prTempVATAmountLine."VAT+EC Base";
          END
          ELSE BEGIN
            prTempVATAmountLine."VAT+EC Base" += lrLinPre."Importe sin impuestos";
            prTempVATAmountLine."VAT Amount"  := prTempVATAmountLine."VAT+EC Base" * prTempVATAmountLine."VAT %" / 100;
            prTempVATAmountLine."Amount Including VAT+EC" := prTempVATAmountLine."VAT Amount" + prTempVATAmountLine."VAT+EC Base";
          END;

          prTempVATAmountLine."Inv. Disc. Base Amount" += lrLinPre."Importe sin impuestos";
          prTempVATAmountLine.MODIFY;
        UNTIL lrLinPre.NEXT=0;
      END;
    END;

    PROCEDURE FiltrarGarajeUsuario@1103355000();
    VAR
      lrUsuario@1103355000 : Record 7010420;
      lrParGenerales@1103355001 : Record 7010311;
    BEGIN
      // FiltrarGarajeUsuario.
      // Filtramos las prefacturas por garaje dependiendo de la configuraci¢n del usuario.

      lrParGenerales.FINDFIRST;

      IF NOT lrUsuario.GET(USERID) THEN
        ERROR(Text005, USERID);

      IF (lrUsuario."Garaje de trabajo" <> '') AND (lrUsuario."Garaje de trabajo" <> lrParGenerales."Todos los garajes") THEN BEGIN
        FILTERGROUP(2);
        SETRANGE(Garaje, lrUsuario."Garaje de trabajo");
        FILTERGROUP(0);
      END;
    END;

    BEGIN
    {
      $001 AJS 11102013 Modifico la funcion nom_cliente para que retorne Text(50)
    }
    END.
  }
}
