OBJECT Table 121 Purch. Rcpt. Line
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=NAVW16.00.01,NAVES4.00;
  }
  PROPERTIES
  {
    Permissions=TableData 32=r,
                TableData 5802=r;
    OnDelete=VAR
               PurchDocLineComments@1000 : Record 43;
             BEGIN
               DimMgt.DeletePostedDocDim(DATABASE::"Purch. Rcpt. Line","Document No.","Line No.");
               PurchDocLineComments.SETRANGE("Document Type",PurchDocLineComments."Document Type"::Receipt);
               PurchDocLineComments.SETRANGE("No.","Document No.");
               PurchDocLineComments.SETRANGE("Document Line No.","Line No.");
               IF NOT PurchDocLineComments.ISEMPTY THEN
                 PurchDocLineComments.DELETEALL;
             END;

    CaptionML=[ENU=Purch. Rcpt. Line;
               ESP=Hist¢rico l¡n. albar n compra];
    LookupFormID=Form528;
  }
  FIELDS
  {
    { 2   ;   ;Buy-from Vendor No. ;Code20        ;TableRelation=Vendor;
                                                   CaptionML=[ENU=Buy-from Vendor No.;
                                                              ESP=Compra a-N§ proveedor];
                                                   Editable=No }
    { 3   ;   ;Document No.        ;Code20        ;TableRelation="Purch. Rcpt. Header";
                                                   CaptionML=[ENU=Document No.;
                                                              ESP=N§ documento] }
    { 4   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              ESP=N§ l¡nea] }
    { 5   ;   ;Type                ;Option        ;CaptionML=[ENU=Type;
                                                              ESP=Tipo];
                                                   OptionCaptionML=[ENU=" ,G/L Account,Item,,Fixed Asset,Charge (Item)";
                                                                    ESP=" ,Cuenta,Producto,,Activo fijo,Cargo (Prod.)"];
                                                   OptionString=[ ,G/L Account,Item,,Fixed Asset,Charge (Item)] }
    { 6   ;   ;No.                 ;Code20        ;TableRelation=IF (Type=CONST(G/L Account)) "G/L Account"
                                                                 ELSE IF (Type=CONST(Item)) Item
                                                                 ELSE IF (Type=CONST(Fixed Asset)) "Fixed Asset"
                                                                 ELSE IF (Type=CONST("Charge (Item)")) "Item Charge";
                                                   CaptionML=[ENU=No.;
                                                              ESP=N§] }
    { 7   ;   ;Location Code       ;Code10        ;TableRelation=Location WHERE (Use As In-Transit=CONST(No));
                                                   CaptionML=[ENU=Location Code;
                                                              ESP=C¢d. almac‚n] }
    { 8   ;   ;Posting Group       ;Code10        ;TableRelation=IF (Type=CONST(Item)) "Inventory Posting Group"
                                                                 ELSE IF (Type=CONST(Fixed Asset)) "FA Posting Group";
                                                   CaptionML=[ENU=Posting Group;
                                                              ESP=Grupo contable];
                                                   Editable=No }
    { 10  ;   ;Expected Receipt Date;Date         ;CaptionML=[ENU=Expected Receipt Date;
                                                              ESP=Fecha recepci¢n esperada] }
    { 11  ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              ESP=Descripci¢n] }
    { 12  ;   ;Description 2       ;Text50        ;CaptionML=[ENU=Description 2;
                                                              ESP=Descripci¢n 2] }
    { 13  ;   ;Unit of Measure     ;Text10        ;CaptionML=[ENU=Unit of Measure;
                                                              ESP=Unidad medida] }
    { 15  ;   ;Quantity            ;Decimal       ;CaptionML=[ENU=Quantity;
                                                              ESP=Cantidad];
                                                   DecimalPlaces=0:5 }
    { 22  ;   ;Direct Unit Cost    ;Decimal       ;CaptionML=[ENU=Direct Unit Cost;
                                                              ESP=Coste unit. directo];
                                                   AutoFormatType=2;
                                                   AutoFormatExpr=GetCurrencyCodeFromHeader }
    { 23  ;   ;Unit Cost (LCY)     ;Decimal       ;CaptionML=[ENU=Unit Cost (LCY);
                                                              ESP=Coste unitario (DL)];
                                                   AutoFormatType=2 }
    { 25  ;   ;VAT %               ;Decimal       ;CaptionML=[ENU=VAT %;
                                                              ESP=% IVA];
                                                   DecimalPlaces=0:6;
                                                   Editable=No }
    { 27  ;   ;Line Discount %     ;Decimal       ;CaptionML=[ENU=Line Discount %;
                                                              ESP=% Descuento l¡nea];
                                                   DecimalPlaces=0:6;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 31  ;   ;Unit Price (LCY)    ;Decimal       ;CaptionML=[ENU=Unit Price (LCY);
                                                              ESP=Precio venta (DL)];
                                                   AutoFormatType=2 }
    { 32  ;   ;Allow Invoice Disc. ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[ENU=Allow Invoice Disc.;
                                                              ESP=Permitir dto. factura] }
    { 34  ;   ;Gross Weight        ;Decimal       ;CaptionML=[ENU=Gross Weight;
                                                              ESP=Peso bruto];
                                                   DecimalPlaces=0:6 }
    { 35  ;   ;Net Weight          ;Decimal       ;CaptionML=[ENU=Net Weight;
                                                              ESP=Peso neto];
                                                   DecimalPlaces=0:6 }
    { 36  ;   ;Units per Parcel    ;Decimal       ;CaptionML=[ENU=Units per Parcel;
                                                              ESP=Unidades por lote];
                                                   DecimalPlaces=0:6 }
    { 37  ;   ;Unit Volume         ;Decimal       ;CaptionML=[ENU=Unit Volume;
                                                              ESP=Volumen];
                                                   DecimalPlaces=0:6 }
    { 38  ;   ;Appl.-to Item Entry ;Integer       ;CaptionML=[ENU=Appl.-to Item Entry;
                                                              ESP=Liq. por n§ orden producto] }
    { 39  ;   ;Item Rcpt. Entry No.;Integer       ;CaptionML=[ENU=Item Rcpt. Entry No.;
                                                              ESP=N§ ord. en mov. producto] }
    { 40  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=[ENU=Shortcut Dimension 1 Code;
                                                              ESP=C¢d. dim. acceso dir. 1];
                                                   CaptionClass='1,2,1' }
    { 41  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=[ENU=Shortcut Dimension 2 Code;
                                                              ESP=C¢d. dim. acceso dir. 2];
                                                   CaptionClass='1,2,2' }
    { 45  ;   ;Job No.             ;Code20        ;TableRelation=Job;
                                                   CaptionML=[ENU=Job No.;
                                                              ESP=N§ proyecto] }
    { 54  ;   ;Indirect Cost %     ;Decimal       ;CaptionML=[ENU=Indirect Cost %;
                                                              ESP=% Coste indirecto];
                                                   DecimalPlaces=0:6;
                                                   MinValue=0 }
    { 58  ;   ;Qty. Rcd. Not Invoiced;Decimal     ;CaptionML=[ENU=Qty. Rcd. Not Invoiced;
                                                              ESP=Cantidad recibida no facturada];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 61  ;   ;Quantity Invoiced   ;Decimal       ;CaptionML=[ENU=Quantity Invoiced;
                                                              ESP=Cantidad facturada];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 65  ;   ;Order No.           ;Code20        ;CaptionML=[ENU=Order No.;
                                                              ESP=N§ pedido] }
    { 66  ;   ;Order Line No.      ;Integer       ;CaptionML=[ENU=Order Line No.;
                                                              ESP=N§ l¡nea pedido] }
    { 68  ;   ;Pay-to Vendor No.   ;Code20        ;TableRelation=Vendor;
                                                   CaptionML=[ENU=Pay-to Vendor No.;
                                                              ESP=Pago-a N§ proveedor] }
    { 70  ;   ;Vendor Item No.     ;Text20        ;CaptionML=[ENU=Vendor Item No.;
                                                              ESP=C¢d. producto proveedor] }
    { 71  ;   ;Sales Order No.     ;Code20        ;CaptionML=[ENU=Sales Order No.;
                                                              ESP=N§ pedido venta] }
    { 72  ;   ;Sales Order Line No.;Integer       ;CaptionML=[ENU=Sales Order Line No.;
                                                              ESP=N§ l¡nea pedido venta] }
    { 74  ;   ;Gen. Bus. Posting Group;Code10     ;TableRelation="Gen. Business Posting Group";
                                                   CaptionML=[ENU=Gen. Bus. Posting Group;
                                                              ESP=Grupo contable negocio] }
    { 75  ;   ;Gen. Prod. Posting Group;Code10    ;TableRelation="Gen. Product Posting Group";
                                                   CaptionML=[ENU=Gen. Prod. Posting Group;
                                                              ESP=Grupo contable producto] }
    { 77  ;   ;VAT Calculation Type;Option        ;CaptionML=[ENU=VAT Calculation Type;
                                                              ESP=Tipo c lculo IVA];
                                                   OptionCaptionML=[ENU=Normal VAT,Reverse Charge VAT,Full VAT,Sales Tax,No Taxable VAT;
                                                                    ESP=Normal,Reversi¢n,Total,Impto. venta,No sujeto];
                                                   OptionString=Normal VAT,Reverse Charge VAT,Full VAT,Sales Tax,No Taxable VAT }
    { 78  ;   ;Transaction Type    ;Code10        ;TableRelation="Transaction Type";
                                                   CaptionML=[ENU=Transaction Type;
                                                              ESP=Naturaleza transacci¢n] }
    { 79  ;   ;Transport Method    ;Code10        ;TableRelation="Transport Method";
                                                   CaptionML=[ENU=Transport Method;
                                                              ESP=Modo transporte] }
    { 80  ;   ;Attached to Line No.;Integer       ;TableRelation="Purch. Rcpt. Line"."Line No." WHERE (Document No.=FIELD(Document No.));
                                                   CaptionML=[ENU=Attached to Line No.;
                                                              ESP=N§ l¡nea texto adicional] }
    { 81  ;   ;Entry Point         ;Code10        ;TableRelation="Entry/Exit Point";
                                                   CaptionML=[ENU=Entry Point;
                                                              ESP=Puerto/Aerop. descarga] }
    { 82  ;   ;Area                ;Code10        ;TableRelation=Area;
                                                   CaptionML=[ENU=Area;
                                                              ESP=C¢d. provincia] }
    { 83  ;   ;Transaction Specification;Code10   ;TableRelation="Transaction Specification";
                                                   CaptionML=[ENU=Transaction Specification;
                                                              ESP=Especificaci¢n transacci¢n] }
    { 85  ;   ;Tax Area Code       ;Code20        ;TableRelation="Tax Area";
                                                   CaptionML=[ENU=Tax Area Code;
                                                              ESP=C¢d.  rea impuesto] }
    { 86  ;   ;Tax Liable          ;Boolean       ;CaptionML=[ENU=Tax Liable;
                                                              ESP=Sujeto a impuesto] }
    { 87  ;   ;Tax Group Code      ;Code10        ;TableRelation="Tax Group";
                                                   CaptionML=[ENU=Tax Group Code;
                                                              ESP=C¢d. grupo impuesto] }
    { 88  ;   ;Use Tax             ;Boolean       ;CaptionML=[ENU=Use Tax;
                                                              ESP=Utilizar impuesto] }
    { 89  ;   ;VAT Bus. Posting Group;Code10      ;TableRelation="VAT Business Posting Group";
                                                   CaptionML=[ENU=VAT Bus. Posting Group;
                                                              ESP=Grupo registro IVA neg.] }
    { 90  ;   ;VAT Prod. Posting Group;Code10     ;TableRelation="VAT Product Posting Group";
                                                   CaptionML=[ENU=VAT Prod. Posting Group;
                                                              ESP=Grupo registro IVA prod.] }
    { 91  ;   ;Currency Code       ;Code10        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Purch. Rcpt. Header"."Currency Code" WHERE (No.=FIELD(Document No.)));
                                                   CaptionML=[ENU=Currency Code;
                                                              ESP=C¢d. divisa];
                                                   Editable=No }
    { 97  ;   ;Blanket Order No.   ;Code20        ;TableRelation="Purchase Header".No. WHERE (Document Type=CONST(Blanket Order));
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Blanket Order No.;
                                                              ESP=N§ pedido abierto] }
    { 98  ;   ;Blanket Order Line No.;Integer     ;TableRelation="Purchase Line"."Line No." WHERE (Document Type=CONST(Blanket Order),
                                                                                                   Document No.=FIELD(Blanket Order No.));
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Blanket Order Line No.;
                                                              ESP=N§ l¡n. pedido abierto] }
    { 99  ;   ;VAT Base Amount     ;Decimal       ;CaptionML=[ENU=VAT Base Amount;
                                                              ESP=Importe base IVA];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCodeFromHeader }
    { 100 ;   ;Unit Cost           ;Decimal       ;CaptionML=[ENU=Unit Cost;
                                                              ESP=Coste unitario];
                                                   Editable=No;
                                                   AutoFormatType=2;
                                                   AutoFormatExpr=GetCurrencyCodeFromHeader }
    { 131 ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              ESP=Fecha registro] }
    { 1001;   ;Job Task No.        ;Code20        ;TableRelation="Job Task"."Job Task No." WHERE (Job No.=FIELD(Job No.));
                                                   CaptionML=[ENU=Job Task No.;
                                                              ESP=N§ tarea proyecto] }
    { 1002;   ;Job Line Type       ;Option        ;CaptionML=[ENU=Job Line Type;
                                                              ESP=Tipo l¡nea proyecto];
                                                   OptionCaptionML=[ENU=" ,Schedule,Contract,Both Schedule and Contract";
                                                                    ESP=" ,Previsi¢n,Contrato,Previsi¢n y contrato"];
                                                   OptionString=[ ,Schedule,Contract,Both Schedule and Contract] }
    { 1003;   ;Job Unit Price      ;Decimal       ;CaptionML=[ENU=Job Unit Price;
                                                              ESP=Precio venta proyecto];
                                                   BlankZero=Yes }
    { 1004;   ;Job Total Price     ;Decimal       ;CaptionML=[ENU=Job Total Price;
                                                              ESP=Precio total proyecto];
                                                   BlankZero=Yes }
    { 1005;   ;Job Line Amount     ;Decimal       ;CaptionML=[ENU=Job Line Amount;
                                                              ESP=Importe l¡nea proyecto];
                                                   BlankZero=Yes;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Job Currency Code" }
    { 1006;   ;Job Line Discount Amount;Decimal   ;CaptionML=[ENU=Job Line Discount Amount;
                                                              ESP=Importe dto. l¡nea proyecto];
                                                   BlankZero=Yes;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Job Currency Code" }
    { 1007;   ;Job Line Discount % ;Decimal       ;CaptionML=[ENU=Job Line Discount %;
                                                              ESP=% dto. l¡nea proyecto];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100;
                                                   BlankZero=Yes }
    { 1008;   ;Job Unit Price (LCY);Decimal       ;CaptionML=[ENU=Job Unit Price (LCY);
                                                              ESP=Precio venta proyecto (DL)];
                                                   BlankZero=Yes }
    { 1009;   ;Job Total Price (LCY);Decimal      ;CaptionML=[ENU=Job Total Price (LCY);
                                                              ESP=Precio total proyecto (DL)];
                                                   BlankZero=Yes }
    { 1010;   ;Job Line Amount (LCY);Decimal      ;CaptionML=[ENU=Job Line Amount (LCY);
                                                              ESP=Importe l¡nea proyecto (DL)];
                                                   BlankZero=Yes;
                                                   AutoFormatType=1 }
    { 1011;   ;Job Line Disc. Amount (LCY);Decimal;CaptionML=[ENU=Job Line Disc. Amount (LCY);
                                                              ESP=Importe dto. l¡nea proyecto (DL)];
                                                   BlankZero=Yes;
                                                   AutoFormatType=1 }
    { 1012;   ;Job Currency Factor ;Decimal       ;CaptionML=[ENU=Job Currency Factor;
                                                              ESP=Factor divisa proyecto];
                                                   BlankZero=Yes }
    { 1013;   ;Job Currency Code   ;Code20        ;CaptionML=[ENU=Job Currency Code;
                                                              ESP=C¢digo divisa proyecto] }
    { 5401;   ;Prod. Order No.     ;Code20        ;TableRelation="Production Order".No. WHERE (Status=FILTER(Released|Finished));
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Prod. Order No.;
                                                              ESP=N§ orden producci¢n] }
    { 5402;   ;Variant Code        ;Code10        ;TableRelation=IF (Type=CONST(Item)) "Item Variant".Code WHERE (Item No.=FIELD(No.));
                                                   CaptionML=[ENU=Variant Code;
                                                              ESP=C¢d. variante] }
    { 5403;   ;Bin Code            ;Code20        ;TableRelation=Bin.Code WHERE (Location Code=FIELD(Location Code),
                                                                                 Item Filter=FIELD(No.),
                                                                                 Variant Filter=FIELD(Variant Code));
                                                   CaptionML=[ENU=Bin Code;
                                                              ESP=C¢d. ubicaci¢n] }
    { 5404;   ;Qty. per Unit of Measure;Decimal   ;CaptionML=[ENU=Qty. per Unit of Measure;
                                                              ESP=Cdad. por unidad medida];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 5407;   ;Unit of Measure Code;Code10        ;TableRelation=IF (Type=CONST(Item)) "Item Unit of Measure".Code WHERE (Item No.=FIELD(No.))
                                                                 ELSE "Unit of Measure";
                                                   CaptionML=[ENU=Unit of Measure Code;
                                                              ESP=C¢d. unidad medida] }
    { 5415;   ;Quantity (Base)     ;Decimal       ;CaptionML=[ENU=Quantity (Base);
                                                              ESP=Cantidad (base)];
                                                   DecimalPlaces=0:5 }
    { 5461;   ;Qty. Invoiced (Base);Decimal       ;CaptionML=[ENU=Qty. Invoiced (Base);
                                                              ESP=Cdad. facturada (base)];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 5600;   ;FA Posting Date     ;Date          ;CaptionML=[ENU=FA Posting Date;
                                                              ESP=A/F Fecha registro] }
    { 5601;   ;FA Posting Type     ;Option        ;CaptionML=[ENU=FA Posting Type;
                                                              ESP=A/F Tipo registro];
                                                   OptionCaptionML=[ENU=" ,Acquisition Cost,Maintenance";
                                                                    ESP=" ,Coste,Mantenimiento"];
                                                   OptionString=[ ,Acquisition Cost,Maintenance] }
    { 5602;   ;Depreciation Book Code;Code10      ;TableRelation="Depreciation Book";
                                                   CaptionML=[ENU=Depreciation Book Code;
                                                              ESP=C¢d. libro amortizaci¢n] }
    { 5603;   ;Salvage Value       ;Decimal       ;CaptionML=[ENU=Salvage Value;
                                                              ESP=Valor residual];
                                                   AutoFormatType=1 }
    { 5605;   ;Depr. until FA Posting Date;Boolean;CaptionML=[ENU=Depr. until FA Posting Date;
                                                              ESP=A/F Amort. hasta fecha reg.] }
    { 5606;   ;Depr. Acquisition Cost;Boolean     ;CaptionML=[ENU=Depr. Acquisition Cost;
                                                              ESP=Amort. hasta coste] }
    { 5609;   ;Maintenance Code    ;Code10        ;TableRelation=Maintenance;
                                                   CaptionML=[ENU=Maintenance Code;
                                                              ESP=C¢d. mantenimiento] }
    { 5610;   ;Insurance No.       ;Code20        ;TableRelation=Insurance;
                                                   CaptionML=[ENU=Insurance No.;
                                                              ESP=N§ seguro] }
    { 5611;   ;Budgeted FA No.     ;Code20        ;TableRelation="Fixed Asset";
                                                   CaptionML=[ENU=Budgeted FA No.;
                                                              ESP=A/F N§ pptdo.] }
    { 5612;   ;Duplicate in Depreciation Book;Code10;
                                                   TableRelation="Depreciation Book";
                                                   CaptionML=[ENU=Duplicate in Depreciation Book;
                                                              ESP=Duplicado en libro amort.] }
    { 5613;   ;Use Duplication List;Boolean       ;CaptionML=[ENU=Use Duplication List;
                                                              ESP=Utilizar lista duplicados] }
    { 5700;   ;Responsibility Center;Code10       ;TableRelation="Responsibility Center";
                                                   CaptionML=[ENU=Responsibility Center;
                                                              ESP=Centro responsabilidad] }
    { 5705;   ;Cross-Reference No. ;Code20        ;CaptionML=[ENU=Cross-Reference No.;
                                                              ESP=N§ referencia cruzada] }
    { 5706;   ;Unit of Measure (Cross Ref.);Code10;TableRelation=IF (Type=CONST(Item)) "Item Unit of Measure".Code WHERE (Item No.=FIELD(No.));
                                                   CaptionML=[ENU=Unit of Measure (Cross Ref.);
                                                              ESP=Unidad de medida (ref.cruz.)] }
    { 5707;   ;Cross-Reference Type;Option        ;CaptionML=[ENU=Cross-Reference Type;
                                                              ESP=Tipo referencia cruzada];
                                                   OptionCaptionML=[ENU=" ,Customer,Vendor,Bar Code";
                                                                    ESP=" ,Cliente,Prov.,C¢d. barra"];
                                                   OptionString=[ ,Customer,Vendor,Bar Code] }
    { 5708;   ;Cross-Reference Type No.;Code30    ;CaptionML=[ENU=Cross-Reference Type No.;
                                                              ESP=N§ tipo referencia cruzada] }
    { 5709;   ;Item Category Code  ;Code10        ;TableRelation=IF (Type=CONST(Item)) "Item Category";
                                                   CaptionML=[ENU=Item Category Code;
                                                              ESP=C¢d. categor¡a producto] }
    { 5710;   ;Nonstock            ;Boolean       ;CaptionML=[ENU=Nonstock;
                                                              ESP=Prod. sin stock] }
    { 5711;   ;Purchasing Code     ;Code10        ;TableRelation=Purchasing;
                                                   CaptionML=[ENU=Purchasing Code;
                                                              ESP=C¢d. compra] }
    { 5712;   ;Product Group Code  ;Code10        ;TableRelation="Product Group".Code WHERE (Item Category Code=FIELD(Item Category Code));
                                                   CaptionML=[ENU=Product Group Code;
                                                              ESP=C¢d. grupo producto] }
    { 5714;   ;Special Order Sales No.;Code20     ;CaptionML=[ENU=Special Order Sales No.;
                                                              ESP=N§ pedido venta especial] }
    { 5715;   ;Special Order Sales Line No.;Integer;
                                                   CaptionML=[ENU=Special Order Sales Line No.;
                                                              ESP=N§ l¡n. ped. venta especial] }
    { 5790;   ;Requested Receipt Date;Date        ;CaptionML=[ENU=Requested Receipt Date;
                                                              ESP=Fecha recep. solicitada] }
    { 5791;   ;Promised Receipt Date;Date         ;CaptionML=[ENU=Promised Receipt Date;
                                                              ESP=Fecha recep. prometida] }
    { 5792;   ;Lead Time Calculation;DateFormula  ;CaptionML=[ENU=Lead Time Calculation;
                                                              ESP=Plazo entrega (d¡as)] }
    { 5793;   ;Inbound Whse. Handling Time;DateFormula;
                                                   CaptionML=[ENU=Inbound Whse. Handling Time;
                                                              ESP=Tiempo manip. alm. entrada] }
    { 5794;   ;Planned Receipt Date;Date          ;CaptionML=[ENU=Planned Receipt Date;
                                                              ESP=Fecha recep. planificada] }
    { 5795;   ;Order Date          ;Date          ;CaptionML=[ENU=Order Date;
                                                              ESP=Fecha pedido] }
    { 5811;   ;Item Charge Base Amount;Decimal    ;CaptionML=[ENU=Item Charge Base Amount;
                                                              ESP=Importe base cargos prod.];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCodeFromHeader }
    { 5817;   ;Correction          ;Boolean       ;CaptionML=[ENU=Correction;
                                                              ESP=Correcci¢n];
                                                   Editable=No }
    { 6608;   ;Return Reason Code  ;Code10        ;TableRelation="Return Reason";
                                                   CaptionML=[ENU=Return Reason Code;
                                                              ESP=C¢d. motivo dev.] }
    { 99000750;;Routing No.        ;Code20        ;TableRelation="Routing Header";
                                                   CaptionML=[ENU=Routing No.;
                                                              ESP=N§ ruta] }
    { 99000751;;Operation No.      ;Code10        ;TableRelation="Prod. Order Routing Line"."Operation No." WHERE (Status=FILTER(Released..),
                                                                                                                   Prod. Order No.=FIELD(Prod. Order No.),
                                                                                                                   Routing No.=FIELD(Routing No.));
                                                   CaptionML=[ENU=Operation No.;
                                                              ESP=N§ operaci¢n] }
    { 99000752;;Work Center No.    ;Code20        ;TableRelation="Work Center";
                                                   CaptionML=[ENU=Work Center No.;
                                                              ESP=N§ centro trabajo] }
    { 99000754;;Prod. Order Line No.;Integer      ;TableRelation="Prod. Order Line"."Line No." WHERE (Status=FILTER(Released..),
                                                                                                      Prod. Order No.=FIELD(Prod. Order No.));
                                                   CaptionML=[ENU=Prod. Order Line No.;
                                                              ESP=N§ l¡n. orden producc.] }
    { 99000755;;Overhead Rate      ;Decimal       ;CaptionML=[ENU=Overhead Rate;
                                                              ESP=Tasa costes generales];
                                                   DecimalPlaces=0:5 }
    { 99000759;;Routing Reference No.;Integer     ;CaptionML=[ENU=Routing Reference No.;
                                                              ESP=N§ ruta referencia] }
  }
  KEYS
  {
    {    ;Document No.,Line No.                   ;Clustered=Yes }
    {    ;Order No.,Order Line No.                 }
    {    ;Blanket Order No.,Blanket Order Line No.;KeyGroups=SOP(Blank) }
    {    ;Item Rcpt. Entry No.                     }
    {    ;Pay-to Vendor No.                        }
    {    ;Buy-from Vendor No.                      }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Receipt No. %1:;ESP=N§ albar n %1:';
      Text001@1001 : TextConst 'ENU=The program cannot find this purchase line.;ESP=El prog. no puede encontrar esta l¡n. compra.';
      Currency@1005 : Record 4;
      PurchRcptHeader@1004 : Record 120;
      DimMgt@1003 : Codeunit 408;
      CurrencyRead@1002 : Boolean;

    PROCEDURE GetCurrencyCodeFromHeader@1() : Code[10];
    BEGIN
      IF "Document No." = PurchRcptHeader."No." THEN
        EXIT(PurchRcptHeader."Currency Code");
      IF PurchRcptHeader.GET("Document No.") THEN
        EXIT(PurchRcptHeader."Currency Code");
      EXIT('');
    END;

    PROCEDURE ShowDimensions@25();
    VAR
      PostedDocDim@1000 : Record 359;
      PostedDocDimensions@1001 : Form 547;
    BEGIN
      TESTFIELD("No.");
      TESTFIELD("Line No.");
      PostedDocDim.SETRANGE("Table ID",DATABASE::"Purch. Rcpt. Line");
      PostedDocDim.SETRANGE("Document No.","Document No.");
      PostedDocDim.SETRANGE("Line No.","Line No.");
      PostedDocDimensions.SETTABLEVIEW(PostedDocDim);
      PostedDocDimensions.RUNMODAL;
    END;

    PROCEDURE ShowItemTrackingLines@3();
    VAR
      ItemTrackingMgt@1000 : Codeunit 6500;
    BEGIN
      ItemTrackingMgt.CallPostedItemTrackingForm(DATABASE::"Purch. Rcpt. Line",0,"Document No.",'',0,"Line No.");
    END;

    PROCEDURE InsertInvLineFromRcptLine@2(VAR PurchLine@1000 : Record 39;VAR TempFromDocDim@1012 : TEMPORARY Record 357);
    VAR
      PurchInvHeader@1010 : Record 38;
      PurchOrderHeader@1007 : Record 38;
      PurchOrderLine@1005 : Record 39;
      TempPurchLine@1003 : Record 39;
      ToDocDim@1009 : Record 357;
      FromDocDim@1008 : Record 357;
      PurchSetup@1011 : Record 312;
      TransferOldExtLines@1002 : Codeunit 379;
      ItemTrackingMgt@1004 : Codeunit 6500;
      NextLineNo@1001 : Integer;
      ExtTextLine@1006 : Boolean;
    BEGIN
      SETRANGE("Document No.","Document No.");

      TempPurchLine := PurchLine;
      IF PurchLine.FIND('+') THEN
        NextLineNo := PurchLine."Line No." + 10000
      ELSE
        NextLineNo := 10000;

      IF PurchInvHeader."No." <> TempPurchLine."Document No." THEN
        PurchInvHeader.GET(TempPurchLine."Document Type",TempPurchLine."Document No.");

      IF PurchLine."Receipt No." <> "Document No." THEN BEGIN
        PurchLine.INIT;
        PurchLine."Line No." := NextLineNo;
        PurchLine."Document Type" := TempPurchLine."Document Type";
        PurchLine."Document No." := TempPurchLine."Document No.";
        PurchLine.Description := STRSUBSTNO(Text000,"Document No.");
        PurchLine.INSERT;
        NextLineNo := NextLineNo + 10000;
      END;

      TransferOldExtLines.ClearLineNumbers;

      REPEAT
        ExtTextLine := (TransferOldExtLines.GetNewLineNumber("Attached to Line No.") <> 0);

        IF PurchOrderLine.GET(
            PurchOrderLine."Document Type"::Order,"Order No.","Order Line No.")
        THEN BEGIN
          IF (PurchOrderHeader."Document Type" <> PurchOrderLine."Document Type"::Order) OR
             (PurchOrderHeader."No." <> PurchOrderLine."Document No.")
          THEN
            PurchOrderHeader.GET(PurchOrderLine."Document Type"::Order,"Order No.");

          InitCurrency("Currency Code");

          IF PurchInvHeader."Prices Including VAT" THEN BEGIN
            IF NOT PurchOrderHeader."Prices Including VAT" THEN
              PurchOrderLine."Direct Unit Cost" :=
                ROUND(
                  PurchOrderLine."Direct Unit Cost" * (1 + PurchOrderLine."VAT %" / 100),
                  Currency."Unit-Amount Rounding Precision");
          END ELSE BEGIN
            IF PurchOrderHeader."Prices Including VAT" THEN
              PurchOrderLine."Direct Unit Cost" :=
                ROUND(
                  PurchOrderLine."Direct Unit Cost" / (1 + PurchOrderLine."VAT %" / 100),
                  Currency."Unit-Amount Rounding Precision");
          END;
        END ELSE BEGIN
          IF ExtTextLine THEN BEGIN
            PurchOrderLine.INIT;
            PurchOrderLine."Line No." := "Order Line No.";
            PurchOrderLine.Description := Description;
            PurchOrderLine."Description 2" := "Description 2";
          END ELSE
            ERROR(Text001);
        END;
        PurchLine := PurchOrderLine;
        PurchLine."Line No." := NextLineNo;
        PurchLine."Document Type" := TempPurchLine."Document Type";
        PurchLine."Document No." := TempPurchLine."Document No.";
        PurchLine."Variant Code" := "Variant Code";
        PurchLine."Location Code" := "Location Code";
        PurchLine."Quantity (Base)" := 0;
        PurchLine.Quantity := 0;
        PurchLine."Outstanding Qty. (Base)" := 0;
        PurchLine."Outstanding Quantity" := 0;
        PurchLine."Quantity Received" := 0;
        PurchLine."Qty. Received (Base)" := 0;
        PurchLine."Quantity Invoiced" := 0;
        PurchLine."Qty. Invoiced (Base)" := 0;
        PurchLine.Amount := 0;
        PurchLine."Amount Including VAT" := 0;
        PurchLine."Sales Order No." := '';
        PurchLine."Sales Order Line No." := 0;
        PurchLine."Drop Shipment" := FALSE;
        PurchLine."Special Order Sales No." := '';
        PurchLine."Special Order Sales Line No." := 0;
        PurchLine."Special Order" := FALSE;
        PurchLine."Receipt No." := "Document No.";
        PurchLine."Receipt Line No." := "Line No.";
        IF NOT ExtTextLine THEN BEGIN
          PurchLine.VALIDATE(Quantity,Quantity - "Quantity Invoiced");
          PurchLine.VALIDATE("Direct Unit Cost",PurchOrderLine."Direct Unit Cost");
          PurchLine.VALIDATE("Line Discount %",PurchOrderLine."Line Discount %");
          PurchSetup.GET;
          IF NOT PurchSetup."Calc. Inv. Discount" THEN
            IF PurchOrderLine.Quantity = 0 THEN
              PurchLine.VALIDATE("Inv. Discount Amount",0)
            ELSE
              PurchLine.VALIDATE(
                "Inv. Discount Amount",
                ROUND(
                  PurchOrderLine."Inv. Discount Amount" * PurchLine.Quantity / PurchOrderLine.Quantity,
                  Currency."Amount Rounding Precision"));
        END;

        PurchLine."Attached to Line No." :=
          TransferOldExtLines.TransferExtendedText(
            "Line No.",
            NextLineNo,
            "Attached to Line No.");
        PurchLine."Shortcut Dimension 1 Code" := PurchOrderLine."Shortcut Dimension 1 Code";
        PurchLine."Shortcut Dimension 2 Code" := PurchOrderLine."Shortcut Dimension 2 Code";

        IF "Sales Order No." = '' THEN
          PurchLine."Drop Shipment" := FALSE
        ELSE
          PurchLine."Drop Shipment" := TRUE;

        PurchLine.INSERT;

        ItemTrackingMgt.CopyHandledItemTrkgToInvLine2(PurchOrderLine,PurchLine);

        FromDocDim.SETRANGE("Table ID",DATABASE::"Purchase Line");
        FromDocDim.SETRANGE("Document Type",PurchOrderLine."Document Type");
        FromDocDim.SETRANGE("Document No.",PurchOrderLine."Document No.");
        FromDocDim.SETRANGE("Line No.",PurchOrderLine."Line No.");

        ToDocDim.SETRANGE("Table ID",DATABASE::"Purchase Line");
        ToDocDim.SETRANGE("Document Type",PurchLine."Document Type");
        ToDocDim.SETRANGE("Document No.",PurchLine."Document No.");
        ToDocDim.SETRANGE("Line No.", PurchLine."Line No.");
        ToDocDim.DELETEALL;

        IF FromDocDim.FIND('-') THEN
          REPEAT
            TempFromDocDim.INIT;
            TempFromDocDim := FromDocDim;
            TempFromDocDim."Table ID" := DATABASE::"Purchase Line";
            TempFromDocDim."Document Type" := PurchLine."Document Type";
            TempFromDocDim."Document No." := PurchLine."Document No.";
            TempFromDocDim."Line No." := PurchLine."Line No.";
            TempFromDocDim.INSERT;
          UNTIL FromDocDim.NEXT = 0;

        NextLineNo := NextLineNo + 10000;
        IF "Attached to Line No." = 0 THEN
          SETRANGE("Attached to Line No.","Line No.");
      UNTIL (NEXT = 0) OR ("Attached to Line No." = 0);
    END;

    PROCEDURE GetPurchInvLines@4(VAR TempPurchInvLine@1000 : TEMPORARY Record 123);
    VAR
      PurchInvLine@1003 : Record 123;
      ItemLedgEntry@1002 : Record 32;
      ValueEntry@1001 : Record 5802;
    BEGIN
      TempPurchInvLine.RESET;
      TempPurchInvLine.DELETEALL;

      IF Type <> Type::Item THEN
        EXIT;

      FilterPstdDocLnItemLedgEntries(ItemLedgEntry);
      ItemLedgEntry.SETFILTER("Invoiced Quantity",'<>0');
      IF ItemLedgEntry.FINDSET THEN BEGIN
        ValueEntry.SETCURRENTKEY("Item Ledger Entry No.","Entry Type");
        ValueEntry.SETRANGE("Entry Type",ValueEntry."Entry Type"::"Direct Cost");
        ValueEntry.SETFILTER("Invoiced Quantity",'<>0');
        REPEAT
          ValueEntry.SETRANGE("Item Ledger Entry No.",ItemLedgEntry."Entry No.");
          IF ValueEntry.FINDSET THEN
            REPEAT
              IF ValueEntry."Document Type" = ValueEntry."Document Type"::"Purchase Invoice" THEN
                IF PurchInvLine.GET(ValueEntry."Document No.",ValueEntry."Document Line No.") THEN BEGIN
                  TempPurchInvLine.INIT;
                  TempPurchInvLine := PurchInvLine;
                  IF TempPurchInvLine.INSERT THEN;
                END;
            UNTIL ValueEntry.NEXT = 0;
        UNTIL ItemLedgEntry.NEXT = 0;
      END;
    END;

    PROCEDURE CalcReceivedPurchNotReturned@6(VAR RemainingQty@1003 : Decimal;VAR RevUnitCostLCY@1005 : Decimal;ExactCostReverse@1006 : Boolean);
    VAR
      ItemLedgEntry@1000 : Record 32;
      TotalCostLCY@1007 : Decimal;
      TotalQtyBase@1002 : Decimal;
    BEGIN
      RemainingQty := 0;
      IF (Type <> Type::Item) OR (Quantity <= 0) THEN BEGIN
        RevUnitCostLCY := "Unit Cost (LCY)";
        EXIT;
      END;

      RevUnitCostLCY := 0;
      FilterPstdDocLnItemLedgEntries(ItemLedgEntry);
      IF ItemLedgEntry.FINDSET THEN
        REPEAT
          RemainingQty := RemainingQty + ItemLedgEntry."Remaining Quantity";
          IF ExactCostReverse THEN BEGIN
            ItemLedgEntry.CALCFIELDS("Cost Amount (Expected)","Cost Amount (Actual)");
            TotalCostLCY :=
              TotalCostLCY + ItemLedgEntry."Cost Amount (Expected)" + ItemLedgEntry."Cost Amount (Actual)";
            TotalQtyBase := TotalQtyBase + ItemLedgEntry.Quantity;
          END;
        UNTIL ItemLedgEntry.NEXT = 0;

      IF ExactCostReverse AND (RemainingQty <> 0) AND (TotalQtyBase <> 0) THEN
        RevUnitCostLCY := ABS(TotalCostLCY / TotalQtyBase) * "Qty. per Unit of Measure"
      ELSE
        RevUnitCostLCY := "Unit Cost (LCY)";

      RemainingQty := CalcQty(RemainingQty);
    END;

    LOCAL PROCEDURE CalcQty@10(QtyBase@1000 : Decimal) : Decimal;
    BEGIN
      IF "Qty. per Unit of Measure" = 0 THEN
        EXIT(QtyBase);
      EXIT(ROUND(QtyBase / "Qty. per Unit of Measure",0.00001));
    END;

    PROCEDURE FilterPstdDocLnItemLedgEntries@5(VAR ItemLedgEntry@1000 : Record 32);
    BEGIN
      ItemLedgEntry.RESET;
      ItemLedgEntry.SETCURRENTKEY("Document No.");
      ItemLedgEntry.SETRANGE("Document No.","Document No.");
      ItemLedgEntry.SETRANGE("Document Type",ItemLedgEntry."Document Type"::"Purchase Receipt");
      ItemLedgEntry.SETRANGE("Document Line No.","Line No.");
    END;

    PROCEDURE ShowItemLedgEntries@8();
    VAR
      ItemLedgEntry@1000 : Record 32;
    BEGIN
      IF Type = Type::Item THEN BEGIN
        FilterPstdDocLnItemLedgEntries(ItemLedgEntry);
        FORM.RUNMODAL(0,ItemLedgEntry);
      END;
    END;

    PROCEDURE ShowItemPurchInvLines@9();
    VAR
      TempPurchInvLine@1001 : TEMPORARY Record 123;
    BEGIN
      IF Type = Type::Item THEN BEGIN
        GetPurchInvLines(TempPurchInvLine);
        FORM.RUNMODAL(FORM::"Posted Purchase Invoice Lines",TempPurchInvLine);
      END;
    END;

    LOCAL PROCEDURE InitCurrency@7(CurrencyCode@1001 : Code[10]);
    BEGIN
      IF (Currency.Code = CurrencyCode) AND CurrencyRead THEN
        EXIT;

      IF CurrencyCode <> '' THEN
        Currency.GET(CurrencyCode)
      ELSE
        Currency.InitRoundingPrecision;
      CurrencyRead := TRUE;
    END;

    PROCEDURE ShowLineComments@11();
    VAR
      PurchDocLineComments@1002 : Record 43;
      PurchDocCommentSheet@1000 : Form 66;
    BEGIN
      PurchDocLineComments.SETRANGE("Document Type",PurchDocLineComments."Document Type"::Receipt);
      PurchDocLineComments.SETRANGE("No.","Document No.");
      PurchDocLineComments.SETRANGE("Document Line No.","Line No.");
      PurchDocCommentSheet.SETTABLEVIEW(PurchDocLineComments);
      PurchDocCommentSheet.RUNMODAL;
    END;

    BEGIN
    END.
  }
}
