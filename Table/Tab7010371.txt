OBJECT Table 7010371 Conf. Exportacion Proveedor
{
  OBJECT-PROPERTIES
  {
    Date=16/10/09;
    Time=12:30:43;
    Version List=TRANSFER;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               rConf.RESET;
               IF rConf.FINDLAST THEN
                  No := rConf.No+1
               ELSE
                  No := 1;

               ControlaDuplicidad;
             END;

    OnModify=BEGIN
               ControlaDuplicidad;
             END;

    CaptionML=ESP=Conf. Exportacion Proveedor;
    LookupFormID=Form7010371;
    DrillDownFormID=Form7010371;
  }
  FIELDS
  {
    { 1   ;   ;No                  ;Integer       ;CaptionML=ESP=No }
    { 2   ;   ;Zona Fisica         ;Code10        ;TableRelation="Zona fisica transfer";
                                                   OnValidate=BEGIN
                                                                CASE "Tipo Busqueda" OF
                                                                  "Tipo Busqueda"::Proveedor: BEGIN
                                                                    IF "Zona Fisica" <> '' THEN
                                                                      "Zona Trabajo" :='';
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ESP=Zona Fisica }
    { 3   ;   ;Garaje/Emp          ;Code2         ;CaptionML=ESP=Garaje/Emp;
                                                   Description=Codigo TRN }
    { 4   ;   ;Zona Trabajo        ;Code10        ;TableRelation="Zona de trabajo".Codigo;
                                                   OnValidate=BEGIN
                                                                CASE "Tipo Busqueda" OF
                                                                  "Tipo Busqueda"::Proveedor: BEGIN
                                                                    IF "Zona Trabajo" <> '' THEN
                                                                      "Zona Fisica" :='';
                                                                  END;
                                                                END;
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ESP=Zona Trabajo }
    { 5   ;   ;Rango Desde         ;Integer       ;CaptionML=ESP=Rango Desde;
                                                   MinValue=0;
                                                   BlankZero=Yes }
    { 6   ;   ;Rango Hasta         ;Integer       ;CaptionML=ESP=Rango Hasta;
                                                   MinValue=0;
                                                   BlankZero=Yes }
    { 7   ;   ;Proveedor           ;Code20        ;TableRelation=Vendor.No.;
                                                   CaptionML=ESP=Proveedor }
    { 8   ;   ;Tipo Busqueda       ;Option        ;CaptionML=ESP=Tipo Busqueda;
                                                   OptionCaptionML=ESP=Garaje,Proveedor;
                                                   OptionString=Garaje,Proveedor }
    { 20  ;   ;Cliente             ;Code20        ;TableRelation=Customer.No.;
                                                   OnValidate=BEGIN
                                                                IF Cliente <> xRec.Cliente THEN BEGIN
                                                                  CLEAR(TTOO);
                                                                END;
                                                              END;

                                                   CaptionML=ESP=Cliente }
    { 21  ;   ;TTOO                ;Code10        ;TableRelation=Cliente/TTOO.TTOO WHERE (Cliente=FIELD(Cliente));
                                                   CaptionML=ESP=TTOO }
    { 22  ;   ;Vehiculo            ;Code10        ;OnLookup=VAR
                                                              lrVehiculo@1103350000 : Record 7010346;
                                                            BEGIN
                                                              CLEAR(lrVehiculo);
                                                              IF Vehiculo <> '' THEN BEGIN
                                                                lrVehiculo.SETCURRENTKEY(Numero);
                                                                lrVehiculo.SETRANGE(Numero,Vehiculo);
                                                                IF NOT lrVehiculo.FINDFIRST THEN;
                                                                lrVehiculo.RESET;
                                                              END;
                                                              IF FORM.RUNMODAL(0,lrVehiculo,lrVehiculo.Numero)= ACTION::LookupOK THEN
                                                                VALIDATE(Vehiculo,lrVehiculo.Numero);
                                                            END;

                                                   CaptionML=ESP=Vehiculo }
    { 23  ;   ;Conductor           ;Code10        ;TableRelation=Conductor.Conductor;
                                                   CaptionML=ESP=Conductor }
    { 24  ;   ;Garaje              ;Code10        ;TableRelation=Garaje.Garaje;
                                                   CaptionML=ESP=Garaje }
  }
  KEYS
  {
    {    ;No                                      ;Clustered=Yes }
    {    ;Tipo Busqueda,Proveedor,Zona Fisica,Rango Desde,Rango Hasta }
    {    ;Tipo Busqueda,Cliente,TTOO,Zona Trabajo,Garaje,Rango Desde,Rango Hasta }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      rConf@1100244000 : Record 7010371;
      TEXT0001@1103350000 : TextConst 'ESP=El rango %1\ est  duplicado';

    PROCEDURE NombreProveedor@1100244000() : Text[30];
    VAR
      lrProv@1100244000 : Record 23;
    BEGIN
      // NombreProveedor

      lrProv.RESET;
      IF lrProv.GET(Proveedor) THEN
        EXIT(lrProv.Name)
      ELSE
        EXIT('');
    END;

    PROCEDURE ControlaDuplicidad@1103350000();
    BEGIN
      // ControlaDuplicidad;


      CLEAR(rConf);
      CASE "Tipo Busqueda" OF
        "Tipo Busqueda"::Garaje: BEGIN
          rConf.SETCURRENTKEY("Tipo Busqueda",Proveedor,"Zona Fisica","Rango Desde","Rango Hasta");
          rConf.SETFILTER(Proveedor      ,'=%1', Proveedor);
          rConf.SETFILTER("Zona Fisica"  ,'=%1', "Zona Fisica");
        END;
        "Tipo Busqueda"::Proveedor: BEGIN
          rConf.SETCURRENTKEY("Tipo Busqueda",Cliente,TTOO,"Zona Trabajo",Garaje,"Rango Desde","Rango Hasta");
          rConf.SETFILTER(Cliente        ,'=%1', Cliente);
          rConf.SETFILTER(TTOO           ,'=%1', TTOO);
          rConf.SETFILTER("Zona Trabajo" ,'=%1', "Zona Trabajo");
          rConf.SETFILTER(Garaje         ,'=%1', Garaje);
          rConf.SETFILTER("Zona Fisica"  ,'=%1', "Zona Fisica");
        END;
      END;

      rConf.SETRANGE("Tipo Busqueda", "Tipo Busqueda");

      rConf.SETFILTER("Rango Desde" ,'<=%1', "Rango Hasta");
      rConf.SETFILTER("Rango Hasta" ,'>=%1', "Rango Desde");
      rConf.SETFILTER(No            ,'<>%1', No);
      IF rConf.FINDFIRST THEN
        ERROR(TEXT0001,rConf.GETFILTERS);
    END;

    PROCEDURE GetMatricula@1103350001() : Code[10];
    VAR
      lrVehiculo@1103350000 : Record 7010346;
    BEGIN
      // GetMatricula
      // Devuelve la matricula del vehiculo

      CLEAR(lrVehiculo);
      IF Vehiculo <> '' THEN BEGIN
        lrVehiculo.SETCURRENTKEY(Numero);
        lrVehiculo.SETRANGE(Numero,Vehiculo);
        IF NOT lrVehiculo.FINDFIRST THEN
          CLEAR(lrVehiculo);
      END;

      EXIT(lrVehiculo.Matricula);
    END;

    BEGIN
    {
      JPT 23/08/04 Esta tabla la utilizamos para dos temas completamente distintos:
      Estos temas viene distinguidos por el campo "Tipo Busqueda":
        Garaje: Para le exportacion proveedor (UEX->TRN)  en funcion de los campos:
                "Zona Fisica","Proveedor","Rango desde" y "Rango hasta" devuelve el Garaje y la Zona de Trabajo
        Provedor: Para la automatizaci¢n de proveedores en la importaci¢n de servicion (TRN):
                  Dado un "Cliente","Touroperador",Garaje,Rangos y "Zona de trabajo" devolvera un
                  Vehiculo y Conductor dado (campo proveedor est  ligado a vehiculo)
    }
    END.
  }
}
