OBJECT Table 7010346 Vehiculo
{
  OBJECT-PROPERTIES
  {
    Date=27/11/14;
    Time=12:24:36;
    Modified=Yes;
    Version List=TRANSFER;
  }
  PROPERTIES
  {
    OnInsert=VAR
               rUser@1100244000 : Record 7010420;
             BEGIN
               IF (Garaje='') AND rUser.GET(USERID) AND (rUser."Garaje por defecto" <> '') THEN
                 Garaje := rUser."Garaje por defecto";
             END;

    OnModify=BEGIN
               IF Garaje = '' THEN
                 MESSAGE(err1);
             END;

    OnDelete=VAR
               rParte@1100244000 : Record 7010360;
             BEGIN
               // Hay que controlar que el vehiculo no este asignado a ningun servicio, en caso contrario
               // no hay que dejar borrar el vehiculo
               //
               rParte.RESET;
               rParte.SETCURRENTKEY(Vehiculo);
               rParte.SETRANGE(Vehiculo, Matricula);
               IF rParte.FINDFIRST THEN
                 ERROR(err4);
             END;

    CaptionML=ESP=Vehiculo;
    LookupFormID=Form7010373;
    DrillDownFormID=Form7010373;
  }
  FIELDS
  {
    { 1   ;   ;Matricula           ;Code10        ;AltSearchField=Numero;
                                                   CaptionML=ESP=Matricula;
                                                   NotBlank=Yes;
                                                   Description=PK }
    { 3   ;   ;Garaje              ;Code10        ;TableRelation=Garaje.Garaje;
                                                   OnValidate=VAR
                                                                cFunBas@1100244000 : Codeunit 7010310;
                                                              BEGIN
                                                                cFunBas.TestGarajeTodos(Garaje);
                                                                cFunBas.TestRestringido(Garaje);
                                                              END;

                                                   CaptionML=ESP=Garaje;
                                                   SQL Data Type=Varchar;
                                                   NotBlank=Yes;
                                                   Description=FK Garaje }
    { 5   ;   ;Numero              ;Text10        ;OnValidate=BEGIN
                                                                // AJS 29.11.2005
                                                                // Vamos a establecer un control para que no se pueda poner el mismo numero en 2 vehiculos

                                                                rVeh.RESET;
                                                                rVeh.SETCURRENTKEY(Numero);
                                                                rVeh.SETRANGE (Numero   , Numero);
                                                                rVeh.SETFILTER(Matricula, '<>%1', Matricula);
                                                                IF rVeh.FINDFIRST THEN
                                                                  ERROR(Text015, rVeh.Matricula);
                                                              END;

                                                   CaptionML=ESP=Numero }
    { 7   ;   ;Plazas              ;Integer       ;CaptionML=ESP=Plazas;
                                                   NotBlank=Yes }
    { 9   ;   ;Tipo vehiculo       ;Code10        ;TableRelation="Tipo Vehiculo".Codigo;
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Nombre grupo");
                                                              END;

                                                   CaptionML=ESP=Tipo vehiculo;
                                                   Description=FK Tipo Vehiculo }
    { 11  ;   ;Fecha compra        ;Date          ;OnValidate=BEGIN
                                                                IF "Fecha inicio actividad" = 0D THEN
                                                                  "Fecha inicio actividad" := "Fecha compra";

                                                                IF "Fecha compra" > "Fecha inicio actividad" THEN
                                                                  ERROR(no_compra_posterior_actividad);

                                                                IF "Fecha venta" <> 0D THEN
                                                                  IF "Fecha compra" >= "Fecha venta" THEN
                                                                    ERROR(no_vender_antes_comprar);
                                                              END;

                                                   CaptionML=ESP=Fecha compra }
    { 13  ;   ;Precio compra DL    ;Decimal       ;CaptionML=ESP=Precio compra DL;
                                                   AutoFormatType=2 }
    { 15  ;   ;Fecha inicio actividad;Date        ;OnValidate=BEGIN
                                                                IF "Fecha compra" <> 0D THEN
                                                                  IF "Fecha compra" > "Fecha inicio actividad" THEN
                                                                    ERROR(no_compra_posterior_actividad);
                                                              END;

                                                   CaptionML=ESP=Fecha inicio actividad }
    { 17  ;   ;Fecha venta         ;Date          ;OnValidate=BEGIN
                                                                IF "Fecha compra" <> 0D THEN
                                                                  IF "Fecha compra" >= "Fecha venta" THEN
                                                                    ERROR(no_vender_antes_comprar);
                                                              END;

                                                   CaptionML=ESP=Fecha venta }
    { 19  ;   ;Precio venta DL     ;Decimal       ;CaptionML=ESP=Precio venta DL;
                                                   AutoFormatType=2 }
    { 21  ;   ;Fecha 1er viaje anual;Date         ;CaptionML=ESP=Fecha 1er viaje anual;
                                                   Description=Se obtendra por codigo al asignar el vehiculo a los partes;
                                                   Editable=No }
    { 23  ;   ;Fecha ultimo viaje  ;Date          ;CaptionML=ESP=Fecha ultimo viaje;
                                                   Description=Se obtendra por codigo al asignar el vehiculo a los partes;
                                                   Editable=No }
    { 25  ;   ;Fecha proxima ITV   ;Date          ;OnValidate=BEGIN
                                                                IF "Fecha proxima ITV" <= TODAY THEN
                                                                  ERROR(proxima_ITV_posterior);
                                                              END;

                                                   CaptionML=ESP=Fecha proxima ITV }
    { 27  ;   ;Compa¤ia aseguradora;Text50        ;CaptionML=ESP=Compa¤ia aseguradora }
    { 29  ;   ;N§ Poliza           ;Text30        ;CaptionML=ESP=N§ Poliza }
    { 31  ;   ;Fecha expiracion seguro;Date       ;OnValidate=BEGIN
                                                                IF "Fecha expiracion seguro" <= TODAY THEN
                                                                  ERROR(expiracion_seguro_posterior);
                                                              END;

                                                   CaptionML=ESP=Fecha expiracion seguro }
    { 33  ;   ;Vehiculo propio     ;Boolean       ;OnValidate=VAR
                                                                lrTTOOParte@1103355000 : Record 7010365;
                                                                lrCI@1103355001 : Record 7010414;
                                                                lrProdIng@1103355002 : Record 7035392;
                                                                lrProdCst@1103355003 : Record 7035393;
                                                              BEGIN
                                                                IF "Vehiculo propio" THEN
                                                                  VALIDATE(Agregado, FALSE);

                                                                // AJF 05/01/09
                                                                // Propagamos el cambio de vehiculo propio a traves de las l¡neas de CI y TO x parte.

                                                                IF "Vehiculo propio" <> xRec."Vehiculo propio" THEN BEGIN

                                                                  lrTTOOParte.SETCURRENTKEY(Confirmado, "Cliente estadistico", Touroperador, "Fecha Facturacion", Garaje, "Tipo Servicio",
                                                                                            "Codigo Servicio", "Pax Transportados", "Servicio arrendado", "Tipo Vehiculo", Vehiculo);
                                                                  lrTTOOParte.SETRANGE("Servicio arrendado", "Vehiculo propio");
                                                                  lrTTOOParte.SETRANGE(Vehiculo            , Matricula);
                                                                  lrTTOOParte.MODIFYALL("Servicio arrendado", NOT "Vehiculo propio");

                                                                  lrCI.SETCURRENTKEY(Vehiculo);
                                                                  lrCI.SETRANGE(Vehiculo, Matricula);
                                                                  lrCI.MODIFYALL("Servicio propio", "Vehiculo propio");

                                                                  lrProdIng.SETCURRENTKEY("Cliente estadistico", Touroperador, Fecha, "Tipo linea", "Tipo elemento", Garaje, "Tipo servicio",
                                                                                          "Codigo servicio", "Pax Transportados", "Zona Precios", "Servicio propio", Vehiculo);
                                                                  lrProdIng.SETRANGE("Servicio propio", NOT "Vehiculo propio");
                                                                  lrProdIng.SETRANGE(Vehiculo         , Matricula);
                                                                  lrProdIng.MODIFYALL("Servicio propio", "Vehiculo propio");

                                                                  lrProdCst.SETCURRENTKEY(Cliente, Touroperador, Fecha, "Tipo linea", "Tipo elemento", Garaje, "Tipo servicio",
                                                                                          "Codigo servicio", "Pax Transportados", "Zona Precios", "Servicio propio", Vehiculo);
                                                                  lrProdCst.SETRANGE("Servicio propio", NOT "Vehiculo propio");
                                                                  lrProdCst.SETRANGE(Vehiculo         , Matricula);
                                                                  lrProdCst.MODIFYALL("Servicio propio", "Vehiculo propio");

                                                                END;
                                                              END;

                                                   CaptionML=ESP=Vehiculo propio }
    { 34  ;   ;Agregado            ;Boolean       ;OnValidate=VAR
                                                                lrParte@1100244000 : Record 7010360;
                                                              BEGIN

                                                                IF "Vehiculo propio" AND Agregado THEN
                                                                  ERROR(Text001, Matricula);

                                                                IF Agregado <> xRec.Agregado THEN BEGIN
                                                                  // Si se cambia este campo, lo mantenemos a nivel de partes
                                                                  lrParte.RESET;
                                                                  lrParte.SETCURRENTKEY(Vehiculo);
                                                                  lrParte.SETRANGE(Vehiculo,Matricula);
                                                                  IF lrParte.FINDFIRST THEN
                                                                    lrParte.MODIFYALL("Vehiculo Agregado", Agregado);
                                                                END;
                                                              END;

                                                   CaptionML=ESP=Agregado }
    { 35  ;   ;Empresa propietaria ;Code20        ;TableRelation=Vendor.No.;
                                                   CaptionML=ESP=Empresa propietaria;
                                                   Description=FK Proveedores }
    { 37  ;   ;Nombre grupo        ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Tipo Vehiculo".Descripcion WHERE (Codigo=FIELD(Tipo vehiculo)));
                                                   CaptionML=ESP=Nombre grupo;
                                                   Description=Calculo sobre Tipo vehiculo }
    { 39  ;   ;Marca               ;Text30        ;CaptionML=ESP=Marca;
                                                   Description=Pertenece a la ficha tecnica }
    { 41  ;   ;Modelo              ;Text30        ;CaptionML=ESP=Modelo;
                                                   Description=Pertenece a la ficha tecnica }
    { 43  ;   ;Version             ;Text30        ;CaptionML=ESP=Version;
                                                   Description=Pertenece a la ficha tecnica }
    { 45  ;   ;Denominacion comercial;Text30      ;CaptionML=ESP=Denominacion comercial;
                                                   Description=Pertenece a la ficha tecnica }
    { 47  ;   ;Tara (Kg)           ;Integer       ;CaptionML=ESP=Tara (Kg);
                                                   Description=Pertenece a la ficha tecnica }
    { 49  ;   ;PMA (Kg)            ;Integer       ;CaptionML=ESP=PMA (Kg);
                                                   Description=Pertenece a la ficha tecnica }
    { 51  ;   ;Neumaticos          ;Text30        ;CaptionML=ESP=Neumaticos;
                                                   Description=Pertenece a la ficha tecnica }
    { 53  ;   ;Volumen bodega (m3) ;Decimal       ;CaptionML=ESP=Volumen bodega (m3);
                                                   Description=Pertenece a la ficha tecnica }
    { 55  ;   ;Altura maxima (mm)  ;Integer       ;CaptionML=ESP=Altura maxima (mm);
                                                   Description=Pertenece a la ficha tecnica }
    { 57  ;   ;Anchura maxima (mm) ;Integer       ;CaptionML=ESP=Anchura maxima (mm);
                                                   Description=Pertenece a la ficha tecnica }
    { 59  ;   ;Via anterior/posterior (mm);Text30 ;CaptionML=ESP=Via anterior/posterior (mm);
                                                   Description=Pertenece a la ficha tecnica }
    { 61  ;   ;Longitud maxima (mm);Integer       ;CaptionML=ESP=Longitud maxima (mm);
                                                   Description=Pertenece a la ficha tecnica }
    { 63  ;   ;Distancia ejes 1§/2§ (mm);Integer  ;CaptionML=ESP=Distancia ejes 1§/2§ (mm);
                                                   Description=Pertenece a la ficha tecnica }
    { 65  ;   ;Motor marca         ;Text30        ;CaptionML=ESP=Motor marca;
                                                   Description=Pertenece a la ficha tecnica }
    { 67  ;   ;Motor tipo          ;Text30        ;CaptionML=ESP=Motor tipo;
                                                   Description=Pertenece a la ficha tecnica }
    { 69  ;   ;N§ Cilindros        ;Integer       ;CaptionML=ESP=N§ Cilindros;
                                                   Description=Pertenece a la ficha tecnica }
    { 71  ;   ;Cilindrada          ;Integer       ;CaptionML=ESP=Cilindrada;
                                                   Description=Pertenece a la ficha tecnica }
    { 73  ;   ;Potencia fiscal/real (CVF/KW);Text30;
                                                   CaptionML=ESP=Potencia fiscal/real (CVF/KW);
                                                   Description=Pertenece a la ficha tecnica }
    { 75  ;   ;N§ Identificacion   ;Text30        ;CaptionML=ESP=N§ Identificacion;
                                                   Description=Pertenece a la ficha tecnica }
    { 77  ;   ;N§ Certificado      ;Text30        ;CaptionML=ESP=N§ Certificado;
                                                   Description=Pertenece a la ficha tecnica }
    { 79  ;   ;Observaciones       ;Text250       ;CaptionML=ESP=Observaciones;
                                                   Description=Pertenece a la ficha tecnica }
    { 81  ;   ;Filtro Fecha        ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=ESP=Filtro Fecha;
                                                   Editable=Yes }
    { 83  ;   ;Consumo             ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Registro diario"."Litros repostados" WHERE (Garaje=FIELD(Filtro Garaje Resultados),
                                                                                                                Matricula=FIELD(Matricula),
                                                                                                                Dia=FIELD(Filtro Fecha),
                                                                                                                Anulado=CONST(No)));
                                                   CaptionML=ESP=Consumo;
                                                   Description=Campo calculado sobre registro diario;
                                                   Editable=No }
    { 85  ;   ;Kilometros          ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Registro diario"."Kms realizados" WHERE (Matricula=FIELD(Matricula),
                                                                                                             Dia=FIELD(Filtro Fecha),
                                                                                                             Garaje=FIELD(Filtro Garaje Resultados),
                                                                                                             Anulado=CONST(No)));
                                                   CaptionML=ESP=Kilometros;
                                                   Description=Campo calculado sobre registro diario;
                                                   Editable=No }
    { 87  ;   ;Fecha final actividad;Date         ;OnValidate=BEGIN
                                                                IF "Fecha final actividad" <> xRec."Fecha final actividad" THEN BEGIN
                                                                  IF "Fecha final actividad" < "Fecha compra" THEN
                                                                    ERROR(err2);
                                                                  IF "Fecha final actividad" > "Fecha venta" THEN
                                                                    ERROR(err3);
                                                                  IF "Fecha final actividad" <> 0D THEN
                                                                    Bloqueado := TRUE
                                                                  ELSE
                                                                    Bloqueado := FALSE;
                                                                END;
                                                              END;

                                                   CaptionML=ESP=Fecha final actividad }
    { 88  ;   ;Cantidad Facturada Prod;Decimal    ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Produccion Ingreso"."Importe sin impuesto DL" WHERE (Vehiculo=FIELD(Matricula),
                                                                                                                         Fecha=FIELD(Filtro Fecha),
                                                                                                                         Tipo linea=FIELD(Filtro Tipo Linea),
                                                                                                                         Tipo elemento=FIELD(Filtro Tipo elemento),
                                                                                                                         Tipo servicio=FIELD(Filtro Servicio),
                                                                                                                         Codigo servicio=FIELD(Filtro Codigo Servicio),
                                                                                                                         Garaje=FIELD(Filtro Garaje Resultados)));
                                                   CaptionML=ESP=Cantidad Facturada;
                                                   Description=Campo calculado sobre Produccion Ingreso;
                                                   Editable=No }
    { 89  ;   ;N§ Viajes           ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count(Parte WHERE (Confirmado=CONST(Yes),
                                                                                  Vehiculo=FIELD(Matricula),
                                                                                  Fecha facturacion=FIELD(Filtro Fecha),
                                                                                  Tipo Servicio=FIELD(Filtro Servicio),
                                                                                  Codigo Servicio=FIELD(Filtro Codigo Servicio),
                                                                                  Garaje=FIELD(Filtro Garaje Resultados)));
                                                   CaptionML=ESP=N§ Viajes;
                                                   Description=Campo calculado para el n£mero de viajes.;
                                                   Editable=No }
    { 90  ;   ;AD Transportados    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum(Parte."Adultos trans. soporte" WHERE (Confirmado=CONST(Yes),
                                                                                                         Vehiculo=FIELD(Matricula),
                                                                                                         Fecha facturacion=FIELD(Filtro Fecha),
                                                                                                         Tipo Servicio=FIELD(Filtro Servicio),
                                                                                                         Codigo Servicio=FIELD(Filtro Codigo Servicio),
                                                                                                         Garaje=FIELD(Filtro Garaje Resultados)));
                                                   CaptionML=ESP=AD Transportados;
                                                   DecimalPlaces=0:2;
                                                   Description=Campo calculado para los Adultos transportados;
                                                   Editable=No }
    { 91  ;   ;NI Transportados    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum(Parte."Ni¤os trans. soporte" WHERE (Confirmado=CONST(Yes),
                                                                                                       Vehiculo=FIELD(Matricula),
                                                                                                       Fecha facturacion=FIELD(Filtro Fecha),
                                                                                                       Tipo Servicio=FIELD(Filtro Servicio),
                                                                                                       Codigo Servicio=FIELD(Filtro Codigo Servicio),
                                                                                                       Garaje=FIELD(Filtro Garaje Resultados)));
                                                   CaptionML=ESP=NI Transportados;
                                                   DecimalPlaces=0:2;
                                                   Description=Campo calculado para los Ni¤os transportados;
                                                   Editable=No }
    { 92  ;   ;Filtro Servicio     ;Code10        ;FieldClass=FlowFilter;
                                                   TableRelation="Tipo Servicio".Codigo;
                                                   CaptionML=ESP=Filtro Servicio }
    { 93  ;   ;Cantidad Facturada  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum(Coste-Ingreso."Importe sin impuesto DL" WHERE (Vehiculo=FIELD(Matricula),
                                                                                                                  Fecha=FIELD(Filtro Fecha),
                                                                                                                  Tipo linea=FIELD(Filtro Tipo Linea),
                                                                                                                  Tipo elemento=FIELD(Filtro Tipo elemento),
                                                                                                                  Tipo servicio=FIELD(Filtro Servicio),
                                                                                                                  Codigo servicio=FIELD(Filtro Codigo Servicio),
                                                                                                                  Garaje=FIELD(Filtro Garaje Resultados)));
                                                   CaptionML=ESP=Cantidad Facturada;
                                                   Description=Campo calculado sobre Coste-Ingreso;
                                                   Editable=No }
    { 94  ;   ;Pax Facturados      ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum(Coste-Ingreso."Pax Facturados" WHERE (Vehiculo=FIELD(Matricula),
                                                                                                         Fecha=FIELD(Filtro Fecha),
                                                                                                         Tipo linea=FILTER(Base|Manual),
                                                                                                         Tipo servicio=FIELD(Filtro Servicio),
                                                                                                         Codigo servicio=FIELD(Filtro Codigo Servicio),
                                                                                                         Garaje=FIELD(Filtro Garaje Resultados)));
                                                   CaptionML=ESP=Pax Facturados;
                                                   DecimalPlaces=0:2;
                                                   Description=Campo calculado sobre Coste-Ingreso;
                                                   Editable=No }
    { 95  ;   ;Pax Facturados Prod ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Produccion Ingreso"."Pax Facturados" WHERE (Vehiculo=FIELD(Matricula),
                                                                                                                Fecha=FIELD(Filtro Fecha),
                                                                                                                Tipo linea=FILTER(Base|Manual),
                                                                                                                Tipo servicio=FIELD(Filtro Servicio),
                                                                                                                Codigo servicio=FIELD(Filtro Codigo Servicio),
                                                                                                                Garaje=FIELD(Filtro Garaje Resultados)));
                                                   CaptionML=ESP=Pax Facturados;
                                                   DecimalPlaces=0:2;
                                                   Description=Campo calculado sobre Produccion Ingreso;
                                                   Editable=No }
    { 96  ;   ;Coste DL            ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Produccion Coste"."Importe sin impuesto DL" WHERE (Vehiculo=FIELD(Matricula),
                                                                                                                       Fecha=FIELD(Filtro Fecha),
                                                                                                                       Tipo linea=FIELD(Filtro Tipo Linea),
                                                                                                                       Tipo elemento=FIELD(Filtro Tipo elemento),
                                                                                                                       Tipo servicio=FIELD(Filtro Servicio),
                                                                                                                       Codigo servicio=FIELD(Filtro Codigo Servicio),
                                                                                                                       Garaje=FIELD(Filtro Garaje Resultados)));
                                                   CaptionML=ESP=Coste DL;
                                                   Description=Campo calculado sobre Produccion Coste;
                                                   AutoFormatType=1 }
    { 97  ;   ;N§ Incidencias      ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count(Incidencia WHERE (Matricula=FIELD(Matricula),
                                                                                       Fecha Incidencia=FIELD(Filtro Fecha),
                                                                                       Garaje=FIELD(Filtro Garaje Resultados)));
                                                   CaptionML=ESP=N§ Incidencias;
                                                   Description=Campo calculado sobre Incidencias }
    { 98  ;   ;N§ Accidentes       ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count(Accidente WHERE (Matricula=FIELD(Matricula),
                                                                                      Fecha=FIELD(Filtro Fecha),
                                                                                      Garaje=FIELD(Filtro Garaje Resultados)));
                                                   CaptionML=ESP=N§ Accidentes;
                                                   Description=Campo calculado sobre Accidentes }
    { 99  ;   ;Filtro Codigo Servicio;Code10      ;FieldClass=FlowFilter;
                                                   CaptionML=ESP=Filtro Codigo Servicio;
                                                   Description=FlowFilter para el c¢digo de servicio }
    { 100 ;   ;Filtro Garaje Resultados;Code10    ;FieldClass=FlowFilter;
                                                   CaptionML=ESP=Filtro Garaje Resultados;
                                                   Description=FlowFilter para considerar el garaje en el que se ha efectuado el parte,ingreso,coste }
    { 102 ;   ;Imagen              ;BLOB          ;CaptionML=ESP=Imagen }
    { 103 ;   ;Filtro Tipo Linea   ;Option        ;FieldClass=FlowFilter;
                                                   CaptionML=ESP=Filtro Tipo Linea;
                                                   OptionCaptionML=ESP=Base,Suplemento,Manual,Extra,Ajuste;
                                                   OptionString=Base,Suplemento,Manual,Extra,Ajuste;
                                                   Description=FlowFilter para no considerar suplementos,extras,... }
    { 104 ;   ;Filtro Tipo elemento;Code10        ;FieldClass=FlowFilter;
                                                   CaptionML=ESP=Filtro Tipo elemento }
    { 105 ;   ;Bloqueado           ;Boolean       ;OnValidate=BEGIN
                                                                IF "Fecha final actividad" <> 0D THEN
                                                                  ERROR(final_actividad);
                                                              END;

                                                   CaptionML=ESP=Bloqueado }
    { 106 ;   ;Gastos Taller DL    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Piezas x Incidencia".Importe WHERE (Matricula=FIELD(Matricula),
                                                                                                        Fecha=FIELD(Filtro Fecha)));
                                                   CaptionML=ESP=Gastos Taller DL;
                                                   Description=Campo calculado sobre Piezas x Incidencia;
                                                   Editable=No }
    { 107 ;   ;Tiene Incidencias Abiertas;Boolean ;FieldClass=FlowField;
                                                   CalcFormula=Exist(Incidencia WHERE (Matricula=FIELD(Matricula),
                                                                                       Fecha inicio reparacion=FIELD(Filtro Fecha Inicio),
                                                                                       Fecha final reparacion=FIELD(Filtro Fecha Fin),
                                                                                       Garaje=FIELD(Filtro Garaje Resultados),
                                                                                       Tipo=CONST(Incidencia)));
                                                   CaptionML=ESP=Tiene Incidencias Abiertas;
                                                   Description=Campo calculado sobre Incidencias;
                                                   Editable=No }
    { 108 ;   ;Filtro Fecha Inicio ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=ESP=Filtro Fecha Inicio }
    { 109 ;   ;Filtro Fecha Fin    ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=ESP=Filtro Fecha Fin }
    { 110 ;   ;Fecha revision tacografo;Date      ;OnValidate=BEGIN
                                                                IF "Fecha revision tacografo" <= TODAY THEN
                                                                  ERROR(revision_tacografo_posterior);
                                                              END;

                                                   CaptionML=ESP=Fecha revision tacografo }
    { 111 ;   ;N§ Tarjeta Transporte;Code20       ;CaptionML=ESP=N§ Tarjeta Transporte }
    { 112 ;   ;Actividad           ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist(Parte WHERE (Vehiculo=FIELD(Matricula),
                                                                                  Fecha=FIELD(Filtro Fecha)));
                                                   CaptionML=ESP=Actividad;
                                                   Editable=No }
    { 113 ;   ;Incidencias para informe;Code10    ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Incidencia."Parte Incidencia" WHERE (Matricula=FIELD(Matricula),
                                                                                                           Fecha inicio reparacion=FIELD(Filtro Fecha Inicio),
                                                                                                           Fecha final reparacion=FIELD(Filtro Fecha Fin)));
                                                   CaptionML=ESP=Incidencias para informe;
                                                   Editable=No }
    { 114 ;   ;No Imprimir estadisticas;Boolean   ;CaptionML=ESP=No Imprimir estadisticas }
    { 115 ;   ;Conductor habitual  ;Code10        ;TableRelation=Conductor.Conductor;
                                                   CaptionML=ESP=Conductor habitual;
                                                   Description=FK Conductor }
    { 117 ;   ;Importe seguro      ;Decimal       ;CaptionML=ESP=Importe seguro;
                                                   AutoFormatType=1 }
    { 118 ;   ;Vendido a           ;Text60        ;CaptionML=ESP=Vendido a }
    { 119 ;   ;Pintura agencia     ;Code10        ;TableRelation=TTOO.Codigo;
                                                   CaptionML=ESP=Pintura agencia;
                                                   Description=FK Touroperador }
    { 121 ;   ;Adaptado minusvalidos;Boolean      ;CaptionML=ESP=Adaptado minusvalidos }
    { 123 ;   ;Transporte escolar  ;Boolean       ;CaptionML=ESP=Transporte escolar }
    { 124 ;   ;Coste estandar x km ;Decimal       ;CaptionML=ESP=Coste estandar x km }
    { 125 ;   ;Campa               ;Code10        ;TableRelation=Campas.Codigo;
                                                   CaptionML=ESP=Campa }
    { 126 ;   ;Imagen Vehiculo     ;Code10        ;TableRelation="Imagen Autocar".Codigo;
                                                   CaptionML=ESP=Imagen Vehiculo;
                                                   Description=FK Imagen Autocar }
    { 127 ;   ;Consumo IBZ         ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum(Consumo.Litros WHERE (Matricula=FIELD(Matricula),
                                                                                         Fecha=FIELD(Filtro Fecha),
                                                                                         Garaje=FIELD(Filtro Garaje Resultados)));
                                                   CaptionML=ESP=Consumo IBZ;
                                                   Description=Calculado sobre Consumos para IBIZATOURS;
                                                   Editable=No }
    { 128 ;   ;Kilometros IBZ      ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum(Consumo."Kilometros realizados" WHERE (Matricula=FIELD(Matricula),
                                                                                                          Fecha=FIELD(Filtro Fecha),
                                                                                                          Garaje=FIELD(Filtro Garaje Resultados)));
                                                   CaptionML=ESP=Kilometros IBZ;
                                                   Description=Calculado sobre Consumos para IBIZATOURS;
                                                   Editable=No }
    { 129 ;   ;Tipo de combustible ;Code10        ;TableRelation=Table7010442.Field1;
                                                   CaptionML=ESP=Tipo de combustible;
                                                   Description="Tipo combustible".Codigo }
    { 130 ;   ;Vehiculo especial   ;Boolean       ;CaptionML=ESP=Vehiculo especial;
                                                   Description=para exportar servicios especiales para IBIZATOURS }
    { 131 ;   ;Carroceria          ;Text30        ;CaptionML=ESP=Carroceria }
  }
  KEYS
  {
    {    ;Matricula                               ;Clustered=Yes }
    { No ;Fecha proxima ITV                        }
    {    ;Garaje,Matricula                         }
    {    ;Tipo vehiculo                            }
    {    ;Garaje,Plazas,Numero                     }
    {    ;Garaje,Numero                            }
    {    ;Tipo vehiculo,Vehiculo propio            }
    {    ;Numero                                   }
    {    ;Vehiculo propio,Bloqueado,Fecha venta,Tipo vehiculo }
    {    ;Vehiculo propio,Tipo vehiculo,Numero,Fecha venta }
    {    ;Vehiculo propio,No Imprimir estadisticas }
    {    ;Fecha inicio actividad                   }
    {    ;Empresa propietaria                      }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text50000@1103355002 : TextConst 'ESP=+%1M-%2D';
      err1@1100244000 : TextConst 'ESP=Recuerde indicar Garaje en el vehiculo.';
      err2@1100244001 : TextConst 'ESP=No se puede indicar el final de actividad antes de comprar el vehiculo';
      err3@1100244002 : TextConst 'ESP=No se puede indicar el final de actividad despues de vender el vehiculo.';
      err4@1100244003 : TextConst 'ESP=No se puede borrar un vehiculo que tiene partes asignados.';
      final_actividad@1100244004 : TextConst 'ESP=Este atributo no se puede modificar cuando la fecha de final de actividad esta rellenada.';
      no_compra_posterior_actividad@1100244005 : TextConst 'ESP=No se puede indicar una fecha de compra posterior a la fecha de inicio de actividad.';
      proxima_ITV_posterior@1100244006 : TextConst 'ESP=La fecha de proxima ITV debe ser posterior al dia de hoy';
      expiracion_seguro_posterior@1100244007 : TextConst 'ESP=La fecha de expiracion del seguro debe ser posterior al dia de hoy';
      revision_tacografo_posterior@1100244008 : TextConst 'ESP=La fecha de proxima revision del tacografo debe ser posterior al dia de hoy';
      no_vender_antes_comprar@1100244009 : TextConst 'ESP=No se puede vender un vehiculo antes de comprarlo.';
      Text001@1100244010 : TextConst 'ESP=El vehiculo %1 No puede marcarse como agregado ya que es Propio';
      wVentana@1103350000 : Dialog;
      Text002@1103350001 : TextConst 'ESP=Desea Inicializar el vehiculo %1 con un registro de %2 Km con Fecha %3';
      Text003@1103350002 : TextConst 'ESP=Indique Kilometros #1########\Fecha              #2########';
      Text004@1103350003 : TextConst 'ESP=El vehiculo %1 ya tiene un registro de combustible el d¡a %2.¨Desea Continuar?';
      Text006@1103350004 : TextConst 'ESP=No puede insertarse un registro con %1 Km.';
      Text007@1103350005 : TextConst 'ESP=El vehiculo %1 No es Propio';
      Text008@1103350006 : TextConst 'ESP=El vehiculo %1 ha sido vendido';
      Text009@1103350007 : TextConst 'ESP=Vehiculo Inicializado';
      Text010@1103350008 : TextConst 'ESP=No se va a insertar el registro ya que no se ha modificado el kilometraje';
      Text012@1103350009 : TextConst 'ESP=Debe de indicarse una fecha';
      Text013@1103350010 : TextConst 'ESP=El vehiculo %1 tiene que pasar la revisi¢n %2 en %3 dias';
      Text014@1103350011 : TextConst 'ESP=El vehiculo %1 Tenia que pasar la revisi¢n %2 hace %3 dias';
      rPar@1103350012 : Record 7010311;
      rVeh@1100253000 : Record 7010346;
      Text015@1100253001 : TextConst 'ESP=Ya existe el vehiculo %1 con el numero que esta intentando indicar para este vehiculo.';
      Text016@1103355000 : TextConst 'ESP=El vehiculo %1 ya tiene un registro de combustible el d¡a %2.¨Desea Modificarlo?';
      Text017@1103355001 : TextConst 'ESP=No existe el usuario %1.';

    PROCEDURE IniciarVehiculo@1103350000();
    VAR
      lrReg@1103350000 : Record 7035342;
      lrReg2@1103350003 : Record 7035342;
      lwKm@1103350001 : Integer;
      lwKmAnt@1103350004 : Integer;
      lwFecha@1103350002 : Date;
      lwOk@1103355000 : Boolean;
      lwModf@1103355001 : Boolean;
    BEGIN
      // IniciarVehiculo
      // Esta funci¢n inserta un registro con fecha ultimo dia a¤o anterior para que veh¡culos
      // traspasados no ense¤en un kiometrage falso.


      IF NOT "Vehiculo propio" THEN
        ERROR(Text007, Numero);

      IF "Fecha venta" <> 0D THEN
        ERROR(Text008, Numero);

      // lwFecha:= DMY2DATE(31,12,DATE2DMY(TODAY,3)-1); // El ultimo d¡a del a¤o pasado

      // Comprobamos que no tenga ya un registro ese d¡a
      CLEAR(lrReg);
      lrReg.SETRANGE(Dia     , lwFecha);
      lrReg.SETRANGE(Vehiculo, Numero);
      lrReg.SETRANGE(Anulado , FALSE);
      IF lrReg.FINDFIRST THEN BEGIN
        lwKmAnt := lrReg.Kms;
        lwKm:= lwKmAnt;
        IF NOT CONFIRM(Text004,FALSE,Numero,lwFecha) THEN
          EXIT;
      END;

      wVentana.OPEN(Text003);
      wVentana.UPDATE(1,lwKmAnt);
      wVentana.UPDATE(2,lwFecha);
      wVentana.INPUT(1,lwKm);
      wVentana.INPUT(2,lwFecha);
      wVentana.CLOSE;

      IF lwKmAnt = lwKm THEN
        ERROR(Text010);

      IF lwKm <= 0 THEN
        ERROR(Text006,lwKm);

      IF lwFecha=0D THEN
        ERROR(Text012);

      // Comprobamos que no tenga ya un registro ese d¡a
      CLEAR(lrReg);
      CLEAR(lwModf);
      lrReg.SETRANGE(Dia     , lwFecha);
      lrReg.SETRANGE(Vehiculo, Numero);
      lrReg.SETRANGE(Anulado , FALSE);
      IF lrReg.FINDFIRST THEN
        lwModf := CONFIRM(Text016,FALSE,Numero,lwFecha);

      IF NOT CONFIRM(Text002,TRUE,Numero,lwKm,lwFecha) THEN
        EXIT;

      IF NOT lwModf THEN BEGIN
        CLEAR(lrReg);
        lrReg2.RESET;
        lrReg2.SETCURRENTKEY(id);
        lrReg2.ASCENDING(FALSE);
        IF lrReg2.FINDFIRST THEN
          lrReg.id := lrReg2.id + 1
        ELSE
          lrReg.id := 1;

        lrReg."Usuario introduccion" := USERID;
        lrReg."Fecha introduccion"   := TODAY;

        lrReg.Dia                 := lwFecha;
        lrReg.Vehiculo            := Numero;
        lrReg.Matricula           := Matricula;
        lrReg.Garaje              := Garaje;
      END;
      lrReg.Kms                 := lwKm;
      IF lwModf THEN BEGIN
        lrReg.comprkmsE(FALSE);
        lrReg.MODIFY;
      END
      ELSE BEGIN
        lrReg."Kilometros Reales" := lwKm;
        lrReg."Kms realizados"    := 0;
        lrReg."No Estadisticas"   := TRUE;
        lrReg.INSERT;
      END;


      // JPT 20/09/04 Buscamos si existe un registro posterior a ese para cambiarle el campo "Kms realizados"
      CLEAR(lrReg2);
      lrReg2.SETCURRENTKEY(Matricula,Dia,Anulado);
      lrReg2.SETRANGE(Matricula, lrReg.Matricula);
      lrReg2.SETFILTER(Dia,'>=%1',lrReg.Dia);
      lrReg2.SETRANGE(Anulado,FALSE);
      lrReg2.SETFILTER(id, '<>%1' ,lrReg.id);
      IF lrReg2.FINDSET(TRUE) THEN BEGIN
        {
        IF NOT lrReg2."Rotura Tacografo" THEN
          lrReg2."Kms realizados" := lrReg2.Kms - lrReg.Kms;
        }
        REPEAT
          lrReg2.comprkmsE(FALSE); // No generamos errores
          lrReg2.MODIFY;
        UNTIL lrReg2.NEXT=0;
      END;

      MESSAGE(Text009);
    END;

    PROCEDURE AvisoRevision@1103350001();
    VAR
      lrRevVeh@1103350000 : Record 7010395;
      lrTipInc@1103350001 : Record 7035343;
      lfFormRev@1103350002 : Form 7035319;
      lwFecha@1103350003 : ARRAY [2] OF Date;
      lwd¡asReales@1103350004 : Integer;
      lwd¡as@1103350005 : Integer;
    BEGIN
      // AvisoRevision
      // Comprueba si tiene alguna revisi¢n pendiente

      lrRevVeh.RESET;
      CLEAR(lrTipInc);
      lrRevVeh.SETRANGE(Matricula,Matricula);
      IF lrRevVeh.FINDFIRST THEN BEGIN
        IF lrTipInc.GET(lrRevVeh.Revision) THEN BEGIN
          CLEAR(lwFecha);
          // En principio solo tenemos en cuenta las de periodicidad temporal
          IF (lrTipInc."Meses Control" <> 0) AND (lrTipInc."Dias Aviso Revision" <>0) THEN BEGIN
            lwFecha[1]:= lfFormRev.BuscaFechaUltimaRevision(Matricula,lrTipInc.Codigo);
            IF lwFecha[1]=0D THEN BEGIN
              TESTFIELD("Fecha inicio actividad");
              lwFecha[1]:= "Fecha inicio actividad";
            END;
            lwFecha[2]:= CALCDATE(STRSUBSTNO(Text50000,lrTipInc."Meses Control",lrTipInc."Dias Aviso Revision"),lwFecha[1]);
            IF lwFecha[2] <= TODAY THEN BEGIN
              lwd¡as:= lwFecha[2] - TODAY;
              lwd¡asReales := lwd¡as + lrTipInc."Dias Aviso Revision";
              IF lwd¡asReales >= 0 THEN
                MESSAGE(Text013,Numero,lrTipInc.Descripcion,lwd¡asReales)
              ELSE
                MESSAGE(Text014,Numero,lrTipInc.Descripcion,ABS(lwd¡asReales));
            END;
          END;
        END;
      END;
    END;

    PROCEDURE GetImpEstadis@1103350002(pwFechaImpresion@1103350000 : Date) : Boolean;
    VAR
      lwOK@1103350001 : Boolean;
    BEGIN
      // GetImpEstadis
      // JPT 03/01/05 Determina si dejar imprimir en estadistica o no

      rPar.FINDFIRST;
      IF pwFechaImpresion = 0D THEN
        pwFechaImpresion := TODAY;

      lwOK := NOT "No Imprimir estadisticas";
      lwOK := lwOK AND (rPar."Vehiculos Vendidos en Estadist" OR ("Fecha venta"=0D) OR ("Fecha venta"> pwFechaImpresion));
      EXIT(lwOK);
    END;

    PROCEDURE BuscaIncidencia@1103350003(pwFechaInicio@1103350001 : Date;pwFechaFin@1103350002 : Date) : Code[10];
    VAR
      lrInc@1103350003 : Record 7010348;
    BEGIN
      // BuscaParteIncidencia
      // Busca el texto de la primera incidencia entre fechas seg£n el orden de Prioridad Incidencia

      CLEAR(lrInc);
      lrInc.SETCURRENTKEY(Matricula,"Prioridad incidencia","Fecha inicio reparacion");
      lrInc.SETRANGE(Matricula,Matricula);
      lrInc.SETFILTER("Fecha inicio reparacion"     , '<=%1'   , pwFechaInicio);
      lrInc.SETFILTER(lrInc."Fecha final reparacion", '>=%1|%2', pwFechaFin,0D);
      IF lrInc.FINDFIRST THEN
        EXIT(lrInc."Tipo Incidencia");
    END;

    PROCEDURE TotalCantidadFacturada@1103355000() : Decimal;
    BEGIN
      // TotalCantidadFacturada
      // Devuelve lo producido + lo facturado

      CALCFIELDS("Cantidad Facturada" ,"Cantidad Facturada Prod");
      EXIT("Cantidad Facturada" + "Cantidad Facturada Prod");
    END;

    PROCEDURE TotalPaxFacturado@1103355002() : Decimal;
    BEGIN
      // TotalPaxFacturado
      // Devuelve lo producido + lo facturado

      CALCFIELDS("Pax Facturados", "Pax Facturados Prod");
      EXIT("Pax Facturados" + "Pax Facturados Prod");
    END;

    PROCEDURE FiltrarGarajeUsuario@1103355001();
    VAR
      lrParGenerales@1103355000 : Record 7010311;
      lrUsuario@1103355001 : Record 7010420;
    BEGIN
      // FiltrarGarajeUsuario.
      // Filtramos los partes por garaje dependiendo de la configuraci¢n del usuario.

      lrParGenerales.FINDFIRST;

      IF NOT lrUsuario.GET(USERID) THEN
        ERROR(Text017, USERID);

      SETCURRENTKEY(Garaje, Matricula);

      IF (lrUsuario."Garaje de trabajo" <> '') AND (lrUsuario."Garaje de trabajo" <> lrParGenerales."Todos los garajes") THEN BEGIN
        FILTERGROUP(2);
        SETRANGE(Garaje, lrUsuario."Garaje de trabajo");
        FILTERGROUP(0);
      END;
    END;

    BEGIN
    END.
  }
}
