OBJECT Table 7009822 Conf. Colores x Rango
{
  OBJECT-PROPERTIES
  {
    Date=05/05/14;
    Time=21:06:49;
    Modified=Yes;
    Version List=AIC2009;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               CLEAR(rConf);
               IF rConf.FINDLAST THEN
                 No:= rConf.No + 1
               ELSE
                 No:= 1;
             END;

    CaptionML=[ENU=Range x Colors Conf.;
               ESP=Conf. Colores x Rango];
  }
  FIELDS
  {
    { 1   ;   ;No                  ;Integer       ;CaptionML=[ENU=No;
                                                              ESP=No];
                                                   Editable=No }
    { 2   ;   ;Rango Desde         ;Decimal       ;OnValidate=BEGIN
                                                                Comprueba;
                                                              END;

                                                   CaptionML=[ENU=Range From;
                                                              ESP=Rango desde];
                                                   DecimalPlaces=0:2 }
    { 3   ;   ;Rango Hasta         ;Decimal       ;OnValidate=BEGIN
                                                                Comprueba;
                                                              END;

                                                   CaptionML=[ENU=Range To;
                                                              ESP=Rango hasta];
                                                   DecimalPlaces=0:2 }
    { 4   ;   ;Codigo Color        ;Option        ;OnValidate=BEGIN
                                                                CASE "Codigo Color" OF
                                                                  "Codigo Color"::Negro  : Color :=1;
                                                                  "Codigo Color"::Rojo   : Color :=255;
                                                                  "Codigo Color"::Verde  : Color :=45824;
                                                                  "Codigo Color"::Azul   : Color :=16711680;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Color code;
                                                              ESP=Codigo Color];
                                                   OptionCaptionML=[ENU=,Black,Red,Green,Blue;
                                                                    ESP=,Negro,Rojo,Verde,Azul];
                                                   OptionString=,Negro,Rojo,Verde,Azul;
                                                   BlankZero=Yes }
    { 5   ;   ;Color               ;Integer       ;OnValidate=BEGIN
                                                                CASE Color OF
                                                                  0,1      : BEGIN
                                                                               Color :=1;
                                                                               "Codigo Color":= "Codigo Color"::Negro;
                                                                             END;
                                                                  255      : "Codigo Color":= "Codigo Color"::Rojo;
                                                                  45824    : "Codigo Color":= "Codigo Color"::Verde;
                                                                  16711680 : "Codigo Color":= "Codigo Color"::Azul;
                                                                  ELSE     "Codigo Color":= -1;  // El -1 el codigo personalizado
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Color;
                                                              ESP=Color] }
    { 10  ;   ;Tipo                ;Option        ;OnValidate=BEGIN
                                                                Comprueba;
                                                              END;

                                                   CaptionML=[ENU=Type;
                                                              ESP=Tipo];
                                                   OptionCaptionML=[ENU=Transfer,Excursions;
                                                                    ESP=Transfer,Excursiones];
                                                   OptionString=Transfer,Excursiones }
    { 20  ;   ;Descripcion         ;Text250       ;CaptionML=[ENU=Description;
                                                              ESP=Descripcion] }
  }
  KEYS
  {
    {    ;No                                      ;Clustered=Yes }
    {    ;Rango Desde,Rango Hasta,Tipo            ;KeyGroups=RENUMERING }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1103355002 : TextConst 'ENU=Microsoft Common Dialog Control, version 6.0;ESP=Microsoft Common Dialog Control, version 6.0';
      Text001@1103355003 : TextConst 'ENU=Range from cannot be higher than Range to;ESP=Rango Desde no puede ser superior a Rango Hasta';
      Text002@1103355004 : TextConst 'ENU=Ranges overlap has occurred;ESP=Se ha producido un solapamiento de rangos';
      rConf@1103355000 : Record 7009822;
      wWinCol@1103355001 : OCX "{F9043C85-F6F2-101A-A3C9-08002B2F49FB}:'Microsoft Common Dialog Control, version 6.0'";

    PROCEDURE Comprueba@1();
    BEGIN
      // Comprueba

      IF ("Rango Desde" > "Rango Hasta") AND ("Rango Hasta" <> 0) THEN
        ERROR(Text001);

      IF ("Rango Desde" = 0) AND ("Rango Hasta" = 0) THEN //+$001
        EXIT;

      // Comprueba solapamiento
      CLEAR(rConf);
      rConf.SETCURRENTKEY("Rango Desde","Rango Hasta");
      rConf.SETFILTER(No           , '<>%1', No);
      rConf.SETRANGE(Tipo          , Tipo);
      rConf.SETFILTER("Rango Desde", '<=%1', "Rango Hasta");
      rConf.SETFILTER("Rango Hasta", '>=%1', "Rango Desde");
      IF rConf.FINDFIRST THEN
        ERROR(Text002);
    END;

    PROCEDURE GetColor@9(VAR pwValor@1103355000 : Decimal;pwTipo@1103355001 : 'Transfer,Excursiones') : Integer;
    BEGIN
      // GetColor
      // Devuelve el numero de color del valor pasado como parametro

      CLEAR(rConf);
      rConf.SETRANGE(Tipo,pwTipo);
      rConf.SETCURRENTKEY("Rango Desde","Rango Hasta");
      rConf.SETFILTER("Rango Desde",'<=%1', pwValor);
      rConf.SETFILTER("Rango Hasta",'>=%1', pwValor);
      IF rConf.FIND('-') THEN
        EXIT(rConf.Color);
    END;

    PROCEDURE GetTexto@3(VAR pwValor@1103355000 : Decimal;pwTipo@1103355001 : 'Transfer,Excursiones') : Text[250];
    BEGIN
      // GetTexto
      // Devuelve la descripcion del rango del valor pasado como parametro

      CLEAR(rConf);
      rConf.SETRANGE(Tipo,pwTipo);
      rConf.SETCURRENTKEY("Rango Desde","Rango Hasta");
      rConf.SETFILTER("Rango Desde",'<=%1', pwValor);
      rConf.SETFILTER("Rango Hasta",'>=%1', pwValor);
      IF rConf.FIND('-') THEN
        EXIT(rConf.Descripcion);
    END;

    PROCEDURE PersonalizaColor@2();
    BEGIN
      // PersonalizaColor
      // Guarda el color personalizado

      wWinCol.ShowOpen;
      //wWinCol.ShowColor;
      //MESSAGE(FORMAT(wWinCol.Action));
    END;

    BEGIN
    {
      $001 AJS 05052014 No hago la comprobacion si las dos partes del rango son cero
    }
    END.
  }
}
