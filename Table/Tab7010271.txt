OBJECT Table 7010271 Conversion API excursiones
{
  OBJECT-PROPERTIES
  {
    Date=30/10/14;
    Time=12:30:02;
    Modified=Yes;
    Version List=AIC2009;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               _InitRecord;

               _CheckDuplicada;
             END;

    OnModify=BEGIN
               _CheckDuplicada;
             END;

    OnDelete=BEGIN
               ERROR(Text001);
             END;

    CaptionML=[ENU=Excursions API conversion;
               ESP=Conversion API excursiones];
  }
  FIELDS
  {
    { 1   ;   ;ID                  ;Integer       ;AutoIncrement=Yes;
                                                   CaptionML=[ENU=ID;
                                                              ESP=ID] }
    { 3   ;   ;Tipo conversion     ;Option        ;CaptionML=[ENU=Conversion type;
                                                              ESP=Tipo conversion];
                                                   OptionCaptionML=[ENU=Excursion,Hotel;
                                                                    ESP=Excursion,Hotel];
                                                   OptionString=Excursion,Hotel }
    { 5   ;   ;Touroperador        ;Code10        ;TableRelation=TourOperador.TourOperador;
                                                   OnValidate=BEGIN
                                                                rTTOO.GET(Touroperador);
                                                                rTTOO.TESTFIELD(Bloqueado, FALSE);
                                                              END;

                                                   CaptionML=[ENU=Touroperator;
                                                              ESP=Touroperador];
                                                   NotBlank=Yes;
                                                   Description=TourOperador.TourOperador }
    { 7   ;   ;Codigo externo      ;Code20        ;OnValidate=BEGIN
                                                                TESTFIELD(Touroperador);
                                                              END;

                                                   CaptionML=[ENU=External code;
                                                              ESP=Codigo externo];
                                                   NotBlank=Yes }
    { 9   ;   ;Nombre externo      ;Text60        ;OnValidate=BEGIN
                                                                TESTFIELD(Touroperador);
                                                              END;

                                                   CaptionML=[ENU=External name;
                                                              ESP=Nombre externo] }
    { 11  ;   ;Codigo Atennea      ;Code20        ;TableRelation=IF (Tipo conversion=CONST(Excursion)) "Producto agencia".Codigo WHERE (Tipo Producto=CONST(Excursion),
                                                                                                                                        Caducado=CONST(No))
                                                                                                                                        ELSE IF (Tipo conversion=CONST(Hotel)) Hotel.Hotel WHERE (NoName=CONST(No),
                                                                                                                                                                                                  Hotel Ficticio=CONST(No));
                                                   OnValidate=BEGIN
                                                                "Nombre Atennea" := _GetNombreAtennea;
                                                              END;

                                                   CaptionML=[ENU=Atennea code;
                                                              ESP=Codigo Atennea];
                                                   NotBlank=Yes }
    { 13  ;   ;Nombre Atennea      ;Text50        ;Editable=No }
    { 15  ;   ;Fecha creacion      ;DateTime      ;CaptionML=[ENU=Creation date;
                                                              ESP=Fecha creacion];
                                                   Editable=No }
    { 17  ;   ;Usuario creacion    ;Text50        ;TableRelation=User."User ID";
                                                   CaptionML=[ENU=Creation user;
                                                              ESP=Usuario creacion];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;ID                                      ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      rTTOO@1000000000 : Record 7009717;
      Text001@1000000001 : TextConst 'ENU=You cannot delete records of this table.;ESP=No se pueden borrar registros de esta tabla.';
      Text002@1000000002 : TextConst 'ENU=This touroperator conversion code already exists.;ESP=Ya existe este codigo de conversion touroperador.';

    LOCAL PROCEDURE _GetNombreAtennea@1000000005() : Text[50];
    VAR
      lrExcursion@1000000000 : Record 7009710;
      lrHotel@1000000001 : Record 7009724;
    BEGIN
      // _GetNombreAtennea

      CASE "Tipo conversion" OF
        "Tipo conversion"::Excursion:
        BEGIN
          lrExcursion.GET("Codigo Atennea");
          EXIT(lrExcursion.Descripcion);
        END;
        "Tipo conversion"::Hotel:
        BEGIN
          lrHotel.GET("Codigo Atennea");
          EXIT(lrHotel.Nombre);
        END;
      END;
    END;

    LOCAL PROCEDURE _InitRecord@1000000000();
    BEGIN
      // _InitRecord

      "Fecha creacion"   := CURRENTDATETIME;
      "Usuario creacion" := USERID;
    END;

    LOCAL PROCEDURE _CheckDuplicada@1000000001();
    VAR
      lrConv@1000000000 : Record 7010271;
    BEGIN
      // _CheckDuplicada

      IF (Touroperador = '') OR ("Codigo externo" = '') THEN
        EXIT;

      lrConv.RESET;
      lrConv.SETFILTER(ID               , '<>%1', ID);
      lrConv.SETRANGE ("Tipo conversion", "Tipo conversion");
      lrConv.SETRANGE (Touroperador     , Touroperador);
      lrConv.SETRANGE ("Codigo externo" , "Codigo externo");
      IF NOT lrConv.ISEMPTY THEN
        ERROR(Text002);
    END;

    BEGIN
    END.
  }
}
