OBJECT Table 7010416 Condiciones Facturacion
{
  OBJECT-PROPERTIES
  {
    Date=16/10/09;
    Time=12:30:45;
    Version List=TRANSFER;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF "rCLI/TTOO".GET(Cliente,TTOO) THEN BEGIN
                 "Usuario Responsable" := "rCLI/TTOO".Gestor;
               END;
             END;

    OnDelete=VAR
               lrRangplz@1100244000 : Record 7010430;
               lrOpText@1100244001 : Record 7010428;
             BEGIN
               // Borramos todos los registros relacionados de rangos de plazs
               lrRangplz.RESET;
               lrRangplz.SETRANGE(Cliente              , Cliente);
               lrRangplz.SETRANGE(TTOO                 , TTOO);
               lrRangplz.SETRANGE("Tipo Servicio Fijo" , "Tipo Servicio Fijo");
               IF lrRangplz.FINDSET(TRUE) THEN
                 lrRangplz.DELETEALL(TRUE);

               // Tambien borramos las opciones de texto relacionadas
               lrOpText.RESET;
               lrOpText.RESET;
               lrOpText.SETRANGE(Cliente              , Cliente);
               lrOpText.SETRANGE(TTOO                 , TTOO);
               lrOpText.SETRANGE("Tipo Servicio Fijo" , "Tipo Servicio Fijo");
               IF lrOpText.FINDSET(TRUE) THEN
                 lrOpText.DELETEALL(TRUE);
             END;

    CaptionML=ESP=Condiciones Facturacion;
  }
  FIELDS
  {
    { 1   ;   ;Cliente             ;Code20        ;TableRelation=Customer.No.;
                                                   CaptionML=ESP=Cliente;
                                                   NotBlank=Yes;
                                                   Description=FK Cliente }
    { 3   ;   ;TTOO                ;Code10        ;TableRelation=TTOO.Codigo;
                                                   CaptionML=ESP=TTOO;
                                                   NotBlank=Yes;
                                                   Description=FK TTOO }
    { 4   ;   ;Tipo Servicio Fijo  ;Option        ;OnValidate=BEGIN
                                                                IF "Tipo Servicio Fijo" = "Tipo Servicio Fijo"::Excursion THEN
                                                                  "Mostrar Subtotal sin maletas":= FALSE;
                                                              END;

                                                   CaptionML=ESP=Tipo fijo;
                                                   OptionCaptionML=ESP=Excursion,Traslado;
                                                   OptionString=Excursion,Traslado }
    { 5   ;   ;Tipo Servicio       ;Code10        ;TableRelation="Tipo Servicio";
                                                   CaptionML=ESP=Tipo Servicio;
                                                   Description=FK Tipo Servicio }
    { 7   ;   ;Tipo prefactura     ;Option        ;CaptionML=ESP=Tipo prefactura;
                                                   OptionCaptionML=ESP=Sin resumen,Resumen x Codigo,Resumen x Zona,Resumen x Vuelo,Resumen x Dia-Codigo,Resumen x Zona-Detalle,Resumen x Zona Dia-Codigo,Texto alternativo,Resumen x Referencia;
                                                   OptionString=Sin resumen,Resumen x Codigo,Resumen x Zona,Resumen x Vuelo,Resumen x Dia-Codigo,Resumen x Zona-Detalle,Resumen x Zona Dia-Codigo,Texto alternativo,Resumen x Referencia }
    { 9   ;   ;Tipo factura        ;Option        ;CaptionML=ESP=Tipo factura;
                                                   OptionCaptionML=ESP=Sin resumen,Resumen x Codigo,Resumen x Zona,Resumen x Vuelo,Resumen x Dia-Codigo,Resumen x Zona-Detalle,Resumen x Zona Dia-Codigo,Texto alternativo,Resumen x Referencia;
                                                   OptionString=Sin resumen,Resumen x Codigo,Resumen x Zona,Resumen x Vuelo,Resumen x Dia-Codigo,Resumen x Zona-Detalle,Resumen x Zona Dia-Codigo,Texto alternativo,Resumen x Referencia }
    { 10  ;   ;Facturacion Automatica;Boolean     ;CaptionML=ESP=Facturacion Automatica;
                                                   Description=Indica si este Cliente/Agencia/Tipo servicio se tiene que facturar de manera manual o si debe ser tratado por el nuevo proceso de facturacion automatica }
    { 11  ;   ;Periodicidad        ;Option        ;CaptionML=ESP=Periodicidad;
                                                   OptionCaptionML=ESP=,Diaria,Semanal,Quincenal,Mensual;
                                                   OptionString=,Diaria,Semanal,Quincenal,Mensual;
                                                   BlankZero=Yes;
                                                   Description=Permite definir cada cuanto se le emite facturaci¢n automatica a ese determinado Cliente/Agencia/Tipo servicio }
    { 13  ;   ;Texto Registro      ;Text90        ;OnLookup=VAR
                                                              lrOpText@1100244000 : Record 7010428;
                                                            BEGIN
                                                              lrOpText.FILTERGROUP(2);
                                                              lrOpText.SETCURRENTKEY(Cliente,TTOO,"Tipo Servicio Fijo",Orden);
                                                              lrOpText.RESET;
                                                              lrOpText.SETRANGE(Cliente         , Cliente);
                                                              lrOpText.SETRANGE(TTOO            , TTOO);
                                                              lrOpText.SETRANGE("Tipo Servicio Fijo" , "Tipo Servicio Fijo");
                                                              lrOpText.FILTERGROUP(0);
                                                              FORM.RUN(0,lrOpText);
                                                            END;

                                                   CaptionML=ESP=Texto Registro;
                                                   Description=Permite definir cual va a ser el texto de registro para las facturas de este Cliente/Agencia/Tipo servicio, permitiendo incluir valores de campos en el mismo. }
    { 14  ;   ;Ref. Cliente        ;Option        ;CaptionML=ESP=Ref. Cliente;
                                                   OptionCaptionML=ESP=,Bono,Referencia,N§ Vuelo;
                                                   OptionString=,Bono,Referencia,N§ Vuelo;
                                                   BlankZero=Yes;
                                                   Description=Indica que campo  se va a imprimir en la columna Ref. cliente de la impresi¢n de la factura. }
    { 15  ;   ;Mostrar Paxes en Factura;Boolean   ;CaptionML=ESP=Mostrar Paxes en Factura;
                                                   Description=Permite seleccionar si en la impresi¢n de la factura se muestran los paxes del servicio. }
    { 16  ;   ;Contenido Columna Servicio;Option  ;CaptionML=ESP=Contenido Columna Servicio;
                                                   OptionCaptionML=ESP=Codigo Servicio,Zona,Codigo Servicio + Zona;
                                                   OptionString=Codigo Servicio,Zona,Codigo Servicio + Zona;
                                                   Description=Seleccionar los campos que se van a imprimir en la columna Servicio de la impresi¢n de la factura. }
    { 17  ;   ;Mostrar Precio en Factura;Boolean  ;CaptionML=ESP=Mostrar Precio en Factura;
                                                   Description=Permite seleccionar si en la impresi¢n de la factura se muestra el precio del servicio o unicamente el importe. }
    { 18  ;   ;Fac. por Zona Trabajo;Boolean      ;CaptionML=ESP=Fac. por Zona Trabajo }
    { 20  ;   ;Fac. por Rango Plazas;Boolean      ;OnLookup=VAR
                                                              lrRango@1100244000 : Record 7010430;
                                                            BEGIN

                                                              lrRango.RESET;
                                                              lrRango.FILTERGROUP(2);
                                                              lrRango.SETRANGE(Cliente             , Cliente);
                                                              lrRango.SETRANGE(TTOO                , TTOO);
                                                              lrRango.SETRANGE("Tipo Servicio Fijo", "Tipo Servicio Fijo");
                                                              lrRango.FILTERGROUP(0);
                                                              FORM.RUN(0,lrRango);
                                                            END;

                                                   CaptionML=ESP=Fac. por Rango Plazas }
    { 21  ;   ;Ultima Fecha Facturacion;Date      ;CaptionML=ESP=Ultima Fecha Facturacion }
    { 22  ;   ;Primer dia semana   ;Option        ;CaptionML=ESP=Primer dia semana;
                                                   OptionCaptionML=ESP=Lunes,Martes,Miercoles,Jueves,Viernes,Sabado,Domingo;
                                                   OptionString=Lunes,Martes,Miercoles,Jueves,Viernes,Sabado,Domingo;
                                                   Description=Ligado a periodicidad. Solo para tipo semanal }
    { 23  ;   ;Totalizar Transportados;Boolean    ;CaptionML=ESP=Totalizar Transportados;
                                                   Description=Introducir en factura total paxes transportados }
    { 24  ;   ;Indicar Ma¤ana/Tarde;Boolean       ;CaptionML=ESP=Indicar Ma¤ana/Tarde;
                                                   Description=En factura indicar si el parte ha empezado por la ma¤ana o por la tarde }
    { 25  ;   ;Mostrar TTOO en linea factura;Boolean;
                                                   CaptionML=ESP=Mostrar TTOO en linea factura;
                                                   Description=Indicar si hay que mostrar el codigo de touroperador en las lineas de factura cuando hay mas de un TTOO en la factura }
    { 26  ;   ;Modo Desglose Transportados;Option ;CaptionML=ESP=Modo Desglose Transportados;
                                                   OptionCaptionML=ESP=Sin desglose,Entradas/Salidas,Rango Precio;
                                                   OptionString=Sin desglose,Entradas/Salidas,Rango Precio }
    { 27  ;   ;Agrupacion por Detalle;Option      ;CaptionML=ESP=Agrupacion por Detalle;
                                                   OptionCaptionML=ESP=,Precio x Vehiculo,Precio x Pax,Ambos;
                                                   OptionString=Sin Agrupacion,Precio x Vehiculo,Precio x Pax,Ambos;
                                                   BlankZero=Yes }
    { 28  ;   ;Agrupar lineas x vuelo;Boolean     ;CaptionML=ESP=Agrupar lineas x vuelo;
                                                   Description=Indicar si en la factura deben agruparse las lineas de un mismo vuelo }
    { 29  ;   ;Usuario Responsable ;Code20        ;TableRelation=User."User ID";
                                                   CaptionML=ESP=Usuario Responsable;
                                                   Description=Se mantiene unicamente desde Cliente/TTOO;
                                                   Editable=No }
    { 50  ;   ;Mostrar Subtotal sin maletas;Boolean;
                                                   CaptionML=ESP=Mostrar Subtotal sin maletas;
                                                   Description=Indica si la factura debe de mostrar un subtotal antes de aplicar las maletas }
    { 51  ;   ;Mostrar Precios con Iva;Boolean    ;CaptionML=ESP=Mostrar Precios con Iva;
                                                   Description=En la impresi¢n de facturas Mostrar precios e importes con IVA }
    { 52  ;   ;Agrupr Ads/Nis mismo precio;Boolean;CaptionML=ESP=Agrupr Ads/Nis mismo precio;
                                                   Description=En la facturacion agrupar las lineas de adultos y ni¤os que tengan el mismo precio }
  }
  KEYS
  {
    {    ;Cliente,TTOO,Tipo Servicio Fijo         ;Clustered=Yes }
    {    ;Cliente,TTOO,Tipo Servicio               }
    {    ;Facturacion Automatica,Cliente,TTOO,Tipo Servicio Fijo,Usuario Responsable }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text50000@1103355000 : TextConst 'ESP=+1S';
      Text50001@1103355001 : TextConst 'ESP=-1S';
      Text50002@1103355002 : TextConst 'ESP=+1M';
      Text50003@1103355003 : TextConst 'ESP=-1D';
      "rCLI/TTOO"@1103350000 : Record 7010313;

    PROCEDURE FechaFinPeriodo@1100244000(pwFecha@1100244000 : Date;pwAdelante@1100244002 : Boolean) : Date;
    VAR
      lwFecha@1100244001 : Date;
    BEGIN
      // FechaFinPeriodo

      // INPUT
      //   pwFecha --> Fecha de referencia
      //   pwAdelante
      //      TRUE  --> Devuelve el ultimo dia del periodo a partir de la fecha referencia
      //      FALSE --> Devuelve el primer dia del periodo

      // Si no se ha iniciado el campo Periodicidad devolvera una fecha indeterminada

      // El periodo quincenal y mensual lo busca por periodos naturales

      CLEAR(lwFecha);
      IF pwAdelante THEN
        CASE Periodicidad OF
          0: lwFecha := 0D;
          Periodicidad::Diaria:  lwFecha := pwFecha;
          Periodicidad::Semanal:
          BEGIN
            lwFecha:= DWY2DATE("Primer dia semana" + 1, DATE2DWY(pwFecha, 2), DATE2DWY(pwFecha, 3)) - 1;
            IF DATE2DWY(pwFecha, 1) > "Primer dia semana" THEN
              lwFecha := CALCDATE(Text50000, lwFecha);
          END;

          Periodicidad::Quincenal:
          BEGIN
            IF DATE2DMY(pwFecha, 1) <= 15 THEN
              lwFecha := DMY2DATE(15, DATE2DMY(pwFecha, 2), DATE2DMY(pwFecha, 3))
            ELSE
              lwFecha := FinaldeMes(pwFecha);
          END;
          Periodicidad::Mensual:   lwFecha := FinaldeMes(pwFecha);
        END
      ELSE // Busca hacia atras
        CASE Periodicidad OF
          0: lwFecha := 0D;
          Periodicidad::Diaria: lwFecha := pwFecha;
          Periodicidad::Semanal:
          BEGIN
            lwFecha:= DWY2DATE("Primer dia semana" + 1, DATE2DWY(pwFecha, 2), DATE2DWY(pwFecha, 3));
            IF DATE2DWY(pwFecha, 1) <= "Primer dia semana" THEN
              lwFecha := CALCDATE(Text50001, lwFecha);
          END;
          Periodicidad::Quincenal:
          BEGIN
            IF DATE2DMY(pwFecha,1) > 15 THEN
              lwFecha := DMY2DATE(16, DATE2DMY(pwFecha,2),DATE2DMY(pwFecha,3))
            ELSE
              lwFecha := PrincipiodeMes(pwFecha);
          END;
          Periodicidad::Mensual:   lwFecha := PrincipiodeMes(pwFecha);
        END;
      EXIT(lwFecha);
    END;

    PROCEDURE FinaldeMes@1100244001(pwFecha@1100244000 : Date) : Date;
    VAR
      lwFecha@1100244001 : Date;
    BEGIN
      // FinaldeMes

      lwFecha := CALCDATE(Text50002, pwFecha);
      lwFecha := DMY2DATE(1, DATE2DMY(lwFecha,2),DATE2DMY(lwFecha,3));
      lwFecha := CALCDATE(Text50003, lwFecha);
      EXIT(lwFecha);
    END;

    PROCEDURE PrincipiodeMes@1100244004(pwFecha@1100244000 : Date) : Date;
    VAR
      lwFecha@1100244001 : Date;
    BEGIN
      // PrincipiodeMes
      lwFecha := DMY2DATE(1, DATE2DMY(pwFecha,2),DATE2DMY(pwFecha,3));
      EXIT(lwFecha);
    END;

    PROCEDURE AcumulaAnteriores@1100244002(pwFechaIni@1100244000 : Date) : Boolean;
    VAR
      lwAcumularAnteriores@1100244001 : Boolean;
    BEGIN
      // AcumulaAnteriores

      // Devuelve true si la fecha de inicio es anterior a la ultima fecha de facturacion de este cliente/TTOO

      lwAcumularAnteriores := ("Ultima Fecha Facturacion" >= pwFechaIni) OR ("Ultima Fecha Facturacion" = 0D);

      EXIT(lwAcumularAnteriores);
    END;

    BEGIN
    END.
  }
}
