OBJECT Table 7010355 Piezas x Incidencia
{
  OBJECT-PROPERTIES
  {
    Date=16/10/09;
    Time=12:30:42;
    Version List=TRANSFER;
  }
  PROPERTIES
  {
    OnInsert=VAR
               rMov@1100244000 : Record 7010355;
               rIncid@1100244001 : Record 7010348;
               rAlm@1100244002 : Record 14;
               vResult@1100244003 : Integer;
               rTaller@1100244004 : Record 7010347;
               rParam@1100244005 : Record 7010311;
             BEGIN
               vResult := 100;
               rMov.RESET;
               rMov.SETCURRENTKEY("N§ Incidencia","N§ Linea");
               rMov.SETRANGE("N§ Incidencia","N§ Incidencia");
               IF rMov.FINDLAST THEN
                 vResult := rMov."N§ Linea" + 100;

               "N§ Linea" := vResult;

               //Sugerimos la fecha de la incidencia y el almacen (el taller de la incidencia);
               IF rIncid.GET("N§ Incidencia") THEN BEGIN
                 Fecha := rIncid."Fecha Incidencia";
                 IF (rIncid.Taller<>'') AND rAlm.GET(rIncid.Taller) THEN
                     Almacen := rAlm.Code;
                 Matricula:=rIncid.Matricula;
               END;

               IF rParam.FINDFIRST THEN BEGIN
               // Si se ha indicado un Producto de Servicios por defecto se sugiere este
               IF rParam."Producto por Defecto"<>'' THEN BEGIN
                 VALIDATE("Cod. Producto",rParam."Producto por Defecto");
               END;

               // Si se ha indicado un Almacen por defecto se sugiere este
                 IF (rParam."Almacen por Defecto"<>'') AND (Almacen='')  THEN
                   Almacen:=rParam."Almacen por Defecto";
               END;

               // AGM -15-03-2001 Controlamos que no nos introducen piezas en un taller que no es el nuestro
               //IF rIncid.GET("N§ Incidencia") THEN BEGIN
                 //IF  rTaller.GET(rIncid.Taller) THEN
                 //Temp.Desactivadas  IF rTaller."Taller Propio" = FALSE THEN
                 //Temp.Desactivadas    ERROR (Text000);
               //END;
             END;

    OnModify=VAR
               YA_TRASPASADO@1100244000 : TextConst 'ESP=Este registro no se puede modificar porque ya ha sido traspasado.';
             BEGIN
               IF Traspasado THEN
                 ERROR(YA_TRASPASADO);
             END;

    OnDelete=BEGIN
               IF Traspasado THEN
                 ERROR(no_borra_traspasado);
             END;

    CaptionML=ESP=Piezas x Incidencia;
    LookupFormID=Form7010393;
    DrillDownFormID=Form7010393;
  }
  FIELDS
  {
    { 1   ;   ;N§ Incidencia       ;Code10        ;TableRelation=Incidencia."Parte Incidencia";
                                                   CaptionML=ESP=N§ Incidencia;
                                                   NotBlank=Yes;
                                                   Description=PK, FK Incidencias;
                                                   Editable=No }
    { 2   ;   ;N§ Linea            ;Integer       ;InitValue=100;
                                                   CaptionML=ESP=N§ Linea;
                                                   NotBlank=Yes;
                                                   Description=PK;
                                                   Editable=No }
    { 3   ;   ;Fecha               ;Date          ;CaptionML=ESP=Fecha }
    { 4   ;   ;Cod. Producto       ;Code20        ;TableRelation=Item.No.;
                                                   OnValidate=VAR
                                                                rProducto@1100244000 : Record 27;
                                                              BEGIN
                                                                IF rProducto.GET("Cod. Producto") THEN BEGIN
                                                                  VALIDATE(Descripcion,rProducto.Description);
                                                                  VALIDATE("Precio Unitario",rProducto."Unit Cost");
                                                                END ELSE BEGIN
                                                                  VALIDATE(Descripcion,'');
                                                                  VALIDATE("Precio Unitario",0);
                                                                END;
                                                              END;

                                                   CaptionML=ESP=Cod. Producto;
                                                   Description=FK sobre Productos }
    { 6   ;   ;Cantidad            ;Decimal       ;InitValue=1;
                                                   OnValidate=BEGIN
                                                                VALIDATE("Precio Unitario");
                                                              END;

                                                   CaptionML=ESP=Cantidad }
    { 7   ;   ;Precio Unitario     ;Decimal       ;OnValidate=BEGIN
                                                                Importe:=Cantidad*"Precio Unitario";
                                                              END;

                                                   CaptionML=ESP=Precio Unitario;
                                                   AutoFormatType=2 }
    { 8   ;   ;Traspasado          ;Boolean       ;CaptionML=ESP=Traspasado;
                                                   Editable=Yes }
    { 9   ;   ;Usuario Traspaso    ;Code20        ;CaptionML=ESP=Usuario Traspaso;
                                                   Editable=No }
    { 10  ;   ;Fecha Traspaso      ;Date          ;CaptionML=ESP=Fecha Traspaso;
                                                   Editable=No }
    { 11  ;   ;Hora Traspaso       ;Time          ;CaptionML=ESP=Hora Traspaso;
                                                   Editable=No }
    { 12  ;   ;Almacen             ;Code10        ;TableRelation=Location.Code;
                                                   OnValidate=BEGIN
                                                                AlmacenEnBlanco;
                                                              END;

                                                   CaptionML=ESP=Almacen;
                                                   Description=FK Almacen }
    { 13  ;   ;Tipo de Linea       ;Option        ;OnValidate=VAR
                                                                rIncid@1100244000 : Record 7010348;
                                                                rTaller@1100244001 : Record 7010347;
                                                                NoEsTallerPropio@1100244002 : TextConst 'ESP=No se pueden considerar Piezas en Stock en un taller que no sea propio';
                                                                rParam@1100244003 : Record 7010311;
                                                              BEGIN
                                                                // JPT -5-04-2001 Controlamos que no nos introducen piezas en un taller que no es el nuestro
                                                                IF rIncid.GET("N§ Incidencia") THEN BEGIN

                                                                  IF  rTaller.GET(rIncid.Taller) THEN
                                                                    IF rTaller."Taller Propio" = FALSE THEN
                                                                      IF "Tipo de Linea"="Tipo de Linea"::"Piezas en Stock" THEN
                                                                        ERROR (NoEsTallerPropio);
                                                                IF "Tipo de Linea"="Tipo de Linea"::Servicios THEN BEGIN
                                                                  IF rParam.FINDFIRST THEN
                                                                    IF rParam."Producto por Defecto"<>'' THEN
                                                                      "Cod. Producto":=rParam."Producto por Defecto"
                                                                END ELSE
                                                                      "Cod. Producto":='';
                                                                VALIDATE("Cod. Producto");


                                                                  END;
                                                              END;

                                                   CaptionML=ESP=Tipo de Linea;
                                                   OptionCaptionML=ESP=Servicios,Piezas en Stock,Piezas sin stock;
                                                   OptionString=Servicios,Piezas en Stock,Piezas sin stock;
                                                   NotBlank=Yes;
                                                   BlankZero=No }
    { 14  ;   ;Importe             ;Decimal       ;CaptionML=ESP=Importe;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 15  ;   ;Matricula           ;Code10        ;CaptionML=ESP=Matricula }
    { 16  ;   ;Descripcion         ;Text60        ;CaptionML=ESP=Descripcion }
  }
  KEYS
  {
    {    ;N§ Incidencia,N§ Linea                  ;SumIndexFields=Cantidad;
                                                   Clustered=Yes }
    {    ;N§ Incidencia,Traspasado                ;SumIndexFields=Cantidad }
    {    ;Matricula,Fecha                         ;SumIndexFields=Importe }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100244001 : TextConst 'ESP=No se pueden introducir piezas en un taller que no es Propio';
      Text001@1100244002 : TextConst 'ESP=Almacen obligatorio';
      Text002@1100244003 : TextConst 'ESP=Config. existencia';
      Text003@1100244004 : TextConst 'ESP=Almac‚n';
      no_borra_traspasado@1100244000 : TextConst 'ESP=No se pueden borrar lineas ya traspasadas.';

    PROCEDURE AlmacenEnBlanco@2();
    VAR
      "rConf.Existencias"@1100244000 : Record 313;
      No_blanco@1100244001 : TextConst 'ESP=El campo ''Almac‚n'' no puede quedar en blanco.';
    BEGIN
      IF "rConf.Existencias".FINDFIRST THEN BEGIN
        IF "rConf.Existencias"."Location Mandatory"=TRUE THEN
          IF Almacen='' THEN ERROR(No_blanco);
      END;
    END;

    BEGIN
    {
      // AlmacenEnBlanco- Funci¢n que comprueba si el campo Text001 de la tabla Text002 est  a TRUE en cuyo
      //                  caso d  un error al dejar el compo Text003 en blanco;
    }
    END.
  }
}
