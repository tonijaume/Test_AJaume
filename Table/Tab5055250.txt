OBJECT Table 5055250 Liquidity
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=LIQEM6.00;
  }
  PROPERTIES
  {
    Permissions=TableData 355=rimd,
                TableData 5055252=rimd,
                TableData 5055257=rimd;
    OnInsert=BEGIN
               IF "No." = '' THEN BEGIN
                 LiqSetup.GET;
                 LiqSetup.TESTFIELD("Liquidity No. Series");
                 NoSeriesMgt.InitSeries(LiqSetup."Liquidity No. Series",xRec."No. Series",0D,"No.","No. Series");
               END;

               "Creation Date" := WORKDATE;
               "Created By"  := USERID;
               "Neutral Payments From" := WORKDATE;
               "G/L Budget From" := WORKDATE;
             END;

    OnDelete=BEGIN
               CommentLine.RESET;
               CommentLine.SETRANGE("Table Name",CommentLine."Table Name"::Liquidity);
               CommentLine.SETRANGE("No.","No.");
               CommentLine.DELETEALL;

               Entry.RESET;
               Entry.SETCURRENTKEY("Liquidity No.");
               Entry.SETRANGE("Liquidity No.","No.");
               IF Entry.FIND('-') THEN
                 REPEAT
                   LedgEntryDim.SETRANGE("Table ID",DATABASE::"Liquidity Ledger Entry");
                   LedgEntryDim.SETRANGE("Entry No.",Entry."Entry No.");
                   LedgEntryDim.DELETEALL;
                 UNTIL Entry.NEXT = 0;
               Entry.DELETEALL;
             END;

    CaptionML=[ENU=Liquidity;
               ESP=Liquidez];
    LookupFormID=Form5055259;
    DrillDownFormID=Form5055259;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;AltSearchField=Search Name;
                                                   CaptionML=[ENU=No.;
                                                              ESP=N§] }
    { 2   ;   ;Search Name         ;Code50        ;CaptionML=[ENU=Search Name;
                                                              ESP=Alias] }
    { 3   ;   ;Description         ;Text50        ;OnValidate=BEGIN
                                                                IF ("Search Name" = UPPERCASE(xRec.Description)) OR ("Search Name" = '') THEN
                                                                  "Search Name" := Description;
                                                              END;

                                                   CaptionML=[ENU=Description;
                                                              ESP=Descripci¢n] }
    { 4   ;   ;Description 2       ;Text50        ;CaptionML=[ENU=Description 2;
                                                              ESP=Descripci¢n 2] }
    { 5   ;   ;Consider Discount   ;Boolean       ;OnValidate=BEGIN
                                                                IF NOT "Consider Discount" THEN
                                                                  "Consider Pmt. Disc. Tol. Date" := FALSE;
                                                              END;

                                                   CaptionML=[ENU=Consider Discount;
                                                              ESP=Considerar descuento] }
    { 6   ;   ;Creation Date       ;Date          ;CaptionML=[ENU=Creation Date;
                                                              ESP=Fecha creaci¢n] }
    { 7   ;   ;Created By          ;Code20        ;CaptionML=[ENU=Created By;
                                                              ESP=Creado por] }
    { 8   ;   ;Neutral Payments To ;Date          ;CaptionML=[ENU=Neutral Payments To;
                                                              ESP=Cobros y pagos neutros hasta] }
    { 9   ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Liquidity Comment" WHERE (Table Name=CONST(Liquidity),
                                                                                                No.=FIELD(No.)));
                                                   CaptionML=[ENU=Comment;
                                                              ESP=Comentario] }
    { 10  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              ESP=Nos. serie];
                                                   Editable=No }
    { 11  ;   ;Neutral Payments From;Date         ;CaptionML=[ENU=Neutral Payments From;
                                                              ESP=Cobros y pagos neutros desde] }
    { 12  ;   ;G/L Budget From     ;Date          ;CaptionML=[ENU=G/L Budget From;
                                                              ESP=Ppto. contable desde] }
    { 13  ;   ;G/L Budget To       ;Date          ;CaptionML=[ENU=G/L Budget To;
                                                              ESP=Ppto. contable hasta] }
    { 14  ;   ;Consider Liq. Payment Terms;Boolean;CaptionML=[ENU=Consider Liq. Payment Terms;
                                                              ESP=Considerar t‚rminos pago liq.] }
    { 15  ;   ;Consider Pmt. Disc. Tol. Date;Boolean;
                                                   CaptionML=[ENU=Consider Pmt. Disc. Tol. Date;
                                                              ESP=Consid. fecha tol. dto. P.P.] }
    { 16  ;   ;Consider Pmt. Tol. Amount;Boolean  ;CaptionML=[ENU=Consider Pmt. Tol. Amount;
                                                              ESP=Considerar impte. tol. pagos] }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;No.,Description,Description 2,Creation Date }
  }
  CODE
  {
    VAR
      LiqSetup@1140000 : Record 5055253;
      Liq@1140001 : Record 5055250;
      CommentLine@1140002 : Record 5055252;
      Entry@1140003 : Record 5055257;
      LedgEntryDim@1140004 : Record 355;
      NoSeriesMgt@1140005 : Codeunit 396;

    PROCEDURE AssistEdit@2(OldLiq@1140000 : Record 5055250) : Boolean;
    BEGIN
      WITH Liq DO BEGIN
        Liq := Rec;
        LiqSetup.GET;
        LiqSetup.TESTFIELD("Liquidity No. Series");
        IF NoSeriesMgt.SelectSeries(LiqSetup."Liquidity No. Series",OldLiq."No. Series","No. Series") THEN BEGIN
          LiqSetup.GET;
          LiqSetup.TESTFIELD("Liquidity No. Series");
          NoSeriesMgt.SetSeries("No.");
          Rec := Liq;
          EXIT(TRUE);
        END;
      END;
    END;

    BEGIN
    END.
  }
}
