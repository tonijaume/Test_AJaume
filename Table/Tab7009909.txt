OBJECT Table 7009909 Lineas Factura
{
  OBJECT-PROPERTIES
  {
    Date=09/01/15;
    Time=14:29:03;
    Modified=Yes;
    Version List=AIC2009;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF "Line No." = 0 THEN
                 "Line No." := NewLineNo;
             END;

  }
  FIELDS
  {
    { 1   ;   ;Tipo documento      ;Option        ;CaptionML=[ENU=Document Type;
                                                              ESP=Tipo documento];
                                                   OptionCaptionML=[ENU=Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order;
                                                                    ESP=Oferta,Pedido,Factura,Abono,Pedido abierto,Devoluci¢n];
                                                   OptionString=Oferta,Pedido,Factura,Abono,Pedido abierto,Devoluci¢n }
    { 10  ;   ;N§ documento        ;Code20        ;TableRelation="Cabecera Factura".No.;
                                                   ValidateTableRelation=No;
                                                   CaptionML=[ENU=Document No.;
                                                              ESP=N§ documento] }
    { 20  ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              ESP=N§ l¡nea] }
    { 25  ;   ;% IVA               ;Decimal       ;CaptionML=[ENU=VAT %;
                                                              ESP=% IVA];
                                                   DecimalPlaces=0:6 }
    { 50  ;   ;Descripcion         ;Text50        ;CaptionML=[ENU=Description;
                                                              ESP=Descripci¢n] }
    { 60  ;   ;Cantidad            ;Decimal       ;CaptionML=[ENU=Quantity;
                                                              ESP=Cantidad];
                                                   DecimalPlaces=0:5 }
    { 70  ;   ;Precio              ;Decimal       ;CaptionML=[ENU=Unit Cost;
                                                              ESP=Precio];
                                                   AutoFormatType=2;
                                                   AutoFormatExpr="Cod. divisa" }
    { 80  ;   ;Importe             ;Decimal       ;CaptionML=[ENU=Amount;
                                                              ESP=Importe];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Cod. divisa" }
    { 90  ;   ;Importe IVA incl.   ;Decimal       ;CaptionML=[ENU=Amount Including VAT;
                                                              ESP=Importe IVA incl.];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Cod. divisa" }
    { 100 ;   ;Importe sin IVA     ;Decimal       ;CaptionML=[ENU=Base Amount;
                                                              ESP=Importe sin IVA];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Cod. divisa" }
    { 110 ;   ;Cod. divisa         ;Code10        ;TableRelation=Currency;
                                                   CaptionML=[ENU=Currency Code;
                                                              ESP=C¢d. divisa];
                                                   Editable=No }
    { 120 ;   ;Grupo registro IVA neg.;Code10     ;TableRelation="VAT Business Posting Group";
                                                   CaptionML=[ENU=VAT Bus. Posting Group;
                                                              ESP=Grupo registro IVA neg.] }
    { 130 ;   ;Grupo registro IVA prod.;Code10    ;TableRelation="VAT Product Posting Group";
                                                   CaptionML=[ENU=VAT Prod. Posting Group;
                                                              ESP=Grupo registro IVA prod.] }
    { 140 ;   ;VAT Identifier      ;Code10        ;CaptionML=[ENU=Identificador IVA;
                                                              ESP=VAT Identifier] }
    { 150 ;   ;Impuesto Incluidos  ;Boolean       ;CaptionML=ESP=Impuesto Incluidos;
                                                   Editable=No }
    { 200 ;   ;NoPrefactura        ;Code10        ;CaptionML=ESP=NoPrefactura }
    { 900 ;   ;Delegacion          ;Code10        ;TableRelation=Delegacion.Codigo;
                                                   CaptionML=ESP=Delegacion }
    { 1000;   ;TourOperador        ;Code10        ;TableRelation=TourOperador.TourOperador;
                                                   CaptionML=ESP=TourOperador;
                                                   Description=PK, FK TourOperador }
    { 1010;   ;Bono                ;Code10        ;CaptionML=ESP=Bono;
                                                   Description=PK }
    { 1020;   ;N§ Reserva          ;Integer       ;CaptionML=ESP=N§ Reserva;
                                                   Description=PK }
    { 1030;   ;Concepto            ;Code20        ;CaptionML=ESP=Concepto;
                                                   Description=PK }
    { 1040;   ;Subconcepto         ;Code20         }
    { 1050;   ;Hotel               ;Code20        ;TableRelation=Hotel.Hotel;
                                                   CaptionML=ESP=Hotel }
    { 1060;   ;Regularizacion      ;Boolean       ;CaptionML=ESP=Regularizacion;
                                                   Description=Indica si pertenece a un cierre de regularizacion }
    { 1070;   ;Fecha               ;Date          ;CaptionML=ESP=Fecha }
    { 1080;   ;Adultos             ;Integer        }
    { 1090;   ;Ni¤os               ;Integer        }
    { 1100;   ;Personas            ;Integer        }
    { 1110;   ;Dias                ;Integer        }
    { 1120;   ;Tipo de Clave       ;Code10        ;TableRelation="Maestro de Claves".Clave;
                                                   CaptionML=ESP=Tipo de Clave }
    { 1130;   ;Vuelo               ;Code30         }
    { 2000;   ;Tipo Pax            ;Code10        ;TableRelation="Tipo elemento"."Tipo elemento" WHERE (Humano=CONST(Yes));
                                                   CaptionML=ESP=Tipo Pax;
                                                   Editable=No }
    { 2010;   ;Zona                ;Code25        ;CaptionML=ESP=Zona;
                                                   Editable=No }
    { 2020;   ;Tipo Linea          ;Option        ;CaptionML=ESP=Tipo Linea;
                                                   OptionCaptionML=ESP=Persona,Suplemento,Abono;
                                                   OptionString=Persona,Suplemento,Abono }
    { 2030;   ;Agrupacion          ;Integer       ;CaptionML=ESP=Agrupacion }
    { 2050;   ;Tipo vehiculo       ;Code10        ;CaptionML=ESP=Tipo vehiculo }
    { 2060;   ;Precio x vehiculo   ;Boolean       ;CaptionML=ESP=Precio x vehiculo }
    { 2065;   ;Aeropuerto          ;Code10        ;CaptionML=[ENU=Airport;
                                                              ESP=Aeropuerto] }
    { 2070;   ;Nombre              ;Text60        ;CaptionML=[ENU=Name;
                                                              ESP=Nombre] }
  }
  KEYS
  {
    {    ;Tipo documento,N§ documento,Line No.    ;Clustered=Yes }
    {    ;Tipo Linea,Fecha,Hotel,Bono,Tipo Pax     }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE SetInf@1100253000(prLin@1100253000 : Record 37;pwIvaInc@1100253001 : Boolean);
    BEGIN
      // SetInf

      "Tipo documento"           := prLin."Document Type";
      "N§ documento"             := prLin."Document No.";
      "Line No."                 := prLin."Line No.";
      Descripcion                := prLin.Description;
      Cantidad                   := prLin.Quantity;

      IF Personas <> 0 THEN
        Precio := ROUND(prLin."Line Amount" / Personas)
      ELSE
        Precio := prLin."Unit Price";

      "Cod. divisa"              := prLin."Currency Code";
      "Grupo registro IVA neg."  := prLin."VAT Bus. Posting Group";
      "Grupo registro IVA prod." := prLin."VAT Prod. Posting Group";
      Importe                    := prLin."Line Amount";
      "% IVA"                    := prLin."VAT %";
      "VAT Identifier"           := prLin."VAT Identifier";
      "Impuesto Incluidos"       := pwIvaInc;

      SetImportes;
    END;

    PROCEDURE SetImportes@1100253001();
    BEGIN
      // SetImportes

      IF "Impuesto Incluidos" THEN BEGIN
        "Importe IVA incl."      := Importe;
        "Importe sin IVA"        := ROUND(Importe / (1 + ("% IVA"  / 100)));
      END
      ELSE BEGIN
        "Importe IVA incl."      := ROUND(Importe * (1 + ("% IVA" / 100)));
        "Importe sin IVA"        := Importe;
      END;
    END;

    PROCEDURE NomConcepto@1100253047(pwCode@1100253001 : Code[20]) : Text[30];
    VAR
      lrCtp@1100253000 : Record 7009716;
      lwText@1100253002 : Text[30];
    BEGIN
      // _NomConcepto

      CLEAR(lwText);
      CLEAR(lrCtp);
      IF lrCtp.GET(pwCode) THEN
        lwText := lrCtp.Descripcion;
      IF lwText='' THEN
        lwText := pwCode;

      EXIT(lwText);
    END;

    PROCEDURE PrecioConIVA@3() : Decimal;
    VAR
      lwPrec@1100217000 : Decimal;
    BEGIN
      // PrecioConIVa

      lwPrec := Precio;
      IF NOT "Impuesto Incluidos" THEN
        lwPrec := ROUND(lwPrec * (1 + ("% IVA" / 100)));

      EXIT(lwPrec);
    END;

    PROCEDURE PrecioSinIVA@4() : Decimal;
    VAR
      lwPrec@1100217000 : Decimal;
    BEGIN
      // PrecioSinIVA

      lwPrec := Precio;
      IF "Impuesto Incluidos" THEN
        lwPrec := ROUND(lwPrec / (1 + ("% IVA"  / 100)));

      EXIT(lwPrec);
    END;

    PROCEDURE NewLineNo@1100217000() : Integer;
    VAR
      lrLin@1100217000 : Record 7009909;
      lwNo@1100217001 : Integer;
    BEGIN
      // NewLineNo
      // Devuelve el siguiente numero de linea

      lwNo := 1;

      CLEAR(lrLin);
      lrLin.SETRANGE("Tipo documento", "Tipo documento");
      lrLin.SETRANGE("N§ documento"  , "N§ documento");
      IF lrLin.FINDLAST THEN
        lwNo += lrLin."Line No.";

      EXIT(lwNo);
    END;

    PROCEDURE CalcVATAmountLines@2(VAR Cab@1000 : Record 7009908;VAR VATAmountLine@1001 : TEMPORARY Record 290);
    BEGIN
      // CalcVATAmountLines

      VATAmountLine.DELETEALL;
      SETRANGE("Tipo documento", Cab."Tipo documento");
      SETRANGE("N§ documento"  , Cab."No.");
      IF FINDSET THEN
        REPEAT
          VATAmountLine.INIT;
          VATAmountLine."VAT Identifier"       := "VAT Identifier";
          // VATAmountLine."VAT Calculation Type" := "VAT Calculation Type";
          // VATAmountLine."Tax Group Code"       := "Tax Group Code";
          VATAmountLine."VAT %"                 := "% IVA";
          // VATAmountLine."EC %"                 := "EC %";
          VATAmountLine."VAT+EC Base"           := "Importe sin IVA";
          VATAmountLine."VAT Amount"            := "Importe IVA incl." - "Importe sin IVA";
          VATAmountLine."Amount Including VAT+EC" := "Importe IVA incl.";
          VATAmountLine."Line Amount"           := Importe;
          // IF "Allow Invoice Disc." THEN
          //   VATAmountLine."Inv. Disc. Base Amount" := "Line Amount";
          // VATAmountLine."Invoice Discount Amount" := "Inv. Discount Amount";
          VATAmountLine.Quantity                := Cantidad;
          // VATAmountLine."Calculated VAT Amount" := "Amount Including VAT" - Amount - "VAT Difference";
          // VATAmountLine."VAT Difference" := "VAT Difference";
          // VATAmountLine."EC Difference" := "EC Difference";
          IF Cab."Precios IVA incluido" THEN
            VATAmountLine."Prices Including VAT" := TRUE;
          VATAmountLine.InsertLine;
        UNTIL NEXT = 0;
    END;

    BEGIN
    {
      $001 AJS 04062014 Modifico la funcion NomConcepto para que el parametro de entrada sea de 20
    }
    END.
  }
}
