OBJECT Table 5717 Item Cross Reference
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVW16.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF ("Cross-Reference Type No." <> '') AND
                  ("Cross-Reference Type" = "Cross-Reference Type"::" ")
               THEN
                 ERROR(Text000,FIELDCAPTION("Cross-Reference Type No."));

               Item.GET("Item No.");
               IF "Unit of Measure" = '' THEN
                 VALIDATE("Unit of Measure",Item."Base Unit of Measure");
               CreateItemVendor;
             END;

    OnDelete=BEGIN
               IF ("Cross-Reference Type" = "Cross-Reference Type"::Vendor) THEN
                 DeleteItemVendor(Rec)
             END;

    OnRename=BEGIN
               IF ("Cross-Reference Type No." <> '') AND
                  ("Cross-Reference Type" = "Cross-Reference Type"::" ")
               THEN
                 ERROR(Text000,FIELDCAPTION("Cross-Reference Type No."));
               IF (xRec."Cross-Reference Type" = "Cross-Reference Type"::Vendor) THEN
                 DeleteItemVendor(xRec);
               IF ("Cross-Reference Type" = "Cross-Reference Type"::Vendor) THEN
                 CreateItemVendor;
             END;

    CaptionML=[ENU=Item Cross Reference;
               ESP=Referencia cruzada producto];
    LookupFormID=Form5724;
  }
  FIELDS
  {
    { 1   ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   CaptionML=[ENU=Item No.;
                                                              ESP=N§ producto] }
    { 2   ;   ;Variant Code        ;Code10        ;TableRelation="Item Variant".Code WHERE (Item No.=FIELD(Item No.));
                                                   CaptionML=[ENU=Variant Code;
                                                              ESP=C¢d. variante] }
    { 3   ;   ;Unit of Measure     ;Code10        ;TableRelation="Item Unit of Measure".Code WHERE (Item No.=FIELD(Item No.));
                                                   CaptionML=[ENU=Unit of Measure;
                                                              ESP=Unidad medida] }
    { 4   ;   ;Cross-Reference Type;Option        ;OnValidate=BEGIN
                                                                IF ("Cross-Reference Type" <> xRec."Cross-Reference Type") AND
                                                                   (xRec."Cross-Reference Type" <> xRec."Cross-Reference Type"::" ") OR
                                                                   ("Cross-Reference Type" = "Cross-Reference Type"::"Bar Code")
                                                                THEN
                                                                  "Cross-Reference Type No." := '';
                                                              END;

                                                   CaptionML=[ENU=Cross-Reference Type;
                                                              ESP=Tipo referencia cruzada];
                                                   OptionCaptionML=[ENU=" ,Customer,Vendor,Bar Code";
                                                                    ESP=" ,Cliente,Prov.,C¢d. barra"];
                                                   OptionString=[ ,Customer,Vendor,Bar Code] }
    { 5   ;   ;Cross-Reference Type No.;Code30    ;TableRelation=IF (Cross-Reference Type=CONST(Customer)) Customer.No.
                                                                 ELSE IF (Cross-Reference Type=CONST(Vendor)) Vendor.No.;
                                                   CaptionML=[ENU=Cross-Reference Type No.;
                                                              ESP=N§ tipo referencia cruzada] }
    { 6   ;   ;Cross-Reference No. ;Code20        ;CaptionML=[ENU=Cross-Reference No.;
                                                              ESP=N§ referencia cruzada];
                                                   NotBlank=Yes }
    { 7   ;   ;Description         ;Text30        ;CaptionML=[ENU=Description;
                                                              ESP=Descripci¢n] }
    { 8   ;   ;Discontinue Bar Code;Boolean       ;OnValidate=BEGIN
                                                                IF ("Discontinue Bar Code") AND
                                                                   ("Cross-Reference Type" <> "Cross-Reference Type"::"Bar Code")
                                                                THEN
                                                                  ERROR(Text001,TABLECAPTION);
                                                              END;

                                                   CaptionML=[ENU=Discontinue Bar Code;
                                                              ESP=Discontinuar c¢d. barra] }
  }
  KEYS
  {
    {    ;Item No.,Variant Code,Unit of Measure,Cross-Reference Type,Cross-Reference Type No.,Cross-Reference No.;
                                                   Clustered=Yes }
    {    ;Cross-Reference No.                      }
    {    ;Cross-Reference No.,Cross-Reference Type,Cross-Reference Type No.,Discontinue Bar Code }
    {    ;Cross-Reference Type,Cross-Reference No. }
    {    ;Item No.,Variant Code,Unit of Measure,Cross-Reference Type,Cross-Reference No.,Discontinue Bar Code }
    {    ;Cross-Reference Type,Cross-Reference Type No. }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=You cannot enter a %1 for a blank Cross-Reference Type.;ESP=No puede introducir un %1 para tipo de ref. cruz. en blanco.';
      Text001@1001 : TextConst 'ENU=This %1 is not a bar code.;ESP=Este %1 no es un c¢d. barra.';
      Item@1002 : Record 27;
      ItemVend@1003 : Record 99;

    PROCEDURE CreateItemVendor@1();
    BEGIN
      IF ("Cross-Reference Type" = "Cross-Reference Type"::Vendor) AND
         (ItemVend.WRITEPERMISSION)
      THEN BEGIN
        ItemVend.RESET;
        ItemVend.SETRANGE("Item No.","Item No.");
        ItemVend.SETRANGE("Vendor No.","Cross-Reference Type No.");
        ItemVend.SETRANGE("Variant Code","Variant Code");
        IF NOT ItemVend.FIND('-') THEN BEGIN
          ItemVend."Item No." := "Item No.";
          ItemVend."Vendor No." := "Cross-Reference Type No.";
          ItemVend."Variant Code" := "Variant Code";
          ItemVend."Vendor Item No." := "Cross-Reference No.";
          ItemVend.INSERT;
        END;
      END;
    END;

    PROCEDURE DeleteItemVendor@2(ItemCrossReference@1000 : Record 5717);
    VAR
      ItemCrossReference2@1001 : Record 5717;
    BEGIN
      ItemCrossReference2.SETRANGE("Item No.",ItemCrossReference."Item No.");
      ItemCrossReference2.SETRANGE("Variant Code",ItemCrossReference."Variant Code");
      ItemCrossReference2.SETRANGE("Cross-Reference Type",ItemCrossReference."Cross-Reference Type");
      ItemCrossReference2.SETRANGE("Cross-Reference Type No.",ItemCrossReference."Cross-Reference Type No.");
      ItemCrossReference2.SETRANGE("Cross-Reference No.",ItemCrossReference."Cross-Reference No.");
      ItemCrossReference2.SETFILTER("Unit of Measure",'<>%1',ItemCrossReference."Unit of Measure");
      IF NOT ItemCrossReference2.FIND('-') THEN BEGIN
        ItemVend.RESET;
        ItemVend.SETRANGE("Item No.",ItemCrossReference."Item No.");
        ItemVend.SETRANGE("Vendor No.",ItemCrossReference."Cross-Reference Type No.");
        ItemVend.SETRANGE("Variant Code",ItemCrossReference."Variant Code");
        IF ItemVend.FIND('-') THEN
          REPEAT
            IF UPPERCASE(DELCHR(ItemVend."Vendor Item No.",'<',' ')) =  ItemCrossReference."Cross-Reference No." THEN
              ItemVend.DELETE;
          UNTIL ItemVend.NEXT = 0;
      END;
    END;

    BEGIN
    END.
  }
}
