OBJECT Table 7010153 Precios Comision TourOperador
{
  OBJECT-PROPERTIES
  {
    Date=27/03/15;
    Time=15:31:04;
    Modified=Yes;
    Version List=AIC2009,COM;
  }
  PROPERTIES
  {
    OnInsert=VAR
               rConC@1103355000 : Record 7010142;
               lrRecRef@1000000001 : RecordRef;
               lrxRecRef@1000000000 : RecordRef;
             BEGIN
               rPar.FINDFIRST;
               IF NOT rPar."Empresa Delegacion" THEN
                 ERROR(Text001);

               rPre.RESET;
               rPre.SETRANGE(Delegacion     , Delegacion);
               rPre.SETRANGE("N§ Contrato"  , "N§ Contrato");
               IF rPre.FINDLAST THEN
                 "Orden precio" := rPre."Orden precio" + 1
               ELSE
                 "Orden precio" := 1;
               rPre.RESET;

               IF rConC.GET(Delegacion, "N§ Contrato", rConC."Tipo Contrato"::TourOperador) THEN
               BEGIN
                 "C¢d. divisa" := rConC."Cod. divisa";
                 //+$001
                 "Fecha desde" := rConC."Fecha inicio contrato";
                 "Fecha hasta" := rConC."Fecha final contrato";
                 //+$001

                 //+$006 <
                 IF rConC.Comercializadora THEN
                 BEGIN
                   IF rConC.TourOperador <> '' THEN BEGIN
                     rTo.RESET;
                     rTo.GET(rConC.TourOperador);
                     lrRecRef.GETTABLE(Rec);
                     lrxRecRef.GETTABLE(xRec);
                     cSincroCOM.SincronizaTabla(lrRecRef, lrxRecRef, cSincroCOM.OpInsert, rTo."Empresa comercializadora");

                     //. Tambien sincronizamos el valor de excursion
                     IF Excursion <> '' THEN BEGIN
                       rProdAg.RESET;
                       rProdAg.GET(Excursion);
                       lrRecRef.GETTABLE(rProdAg);
                       lrxRecRef.GETTABLE(rProdAg);
                       cSincroCOM.SincronizaTabla(lrRecRef, lrxRecRef, cSincroCOM.OpInsert, rTo."Empresa comercializadora");
                     END;
                   END;
                 END;
                 //+$006 >
               END;
             END;

    OnModify=VAR
               rConC@1000000002 : Record 7010142;
               lrRecRef@1000000001 : RecordRef;
               lrxRecRef@1000000000 : RecordRef;
             BEGIN
               rPar.FINDFIRST;
               IF NOT rPar."Empresa Delegacion" THEN
                 ERROR(Text002);

               IF "Fecha desde" = 0D THEN
                 MESSAGE(Text005);
               IF "Fecha hasta" = 0D THEN
                 MESSAGE(Text006);

               Activo := Activar_Precio; //$004

               IF rConC.GET(Delegacion, "N§ Contrato", rConC."Tipo Contrato"::TourOperador) THEN
               BEGIN
                 //+$006 <
                 IF rConC.Comercializadora THEN
                 BEGIN
                   IF rConC.TourOperador <> '' THEN BEGIN
                     rTo.RESET;
                     rTo.GET(rConC.TourOperador);
                     lrRecRef.GETTABLE(Rec);
                     lrxRecRef.GETTABLE(xRec);
                     cSincroCOM.SincronizaTabla(lrRecRef, lrxRecRef, cSincroCOM.OpModify, rTo."Empresa comercializadora");

                     //. Tambien sincronizamos el valor de excursion
                     IF Excursion <> '' THEN BEGIN
                       rProdAg.RESET;
                       rProdAg.GET(Excursion);
                       lrRecRef.GETTABLE(rProdAg);
                       lrxRecRef.GETTABLE(rProdAg);
                       cSincroCOM.SincronizaTabla(lrRecRef, lrxRecRef, cSincroCOM.OpModify, rTo."Empresa comercializadora");
                     END;
                   END;
                 END;
                 //+$006 >
               END;
             END;

    OnDelete=VAR
               rConC@1000000002 : Record 7010142;
               lrRecRef@1000000001 : RecordRef;
               lrxRecRef@1000000000 : RecordRef;
             BEGIN
               rPar.FINDFIRST;
               IF NOT rPar."Empresa Delegacion" THEN
                 ERROR(Text007);

               IF rConC.GET(Delegacion, "N§ Contrato", rConC."Tipo Contrato"::TourOperador) THEN
               BEGIN
                 //+$006 <
                 IF rConC.Comercializadora THEN
                 BEGIN
                   IF rConC.TourOperador <> '' THEN BEGIN
                     rTo.RESET;
                     rTo.GET(rConC.TourOperador);
                     lrRecRef.GETTABLE(Rec);
                     lrxRecRef.GETTABLE(xRec);
                     cSincroCOM.SincronizaTabla(lrRecRef, lrxRecRef, cSincroCOM.OpDelete, rTo."Empresa comercializadora");
                   END;
                 END;
                 //+$006 >
               END;

               cPar.intro_historico_precios_TO(Delegacion, "N§ Contrato", rHisP.Tipo::Compra, "Orden precio",
                                               Text008, Text009, '');
             END;

    OnRename=BEGIN
               rPar.FINDFIRST;
               IF NOT rPar."Empresa Delegacion" THEN
                 ERROR(Text010);
             END;

    CaptionML=[ENU=Touroperator Commission prices;
               ESP=Precios Comision TourOperador];
  }
  FIELDS
  {
    { 1   ;   ;Delegacion          ;Code10        ;TableRelation=Delegacion.Codigo;
                                                   CaptionML=[ENU=Local Office;
                                                              ESP=Delegacion];
                                                   Description=PK, FK Delegacion;
                                                   Editable=No }
    { 3   ;   ;N§ Contrato         ;Code10        ;CaptionML=[ENU=Contract No.;
                                                              ESP=N§ Contrato];
                                                   Description=PK;
                                                   Editable=No }
    { 7   ;   ;Orden precio        ;Integer       ;CaptionML=[ENU=Price order;
                                                              ESP=Orden Precio];
                                                   Description=PK;
                                                   Editable=No }
    { 9   ;   ;Fecha desde         ;Date          ;OnValidate=BEGIN
                                                                IF "Fecha desde" <> xRec."Fecha desde" THEN BEGIN
                                                                  IF "Fecha hasta" <> 0D THEN
                                                                    IF "Fecha desde" > "Fecha hasta" THEN
                                                                      ERROR(Text011);

                                                                  VALIDATE(Activo, FALSE);

                                                                  cPar.intro_historico_precios_TO(Delegacion, "N§ Contrato", rHisP.Tipo::Compra, "Orden precio",
                                                                                                  FIELDCAPTION("Fecha desde"),
                                                                                                  FORMAT(xRec."Fecha desde"), FORMAT("Fecha desde"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Date From;
                                                              ESP=Fecha desde] }
    { 11  ;   ;Fecha hasta         ;Date          ;OnValidate=BEGIN
                                                                IF "Fecha hasta" <> xRec."Fecha hasta" THEN BEGIN
                                                                  IF "Fecha desde" <> 0D THEN
                                                                    IF "Fecha desde" > "Fecha hasta" THEN
                                                                      ERROR(Text011);

                                                                  VALIDATE(Activo, FALSE);

                                                                  cPar.intro_historico_precios_TO(Delegacion, "N§ Contrato", rHisP.Tipo::Compra, "Orden precio",
                                                                                                  FIELDCAPTION("Fecha hasta"),
                                                                                                  FORMAT(xRec."Fecha hasta"), FORMAT("Fecha hasta"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Date To;
                                                              ESP=Fecha hasta] }
    { 14  ;   ;Precio              ;Decimal       ;OnValidate=VAR
                                                                rConC@1103355000 : Record 7010142;
                                                                rTipoCambioDivisa@1103355001 : Record 330;
                                                              BEGIN
                                                                IF Precio <> xRec.Precio THEN
                                                                    cPar.intro_historico_precios_TO(Delegacion, "N§ Contrato", rHisP.Tipo::Compra, "Orden precio",
                                                                                                  FIELDCAPTION(Precio),
                                                                                                  FORMAT(xRec.Precio), FORMAT(Precio));

                                                                //-$005IF Porcentaje THEN BEGIN
                                                                //-$005  "Precio (DL)" := Precio;
                                                                //-$005  EXIT;
                                                                //-$005END;

                                                                //-$005IF rConC.GET(Delegacion, "N§ Contrato", rConC."Tipo Contrato"::TourOperador) THEN BEGIN
                                                                //-$005  IF "C¢d. divisa" <> '' THEN BEGIN
                                                                //-$005    IF rConC."Fecha firma contrato" = 0D THEN
                                                                //-$005      "Precio (DL)" := 0
                                                                //-$005    ELSE
                                                                //-$005      "Precio (DL)" := rTipoCambioDivisa.ExchangeAmtFCYToLCY(rConC."Fecha firma contrato",
                                                                //-$005                                                        "C¢d. divisa",
                                                                //-$005                                                        Precio,
                                                                //-$005                                              rTipoCambioDivisa.ExchangeRate(rConC."Fecha firma contrato", "C¢d. divisa"));
                                                                //-$005  END
                                                                //-$005  ELSE
                                                                //-$005    "Precio (DL)" := Precio;
                                                                //-$005END
                                                                //-$005ELSE
                                                                //-$005  "Precio (DL)" := 0;
                                                              END;

                                                   CaptionML=[ENU=Price;
                                                              ESP=Precio];
                                                   AutoFormatType=2;
                                                   AutoFormatExpr="C¢d. divisa" }
    { 15  ;   ;o_Precio (DL)       ;Decimal       ;CaptionML=[ENU=Price (LCY);
                                                              ESP=Precio (DL)];
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 19  ;   ;C¢d. divisa         ;Code10        ;TableRelation=Currency.Code;
                                                   OnValidate=BEGIN
                                                                IF "C¢d. divisa" <> xRec."C¢d. divisa" THEN
                                                                    cPar.intro_historico_precios_TO(Delegacion, "N§ Contrato", rHisP.Tipo::Compra, "Orden precio",
                                                                                                  FIELDCAPTION("C¢d. divisa"),
                                                                                                  xRec."C¢d. divisa", "C¢d. divisa");
                                                              END;

                                                   CaptionML=[ENU=Currency code;
                                                              ESP=C¢d. divisa];
                                                   Description=FK Divisa;
                                                   Editable=No }
    { 35  ;   ;Activo              ;Boolean       ;OnValidate=BEGIN
                                                                Comprobar_Contrato;

                                                                Activo := Activar_Precio;
                                                              END;

                                                   CaptionML=[ENU=Active;
                                                              ESP=Activo];
                                                   Editable=No }
    { 43  ;   ;Porcentaje          ;Boolean       ;InitValue=Yes;
                                                   OnValidate=BEGIN
                                                                IF Porcentaje <> xRec.Porcentaje THEN
                                                                  cPar.intro_historico_precios_TO(Delegacion, "N§ Contrato", rHisP.Tipo::Compra, "Orden precio",
                                                                                                  FIELDCAPTION(Porcentaje),
                                                                                                  FORMAT(xRec.Porcentaje), FORMAT(Porcentaje));
                                                              END;

                                                   CaptionML=[ENU=Percentage;
                                                              ESP=Porcentaje] }
    { 45  ;   ;Zona                ;Code10        ;TableRelation="Zona fisica"."Zona Fisica";
                                                   OnValidate=VAR
                                                                rZona@1103355000 : Record 7009713;
                                                              BEGIN
                                                                IF Zona <> xRec.Zona THEN
                                                                BEGIN
                                                                  IF Zona <> '' THEN
                                                                    IF NOT rZona.GET(Zona) THEN
                                                                      ERROR(Text012);

                                                                  VALIDATE(Activo, FALSE);

                                                                  cPar.intro_historico_precios_TO(Delegacion, "N§ Contrato", rHisP.Tipo::Compra, "Orden precio",
                                                                                                FIELDCAPTION(Zona),
                                                                                                FORMAT(xRec.Zona), FORMAT(Zona));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Location;
                                                              ESP=Zona];
                                                   NotBlank=Yes;
                                                   Description=FK Zona Fisica }
    { 47  ;   ;Excursion           ;Code10        ;TableRelation="Producto agencia".Codigo WHERE (Tipo Producto=CONST(Excursion),
                                                                                                  Caducado=CONST(No));
                                                   OnValidate=VAR
                                                                rExcursion@1103355000 : Record 7009710;
                                                              BEGIN
                                                                IF Excursion <> xRec.Excursion THEN
                                                                BEGIN
                                                                  IF Excursion <> '' THEN
                                                                  BEGIN
                                                                    IF NOT rExcursion.GET(Excursion) THEN
                                                                      ERROR(Text013);

                                                                    // $002
                                                                    cFunExc.ControlExcursionConOficinaProd(rExcursion, TRUE, TRUE);
                                                                  END;

                                                                  VALIDATE(Activo, FALSE);

                                                                  cPar.intro_historico_precios_TO(Delegacion, "N§ Contrato", rHisP.Tipo::Compra, "Orden precio",
                                                                                                FIELDCAPTION(Excursion),
                                                                                                FORMAT(xRec.Excursion), FORMAT(Excursion));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Excursion;
                                                              ESP=Excursion];
                                                   Description=FK Producto Agencia }
    { 49  ;   ;Porcentaje Comision ;Decimal       ;OnValidate=BEGIN
                                                                IF "Porcentaje Comision" <> xRec."Porcentaje Comision" THEN
                                                                  cPar.intro_historico_precios_TO(Delegacion, "N§ Contrato", rHisP.Tipo::Compra, "Orden precio",
                                                                                                FIELDCAPTION("Porcentaje Comision"),
                                                                                                FORMAT(xRec."Porcentaje Comision"), FORMAT("Porcentaje Comision"));
                                                              END;

                                                   CaptionML=[ENU=Commission percentage;
                                                              ESP=Porcentaje comision];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="C¢d. divisa" }
    { 51  ;   ;Tipo venta          ;Option        ;OnValidate=BEGIN
                                                                IF "Tipo venta" <> xRec."Tipo venta" THEN
                                                                BEGIN
                                                                  cPar.intro_historico_precios_TO(Delegacion, "N§ Contrato", rHisP.Tipo::Compra, "Orden precio",
                                                                                                FIELDCAPTION("Tipo venta"),
                                                                                                FORMAT(xRec."Tipo venta"), FORMAT("Tipo venta"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Sales type;
                                                              ESP=Tipo venta];
                                                   OptionCaptionML=[ENU=Direct,Credit;
                                                                    ESP=Contado,Crdito];
                                                   OptionString=Contado,Credito;
                                                   Description=$007 }
  }
  KEYS
  {
    {    ;Delegacion,N§ Contrato,Orden precio     ;Clustered=Yes }
    {    ;Excursion,Zona,Activo,Fecha desde,Fecha hasta;
                                                   KeyGroups=RENUMERING }
    {    ;N§ Contrato,Excursion,Zona,Fecha desde,Fecha hasta;
                                                   KeyGroups=RENUMERING }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1103355004 : TextConst 'ENU=Database parameters folder does not exist;ESP=No existe el fichero de parametros de la B. D.';
      Text001@1103355005 : TextConst 'ENU=To sign up purchase prices of transfer is only available  in the local offices;ESP=Solo es posible dar de alta precios de compra de transfer en las Delegaciones.';
      Text002@1103355006 : TextConst 'ENU=To modify purchase prices of transfer is only available  in the local offices;ESP=Solo es posible modificar precios de compra de transfer en las Delegaciones.';
      Text003@1103355007 : TextConst 'ENU=Specify a zone;ESP=Especifique una zona';
      Text004@1103355008 : TextConst 'ENU=Specify an excursion;ESP=Especifique una excursion';
      Text005@1103355009 : TextConst 'ENU=Specify a  correct date from;ESP=Especifique una fecha desde correcta';
      Text006@1103355010 : TextConst 'ENU=Specify a  correct date to;ESP=Especifique una fecha hasta correcta';
      Text007@1103355011 : TextConst 'ENU=To cancel purchase prices of transfer is only available  in the local offices;ESP=Solo es posible dar de baja precios de compra de transfer en las Delegaciones.';
      Text008@1103355012 : TextConst 'ENU=Deleted;ESP=Borrado';
      Text009@1103355013 : TextConst 'ENU=Register deleted;ESP=Registro Borrado';
      Text010@1103355014 : TextConst 'ENU=Only is possible to rename transfer purchase prices in the Local Offices;ESP=Solo es posible renombrar precios de compra de transfer en las Delegaciones.';
      Text011@1103355015 : TextConst 'ENU=Date from cannot be higher than date to;ESP=La fecha desde no puede ser posterior a la fecha hasta.';
      Text012@1103355016 : TextConst 'ENU=Indicate a correct zone;ESP=Indique una zona correcta';
      Text013@1103355017 : TextConst 'ENU=Date from is not within the period of the contract;ESP=La fecha desde no esta entre el periodo del contrato';
      Text014@1103355018 : TextConst 'ENU=Date to is not within the period of the contract;ESP=La fecha hasta no esta entre el periodo del contrato';
      Text015@1103355019 : TextConst 'ENU=This price overlaps with another entered price;ESP=Este precio se solapa con otro precio ya introducido.';
      Text016@1103355020 : TextConst 'ENU=Contract does not exist for this register;ESP=No existe el contrato para este registro';
      Text017@1103355021 : TextConst 'ENU=COPY PRICES FROM ONE PRODUCTTO ANOTHER ONE\;ESP=COPIAR PRECIOS DE UN PRODUCTO A OTRO\';
      Text018@1103355022 : TextConst 'ENU=Origin Product  #1########\;ESP=Producto Origen  #1########\';
      Text019@1103355023 : TextConst 'ENU=Destination Product  #2########;ESP=Producto Destino #2########';
      Text020@1103355024 : TextConst 'ENU=Excursion product %1 does not exist;ESP=No existe el producto de excursion %1';
      rPar@1103355000 : Record 7009700;
      cPar@1103355001 : Codeunit 7009700;
      cFunExc@1100217000 : Codeunit 7010141;
      rPre@1103355002 : Record 7010153;
      rHisP@1103355003 : Record 7010158;
      rTo@1000000000 : Record 7009717;
      rProdAg@1000000002 : Record 7009710;
      cSincroCOM@1000000001 : Codeunit 7009793;

    PROCEDURE Activar_Precio@2() : Boolean;
    VAR
      rConC@1103355000 : Record 7010142;
      rPrecio@1103355001 : Record 7010153;
    BEGIN
      IF rConC.GET(Delegacion,"N§ Contrato", rConC."Tipo Contrato"::TourOperador) THEN BEGIN
        IF NOT rConC.Confirmado THEN
          EXIT(FALSE);
        IF ("Fecha desde" = 0D) OR ("Fecha hasta" = 0D) THEN
          EXIT(FALSE);
        IF ("Fecha desde" < rConC."Fecha inicio contrato") OR
             ("Fecha desde" > rConC."Fecha final contrato") THEN BEGIN
          MESSAGE(Text013);
          EXIT(FALSE);
        END;

        IF ("Fecha hasta" < rConC."Fecha inicio contrato") OR
             ("Fecha hasta" > rConC."Fecha final contrato") THEN BEGIN
          MESSAGE(Text014);
          EXIT(FALSE);
        END;
      END;

      rPrecio.RESET;
      rPrecio.SETCURRENTKEY(Excursion, Zona, Activo, "Fecha desde", "Fecha hasta");
      rPrecio.SETRANGE (Delegacion     ,Delegacion);
      rPrecio.SETRANGE ("N§ Contrato"  ,"N§ Contrato");
      rPrecio.SETRANGE (Excursion      ,Excursion);
      rPrecio.SETRANGE (Zona           ,Zona);
      rPrecio.SETFILTER("Orden precio" , '<>%1',"Orden precio");
      rPrecio.SETRANGE (Activo         , TRUE);

      rPrecio.SETFILTER("Fecha desde"  , '<=%1',"Fecha desde");
      rPrecio.SETFILTER("Fecha hasta"  , '>=%1',"Fecha desde");
      rPrecio.SETRANGE ("Tipo venta"   , "Tipo venta");  // +$007
      IF rPrecio.FINDFIRST THEN BEGIN
        MESSAGE(Text015);
        EXIT(FALSE);
      END;

      rPrecio.SETFILTER("Fecha desde"  , '<=%1',"Fecha hasta");
      rPrecio.SETFILTER("Fecha hasta"  , '>=%1',"Fecha hasta");
      IF rPrecio.FINDFIRST THEN BEGIN
        MESSAGE(Text015);
        EXIT(FALSE);
      END;

      rPrecio.SETFILTER("Fecha desde"  , '>=%1',"Fecha desde");
      rPrecio.SETFILTER("Fecha hasta"  , '<=%1',"Fecha hasta");
      IF rPrecio.FINDFIRST THEN BEGIN
        MESSAGE(Text015);
        EXIT(FALSE);
      END;

      //IF (Zona = '') OR (Excursion = '') OR ("Fecha desde" = 0D) OR ("Fecha hasta" = 0D) THEN
      IF ("Fecha desde" = 0D) OR ("Fecha hasta" = 0D) THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE Comprobar_Contrato@1();
    VAR
      rContrato@1103355000 : Record 7010142;
    BEGIN
      // comprobar_contrato

      IF NOT rContrato.GET(Delegacion, "N§ Contrato", rContrato."Tipo Contrato"::TourOperador) THEN
        ERROR(Text016);

      IF "Fecha desde" <> 0D THEN
        IF ("Fecha desde" < rContrato."Fecha inicio contrato") OR
           ("Fecha desde" > rContrato."Fecha final contrato") THEN
          MESSAGE(Text013);

      IF "Fecha hasta" <> 0D THEN
        IF ("Fecha hasta" < rContrato."Fecha inicio contrato") OR
           ("Fecha hasta" > rContrato."Fecha final contrato") THEN
          MESSAGE(Text014);
    END;

    PROCEDURE copiar_precios@3();
    VAR
      rProd@1103355000 : Record 7009710;
      rPrecio@1103355001 : Record 7010153;
      rPrecio2@1103355002 : Record 7010153;
      ventana@1103355003 : Dialog;
      w_producto@1103355004 : Code[10];
    BEGIN
      // copiar_contrato

      ventana.OPEN(Text017 +
                   '\' +
                   Text018+
                   Text019);
      ventana.UPDATE(1, Excursion);
      ventana.INPUT(2, w_producto);
      ventana.CLOSE;
      IF Excursion = w_producto THEN
        EXIT;
      rProd.RESET;
      rProd.SETRANGE("Tipo Producto", rProd."Tipo Producto"::Excursion);
      rProd.SETRANGE(Codigo         , w_producto);
      IF NOT rProd.FINDFIRST THEN
        ERROR(Text020, w_producto);

      rPrecio.RESET;
      rPrecio.SETRANGE(Delegacion   , Delegacion);
      rPrecio.SETRANGE("N§ Contrato", "N§ Contrato");
      rPrecio.SETRANGE(Excursion    , Excursion);
      IF rPrecio.FINDSET THEN BEGIN
        REPEAT
          rPrecio2 := rPrecio;
          rPrecio2.Excursion := w_producto;
          rPrecio2.Activo := FALSE;
          rPrecio2.INSERT(TRUE);
        UNTIL rPrecio.NEXT = 0;
      END;
    END;

    BEGIN
    {
      $001 AJS 31052012 Iniciar las fechas con el periodo del contrato

      $002 JPT 08/08/12 CNT-OC-12004 Incluir filtro por oficina en las excursiones. Control de Oficina en Excursion

      $003 AJS 20092012 Modifico para que no sea obligatorio utilizar un codigo de excursion.

      $004 AJS 19062013 Llamo a la activacion de precio en el OnModify

      $005 AJS 20062013 El campo "Precio (DL)" es obsoleto

      $006 ARM 12032015 CNT-CAR-14096 Comercializadora

      $007 ARM 26032015 CNT-OC-14053 A¤adido campo Tipo venta
    }
    END.
  }
}
