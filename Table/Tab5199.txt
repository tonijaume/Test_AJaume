OBJECT Table 5199 Attendee
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=NAVW16.00.01;
  }
  PROPERTIES
  {
    OnInsert=VAR
               Todo2@1005 : Record 5080;
             BEGIN
               ValidateAttendee(Rec,Attendee);
               Todo2.GET("To-do No.");
               Todo2.CreateSubTodo(Rec,Todo2);
               MobSalesMgt.TodoOnModify(Todo2);
             END;

    OnModify=VAR
               Todo@1000 : Record 5080;
             BEGIN
               ValidateAttendee(Rec,Attendee);
               IF xRec."Attendance Type" = "Attendance Type"::"To-do Organizer" THEN BEGIN
                 IF "Attendance Type" <> xRec."Attendance Type" THEN
                   ERROR(Text006,FIELDCAPTION("Attendance Type"));
                 IF "Attendee No." <> xRec."Attendee No." THEN
                   ERROR(Text008);
               END ELSE
                 IF "Attendee No." <> xRec."Attendee No." THEN BEGIN
                   Todo.DeleteAttendeeTodo(xRec);
                   Todo.GET("To-do No.");
                   Todo.CreateSubTodo(Rec,Todo);
                   MobSalesMgt.TodoOnModify(Todo);
                  END ELSE
                   IF (xRec."Invitation Response Type" <> "Invitation Response Type") OR
                      (xRec."Invitation Sent" <> "Invitation Sent")
                   THEN
                     EXIT;
             END;

    OnDelete=BEGIN
               IF "Attendance Type" = "Attendance Type"::"To-do Organizer" THEN
                 ERROR(Text005);
               Todo.DeleteAttendeeTodo(Rec);

               Todo.GET("To-do No.");
               MobSalesMgt.TodoOnModify(Todo);
             END;

    CaptionML=[ENU=Attendee;
               ESP=Asistente];
  }
  FIELDS
  {
    { 1   ;   ;To-do No.           ;Code20        ;TableRelation=To-do;
                                                   CaptionML=[ENU=To-do No.;
                                                              ESP=N§ tarea] }
    { 2   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              ESP=N§ l¡nea] }
    { 3   ;   ;Attendance Type     ;Option        ;OnValidate=VAR
                                                                Cont@1001 : Record 5050;
                                                                Salesperson@1000 : Record 13;
                                                              BEGIN
                                                                IF "Attendance Type" = "Attendance Type"::"To-do Organizer" THEN
                                                                  "Send Invitation" := TRUE
                                                                ELSE BEGIN
                                                                  IF "Attendee Type" = "Attendee Type"::Contact THEN BEGIN
                                                                    IF Cont.GET("Attendee No.") THEN
                                                                      "Send Invitation" := Cont."E-Mail" <> '';
                                                                  END ELSE
                                                                    IF Salesperson.GET("Attendee No.") THEN
                                                                      "Send Invitation" := Salesperson."E-Mail" <> '';
                                                                END
                                                              END;

                                                   CaptionML=[ENU=Attendance Type;
                                                              ESP=Tipo asistencia];
                                                   OptionCaptionML=[ENU=Required,Optional,To-do Organizer;
                                                                    ESP=Requerido,Opcional,Organizador tareas];
                                                   OptionString=Required,Optional,To-do Organizer }
    { 4   ;   ;Attendee Type       ;Option        ;OnValidate=BEGIN
                                                                IF "Attendee Type" <> xRec."Attendee Type" THEN BEGIN
                                                                  "Attendee No." := '';
                                                                  "Attendee Name" := '';
                                                                  "Send Invitation" := FALSE;
                                                                  IF "Attendance Type" = "Attendance Type"::"To-do Organizer" THEN
                                                                    "Send Invitation" := TRUE;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Attendee Type;
                                                              ESP=Tipo asistente];
                                                   OptionCaptionML=[ENU=Contact,Salesperson;
                                                                    ESP=Contacto,Vendedor];
                                                   OptionString=Contact,Salesperson }
    { 5   ;   ;Attendee No.        ;Code20        ;TableRelation=IF (Attendee Type=CONST(Contact)) Contact WHERE (No.=FIELD(Attendee No.))
                                                                 ELSE IF (Attendee Type=CONST(Salesperson)) Salesperson/Purchaser WHERE (Code=FIELD(Attendee No.));
                                                   OnValidate=VAR
                                                                Cont@1000 : Record 5050;
                                                                Salesperson@1001 : Record 13;
                                                              BEGIN
                                                                TESTFIELD("Attendee No.");
                                                                IF "Attendee Type" = "Attendee Type"::Contact THEN BEGIN
                                                                  Cont.GET("Attendee No.");
                                                                  "Attendee Name" := Cont.Name;
                                                                  IF CurrFieldNo <> 0 THEN
                                                                    "Send Invitation" := Cont."E-Mail" <> '';
                                                                END ELSE BEGIN
                                                                  Salesperson.GET("Attendee No.");
                                                                  "Attendee Name" := Salesperson.Name;
                                                                  IF CurrFieldNo <> 0 THEN
                                                                    IF "Attendance Type" <> "Attendance Type"::"To-do Organizer" THEN
                                                                      "Send Invitation" := Salesperson."E-Mail" <> '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Attendee No.;
                                                              ESP=N§ asistente] }
    { 6   ;   ;Attendee Name       ;Text50        ;CaptionML=[ENU=Attendee Name;
                                                              ESP=Nombre asistente];
                                                   Editable=No }
    { 7   ;   ;Send Invitation     ;Boolean       ;OnValidate=VAR
                                                                Cont@1000 : Record 5050;
                                                                Salesperson@1001 : Record 13;
                                                              BEGIN
                                                                IF NOT "Send Invitation" AND
                                                                   ("Attendance Type" = "Attendance Type"::"To-do Organizer")
                                                                THEN
                                                                  ERROR(Text007,FIELDCAPTION("Send Invitation"));

                                                                IF "Send Invitation" THEN
                                                                  IF "Attendee Type" = "Attendee Type"::Salesperson THEN BEGIN
                                                                    IF Salesperson.GET("Attendee No.") AND (Salesperson."E-Mail" = '') THEN
                                                                      ERROR(Text004,FIELDCAPTION("Send Invitation"),Salesperson.Name);
                                                                  END ELSE
                                                                    IF Cont.GET("Attendee No.") AND (Cont."E-Mail" = '') THEN
                                                                      ERROR(Text004,FIELDCAPTION("Send Invitation"),Cont.Name);
                                                              END;

                                                   CaptionML=[ENU=Send Invitation;
                                                              ESP=Enviar invitaci¢n] }
    { 8   ;   ;Invitation Response Type;Option    ;CaptionML=[ENU=Invitation Response Type;
                                                              ESP=Tipo respuesta invitaci¢n];
                                                   OptionCaptionML=[ENU=None,Accepted,Declined,Tentative;
                                                                    ESP=Ninguno,Aceptado,Rechazado,Provisional];
                                                   OptionString=None,Accepted,Declined,Tentative }
    { 9   ;   ;Invitation Sent     ;Boolean       ;CaptionML=[ENU=Invitation Sent;
                                                              ESP=Invitaci¢n enviada] }
  }
  KEYS
  {
    {    ;To-do No.,Line No.                      ;Clustered=Yes }
    {    ;To-do No.,Attendee Type,Attendee No.     }
    {    ;To-do No.,Attendance Type                }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1002 : TextConst 'ENU=A to-do organizer must always be a salesperson.;ESP=Un organizador de tarea debe siempre ser un vendedor.';
      Text002@1001 : TextConst 'ENU=You cannot have more than one to-do organizer.;ESP=No puede tener m s de un organizador de tareas.';
      Text003@1000 : TextConst 'ENU=This attendee already exists.;ESP=Este asistente ya existe.';
      Attendee@1003 : Record 5199;
      Todo@1004 : Record 5080;
      Text004@1005 : TextConst 'ENU=You cannot select the %1 for %2 because he/she does not have an e-mail address.;ESP=No puede seleccionar el %1 para %2 por que no tiene direcci¢n de correo electr¢nico.';
      Text005@1006 : TextConst 'ENU=You cannot delete a to-do organizer.;ESP=No puede borrar el organizador de tareas.';
      Text006@1007 : TextConst 'ENU=You cannot change an %1 for a to-do organizer.;ESP=No puede cambiar un %1 por un organizador de tareas.';
      Text007@1008 : TextConst 'ENU=The %1 option is not available for a to-do organizer.;ESP=La opci¢n%1 no est  disponible para un organiz. de tareas.';
      Text008@1010 : TextConst 'ENU=You cannot change the to-do organizer.;ESP=No puede cambiar el organizador de tareas.';
      Text010@1014 : TextConst 'ENU=You cannot add this attendee because an attendee with this e-mail address already exists.;ESP=No puede a¤adir este asistente por que ya existe un asistente con esta direcci¢n de correo electr¢nico.';
      Text011@1009 : TextConst 'ENU=You cannot set %1 as organizer because he/she does not have e-mail address.;ESP=No puede asignar a %1 como organizador porque no tiene una direcci¢n de correo electr¢nico.';
      MobSalesMgt@1011 : Codeunit 8726;

    PROCEDURE ValidateAttendee@4(AttendeeRec@1000 : Record 5199;VAR Attendee@1001 : Record 5199);
    VAR
      Cont@1003 : Record 5050;
      Salesperson@1004 : Record 13;
      SearchEMail@1002 : Text[80];
    BEGIN
      AttendeeRec.TESTFIELD("Attendee No.");
      ValidateOrganizer(AttendeeRec."Attendee No.",AttendeeRec."Attendance Type",AttendeeRec."Attendee Type");

      IF (AttendeeRec."Attendance Type" = "Attendance Type"::"To-do Organizer") THEN BEGIN
        IF AttendeeRec."Attendee Type" = "Attendee Type"::Contact THEN
          ERROR(Text001);

        Attendee.SETRANGE("To-do No.",AttendeeRec."To-do No.");
        Attendee.SETRANGE("Attendance Type","Attendance Type"::"To-do Organizer");
        IF Attendee.FIND('-') THEN BEGIN
          IF Attendee."Line No." <> AttendeeRec."Line No." THEN BEGIN
            Attendee.RESET;
            ERROR(Text002);
          END;
        END;
        Attendee.RESET;
      END;

      Attendee.SETRANGE("To-do No.",AttendeeRec."To-do No.");
      Attendee.SETFILTER("Attendee No.",AttendeeRec."Attendee No.");
      IF Attendee.FIND('-') THEN BEGIN
        IF Attendee."Line No." <> AttendeeRec."Line No." THEN BEGIN
          Attendee.RESET;
          ERROR(Text003);
        END;
      END;
      Attendee.RESET;
      IF AttendeeRec."Send Invitation" THEN BEGIN
        Attendee.SETRANGE("To-do No.",AttendeeRec."To-do No.");
        Attendee.SETRANGE(Attendee."Send Invitation",TRUE);

        IF AttendeeRec."Attendee Type" = AttendeeRec."Attendee Type"::Contact THEN BEGIN
          IF Cont.GET(AttendeeRec."Attendee No.") THEN
            SearchEMail := Cont."Search E-Mail";
        END ELSE
          IF Salesperson.GET(AttendeeRec."Attendee No.") THEN
            SearchEMail := Salesperson."Search E-Mail";

        IF SearchEMail = '' THEN BEGIN
          Attendee.RESET;
          EXIT;
        END;

        IF Attendee.FIND('-') THEN
          REPEAT
            IF Attendee."Attendee Type" = Attendee."Attendee Type"::Contact THEN BEGIN
              IF Cont.GET(Attendee."Attendee No.") THEN
                Cont.MARK(TRUE);
            END ELSE
              IF Salesperson.GET(Attendee."Attendee No.") THEN
                Salesperson.MARK(TRUE);
          UNTIL Attendee.NEXT = 0;
        Attendee.RESET;
        Attendee.SETRANGE("To-do No.",AttendeeRec."To-do No.");
        Attendee.SETRANGE("Attendance Type","Attendance Type"::"To-do Organizer");
        IF Attendee.FIND('-') THEN
          IF Salesperson.GET(Attendee."Attendee No.") THEN
            Salesperson.MARK(TRUE);
        Salesperson.MARKEDONLY(TRUE);
        IF NOT Salesperson.ISEMPTY THEN BEGIN
          Salesperson.SETCURRENTKEY("Search E-Mail");
          Salesperson.SETFILTER("Search E-Mail",'=%1',SearchEMail);
          IF Salesperson.FIND('-') AND (Salesperson.Code <> AttendeeRec."Attendee No.") THEN BEGIN
            IF Attendee.GET(AttendeeRec."To-do No.",AttendeeRec."Line No.") THEN BEGIN
              IF (Attendee."Attendee No." <> Salesperson.Code) THEN BEGIN
                Attendee.RESET;
                ERROR(Text010);
              END;
            END ELSE BEGIN
              Attendee.RESET;
              ERROR(Text010);
            END;
          END;
        END;
        Cont.MARKEDONLY(TRUE);
        IF NOT Cont.ISEMPTY THEN BEGIN
          Cont.SETCURRENTKEY("Search E-Mail");
          Cont.SETFILTER("Search E-Mail",'=%1',SearchEMail);
          IF Cont.FIND('-') AND (Cont."No." <> AttendeeRec."Attendee No.") THEN BEGIN
            IF Attendee.GET(AttendeeRec."To-do No.",AttendeeRec."Line No.") THEN BEGIN
              IF (Attendee."Attendee No." <> Cont."No.") THEN BEGIN
                Attendee.RESET;
                ERROR(Text010);
              END;
            END ELSE BEGIN
              Attendee.RESET;
              ERROR(Text010);
            END;
          END;
        END;
        Attendee.RESET;
      END;
    END;

    PROCEDURE CreateAttendee@5(VAR Attendee@1005 : Record 5199;TodoNo@1006 : Code[20];LineNo@1003 : Integer;AttendanceType@1002 : Integer;AttendeeType@1001 : Integer;AttendeeNo@1000 : Code[20];SendInvitation@1004 : Boolean);
    BEGIN
      ValidateOrganizer(AttendeeNo,AttendanceType,AttendeeType);

      Attendee.INIT;
      Attendee."To-do No." := TodoNo;
      Attendee."Line No." := LineNo;
      Attendee."Attendance Type" := AttendanceType;
      Attendee.VALIDATE("Attendee Type",AttendeeType);
      Attendee.VALIDATE("Attendee No.",AttendeeNo);
      IF Attendee."Attendance Type" <> Attendee."Attendance Type"::"To-do Organizer" THEN
        Attendee.VALIDATE("Send Invitation",SendInvitation)
      ELSE
        Attendee.VALIDATE("Send Invitation",TRUE);
      IF NOT Attendee.GET(Attendee."To-do No.",Attendee."Line No.") THEN
        Attendee.INSERT;
    END;

    PROCEDURE ValidateOrganizer@1(AttendeeNo@1001 : Code[20];AttendanceType@1002 : Integer;AttendeeType@1003 : Integer);
    VAR
      SalesPurchPerson@1000 : Record 13;
    BEGIN
      IF AttendanceType <> Attendee."Attendance Type"::"To-do Organizer" THEN
        EXIT;

      IF AttendeeType = "Attendee Type"::Contact THEN
        ERROR(Text001);

      SalesPurchPerson.GET(AttendeeNo);
      IF SalesPurchPerson."E-Mail" = '' THEN
        ERROR(Text011,SalesPurchPerson.Name);
    END;

    BEGIN
    END.
  }
}
