OBJECT Table 17 G/L Entry
{
  OBJECT-PROPERTIES
  {
    Date=13/04/15;
    Time=13:38:16;
    Modified=Yes;
    Version List=AIC2009,NAVW16.00,CACEM5.00,NAVES6.00.01;
  }
  PROPERTIES
  {
    OnInsert=BEGIN

               // $001 INCOMING
               // El departamento es la primera dimension global

               IF "Global Dimension 1 Code" =  '' THEN BEGIN
                 rPar.FIND('-');
                 VALIDATE("Global Dimension 1 Code", rPar.Delegacion);
               END;
             END;

    CaptionML=[ENU=G/L Entry;
               ESP=Mov. contabilidad];
    LookupFormID=Form20;
    DrillDownFormID=Form20;
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;CaptionML=[ENU=Entry No.;
                                                              ESP=N§ mov.] }
    { 3   ;   ;G/L Account No.     ;Text20        ;TableRelation="G/L Account";
                                                   CaptionML=[ENU=G/L Account No.;
                                                              ESP=N§ cuenta] }
    { 4   ;   ;Posting Date        ;Date          ;OnValidate=BEGIN
                                                                IF "Posting Date" <> xRec."Posting Date" THEN
                                                                  cFunPar.CambiaFechaAsiento(Rec);
                                                              END;

                                                   CaptionML=[ENU=Posting Date;
                                                              ESP=Fecha registro];
                                                   ClosingDates=Yes }
    { 5   ;   ;Document Type       ;Option        ;CaptionML=[ENU=Document Type;
                                                              ESP=Tipo documento];
                                                   OptionCaptionML=[ENU=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund,,,,,,,,,,,,,,,Bill";
                                                                    ESP=" ,Pago,Factura,Abono,Docs. inter‚s,Recordatorio,Reembolso,,,,,,,,,,,,,,,Efecto"];
                                                   OptionString=[ ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund,,,,,,,,,,,,,,,Bill] }
    { 6   ;   ;Document No.        ;Code20        ;OnValidate=BEGIN
                                                                IF "Document No." <> xRec."Document No." THEN
                                                                  cFunPar.CambiaDocumentoAsiento(Rec);
                                                              END;

                                                   CaptionML=[ENU=Document No.;
                                                              ESP=N§ documento] }
    { 7   ;   ;Description         ;Text80        ;CaptionML=[ENU=Description;
                                                              ESP=Descripci¢n] }
    { 10  ;   ;Bal. Account No.    ;Text20        ;TableRelation=IF (Bal. Account Type=CONST(G/L Account)) "G/L Account"
                                                                 ELSE IF (Bal. Account Type=CONST(Customer)) Customer
                                                                 ELSE IF (Bal. Account Type=CONST(Vendor)) Vendor
                                                                 ELSE IF (Bal. Account Type=CONST(Bank Account)) "Bank Account"
                                                                 ELSE IF (Bal. Account Type=CONST(Fixed Asset)) "Fixed Asset"
                                                                 ELSE IF (Bal. Account Type=CONST(IC Partner)) "IC Partner";
                                                   CaptionML=[ENU=Bal. Account No.;
                                                              ESP=Cta. contrapartida] }
    { 17  ;   ;Amount              ;Decimal       ;CaptionML=[ENU=Amount;
                                                              ESP=Importe];
                                                   AutoFormatType=1 }
    { 23  ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=[ENU=Global Dimension 1 Code;
                                                              ESP=C¢d. dimensi¢n global 1];
                                                   CaptionClass='1,1,1' }
    { 24  ;   ;Global Dimension 2 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=[ENU=Global Dimension 2 Code;
                                                              ESP=C¢d. dimensi¢n global 2];
                                                   CaptionClass='1,1,2' }
    { 27  ;   ;User ID             ;Code20        ;TableRelation=User;
                                                   OnLookup=VAR
                                                              LoginMgt@1000 : Codeunit 418;
                                                            BEGIN
                                                              LoginMgt.LookupUserID("User ID");
                                                            END;

                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=User ID;
                                                              ESP=Id. usuario] }
    { 28  ;   ;Source Code         ;Code10        ;TableRelation="Source Code";
                                                   CaptionML=[ENU=Source Code;
                                                              ESP=C¢d. origen] }
    { 29  ;   ;System-Created Entry;Boolean       ;CaptionML=[ENU=System-Created Entry;
                                                              ESP=Asiento autom tico] }
    { 30  ;   ;Prior-Year Entry    ;Boolean       ;CaptionML=[ENU=Prior-Year Entry;
                                                              ESP=Asiento post-cierre] }
    { 41  ;   ;Job No.             ;Code20        ;TableRelation=Job;
                                                   CaptionML=[ENU=Job No.;
                                                              ESP=N§ proyecto] }
    { 42  ;   ;Quantity            ;Decimal       ;CaptionML=[ENU=Quantity;
                                                              ESP=Cantidad];
                                                   DecimalPlaces=0:5 }
    { 43  ;   ;VAT Amount          ;Decimal       ;CaptionML=[ENU=VAT Amount;
                                                              ESP=Importe IVA];
                                                   AutoFormatType=1 }
    { 45  ;   ;Business Unit Code  ;Code10        ;TableRelation="Business Unit";
                                                   CaptionML=[ENU=Business Unit Code;
                                                              ESP=C¢d. empresa] }
    { 46  ;   ;Journal Batch Name  ;Code10        ;CaptionML=[ENU=Journal Batch Name;
                                                              ESP=Nombre secci¢n diario] }
    { 47  ;   ;Reason Code         ;Code10        ;TableRelation="Reason Code";
                                                   CaptionML=[ENU=Reason Code;
                                                              ESP=C¢d. auditor¡a] }
    { 48  ;   ;Gen. Posting Type   ;Option        ;CaptionML=[ENU=Gen. Posting Type;
                                                              ESP=Tipo IVA];
                                                   OptionCaptionML=[ENU=" ,Purchase,Sale,Settlement";
                                                                    ESP=" ,Compra,Venta,Liquidaci¢n"];
                                                   OptionString=[ ,Purchase,Sale,Settlement] }
    { 49  ;   ;Gen. Bus. Posting Group;Code10     ;TableRelation="Gen. Business Posting Group";
                                                   CaptionML=[ENU=Gen. Bus. Posting Group;
                                                              ESP=Grupo contable negocio] }
    { 50  ;   ;Gen. Prod. Posting Group;Code10    ;TableRelation="Gen. Product Posting Group";
                                                   CaptionML=[ENU=Gen. Prod. Posting Group;
                                                              ESP=Grupo contable producto] }
    { 51  ;   ;Bal. Account Type   ;Option        ;CaptionML=[ENU=Bal. Account Type;
                                                              ESP=Tipo contrapartida];
                                                   OptionCaptionML=[ENU=G/L Account,Customer,Vendor,Bank Account,Fixed Asset,IC Partner;
                                                                    ESP=Cuenta,Cliente,Proveedor,Banco,Activo,Empresa vinculada asociada];
                                                   OptionString=G/L Account,Customer,Vendor,Bank Account,Fixed Asset,IC Partner }
    { 52  ;   ;Transaction No.     ;Integer       ;CaptionML=[ENU=Transaction No.;
                                                              ESP=N§ asiento] }
    { 53  ;   ;Debit Amount        ;Decimal       ;CaptionML=[ENU=Debit Amount;
                                                              ESP=Importe debe];
                                                   BlankZero=Yes;
                                                   AutoFormatType=1 }
    { 54  ;   ;Credit Amount       ;Decimal       ;CaptionML=[ENU=Credit Amount;
                                                              ESP=Importe haber];
                                                   BlankZero=Yes;
                                                   AutoFormatType=1 }
    { 55  ;   ;Document Date       ;Date          ;OnValidate=BEGIN
                                                                IF "Document Date" <> xRec."Document Date" THEN
                                                                  cFunPar.CambiaFechaEmisionAsiento(Rec);
                                                              END;

                                                   CaptionML=[ENU=Document Date;
                                                              ESP=Fecha emisi¢n documento];
                                                   ClosingDates=Yes }
    { 56  ;   ;External Document No.;Code20       ;CaptionML=[ENU=External Document No.;
                                                              ESP=N§ documento externo] }
    { 57  ;   ;Source Type         ;Option        ;CaptionML=[ENU=Source Type;
                                                              ESP=Tipo procedencia mov.];
                                                   OptionCaptionML=[ENU=" ,Customer,Vendor,Bank Account,Fixed Asset";
                                                                    ESP=" ,Cliente,Proveedor,Banco,Activo"];
                                                   OptionString=[ ,Customer,Vendor,Bank Account,Fixed Asset] }
    { 58  ;   ;Source No.          ;Code20        ;TableRelation=IF (Source Type=CONST(Customer)) Customer
                                                                 ELSE IF (Source Type=CONST(Vendor)) Vendor
                                                                 ELSE IF (Source Type=CONST(Bank Account)) "Bank Account"
                                                                 ELSE IF (Source Type=CONST(Fixed Asset)) "Fixed Asset";
                                                   CaptionML=[ENU=Source No.;
                                                              ESP=C¢d. procedencia mov.] }
    { 59  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              ESP=Nos. serie] }
    { 60  ;   ;Tax Area Code       ;Code20        ;TableRelation="Tax Area";
                                                   CaptionML=[ENU=Tax Area Code;
                                                              ESP=C¢d.  rea impuesto] }
    { 61  ;   ;Tax Liable          ;Boolean       ;CaptionML=[ENU=Tax Liable;
                                                              ESP=Sujeto a impuesto] }
    { 62  ;   ;Tax Group Code      ;Code10        ;TableRelation="Tax Group";
                                                   CaptionML=[ENU=Tax Group Code;
                                                              ESP=C¢d. grupo impuesto] }
    { 63  ;   ;Use Tax             ;Boolean       ;CaptionML=[ENU=Use Tax;
                                                              ESP=Utilizar impuesto] }
    { 64  ;   ;VAT Bus. Posting Group;Code10      ;TableRelation="VAT Business Posting Group";
                                                   CaptionML=[ENU=VAT Bus. Posting Group;
                                                              ESP=Grupo registro IVA neg.] }
    { 65  ;   ;VAT Prod. Posting Group;Code10     ;TableRelation="VAT Product Posting Group";
                                                   CaptionML=[ENU=VAT Prod. Posting Group;
                                                              ESP=Grupo registro IVA prod.] }
    { 68  ;   ;Additional-Currency Amount;Decimal ;CaptionML=[ENU=Additional-Currency Amount;
                                                              ESP=Importe divisa-adicional];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 69  ;   ;Add.-Currency Debit Amount;Decimal ;CaptionML=[ENU=Add.-Currency Debit Amount;
                                                              ESP=Debe div.-adic.];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 70  ;   ;Add.-Currency Credit Amount;Decimal;CaptionML=[ENU=Add.-Currency Credit Amount;
                                                              ESP=Haber div.-adic.];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 71  ;   ;Close Income Statement Dim. ID;Integer;
                                                   CaptionML=[ENU=Close Income Statement Dim. ID;
                                                              ESP=ID dim. asiento regularizaci¢n] }
    { 72  ;   ;IC Partner Code     ;Code20        ;TableRelation="IC Partner";
                                                   CaptionML=[ENU=IC Partner Code;
                                                              ESP=C¢digo socio IC] }
    { 73  ;   ;Reversed            ;Boolean       ;CaptionML=[ENU=Reversed;
                                                              ESP=Revertido] }
    { 74  ;   ;Reversed by Entry No.;Integer      ;TableRelation="G/L Entry";
                                                   CaptionML=[ENU=Reversed by Entry No.;
                                                              ESP=Revertido por el movimiento n§];
                                                   BlankZero=Yes }
    { 75  ;   ;Reversed Entry No.  ;Integer       ;TableRelation="G/L Entry";
                                                   CaptionML=[ENU=Reversed Entry No.;
                                                              ESP=N§ movimiento revertido];
                                                   BlankZero=Yes }
    { 76  ;   ;G/L Account Name    ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("G/L Account".Name WHERE (No.=FIELD(G/L Account No.)));
                                                   CaptionML=[ENU=G/L Account Name;
                                                              ESP=Nombre cuenta];
                                                   Editable=No }
    { 5400;   ;Prod. Order No.     ;Code20        ;CaptionML=[ENU=Prod. Order No.;
                                                              ESP=N§ orden producci¢n] }
    { 5600;   ;FA Entry Type       ;Option        ;CaptionML=[ENU=FA Entry Type;
                                                              ESP=A/F Tipo mov.];
                                                   OptionCaptionML=[ENU=" ,Fixed Asset,Maintenance";
                                                                    ESP=" ,Activo,Mantenimiento"];
                                                   OptionString=[ ,Fixed Asset,Maintenance] }
    { 5601;   ;FA Entry No.        ;Integer       ;TableRelation=IF (FA Entry Type=CONST(Fixed Asset)) "FA Ledger Entry"
                                                                 ELSE IF (FA Entry Type=CONST(Maintenance)) "Maintenance Ledger Entry";
                                                   CaptionML=[ENU=FA Entry No.;
                                                              ESP=A/F N§ mov.];
                                                   BlankZero=Yes }
    { 10720;  ;New G/L Account No. ;Text20        ;TableRelation="New G/L Account".No.;
                                                   OnValidate=VAR
                                                                GLAccEqTool@1100000 : Record 10720;
                                                              BEGIN
                                                                IF "New G/L Account No." = '' THEN BEGIN
                                                                  IF GLAccEqTool.GET("G/L Account No.") THEN BEGIN
                                                                    GLAccEqTool.Ready := FALSE;
                                                                    GLAccEqTool.Implement := FALSE;
                                                                    GLAccEqTool.MODIFY;
                                                                  END
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=New G/L Account No.;
                                                              ESP=N§ de cuenta nuevo] }
    { 10721;  ;Old G/L Account No. ;Text20        ;TableRelation="Historic G/L Account";
                                                   OnValidate=VAR
                                                                GLAccEqTool@1100001 : Record 10720;
                                                              BEGIN
                                                                IF "New G/L Account No." = '' THEN BEGIN
                                                                  IF GLAccEqTool.GET("G/L Account No.") THEN BEGIN
                                                                    GLAccEqTool.Ready := FALSE;
                                                                    GLAccEqTool.Implement := FALSE;
                                                                    GLAccEqTool.MODIFY;
                                                                  END
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Old G/L Account No.;
                                                              ESP=N§ de cuenta antiguo] }
    { 10722;  ;Updated             ;Boolean       ;CaptionML=[ENU=Updated;
                                                              ESP=Actualizado] }
    { 50002;  ;Tipo de clave       ;Code10        ;TableRelation="Maestro de Claves".Clave;
                                                   CaptionML=ESP=Tipo de clave;
                                                   Description=$003 "Maestro de Claves".Clave, INCOMING }
    { 50201;  ;Importe a conciliar ;Decimal       ;CaptionML=[ENU=Amount to Reconcile;
                                                              ESP=Importe a conciliar];
                                                   Description=$006 Conciliacion de cuentas;
                                                   AutoFormatType=1 }
    { 50202;  ;Pendiente           ;Boolean       ;CaptionML=[ENU=Pending;
                                                              ESP=Pendiente];
                                                   Description=$006 Conciliacion de cuentas }
    { 50203;  ;Importe pendiente   ;Decimal       ;CaptionML=[ENU=Pending Amount;
                                                              ESP=Importe pendiente];
                                                   Description=$006 Conciliacion de cuentas;
                                                   AutoFormatType=1 }
    { 50204;  ;Usuario conciliacion;Code20        ;TableRelation=User."User ID";
                                                   CaptionML=[ENU=User Conciliation;
                                                              ESP=Usuario conciliacion];
                                                   Description=$006 User."User ID",Conciliacion de cuentas }
    { 50205;  ;Importe conciliado  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Mov. Conciliacion cuenta"."Importe conciliado" WHERE (N§ Mov.=FIELD(Entry No.),
                                                                                                                          Fecha conciliacion=FIELD(Filtro fecha conciliacion)));
                                                   CaptionML=[ENU=Reconciled Amount;
                                                              ESP=Importe conciliado];
                                                   Description=$006 Conciliacion de cuentas }
    { 50206;  ;Filtro fecha conciliacion;Date     ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Conciliation Date Filter;
                                                              ESP=Filtro fecha conciliacion];
                                                   Description=$006 Conciliacion de cuentas }
    { 69069;  ;Debe div.-adic.     ;Decimal       ;Description=$003 Se convierte en campo 69;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 69070;  ;Haber div.-adic.    ;Decimal       ;Description=$003 Se convierte en campo 70;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 3010551;;Cost Entry No.      ;Integer       ;TableRelation="Cost Entry";
                                                   CaptionML=[ENU=Cost Entry No.;
                                                              ESP=N§ mov. coste] }
    { 7000000;;Bill No.            ;Code20        ;CaptionML=[ENU=Bill No.;
                                                              ESP=N§ efecto] }
    { 7009700;;Group account       ;Text20        ;TableRelation="G/L Account - corporative".No.;
                                                   CaptionML=[ENU=Group Account;
                                                              ESP=Cuenta corporativa];
                                                   Description=$012 }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
    {    ;G/L Account No.,Posting Date            ;SumIndexFields=Amount,Debit Amount,Credit Amount,Additional-Currency Amount,Add.-Currency Debit Amount,Add.-Currency Credit Amount }
    {    ;G/L Account No.,Global Dimension 1 Code,Global Dimension 2 Code,Posting Date;
                                                   SumIndexFields=Amount,Debit Amount,Credit Amount,Additional-Currency Amount,Add.-Currency Debit Amount,Add.-Currency Credit Amount;
                                                   KeyGroups=Acc(Dim);
                                                   SIFTLevelsToMaintain=[{G/L Account No.,Global Dimension 1 Code},
                                                                         {G/L Account No.,Global Dimension 1 Code,Global Dimension 2 Code},
                                                                         {G/L Account No.,Global Dimension 1 Code,Global Dimension 2 Code,Posting Date:Year},
                                                                         {G/L Account No.,Global Dimension 1 Code,Global Dimension 2 Code,Posting Date:Month},
                                                                         {G/L Account No.,Global Dimension 1 Code,Global Dimension 2 Code,Posting Date:Day}] }
    {    ;G/L Account No.,Business Unit Code,Posting Date;
                                                   SumIndexFields=Amount,Debit Amount,Credit Amount,Additional-Currency Amount,Add.-Currency Debit Amount,Add.-Currency Credit Amount;
                                                   KeyGroups=Acc(Cons);
                                                   SIFTLevelsToMaintain=[{G/L Account No.,Business Unit Code},
                                                                         {G/L Account No.,Business Unit Code,Posting Date:Year},
                                                                         {G/L Account No.,Business Unit Code,Posting Date:Month},
                                                                         {G/L Account No.,Business Unit Code,Posting Date:Day}] }
    {    ;G/L Account No.,Business Unit Code,Global Dimension 1 Code,Global Dimension 2 Code,Posting Date;
                                                   SumIndexFields=Amount,Debit Amount,Credit Amount,Additional-Currency Amount,Add.-Currency Debit Amount,Add.-Currency Credit Amount;
                                                   KeyGroups=Acc(D/C);
                                                   SIFTLevelsToMaintain=[{G/L Account No.,Business Unit Code},
                                                                         {G/L Account No.,Business Unit Code,Global Dimension 1 Code},
                                                                         {G/L Account No.,Business Unit Code,Global Dimension 1 Code,Global Dimension 2 Code},
                                                                         {G/L Account No.,Business Unit Code,Global Dimension 1 Code,Global Dimension 2 Code,Posting Date:Year},
                                                                         {G/L Account No.,Business Unit Code,Global Dimension 1 Code,Global Dimension 2 Code,Posting Date:Month},
                                                                         {G/L Account No.,Business Unit Code,Global Dimension 1 Code,Global Dimension 2 Code,Posting Date:Day}] }
    {    ;Document No.,Posting Date                }
    {    ;Transaction No.                          }
    {    ;Close Income Statement Dim. ID           }
    { No ;IC Partner Code                         ;KeyGroups=Acc(IC) }
    {    ;G/L Account No.,Job No.,Posting Date    ;SumIndexFields=Amount }
    {    ;Posting Date,G/L Account No.            ;SumIndexFields=Amount,Additional-Currency Amount }
    {    ;G/L Account No.,Document No.,Bill No.   ;SumIndexFields=Amount,Additional-Currency Amount }
    {    ;G/L Account No.,Description             ;SumIndexFields=Amount,Additional-Currency Amount }
    {    ;Old G/L Account No.,Posting Date        ;SumIndexFields=Amount,Debit Amount,Credit Amount,Additional-Currency Amount,Add.-Currency Debit Amount,Add.-Currency Credit Amount }
    {    ;Posting Date,Old G/L Account No.        ;SumIndexFields=Amount,Additional-Currency Amount }
    {    ;Old G/L Account No.,Business Unit Code,Global Dimension 1 Code,Global Dimension 2 Code,Close Income Statement Dim. ID,Posting Date;
                                                   SumIndexFields=Amount,Debit Amount,Credit Amount,Additional-Currency Amount,Add.-Currency Debit Amount,Add.-Currency Credit Amount }
    {    ;Old G/L Account No.,Global Dimension 1 Code,Global Dimension 2 Code,Posting Date;
                                                   SumIndexFields=Amount,Debit Amount,Credit Amount,Additional-Currency Amount,Add.-Currency Debit Amount,Add.-Currency Credit Amount }
    {    ;Old G/L Account No.,Business Unit Code,Global Dimension 1 Code,Global Dimension 2 Code,Posting Date;
                                                   SumIndexFields=Amount,Debit Amount,Credit Amount,Additional-Currency Amount,Add.-Currency Debit Amount,Add.-Currency Credit Amount }
    {    ;Old G/L Account No.,Business Unit Code,Posting Date;
                                                   SumIndexFields=Amount,Debit Amount,Credit Amount,Additional-Currency Amount,Add.-Currency Debit Amount,Add.-Currency Credit Amount }
    {    ;Document Date,Document Type,Source Type,Source No. }
    {    ;Tipo de clave,G/L Account No.,Posting Date;
                                                   SumIndexFields=Amount,Additional-Currency Amount;
                                                   KeyGroups=INCOMING;
                                                   MaintainSQLIndex=No;
                                                   SIFTLevelsToMaintain=[{Tipo de clave,G/L Account No.,Posting Date:Day}] }
    {    ;G/L Account No.,Usuario conciliacion    ;KeyGroups=COC;
                                                   MaintainSQLIndex=No }
    {    ;Group account,Posting Date              ;SumIndexFields=Amount,Debit Amount,Credit Amount,Additional-Currency Amount,Add.-Currency Debit Amount,Add.-Currency Credit Amount }
    {    ;Group account,Business Unit Code,Global Dimension 1 Code,Global Dimension 2 Code,Close Income Statement Dim. ID,Posting Date;
                                                   SumIndexFields=Amount,Debit Amount,Credit Amount,Additional-Currency Amount,Add.-Currency Debit Amount,Add.-Currency Credit Amount }
    {    ;Group account,Global Dimension 1 Code,Global Dimension 2 Code,Posting Date;
                                                   SumIndexFields=Amount,Debit Amount,Credit Amount,Additional-Currency Amount,Add.-Currency Debit Amount,Add.-Currency Credit Amount }
    {    ;Group account,Business Unit Code,Global Dimension 1 Code,Global Dimension 2 Code,Posting Date;
                                                   SumIndexFields=Amount,Debit Amount,Credit Amount,Additional-Currency Amount,Add.-Currency Debit Amount,Add.-Currency Credit Amount }
    {    ;Group account,Business Unit Code,Posting Date;
                                                   SumIndexFields=Amount,Debit Amount,Credit Amount,Additional-Currency Amount,Add.-Currency Debit Amount,Add.-Currency Credit Amount }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Entry No.,Description,G/L Account No.,Posting Date,Document Type,Document No. }
  }
  CODE
  {
    VAR
      cFunPar@1100217000 : Codeunit 7009700;
      rPar@1103355000 : Record 7009700;
      GLSetup@1000 : Record 98;
      GLSetupRead@1002 : Boolean;

    PROCEDURE GetCurrencyCode@1() : Code[10];
    BEGIN
      IF NOT GLSetupRead THEN BEGIN
        GLSetup.GET;
        GLSetupRead := TRUE;
      END;
      EXIT(GLSetup."Additional Reporting Currency");
    END;

    PROCEDURE ShowValueEntries@8();
    VAR
      GLItemLedgRelation@1000 : Record 5823;
      ValueEntry@1002 : Record 5802;
      TempValueEntry@1001 : TEMPORARY Record 5802;
    BEGIN
      GLItemLedgRelation.SETRANGE("G/L Entry No.","Entry No.");
      IF GLItemLedgRelation.FINDSET THEN
        REPEAT
          ValueEntry.GET(GLItemLedgRelation."Value Entry No.");
          TempValueEntry.INIT;
          TempValueEntry := ValueEntry;
          TempValueEntry.INSERT;
        UNTIL GLItemLedgRelation.NEXT = 0;

      FORM.RUNMODAL(0,TempValueEntry);
    END;

    PROCEDURE fSaldo@1103355000() : Decimal;
    VAR
      lrCue@1103355000 : Record 15;
      lrMovCue@1103355002 : Record 17;
      lwSaldo@1103355001 : Decimal;
    BEGIN
      // fSaldo
      //

      lwSaldo := 0;

      lrCue.RESET;
      lrCue.SETRANGE("No.", "G/L Account No.");
      IF GETFILTER("Global Dimension 1 Code") <> '' THEN
        COPYFILTER("Global Dimension 1 Code", lrCue."Global Dimension 1 Code");

      IF GETFILTER("Global Dimension 2 Code") <> '' THEN
        COPYFILTER("Global Dimension 2 Code", lrCue."Global Dimension 2 Code");

      IF lrCue.FIND('-') THEN BEGIN
        lrCue.SETFILTER("Date Filter", '<%1', "Posting Date");
        lrCue.CALCFIELDS("Net Change");

        lwSaldo := lrCue."Net Change";
      END;

      lrMovCue.RESET;
      lrMovCue.SETCURRENTKEY("G/L Account No.",
                             "Posting Date");
      lrMovCue.COPYFILTERS(Rec);
      lrMovCue.SETRANGE("G/L Account No.", "G/L Account No.");
      lrMovCue.SETRANGE("Posting Date"   , "Posting Date");
      IF lrMovCue.FIND('-') THEN
        REPEAT
          IF lrMovCue."Entry No." <= "Entry No." THEN
            lwSaldo := lwSaldo + lrMovCue.Amount;
        UNTIL lrMovCue.NEXT = 0;

      EXIT(lwSaldo);
    END;

    BEGIN
    {
      // INCOMING

      $001 En el OnInsert si el departamento esta en blanco hay que llenarlo con la delegacion en la que se esta trabajando

      $002 Aumentar el campo Descripcion a 80 caracteres

      $003 Se han creado nuevos campos
          - 50002 Tipo de clave    Code10
          - 69069 Debe div.-adic.  Decimal
          - 69070 Haber div.-adic. Decimal

      $004 Se ha creado nueva clave para las consultas por tipo de clave
          Campos : Tipo de clave, G/L Account No., Posting Date
          SumIndexField : Amount, Additional-Currency Amount
          KeyGroup : INCOMING

      $005 Se ha creado una nueva funcion fSaldo que retorna el saldo para mostrar en pantalla de movimientos

      // Conciliacion de cuentas

      $006 Se han agregado los siguientes campos
          - 50201 Importe a conciliar       Decimal Conciliacion de cuentas
          - 50202 Pendiente                 Boolean Conciliacion de cuentas
          - 50203 Importe pendiente         Decimal Conciliacion de cuentas
          - 50204 Usuario conciliacion      Code20  User."User ID",Conciliacion de cuentas
          - 50205 Importe conciliado        Decimal Conciliacion de cuentas
          - 50206 Filtro fecha conciliacion Date    Conciliacion de cuentas

      $007 Se ha creado una nueva clave para el proceso de conciliacion
          Campos : G/L Account No., Usuario conciliacion
          KeyGroup : COC
          MaintainSQLIndex : No

      $008 AJS 08.02.2007, Eliminar claves innecesarias : IC Partner Code

      $009 AJS 16052013 Al cambiar la fecha de registro llamo a una funcion que actualiza en todas las tablas relacionadas

      $010 AJS 29052013 Al cambiar el numero de documento llamo a una funcion que actualiza en todas las tablas relacionadas

      $011 AJS 10062013 Al cambiar la fecha de emision llamo a una funcion que actualiza en todas las tablas relacionadas

      $012 ARM 09042015 CNT-OC-15129 Nuevo campo cuenta coporporativa
    }
    END.
  }
}
