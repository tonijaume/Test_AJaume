OBJECT Table 7010143 Suplemento Excursiones
{
  OBJECT-PROPERTIES
  {
    Date=12/12/13;
    Time=23:03:29;
    Modified=Yes;
    Version List=AIC2009;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Excursions Supplements;
               ESP=Suplemento Excursiones];
    LookupFormID=Form7010147;
    DrillDownFormID=Form7010147;
  }
  FIELDS
  {
    { 1   ;   ;Codigo Suplemento   ;Code10        ;CaptionML=[ENU=Supplement code;
                                                              ESP=Codigo Suplemento];
                                                   NotBlank=Yes;
                                                   Description=PK }
    { 3   ;   ;Tipo Producto       ;Option        ;CaptionML=[ENU=Item Type;
                                                              ESP=Tipo Producto];
                                                   OptionCaptionML=[ENU=Excursion,Hotel,Transfer,Flight;
                                                                    ESP=Excursion,Hotel,Transfer,Vuelo];
                                                   OptionString=Excursion,Hotel,Transfer,Vuelo }
    { 5   ;   ;Descripcion         ;Text30        ;CaptionML=[ENU=Description;
                                                              ESP=Descripcion] }
  }
  KEYS
  {
    {    ;Codigo Suplemento                       ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1100217000 : TextConst 'ENU=Do you want to create a price for the supplement %1 in all the excursions rates.;ESP=Desea crear el suplemento %1 en todas las tarifas de excursiones.';

    PROCEDURE ComprobarPrecioManual@1100217003(pwCodigo@1100217001 : Code[10]) : Boolean;
    VAR
      lrPar@1100217000 : Record 7009700;
    BEGIN
      // ComprobarPrecioManual

      lrPar.FINDFIRST;
      IF lrPar."Suplemento ajustable manual" = '' THEN
        EXIT(FALSE);

      EXIT(lrPar."Suplemento ajustable manual" = pwCodigo);
    END;

    PROCEDURE NomSuplemento@1100217000(pwCodigo@1100217001 : Code[10]) : Text[50];
    VAR
      lrSupl@1100217000 : Record 7010143;
    BEGIN
      // NomSuplemento

      IF lrSupl.GET(pwCodigo) THEN
        EXIT(lrSupl.Descripcion);
    END;

    PROCEDURE CrearPrecioTarifas@1100217001();
    VAR
      lrTar@1100217000 : Record 7010147;
      lrTar2@1100217001 : Record 7010147;
      lrExc@1100217002 : Record 7009710;
      lrPre@1100217003 : Record 7010148;
      lrCond@1100217005 : Record 7010243;
      lfCondiciones@1100217004 : Form 7010189;
    BEGIN
      // CrearPrecioTarifas

      IF NOT lrCond.GET(USERID) THEN
      BEGIN
        lrCond.INIT;
        lrCond.Usuario := USERID;
        lrCond."Cod. Suplemento" := "Codigo Suplemento";
        lrCond.INSERT;
      END
      ELSE
      BEGIN
        lrCond.INIT;
        lrCond."Cod. Suplemento" := "Codigo Suplemento";
        lrCond.MODIFY;
      END;
      lrCond.FILTERGROUP(2);
      lrCond.SETRECFILTER;
      lrCond.FILTERGROUP(0);
      COMMIT;

      CLEAR(lfCondiciones);
      lfCondiciones.SETRECORD(lrCond);
      lfCondiciones.RUNMODAL;

      IF NOT CONFIRM(Text001, FALSE, "Codigo Suplemento") THEN
        EXIT;

      lfCondiciones.GETRECORD(lrCond);

      lrTar.RESET;
      lrTar.SETFILTER("Fecha Final", '>=%1', TODAY);
      IF lrTar.FINDSET THEN
      BEGIN
        REPEAT
          IF lrExc.GET(lrTar.Excursion) THEN
          BEGIN
            IF (lrExc.Oficina = lrCond.Oficina) OR (lrCond.Oficina = '') THEN
            BEGIN
              lrPre.INIT;
              lrPre.VALIDATE(Delegacion        , lrTar.Delegacion);
              lrPre.VALIDATE("Tipo precio"     , lrPre."Tipo precio"::"Suplemento Varios");
              lrPre.VALIDATE(Excursion         , lrTar.Excursion);
              lrPre.VALIDATE("Temporada Tarifa", lrTar.Temporada);
              lrPre.VALIDATE("ID Tarifa"       , lrTar."ID Tarifa");
              lrPre.INSERT(TRUE);

              lrPre.VALIDATE(Codigo             , "Codigo Suplemento");
              lrPre.VALIDATE("Fecha Desde"      , lrTar."Fecha Inicio");
              lrPre.VALIDATE("Fecha Hasta"      , lrTar."Fecha Final");

              lrPre.VALIDATE("Acumula al precio", TRUE);
              lrPre.VALIDATE("% Porcentaje"     , lrCond.Correcto);
              lrPre.VALIDATE(Comisionable       , lrCond.Comisionable);
              lrPre.VALIDATE("Precio Adulto"    , lrCond."Importe a validar");
              lrPre.VALIDATE("Precio Ni¤o"      , lrCond."Total Factura");

              lrPre.MODIFY(TRUE);
            END;
          END;
        UNTIL lrTar.NEXT = 0;
      END;
    END;

    BEGIN
    END.
  }
}
