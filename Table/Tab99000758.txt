OBJECT Table 99000758 Machine Center
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=NAVW16.00.01,NAVES6.00;
  }
  PROPERTIES
  {
    DataCaptionFields=No.,Name;
    OnInsert=BEGIN
               MfgSetup.GET;
               IF "No." = '' THEN BEGIN
                 MfgSetup.TESTFIELD("Machine Center Nos.");
                 NoSeriesMgt.InitSeries(MfgSetup."Machine Center Nos.",xRec."No. Series",0D,"No.","No. Series");
               END;
             END;

    OnModify=BEGIN
               "Last Date Modified" := TODAY;
             END;

    OnDelete=VAR
               ProdOrderRtngLine@1000 : Record 5409;
             BEGIN
               CapLedgEntry.SETCURRENTKEY(Type,"No.");
               CapLedgEntry.SETRANGE(Type,CapLedgEntry.Type::"Machine Center");
               CapLedgEntry.SETRANGE("No.","No.");
               IF CapLedgEntry.FIND('-') THEN
                 ERROR(Text007,TABLECAPTION,"No.",CapLedgEntry.TABLECAPTION);

               CalendarEntry.SETRANGE("Capacity Type",CalendarEntry."Capacity Type"::"Machine Center");
               CalendarEntry.SETRANGE("No.","No.");
               CalendarEntry.DELETEALL;

               CalAbsentEntry.SETRANGE("Capacity Type",CalendarEntry."Capacity Type"::"Machine Center");
               CalAbsentEntry.SETRANGE("No.","No.");
               CalAbsentEntry.DELETEALL;

               MfgCommentLine.SETRANGE("Table Name",MfgCommentLine."Table Name"::"Machine Center");
               MfgCommentLine.SETRANGE("No.","No.");
               MfgCommentLine.DELETEALL;

               ProdOrderRtngLine.SETCURRENTKEY(Type,"No.");
               ProdOrderRtngLine.SETRANGE(Type,ProdOrderRtngLine.Type::"Machine Center");
               ProdOrderRtngLine.SETRANGE("No.","No.");
               IF ProdOrderRtngLine.FIND('-') THEN
                 ERROR(Text000);
             END;

    OnRename=BEGIN
               "Last Date Modified" := TODAY;
             END;

    CaptionML=[ENU=Machine Center;
               ESP=Centro m quina];
    LookupFormID=Form99000761;
    DrillDownFormID=Form99000761;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;AltSearchField=Search Name;
                                                   CaptionML=[ENU=No.;
                                                              ESP=N§] }
    { 3   ;   ;Name                ;Text30        ;OnValidate=BEGIN
                                                                "Search Name" := Name;
                                                              END;

                                                   CaptionML=[ENU=Name;
                                                              ESP=Nombre] }
    { 4   ;   ;Search Name         ;Code30        ;CaptionML=[ENU=Search Name;
                                                              ESP=Alias] }
    { 5   ;   ;Name 2              ;Text30        ;CaptionML=[ENU=Name 2;
                                                              ESP=Nombre 2] }
    { 6   ;   ;Address             ;Text50        ;CaptionML=[ENU=Address;
                                                              ESP=Direcci¢n] }
    { 7   ;   ;Address 2           ;Text50        ;CaptionML=[ENU=Address 2;
                                                              ESP=Direcci¢n 2] }
    { 8   ;   ;City                ;Text30        ;OnValidate=BEGIN
                                                                PostCode.ValidateCity(City,"Post Code",County);
                                                              END;

                                                   OnLookup=BEGIN
                                                              PostCode.LookUpCity(City,"Post Code",County,TRUE);
                                                            END;

                                                   CaptionML=[ENU=City;
                                                              ESP=Poblaci¢n] }
    { 9   ;   ;Post Code           ;Code20        ;TableRelation="Post Code";
                                                   OnValidate=BEGIN
                                                                PostCode.ValidatePostCode(City,"Post Code",County);
                                                              END;

                                                   OnLookup=BEGIN
                                                              PostCode.LookUpPostCode(City,"Post Code",County,TRUE);
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Post Code;
                                                              ESP=C.P.] }
    { 14  ;   ;Work Center No.     ;Code20        ;TableRelation="Work Center";
                                                   OnValidate=VAR
                                                                WorkCenter@1000 : Record 99000754;
                                                                ProdOrderRtngLine@1001 : Record 5409;
                                                                ProdOrderCapNeed@1002 : Record 5410;
                                                                PlanningRtngLine@1003 : Record 99000830;
                                                              BEGIN
                                                                IF "Work Center No." = xRec."Work Center No." THEN
                                                                  EXIT;

                                                                IF "Work Center No." <> '' THEN BEGIN
                                                                  WorkCenter.GET("Work Center No.");
                                                                  WorkCenter.TESTFIELD("Unit of Measure Code");
                                                                  "Queue Time Unit of Meas. Code" := WorkCenter."Queue Time Unit of Meas. Code";
                                                                  "Setup Time Unit of Meas. Code" := WorkCenter."Unit of Measure Code";
                                                                  "Wait Time Unit of Meas. Code" := WorkCenter."Unit of Measure Code";
                                                                  "Move Time Unit of Meas. Code" := WorkCenter."Unit of Measure Code";
                                                                END;

                                                                CalendarEntry.SETCURRENTKEY("Capacity Type","No.");
                                                                CalendarEntry.SETRANGE("Capacity Type",CalendarEntry."Capacity Type"::"Machine Center");
                                                                CalendarEntry.SETRANGE("No.","No.");
                                                                IF NOT CalendarEntry.FIND('-') THEN
                                                                  EXIT;

                                                                IF CurrFieldNo <> 0 THEN
                                                                  IF NOT CONFIRM(Text001,FALSE,FIELDCAPTION("Work Center No."))
                                                                  THEN BEGIN
                                                                    "Work Center No." := xRec."Work Center No.";
                                                                    EXIT;
                                                                  END;

                                                                Window.OPEN(
                                                                  Text002 +
                                                                  Text003 +
                                                                  Text004 +
                                                                  Text006);

                                                                i := 0;
                                                                NoOfRecords := CalendarEntry.COUNTAPPROX;
                                                                IF CalendarEntry.FIND('-') THEN
                                                                  REPEAT
                                                                    i := i + 1;
                                                                    Window.UPDATE(1,i);
                                                                    Window.UPDATE(2,ROUND(i / NoOfRecords * 10000,1));
                                                                    CalendarEntry.VALIDATE("Work Center No.","Work Center No.");
                                                                    CalendarEntry.MODIFY;
                                                                  UNTIL CalendarEntry.NEXT = 0;

                                                                i := 0;
                                                                CalAbsentEntry.SETCURRENTKEY("Capacity Type","No.");
                                                                CalAbsentEntry.SETRANGE("Capacity Type",CalendarEntry."Capacity Type"::"Machine Center");
                                                                CalAbsentEntry.SETRANGE("No.","No.");
                                                                NoOfRecords := CalAbsentEntry.COUNTAPPROX;
                                                                IF CalAbsentEntry.FIND('-') THEN
                                                                  REPEAT
                                                                    i := i + 1;
                                                                    Window.UPDATE(3,i);
                                                                    Window.UPDATE(4,ROUND(i / NoOfRecords * 10000,1));
                                                                    CalAbsentEntry.VALIDATE("Work Center No.","Work Center No.");
                                                                    CalAbsentEntry.MODIFY;
                                                                  UNTIL CalAbsentEntry.NEXT = 0;

                                                                i := 0;
                                                                ProdOrderCapNeed.SETCURRENTKEY(Type,"No.");
                                                                ProdOrderCapNeed.SETRANGE(Type,ProdOrderCapNeed.Type::"Machine Center");
                                                                ProdOrderCapNeed.SETRANGE("No.","No.");
                                                                NoOfRecords := ProdOrderCapNeed.COUNTAPPROX;
                                                                IF ProdOrderCapNeed.FIND('-') THEN
                                                                  REPEAT
                                                                    i := i + 1;
                                                                    Window.UPDATE(7,i);
                                                                    Window.UPDATE(8,ROUND(i / NoOfRecords * 10000,1));
                                                                    ProdOrderCapNeed.VALIDATE("Work Center No.","Work Center No.");
                                                                    ProdOrderCapNeed.MODIFY;
                                                                  UNTIL ProdOrderCapNeed.NEXT = 0;

                                                                MODIFY;

                                                                RtngLine.SETCURRENTKEY(Type,"No.");
                                                                RtngLine.SETRANGE(Type,RtngLine.Type::"Machine Center");
                                                                RtngLine.SETRANGE("No.","No.");
                                                                IF RtngLine.FIND('-') THEN
                                                                  REPEAT
                                                                    RtngLine.VALIDATE("Work Center No.","Work Center No.");
                                                                    RtngLine.MODIFY;
                                                                  UNTIL RtngLine.NEXT = 0;

                                                                PlanningRtngLine.SETCURRENTKEY(Type,"No.");
                                                                PlanningRtngLine.SETRANGE(Type,PlanningRtngLine.Type::"Machine Center");
                                                                PlanningRtngLine.SETRANGE("No.","No.");
                                                                IF PlanningRtngLine.FIND('-') THEN
                                                                  REPEAT
                                                                    PlanningRtngLine.VALIDATE("Work Center No.","Work Center No.");
                                                                    PlanningRtngLine.MODIFY;
                                                                  UNTIL PlanningRtngLine.NEXT = 0;

                                                                ProdOrderRtngLine.SETCURRENTKEY(Type,"No.");
                                                                ProdOrderRtngLine.SETRANGE(Type,PlanningRtngLine.Type::"Machine Center");
                                                                ProdOrderRtngLine.SETRANGE("No.","No.");
                                                                IF ProdOrderRtngLine.FIND('-') THEN
                                                                  REPEAT
                                                                    ProdOrderRtngLine.VALIDATE("Work Center No.","Work Center No.");
                                                                    ProdOrderRtngLine.MODIFY;
                                                                  UNTIL ProdOrderRtngLine.NEXT = 0;

                                                                Window.CLOSE;
                                                              END;

                                                   CaptionML=[ENU=Work Center No.;
                                                              ESP=N§ centro trabajo] }
    { 19  ;   ;Direct Unit Cost    ;Decimal       ;OnValidate=BEGIN
                                                                VALIDATE("Indirect Cost %");
                                                              END;

                                                   CaptionML=[ENU=Direct Unit Cost;
                                                              ESP=Coste unit. directo];
                                                   MinValue=0;
                                                   AutoFormatType=2 }
    { 20  ;   ;Indirect Cost %     ;Decimal       ;OnValidate=BEGIN
                                                                GetGLSetup;
                                                                "Unit Cost" :=
                                                                  ROUND(
                                                                    "Direct Unit Cost" * (1 + "Indirect Cost %" / 100) + "Overhead Rate",
                                                                    GLSetup."Unit-Amount Rounding Precision");
                                                              END;

                                                   CaptionML=[ENU=Indirect Cost %;
                                                              ESP=% Coste indirecto];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 21  ;   ;Unit Cost           ;Decimal       ;OnValidate=BEGIN
                                                                GetGLSetup;
                                                                "Direct Unit Cost" :=
                                                                  ROUND(("Unit Cost" - "Overhead Rate") / (1 + "Indirect Cost %" / 100),
                                                                    GLSetup."Unit-Amount Rounding Precision");
                                                              END;

                                                   CaptionML=[ENU=Unit Cost;
                                                              ESP=Coste unitario];
                                                   DecimalPlaces=2:5;
                                                   MinValue=0;
                                                   AutoFormatType=2 }
    { 22  ;   ;Queue Time          ;Decimal       ;CaptionML=[ENU=Queue Time;
                                                              ESP=Tiempo cola];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 23  ;   ;Queue Time Unit of Meas. Code;Code10;
                                                   TableRelation="Capacity Unit of Measure";
                                                   CaptionML=[ENU=Queue Time Unit of Meas. Code;
                                                              ESP=C¢d. udad. medida tiempo cola] }
    { 26  ;   ;Last Date Modified  ;Date          ;CaptionML=[ENU=Last Date Modified;
                                                              ESP=Fecha £lt. modificaci¢n];
                                                   Editable=No }
    { 27  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Manufacturing Comment Line" WHERE (Table Name=CONST(Machine Center),
                                                                                                         No.=FIELD(No.)));
                                                   CaptionML=[ENU=Comment;
                                                              ESP=Comentario];
                                                   Editable=No }
    { 31  ;   ;Capacity            ;Decimal       ;CaptionML=[ENU=Capacity;
                                                              ESP=Capacidad];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 32  ;   ;Efficiency          ;Decimal       ;InitValue=100;
                                                   CaptionML=[ENU=Efficiency;
                                                              ESP=Eficiencia];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 33  ;   ;Maximum Efficiency  ;Decimal       ;CaptionML=[ENU=Maximum Efficiency;
                                                              ESP=Eficiencia m xima];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 34  ;   ;Minimum Efficiency  ;Decimal       ;CaptionML=[ENU=Minimum Efficiency;
                                                              ESP=Eficiencia m¡nima];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 38  ;   ;Blocked             ;Boolean       ;CaptionML=[ENU=Blocked;
                                                              ESP=Bloqueado] }
    { 39  ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Date Filter;
                                                              ESP=Filtro fecha] }
    { 40  ;   ;Work Shift Filter   ;Code10        ;FieldClass=FlowFilter;
                                                   TableRelation="Work Shift";
                                                   CaptionML=[ENU=Work Shift Filter;
                                                              ESP=Filtro turno trabajo] }
    { 41  ;   ;Capacity (Total)    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Calendar Entry"."Capacity (Total)" WHERE (Capacity Type=CONST(Machine Center),
                                                                                                              No.=FIELD(No.),
                                                                                                              Work Shift Code=FIELD(Work Shift Filter),
                                                                                                              Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Capacity (Total);
                                                              ESP=Capacidad (Total)];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 42  ;   ;Capacity (Effective);Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Calendar Entry"."Capacity (Effective)" WHERE (Capacity Type=CONST(Machine Center),
                                                                                                                  No.=FIELD(No.),
                                                                                                                  Work Shift Code=FIELD(Work Shift Filter),
                                                                                                                  Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Capacity (Effective);
                                                              ESP=Capacidad (efectiva)];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 44  ;   ;Prod. Order Need (Qty.);Decimal    ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Prod. Order Capacity Need"."Allocated Time" WHERE (Type=CONST(Machine Center),
                                                                                                                       No.=FIELD(No.),
                                                                                                                       Status=FIELD(Prod. Order Status Filter),
                                                                                                                       Date=FIELD(Date Filter),
                                                                                                                       Requested Only=CONST(No)));
                                                   CaptionML=[ENU=Prod. Order Need (Qty.);
                                                              ESP=Nec. ord. prod. (cdad.)];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 45  ;   ;Prod. Order Need Amount;Decimal    ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Prod. Order Routing Line"."Expected Operation Cost Amt." WHERE (Type=CONST(Machine Center),
                                                                                                                                    No.=FIELD(No.),
                                                                                                                                    Status=FIELD(Prod. Order Status Filter)));
                                                   CaptionML=[ENU=Prod. Order Need Amount;
                                                              ESP=Importe nec. ord. prod.];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 47  ;   ;Prod. Order Status Filter;Option   ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Prod. Order Status Filter;
                                                              ESP=Filtro estado ord. prod.];
                                                   OptionCaptionML=[ENU=Simulated,Planned,Firm Planned,Released,Finished;
                                                                    ESP=Simulada,Planificada,Planif. en firme,Lanzada,Terminada];
                                                   OptionString=Simulated,Planned,Firm Planned,Released,Finished }
    { 50  ;   ;Setup Time          ;Decimal       ;CaptionML=[ENU=Setup Time;
                                                              ESP=Tiempo preparaci¢n];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 52  ;   ;Wait Time           ;Decimal       ;CaptionML=[ENU=Wait Time;
                                                              ESP=Tiempo espera];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 53  ;   ;Move Time           ;Decimal       ;CaptionML=[ENU=Move Time;
                                                              ESP=Tiempo movimiento];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 54  ;   ;Fixed Scrap Quantity;Decimal       ;CaptionML=[ENU=Fixed Scrap Quantity;
                                                              ESP=Cdad. rechazo fija];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 55  ;   ;Scrap %             ;Decimal       ;CaptionML=[ENU=Scrap %;
                                                              ESP=% Rechazo];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 56  ;   ;Setup Time Unit of Meas. Code;Code10;
                                                   TableRelation="Capacity Unit of Measure";
                                                   CaptionML=[ENU=Setup Time Unit of Meas. Code;
                                                              ESP=C¢d. ud. medida tiempo prep.] }
    { 57  ;   ;Wait Time Unit of Meas. Code;Code10;TableRelation="Capacity Unit of Measure";
                                                   CaptionML=[ENU=Wait Time Unit of Meas. Code;
                                                              ESP=C¢d. ud. medida tiempo espera] }
    { 58  ;   ;Send-Ahead Quantity ;Decimal       ;CaptionML=[ENU=Send-Ahead Quantity;
                                                              ESP=Cdad. a adelantar];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 59  ;   ;Move Time Unit of Meas. Code;Code10;TableRelation="Capacity Unit of Measure";
                                                   CaptionML=[ENU=Move Time Unit of Meas. Code;
                                                              ESP=C¢d. ud. medida tiempo mov.] }
    { 60  ;   ;Flushing Method     ;Option        ;InitValue=Manual;
                                                   CaptionML=[ENU=Flushing Method;
                                                              ESP=Mtodo de baja];
                                                   OptionCaptionML=[ENU=Manual,Forward,Backward;
                                                                    ESP=Manual,Anticipada,Retroactiva];
                                                   OptionString=Manual,Forward,Backward }
    { 62  ;   ;Minimum Process Time;Decimal       ;CaptionML=[ENU=Minimum Process Time;
                                                              ESP=Tiempo proceso m¡nimo];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 63  ;   ;Maximum Process Time;Decimal       ;CaptionML=[ENU=Maximum Process Time;
                                                              ESP=Tiempo proceso m ximo];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 64  ;   ;Concurrent Capacities;Decimal      ;CaptionML=[ENU=Concurrent Capacities;
                                                              ESP=Capacidades concurrentes];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 65  ;   ;Item Filter         ;Code20        ;FieldClass=FlowFilter;
                                                   TableRelation=Item;
                                                   CaptionML=[ENU=Item Filter;
                                                              ESP=Filtro producto] }
    { 66  ;   ;Stop Code Filter    ;Code10        ;FieldClass=FlowFilter;
                                                   TableRelation=Stop;
                                                   CaptionML=[ENU=Stop Code Filter;
                                                              ESP=Filtro c¢d. paro] }
    { 67  ;   ;Scrap Code Filter   ;Code10        ;FieldClass=FlowFilter;
                                                   TableRelation=Scrap;
                                                   CaptionML=[ENU=Scrap Code Filter;
                                                              ESP=Filtro c¢d. rechazo] }
    { 80  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              ESP=Nos. serie];
                                                   Editable=No }
    { 81  ;   ;Overhead Rate       ;Decimal       ;OnValidate=BEGIN
                                                                VALIDATE("Indirect Cost %");
                                                              END;

                                                   CaptionML=[ENU=Overhead Rate;
                                                              ESP=Tasa costes generales];
                                                   AutoFormatType=2 }
    { 82  ;   ;Gen. Prod. Posting Group;Code10    ;TableRelation="Gen. Product Posting Group";
                                                   CaptionML=[ENU=Gen. Prod. Posting Group;
                                                              ESP=Grupo contable producto] }
    { 83  ;   ;County              ;Text30        ;CaptionML=[ENU=County;
                                                              ESP=Provincia] }
    { 84  ;   ;Country/Region Code ;Code10        ;TableRelation=Country/Region;
                                                   CaptionML=[ENU=Country/Region Code;
                                                              ESP=C¢d. pa¡s/regi¢n] }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Search Name                              }
    {    ;Work Center No.                          }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=The Machine Center is being used on production orders.;ESP=Centro m quina utiliz ndose con ¢rdenes de producci¢n.';
      Text001@1001 : TextConst 'ENU=Do you want to change %1?;ESP=¨Confirma que desea cambiar %1?';
      Text002@1002 : TextConst 'ENU=Work Center No. is corrected on\\;ESP=Se ha corregido n§ centro trabajo en\\';
      Text003@1003 : TextConst 'ENU=Calendar Entry    #1###### @2@@@@@@@@@@@@@\;ESP=Mov. calendario   #1###### @2@@@@@@@@@@@@@\';
      Text004@1004 : TextConst 'ENU=Calendar Absent.  #3###### @4@@@@@@@@@@@@@\;ESP=Absent. calenda.  #3###### @4@@@@@@@@@@@@@\';
      Text006@1005 : TextConst 'ENU=Prod. Order Need  #7###### @8@@@@@@@@@@@@@;ESP=Nec. ord. prod.   #7###### @8@@@@@@@@@@@@@';
      PostCode@1020 : Record 225;
      MfgSetup@1006 : Record 99000765;
      MachineCenter@1007 : Record 99000758;
      CapLedgEntry@1012 : Record 5832;
      CalendarEntry@1008 : Record 99000757;
      CalAbsentEntry@1009 : Record 99000760;
      MfgCommentLine@1010 : Record 99000770;
      RtngLine@1011 : Record 99000764;
      GLSetup@1017 : Record 98;
      NoSeriesMgt@1013 : Codeunit 396;
      Window@1014 : Dialog;
      i@1015 : Integer;
      NoOfRecords@1016 : Integer;
      GLSetupRead@1018 : Boolean;
      Text007@1019 : TextConst 'ENU=You cannot delete %1 %2 because there exists at least one %3 associated with it.;ESP=No puede borrar %1 %2 porque existe al menos %3 asociado a l.';

    PROCEDURE AssistEdit@2(OldMachineCenter@1000 : Record 99000758) : Boolean;
    BEGIN
      WITH MachineCenter DO BEGIN
        MachineCenter := Rec;
        MfgSetup.GET;
        MfgSetup.TESTFIELD("Machine Center Nos.");
        IF NoSeriesMgt.SelectSeries(MfgSetup."Machine Center Nos.",OldMachineCenter."No. Series","No. Series") THEN BEGIN
          NoSeriesMgt.SetSeries("No.");
          Rec := MachineCenter;
          EXIT(TRUE);
        END;
      END;
    END;

    LOCAL PROCEDURE GetGLSetup@14();
    BEGIN
      IF NOT GLSetupRead THEN
        GLSetup.GET;
      GLSetupRead := TRUE;
    END;

    BEGIN
    END.
  }
}
