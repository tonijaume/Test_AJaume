OBJECT Table 7009843 Temporal control Reservas
{
  OBJECT-PROPERTIES
  {
    Date=01/06/15;
    Time=10:38:50;
    Modified=Yes;
    Version List=AIC2009;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Booking temporary control;
               ESP=Temporal control Reservas];
  }
  FIELDS
  {
    { 1   ;   ;N§ Interno          ;Integer       ;TableRelation="Cabecera reserva"."N§ Interno";
                                                   CaptionML=[ENU=Internal No.;
                                                              ESP=N§ Interno];
                                                   Editable=No }
    { 3   ;   ;N§ Periodo          ;Integer       ;CaptionML=[ENU=Period No.;
                                                              ESP=N§ Periodo];
                                                   Editable=No }
    { 7   ;   ;TourOperador        ;Code10        ;TableRelation=TourOperador.TourOperador;
                                                   CaptionML=[ENU=TourOperator;
                                                              ESP=TourOperador];
                                                   NotBlank=Yes;
                                                   Description=FK TourOperador }
    { 9   ;   ;Bono                ;Code10        ;CaptionML=[ENU=Voucher;
                                                              ESP=Bono] }
    { 17  ;   ;Compa¤ia entrada    ;Code10        ;TableRelation="Compa¤ia aerea".Codigo;
                                                   CaptionML=[ENU=Arrival company;
                                                              ESP=Compa¤ia entrada];
                                                   Description=FK Compa¤ia aerea;
                                                   Editable=No }
    { 19  ;   ;Vuelo entrada       ;Code10        ;CaptionML=[ENU=Arrival flight;
                                                              ESP=Vuelo entrada];
                                                   Editable=No }
    { 21  ;   ;Fecha entrada       ;Date          ;CaptionML=[ENU=Check-in Date;
                                                              ESP=Fecha entrada] }
    { 23  ;   ;Terminal entrada    ;Code1         ;CaptionML=[ENU=Arrival terminal;
                                                              ESP=Terminal entrada];
                                                   Editable=No }
    { 25  ;   ;Hora entrada        ;Time          ;CaptionML=[ENU=Arrival time;
                                                              ESP=Hora entrada];
                                                   Editable=No }
    { 27  ;   ;IATA origen entrada ;Code10        ;TableRelation=Aeropuerto.Aeropuerto;
                                                   CaptionML=[ENU=Arrival origin IATA;
                                                              ESP=IATA origen entrada];
                                                   Description=FK Aeropuerto;
                                                   Editable=No }
    { 29  ;   ;IATA destino entrada;Code10        ;TableRelation=Aeropuerto.Aeropuerto;
                                                   CaptionML=[ENU=Arrival destination IATA;
                                                              ESP=IATA destino entrada];
                                                   Description=FK Aeropuerto;
                                                   Editable=No }
    { 31  ;   ;Compa¤ia salida     ;Code10        ;TableRelation="Compa¤ia aerea".Codigo;
                                                   CaptionML=[ENU=Departure company;
                                                              ESP=Compa¤ia salida];
                                                   Description=FK Compa¤ia aerea;
                                                   Editable=No }
    { 33  ;   ;Vuelo salida        ;Code10        ;CaptionML=[ENU=Departure flight;
                                                              ESP=Vuelo salida];
                                                   Editable=No }
    { 35  ;   ;Fecha salida        ;Date          ;CaptionML=[ENU=Check-out Date;
                                                              ESP=Fecha salida] }
    { 37  ;   ;Terminal salida     ;Code1         ;CaptionML=[ENU=Departure terminal;
                                                              ESP=Terminal salida];
                                                   Editable=No }
    { 39  ;   ;Hora salida         ;Time          ;CaptionML=[ENU=Departure time;
                                                              ESP=Hora salida];
                                                   Editable=No }
    { 41  ;   ;IATA origen salida  ;Code10        ;TableRelation=Aeropuerto.Aeropuerto;
                                                   CaptionML=[ENU=Departure origin IATA;
                                                              ESP=IATA origen salida];
                                                   Description=FK Aeropuerto;
                                                   Editable=No }
    { 43  ;   ;IATA destino salida ;Code10        ;TableRelation=Aeropuerto.Aeropuerto;
                                                   CaptionML=[ENU=Departure destination IATA;
                                                              ESP=IATA destino salida];
                                                   Description=FK Aeropuerto;
                                                   Editable=No }
    { 57  ;   ;Hotel entrada       ;Code20        ;TableRelation=Hotel.Hotel;
                                                   CaptionML=[ENU=Hotel Check In;
                                                              ESP=Hotel entrada];
                                                   Description=FK Hotel }
    { 59  ;   ;Hotel salida        ;Code20        ;TableRelation=Hotel.Hotel;
                                                   CaptionML=[ENU=Hotel Check Out;
                                                              ESP=Hotel salida];
                                                   Description=FK Hotel }
    { 133 ;   ;Touroperador facturacion;Code10    ;TableRelation=TourOperador.TourOperador;
                                                   CaptionML=[ENU=TourOperator invoicing;
                                                              ESP=TourOperador facturacion];
                                                   Description=TourOperador.TourOperador }
    { 300 ;   ;User Id             ;Code20        ;CaptionML=[ENU=User Id;
                                                              ESP=User Id] }
    { 400 ;   ;Id                  ;Integer       ;AutoIncrement=Yes;
                                                   CaptionML=[ENU=ID;
                                                              ESP=ID] }
    { 500 ;   ;Hotel TO            ;Code10        ;CaptionML=[ENU=TO Hotel;
                                                              ESP=Hotel TO] }
  }
  KEYS
  {
    {    ;User Id,Id                              ;Clustered=Yes }
    {    ;N§ Interno,N§ Periodo                   ;KeyGroups=RENUMERING }
    {    ;Fecha entrada                           ;KeyGroups=RENUMERING }
    {    ;Fecha salida                            ;KeyGroups=RENUMERING }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE CargarVuelosIncompletos@1100253000() rvNumReg : Integer;
    VAR
      lrPer@1100253005 : Record 7009742;
      lrTraRsv@1100253000 : Record 7009744;
      lwIni@1100253001 : Date;
      lwFin@1100253002 : Date;
      lrPar@1100253003 : Record 7009700;
      lrControl@1100253004 : Record 7009843;
    BEGIN
      // CargarVuelosIncompletos.

      CLEAR(lrControl);
      lrControl.SETRANGE ("User Id", USERID);
      lrControl.DELETEALL;

      CLEAR(lrPar);
      CLEAR(rvNumReg);
      lrPar.FINDFIRST;

      lwIni := TODAY + 1;
      lwFin := lwIni + lrPar."Dias control vuelos";

      // Procesamos las llegadas
      CLEAR(lrTraRsv);
      lrTraRsv.SETCURRENTKEY("Fecha entrada"        ,
                             "Compa¤ia entrada"     ,
                             "Vuelo entrada"        ,
                             "IATA origen entrada"  ,
                             "Zona servicio entrada",
                             "Hotel entrada"        , Bono);
      lrTraRsv.SETRANGE ("Fecha entrada"      , lwIni, lwFin);
      lrTraRsv.SETRANGE ("Vuelo entrada"      , '');
      lrTraRsv.SETRANGE ("N§ Acompa¤ante"     , 1);
      lrTraRsv.SETRANGE ("Traslado en destino", FALSE); //+$002
      lrTraRsv.SETRANGE (Entrada              , 1); //+$003
      IF lrTraRsv.FINDSET THEN
      BEGIN
        REPEAT
          CLEAR(lrControl);
          lrControl.TRANSFERFIELDS(lrTraRsv);
          lrControl."User Id" := USERID;

          //$001
          IF lrPer.GET(lrTraRsv.Delegacion, lrTraRsv."N§ Interno", lrTraRsv."N§ Periodo") THEN
            lrControl."Hotel TO" := lrPer."Hotel TO";

          lrControl.INSERT(TRUE);
          rvNumReg += 1;
        UNTIL lrTraRsv.NEXT = 0;
      END;

      // Procesamos las salidas.
      CLEAR(lrTraRsv);
      lrTraRsv.SETCURRENTKEY("Fecha salida"        ,
                             "Compa¤ia salida"     ,
                             "Vuelo salida"        ,
                             "IATA destino salida" ,
                             "Zona servicio salida",
                             "Hotel salida"        , Bono);
      lrTraRsv.SETRANGE ("Fecha salida"       , lwIni, lwFin);
      lrTraRsv.SETRANGE ("Vuelo salida"       , '');
      lrTraRsv.SETRANGE ("N§ Acompa¤ante"     , 1);
      lrTraRsv.SETRANGE ("Traslado en destino", FALSE); //+$002
      lrTraRsv.SETRANGE (Salida               , 1); //+$003
      IF lrTraRsv.FINDSET THEN BEGIN
        REPEAT

          CLEAR(lrControl);
          lrControl.SETCURRENTKEY("N§ Interno", "N§ Periodo");
          lrControl.SETRANGE ("User Id"   , USERID);  // AJF 02/11/10
          lrControl.SETRANGE ("N§ Interno", lrTraRsv."N§ Interno");
          lrControl.SETRANGE ("N§ Periodo", lrTraRsv."N§ Periodo");
          IF lrControl.ISEMPTY THEN BEGIN
            CLEAR(lrControl);
            lrControl.TRANSFERFIELDS(lrTraRsv);
            lrControl."User Id" := USERID;

            //$001
            IF lrPer.GET(lrTraRsv.Delegacion, lrTraRsv."N§ Interno", lrTraRsv."N§ Periodo") THEN
              lrControl."Hotel TO" := lrPer."Hotel TO";

            lrControl.INSERT(TRUE);
            rvNumReg += 1;
          END;

        UNTIL lrTraRsv.NEXT = 0;
      END;
    END;

    PROCEDURE MostrarVuelosIncompletos@1100253001();
    VAR
      lrUser@1100253000 : Record 91;
    BEGIN
      // MostrarVuelosIncompletos.

      IF lrUser.GET(USERID) THEN BEGIN

        IF NOT lrUser."Control Reservas sin Vuelo" THEN
          EXIT;

        IF CargarVuelosIncompletos <> 0 THEN BEGIN
          COMMIT;
          FORM.RUN(7009964);
        END;

      END;
    END;

    PROCEDURE VerCabeceraReserva@1100253002();
    VAR
      lrCabRsv@1100253000 : Record 7009741;
    BEGIN
      // VerCabeceraReserva.

      CLEAR(lrCabRsv);
      lrCabRsv.FILTERGROUP(2);
      lrCabRsv.SETRANGE ("N§ Interno", "N§ Interno");
      lrCabRsv.FILTERGROUP(0);
      FORM.RUN(7009790, lrCabRsv);
    END;

    BEGIN
    {
      $001 AJS 30092010 Nuevos campos Touroperador facturacion y Hotel TO

      ## AJF 02/11/10
        .- Al insertar las salidas no se tenia en cuenta el usuario.

      $002 AJS 10042014 No tratar las reservas de traslado en destino

      $003 AJS 01062015 Contemplar los campos Entrada y Salida a la hora de filtrar las reservas
    }
    END.
  }
}
