OBJECT Table 7009916 Traslado en destino
{
  OBJECT-PROPERTIES
  {
    Date=04/12/14;
    Time=20:44:51;
    Modified=Yes;
    Version List=AIC2009,OC-14042;
  }
  PROPERTIES
  {
    OnInsert=VAR
               lrPerSer@1100217000 : Record 7009917;
             BEGIN
               //. Buscar el ID
               "ID Servicio" := _GetServiceID;

               _GetReservationData;
               "Fecha creacion" := CURRENTDATETIME;

               lrPerSer.AsignarPersonas(Rec, "Fecha servicio");

               //. Guardar en el historico de la reserva
               cPar.intro_historic(Delegacion, "Num. Reserva", 0, "ID Servicio", 9, Text004, Text005 + ' ' + FORMAT("ID Servicio"), '');
             END;

    OnModify=BEGIN
               TESTFIELD(Confirmado, FALSE);
             END;

    OnDelete=BEGIN
               TESTFIELD(Confirmado, FALSE);

               //. Borramos las personas asignadas al servicio
               _DeletePersons;

               //. Guardar en el historico de la reserva
               cPar.intro_historic(Delegacion, "Num. Reserva", 0, "ID Servicio", 9, Text006, Text005 + ' ' + FORMAT("ID Servicio"), '');
             END;

    CaptionML=[ENU=Transfer in destination;
               ESP=Traslado en destino];
    LookupFormID=Form7009846;
  }
  FIELDS
  {
    { 1   ;   ;Delegacion          ;Code10        ;TableRelation=Delegacion.Codigo;
                                                   CaptionML=[ENU=Local Office;
                                                              ESP=Delegacion];
                                                   NotBlank=Yes;
                                                   Description=Delegacion.Delegacion }
    { 3   ;   ;Num. Reserva        ;Integer       ;TableRelation="Cabecera reserva"."N§ Interno";
                                                   CaptionML=[ENU=Reservation No.;
                                                              ESP=Num. Reserva];
                                                   Description="Cabecera reserva"."N§ Interno" }
    { 5   ;   ;ID Servicio         ;Integer       ;CaptionML=[ENU=Service ID;
                                                              ESP=ID Servicio] }
    { 7   ;   ;Fecha servicio      ;Date          ;OnValidate=BEGIN
                                                                IF "Fecha servicio" <> xRec."Fecha servicio" THEN
                                                                BEGIN
                                                                  _CheckReservationDates;

                                                                  _UpdatePersonas;

                                                                  //. Guardar en el historico de la reserva
                                                                  cPar.intro_historic(Delegacion, "Num. Reserva", 0, "ID Servicio", 9, FIELDCAPTION("Fecha servicio"),
                                                                                      FORMAT(xRec."Fecha servicio"), FORMAT("Fecha servicio"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Service date;
                                                              ESP=Fecha servicio] }
    { 9   ;   ;Hora recogida       ;Time          ;OnValidate=BEGIN
                                                                IF "Hora recogida" <> xRec."Hora recogida" THEN
                                                                  //. Guardar en el historico de la reserva
                                                                  cPar.intro_historic(Delegacion, "Num. Reserva", 0, "ID Servicio", 9, FIELDCAPTION("Hora recogida"),
                                                                                      FORMAT(xRec."Hora recogida"), FORMAT("Hora recogida"));
                                                              END;

                                                   CaptionML=[ENU=Pickup Time;
                                                              ESP=Hora recogida] }
    { 11  ;   ;Tipo origen         ;Option        ;OnValidate=BEGIN
                                                                IF "Tipo origen" <> xRec."Tipo origen" THEN
                                                                BEGIN
                                                                  Origen               := '';
                                                                  "Descripcion origen" := '';

                                                                  IF "Tipo origen" = "Tipo origen"::Hotel THEN
                                                                    VALIDATE(Origen, _GetHotelReservation);

                                                                  //. Guardar en el historico de la reserva
                                                                  cPar.intro_historic(Delegacion, "Num. Reserva", 0, "ID Servicio", 9, FIELDCAPTION("Tipo origen"),
                                                                                      FORMAT(xRec."Tipo origen"), FORMAT("Tipo origen"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Origin Type;
                                                              ESP=Tipo origen];
                                                   OptionCaptionML=[ENU=Airport,Hotel,Zone;
                                                                    ESP=Aeropuerto,Hotel,Zona];
                                                   OptionString=Aeropuerto,Hotel,Zona;
                                                   Description=Aeropuerto,Hotel,Zona }
    { 13  ;   ;Origen              ;Code20        ;TableRelation=IF (Tipo origen=CONST(Aeropuerto)) Aeropuerto.Aeropuerto WHERE (Aeropuerto Local=CONST(Yes))
                                                                 ELSE IF (Tipo origen=CONST(Hotel)) Hotel.Hotel WHERE (NoName=CONST(No),
                                                                                                                       Hotel Ficticio=CONST(No))
                                                                                                                       ELSE IF (Tipo origen=CONST(Zona)) "Zona fisica"."Zona Fisica";
                                                   OnValidate=BEGIN
                                                                IF Origen <> xRec.Origen THEN
                                                                BEGIN
                                                                  "Descripcion origen" := _GetDescription(0); //. 0 = Origen
                                                                  "Zona origen"        := GetZone(0);

                                                                  //. Guardar en el historico de la reserva
                                                                  cPar.intro_historic(Delegacion, "Num. Reserva", 0, "ID Servicio", 9, FIELDCAPTION(Origen),
                                                                                      FORMAT(xRec.Origen), FORMAT(Origen));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Origin;
                                                              ESP=Origen];
                                                   NotBlank=Yes;
                                                   Description=IF (Tipo origen=CONST(Aeropuerto)) Aeropuerto.Aeropuerto WHERE (Aeropuerto Local=CONST(Yes)) ELSE IF (Tipo origen=CONST(Hotel)) Hotel.Hotel WHERE (NoName=CONST(No),Hotel Ficticio=CONST(No)) ELSE IF (Tipo origen=CONST(Zona)) "Zona fisica"."Zona Fisica" }
    { 14  ;   ;Zona origen         ;Code10        ;TableRelation="Zona fisica"."Zona Fisica";
                                                   CaptionML=[ENU=Origin zone;
                                                              ESP=Zona origen];
                                                   Description="Zona fisica"."Zona Fisica" }
    { 15  ;   ;Descripcion origen  ;Text50        ;OnValidate=BEGIN
                                                                IF "Descripcion origen" <> xRec."Descripcion origen" THEN
                                                                BEGIN
                                                                  IF CurrFieldNo = FIELDNO("Descripcion origen") THEN
                                                                  BEGIN
                                                                    IF "Tipo origen" <> "Tipo origen"::Zona THEN
                                                                      ERROR(Text001);
                                                                  END;

                                                                  //. Guardar en el historico de la reserva
                                                                  cPar.intro_historic(Delegacion, "Num. Reserva", 0, "ID Servicio", 9, FIELDCAPTION("Descripcion origen"),
                                                                                      FORMAT(xRec."Descripcion origen"), FORMAT("Descripcion origen"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Origin description;
                                                              ESP=Descripcion origen] }
    { 17  ;   ;Tipo destino        ;Option        ;OnValidate=BEGIN
                                                                IF "Tipo destino" <> xRec."Tipo destino" THEN
                                                                BEGIN
                                                                  Destino               := '';
                                                                  "Descripcion destino" := '';

                                                                  //. Guardar en el historico de la reserva
                                                                  cPar.intro_historic(Delegacion, "Num. Reserva", 0, "ID Servicio", 9, FIELDCAPTION("Tipo destino"),
                                                                                      FORMAT(xRec."Tipo destino"), FORMAT("Tipo destino"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Destination Type;
                                                              ESP=Tipo destino];
                                                   OptionCaptionML=[ENU=Airport,Hotel,Zone;
                                                                    ESP=Aeropuerto,Hotel,Zona];
                                                   OptionString=Aeropuerto,Hotel,Zona;
                                                   Description=Aeropuerto,Hotel,Zona }
    { 19  ;   ;Destino             ;Code20        ;TableRelation=IF (Tipo destino=CONST(Aeropuerto)) Aeropuerto.Aeropuerto WHERE (Aeropuerto Local=CONST(Yes))
                                                                 ELSE IF (Tipo destino=CONST(Hotel)) Hotel.Hotel WHERE (NoName=CONST(No),
                                                                                                                        Hotel Ficticio=CONST(No))
                                                                                                                        ELSE IF (Tipo destino=CONST(Zona)) "Zona fisica"."Zona Fisica";
                                                   OnValidate=BEGIN
                                                                IF Destino <> xRec.Destino THEN
                                                                BEGIN
                                                                  "Descripcion destino" := _GetDescription(1); //. 1 = Destino
                                                                  "Zona destino"        := GetZone(1);

                                                                  //. Guardar en el historico de la reserva
                                                                  cPar.intro_historic(Delegacion, "Num. Reserva", 0, "ID Servicio", 9, FIELDCAPTION(Destino),
                                                                                      FORMAT(xRec.Destino), FORMAT(Destino));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Destination;
                                                              ESP=Destino];
                                                   NotBlank=Yes;
                                                   Description=IF (Tipo origen=CONST(Aeropuerto)) Aeropuerto.Aeropuerto WHERE (Aeropuerto Local=CONST(Yes)) ELSE IF (Tipo origen=CONST(Hotel)) Hotel.Hotel WHERE (NoName=CONST(No),Hotel Ficticio=CONST(No)) ELSE IF (Tipo origen=CONST(Zona)) "Zona fisica"."Zona Fisica" }
    { 20  ;   ;Zona destino        ;Code10        ;TableRelation="Zona fisica"."Zona Fisica";
                                                   CaptionML=[ENU=Destination zone;
                                                              ESP=Zona destino];
                                                   Description="Zona fisica"."Zona Fisica" }
    { 21  ;   ;Descripcion destino ;Text50        ;OnValidate=BEGIN
                                                                IF "Descripcion destino" <> xRec."Descripcion destino" THEN
                                                                BEGIN
                                                                  IF CurrFieldNo = FIELDNO("Descripcion destino") THEN
                                                                  BEGIN
                                                                    IF "Tipo destino" <> "Tipo destino"::Zona THEN
                                                                      ERROR(Text001);

                                                                  END;

                                                                  //. Guardar en el historico de la reserva
                                                                  cPar.intro_historic(Delegacion, "Num. Reserva", 0, "ID Servicio", 9, FIELDCAPTION("Descripcion destino"),
                                                                                      FORMAT(xRec."Descripcion destino"), FORMAT("Descripcion destino"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Destination description;
                                                              ESP=Descripcion destino] }
    { 23  ;   ;Zona servicio origen;Code10        ;TableRelation="Zonas transfer".Zona WHERE (Tipo contrato=CONST(Servicio));
                                                   CaptionML=[ENU=Origin service zone;
                                                              ESP=Zona servicio origen];
                                                   Description="Zonas transfer".Zona WHERE (Tipo contrato=CONST(Servicio)) }
    { 25  ;   ;Zona servicio destino;Code10       ;TableRelation="Zonas transfer".Zona WHERE (Tipo contrato=CONST(Servicio));
                                                   CaptionML=[ENU=Destination service zone;
                                                              ESP=Zona servicio destino];
                                                   Description="Zonas transfer".Zona WHERE (Tipo contrato=CONST(Servicio)) }
    { 27  ;   ;Servicio privado    ;Boolean       ;OnValidate=BEGIN
                                                                IF "Servicio privado" <> xRec."Servicio privado" THEN
                                                                BEGIN
                                                                  //. Guardar en el historico de la reserva
                                                                  cPar.intro_historic(Delegacion, "Num. Reserva", 0, "ID Servicio", 9, FIELDCAPTION("Servicio privado"),
                                                                                      FORMAT(xRec."Servicio privado"), FORMAT("Servicio privado"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Private service;
                                                              ESP=Servicio privado] }
    { 29  ;   ;Medio del traslado  ;Option        ;OnValidate=BEGIN
                                                                IF "Medio del traslado" <> xRec."Medio del traslado" THEN
                                                                BEGIN
                                                                  //. Guardar en el historico de la reserva
                                                                  cPar.intro_historic(Delegacion, "Num. Reserva", 0, "ID Servicio", 9, FIELDCAPTION("Medio del traslado"),
                                                                                      FORMAT(xRec."Medio del traslado"), FORMAT("Medio del traslado"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Type of transfer;
                                                              ESP=Medio del traslado];
                                                   OptionCaptionML=[ENU=Ground,Aerial,Maritime;
                                                                    ESP=Terrestre,Aereo,Maritimo];
                                                   OptionString=Terrestre,Aereo,Maritimo;
                                                   Description=Terrestre,Aereo,Maritimo }
    { 31  ;   ;Personas            ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Pax Traslado en destino".Persona WHERE (Delegacion=FIELD(Delegacion),
                                                                                                            Num. Reserva=FIELD(Num. Reserva),
                                                                                                            ID Servicio=FIELD(ID Servicio)));
                                                   CaptionML=ESP=Personas;
                                                   DecimalPlaces=0:0;
                                                   Description=Sum("Pax Traslado en destino".Persona WHERE (Delegacion=FIELD(Delegacion),Num. Reserva=FIELD(Num. Reserva),ID Servicio=FIELD(ID Servicio)));
                                                   Editable=No }
    { 33  ;   ;Fecha creacion      ;DateTime      ;CaptionML=[ENU=Creation date;
                                                              ESP=Fecha creacion];
                                                   Editable=No }
    { 35  ;   ;Confirmado          ;Boolean       ;OnValidate=BEGIN
                                                                IF Confirmado <> xRec.Confirmado THEN
                                                                BEGIN
                                                                  IF Confirmado THEN
                                                                    "Fecha confirmacion" := CURRENTDATETIME;

                                                                  //. Guardar en el historico de la reserva
                                                                  cPar.intro_historic(Delegacion, "Num. Reserva", 0, "ID Servicio", 9, FIELDCAPTION(Confirmado),
                                                                                      FORMAT(xRec.Confirmado), FORMAT(Confirmado));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Confirmed;
                                                              ESP=Confirmado] }
    { 37  ;   ;Fecha confirmacion  ;DateTime      ;CaptionML=[ENU=Confirmation date;
                                                              ESP=Fecha confirmacion];
                                                   Editable=No }
    { 39  ;   ;Adultos             ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Pax Traslado en destino".Adulto WHERE (Delegacion=FIELD(Delegacion),
                                                                                                           Num. Reserva=FIELD(Num. Reserva),
                                                                                                           ID Servicio=FIELD(ID Servicio)));
                                                   CaptionML=[ENU=Adults;
                                                              ESP=Adultos];
                                                   DecimalPlaces=0:0;
                                                   Editable=No }
    { 41  ;   ;Ni¤os               ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Pax Traslado en destino".Ni¤o WHERE (Delegacion=FIELD(Delegacion),
                                                                                                         Num. Reserva=FIELD(Num. Reserva),
                                                                                                         ID Servicio=FIELD(ID Servicio)));
                                                   CaptionML=[ENU=Childs;
                                                              ESP=Ni¤os];
                                                   DecimalPlaces=0:0;
                                                   Editable=No }
    { 43  ;   ;Punto origen        ;Code20        ;TableRelation=Hotel.Hotel;
                                                   CaptionML=[ENU=Origin point;
                                                              ESP=Punto origen];
                                                   Description=Hotel.Hotel }
    { 45  ;   ;Punto destino       ;Code20        ;TableRelation=Hotel.Hotel;
                                                   CaptionML=[ENU=Destination point;
                                                              ESP=Punto destino];
                                                   Description=Hotel.Hotel }
    { 47  ;   ;Touroperador        ;Code10        ;TableRelation=TourOperador.TourOperador;
                                                   Description=TourOperador.TourOperador }
    { 49  ;   ;Bono                ;Code10        ;CaptionML=[ENU=Booking No.;
                                                              ESP=Bono] }
    { 51  ;   ;Personas sin servicio;Decimal      ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Pax Traslado en destino".Persona WHERE (Delegacion=FIELD(Delegacion),
                                                                                                            Num. Reserva=FIELD(Num. Reserva),
                                                                                                            ID Servicio=FIELD(ID Servicio),
                                                                                                            Agrupacion=CONST(0)));
                                                   CaptionML=[ENU=Persons w/o service;
                                                              ESP=Personas sin servicio];
                                                   DecimalPlaces=0:0;
                                                   Description=Sum("Pax Traslado en destino".Persona WHERE (Delegacion=FIELD(Delegacion),Num. Reserva=FIELD(Num. Reserva),ID Servicio=FIELD(ID Servicio),Agrupacion=CONST(0)));
                                                   Editable=No }
    { 53  ;   ;Tipo operacion      ;Option        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Cabecera reserva"."Tipo Operacion" WHERE (Delegacion=FIELD(Delegacion),
                                                                                                                 N§ Interno=FIELD(Num. Reserva)));
                                                   CaptionML=[ENU=Operation Type;
                                                              ESP=Tipo operacion];
                                                   OptionCaptionML=[ENU=Charter,Regular;
                                                                    ESP=Charter,Regular];
                                                   OptionString=Charter,Regular;
                                                   Description=$005;
                                                   Editable=No }
    { 55  ;   ;Tipo Servicio       ;Option        ;OnValidate=VAR
                                                                lwOk@1103355001 : Boolean;
                                                                lwModRsv@1100217000 : Boolean;
                                                              BEGIN
                                                                IF "Tipo Servicio" <> xRec."Tipo Servicio" THEN
                                                                BEGIN
                                                                  IF "Tipo Servicio" = "Tipo Servicio"::Compartido THEN
                                                                    "Servicio privado" := FALSE
                                                                  ELSE
                                                                    "Servicio privado" := TRUE;

                                                                  //. Guardar en el historico de la reserva
                                                                  cPar.intro_historic(Delegacion, "Num. Reserva", 0, "ID Servicio", 9, FIELDCAPTION("Tipo Servicio"),
                                                                                      FORMAT(xRec."Tipo Servicio"), FORMAT("Tipo Servicio"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Service Type;
                                                              ESP=Tipo Servicio];
                                                   OptionCaptionML=[ENU=Shared,Private,Deluxe;
                                                                    ESP=Compartido,Privado,Deluxe];
                                                   OptionString=Compartido,Privado,Deluxe }
  }
  KEYS
  {
    {    ;Delegacion,Num. Reserva,ID Servicio     ;Clustered=Yes }
    {    ;Fecha servicio,Touroperador,Zona servicio destino,Hora recogida }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1100217000 : TextConst 'ENU=Description can only be modified if the type is Zone.;ESP=Solo se puede modificar la descripcion si el tipo es Zona.';
      Text002@1100217001 : TextConst 'ENU=Transfers in destination cannot be created in reservations w/o information.;ESP=No se pueden crear traslados en destino sin informacion en reservas.';
      Text003@1100217002 : TextConst 'ENU=This service date is outside the reservation dates;ESP=La fecha de este servicio no esta dentro de las fechas de la reserva.';
      cPar@1100217003 : Codeunit 7009700;
      Text004@1100217004 : TextConst 'ENU=NEW TRANSFER IN DESTINATION;ESP=NUEVO TRANSFER EN DESTINO';
      Text005@1100217005 : TextConst 'ENU="ID =";ESP="ID ="';
      Text006@1100217006 : TextConst 'ENU=ERASE TRANSFER DESTINATION;ESP=BORRADO TRANSFER EN DESTINO';

    LOCAL PROCEDURE _GetServiceID@1100217001() : Integer;
    VAR
      lrService@1100217000 : Record 7009916;
    BEGIN
      // _GetServiceID

      lrService.RESET;
      lrService.SETRANGE(Delegacion    , Delegacion);
      lrService.SETRANGE("Num. Reserva", "Num. Reserva");
      IF lrService.FINDLAST THEN
        EXIT(lrService."ID Servicio" + 1)
      ELSE
        EXIT(1);
    END;

    LOCAL PROCEDURE _GetDescription@1100217008(pwTipo@1100217000 : Integer) : Text[50];
    VAR
      lrAeropuerto@1100217001 : Record 7009704;
      lrHotel@1100217002 : Record 7009724;
      lrZona@1100217003 : Record 7009713;
    BEGIN
      // _GetDescription

      CASE pwTipo OF
        //. Origen
        0:
        BEGIN
          CASE "Tipo origen" OF
            "Tipo origen"::Aeropuerto:
            BEGIN
              lrAeropuerto.GET(Origen);
              EXIT(lrAeropuerto.Nombre);
            END;
            "Tipo origen"::Hotel:
            BEGIN
              lrHotel.GET(Origen);
              EXIT(lrHotel.Nombre);
            END;
            "Tipo origen"::Zona:
            BEGIN
              lrZona.GET(Origen);
              EXIT(lrZona.Descripcion);
            END;
          END;
        END;
        //. Destino
        1:
        BEGIN
          CASE "Tipo destino" OF
            "Tipo destino"::Aeropuerto:
            BEGIN
              lrAeropuerto.GET(Destino);
              EXIT(lrAeropuerto.Nombre);
            END;
            "Tipo destino"::Hotel:
            BEGIN
              lrHotel.GET(Destino);
              EXIT(lrHotel.Nombre);
            END;
            "Tipo destino"::Zona:
            BEGIN
              lrZona.GET(Destino);
              EXIT(lrZona.Descripcion);
            END;
          END;

        END;
      END;
    END;

    PROCEDURE GetZone@1100217004(pwTipo@1100217000 : Integer) : Code[10];
    VAR
      lrAeropuerto@1100217003 : Record 7009704;
      lrHotel@1100217002 : Record 7009724;
    BEGIN
      // _GetZone

      CASE pwTipo OF
        //. Origen
        0:
        BEGIN
          CASE "Tipo origen" OF
            "Tipo origen"::Aeropuerto:
            BEGIN
              lrAeropuerto.GET(Origen);
              EXIT(lrAeropuerto."Zona fisica");
            END;
            "Tipo origen"::Hotel:
            BEGIN
              lrHotel.GET(Origen);
              EXIT(lrHotel."Zona Fisica");
            END;
            "Tipo origen"::Zona:
            BEGIN
              EXIT(Origen);
            END;
          END;
        END;
        //. Destino
        1:
        BEGIN
          CASE "Tipo destino" OF
            "Tipo destino"::Aeropuerto:
            BEGIN
              lrAeropuerto.GET(Destino);
              EXIT(lrAeropuerto."Zona fisica");
            END;
            "Tipo destino"::Hotel:
            BEGIN
              lrHotel.GET(Destino);
              EXIT(lrHotel."Zona Fisica");
            END;
            "Tipo destino"::Zona:
            BEGIN
              EXIT(Destino);
            END;
          END;

        END;
      END;
    END;

    LOCAL PROCEDURE _CheckReservationDates@1100217002();
    VAR
      lrPerRsv@1100217000 : Record 7009742;
      lrPerRsv2@1100217001 : Record 7009742;
    BEGIN
      // _GetReservationDates

      IF ("Fecha servicio" = 0D) OR
      //-$003   ("ID Servicio" = 0) OR
         ("Num. Reserva" = 0) THEN
        EXIT;

      //. Buscaremos el primer periodo y el ultimo para comprobar si la fecha de servicio esta dentro del periodo

      lrPerRsv.RESET;
      lrPerRsv.SETCURRENTKEY("Fecha entrada");
      lrPerRsv.SETRANGE(Delegacion  , Delegacion);
      lrPerRsv.SETRANGE("N§ Interno", "Num. Reserva");
      lrPerRsv.SETRANGE(Generada    , TRUE);
      IF NOT lrPerRsv.FINDFIRST THEN
        EXIT; //+$004
        //-$004ERROR(Text002);

      lrPerRsv2.RESET;
      lrPerRsv2.SETCURRENTKEY("Fecha entrada");
      lrPerRsv2.SETRANGE(Delegacion  , Delegacion);
      lrPerRsv2.SETRANGE("N§ Interno", "Num. Reserva");
      lrPerRsv2.SETRANGE(Generada    , TRUE);
      lrPerRsv2.FINDLAST;

      IF ("Fecha servicio" < lrPerRsv."Fecha entrada") OR
         ("Fecha servicio" > lrPerRsv2."Fecha salida") THEN
        ERROR(Text003);
    END;

    LOCAL PROCEDURE _DeletePersons@1100217000();
    VAR
      lrPersonaServ@1100217000 : Record 7009917;
    BEGIN
      // _DeletePersons

      //. Borrar todas las personas asignadas al servicio

      lrPersonaServ.RESET;
      lrPersonaServ.SETRANGE(Delegacion    , Delegacion);
      lrPersonaServ.SETRANGE("Num. Reserva", "Num. Reserva");
      lrPersonaServ.SETRANGE("ID Servicio" , "ID Servicio");
      IF lrPersonaServ.FINDSET(TRUE) THEN
        lrPersonaServ.DELETEALL;
    END;

    PROCEDURE CheckEnvioConfirmacion@1100217003();
    VAR
      lrCab@1100217000 : Record 7009741;
      lrTTOO@1100217001 : Record 7009717;
    BEGIN
      // CheckEnvioConfirmacion

      IF NOT lrCab.GET(Delegacion, "Num. Reserva") THEN
        EXIT;

      IF NOT lrCab.Generada THEN
        EXIT;

      IF lrCab."Tipo Persona" = '' THEN
        EXIT;

      IF NOT lrCab."Confirmacion servicios enviada" THEN
        EXIT;

      IF NOT lrTTOO.GET(lrCab."TourOperador Venta") THEN
        EXIT;

      IF NOT lrTTOO."Requiere confirmaci¢n por rsv" THEN
        EXIT;

      lrCab.VALIDATE("Confirmacion servicios enviada", FALSE);
      lrCab.MODIFY;
    END;

    LOCAL PROCEDURE _GetReservationData@1100217005();
    VAR
      lrCab@1100217000 : Record 7009741;
      lrPar@1100217001 : Record 7009700;
    BEGIN
      // _GetTouroperator

      lrPar.FINDFIRST;

      lrCab.GET(Delegacion, "Num. Reserva");
      IF lrPar."Touroperador operativo" = lrPar."Touroperador operativo"::Compra THEN
        Touroperador := lrCab.TourOperador
      ELSE
        Touroperador := lrCab."TourOperador Venta";
      Bono := lrCab.Bono;
    END;

    LOCAL PROCEDURE _UpdatePersonas@1100217007();
    VAR
      lrPersonaServ@1100217000 : Record 7009917;
    BEGIN
      // _UpdatePersonas

      lrPersonaServ.RESET;
      lrPersonaServ.SETRANGE(Delegacion    , Delegacion);
      lrPersonaServ.SETRANGE("Num. Reserva", "Num. Reserva");
      lrPersonaServ.SETRANGE("ID Servicio" , "ID Servicio");
      IF lrPersonaServ.FINDSET(TRUE) THEN
        lrPersonaServ.MODIFYALL("Fecha servicio", "Fecha servicio");
    END;

    LOCAL PROCEDURE _GetHotelReservation@1100217006() : Code[20];
    VAR
      lrPerRsv@1100217000 : Record 7009742;
    BEGIN
      // _GetHotelReservation

      lrPerRsv.RESET;
      lrPerRsv.SETRANGE (Delegacion     , Delegacion);
      lrPerRsv.SETRANGE ("N§ Interno"   , "Num. Reserva");
      lrPerRsv.SETFILTER("Fecha entrada", '<=%1', "Fecha servicio");
      lrPerRsv.SETFILTER("Fecha salida" , '>=%1', "Fecha servicio");
      IF lrPerRsv.FINDFIRST THEN
        EXIT(lrPerRsv."Hotel Booking");
    END;

    BEGIN
    {
      $000 AJS 07042014 CNT-OC-14042, Creamos la tabla para almacenar los servicios de traslado en destino de cada reserva

      $001 AJS 28042014 Modifico el INSERT para asignar las personas automaticamente

      $002 AJS 28042014 Nueva funcion _UpdatePersonas para actualizar la informacion de personas x servicio

      $003 AJS 28042014 Modifico la funcion _CheckReservationDates para que se pueda llamar con el servicio sin crear

      $004 AJS 30042014 Modifico la funcion _CheckReservationDates para poder crear servicios en reservas sin periodos

      $005 AJS 10062014 Nuevo campo "Tipo operacion" calculado sobre la cabecera

      $006 ARM 29092014 CNT-CAR-14063 Nuevo campo Tipo Servicio

      $007 AJS 06102014 Traduccion
    }
    END.
  }
}
