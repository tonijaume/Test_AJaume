OBJECT Table 7010243 Condiciones excursiones
{
  OBJECT-PROPERTIES
  {
    Date=02/10/14;
    Time=13:58:10;
    Modified=Yes;
    Version List=AIC2009;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Excursion Conditions;
               ESP=Condiciones excursiones];
  }
  FIELDS
  {
    { 1   ;   ;Usuario             ;Code20        ;TableRelation=User."User ID";
                                                   CaptionML=[ENU=User;
                                                              ESP=Usuario];
                                                   Description=FK Usuario }
    { 3   ;   ;Fecha               ;Date          ;CaptionML=[ENU=Date;
                                                              ESP=Fecha] }
    { 5   ;   ;Transportista       ;Code10        ;TableRelation="Transportista transfer".Codigo;
                                                   OnValidate=BEGIN
                                                                rTransport.GET(Transportista);

                                                                VALIDATE(Proveedor, rTransport.Proveedor)
                                                              END;

                                                   CaptionML=[ENU=Carrier;
                                                              ESP=Transportista];
                                                   Description=FK Transportista Transfer }
    { 7   ;   ;Tipo Vehiculo       ;Code10        ;TableRelation="Tipo transporte".Codigo;
                                                   CaptionML=[ENU=Vehicle type;
                                                              ESP=Tipo vehiculo];
                                                   Description=FK Tipo Transporte }
    { 9   ;   ;N§ Vehiculos        ;Integer       ;CaptionML=[ENU=Vehicles No.;
                                                              ESP=N§ vehiculos] }
    { 11  ;   ;Tipo Transfer       ;Option        ;CaptionML=[ENU=Transfer Type;
                                                              ESP=Tipo Transfer];
                                                   OptionCaptionML=[ENU=Check-in,Check-out;
                                                                    ESP=Entrada,Salida];
                                                   OptionString=Entrada,Salida }
    { 13  ;   ;Correcto            ;Boolean       ;CaptionML=[ENU=Correct;
                                                              ESP=Correcto] }
    { 15  ;   ;Cod. Suplemento     ;Code10        ;TableRelation="Tipo elemento"."Tipo elemento" WHERE (Humano=CONST(No));
                                                   CaptionML=[ENU=Supplement Code;
                                                              ESP=Cod. Suplemento];
                                                   Description="Tipo elemento"."Tipo elemento" WHERE (Humano=CONST(No)) }
    { 17  ;   ;Touroperador        ;Code10        ;TableRelation=TourOperador.TourOperador;
                                                   CaptionML=[ENU=TourOperator;
                                                              ESP=TourOperador];
                                                   Description=TourOperador.TourOperador }
    { 19  ;   ;Fecha desde         ;Date          ;CaptionML=[ENU=Date From;
                                                              ESP=Fecha desde] }
    { 21  ;   ;Fecha hasta         ;Date          ;CaptionML=[ENU=Date To;
                                                              ESP=Fecha hasta] }
    { 23  ;   ;Origen              ;Code10        ;TableRelation=Aeropuerto.Aeropuerto WHERE (Aeropuerto Local=CONST(Yes));
                                                   CaptionML=[ENU=Origin;
                                                              ESP=Origen];
                                                   Description=Aeropuerto.Aeropuerto WHERE (Aeropuerto Local=CONST(Yes)) }
    { 25  ;   ;Delegacion          ;Code10        ;TableRelation=Delegacion.Codigo;
                                                   CaptionML=[ENU=Local Office;
                                                              ESP=Delegacion];
                                                   Description=Delegacion.Delegacion }
    { 27  ;   ;Total Factura       ;Decimal       ;OnValidate=BEGIN
                                                                "Total Factura (DL)" := ROUND("Total Factura" * "Tasa de cambio");
                                                              END;

                                                   CaptionML=[ENU=Total invoice;
                                                              ESP=Total Factura] }
    { 29  ;   ;Codigo de barras    ;Code20        ;CaptionML=[ENU=Barcode;
                                                              ESP=Codigo de barras] }
    { 31  ;   ;No. Factura proveedor;Code20       ;CaptionML=[ENU=Supplier invoice no.;
                                                              ESP=No. Factura proveedor] }
    { 33  ;   ;Proveedor           ;Code20        ;TableRelation=Vendor.No.;
                                                   OnValidate=BEGIN
                                                                rVendor.GET(Proveedor);
                                                                IF rVendor."Digitos fijos NCF" <> '' THEN BEGIN
                                                                  "Cod. Grupo NCF"     := rVendor."Cod. Grupo NCF";
                                                                  "Comprobante Fiscal" := rVendor."Digitos fijos NCF";
                                                                  "Digitos fijos NCF"  := rVendor."Digitos fijos NCF";
                                                                END
                                                                ELSE BEGIN
                                                                  VALIDATE("Cod. Grupo NCF", rVendor."Cod. Grupo NCF");
                                                                  "Comprobante Fiscal" := '';
                                                                  "Digitos fijos NCF"  := '';
                                                                END;

                                                                //+$002 <
                                                                VALIDATE("Cod. Divisa", rVendor."Currency Code"); //+$004
                                                                //+$002 >
                                                              END;

                                                   CaptionML=[ENU=Supplier;
                                                              ESP=Proveedor];
                                                   Description=Vendor.No. }
    { 35  ;   ;Fecha emision proveedor;Date       ;CaptionML=[ENU=Supplier date of issue;
                                                              ESP=Fecha emision proveedor] }
    { 37  ;   ;Excursion           ;Code20        ;TableRelation="Producto agencia".Codigo WHERE (Tipo Producto=CONST(Excursion),
                                                                                                  Caducado=CONST(No));
                                                   CaptionML=[ENU=Excursion;
                                                              ESP=Excursion];
                                                   Description="Producto agencia".Codigo WHERE (Tipo Producto=CONST(Excursion),Caducado=CONST(No)) }
    { 100 ;   ;Confirmacion proveedor;Code20      ;CaptionML=[ENU=Supplier confirmation;
                                                              ESP=Confirmacion proveedor];
                                                   Description=$008 }
    { 110 ;   ;N§ Habitacion       ;Code10        ;CaptionML=[ENU=Room No.;
                                                              ESP=N§ Habitacion];
                                                   Description=$008 }
    { 115 ;   ;Idioma              ;Code10        ;TableRelation=Language.Code;
                                                   CaptionML=[ENU=Language;
                                                              ESP=Idioma];
                                                   Description=$008, FK Idioma }
    { 120 ;   ;Punto Recogida      ;Text30        ;OnValidate=VAR
                                                                rResExc@1103355000 : Record 7010162;
                                                              BEGIN
                                                              END;

                                                   CaptionML=[ENU=Picking point;
                                                              ESP=Punto Recogida];
                                                   Description=$008 }
    { 125 ;   ;Hora Recogida       ;Time          ;OnValidate=VAR
                                                                rResExc@1103355000 : Record 7010162;
                                                              BEGIN
                                                              END;

                                                   CaptionML=[ENU=Picking time;
                                                              ESP=Hora recogida];
                                                   Description=$008 }
    { 130 ;   ;Observaciones       ;Text250       ;CaptionML=[ENU=Comments;
                                                              ESP=Observaciones];
                                                   Description=$008 }
    { 135 ;   ;N§ Ticket           ;Code10        ;CaptionML=[ENU=Ticket No.;
                                                              ESP=N§ Ticket];
                                                   NotBlank=Yes;
                                                   Description=$008 }
    { 140 ;   ;Nombre Cliente      ;Text30        ;CaptionML=[ENU=Client Name;
                                                              ESP=Nombre cliente];
                                                   Description=$008 }
    { 145 ;   ;Turno Excursion     ;Integer       ;OnValidate=VAR
                                                                rCalendario@1000000000 : Record 7010254;
                                                              BEGIN
                                                                IF "Turno Excursion" <> 0 THEN
                                                                BEGIN
                                                                  rCalendario.RESET;
                                                                  rCalendario.SETRANGE (Excursion     , Excursion);
                                                                  rCalendario.SETRANGE (Turno         , "Turno Excursion");
                                                                  rCalendario.SETFILTER("Fecha inicio", '<=%1', Fecha);
                                                                  rCalendario.SETFILTER("Fecha final" , '>=%1', Fecha);
                                                                  CASE DATE2DWY(Fecha, 1) OF
                                                                    1: rCalendario.SETRANGE(Lunes    , TRUE);
                                                                    2: rCalendario.SETRANGE(Martes   , TRUE);
                                                                    3: rCalendario.SETRANGE(Miercoles, TRUE);
                                                                    4: rCalendario.SETRANGE(Jueves   , TRUE);
                                                                    5: rCalendario.SETRANGE(Viernes  , TRUE);
                                                                    6: rCalendario.SETRANGE(Sabado   , TRUE);
                                                                    7: rCalendario.SETRANGE(Domingo  , TRUE);
                                                                  END;
                                                                  IF NOT rCalendario.FINDFIRST THEN
                                                                    ERROR(Text050);
                                                                END
                                                                ELSE
                                                                BEGIN
                                                                  rCalendario.RESET;
                                                                  rCalendario.SETRANGE(Excursion      , Excursion);
                                                                  rCalendario.SETFILTER("Fecha inicio", '<=%1', Fecha);
                                                                  rCalendario.SETFILTER("Fecha final" , '>=%1', Fecha);
                                                                  CASE DATE2DWY(Fecha, 1) OF
                                                                    1: rCalendario.SETRANGE(Lunes    , TRUE);
                                                                    2: rCalendario.SETRANGE(Martes   , TRUE);
                                                                    3: rCalendario.SETRANGE(Miercoles, TRUE);
                                                                    4: rCalendario.SETRANGE(Jueves   , TRUE);
                                                                    5: rCalendario.SETRANGE(Viernes  , TRUE);
                                                                    6: rCalendario.SETRANGE(Sabado   , TRUE);
                                                                    7: rCalendario.SETRANGE(Domingo  , TRUE);
                                                                  END;
                                                                  IF rCalendario.FINDFIRST THEN
                                                                    ERROR(Text051);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Excursion turn;
                                                              ESP=Turno excursion];
                                                   Description=$008 }
    { 7009700;;Cod. Grupo NCF      ;Code10        ;TableRelation="Grupo configuracion NCF".Codigo WHERE (Tipo grupo=CONST(Compras));
                                                   OnValidate=VAR
                                                                lrGrupNCF@1100253000 : Record 7009831;
                                                              BEGIN
                                                                TESTFIELD(Proveedor);

                                                                IF ("Cod. Grupo NCF" <> xRec."Cod. Grupo NCF") AND ("Cod. Grupo NCF" <> '') THEN BEGIN
                                                                  CLEAR(lrGrupNCF);
                                                                  lrGrupNCF.SETRANGE ("Tipo grupo", lrGrupNCF."Tipo grupo"::Compras);
                                                                  lrGrupNCF.SETRANGE (Codigo      , "Cod. Grupo NCF");
                                                                  IF lrGrupNCF.FINDFIRST THEN BEGIN
                                                                    IF "Digitos fijos NCF" = '' THEN BEGIN
                                                                      lrGrupNCF.TESTFIELD("Serie NCF Facturas");
                                                                      "Comprobante Fiscal" := cNoSeries.GetNextNo(lrGrupNCF."Serie NCF Facturas", Fecha, FALSE);
                                                                    END;
                                                                  END;
                                                                END;

                                                                IF "Cod. Grupo NCF" = '' THEN
                                                                  "Comprobante Fiscal" := '';
                                                              END;

                                                   CaptionML=[ENU=NCF Group Code;
                                                              ESP=Cod. Grupo NCF];
                                                   Description="Grupo configuracion NCF".Codigo WHERE (Tipo grupo=CONST(Compras)) }
    { 7009703;;Comprobante Fiscal  ;Code20        ;OnValidate=VAR
                                                                lrGLSetup@1100253000 : Record 98;
                                                              BEGIN
                                                                lrGLSetup.FINDFIRST;
                                                                IF lrGLSetup."Aplica legislacion NCF" THEN BEGIN
                                                                  IF "Digitos fijos NCF" = '' THEN
                                                                    ERROR(Text053);

                                                                  IF STRLEN("Comprobante Fiscal") <> lrGLSetup."Digitos NCF" THEN
                                                                    ERROR(Text055);

                                                                  IF COPYSTR("Comprobante Fiscal", 1, STRLEN("Digitos fijos NCF")) <> "Digitos fijos NCF" THEN
                                                                    ERROR(Text056);
                                                                END
                                                                ELSE
                                                                  ERROR(Text054);
                                                              END;

                                                   CaptionML=[ENU=Fiscal receipt;
                                                              ESP=Comprobante fiscal] }
    { 7009704;;Importe a validar   ;Decimal       ;OnValidate=BEGIN
                                                                "Importe a validar (DL)" := ROUND("Importe a validar" * "Tasa de cambio");
                                                              END;

                                                   CaptionML=[ENU=Amount to validate;
                                                              ESP=Importe a validar] }
    { 7009705;;Digitos fijos NCF   ;Code10        ;CaptionML=[ENU=NCF fixed digits;
                                                              ESP=Digitos fijos NCF] }
    { 7009706;;Cod. Divisa         ;Code10        ;TableRelation=Currency.Code;
                                                   OnValidate=BEGIN
                                                                //+$004 <
                                                                rGLSetup.FINDFIRST;
                                                                IF (rGLSetup."LCY Code" <> "Cod. Divisa") AND ("Cod. Divisa" <> '') THEN
                                                                  "Tasa de cambio" := TipoCambioDivisa
                                                                ELSE
                                                                  "Tasa de cambio" := 1;
                                                                //+$004 >
                                                              END;

                                                   CaptionML=[ENU=Currency Code;
                                                              ESP=Cod. Divisa];
                                                   Description=$002 }
    { 7009707;;Tasa de cambio      ;Decimal       ;OnValidate=BEGIN
                                                                "Total Factura (DL)"     := ROUND("Total Factura" * "Tasa de cambio");
                                                                "Importe a validar (DL)" := ROUND("Importe a validar" * "Tasa de cambio");
                                                              END;

                                                   CaptionML=[ENU=Exchange rate;
                                                              ESP=Tasa de cambio];
                                                   Description=$002;
                                                   AutoFormatType=2 }
    { 7009708;;Total Factura (DL)  ;Decimal       ;CaptionML=[ENU=Total Invoice (LCY);
                                                              ESP=Total Factura (DL)];
                                                   Description=$002;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 7009709;;Importe a validar (DL);Decimal     ;CaptionML=[ENU=Amount to validate (LCY);
                                                              ESP=Importe a validar (DL)];
                                                   Description=$002;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 7009710;;Comisionable        ;Boolean       ;CaptionML=[ENU=Commissionable;
                                                              ESP=Comisionable];
                                                   Description=$005 }
    { 7009711;;Oficina             ;Code10        ;TableRelation="Oficina ventas".Codigo;
                                                   CaptionML=[ENU=Office;
                                                              ESP=Oficina];
                                                   Description=$006 }
    { 7009713;;Importe base        ;Decimal       ;CaptionML=[ENU=Base amount;
                                                              ESP=Importe base];
                                                   Description=$007 }
    { 7009715;;Importe exento      ;Decimal       ;CaptionML=[ENU=Exempted amount;
                                                              ESP=Importe exento];
                                                   Description=$007 }
    { 7009717;;Importe resto validacion;Decimal   ;CaptionML=[ENU=Validated amount;
                                                              ESP=Importe validado];
                                                   Description=$007 }
  }
  KEYS
  {
    {    ;Usuario                                 ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      cNoSeries@1100253000 : Codeunit 396;
      Text050@1000000002 : TextConst 'ENU=The turn selected is not active for the date.;ESP=El turno seleccionado no est  activo para la fecha.';
      Text051@1000000001 : TextConst 'ENU=You must select a turn.;ESP=Debe seleccionar un turno.';
      Text053@1100253003 : TextConst 'ENU=This supplier does not have an own numbering of Tax Certificate;ESP=Este proveedor no tiene una numeracion propia de Comprobantes fiscales, el numero se asigna automaticamente.';
      Text054@1100253002 : TextConst 'ENU=In this company the legislation on Numberings of Tax Certificate is not applied;ESP=En esta empresa no se aplica la legislacion de Numeradores de Comprobante fiscal';
      Text055@1100253001 : TextConst 'ENU=The length of the certificate number does not coincide with the established in accounting configuration;ESP=La longitud del numero de comprobante no coincide con la establecida en configuracion de contabilidad.';
      rVendor@1100253004 : Record 23;
      rTransport@1100253005 : Record 7009801;
      Text056@1100253006 : TextConst 'ENU=Indicated tax certificate number is not correct for this supplier;ESP=El numero de comprobante fiscal indicado es incorrecto para el proveedor.';
      rGLSetup@1100217001 : Record 98;
      rCamb@1100217000 : Record 330;
      rCalendario@1000000000 : Record 7010254;

    PROCEDURE TipoCambioDivisa@8() : Decimal;
    VAR
      lwFecha@1103355002 : Date;
    BEGIN
      // TipoCambioDivisa

      rCamb.RESET;
      rCamb.SETRANGE ("Currency Code"  , "Cod. Divisa");
      rCamb.SETFILTER("Starting Date", '<=%1', WORKDATE);
      rCamb.FINDLAST;

      EXIT(rCamb."Relational Exch. Rate Amount")
    END;

    BEGIN
    {
      $001 AJS 04032013 Nuevo campo Excursion

      $002 AJS 18052013 Nuevos campos para permitir indicar la tasa de cambio a emplear en la factura

      $003 AJS 21052013 Cuando se rellena el total factura hay que actualizar el total en divisa local

      $004 AJS 07082013 Paso el codigo de tasa de cambio al validate de cod. divisa en lugar de proveedor

      $005 AJS 11122013 Nuevo campo Comisionable para crear suplementos de forma masiva

      $006 AJS 12122013 Nuevo campo Oficina

      $007 AJS 20082014 Nuevos campos "Importe base" y "Importe exento"

      $008 AJS 01102014 A¤ado nuevos campos para hacer una edicion limitada de reservas de excursiones
    }
    END.
  }
}
