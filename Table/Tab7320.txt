OBJECT Table 7320 Warehouse Shipment Header
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=NAVW16.00.01;
  }
  PROPERTIES
  {
    DataCaptionFields=No.;
    OnInsert=BEGIN
               WhseSetup.GET;
               IF "No." = '' THEN BEGIN
                 WhseSetup.TESTFIELD("Whse. Ship Nos.");
                 NoSeriesMgt.InitSeries(WhseSetup."Whse. Ship Nos.",xRec."No. Series","Posting Date","No.","No. Series");
               END;

               NoSeriesMgt.SetDefaultSeries("Shipping No. Series",WhseSetup."Posted Whse. Shipment Nos.");

               GetLocation("Location Code");
               VALIDATE("Bin Code",Location."Shipment Bin Code");
               "Posting Date" := WORKDATE;
               "Shipment Date" := WORKDATE;
             END;

    OnDelete=VAR
               WhseShptLine@1001 : Record 7321;
             BEGIN
               TESTFIELD(Status,Status::Open);
               WhseShptLine.DeleteAllWhseShptLines("No.");
               DeleteRelatedLines;
             END;

    OnRename=BEGIN
               ERROR(Text000,TABLECAPTION);
             END;

    CaptionML=[ENU=Warehouse Shipment Header;
               ESP=Cabecera env¡o almac‚n];
    LookupFormID=Form7339;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;OnValidate=BEGIN
                                                                TESTFIELD(Status,Status::Open);
                                                                WhseSetup.GET;
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  NoSeriesMgt.TestManual(WhseSetup."Whse. Ship Nos.");
                                                                  "No. Series" := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              ESP=N§] }
    { 2   ;   ;Location Code       ;Code10        ;TableRelation=Location WHERE (Use As In-Transit=CONST(No));
                                                   OnValidate=VAR
                                                                WhseShptLine@1002 : Record 7321;
                                                              BEGIN
                                                                IF NOT WmsManagement.LocationIsAllowed("Location Code") THEN
                                                                  ERROR(Text003,"Location Code");

                                                                IF "Location Code" <> xRec."Location Code" THEN BEGIN
                                                                  "Zone Code" := '';
                                                                  "Bin Code" := '';
                                                                  WhseShptLine.SETRANGE("No.","No.");
                                                                  IF WhseShptLine.FIND('-') THEN
                                                                    ERROR(
                                                                      Text001,
                                                                      FIELDCAPTION("Location Code"));
                                                                END;

                                                                GetLocation("Location Code");
                                                                Location.TESTFIELD("Require Shipment");
                                                                IF Location."Directed Put-away and Pick" THEN
                                                                  VALIDATE("Bin Code",Location."Shipment Bin Code");

                                                                IF USERID <> '' THEN BEGIN
                                                                  FILTERGROUP := 2;
                                                                  SETRANGE("Location Code","Location Code");
                                                                  FILTERGROUP := 0;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Location Code;
                                                              ESP=C¢d. almac‚n] }
    { 3   ;   ;Assigned User ID    ;Code20        ;TableRelation="Warehouse Employee" WHERE (Location Code=FIELD(Location Code));
                                                   OnValidate=BEGIN
                                                                IF "Assigned User ID" <> '' THEN BEGIN
                                                                  "Assignment Date" := TODAY;
                                                                  "Assignment Time" := TIME;
                                                                END ELSE BEGIN
                                                                  "Assignment Date" := 0D;
                                                                  "Assignment Time" := 0T;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Assigned User ID;
                                                              ESP=Id. usuario asignado] }
    { 4   ;   ;Assignment Date     ;Date          ;CaptionML=[ENU=Assignment Date;
                                                              ESP=Fecha asignaci¢n];
                                                   Editable=No }
    { 5   ;   ;Assignment Time     ;Time          ;CaptionML=[ENU=Assignment Time;
                                                              ESP=Hora asignaci¢n];
                                                   Editable=No }
    { 6   ;   ;Sorting Method      ;Option        ;OnValidate=BEGIN
                                                                IF "Sorting Method" <> xRec."Sorting Method" THEN
                                                                  SortWhseDoc;
                                                              END;

                                                   CaptionML=[ENU=Sorting Method;
                                                              ESP=M‚todo ordenaci¢n];
                                                   OptionCaptionML=[ENU=" ,Item,Document,Shelf or Bin,Due Date,Destination";
                                                                    ESP=" ,Prod.,Documento,Estant. o ubic.,Fecha vto.,Destino"];
                                                   OptionString=[ ,Item,Document,Shelf or Bin,Due Date,Destination] }
    { 7   ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              ESP=Nos. serie] }
    { 11  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Warehouse Comment Line" WHERE (Table Name=CONST(Whse. Shipment),
                                                                                                     Type=CONST(" "),
                                                                                                     No.=FIELD(No.)));
                                                   CaptionML=[ENU=Comment;
                                                              ESP=Comentario];
                                                   Editable=No }
    { 12  ;   ;Bin Code            ;Code20        ;TableRelation=IF (Zone Code=FILTER('')) Bin.Code WHERE (Location Code=FIELD(Location Code))
                                                                 ELSE IF (Zone Code=FILTER(<>'')) Bin.Code WHERE (Location Code=FIELD(Location Code),
                                                                                                                  Zone Code=FIELD(Zone Code));
                                                   OnValidate=VAR
                                                                Bin@1000 : Record 7354;
                                                                BinType@1001 : Record 7303;
                                                              BEGIN
                                                                IF (xRec."Bin Code" <> "Bin Code") OR ("Zone Code" = '') THEN BEGIN
                                                                  TESTFIELD(Status,Status::Open);
                                                                  IF "Bin Code" <> '' THEN BEGIN
                                                                    GetLocation("Location Code");
                                                                    Location.TESTFIELD("Bin Mandatory");
                                                                    IF "Bin Code" = Location."Adjustment Bin Code" THEN
                                                                      FIELDERROR(
                                                                        "Bin Code",
                                                                          STRSUBSTNO(
                                                                            Text005,
                                                                            Location.FIELDCAPTION("Adjustment Bin Code"),
                                                                            Location.TABLECAPTION));

                                                                    IF Location."Directed Put-away and Pick" THEN BEGIN
                                                                      Bin.GET("Location Code","Bin Code");
                                                                      Bin.TESTFIELD("Bin Type Code");
                                                                      BinType.GET(Bin."Bin Type Code");
                                                                      BinType.TESTFIELD(Ship);
                                                                      "Zone Code" := Bin."Zone Code";
                                                                    END;
                                                                  END;
                                                                  MessageIfShptLinesExist(FIELDCAPTION("Bin Code"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Bin Code;
                                                              ESP=C¢d. ubicaci¢n] }
    { 13  ;   ;Zone Code           ;Code10        ;TableRelation=Zone.Code WHERE (Location Code=FIELD(Location Code));
                                                   OnValidate=BEGIN
                                                                IF "Zone Code" <> xRec."Zone Code" THEN BEGIN
                                                                  TESTFIELD(Status,Status::Open);
                                                                  IF "Zone Code" <> '' THEN BEGIN
                                                                    GetLocation("Location Code");
                                                                    Location.TESTFIELD("Directed Put-away and Pick");
                                                                  END;
                                                                  "Bin Code" := '';
                                                                  MessageIfShptLinesExist(FIELDCAPTION("Zone Code"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Zone Code;
                                                              ESP=C¢d. zona] }
    { 34  ;   ;Document Status     ;Option        ;OnValidate=VAR
                                                                WhsePickRqst@1000 : Record 7325;
                                                              BEGIN
                                                                CALCFIELDS("Completely Picked");
                                                                IF "Completely Picked" <> xRec."Completely Picked" THEN BEGIN
                                                                  WhsePickRqst.SETRANGE("Document Type",WhsePickRqst."Document Type"::Shipment);
                                                                  WhsePickRqst.SETRANGE("Document No.","No.");
                                                                  WhsePickRqst.MODIFYALL("Completely Picked","Completely Picked");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Document Status;
                                                              ESP=Estado documento];
                                                   OptionCaptionML=[ENU=" ,Partially Picked,Partially Shipped,Completely Picked,Completely Shipped";
                                                                    ESP=" ,Picking parcial,Enviado parcial,Picking completo,Enviado completo"];
                                                   OptionString=[ ,Partially Picked,Partially Shipped,Completely Picked,Completely Shipped];
                                                   Editable=No }
    { 39  ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              ESP=Fecha registro] }
    { 41  ;   ;Shipping Agent Code ;Code10        ;TableRelation="Shipping Agent";
                                                   OnValidate=BEGIN
                                                                IF xRec."Shipping Agent Code" = "Shipping Agent Code" THEN
                                                                  EXIT;

                                                                "Shipping Agent Service Code" := '';
                                                              END;

                                                   CaptionML=[ENU=Shipping Agent Code;
                                                              ESP=C¢d. transportista] }
    { 42  ;   ;Shipping Agent Service Code;Code10 ;TableRelation="Shipping Agent Services".Code WHERE (Shipping Agent Code=FIELD(Shipping Agent Code));
                                                   CaptionML=[ENU=Shipping Agent Service Code;
                                                              ESP=C¢d. servicio transportista] }
    { 43  ;   ;Shipment Method Code;Code10        ;TableRelation="Shipment Method";
                                                   CaptionML=[ENU=Shipment Method Code;
                                                              ESP=C¢d. condiciones env¡o] }
    { 45  ;   ;Shipment Date       ;Date          ;OnValidate=VAR
                                                                WhseShptLine@1000 : Record 7321;
                                                              BEGIN
                                                                IF "Shipment Date" <> xRec."Shipment Date" THEN BEGIN
                                                                  WhseShptLine.SETRANGE("No.","No.");
                                                                  IF WhseShptLine.FIND('-') THEN
                                                                    IF CONFIRM(
                                                                      STRSUBSTNO(Text008,FIELDCAPTION("Shipment Date")),FALSE)
                                                                    THEN
                                                                      WhseShptLine.MODIFYALL("Shipment Date","Shipment Date");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Shipment Date;
                                                              ESP=Fecha env¡o] }
    { 46  ;   ;Completely Picked   ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Min("Warehouse Shipment Line"."Completely Picked" WHERE (No.=FIELD(No.)));
                                                   CaptionML=[ENU=Completely Picked;
                                                              ESP=Picking completo];
                                                   Editable=No }
    { 47  ;   ;Status              ;Option        ;CaptionML=[ENU=Status;
                                                              ESP=Estado];
                                                   OptionCaptionML=[ENU=Open,Released;
                                                                    ESP=Abierto,Lanzado];
                                                   OptionString=Open,Released;
                                                   Editable=No }
    { 48  ;   ;External Document No.;Code20       ;CaptionML=[ENU=External Document No.;
                                                              ESP=N§ documento externo] }
    { 50  ;   ;Create Posted Header;Boolean       ;CaptionML=[ENU=Create Posted Header;
                                                              ESP=Crear cabecera regist.] }
    { 61  ;   ;Shipping No.        ;Code20        ;CaptionML=[ENU=Shipping No.;
                                                              ESP=N§ sig. albar n venta] }
    { 62  ;   ;Last Shipping No.   ;Code20        ;TableRelation="Posted Whse. Shipment Header";
                                                   CaptionML=[ENU=Last Shipping No.;
                                                              ESP=élt. n§ albar n venta];
                                                   Editable=No }
    { 63  ;   ;Shipping No. Series ;Code10        ;TableRelation="No. Series";
                                                   OnValidate=BEGIN
                                                                IF "Shipping No. Series" <> '' THEN BEGIN
                                                                  WhseSetup.GET;
                                                                  WhseSetup.TESTFIELD("Posted Whse. Shipment Nos.");
                                                                  NoSeriesMgt.TestSeries(WhseSetup."Posted Whse. Shipment Nos.","Shipping No. Series");
                                                                END;
                                                                TESTFIELD("Shipping No.",'');
                                                              END;

                                                   OnLookup=BEGIN
                                                              WITH WhseShptHeader DO BEGIN
                                                                WhseShptHeader := Rec;
                                                                WhseSetup.GET;
                                                                WhseSetup.TESTFIELD("Posted Whse. Shipment Nos.");
                                                                IF NoSeriesMgt.LookupSeries(WhseSetup."Posted Whse. Shipment Nos.","Shipping No. Series") THEN
                                                                  VALIDATE("Shipping No. Series");
                                                                Rec := WhseShptHeader;
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Shipping No. Series;
                                                              ESP=N§ serie alb. venta] }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Location Code                            }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Location@1002 : Record 14;
      WhseSetup@1003 : Record 5769;
      WhseShptHeader@1013 : Record 7320;
      NoSeriesMgt@1001 : Codeunit 396;
      Text000@1011 : TextConst 'ENU=You cannot rename a %1.;ESP=No se puede cambiar el nombre a %1.';
      Text001@1010 : TextConst 'ENU=You cannot change the %1, because the document has one or more lines.;ESP=No puede cambiar el %1, porque el documento tiene una o m s l¡neas.';
      Text002@1000 : TextConst 'ENU=You must first set up user %1 as a warehouse employee.;ESP=Primero debe configurar usuario %1 como empleado almac‚n.';
      WmsManagement@1004 : Codeunit 7302;
      Text003@1005 : TextConst 'ENU=You are not allowed to use location code %1.;ESP=No le est  permitido utilizar %1 c¢d. almac‚n.';
      ItemTrackingMgt@1006 : Codeunit 6500;
      HideValidationDialog@1007 : Boolean;
      Text005@1008 : TextConst 'ENU=must not be the %1 of the %2;ESP=no debe ser el %1 del %2';
      Text006@1012 : TextConst 'ENU=You have changed %1 on the %2, but it has not been changed on the existing Warehouse Shipment Lines.\;ESP=Ha modificado %1 en la %2, pero no ha sido modificado en las l¡ns. recep. almac‚n actuales.\';
      Text007@1009 : TextConst 'ENU=You must update the existing Warehouse Shipment Lines manually.;ESP=Debe actualizar las l¡ns. recep. almac‚n actuales manualmente.';
      Text008@1014 : TextConst 'ENU=You have modified the %1.\\Do you want to update the lines?;ESP=Ha modificado el %1.\\¨Desea actualizar las l¡neas?';

    PROCEDURE AssistEdit@8(OldWhseShptHeader@1000 : Record 7320) : Boolean;
    VAR
      WhseShptHeader@1001 : Record 7320;
    BEGIN
      WhseSetup.GET;
      WITH WhseShptHeader DO BEGIN
        WhseShptHeader := Rec;
        WhseSetup.TESTFIELD("Whse. Ship Nos.");
        IF NoSeriesMgt.SelectSeries(
          WhseSetup."Whse. Ship Nos.",OldWhseShptHeader."No. Series","No. Series")
        THEN BEGIN
          NoSeriesMgt.SetSeries("No.");
          Rec := WhseShptHeader;
          EXIT(TRUE);
        END;
      END;
    END;

    PROCEDURE SortWhseDoc@3();
    VAR
      WhseShptLine@1001 : Record 7321;
      SequenceNo@1000 : Integer;
    BEGIN
      WhseShptLine.SETRANGE("No.","No.");
      CASE "Sorting Method" OF
        "Sorting Method"::Item:
          WhseShptLine.SETCURRENTKEY("No.","Item No.");
        "Sorting Method"::Document:
          WhseShptLine.SETCURRENTKEY("No.","Source Document","Source No.");
        "Sorting Method"::"Shelf or Bin":
          BEGIN
            GetLocation("Location Code");
            IF Location."Bin Mandatory" THEN
              WhseShptLine.SETCURRENTKEY("No.","Bin Code")
            ELSE
              WhseShptLine.SETCURRENTKEY("No.","Shelf No.");
          END;
        "Sorting Method"::"Due Date":
          WhseShptLine.SETCURRENTKEY("No.","Due Date");
        "Sorting Method"::Destination:
          WhseShptLine.SETCURRENTKEY("No.","Destination Type","Destination No.");
      END;

      IF WhseShptLine.FIND('-') THEN BEGIN
        SequenceNo := 10000;
        REPEAT
          WhseShptLine."Sorting Sequence No." := SequenceNo;
          WhseShptLine.MODIFY;
          SequenceNo := SequenceNo + 10000;
        UNTIL WhseShptLine.NEXT = 0;
      END;
    END;

    PROCEDURE GetDocumentStatus@15(LineNo@1003 : Integer) : Integer;
    VAR
      WhseShptLine@1001 : Record 7321;
    BEGIN
      WhseShptLine.SETRANGE("No.","No.");
      IF LineNo <> 0 THEN
        WhseShptLine.SETFILTER("Line No.",'<>%1',LineNo);
      IF NOT WhseShptLine.FIND('-') THEN
        EXIT(WhseShptLine.Status::" ");

      WhseShptLine.SETRANGE(Status,WhseShptLine.Status::"Partially Shipped");
      IF WhseShptLine.FIND('-') THEN
        EXIT(WhseShptLine.Status);

      WhseShptLine.SETRANGE(Status,WhseShptLine.Status::"Partially Picked");
      IF WhseShptLine.FIND('-') THEN
        EXIT(WhseShptLine.Status);

      WhseShptLine.SETRANGE(Status,WhseShptLine.Status::"Completely Picked");
      IF WhseShptLine.FIND('-') THEN BEGIN
        WhseShptLine.SETFILTER(Status,'<%1',WhseShptLine.Status::"Completely Picked");
        IF WhseShptLine.FIND('-') THEN
          EXIT(WhseShptLine.Status::"Partially Picked")
        ELSE
          EXIT(WhseShptLine.Status);
      END;

      WhseShptLine.SETRANGE(Status,WhseShptLine.Status::"Completely Shipped");
      IF WhseShptLine.FIND('-') THEN BEGIN
        WhseShptLine.SETFILTER(Status,'<%1',WhseShptLine.Status::"Completely Shipped");
        IF WhseShptLine.FIND('-') THEN
          EXIT(WhseShptLine.Status::"Partially Shipped")
        ELSE
          EXIT(WhseShptLine.Status);
      END;

      EXIT(WhseShptLine.Status);
    END;

    LOCAL PROCEDURE MessageIfShptLinesExist@7(ChangedFieldName@1000 : Text[80]);
    VAR
      WhseShptLine@1001 : Record 7321;
    BEGIN
      WhseShptLine.SETRANGE("No.","No.");
      IF WhseShptLine.FIND('-') THEN
        IF NOT HideValidationDialog THEN
          MESSAGE(
            STRSUBSTNO(
              Text006,ChangedFieldName,TABLECAPTION) + Text007);
    END;

    LOCAL PROCEDURE GetLocation@10(LocationCode@1000 : Code[10]);
    BEGIN
      IF LocationCode = '' THEN
        Location.GetLocationSetup(LocationCode,Location)
      ELSE
        IF Location.Code <> LocationCode THEN
          Location.GET(LocationCode);
    END;

    PROCEDURE LookupWhseShptHeader@1(VAR WhseShptHeader@1001 : Record 7320) : Boolean;
    BEGIN
      COMMIT;
      IF USERID <> '' THEN BEGIN
        WhseShptHeader.FILTERGROUP := 2;
        WhseShptHeader.SETRANGE("Location Code");
      END;
      IF FORM.RUNMODAL(0,WhseShptHeader) = ACTION::LookupOK THEN;
      IF USERID <> '' THEN BEGIN
        WhseShptHeader.FILTERGROUP := 2;
        WhseShptHeader.SETRANGE("Location Code",WhseShptHeader."Location Code");
        WhseShptHeader.FILTERGROUP := 0;
      END;
    END;

    PROCEDURE LookupLocation@4(VAR WhseShptHeader@1001 : Record 7320) : Boolean;
    VAR
      Location@1000 : Record 14;
    BEGIN
      COMMIT;
      Location.FILTERGROUP := 2;
      Location.SETRANGE(Code);
      IF FORM.RUNMODAL(FORM::"Locations with Warehouse List",Location) = ACTION::LookupOK THEN
        WhseShptHeader.VALIDATE("Location Code",Location.Code);
      Location.FILTERGROUP := 0;
    END;

    PROCEDURE SetHideValidationDialog@14(NewHideValidationDialog@1000 : Boolean);
    BEGIN
      HideValidationDialog := NewHideValidationDialog;
    END;

    PROCEDURE DeleteRelatedLines@5();
    VAR
      WhsePickRqst@1001 : Record 7325;
      WhseComment@1000 : Record 5770;
    BEGIN
      WhsePickRqst.SETRANGE("Document Type",WhsePickRqst."Document Type"::Shipment);
      WhsePickRqst.SETRANGE("Document No.","No.");
      WhsePickRqst.DELETEALL;

      WhseComment.SETRANGE("Table Name",WhseComment."Table Name"::"Whse. Shipment");
      WhseComment.SETRANGE(Type,WhseComment.Type::" ");
      WhseComment.SETRANGE("No.","No.");
      WhseComment.DELETEALL;

      ItemTrackingMgt.DeleteWhseItemTrkgLines(
        DATABASE::"Warehouse Shipment Line",0,"No.",'',0,0,'',FALSE);
    END;

    PROCEDURE FindFirstAllowedRec@2(Which@1000 : Text[1024]) : Boolean;
    VAR
      WhseShptHeader@1001 : Record 7320;
      WMSManagement@1002 : Codeunit 7302;
    BEGIN
      IF FIND(Which) THEN BEGIN
        WhseShptHeader := Rec;
        WHILE TRUE DO BEGIN
          IF WMSManagement.LocationIsAllowedToView("Location Code") THEN
            EXIT(TRUE);

          IF NEXT(1) = 0 THEN BEGIN
            Rec := WhseShptHeader;
            IF FIND(Which) THEN
              WHILE TRUE DO BEGIN
                IF WMSManagement.LocationIsAllowedToView("Location Code") THEN
                  EXIT(TRUE);

                IF NEXT(-1) = 0 THEN
                  EXIT(FALSE);
              END;
          END;
        END;
      END;
      EXIT(FALSE);
    END;

    PROCEDURE FindNextAllowedRec@11(Steps@1000 : Integer) : Integer;
    VAR
      WhseShptHeader@1002 : Record 7320;
      WMSManagement@1001 : Codeunit 7302;
      RealSteps@1003 : Integer;
      NextSteps@1004 : Integer;
    BEGIN
      RealSteps := 0;
      IF Steps <> 0 THEN BEGIN
        WhseShptHeader := Rec;
        REPEAT
          NextSteps := NEXT(Steps / ABS(Steps));
          IF WMSManagement.LocationIsAllowedToView("Location Code") THEN BEGIN
            RealSteps := RealSteps + NextSteps;
            WhseShptHeader := Rec;
          END;
        UNTIL (NextSteps = 0) OR (RealSteps = Steps);
        Rec := WhseShptHeader;
        IF NOT FIND THEN;
      END;
      EXIT(RealSteps);
    END;

    PROCEDURE ErrorIfUserIsNotWhseEmployee@13();
    VAR
      WhseEmployee@1000 : Record 7301;
    BEGIN
      IF USERID <> '' THEN BEGIN
        WhseEmployee.SETRANGE("User ID",USERID);
        IF NOT WhseEmployee.FIND('-') THEN
          ERROR(Text002,USERID);
      END;
    END;

    BEGIN
    END.
  }
}
