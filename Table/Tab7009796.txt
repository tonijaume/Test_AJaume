OBJECT Table 7009796 Agrupacion
{
  OBJECT-PROPERTIES
  {
    Date=13/03/15;
    Time=[ 9:28:33];
    Modified=Yes;
    Version List=AIC2009,OC-12003,OC-14042,COM;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               "N§ vehiculos" := 1;
             END;

    OnDelete=VAR
               lrMaltAgrp@1100253000 : Record 7009903;
               lrGuias@1100253001 : Record 7009905;
               lrComentAgr@1000000000 : Record 7009813;
             BEGIN

               // $002 JPT 02/05/12 CNT-CAR12004-05
               CLEAR(lrMaltAgrp);
               lrMaltAgrp.SETRANGE("Num Agrupacion", "N§ Agrupacion");
               IF lrMaltAgrp.FINDSET(TRUE) THEN
                 lrMaltAgrp.DELETEALL;

               // $003 JPT 09/05/12 CNT-CAR-12004
               CLEAR(lrGuias);
               lrGuias.SETRANGE("Num.Agrupacion", "N§ Agrupacion");
               IF lrGuias.FINDSET(TRUE) THEN
                 lrGuias.DELETEALL;

               //+$029 <
               lrComentAgr.RESET;
               lrComentAgr.SETRANGE(Agrupacion, "N§ Agrupacion");
               IF lrComentAgr.FINDSET(TRUE) THEN
                 lrComentAgr.DELETEALL;
               //+$029 >
             END;

    CaptionML=[ENU=Transfer service;
               ESP=Agrupacion];
    LookupFormID=Form7009906;
    DrillDownFormID=Form7009906;
  }
  FIELDS
  {
    { 1   ;   ;N§ Agrupacion       ;Integer       ;CaptionML=[ENU=Service No.;
                                                              ESP=N§ Agrupacion];
                                                   NotBlank=Yes;
                                                   Description=PK;
                                                   Editable=No }
    { 3   ;   ;Fecha               ;Date          ;OnValidate=VAR
                                                                lrMalt@1100253000 : Record 7009903;
                                                                lrGuia@1100253001 : Record 7009905;
                                                              BEGIN
                                                                // $004
                                                                CLEAR(lrMalt);
                                                                lrMalt.SETRANGE("Num Agrupacion", "N§ Agrupacion");
                                                                lrMalt.MODIFYALL("Fecha Agrupacion", Fecha);

                                                                CLEAR(lrGuia);
                                                                lrGuia.SETRANGE("Num.Agrupacion", "N§ Agrupacion");
                                                                lrGuia.MODIFYALL("Fecha Agrupacion", Fecha);
                                                              END;

                                                   CaptionML=[ENU=Date;
                                                              ESP=Fecha];
                                                   Editable=No }
    { 5   ;   ;Zona                ;Code10        ;TableRelation="Zonas transfer".Zona;
                                                   CaptionML=[ENU=Zone;
                                                              ESP=Zona];
                                                   Description=FK Zonas Transfer;
                                                   Editable=No }
    { 7   ;   ;N§ Reservas         ;Integer       ;CaptionML=[ENU=Reservations No.;
                                                              ESP=N§ Reservas];
                                                   Editable=No }
    { 9   ;   ;Anuladas            ;Decimal       ;CaptionML=[ENU=Cancelleds;
                                                              ESP=Anuladas];
                                                   DecimalPlaces=0:0;
                                                   Editable=No }
    { 11  ;   ;Reservas manuales   ;Decimal       ;CaptionML=[ENU=Manual Reservations;
                                                              ESP=Reservas manuales];
                                                   DecimalPlaces=0:0;
                                                   Editable=No }
    { 13  ;   ;Tipo transfer       ;Option        ;CaptionML=[ENU=Transfer Type;
                                                              ESP=Tipo Transfer];
                                                   OptionCaptionML=[ENU=Arrival,Departure;
                                                                    ESP=Entrada,Salida];
                                                   OptionString=Entrada,Salida;
                                                   Editable=No }
    { 15  ;   ;Transportista       ;Code10        ;TableRelation="Transportista transfer".Codigo;
                                                   OnValidate=BEGIN
                                                                IF Transportista <> xRec.Transportista THEN
                                                                BEGIN
                                                                  _BuscaAplicaPrecioCompra;

                                                                  _CheckEnlaceCorrecto;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Carrier;
                                                              ESP=Transportista];
                                                   Description=FK Transportistas }
    { 17  ;   ;Tipo vehiculo       ;Code10        ;TableRelation="Tipo transporte".Codigo;
                                                   OnValidate=BEGIN
                                                                _CheckEnlaceCorrecto;
                                                              END;

                                                   CaptionML=[ENU=Vehicle type;
                                                              ESP=Tipo vehiculo];
                                                   Description=FK Vehiculos }
    { 19  ;   ;N§ vehiculos        ;Integer       ;CaptionML=[ENU=Vehicles No.;
                                                              ESP=N§ vehiculos] }
    { 21  ;   ;TourOperadores      ;Text109       ;CaptionML=[ENU=TourOperators;
                                                              ESP=Touroperadores];
                                                   Editable=No }
    { 22  ;   ;Zonas               ;Text109       ;CaptionML=[ENU=Zones;
                                                              ESP=Zonas];
                                                   Editable=No }
    { 23  ;   ;Estado              ;Option        ;CaptionML=[ENU=Status;
                                                              ESP=Estado];
                                                   OptionCaptionML=[ENU=Pending,Generated,Confirmed;
                                                                    ESP=Pendiente,Generado,Confirmado];
                                                   OptionString=Pendiente,Generado,Confirmado;
                                                   Editable=No }
    { 25  ;   ;Personas entrada    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Reserva Transfer"."N§ Personas" WHERE (Agrupacion entrada=FIELD(N§ Agrupacion)));
                                                   CaptionML=[ENU=Arrival People;
                                                              ESP=Personas entrada];
                                                   DecimalPlaces=0:0;
                                                   Description=Calculado sobre reserva transfer;
                                                   Editable=No }
    { 27  ;   ;Personas salida     ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Reserva Transfer"."N§ Personas" WHERE (Agrupacion salida=FIELD(N§ Agrupacion)));
                                                   CaptionML=[ENU=Departure people;
                                                              ESP=Personas salida];
                                                   DecimalPlaces=0:0;
                                                   Description=Calculado sobre reserva transfer;
                                                   Editable=No }
    { 29  ;   ;Reservas entrada    ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Reserva Transfer" WHERE (Agrupacion entrada=FIELD(N§ Agrupacion)));
                                                   CaptionML=[ENU=Arrival reservations;
                                                              ESP=Reservas entrada];
                                                   Description=Calculado sobre reserva transfer;
                                                   Editable=No }
    { 31  ;   ;Reservas salida     ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Reserva Transfer" WHERE (Agrupacion salida=FIELD(N§ Agrupacion)));
                                                   CaptionML=[ENU=Departure reservations;
                                                              ESP=Reservas salida];
                                                   Description=Calculado sobre reserva transfer;
                                                   Editable=No }
    { 33  ;   ;Tipo Calculo        ;Option        ;CaptionML=[ENU=Calculation type;
                                                              ESP=Tipo Calculo];
                                                   OptionCaptionML=[ENU=Margins,Cost/Income;
                                                                    ESP=Margenes,Coste/Ingreso];
                                                   OptionString=Margenes,Coste/Ingreso;
                                                   Editable=No }
    { 35  ;   ;Comentarios         ;Boolean       ;CaptionML=[ENU=Comments;
                                                              ESP=Comentarios];
                                                   Description=Calculado sobre comentarios;
                                                   Editable=No }
    { 37  ;   ;Vuelos              ;Text250       ;CaptionML=[ENU=Flights;
                                                              ESP=Vuelos];
                                                   Editable=No }
    { 39  ;   ;N§ vuelos           ;Integer       ;CaptionML=[ENU=Flights No.;
                                                              ESP=N§ vuelos];
                                                   Editable=No }
    { 41  ;   ;Hora presentacion   ;Time          ;CaptionML=[ENU=Start time;
                                                              ESP=Hora presentacion] }
    { 43  ;   ;Letra               ;Code10        ;CaptionML=[ENU=Letter;
                                                              ESP=Letra] }
    { 45  ;   ;Marca listado       ;Boolean       ;CaptionML=[ENU=List marked;
                                                              ESP=Marca listado] }
    { 50  ;   ;Ver cuadrante       ;Boolean       ;CaptionML=[ENU=View quadrant;
                                                              ESP=Ver cuadrante] }
    { 51  ;   ;Nivel cuadrante     ;Integer       ;CaptionML=[ENU=Quadrant Level;
                                                              ESP=Nivel cuadrante];
                                                   Editable=No }
    { 52  ;   ;Usuario cuadrante   ;Code20        ;CaptionML=[ENU=Quadrant User;
                                                              ESP=Usuario cuadrante];
                                                   Editable=No }
    { 53  ;   ;Listar              ;Boolean       ;InitValue=No;
                                                   CaptionML=[ENU=to list;
                                                              ESP=Listar] }
    { 54  ;   ;Clave cuadrante     ;Integer       ;CaptionML=[ENU=Quadrant key;
                                                              ESP=Clave cuadrante];
                                                   Editable=No }
    { 55  ;   ;Origen/Destino transfer;Code10     ;TableRelation=IF (Traslado en destino=CONST(No)) Aeropuerto.Aeropuerto
                                                                 ELSE IF (Traslado en destino=CONST(Yes)) "Zona fisica"."Zona Fisica";
                                                   OnValidate=BEGIN
                                                                IF CurrFieldNo = FIELDNO("Origen/Destino transfer") THEN
                                                                  "Origen/Destino manual" := TRUE;
                                                              END;

                                                   CaptionML=[ENU=Origin/Destination transfer;
                                                              ESP=Origen/Destino transfer];
                                                   Description=IF (Traslado en destino=CONST(No)) Aeropuerto.Aeropuerto ELSE IF (Traslado en destino=CONST(Yes)) "Zona fisica"."Zona Fisica" }
    { 57  ;   ;Elementos entrada   ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Reserva Transfer"."N§ Elementos accesorios" WHERE (Agrupacion entrada=FIELD(N§ Agrupacion)));
                                                   CaptionML=[ENU=Arrival elements;
                                                              ESP=Elementos entrada];
                                                   DecimalPlaces=0:0;
                                                   Description=Calculado sobre reserva transfer;
                                                   Editable=No }
    { 59  ;   ;Elementos salida    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Reserva Transfer"."N§ Elementos accesorios" WHERE (Agrupacion salida=FIELD(N§ Agrupacion)));
                                                   CaptionML=[ENU=Departure elements;
                                                              ESP=Elementos salida];
                                                   DecimalPlaces=0:0;
                                                   Description=Calculado sobre reserva transfer;
                                                   Editable=No }
    { 61  ;   ;Usuario confirmacion;Code20        ;CaptionML=[ENU=Confirmation user;
                                                              ESP=Usuario confirmacion];
                                                   Editable=No }
    { 63  ;   ;Medio del transfer  ;Option        ;CaptionML=[ENU=Means of the transfer;
                                                              ESP=Medio del transfer];
                                                   OptionCaptionML=[ENU=Terrestrial,Aerial;
                                                                    ESP=Terrestre,Aereo];
                                                   OptionString=Terrestre,Aereo }
    { 65  ;   ;Origen/Destino manual;Boolean      ;CaptionML=[ENU=Origin/Destination Manual;
                                                              ESP=Origen/Destino manual] }
    { 67  ;   ;Sumar pasaje touroperadores;Boolean;CaptionML=[ENU=Sum Touroperators tickets;
                                                              ESP=Sumar pasaje touroperadores] }
    { 69  ;   ;Tipo precio ingreso ;Option        ;InitValue=Ida y Vuelta;
                                                   CaptionML=[ENU=Income price type;
                                                              ESP=Tipo precio ingreso];
                                                   OptionCaptionML=[ENU=One way,Roundtrip;
                                                                    ESP=Una via,Ida y Vuelta];
                                                   OptionString=Una via,Ida y Vuelta }
    { 80  ;   ;Margen Beneficio    ;Decimal       ;CaptionML=[ENU=Profit margin;
                                                              ESP=Margen Beneficio];
                                                   Description=% Margen de Beneficio }
    { 100 ;   ;Transfer Privado    ;Boolean       ;CaptionML=[ENU=Private transfer;
                                                              ESP=Transfer Privado];
                                                   Editable=No }
    { 101 ;   ;Ingresos (DL)       ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Coste/Ingreso transfer"."Importe sin impuestos (DL)" WHERE (Agrupacion=FIELD(N§ Agrupacion),
                                                                                                                                Concepto=CONST(TRNI),
                                                                                                                                Tipo linea=FILTER(<>Suplemento)));
                                                   CaptionML=[ENU=Income (LCY);
                                                              ESP=Ingresos (DL)];
                                                   Description=Suma sobre C/I Transfer;
                                                   Editable=No }
    { 102 ;   ;Costes (DL)         ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Coste/Ingreso transfer"."Importe sin impuestos (DL)" WHERE (Agrupacion=FIELD(N§ Agrupacion),
                                                                                                                                Concepto=CONST(TRNC)));
                                                   CaptionML=[ENU=Cost (LCY);
                                                              ESP=Costes (DL)];
                                                   Description=Suma sobre C/I Transfer;
                                                   Editable=No }
    { 103 ;   ;Numero Bus          ;Code10        ;OnValidate=VAR
                                                                lwTransportista@1100217000 : Code[10];
                                                              BEGIN
                                                                IF "Numero Bus" <> '' THEN
                                                                BEGIN
                                                                  //+$017 <
                                                                  lwTransportista := _GetTransportista;
                                                                  IF lwTransportista <> '' THEN
                                                                    VALIDATE(Transportista, lwTransportista);
                                                                  //+$017 >

                                                                  //. Vamos a comprobar si este numero de bus se enlaza con otro y que tengan el mismo tipo de vehiculo
                                                                  _CheckEnlaceCorrecto;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Bus Number;
                                                              ESP=Numero Bus];
                                                   Description=$001 }
    { 105 ;   ;Capacidad Vehiculo  ;Integer       ;CaptionML=[ENU=Vehicle capacity;
                                                              ESP=Capacidad Vehiculo];
                                                   MinValue=0;
                                                   MaxValue=100;
                                                   Description=$006 }
    { 110 ;   ;Tipo servicio transportista;Option ;InitValue=Doble via;
                                                   CaptionML=[ENU=Provider service type;
                                                              ESP=Tipo servicio transportista];
                                                   OptionCaptionML=[ENU=One way,Roundtrip;
                                                                    ESP=Una via,Doble via];
                                                   OptionString=Una via,Doble via;
                                                   Description=$007 }
    { 112 ;   ;Lugar presentacion  ;Text80        ;CaptionML=[ENU=Start point;
                                                              ESP=Lugar presentacion];
                                                   Description=$008 }
    { 114 ;   ;Sin coste           ;Boolean       ;CaptionML=[ENU=No cost;
                                                              ESP=Sin coste];
                                                   Description=$009 }
    { 115 ;   ;Traslado en destino ;Boolean       ;CaptionML=[ENU=Transfer in destination;
                                                              ESP=Traslado en destino];
                                                   Description=$010 }
    { 116 ;   ;Nombre Transportista;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Transportista transfer".Nombre WHERE (Codigo=FIELD(Transportista)));
                                                   CaptionML=[ENU=Carrier name;
                                                              ESP=Nombre Transportista];
                                                   Description=$011, Lookup("Transportista transfer".Nombre WHERE (Codigo=FIELD(Transportista)));
                                                   Editable=No }
    { 117 ;   ;Descripcion destino ;Text80        ;CaptionML=[ENU=Destination description;
                                                              ESP=Descripcion destino];
                                                   Description=$020, Campo para usar en los cambios de zona }
    { 119 ;   ;Tipo Servicio venta ;Option        ;OnValidate=VAR
                                                                lwOk@1103355001 : Boolean;
                                                                lwModRsv@1100217000 : Boolean;
                                                              BEGIN
                                                                IF "Tipo Servicio venta" <> xRec."Tipo Servicio venta" THEN
                                                                BEGIN
                                                                  IF "Tipo Servicio venta" = "Tipo Servicio venta"::Compartido THEN
                                                                    "Transfer Privado" := FALSE
                                                                  ELSE
                                                                    "Transfer Privado" := TRUE;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Sale service type;
                                                              ESP=Tipo Servicio venta];
                                                   OptionCaptionML=[ENU=Shared,Private,Deluxe;
                                                                    ESP=Compartido,Privado,Deluxe];
                                                   OptionString=Compartido,Privado,Deluxe }
    { 121 ;   ;Num. Exportacion XML;Integer       ;CaptionML=[ENU=XML export Num.;
                                                              ESP=Num. Exportacion XML];
                                                   Editable=No }
    { 123 ;   ;Pendiente recalcular;Boolean       ;CaptionML=[ENU=Pending to recalculate;
                                                              ESP=Pendiente recalcular];
                                                   Description=$029 }
  }
  KEYS
  {
    {    ;N§ Agrupacion                           ;Clustered=Yes }
    {    ;Fecha,Zona,N§ Agrupacion                ;KeyGroups=RENUMERING }
    {    ;Usuario cuadrante,Nivel cuadrante       ;KeyGroups=RENUMERING }
    {    ;Estado,Fecha,N§ Agrupacion              ;KeyGroups=RENUMERING }
    {    ;Fecha,Tipo transfer,Zonas,TourOperadores;KeyGroups=RENUMERING }
    {    ;Listar                                  ;KeyGroups=RENUMERING }
    {    ;Fecha,Transportista,Numero Bus           }
    {    ;Fecha,Hora presentacion                  }
    {    ;Fecha,Transportista,Tipo Servicio venta,Numero Bus }
    {    ;Fecha,Zona,Tipo transfer                 }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1000000000 : TextConst 'ENU=The vehicle type of service %1 doesn''t match the vehicle for this service.;ESP="El tipo de vehiculo del servicio %1 no coincide con el tipo de vehiculo de este servicio. "';

    PROCEDURE AseguraHorarioSalidas@1100253000();
    VAR
      lrHotel@1100253000 : Record 7009798;
      lrHor@1100253001 : Record 7009800;
      lrPrevH@1100253003 : Record 7010246;
      lwOk@1100253002 : Boolean;
    BEGIN
      // AseguraHorarioSalidas
      // Rellena la hora de recogida predeterminada
      // $005

      CLEAR(lrHotel);
      lrHotel.SETRANGE("N§ Agrupacion", "N§ Agrupacion");
      IF lrHotel.FINDSET THEN
        REPEAT
          CLEAR(lrPrevH);
          lrPrevH.SETCURRENTKEY(Fecha,Compa¤ia,Vuelo,Hotel);
          lrPrevH.SETRANGE(Fecha   , lrHotel.Fecha);
          lrPrevH.SETRANGE(Compa¤ia, lrHotel.Compa¤ia);
          lrPrevH.SETRANGE(Vuelo   , lrHotel.Vuelo);
          lrPrevH.SETRANGE(Hotel   , lrHotel.Hotel);
          lrPrevH.SETRANGE(IATA    , lrHotel.IATA);
          lwOk := lrPrevH.FINDFIRST;

          //+$014 <
          //. Si no existe el registro para el vuelo del dia, buscaremos si existe una prevision de temporada
          IF NOT lwOk THEN
          BEGIN
            lrPrevH.RESET;
            lrPrevH.SETRANGE(Compa¤ia             , lrHotel.Compa¤ia);
            lrPrevH.SETRANGE(Vuelo                , lrHotel.Vuelo);
            lrPrevH.SETRANGE(Hotel                , lrHotel.Hotel);
            lrPrevH.SETRANGE("Prevision temporada", TRUE);
            lwOk := lrPrevH.FINDFIRST;
          END;
          //+$014 >

          //-$012IF lwOk THEN
          //-$012  lwOk := lrPrevH."Hora recogida" <> 0T;

          //-$012IF lwOk THEN BEGIN

          CLEAR(lrHor);
          lrHor.SETRANGE("N§ Agrupacion" , "N§ Agrupacion");
          lrHor.SETRANGE(Fecha           , lrHotel.Fecha);
          lrHor.SETRANGE(Hotel           , lrHotel.Hotel);
          lrHor.SETRANGE(Compa¤ia        , lrHotel.Compa¤ia);
          lrHor.SETRANGE(Vuelo           , lrHotel.Vuelo);
          lrHor.SETRANGE(IATA            , lrHotel.IATA);
          lrHor.SETRANGE("Tipo transfer" , "Tipo transfer");
          IF lrHor.FINDFIRST THEN BEGIN
            IF lrHor."Hora recogida" = 0T THEN BEGIN
              lrHor."Hora recogida" := lrPrevH."Hora recogida";
              lrHor.MODIFY;
            END;
          END
          ELSE BEGIN
            CLEAR(lrHor);
            lrHor."N§ Agrupacion"  := "N§ Agrupacion";
            lrHor.Fecha            := lrHotel.Fecha;
            lrHor."Orden zona"     := lrHotel."Orden zona";
            lrHor."Orden recogida" := lrHotel."Orden recogida";
            lrHor.Hotel            := lrHotel.Hotel;
            lrHor.Compa¤ia         := lrHotel.Compa¤ia;
            lrHor.Vuelo            := lrHotel.Vuelo;
            lrHor.IATA             := lrHotel.IATA;
            lrHor."Hora recogida"  := lrPrevH."Hora recogida";
            lrHor.Zona             := lrHotel.Zona;
            lrHor."Tipo transfer"  := "Tipo transfer";
            lrHor."Hora vuelo"     := _GetHoraVuelo(lrHotel);
            lrHor.INSERT;
          END;

          //-$012END;
        UNTIL lrHotel.NEXT = 0;
    END;

    LOCAL PROCEDURE _GetHoraVuelo@1100253002(prHotel@1100253001 : Record 7009798) : Time;
    VAR
      lrVuelo@1100253000 : Record 7009754;
    BEGIN
      // _GetHoraVuelo
      // $005

      //+$016 <
      IF prHotel."Tipo transfer" = prHotel."Tipo transfer"::Entrada THEN
      BEGIN
        CLEAR(lrVuelo);
        lrVuelo.SETRANGE(Fecha    , prHotel.Fecha);
        lrVuelo.SETRANGE(Compa¤ia , prHotel.Compa¤ia);
        lrVuelo.SETRANGE(Vuelo    , prHotel.Vuelo);
        lrVuelo.SETRANGE(Origen   , prHotel.IATA);
        lrVuelo.SETRANGE("Entrada/Salida", lrVuelo."Entrada/Salida"::Entrada);
        IF lrVuelo.FINDFIRST THEN
          EXIT(lrVuelo."Hora Entrada");
      END
      //+$016 >
      ELSE
      BEGIN
        CLEAR(lrVuelo);
        lrVuelo.SETRANGE(Fecha    , prHotel.Fecha);
        lrVuelo.SETRANGE(Compa¤ia , prHotel.Compa¤ia);
        lrVuelo.SETRANGE(Vuelo    , prHotel.Vuelo);
        lrVuelo.SETRANGE(Destino  , prHotel.IATA);
        lrVuelo.SETRANGE("Entrada/Salida", lrVuelo."Entrada/Salida"::Salida);
        IF lrVuelo.FINDFIRST THEN
          EXIT(lrVuelo."Hora Salida");
      END;
    END;

    PROCEDURE GetTouroperadoresVenta@1100217000() wTouroperadores : Text[250];
    VAR
      lrRsv@1100217000 : Record 7009744;
    BEGIN
      // GetTouroperadoresVenta

      IF "Tipo transfer" = "Tipo transfer"::Entrada THEN
      BEGIN
        lrRsv.RESET;
        lrRsv.SETCURRENTKEY("Agrupacion entrada");
        lrRsv.SETRANGE("Agrupacion entrada", "N§ Agrupacion");
      END
      ELSE
      BEGIN
        lrRsv.RESET;
        lrRsv.SETCURRENTKEY("Agrupacion salida");
        lrRsv.SETRANGE("Agrupacion salida", "N§ Agrupacion");
      END;

      wTouroperadores := '';
      IF lrRsv.FINDSET THEN
      BEGIN
        REPEAT
          IF wTouroperadores = '' THEN
            wTouroperadores := lrRsv."TourOperador facturacion"
          ELSE
          BEGIN
            IF STRPOS(wTouroperadores, lrRsv."TourOperador facturacion") = 0 THEN
              wTouroperadores := wTouroperadores + '|' + lrRsv."TourOperador facturacion";
          END;
        UNTIL lrRsv.NEXT = 0;
      END;

      EXIT(wTouroperadores);
    END;

    PROCEDURE ViewContratrosVenta@1100217001();
    VAR
      lrContrato@1100217001 : Record 7009788;
      lfContrato@1100217000 : Form 7009919;
    BEGIN
      // ViewContratrosVenta

      lrContrato.RESET;
      lrContrato.SETFILTER("Fecha inicio contrato", '<=%1', Fecha);
      lrContrato.SETFILTER("Fecha final contrato" , '>=%1', Fecha);
      lrContrato.SETFILTER(TourOperador           , GetTouroperadoresVenta);
      lrContrato.SETRANGE (Comercializadora       , FALSE);
      lrContrato.SETRANGE (Confirmado             , TRUE);
      //-$021lrContrato.SETFILTER("OLD_Punto Origen/Destino" , '%1|%2', "Origen/Destino transfer", '');

      CLEAR(lfContrato);
      lfContrato.SETTABLEVIEW(lrContrato);
      lfContrato.EDITABLE(FALSE);
      lfContrato.RUNMODAL;
    END;

    PROCEDURE ViewContratosCompra@1100217002();
    VAR
      lrContrato@1100217001 : Record 7009787;
      lfContrato@1100217000 : Form 7009899;
    BEGIN
      // ViewContratosCompra

      lrContrato.RESET;
      lrContrato.SETFILTER("Fecha inicio contrato", '<=%1', Fecha);
      lrContrato.SETFILTER("Fecha final contrato" , '>=%1', Fecha);
      lrContrato.SETRANGE (Transportista          , Transportista);
      //-$021lrContrato.SETFILTER("OLD_Punto Origen/Destino" , '%1|%2', "Origen/Destino transfer", '');

      CLEAR(lfContrato);
      lfContrato.SETTABLEVIEW(lrContrato);
      lfContrato.EDITABLE(FALSE);
      lfContrato.RUNMODAL;
    END;

    LOCAL PROCEDURE _BuscaAplicaPrecioCompra@1100217003();
    VAR
      lrContrato@1100217000 : Record 7009787;
      lrPrecio@1100217001 : Record 7009789;
      lwPersonas@1100217002 : Integer;
    BEGIN
      // _BuscaAplicaPrecioCompra

      IF Transportista = '' THEN
        EXIT;

      //. Primero buscamos el contrato
      lrContrato.RESET;
      lrContrato.SETFILTER("Fecha inicio contrato", '<=%1', Fecha);
      lrContrato.SETFILTER("Fecha final contrato" , '>=%1', Fecha);
      lrContrato.SETRANGE (Transportista          , Transportista);
      //-$021lrContrato.SETRANGE ("OLD_Punto Origen/Destino" , "Origen/Destino transfer");
      IF NOT lrContrato.FINDFIRST THEN
      BEGIN
        //-$021lrContrato.SETRANGE("OLD_Punto Origen/Destino" , '');
        //-$021IF NOT lrContrato.FINDFIRST THEN
        EXIT;
      END;

      //. Vemos sobre que cantidades se aplican los precios
      IF lrContrato."Buscar precios por" = lrContrato."Buscar precios por"::"Capacidad solicitada" THEN
        lwPersonas := "Capacidad Vehiculo"
      ELSE
      BEGIN
        CALCFIELDS("Personas entrada", "Personas salida");
        IF "Tipo transfer" = "Tipo transfer"::Entrada THEN
          lwPersonas := "Personas entrada"
        ELSE
          lwPersonas := "Personas salida";
      END;

      //. Buscamos los precios de una via
      lrPrecio.RESET;
      lrPrecio.SETRANGE (Delegacion     , lrContrato.Delegacion);
      lrPrecio.SETRANGE ("N§ Contrato"  , lrContrato."N§ Contrato compra");
      lrPrecio.SETRANGE ("Codigo precio", lrPrecio."Codigo precio"::"Precio base");
      lrPrecio.SETRANGE ("Tipo servicio", lrPrecio."Tipo servicio"::"Una via");
      lrPrecio.SETFILTER("Fecha desde"  , '<=%1', Fecha);
      lrPrecio.SETFILTER("Fecha hasta"  , '>=%1', Fecha);
      lrPrecio.SETFILTER("Rango desde"  , '<=%1', lwPersonas);
      lrPrecio.SETFILTER("Rango hasta"  , '>=%1', lwPersonas);
      IF lrPrecio.FINDFIRST THEN
      BEGIN
        lrPrecio.SETRANGE("Tipo servicio", lrPrecio."Tipo servicio"::"Doble via");
        IF lrPrecio.FINDSET THEN
          "Tipo servicio transportista" := "Tipo servicio transportista"::"Doble via"
        ELSE
          "Tipo servicio transportista" := "Tipo servicio transportista"::"Una via";
      END
      ELSE
      BEGIN
        lrPrecio.SETRANGE("Tipo servicio", lrPrecio."Tipo servicio"::"Doble via");
        IF lrPrecio.FINDSET THEN
          "Tipo servicio transportista" := "Tipo servicio transportista"::"Doble via"
      END;
    END;

    LOCAL PROCEDURE _GetTransportista@1100217004() : Code[10];
    VAR
      lrTransport@1100217000 : Record 7009801;
      lwCodVehiculo@1100217001 : Code[10];
    BEGIN
      lwCodVehiculo := COPYSTR("Numero Bus", 1, 2);

      lrTransport.RESET;
      lrTransport.SETRANGE("Codigo vehiculos", lwCodVehiculo);
      IF lrTransport.FINDFIRST THEN
        EXIT(lrTransport.Codigo);
    END;

    LOCAL PROCEDURE _CheckEnlaceCorrecto@1000000000();
    VAR
      lrAgr@1000000000 : Record 7009796;
    BEGIN
      // _CheckEnlaceCorrecto

      IF "Tipo servicio transportista" = "Tipo servicio transportista"::"Una via" THEN
        EXIT;

      IF ("Numero Bus" = '') OR
         (Transportista = '') THEN
        EXIT;

      lrAgr.RESET;
      lrAgr.SETFILTER("N§ Agrupacion", '<>%1', "N§ Agrupacion");
      lrAgr.SETRANGE (Fecha          , Fecha);
      lrAgr.SETRANGE (Transportista  , Transportista);
      lrAgr.SETRANGE ("Numero Bus"   , "Numero Bus");
      IF lrAgr.FINDFIRST THEN
      BEGIN
        IF lrAgr."Tipo vehiculo" <> "Tipo vehiculo" THEN
          ERROR(Text001);
      END;
    END;

    PROCEDURE GetPrimerUltimoHotel@1000000001(pPriUlt@1000000000 : Integer) : Text[30];
    VAR
      rHotAgr@1000000001 : Record 7009798;
      rHot@1000000002 : Record 7009724;
    BEGIN
      // Funci¢n para obtener el primer o £ltim hotel
      // pPriUlt 0 = Primero, 1 = Ultimo

      rHotAgr.RESET;
      rHotAgr.SETRANGE(rHotAgr."N§ Agrupacion","N§ Agrupacion");
      IF pPriUlt = 0 THEN
      BEGIN
        IF rHotAgr.FINDFIRST THEN BEGIN
          rHot.RESET;
          IF rHot.GET(rHotAgr.Hotel) THEN
            EXIT(rHot.Nombre);
        END;
      END ELSE
        IF rHotAgr.FINDLAST THEN BEGIN
          rHot.RESET;
          IF rHot.GET(rHotAgr.Hotel) THEN
            EXIT(rHot.Nombre);
        END;
      BEGIN
      END;
    END;

    BEGIN
    {
      ## AJS 01.10.2009

        .- Nuevos campos "Ingresos (DL)" y "Costes (DL)" calculados sobre Coste/Ingreso Transfer

      ## AJS 05.10.2009

        .- Modifico la formula del campo "Ingresos (DL)" para que no acumule los suplementos

      $001 AJS 22022012 Nuevo campo "Numero Bus"
      $002 JPT 02/05/12 CNT-CAR12004-05 -Borramos las lineas relacionadas de la nueva tabla Maletero x Agrupacion
      $003 JPT 09/05/12 CNT-CAR-12004 // TRA06- Transfer Guides in Transfer Services - Borramos las lineas relacionadas con
                                                la tabla Guia x Agrupacion
      $004 JPT 09/05/12 CNT-CAR-12004 Al modificar la fecha, actualizamos la de los registros de maleteros y guias
      $005 JPT 24/05/12 CNT-CAR-12004 / TRA-12 Definition of transfer pick-up  schedule
      $006 JPT 12/06/12 Nuevo campo "Capacidad Vehiculo"

      $007 AJS 08102012 Nuevo campo "Tipo precio coste" para separar la definicion entre coste e ingreso

      $008 AJS 09102012 Nuevo campo "Punto inicio/final servicio" para indicar en algunos casos el punto en que se tiene que iniciar o
                        finalizar el servicio, caso creado para un hotel con muchas recepciones

      $009 AJS 16102012 Nuevo campo "Sin coste" para indicar que una agrupacion no tiene coste asociado

      $010 AJS 22102012 Nuevo campo "Servicio cambio de zona" para indicar las agrupaciones que son de este tipo para mostrar en informes

      $011 AJS 31102012 Nuevo campo calculado "Nombre transportista" sobre la tabla "Transportista transfer"

      $012 AJS 16112012 Modifico la funcion AseguraHorarioSalidas para que se creen siempre los registros de Horas recogida agrupacion

      $013 AJS 07022013 Cuando rellenamos el transportista inicializamos el campo "Tipo precio coste"

      $014 AJS 27022013 Modifico la funcion AseguraHorarioSalidas para buscar en la prevision de temporada si no existe prevision
                        personalizada para el vuelo del dia.

      $015 AJS 05032013 Nueva clave Fecha, Transportista, "Numero Bus" para el informe Transfer Order (LLEGADAS)

      $016 AJS 20032013 Modifico la funcion GetHoraVueloSalida para que se llame _GetHoraVuelo y retorne la hora tambien para las llegadas

      $017 AJS 18072013 Impedimos que la validar el campo numero bus se pueda perder el transportista

      $018 AJS 09042014 Cambio el nombre del campo 115 a Servicio cambio zona

      $019 AJS 01052014 Modifico el campo Origen/Destino transfer para que en los cambios de zona sea una zona

      $020 AJS 03052014 Nuevo campo Descripcion destino para ser utilizado en los cambios de zona

      $021 AJS 10062014 CNT-OC-14046, Los contratos de venta y de compra dejan de ir por Aeropuerto

      $022 AJS 25092014 Cambio el campo Tipo precio coste para que ponga Doble via en lugar de Ida y Vuelta

      $023 AJS 28092014 Cambio el nombre del campo Tipo precio coste por Tipo servicio transportista

      $024 AJS 28092014 Nueva funcion para comprobar si los vehiculos que enlazamos con el numero de bus tienen el mismo
                        tipo de vehiculo

      $025 ARM 30092014 CNT-CAR-14063 Nuevo campo tipo servicio

      $026 AJS 06102014 Le cambio el nombre a Tipo servicio venta y la opcion Regular la paso a Compartido

      $027 AJS 29092014 Traducciones

      $028 AJS 01102014 Cambio el nombre del campo a Traslado en destino

      $029 AJS 19122014 Nuevo campo "Pendiente recalcular" para marcar cuando a una agrupacion se le a¤aden suplementos

      $030 ARM 15012015 CNT-LP-14110 Nueva clave Fecha,Transportista,Tipo servicio venta,N§ Bus

      $031 ARM 02032015 CNT-OC-14093 Nueva funci¢n Getnombrehotel

      $032 AJS 13032015 CNT-CAR-14096, Modifico la funcion ViewContratrosVenta para que no muestre los de comercializadora
    }
    END.
  }
}
