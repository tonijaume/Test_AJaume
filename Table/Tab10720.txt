OBJECT Table 10720 G/L Accounts Equivalence Tool
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVES6.00;
  }
  PROPERTIES
  {
    Permissions=TableData 17=rimd;
    OnInsert=BEGIN
               IF "Account Type" = "Account Type"::Heading THEN
                 Ready := TRUE;
               IF "Matching Type" = "Matching Type"::"1-1" THEN
                 Preferred := TRUE;
               Indentation := STRLEN("No.") - 1;
             END;

    OnDelete=VAR
               HistoricGLAcc@1101100000 : Record 10721;
               GLAccEqTool@1101100002 : Record 10720;
             BEGIN
               IF "Last Run Date" <> 0D THEN
                 KeepHistoricGLAcc := TRUE;

               GLAccEqTool := Rec;

               IF GLAccEqTool.NEXT = 0 THEN
                 IF NOT KeepHistoricGLAcc THEN
                   HistoricGLAcc.DELETEALL(TRUE);
             END;

    CaptionML=[ENU=G/L Accounts Equivalence Tool;
               ESP=Herramienta de equivalencia de ctas.];
    LookupFormID=Form10722;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Text20        ;TableRelation="Historic G/L Account".No.;
                                                   OnValidate=BEGIN
                                                                CALCFIELDS(Name,"Account Type");
                                                                IF "Account Type" = "Account Type"::Heading THEN
                                                                  Ready := TRUE;
                                                              END;

                                                   ValidateTableRelation=Yes;
                                                   TestTableRelation=Yes;
                                                   CaptionML=[ENU=No.;
                                                              ESP=N§];
                                                   NotBlank=Yes }
    { 2   ;   ;Name                ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Historic G/L Account".Name WHERE (No.=FIELD(No.)));
                                                   CaptionML=[ENU=Name;
                                                              ESP=Nombre];
                                                   Editable=No }
    { 3   ;   ;Account Type        ;Option        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Historic G/L Account"."Account Type" WHERE (No.=FIELD(No.)));
                                                   CaptionML=[ENU=Account Type;
                                                              ESP=Tipo de cta.];
                                                   OptionCaptionML=[ENU=Posting,Heading;
                                                                    ESP=Auxiliar,Mayor];
                                                   OptionString=Posting,Heading;
                                                   Editable=No }
    { 4   ;   ;New No.             ;Text20        ;TableRelation="New G/L Account".No.;
                                                   OnValidate=VAR
                                                                NewGLAcc@1100000 : Record 10722;
                                                              BEGIN
                                                                NewGLAcc.SETRANGE("No.","New No.");
                                                                NewGLAcc.SETRANGE("Account Type",NewGLAcc."Account Type"::Posting);
                                                                IF NOT NewGLAcc.FINDFIRST THEN
                                                                  ERROR(Text1100008,FIELDCAPTION("New No."),FIELDCAPTION("Account Type"),FIELDCAPTION("No."));
                                                                IF "Matching Type" = "Matching Type"::"1-n" THEN BEGIN
                                                                  "New No." := '';
                                                                  Ready := FALSE;
                                                                  Implement := FALSE;
                                                                END ELSE BEGIN
                                                                  CALCFIELDS("New Name");
                                                                  IF "New No." = '' THEN BEGIN
                                                                    Ready := FALSE;
                                                                    Implement := FALSE;
                                                                  END;
                                                                END;
                                                                MODIFY;
                                                              END;

                                                   OnLookup=VAR
                                                              NewGLAcc@1100000 : Record 10722;
                                                              NewChartOfAcc@1100001 : Form 10724;
                                                            BEGIN
                                                              IF "Account Type" = "Account Type"::Posting THEN
                                                                IF "Matching Type" = "Matching Type"::"1-n" THEN
                                                                  ERROR(Text1100003 + Text1100005,FIELDCAPTION("Matching Type"))
                                                                ELSE BEGIN
                                                                  NewGLAcc.SETRANGE("Account Type",NewGLAcc."Account Type"::Posting);
                                                                  NewChartOfAcc.LOOKUPMODE(TRUE);
                                                                  NewChartOfAcc.SETRECORD(NewGLAcc);
                                                                  NewChartOfAcc.SETTABLEVIEW(NewGLAcc);
                                                                  IF NewChartOfAcc.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                                                    NewChartOfAcc.GETRECORD(NewGLAcc);
                                                                    "New No." := NewGLAcc."No.";
                                                                    CALCFIELDS("New Name");
                                                                  END;
                                                                END;
                                                            END;

                                                   ValidateTableRelation=Yes;
                                                   TestTableRelation=Yes;
                                                   CaptionML=[ENU=New No.;
                                                              ESP=Nuevo n§] }
    { 5   ;   ;New Name            ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("New G/L Account".Name WHERE (No.=FIELD(New No.)));
                                                   CaptionML=[ENU=New Name;
                                                              ESP=Nuevo nombre];
                                                   Editable=No }
    { 6   ;   ;Matching Type       ;Option        ;OnValidate=BEGIN
                                                                IF "Matching Type" = "Matching Type"::"1-1" THEN BEGIN
                                                                  Preferred := TRUE;
                                                                  Ready := FALSE;
                                                                  Implement := FALSE;
                                                                  DeleteGLAccInGLEntries1n;
                                                                END ELSE BEGIN
                                                                  "New No." := '';
                                                                  "New Name" := '';
                                                                  Ready := FALSE;
                                                                  Implement := FALSE;
                                                                  Preferred := FALSE
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Matching Type;
                                                              ESP=Tipo de correspondencia];
                                                   OptionCaptionML=[ENU=1-1,1-n;
                                                                    ESP=1-1,1-n];
                                                   OptionString=1-1,1-n }
    { 7   ;   ;Ready               ;Boolean       ;OnValidate=BEGIN
                                                                CheckMatchingAcc(FIELDCAPTION(Ready));
                                                              END;

                                                   CaptionML=[ENU=Ready;
                                                              ESP=Preparado] }
    { 8   ;   ;Implement           ;Boolean       ;OnValidate=BEGIN
                                                                CheckMatchingAcc(FIELDCAPTION(Implement));
                                                              END;

                                                   CaptionML=[ENU=Implement;
                                                              ESP=Implementar] }
    { 9   ;   ;Done                ;Boolean       ;CaptionML=[ENU=Done;
                                                              ESP=Terminado];
                                                   Editable=No }
    { 10  ;   ;Last Run Date       ;Date          ;CaptionML=[ENU=Last Run Date;
                                                              ESP=éltima fecha ejecuci¢n];
                                                   Editable=No }
    { 11  ;   ;Preferred           ;Boolean       ;OnValidate=BEGIN
                                                                IF "Matching Type" = "Matching Type"::"1-n" THEN
                                                                  ERROR(Text1100007);
                                                              END;

                                                   CaptionML=[ENU=Preferred;
                                                              ESP=Preferido] }
    { 12  ;   ;Indentation         ;Integer       ;CaptionML=[ENU=Indentation;
                                                              ESP=Indentar];
                                                   MinValue=0 }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Last Run Date,Implement                  }
    {    ;New No.                                  }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text1100000@1100000 : TextConst 'ENU=A heading account with related accounts cannot be deleted.;ESP=No se puede eliminar una cuenta de mayor que tiene cuentas auxiliares asociadas.';
      Text1100001@1100001 : TextConst 'ENU=Some G/L Accounts have been found in the tool. Only the G/L Accounts that are still not in the tool will be created. Do you still want to proceed?;ESP=Se han encontrado algunas cuentas en la herramienta. S¢lo se crear n las cuentas que no estn a£n en la herramienta. ¨Desea continuar?';
      Text1100002@1100002 : TextConst 'ENU=The process has been cancelled by the user.;ESP=El proceso se ha cancelado por el usuario.';
      Text1100003@1100003 : TextConst 'ENU="You cannot define only 1 G/L Account when %1 is 1-n. ";ESP="No puede definir s¢lo 1 cuenta si %1 es 1-n. "';
      Text1100004@1100004 : TextConst 'ENU="You must define the equivalent account or accounts for this row before checking the entry as %1. ";ESP="Debe definir las cuentas equivalentes para esta fila antes de marcar el movimiento como %1. "';
      Text1100005@1100005 : TextConst 'ENU=Please go to Preparations Tasks to define 1-n equivalences.;ESP=Vaya a Tareas de preparaciones para definir equivalencias 1-n.';
      Text1100006@1100006 : TextConst 'ENU=There are no Posted G/L Entries for this Account, so it cannot be 1-n. Please select Matching Type 1-1 and the corresponding account.;ESP=No hay Movs. registrados para esta cuenta, por tanto no puede ser 1-n. Seleccione el Tipo de correspondencia 1-1 y la cuenta pertinente.';
      KeepHistoricGLAcc@1100008 : Boolean;
      Text1100007@1100007 : TextConst 'ENU=Preferred cannot be checked if the Matching Type is 1-n.;ESP=No se puede seleccionar Preferido si el Tipo de correspondencia es 1-n.';
      Text1100008@1100009 : TextConst 'ENU=%1 should have the same %2 as %3;ESP=%1 deber¡a tener el mismo %2 que %3';

    PROCEDURE CopyFromGLAcc@1100000();
    VAR
      GLAcc@1100000 : Record 15;
      GLAccEqTool@1100001 : Record 10720;
      HistoricGLAcc@1100002 : Record 10721;
      GLEqMgmt@1100003 : Codeunit 10720;
    BEGIN
      IF GLAcc.FINDSET(TRUE,FALSE) THEN BEGIN
        IF GLAccEqTool.FINDFIRST THEN
          IF NOT CONFIRM(
            Text1100001,FALSE)
          THEN
            ERROR(Text1100002);
        REPEAT
          IF NOT GLAccEqTool.GET(GLAcc."No.") THEN BEGIN
            GLAccEqTool.INIT;
            GLAccEqTool."No." := GLAcc."No.";
            GLAccEqTool.Name := GLAcc.Name;
            GLAccEqTool."Account Type" := GLAcc."Account Type";
            GLAccEqTool.INSERT(TRUE);
            IF NOT HistoricGLAcc.GET(GLAcc."No.") THEN BEGIN
              HistoricGLAcc.INIT;
              HistoricGLAcc.TRANSFERFIELDS(GLAcc);
              HistoricGLAcc.INSERT;
              GLEqMgmt.CopyDimensions(GLAcc."No.",DATABASE::"G/L Account",DATABASE::"Historic G/L Account");
              GLEqMgmt.CopyExtendedTexts(GLAcc."No.",DATABASE::"G/L Account",DATABASE::"Historic G/L Account");
              GLEqMgmt.CopyComments(GLAcc."No.",DATABASE::"G/L Account",DATABASE::"Historic G/L Account");
            END;
          END;
        UNTIL GLAcc.NEXT = 0;
      END;
    END;

    PROCEDURE CheckMatchingAcc@1100001(FieldCaption@1100000 : Text[30]);
    VAR
      GLEntry@1100001 : Record 17;
    BEGIN
      IF "Matching Type" = "Matching Type"::"1-1" THEN BEGIN
        IF "New No." = '' THEN
          ERROR(Text1100004,FieldCaption)
      END ELSE BEGIN
        GLEntry.SETRANGE("G/L Account No.","No.");
        IF GLEntry.FINDSET THEN
          REPEAT
            IF GLEntry."New G/L Account No." = '' THEN
              ERROR(Text1100004 + Text1100005,FieldCaption);
          UNTIL GLEntry.NEXT = 0
        ELSE
          ERROR(Text1100006);
      END;
    END;

    PROCEDURE DeleteGLAccInGLEntries1n@1100002();
    VAR
      GLEntry@1100000 : Record 17;
    BEGIN
      GLEntry.SETRANGE("G/L Account No.","No.");
      IF GLEntry.FINDSET THEN
        REPEAT
          GLEntry."New G/L Account No." := '';
          GLEntry.MODIFY;
        UNTIL GLEntry.NEXT = 0;
    END;

    BEGIN
    END.
  }
}
