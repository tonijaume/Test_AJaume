OBJECT Table 254 VAT Entry
{
  OBJECT-PROPERTIES
  {
    Date=02/10/12;
    Time=12:00:00;
    Modified=Yes;
    Version List=AIC2009,NAVW16.00.01,NAVES6.00.01,PS55187,PS47880,RegF285416;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               VATPostingSetup.GET("VAT Bus. Posting Group","VAT Prod. Posting Group");
               IF (VATPostingSetup."VAT Calculation Type" = VATPostingSetup."VAT Calculation Type"::"Reverse Charge VAT") AND
               (Type = Type::Sale) THEN BEGIN
                 "VAT %" := 0;
                 "EC %" := 0;
               END ELSE BEGIN
                 "VAT %" := VATPostingSetup."VAT %";
                 "EC %" := VATPostingSetup."EC %";
               END;

               // $001 INCOMING

               IF "Global dimension 1 code" = '' THEN BEGIN
                 rPar.FIND('-');
                 VALIDATE("Global dimension 1 code", rPar.Delegacion);
               END;
             END;

    CaptionML=[ENU=VAT Entry;
               ESP=Mov. IVA];
    LookupFormID=Form315;
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;CaptionML=[ENU=Entry No.;
                                                              ESP=N§ mov.];
                                                   Editable=No }
    { 2   ;   ;Gen. Bus. Posting Group;Code10     ;TableRelation="Gen. Business Posting Group";
                                                   CaptionML=[ENU=Gen. Bus. Posting Group;
                                                              ESP=Grupo contable negocio];
                                                   Editable=No }
    { 3   ;   ;Gen. Prod. Posting Group;Code10    ;TableRelation="Gen. Product Posting Group";
                                                   CaptionML=[ENU=Gen. Prod. Posting Group;
                                                              ESP=Grupo contable producto];
                                                   Editable=No }
    { 4   ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              ESP=Fecha registro];
                                                   Editable=No }
    { 5   ;   ;Document No.        ;Code20        ;CaptionML=[ENU=Document No.;
                                                              ESP=N§ documento];
                                                   Editable=No }
    { 6   ;   ;Document Type       ;Option        ;CaptionML=[ENU=Document Type;
                                                              ESP=Tipo documento];
                                                   OptionCaptionML=[ENU=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund,,,,,,,,,,,,,,,Bill";
                                                                    ESP=" ,Pago,Factura,Abono,Docs. inter‚s,Recordatorio,Reembolso,,,,,,,,,,,,,,,Efecto"];
                                                   OptionString=[ ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund,,,,,,,,,,,,,,,Bill];
                                                   Editable=No }
    { 7   ;   ;Type                ;Option        ;OnValidate=BEGIN
                                                                IF Type = Type::Settlement THEN
                                                                  ERROR(Text000,FIELDCAPTION(Type),Type);
                                                              END;

                                                   CaptionML=[ENU=Type;
                                                              ESP=Tipo];
                                                   OptionCaptionML=[ENU=" ,Purchase,Sale,Settlement";
                                                                    ESP=" ,Compra,Venta,Liquidaci¢n"];
                                                   OptionString=[ ,Purchase,Sale,Settlement];
                                                   Editable=No }
    { 8   ;   ;Base                ;Decimal       ;CaptionML=[ENU=Base;
                                                              ESP=Base];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 9   ;   ;Amount              ;Decimal       ;CaptionML=[ENU=Amount;
                                                              ESP=Importe];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 10  ;   ;VAT Calculation Type;Option        ;CaptionML=[ENU=VAT Calculation Type;
                                                              ESP=Tipo c lculo IVA];
                                                   OptionCaptionML=[ENU=Normal VAT,Reverse Charge VAT,Full VAT,Sales Tax,No Taxable VAT;
                                                                    ESP=Normal,Reversi¢n,Total,Impto. venta,No sujeto];
                                                   OptionString=Normal VAT,Reverse Charge VAT,Full VAT,Sales Tax,No Taxable VAT;
                                                   Editable=No }
    { 12  ;   ;Bill-to/Pay-to No.  ;Code20        ;TableRelation=IF (Type=CONST(Purchase)) Vendor
                                                                 ELSE IF (Type=CONST(Sale)) Customer;
                                                   OnValidate=BEGIN
                                                                VALIDATE(Type);
                                                                IF "Bill-to/Pay-to No." = '' THEN BEGIN
                                                                  "Country/Region Code" := '';
                                                                  "VAT Registration No." := '';
                                                                END ELSE
                                                                  CASE Type OF
                                                                    Type::Purchase:
                                                                      BEGIN
                                                                        Vend.GET("Bill-to/Pay-to No.");
                                                                        "Country/Region Code" := Vend."Country/Region Code";
                                                                        "VAT Registration No." := Vend."VAT Registration No.";
                                                                      END;
                                                                    Type::Sale:
                                                                      BEGIN
                                                                        Cust.GET("Bill-to/Pay-to No.");
                                                                        "Country/Region Code" := Cust."Country/Region Code";
                                                                        "VAT Registration No." := Cust."VAT Registration No.";
                                                                      END;
                                                                  END;
                                                              END;

                                                   CaptionML=[ENU=Bill-to/Pay-to No.;
                                                              ESP=Fact./Pago a N§.] }
    { 13  ;   ;EU 3-Party Trade    ;Boolean       ;OnValidate=BEGIN
                                                                VALIDATE(Type);
                                                              END;

                                                   CaptionML=[ENU=EU 3-Party Trade;
                                                              ESP=Op. triangular] }
    { 14  ;   ;User ID             ;Code20        ;TableRelation=User;
                                                   OnLookup=VAR
                                                              LoginMgt@1000 : Codeunit 418;
                                                            BEGIN
                                                              LoginMgt.LookupUserID("User ID");
                                                            END;

                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=User ID;
                                                              ESP=Id. usuario];
                                                   Editable=No }
    { 15  ;   ;Source Code         ;Code10        ;TableRelation="Source Code";
                                                   CaptionML=[ENU=Source Code;
                                                              ESP=C¢d. origen];
                                                   Editable=No }
    { 16  ;   ;Reason Code         ;Code10        ;TableRelation="Reason Code";
                                                   CaptionML=[ENU=Reason Code;
                                                              ESP=C¢d. auditor¡a];
                                                   Editable=No }
    { 17  ;   ;Closed by Entry No. ;Integer       ;TableRelation="VAT Entry";
                                                   CaptionML=[ENU=Closed by Entry No.;
                                                              ESP=Cerrado por n§ orden];
                                                   Editable=No }
    { 18  ;   ;Closed              ;Boolean       ;CaptionML=[ENU=Closed;
                                                              ESP=Cerrado];
                                                   Editable=No }
    { 19  ;   ;Country/Region Code ;Code10        ;TableRelation=Country/Region;
                                                   OnValidate=BEGIN
                                                                VALIDATE(Type);
                                                                VALIDATE("VAT Registration No.");
                                                              END;

                                                   CaptionML=[ENU=Country/Region Code;
                                                              ESP=C¢d. pa¡s/regi¢n] }
    { 20  ;   ;Internal Ref. No.   ;Text30        ;CaptionML=[ENU=Internal Ref. No.;
                                                              ESP=N§ ref. interno];
                                                   Editable=No }
    { 21  ;   ;Transaction No.     ;Integer       ;CaptionML=[ENU=Transaction No.;
                                                              ESP=N§ asiento];
                                                   Editable=No }
    { 22  ;   ;Unrealized Amount   ;Decimal       ;CaptionML=[ENU=Unrealized Amount;
                                                              ESP=Importe no realizado];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 23  ;   ;Unrealized Base     ;Decimal       ;CaptionML=[ENU=Unrealized Base;
                                                              ESP=Base no realizada];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 24  ;   ;Remaining Unrealized Amount;Decimal;CaptionML=[ENU=Remaining Unrealized Amount;
                                                              ESP=Importe no realizado pendiente];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 25  ;   ;Remaining Unrealized Base;Decimal  ;CaptionML=[ENU=Remaining Unrealized Base;
                                                              ESP=Base no realizada pendiente];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 26  ;   ;External Document No.;Code20       ;CaptionML=[ENU=External Document No.;
                                                              ESP=N§ documento externo];
                                                   Editable=No }
    { 28  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              ESP=Nos. serie];
                                                   Editable=No }
    { 29  ;   ;Tax Area Code       ;Code20        ;TableRelation="Tax Area";
                                                   CaptionML=[ENU=Tax Area Code;
                                                              ESP=C¢d.  rea impuesto];
                                                   Editable=No }
    { 30  ;   ;Tax Liable          ;Boolean       ;CaptionML=[ENU=Tax Liable;
                                                              ESP=Sujeto a impuesto];
                                                   Editable=No }
    { 31  ;   ;Tax Group Code      ;Code10        ;TableRelation="Tax Group";
                                                   CaptionML=[ENU=Tax Group Code;
                                                              ESP=C¢d. grupo impuesto];
                                                   Editable=No }
    { 32  ;   ;Use Tax             ;Boolean       ;CaptionML=[ENU=Use Tax;
                                                              ESP=Utilizar impuesto];
                                                   Editable=No }
    { 33  ;   ;Tax Jurisdiction Code;Code10       ;TableRelation="Tax Jurisdiction";
                                                   CaptionML=[ENU=Tax Jurisdiction Code;
                                                              ESP=C¢d. jurisdicci¢n impuesto];
                                                   Editable=No }
    { 34  ;   ;Tax Group Used      ;Code10        ;TableRelation="Tax Group";
                                                   CaptionML=[ENU=Tax Group Used;
                                                              ESP=Grupo impto. utilizado];
                                                   Editable=No }
    { 35  ;   ;Tax Type            ;Option        ;CaptionML=[ENU=Tax Type;
                                                              ESP=Tipo impto.];
                                                   OptionCaptionML=[ENU=Sales Tax,Excise Tax;
                                                                    ESP=Impto. venta,Impto. consumo];
                                                   OptionString=Sales Tax,Excise Tax;
                                                   Editable=No }
    { 36  ;   ;Tax on Tax          ;Boolean       ;CaptionML=[ENU=Tax on Tax;
                                                              ESP=Impuesto en impto.];
                                                   Editable=No }
    { 37  ;   ;Sales Tax Connection No.;Integer   ;CaptionML=[ENU=Sales Tax Connection No.;
                                                              ESP=N§ conexi¢n IVA ventas];
                                                   Editable=No }
    { 38  ;   ;Unrealized VAT Entry No.;Integer   ;TableRelation="VAT Entry";
                                                   CaptionML=[ENU=Unrealized VAT Entry No.;
                                                              ESP=N§ mov. IVA no realizado];
                                                   Editable=No }
    { 39  ;   ;VAT Bus. Posting Group;Code10      ;TableRelation="VAT Business Posting Group";
                                                   CaptionML=[ENU=VAT Bus. Posting Group;
                                                              ESP=Grupo registro IVA neg.];
                                                   Editable=No }
    { 40  ;   ;VAT Prod. Posting Group;Code10     ;TableRelation="VAT Product Posting Group";
                                                   CaptionML=[ENU=VAT Prod. Posting Group;
                                                              ESP=Grupo registro IVA prod.];
                                                   Editable=No }
    { 43  ;   ;Additional-Currency Amount;Decimal ;CaptionML=[ENU=Additional-Currency Amount;
                                                              ESP=Importe divisa-adicional];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 44  ;   ;Additional-Currency Base;Decimal   ;CaptionML=[ENU=Additional-Currency Base;
                                                              ESP=Base divisa-adicional];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 45  ;   ;Add.-Currency Unrealized Amt.;Decimal;
                                                   CaptionML=[ENU=Add.-Currency Unrealized Amt.;
                                                              ESP=Imp. no real. div.-adic.];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 46  ;   ;Add.-Currency Unrealized Base;Decimal;
                                                   CaptionML=[ENU=Add.-Currency Unrealized Base;
                                                              ESP=Base no real. div.-adic.];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 48  ;   ;VAT Base Discount % ;Decimal       ;CaptionML=[ENU=VAT Base Discount %;
                                                              ESP=% Dto. base IVA];
                                                   DecimalPlaces=0:6;
                                                   MinValue=0;
                                                   MaxValue=100;
                                                   Editable=No }
    { 49  ;   ;Add.-Curr. Rem. Unreal. Amount;Decimal;
                                                   CaptionML=[ENU=Add.-Curr. Rem. Unreal. Amount;
                                                              ESP=Imp. no real. pdte. div.-adic.];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 50  ;   ;Add.-Curr. Rem. Unreal. Base;Decimal;
                                                   CaptionML=[ENU=Add.-Curr. Rem. Unreal. Base;
                                                              ESP=Base no real. pdte. div.-adic.];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 51  ;   ;VAT Difference      ;Decimal       ;CaptionML=[ENU=VAT Difference;
                                                              ESP=Diferencia  IVA];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 52  ;   ;Add.-Curr. VAT Difference;Decimal  ;CaptionML=[ENU=Add.-Curr. VAT Difference;
                                                              ESP=Diferencia IVA divisa adic.];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 53  ;   ;Ship-to/Order Address Code;Code10  ;TableRelation=IF (Type=CONST(Purchase)) "Order Address".Code WHERE (Vendor No.=FIELD(Bill-to/Pay-to No.))
                                                                 ELSE IF (Type=CONST(Sale)) "Ship-to Address".Code WHERE (Customer No.=FIELD(Bill-to/Pay-to No.));
                                                   CaptionML=[ENU=Ship-to/Order Address Code;
                                                              ESP=Enviar a/C¢d. dir. pedido] }
    { 54  ;   ;Document Date       ;Date          ;CaptionML=[ENU=Document Date;
                                                              ESP=Fecha emisi¢n documento];
                                                   Editable=No }
    { 55  ;   ;VAT Registration No.;Text20        ;OnValidate=VAR
                                                                VATRegNoFormat@1000 : Record 381;
                                                              BEGIN
                                                                VATRegNoFormat.Test("VAT Registration No.","Country/Region Code",'',0);
                                                              END;

                                                   CaptionML=[ENU=VAT Registration No.;
                                                              ESP=CIF/NIF] }
    { 56  ;   ;Reversed            ;Boolean       ;CaptionML=[ENU=Reversed;
                                                              ESP=Revertido] }
    { 57  ;   ;Reversed by Entry No.;Integer      ;TableRelation="VAT Entry";
                                                   CaptionML=[ENU=Reversed by Entry No.;
                                                              ESP=Revertido por el movimiento n§];
                                                   BlankZero=Yes }
    { 58  ;   ;Reversed Entry No.  ;Integer       ;TableRelation="VAT Entry";
                                                   CaptionML=[ENU=Reversed Entry No.;
                                                              ESP=N§ movimiento revertido];
                                                   BlankZero=Yes }
    { 59  ;   ;EU Service          ;Boolean       ;CaptionML=[ENU=EU Service;
                                                              ESP=Servicio UE];
                                                   Editable=No }
    { 10700;  ;VAT %               ;Decimal       ;CaptionML=[ENU=VAT %;
                                                              ESP=% IVA] }
    { 10701;  ;EC %                ;Decimal       ;CaptionML=[ENU=EC %;
                                                              ESP=% RE] }
    { 10702;  ;Generated Autodocument;Boolean     ;CaptionML=[ENU=Generated Autodocument;
                                                              ESP=Autodocumento generado];
                                                   Editable=No }
    { 10703;  ;Delivery Operation Code;Option     ;CaptionML=[ENU=Delivery Operation Code;
                                                              ESP=C¢digo de operaci¢n de entrega];
                                                   OptionCaptionML=[ENU=" ,E - General,M - Imported Tax Exempt,H - Imported Tax Exempt (Representative)";
                                                                    ESP=" ,E - General,M - Exento de impuestos de importaci¢n,H - Exento de impuestos de importaci¢n (representante)"];
                                                   OptionString=[ ,E - General,M - Imported Tax Exempt,H - Imported Tax Exempt (Representative)] }
    { 50002;  ;Tipo de clave       ;Code10        ;TableRelation="Maestro de Claves".Clave;
                                                   CaptionML=ESP=Tipo de clave;
                                                   Description=$002 "Maestro de Claves".Clave }
    { 50005;  ;Global dimension 1 code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=ESP=C¢d. dim. acceso dir. 1;
                                                   Description=$002 "Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionClass='1,2,1' }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
    {    ;Type,Closed,VAT Bus. Posting Group,VAT Prod. Posting Group,Posting Date;
                                                   SumIndexFields=Base,Amount,Additional-Currency Base,Additional-Currency Amount,Remaining Unrealized Amount,Remaining Unrealized Base,Add.-Curr. Rem. Unreal. Amount,Add.-Curr. Rem. Unreal. Base;
                                                   KeyGroups=VAT }
    {    ;Type,Closed,Tax Jurisdiction Code,Use Tax,Posting Date;
                                                   SumIndexFields=Base,Amount,Unrealized Amount,Unrealized Base,Remaining Unrealized Amount;
                                                   KeyGroups=SalesTax }
    {    ;Type,Country/Region Code,VAT Registration No.,VAT Bus. Posting Group,VAT Prod. Posting Group,Posting Date;
                                                   SumIndexFields=Base,Additional-Currency Base;
                                                   KeyGroups=VIES_EC }
    {    ;Document No.,Posting Date                }
    {    ;Transaction No.                          }
    {    ;Tax Jurisdiction Code,Tax Group Used,Tax Type,Use Tax,Posting Date;
                                                   KeyGroups=SalesTax }
    {    ;Type,Bill-to/Pay-to No.,Transaction No. ;KeyGroups=VATUnreal;
                                                   MaintainSQLIndex=No }
    {    ;Type,Posting Date,Document Type,Document No.,Bill-to/Pay-to No. }
    {    ;Type,Closed,Gen. Bus. Posting Group,Gen. Prod. Posting Group,Posting Date;
                                                   SumIndexFields=Base,Amount,Unrealized Amount,Unrealized Base }
    {    ;Document Type,No. Series,Posting Date    }
    {    ;No. Series,Posting Date,Document No.     }
    {    ;Type,Document Date,Document No.,Country/Region Code }
    {    ;Document Type,Posting Date,Document No.  }
    {    ;Generated Autodocument                   }
    {    ;Document No.,Document Type,Gen. Prod. Posting Group,VAT Prod. Posting Group,Type;
                                                   SumIndexFields=Amount }
    {    ;VAT %,EC %                               }
    {    ;Type,Document Type,Bill-to/Pay-to No.,Posting Date,EU 3-Party Trade,EU Service,Delivery Operation Code;
                                                   SumIndexFields=Base }
    { No ;Type,Bill-to/Pay-to No.,Posting Date,Document Type,Document No.;
                                                   KeyGroups=INCOMING;
                                                   MaintainSQLIndex=No }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Entry No.,Posting Date,Document Type,Document No.,Posting Date }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=You cannot change the contents of this field when %1 is %2.;ESP=No se puede modificar el contenido de este campo cuando %1 tenga el valor %2.';
      rPar@1103355000 : Record 7009700;
      Cust@1001 : Record 18;
      Vend@1002 : Record 23;
      GLSetup@1003 : Record 98;
      GLSetupRead@1004 : Boolean;
      VATPostingSetup@1100000 : Record 325;

    PROCEDURE GetCurrencyCode@1() : Code[10];
    BEGIN
      IF NOT GLSetupRead THEN BEGIN
        GLSetup.GET;
        GLSetupRead := TRUE;
      END;
      EXIT(GLSetup."Additional Reporting Currency");
    END;

    PROCEDURE GetUnRealizedVATPart@2(SettledAmount@1003 : Decimal;Paid@1005 : Decimal;Full@1001 : Decimal;TotalUnrealVATAmountFirst@1006 : Decimal;TotalUnrealVATAmountLast@1007 : Decimal) : Decimal;
    VAR
      UnrealizedVatType@1000 : ' ,Percentage,First,Last,First (Fully Paid),Last (Fully Paid)';
    BEGIN
      IF (Type <> 0) AND
         (Amount = 0) AND
         (Base = 0)
      THEN BEGIN
        UnrealizedVatType := GetUnrealizedVatType;
        IF (UnrealizedVatType = UnrealizedVatType::" ") OR
           (("Remaining Unrealized Amount" = 0) AND
            ("Remaining Unrealized Base" = 0))
        THEN
          EXIT(0);

        IF ABS(Paid) = ABS(Full) THEN
          EXIT(1);

        CASE UnrealizedVatType OF
          UnrealizedVatType::Percentage:
            EXIT(ABS(SettledAmount) / (ABS(Full) - (ABS(Paid) - ABS(SettledAmount))));
          UnrealizedVatType::First:
            BEGIN
              IF "VAT Calculation Type" = "VAT Calculation Type"::"Reverse Charge VAT" THEN
                EXIT(1);
              IF ABS(Paid) < ABS(TotalUnrealVATAmountFirst) THEN
                EXIT(ABS(SettledAmount) / ABS(TotalUnrealVATAmountFirst));
              EXIT(1);
            END;
          UnrealizedVatType::"First (Fully Paid)":
            BEGIN
              IF ("VAT Calculation Type" = "VAT Calculation Type"::"Reverse Charge VAT") THEN
                EXIT(1);
              IF ABS(Paid) < ABS(TotalUnrealVATAmountFirst) THEN
                EXIT(0);
              EXIT(1);
            END;
          UnrealizedVatType::"Last (Fully Paid)":
            EXIT(0);
          UnrealizedVatType::Last:
            BEGIN
              IF "VAT Calculation Type" = "VAT Calculation Type"::"Reverse Charge VAT" THEN
                EXIT(0);
              IF ABS(Paid) > ABS(Full) - ABS(TotalUnrealVATAmountLast) THEN
                EXIT((ABS(Paid) - (ABS(Full) - ABS(TotalUnrealVATAmountLast))) / ABS(TotalUnrealVATAmountLast));
              EXIT(0);
            END;
        END;
      END ELSE
        EXIT(0);
    END;

    PROCEDURE GetUnrealizedVatType@3() UnrealizedVatType : Integer;
    VAR
      VatPostingSetup@1001 : Record 325;
      TaxJurisdiction@1000 : Record 320;
    BEGIN
      IF "VAT Calculation Type" = "VAT Calculation Type"::"Sales Tax" THEN BEGIN
        TaxJurisdiction.GET("Tax Jurisdiction Code");
        UnrealizedVatType := TaxJurisdiction."Unrealized VAT Type";
      END ELSE BEGIN
        VatPostingSetup.GET("VAT Bus. Posting Group","VAT Prod. Posting Group");
        UnrealizedVatType := VatPostingSetup."Unrealized VAT Type";
      END;
    END;

    PROCEDURE FechaLiquidacion@1103355000() : Date;
    VAR
      lrCabFra@1103355000 : Record 122;
      lrCabAbo@1103355001 : Record 124;
      lwFechaPago@1103355002 : Date;
    BEGIN
      // FechaLiquidacion
      // $004
      lwFechaPago := 0D;
      IF Type = Type::Purchase THEN BEGIN
        CASE "Document Type" OF
          "Document Type"::Invoice:
          BEGIN
            IF lrCabFra.GET("Document No.") THEN
              lwFechaPago := lrCabFra.FechaPagoFactura;
          END;

          "Document Type"::"Credit Memo":
          BEGIN
            IF lrCabAbo.GET("Document No.") THEN
              lwFechaPago := lrCabAbo.FechaLiquidacion;
          END;
        END;
      END;

      EXIT(lwFechaPago);
    END;

    PROCEDURE NombreClienteProveedor@1103355001() : Text[60];
    VAR
      lrProv@1103355000 : Record 23;
      lrCli@1103355001 : Record 18;
    BEGIN
      // NombreClienteProveedor
      // $005
      IF Type = Type::Purchase THEN BEGIN
        IF lrProv.GET("Bill-to/Pay-to No.") THEN
          EXIT(lrProv.Name);
      END
      ELSE BEGIN
        IF lrCli.GET("Bill-to/Pay-to No.") THEN
          EXIT(lrCli.Name);
      END;
    END;

    BEGIN
    {
      // INCOMING

      $001 OnInsert, Si el departamento esta en blanco se rellena con la Delegacion en la que estamos

      $002 Se han agregado nuevos campos

          50002 Tipo de clave             Code10 "Maestro de Claves".Clave
          50005 Shortcut dimension 1 code Code20 "Dimension Value".Code WHERE (Global Dimension No.=CONST(1))

      $003 Se ha creado una nueva clave

          Campos : Type, Bill-to/Pay-to No., Posting Date, Document Type, Document No.
          KeyGroups : INCOMING
          MaintainSQLIndex : No

      $004 Se ha creado una funcion FechaLiquidacion que retorna la fecha en que se liquido el documento del registro, solo
         retorna la fecha en el caso de los documentos de compra

      $005 Se ha creado una funcion NombreClienteProveedor que retorna el nombre del cliente o del proveedor segun sea el caso
    }
    END.
  }
}
