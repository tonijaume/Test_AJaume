OBJECT Table 7000005 Bill Group
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVES6.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF "No." = '' THEN BEGIN
                 CarteraSetup.GET;
                 CarteraSetup.TESTFIELD("Bill Group Nos.");
                 NoSeriesMgt.InitSeries(CarteraSetup."Bill Group Nos.",xRec."No. Series",0D,"No.","No. Series");
               END;

               IF GETFILTER("Bank Account No.") <> '' THEN
                 IF GETRANGEMIN("Bank Account No.") = GETRANGEMAX("Bank Account No.") THEN BEGIN
                   Option := STRMENU(Text1100000);
                   CASE Option OF
                     0:
                       ERROR(Text1100001,TABLECAPTION);
                     1:
                       "Dealing Type" := "Dealing Type"::Collection;
                     2:
                       "Dealing Type" := "Dealing Type"::Discount;
                   END;
                   BankAcc.GET(GETRANGEMIN("Bank Account No."));
                   VALIDATE("Currency Code",BankAcc."Currency Code");
                   VALIDATE("Bank Account No.",BankAcc."No.");
                 END;

               CheckNoNotUsed;
               UpdateDescription;
               "Posting Date" := WORKDATE;
             END;

    OnDelete=BEGIN
               Doc.SETCURRENTKEY(Type,"Bill Gr./Pmt. Order No.");
               Doc.SETRANGE(Type,Doc.Type::Receivable);
               Doc.SETRANGE("Bill Gr./Pmt. Order No.","No.");
               IF Doc.FIND('-') THEN
                 ERROR(Text1100002);

               BGPOCommentLine.SETRANGE("BG/PO No.","No.");
               BGPOCommentLine.DELETEALL;
             END;

    CaptionML=[ENU=Bill Group;
               ESP=Remesa];
    LookupFormID=Form7000011;
    DrillDownFormID=Form7000011;
  }
  FIELDS
  {
    { 2   ;   ;No.                 ;Code20        ;OnValidate=BEGIN
                                                                IF "No." = xRec."No." THEN
                                                                  EXIT;

                                                                CheckPrinted;
                                                                ResetPrinted;

                                                                CarteraSetup.GET;
                                                                NoSeriesMgt.TestManual(CarteraSetup."Bill Group Nos.");
                                                                "No. Series" := '';

                                                                UpdateDescription;
                                                                CheckNoNotUsed;
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              ESP=N§] }
    { 3   ;   ;Bank Account No.    ;Code20        ;TableRelation="Bank Account";
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Bank Account Name");

                                                                IF "Bank Account No." = '' THEN
                                                                  EXIT;

                                                                BankAcc.GET("Bank Account No.");
                                                                BankAcc.TESTFIELD(Blocked,FALSE);

                                                                IF BillGrIsEmpty THEN BEGIN
                                                                  VALIDATE("Currency Code",BankAcc."Currency Code");
                                                                  EXIT;
                                                                END;

                                                                BankAcc.TESTFIELD("Currency Code","Currency Code");

                                                                CALCFIELDS(Amount);
                                                                IF (Amount <> 0) AND (Factoring = Factoring::" ") THEN
                                                                  CarteraManagement.CheckDiscCreditLimit(Rec);

                                                                IF "Bank Account No." <> xRec."Bank Account No." THEN BEGIN
                                                                  CheckPrinted;
                                                                  ResetPrinted;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Bank Account No.;
                                                              ESP=C¢d. cuenta banco] }
    { 4   ;   ;Bank Account Name   ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Bank Account".Name WHERE (No.=FIELD(Bank Account No.)));
                                                   CaptionML=[ENU=Bank Account Name;
                                                              ESP=Nombre banco];
                                                   Editable=No }
    { 5   ;   ;Posting Description ;Text50        ;CaptionML=[ENU=Posting Description;
                                                              ESP=Texto de registro] }
    { 6   ;   ;Dealing Type        ;Option        ;OnValidate=BEGIN
                                                                VALIDATE("Currency Code");

                                                                CALCFIELDS(Amount);
                                                                IF (Factoring = Factoring::" ") AND (Amount <> 0) THEN
                                                                  CarteraManagement.CheckDiscCreditLimit(Rec);

                                                                IF "Dealing Type" <> xRec."Dealing Type" THEN BEGIN
                                                                  CheckPrinted;
                                                                  ResetPrinted;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Dealing Type;
                                                              ESP=Tipo gesti¢n];
                                                   OptionCaptionML=[ENU=Collection,Discount;
                                                                    ESP=Cobro,Descuento];
                                                   OptionString=Collection,Discount }
    { 7   ;   ;Amount              ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Cartera Doc."."Remaining Amount" WHERE (Bill Gr./Pmt. Order No.=FIELD(No.),
                                                                                                            Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                            Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                            Category Code=FIELD(Category Filter),
                                                                                                            Due Date=FIELD(Due Date Filter),
                                                                                                            Type=CONST(Receivable)));
                                                   CaptionML=[ENU=Amount;
                                                              ESP=Importe];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 8   ;   ;Reason Code         ;Code10        ;TableRelation="Reason Code";
                                                   CaptionML=[ENU=Reason Code;
                                                              ESP=C¢d. auditor¡a] }
    { 9   ;   ;No. Printed         ;Integer       ;CaptionML=[ENU=No. Printed;
                                                              ESP=N§ copias impresas] }
    { 10  ;   ;Posting Date        ;Date          ;OnValidate=BEGIN
                                                                IF "Posting Date" <> xRec."Posting Date" THEN BEGIN
                                                                  CheckPrinted;
                                                                  ResetPrinted;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Posting Date;
                                                              ESP=Fecha registro] }
    { 11  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("BG/PO Comment Line" WHERE (BG/PO No.=FIELD(No.),
                                                                                                 Type=FILTER(Receivable)));
                                                   CaptionML=[ENU=Comment;
                                                              ESP=Comentario];
                                                   Editable=No }
    { 12  ;   ;Category Filter     ;Code10        ;FieldClass=FlowFilter;
                                                   TableRelation="Category Code";
                                                   ValidateTableRelation=No;
                                                   CaptionML=[ENU=Category Filter;
                                                              ESP=Filtro clasificaci¢n] }
    { 13  ;   ;Due Date Filter     ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Due Date Filter;
                                                              ESP=Filtro fecha vto.] }
    { 14  ;   ;Global Dimension 1 Filter;Code10   ;FieldClass=FlowFilter;
                                                   TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=[ENU=Global Dimension 1 Filter;
                                                              ESP=Filtro dimensi¢n global 1];
                                                   CaptionClass='1,3,1' }
    { 15  ;   ;Global Dimension 2 Filter;Code10   ;FieldClass=FlowFilter;
                                                   TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=[ENU=Global Dimension 2 Filter;
                                                              ESP=Filtro dimensi¢n global  2];
                                                   CaptionClass='1,3,2' }
    { 16  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              ESP=Nos. serie];
                                                   Editable=No }
    { 33  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   OnValidate=BEGIN
                                                                IF BankAcc.GET("Bank Account No.") AND ("Currency Code" <> BankAcc."Currency Code")
                                                                THEN
                                                                  TESTFIELD("Currency Code",BankAcc."Currency Code");

                                                                IF ("Currency Code" <> xRec."Currency Code") AND NOT BillGrIsEmpty THEN
                                                                  FIELDERROR("Currency Code",
                                                                    STRSUBSTNO(Text1100003,TABLECAPTION));

                                                                IF "Currency Code" <> '' THEN BEGIN
                                                                  Currency.RESET;
                                                                  IF "Dealing Type" = "Dealing Type"::Discount THEN
                                                                    Currency.SETRANGE("Bill Groups - Discount",TRUE)
                                                                  ELSE
                                                                    Currency.SETRANGE("Bill Groups - Collection",TRUE);
                                                                  Currency.Code := "Currency Code";
                                                                  IF NOT Currency.FIND THEN
                                                                    ERROR(
                                                                      Text1100004,
                                                                      "Currency Code");
                                                                END;

                                                                IF "Currency Code" <> xRec."Currency Code" THEN BEGIN
                                                                  CheckPrinted;
                                                                  ResetPrinted;
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              Currency.RESET;

                                                              IF Currency.GET("Currency Code") THEN;
                                                              Currencies.SETRECORD(Currency);
                                                              Currencies.LOOKUPMODE(TRUE);
                                                              IF ACTION::LookupOK = Currencies.RUNMODAL THEN BEGIN
                                                                Currencies.GETRECORD(Currency);
                                                                CLEAR(Currencies);
                                                                VALIDATE("Currency Code",Currency.Code);
                                                              END ELSE
                                                                CLEAR(Currencies);
                                                            END;

                                                   CaptionML=[ENU=Currency Code;
                                                              ESP=C¢d. divisa] }
    { 34  ;   ;Amount (LCY)        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Cartera Doc."."Remaining Amt. (LCY)" WHERE (Bill Gr./Pmt. Order No.=FIELD(No.),
                                                                                                                Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                Category Code=FIELD(Category Filter),
                                                                                                                Due Date=FIELD(Due Date Filter),
                                                                                                                Type=CONST(Receivable)));
                                                   CaptionML=[ENU=Amount (LCY);
                                                              ESP=Importe (DL)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 39  ;   ;Factoring           ;Option        ;OnValidate=BEGIN
                                                                Doc.RESET;
                                                                Doc.SETCURRENTKEY(Type,"Collection Agent","Bill Gr./Pmt. Order No.","Currency Code",Accepted,"Due Date",Place,"Document Type");
                                                                Doc.SETRANGE(Type,Doc.Type::Receivable);
                                                                Doc.SETRANGE("Collection Agent",Doc."Collection Agent"::Bank);
                                                                Doc.SETRANGE("Bill Gr./Pmt. Order No.","No.");
                                                                IF Factoring = Factoring::" " THEN BEGIN
                                                                  Doc.SETFILTER("Document Type",'<>%1',Doc."Document Type"::Bill);
                                                                  IF Doc.FIND('-') THEN
                                                                    ERROR(Text1100005);
                                                                END ELSE BEGIN
                                                                  Doc.SETFILTER("Document Type",'%1',Doc."Document Type"::Bill);
                                                                  IF Doc.FIND('-') THEN
                                                                    ERROR(Text1100006);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Factoring;
                                                              ESP=Factoring];
                                                   OptionCaptionML=[ENU=" ,Unrisked,Risked";
                                                                    ESP=" ,Sin recurso,Con recurso"];
                                                   OptionString=[ ,Unrisked,Risked] }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Bank Account No.                         }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text1100000@1000 : TextConst 'ENU=&Collection,&Discount;ESP=&Cobro,&Descuento';
      Text1100001@1001 : TextConst 'ENU=The creation of a new %1 was cancelled by the user;ESP=Se ha cancelado la creaci¢n de %1 por el usuario';
      Text1100002@1002 : TextConst 'ENU=This Bill Group is not empty. Remove all its bills and try again.;ESP=La remesa no est  vac¡a. Elimine todos sus efectos e intntelo de nuevo.';
      Text1100003@1003 : TextConst 'ENU=can only be changed when the %1 is empty;ESP=s¢lo se puede cambiar cuando %1 est  vac¡a';
      Text1100004@1004 : TextConst 'ENU=The operation is not allowed for bill groups using %1. Check your currency setup.;ESP=La operaci¢n no se permite para remesas que usan %1. Compruebe la configuraci¢n de la divisa.';
      Text1100005@1005 : TextConst 'ENU=Invoices should be removed.;ESP=Se deben eliminar las facturas.';
      Text1100006@1006 : TextConst 'ENU=Bills should be removed.;ESP=Se deben eliminar los efectos.';
      Text1100007@1007 : TextConst 'ENU=This bill group has already been printed. Proceed anyway?;ESP=Ya se ha impreso la remesa. ¨Confirma que desea continuar?';
      Text1100008@1008 : TextConst 'ENU=The update has been interrupted by the user.;ESP=La actualizaci¢n se ha interrumpido por el usuario.';
      Text1100009@1009 : TextConst 'ENU=Bill Group;ESP=Remesa';
      Text1100010@1010 : TextConst 'ENU=" is currently in use in a Posted Bill Group.";ESP=" ya ha sido utilizado en una remesa registrada."';
      Text1100011@1011 : TextConst 'ENU=" is currently in use in a Closed Bill Group.";ESP=" ya ha sido utilizado en una remesa cerrada."';
      Text1100012@1012 : TextConst 'ENU=untitled;ESP=sin t¡tulo';
      BillGr@1100001 : Record 7000005;
      PostedBillGr@1100002 : Record 7000006;
      ClosedBillGr@1100003 : Record 7000007;
      Doc@1100004 : Record 7000002;
      CarteraSetup@1100005 : Record 7000016;
      Currency@1100006 : Record 4;
      BankAcc@1100007 : Record 270;
      BGPOCommentLine@1100008 : Record 7000008;
      Currencies@1100011 : Form 5;
      CarteraManagement@1100009 : Codeunit 7000000;
      NoSeriesMgt@1100010 : Codeunit 396;
      Option@1100012 : Integer;

    PROCEDURE AssistEdit@3(OldBillGr@1100000 : Record 7000005) : Boolean;
    BEGIN
      WITH BillGr DO BEGIN
        BillGr := Rec;
        CarteraSetup.GET;
        CarteraSetup.TESTFIELD("Bill Group Nos.");
        IF NoSeriesMgt.SelectSeries(CarteraSetup."Bill Group Nos.",OldBillGr."No. Series","No. Series") THEN BEGIN
          CarteraSetup.GET;
          CarteraSetup.TESTFIELD("Bill Group Nos.");
          NoSeriesMgt.SetSeries("No.");
          Rec := BillGr;
          EXIT(TRUE);
        END;
      END;
    END;

    LOCAL PROCEDURE CheckPrinted@1();
    BEGIN
      IF "No. Printed" <> 0 THEN
        IF NOT CONFIRM(Text1100007) THEN
          ERROR(Text1100008);
    END;

    PROCEDURE ResetPrinted@2();
    BEGIN
      "No. Printed" := 0;
    END;

    LOCAL PROCEDURE UpdateDescription@4();
    BEGIN
      "Posting Description" := Text1100009 + ' ' + "No.";
    END;

    LOCAL PROCEDURE CheckNoNotUsed@5();
    BEGIN
      IF PostedBillGr.GET("No.") THEN
        FIELDERROR("No.",PostedBillGr."No." + Text1100010);
      IF ClosedBillGr.GET("No.") THEN
        FIELDERROR("No.",ClosedBillGr."No." + Text1100011);
    END;

    PROCEDURE PrintRecords@6(ShowRequestForm@1100000 : Boolean);
    VAR
      CarteraReportSelection@1100001 : Record 7000013;
    BEGIN
      WITH BillGr DO BEGIN
        COPY(Rec);
        CarteraReportSelection.SETRANGE(Usage,CarteraReportSelection.Usage::"Bill Group");
        CarteraReportSelection.SETFILTER("Report ID",'<>0');
        CarteraReportSelection.FIND('-');
        REPEAT
          REPORT.RUNMODAL(CarteraReportSelection."Report ID",ShowRequestForm,FALSE,BillGr);
        UNTIL CarteraReportSelection.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE BillGrIsEmpty@7() : Boolean;
    BEGIN
      Doc.SETCURRENTKEY(Type,"Bill Gr./Pmt. Order No.");
      Doc.SETRANGE(Type,Doc.Type::Receivable);
      Doc.SETRANGE("Bill Gr./Pmt. Order No.","No.");
      EXIT(NOT Doc.FIND('-'));
    END;

    PROCEDURE Caption@9() : Text[100];
    BEGIN
      IF "No." = '' THEN
        EXIT(Text1100012);
      CALCFIELDS("Bank Account Name");
      EXIT(STRSUBSTNO('%1 %2',"No.","Bank Account Name"));
    END;

    BEGIN
    END.
  }
}
