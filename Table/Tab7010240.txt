OBJECT Table 7010240 Cobro reserva excursion
{
  OBJECT-PROPERTIES
  {
    Date=23/07/15;
    Time=[ 9:43:40];
    Modified=Yes;
    Version List=AIC2009,CNT-OC-14047;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               _ControlEdicion; //+$014

               CLEAR(rCobr);
               rCobr.SETRANGE(Delegacion   , Delegacion);
               rCobr.SETRANGE("Num Reserva", "Num Reserva");
               IF NOT rCobr.FINDLAST THEN
                 CLEAR(rCobr);
               "ID Cobro" := rCobr."ID Cobro" + 1;

               _DatosReserva;

               _UltimaFechaCambio; //+$011
             END;

    OnModify=BEGIN
               _ControlEdicion; //+$014

               "Fecha Modificacion"  := CURRENTDATETIME;
               "Usuario Modificacion":= USERID;
             END;

    OnDelete=BEGIN
               _ControlEdicion; //+$014

               rHis.NewRecord(Delegacion, "Num Reserva", rHis."Tipo Registro"::Cobro,
                              FORMAT("ID Cobro") + ' ' + Text006,
                              Text006, Text006); //+$025
             END;

    CaptionML=[ENU=Excursion reservation payment;
               ESP=Cobro reserva excursion];
    LookupFormID=Form7010231;
    DrillDownFormID=Form7010231;
  }
  FIELDS
  {
    { 1   ;   ;Delegacion          ;Code10        ;TableRelation=Delegacion.Codigo;
                                                   CaptionML=[ENU=Local Office;
                                                              ESP=Delegacion];
                                                   NotBlank=Yes }
    { 10  ;   ;Num Reserva         ;Integer       ;TableRelation="Reserva Excursion"."N§ Reserva" WHERE (Delegacion=FIELD(Delegacion));
                                                   CaptionML=[ENU=Reservation No.;
                                                              ESP=Num Reserva];
                                                   NotBlank=Yes }
    { 20  ;   ;ID Cobro            ;Integer       ;CaptionML=[ENU=Payment ID;
                                                              ESP=ID Cobro] }
    { 30  ;   ;Forma de Pago       ;Code10        ;TableRelation="Payment Method".Code;
                                                   OnValidate=VAR
                                                                lrFormaPago@1100217000 : Record 289;
                                                              BEGIN
                                                                //-$002TESTFIELD("Cod. Divisa");

                                                                IF "Forma de Pago" <> xRec."Forma de Pago" THEN
                                                                BEGIN
                                                                  //+$021 <
                                                                  lrFormaPago.GET("Forma de Pago");
                                                                  "Tipo pago" := lrFormaPago."Tipo pago";
                                                                  //+$021 >

                                                                  // +$026 <
                                                                  IF ("Cod. Divisa" <> '') AND ("Forma de Pago" <> '') THEN
                                                                  BEGIN
                                                                    //+$028 <
                                                                    IF "Guia venta" = '' THEN
                                                                      _DatosReserva;
                                                                    //+$028 >

                                                                    _CheckSetup; //+$030
                                                                  END;
                                                                  // $026 >

                                                                  rHis.NewRecord(Delegacion, "Num Reserva", rHis."Tipo Registro"::Cobro,
                                                                                 FORMAT("ID Cobro") + ' ' + FIELDCAPTION("Forma de Pago"),
                                                                                 FORMAT(xRec."Forma de Pago"), FORMAT("Forma de Pago"));
                                                                END;
                                                              END;

                                                   OnLookup=VAR
                                                              lrFP@1000000001 : Record 289;
                                                              rCondGuia@1000000000 : Record 7010242;
                                                            BEGIN
                                                              // +$026 <
                                                              lrFP.RESET;
                                                              lrFP.CLEARMARKS;

                                                              rCondGuia.RESET;
                                                              rCondGuia.SETRANGE(Representante, "Guia venta");
                                                              IF rCondGuia.FINDFIRST THEN
                                                              BEGIN
                                                                REPEAT
                                                                  IF lrFP.GET(rCondGuia."Forma de Pago") THEN
                                                                    lrFP.MARK(TRUE);
                                                                UNTIL rCondGuia.NEXT = 0;
                                                              END;

                                                              lrFP.MARKEDONLY(TRUE);
                                                              IF FORM.RUNMODAL(0, lrFP) = ACTION::LookupOK THEN
                                                                VALIDATE("Forma de Pago", lrFP.Code);
                                                              // $026 >
                                                            END;

                                                   CaptionML=[ENU=Payment Method;
                                                              ESP=Forma de Pago];
                                                   NotBlank=Yes;
                                                   Description=$013 }
    { 40  ;   ;Importe             ;Decimal       ;CaptionML=[ENU=Amount;
                                                              ESP=Importe];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Cod. Divisa" }
    { 50  ;   ;Cod. Divisa         ;Code10        ;TableRelation=Currency.Code;
                                                   OnValidate=VAR
                                                                rCondGuia@1000000000 : Record 7010242;
                                                              BEGIN
                                                                IF "Cod. Divisa" <> xRec."Cod. Divisa" THEN
                                                                BEGIN
                                                                  _UltimaFechaCambio; //+$011

                                                                  // $013
                                                                  CALCFIELDS("Cod. Divisa Reserva");
                                                                  // JPT 10/10/12 Si el campo "Importe Recibido" est  rellenado hacemos la conversi¢n
                                                                  IF "Importe Recibido" <> 0 THEN
                                                                    SetImpDivCobro;

                                                                  SetImpDivResv;

                                                                  // +$026 <
                                                                  IF ("Cod. Divisa" <> '') AND ("Forma de Pago" <> '') THEN
                                                                  BEGIN
                                                                    //+$028 <
                                                                    IF "Guia venta" = '' THEN
                                                                      _DatosReserva;
                                                                    //+$028 >

                                                                    _CheckSetup; //+$030
                                                                  END;
                                                                  // $026 >

                                                                  rHis.NewRecord(Delegacion, "Num Reserva", rHis."Tipo Registro"::Cobro,
                                                                                 FORMAT("ID Cobro") + ' ' + FIELDCAPTION("Cod. Divisa"),
                                                                                 FORMAT(xRec."Cod. Divisa"), FORMAT("Cod. Divisa"));
                                                                END;
                                                              END;

                                                   OnLookup=VAR
                                                              lrDiv@1000000001 : Record 4;
                                                              rCondGuia@1000000000 : Record 7010242;
                                                            BEGIN
                                                              // +$026 <
                                                              lrDiv.RESET;
                                                              lrDiv.CLEARMARKS;
                                                              rCondGuia.RESET;
                                                              rCondGuia.SETRANGE(rCondGuia.Representante,"Guia venta");
                                                              IF rCondGuia.FINDFIRST THEN BEGIN
                                                                REPEAT
                                                                  IF lrDiv.GET(rCondGuia.Divisa) THEN
                                                                    lrDiv.MARK(TRUE);
                                                                UNTIL rCondGuia.NEXT = 0;
                                                              END;
                                                              lrDiv.MARKEDONLY(TRUE);
                                                              IF FORM.RUNMODAL(0,lrDiv) = ACTION::LookupOK THEN
                                                                VALIDATE("Cod. Divisa", lrDiv.Code);
                                                              lrDiv.CLEARMARKS;
                                                              // $026 >
                                                            END;

                                                   CaptionML=[ENU=Currency Code;
                                                              ESP=Cod. Divisa] }
    { 55  ;   ;Importe Divisa Reserva;Decimal     ;OnValidate=BEGIN
                                                                // $013
                                                                CALCFIELDS("Cod. Divisa Reserva");
                                                                // _ControlImpResv;
                                                                // SetImpDivCobro;
                                                              END;

                                                   CaptionML=[ENU=Reservation Currency Amount;
                                                              ESP=Importe Divisa Reserva] }
    { 60  ;   ;Fecha Modificacion  ;DateTime      ;CaptionML=[ENU=Modification Date;
                                                              ESP=Fecha Modificaci¢n];
                                                   Editable=No }
    { 70  ;   ;Usuario Modificacion;Text20        ;CaptionML=[ENU=Modification User;
                                                              ESP=Usuario Modificaci¢n];
                                                   Editable=No }
    { 80  ;   ;Importe Reembolsado Adulto;Decimal ;OnValidate=BEGIN
                                                                IF TotalImporteReembolsado > "Importe Recibido" THEN //+007
                                                                  ERROR(Text001);
                                                              END;

                                                   CaptionML=[ENU=Adult refunded amount;
                                                              ESP=Importe Reembolsado Adulto];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Cod. Divisa" }
    { 81  ;   ;Importe Reembolsado Ni¤o;Decimal   ;OnValidate=BEGIN
                                                                IF TotalImporteReembolsado > "Importe Recibido" THEN //+007
                                                                  ERROR(Text001);
                                                              END;

                                                   CaptionML=ESP=Importe Reembolsado Ni¤o }
    { 82  ;   ;Reembolsado adultos exento;Decimal ;CaptionML=[ENU=Adults exempted refund;
                                                              ESP=Reembolsado adultos exento] }
    { 83  ;   ;Reembolsado ni¤os exento;Decimal   ;CaptionML=[ENU=Childs exempted refund;
                                                              ESP=Reembolsado ni¤os exento] }
    { 85  ;   ;Importe Reembolsado ;Decimal       ;CaptionML=[ENU=Refunded amount;
                                                              ESP=Importe Reembolsado];
                                                   AutoFormatExpr="Cod. Divisa" }
    { 90  ;   ;Importe Recibido    ;Decimal       ;OnValidate=BEGIN
                                                                // $013
                                                                //TESTFIELD("Cod. Divisa");
                                                                CALCFIELDS("Cod. Divisa Reserva");

                                                                SetImpDivResv;

                                                                Importe := "Importe Recibido";

                                                                IF "Forma de Pago" <> xRec."Forma de Pago" THEN
                                                                BEGIN
                                                                  _TestImporteRecibido; //+007

                                                                END;

                                                                rHis.NewRecord(Delegacion, "Num Reserva", rHis."Tipo Registro"::Cobro,
                                                                               FORMAT("ID Cobro") + ' ' + FIELDCAPTION("Importe Recibido"),
                                                                               FORMAT(xRec."Importe Recibido"), FORMAT("Importe Recibido"));
                                                              END;

                                                   CaptionML=[ENU=Received amount;
                                                              ESP=Importe Recibido];
                                                   Description=GOC-OC-11019;
                                                   AutoFormatExpr="Cod. Divisa" }
    { 100 ;   ;O_Fecha Cambio      ;Date          ;CaptionML=[ENU=Exchange date;
                                                              ESP=Fecha cambio];
                                                   Description=$015, Auxiliar en Temporales Liquidacion GV }
    { 102 ;   ;Fecha cambio cobro  ;Date          ;CaptionML=[ENU=Payment exchange date;
                                                              ESP=Fecha cambio cobro];
                                                   Description=Se utilizar  en las conversiones cuando la divisa del cobro no coincida con la de la reserva }
    { 200 ;   ;Adultos Reembolsados;Decimal       ;OnValidate=VAR
                                                                lrRes@1100253000 : Record 7010162;
                                                              BEGIN
                                                                CLEAR(lrRes);
                                                                IF lrRes.GET(Delegacion, "Num Reserva") THEN BEGIN
                                                                  IF lrRes.Adultos < "Adultos Reembolsados" THEN
                                                                    ERROR(Text002, FIELDCAPTION("Adultos Reembolsados"), lrRes.FIELDCAPTION(Adultos), lrRes.Adultos);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Refunded Adults;
                                                              ESP=Adultos Reembolsados];
                                                   DecimalPlaces=0:2;
                                                   MinValue=0 }
    { 210 ;   ;Ni¤os Reembolsados  ;Decimal       ;OnValidate=VAR
                                                                lrRes@1100253000 : Record 7010162;
                                                              BEGIN
                                                                CLEAR(lrRes);
                                                                IF lrRes.GET(Delegacion, "Num Reserva") THEN BEGIN
                                                                  IF lrRes.Ni¤os < "Ni¤os Reembolsados" THEN
                                                                    ERROR(Text002, FIELDCAPTION("Ni¤os Reembolsados"), lrRes.FIELDCAPTION(Ni¤os), lrRes.Ni¤os);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Refunded Children;
                                                              ESP=Ni¤os Reembolsados];
                                                   DecimalPlaces=0:2;
                                                   MinValue=0 }
    { 220 ;   ;Primer Reembolso    ;Decimal       ;CaptionML=[ENU=First refund;
                                                              ESP=Primer reembolso];
                                                   Description=GOC-OC-11021;
                                                   AutoFormatExpr="Cod. Divisa" }
    { 221 ;   ;Autorizacion operacion;Code20      ;CaptionML=[ENU=Operating Authorization;
                                                              ESP=Autorizaci¢n Operacion];
                                                   Description=CNT-CAR-12003 }
    { 222 ;   ;Tipo conciliaci¢n   ;Option        ;OptionCaptionML=[ENU=,Automatic,Manual;
                                                                    ESP=" ,Autom tica,Manual"];
                                                   OptionString=[ ,Autom tica,Manual];
                                                   Description=CNT-CAR-12003 }
    { 223 ;   ;Liq. por Id.        ;Code20        ;CaptionML=[ENU=Liq. by Id.;
                                                              ESP=Liq. por Id.];
                                                   Description=CNT-CAR-12003;
                                                   Editable=No }
    { 224 ;   ;N§ conciliaci¢n     ;Integer       ;CaptionML=[ENU=Conciliation No.;
                                                              ESP=N§ conciliaci¢n];
                                                   Description=CNT-CAR-12003;
                                                   Editable=Yes }
    { 300 ;   ;Cod. Divisa Reserva ;Code10        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Reserva Excursion".Divisa WHERE (Delegacion=FIELD(Delegacion),
                                                                                                        N§ Reserva=FIELD(Num Reserva)));
                                                   CaptionML=[ENU=Reservation currency;
                                                              ESP=Cod. Divisa Reserva];
                                                   Description=Flowfield $013;
                                                   Editable=No }
    { 310 ;   ;Importe Reserva     ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Reserva ex - Detalle economico"."Ingreso reserva" WHERE (Delegacion=FIELD(Delegacion),
                                                                                                                                Num. Reserva=FIELD(Num Reserva)));
                                                   CaptionML=[ENU=Reservation Amount;
                                                              ESP=Importe Reserva];
                                                   Description=Flowfield $013,Lookup("Reserva ex - Detalle economico"."Ingreso reserva" WHERE (Delegacion=FIELD(Delegacion),Num. Reserva=FIELD(Num Reserva)));
                                                   Editable=No }
    { 320 ;   ;Ticket              ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Reserva Excursion"."N§ Ticket" WHERE (Delegacion=FIELD(Delegacion),
                                                                                                             N§ Reserva=FIELD(Num Reserva)));
                                                   CaptionML=[ENU=Ticket;
                                                              ESP=Ticket];
                                                   Description=Lookup("Reserva Excursion"."N§ Ticket" WHERE (Delegacion=FIELD(Delegacion),N§ Reserva=FIELD(Num Reserva)));
                                                   Editable=No }
    { 330 ;   ;Fecha venta         ;Date          ;CaptionML=[ENU=Sales date;
                                                              ESP=Fecha venta];
                                                   Description=$016 }
    { 340 ;   ;Guia venta          ;Code20        ;CaptionML=[ENU=Sales guide;
                                                              ESP=Guia venta];
                                                   Description=$017;
                                                   Editable=No }
    { 350 ;   ;Reembolsado         ;Boolean       ;CaptionML=[ENU=Refunded;
                                                              ESP=Reembolsado];
                                                   Description=$019 }
    { 360 ;   ;Fecha reembolso     ;Date          ;CaptionML=[ENU=Refund date;
                                                              ESP=Fecha reembolso];
                                                   Description=$019 }
    { 361 ;   ;Datafono            ;Code10        ;CaptionML=[ENU=Pin Pad;
                                                              ESP=Datafono] }
    { 370 ;   ;Tipo pago           ;Option        ;CaptionML=[ENU=Payment Type;
                                                              ESP=Tipo pago];
                                                   OptionCaptionML=[ENU=Credit,Cash,Card;
                                                                    ESP=Credito,Efectivo,Tarjeta];
                                                   OptionString=Credito,Efectivo,Tarjeta;
                                                   Description=$021 }
  }
  KEYS
  {
    {    ;Delegacion,Num Reserva,ID Cobro         ;SumIndexFields=Importe Divisa Reserva;
                                                   Clustered=Yes }
    {    ;Liq. por Id.                             }
    {    ;Guia venta,Forma de Pago,Cod. Divisa,Fecha venta,Fecha reembolso;
                                                   SumIndexFields=Importe Recibido }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      rCobr@1100253000 : Record 7010240;
      Text001@1100253001 : TextConst 'ENU=Amount to refund cannot be higher than the total of the booking;ESP=El importe a reembolsar no puede superar el total de la reserva.';
      rCamb@1100253002 : Record 330;
      Text002@1100253003 : TextConst 'ENU=Unable to assign more %1 than %2 in Booking (%3);ESP=No pueden asignarse m s %1 que %2 en Reserva (%3)';
      Text003@1100253004 : TextConst 'ENU=The sales representative works on credit;ESP=El representante trabaja a Credito';
      Text004@1100253005 : TextConst 'ENU=Received amount cannot be lower than the calculated amount;ESP=El importe recibido no puede ser menor que el importe calculado.';
      rDetEco@1100253006 : Record 7010245;
      rHis@1100253008 : Record 7010255;
      cPar@1100253007 : Codeunit 7009700;
      Text005@1100217000 : TextConst 'ENU=The total amounts of fees can not be higher than the reserve amount;ESP=El Total de los importes de los cobros No puede ser superior al de la reserva';
      Text006@1100217001 : TextConst 'ENU=Payment deleted;ESP=Cobro borrado';
      Text007@1000000000 : TextConst 'ESP=No existe setup contable para este guia, forma de pago y divisa.';
      cFunSeg@1000000001 : Codeunit 7009751;

    PROCEDURE ActualizaCobroReserva@1100253017(VAR prRsv@1100253000 : Record 7010162);
    VAR
      lwRegistroNuevo@1100253002 : Boolean;
      lwImpAnt@1100253003 : Decimal;
      lrCobros2@1100217000 : Record 7010240;
    BEGIN
      // ActualizaCobroReserva

      // JPT 18/03/11 Si es representante a credito no tiene que tener cobros
      IF prRsv.EsRepresentanteCredito THEN
        EXIT;

      IF (prRsv.Delegacion='') OR
         (prRsv."N§ Reserva" = 0) OR
         (prRsv.Divisa = '') THEN
        EXIT;

      IF (prRsv."Ingreso reserva" = 0) THEN
      BEGIN
        lrCobros2.RESET;
        lrCobros2.SETRANGE(Delegacion   , prRsv.Delegacion);
        lrCobros2.SETRANGE("Num Reserva", prRsv."N§ Reserva");
        IF lrCobros2.FINDSET THEN
        BEGIN
          lrCobros2.Importe := 0;
          lrCobros2.VALIDATE("Importe Recibido", 0);
          lrCobros2.MODIFY;
        END;
      END;

      //. Si ya se ha liquidado, no modificamos el importe por recalculo
      IF prRsv."N§ liquidacion GV" <> 0 THEN
        EXIT;

      prRsv.TESTFIELD("Fecha cambio");

      CLEAR(Rec);
      SETRANGE(Delegacion   , prRsv.Delegacion);
      SETRANGE("Num Reserva", prRsv."N§ Reserva");
      IF NOT FINDLAST THEN BEGIN
        // Si no existe un registro lo creamos
        Delegacion   := prRsv.Delegacion;
        "Num Reserva":= prRsv."N§ Reserva";
        Importe      := prRsv."Ingreso reserva";
        "Cod. Divisa":= prRsv.Divisa;
        _ActualizaImporteRecibido; //+007

        INSERT(TRUE);

        lwRegistroNuevo := TRUE;
      END;

      //+$003
      IF lwRegistroNuevo THEN BEGIN
        COMMIT;
        LlamarVentanaCobro(prRsv.Delegacion, prRsv."N§ Reserva");
      END
      ELSE
      BEGIN
        lrCobros2.RESET;
        lrCobros2.SETRANGE(Delegacion   , prRsv.Delegacion);
        lrCobros2.SETRANGE("Num Reserva", prRsv."N§ Reserva");
        IF lrCobros2.COUNT = 1 THEN
        BEGIN
          //. En los casos en los que hay un solo cobro actualizamos el importe del cobro

          lwImpAnt := Importe; //+009

          "Cod. Divisa Reserva" := prRsv.Divisa;

          Importe := CambioDivisa("Cod. Divisa Reserva", "Cod. Divisa", prRsv."Ingreso reserva");

          IF (lwImpAnt <> Importe) OR ("Importe Recibido" = 0) THEN //+009
            _ActualizaImporteRecibido; //+007

          CALCFIELDS("Cod. Divisa Reserva");
          SetImpDivResv; //. Convertir el importe recibido a la divisa de venta de la reserva

          MODIFY(TRUE);
        END;

        // $013 Si se ha cambiado la divisa de cobro se cambian en todos los cobros el valor "Importe Divisa Reserva"
        IF lrCobros2.FINDSET THEN BEGIN
          REPEAT
            lrCobros2."Importe Divisa Reserva" := lrCobros2.CambioDivisa(lrCobros2."Cod. Divisa", prRsv.Divisa,
                                                                         lrCobros2."Importe Recibido");
            lrCobros2.MODIFY;
          UNTIL lrCobros2.NEXT = 0;
        END;
      END;
      //-$003
    END;

    PROCEDURE LlamarVentanaCobro@1100253006(pwDelegacion@1100253000 : Code[10];pwNumReserva@1100253001 : Integer);
    VAR
      lrRes@1100253002 : Record 7010162;
    BEGIN
      // LlamarVentanaCobro

      IF (pwDelegacion='') OR (pwNumReserva = 0) THEN
        EXIT;

      // Si no existe ni la reserva salimos
      CLEAR(lrRes);
      IF NOT lrRes.GET(pwDelegacion, pwNumReserva) THEN
        EXIT;

      // JPT 18/03/11 Si es representante a credito no tiene que tener cobros
      IF lrRes.EsRepresentanteCredito THEN
        ERROR(Text003);

      CLEAR(rCobr);
      rCobr.SETRANGE(Delegacion   , pwDelegacion);
      rCobr.SETRANGE("Num Reserva", pwNumReserva);
      IF NOT rCobr.FINDFIRST THEN BEGIN
        rCobr.Delegacion   := pwDelegacion;
        rCobr."Num Reserva":= pwNumReserva;
        rCobr.Importe      := lrRes."Ingreso reserva";
        rCobr."Cod. Divisa":= lrRes.Divisa;
        // rCobr."Importe Divisa Reserva" := rCobr.Importe; //$013
        rCobr.INSERT(TRUE);
        COMMIT; //+006
      END;

      IF GUIALLOWED THEN //+$029
        FORM.RUNMODAL(0, rCobr);
    END;

    LOCAL PROCEDURE _ActualizaImporteRecibido@1100253004();
    VAR
      lrDatIns@1000000000 : Record 7009768;
    BEGIN
      // _ActualizaImporteRecibido.
      //: Se actualiza el Importe Recibido como un redondeo a la unidad hacia arriba.

      //+007

      // En caso que sea 0 no redondeamos.
      IF Importe = 0 THEN BEGIN
        VALIDATE("Importe Recibido", Importe);
        EXIT;
      END;

      // Redondeamos hacia arriba a la unidad.
      lrDatIns.FINDFIRST;
      IF lrDatIns."Empresa Real" = lrDatIns."Empresa Real"::CNT THEN
        VALIDATE("Importe Recibido", ROUND(Importe, 1))
      ELSE
        VALIDATE("Importe Recibido", ROUND(Importe, 1, '>'));

      //-007
    END;

    PROCEDURE _TestImporteRecibido@1100253000();
    BEGIN
      // _TestImporteRecibido.
      //:
      //+007
      IF "Importe Recibido" < Importe THEN
        ERROR(Text004);
      //-007
    END;

    PROCEDURE TotalImporteReembolsado@1100253001() : Decimal;
    BEGIN
      // TotalImporteReembolsado
      // $010

      EXIT("Importe Reembolsado Adulto" + "Importe Reembolsado Ni¤o");
    END;

    LOCAL PROCEDURE _UltimaFechaCambio@1100253002();
    VAR
      lrCurrExch@1100253000 : Record 330;
      lrRsv@1100217000 : Record 7010162;
    BEGIN
      // _UltimaFechaCambio

      //. Creada por : AJS
      //. Creada dia : 09/05/2011
      //. Rellenar el campo Fecha Cambio con la ultima fecha de cambio registrada en contabilidad

      IF "Cod. Divisa" = '' THEN
        EXIT;

      //+$022
      IF ("Fecha cambio cobro" <> 0D) AND
         ("Cod. Divisa" = xRec."Cod. Divisa") THEN
        EXIT;
      //+$022

      lrRsv.GET(Delegacion, "Num Reserva");

      lrCurrExch.RESET;
      lrCurrExch.SETRANGE ("Currency Code", "Cod. Divisa");
      lrCurrExch.SETFILTER("Starting Date", '<=%1', lrRsv."Fecha Venta");
      lrCurrExch.FINDLAST;

      "Fecha cambio cobro" := lrCurrExch."Starting Date";
    END;

    PROCEDURE DatosDefecto@1100217000();
    VAR
      lrResv@1100217000 : Record 7010162;
    BEGIN
      // DatosDefecto
      // $013
      // Valores por defecto al inicializar un nuevo registro

      CLEAR(lrResv);
      IF lrResv.GET(Delegacion, "Num Reserva") THEN BEGIN
        "Cod. Divisa" := lrResv.Divisa;
        // Importe       := lrResv."Ingreso reserva" - GetTotalCobros;
        // "Importe Divisa Reserva" := Importe;
      END;
    END;

    PROCEDURE CambioDivisa@1100217002(pwDivOrigen@1100217000 : Code[10];pwDivDestino@1100217001 : Code[10];pwImporte@1100217003 : Decimal) : Decimal;
    VAR
      lwImporte@1100217002 : Decimal;
      lrDivisa@1100217004 : Record 4;
    BEGIN
      // CambioDivisa
      // $013

      IF pwDivOrigen = pwDivDestino THEN
        EXIT(pwImporte);

      CLEAR(lrDivisa);
      IF pwDivDestino <> '' THEN
        lrDivisa.GET(pwDivDestino);

      TESTFIELD("Fecha cambio cobro");
      lwImporte  := ROUND(rCamb.ExchangeAmtFCYToFCY("Fecha cambio cobro", pwDivOrigen, pwDivDestino, pwImporte),
                       lrDivisa."Amount Rounding Precision");

      EXIT(lwImporte);
    END;

    PROCEDURE SetImpDivResv@1100217007();
    BEGIN
      // SetImpDivResv
      // $013
      // Calcula el valor "Importe Divisa Reserva" a partir del importe del cobro
      // Notese que no se ha calculado "Cod. Divisa Reserva" que es un flowfield. Eso debe de hacerse externamente a la funci¢n

      "Importe Divisa Reserva" := CambioDivisa("Cod. Divisa", "Cod. Divisa Reserva", "Importe Recibido")
    END;

    PROCEDURE SetImpDivCobro@1100217003();
    BEGIN
      // SetImpDivCobro
      // $013
      // Calcula el importe del cobro partiendo del valor "Importe Divisa Reserva"
      // Notese que no se ha calculado "Cod. Divisa Reserva" que es un flowfield. Eso debe de hacerse externamente a la funci¢n

      IF xRec."Cod. Divisa" <> "Cod. Divisa" THEN
        "Importe Recibido" := CambioDivisa(xRec."Cod. Divisa", "Cod. Divisa", "Importe Recibido")
      ELSE
        "Importe Recibido" := CambioDivisa("Cod. Divisa Reserva", "Cod. Divisa", "Importe Recibido");
    END;

    PROCEDURE GetTotalCobros@1100217009() : Decimal;
    VAR
      lwTotal@1100217000 : Decimal;
      lrCobro@1100217001 : Record 7010240;
    BEGIN
      // GetTotalCobros
      // Devuelve el total del importe cobrado en divisa de la reserva, sin contar con el registro Actual

      CLEAR(lwTotal);

      CLEAR(lrCobro);
      lrCobro.SETRANGE(Delegacion    , Delegacion);
      lrCobro.SETRANGE("Num Reserva" , "Num Reserva");
      lrCobro.SETFILTER("ID Cobro"   , '<>%1', "ID Cobro"); // Excluimos el registro actual
      lrCobro.CALCSUMS("Importe Divisa Reserva");
      lwTotal := lrCobro."Importe Divisa Reserva";

      EXIT(lwTotal);
    END;

    LOCAL PROCEDURE _ControlImpResv@1100217001();
    VAR
      lrResv@1100217000 : Record 7010162;
    BEGIN
      // _ControlImpResv
      // Controlamos que el total de los importes no sobrepase el importe de la resera
      // *** NO UTILIZAR, OBSOLETO *****
      // Ahora Gettotalcobros indica el total de importe recibido
      EXIT;

      CLEAR(lrResv);
      IF lrResv.GET(Delegacion, "Num Reserva") THEN BEGIN
        IF lrResv."Ingreso reserva" < (GetTotalCobros + "Importe Divisa Reserva") THEN
          ERROR(Text005);
      END;
    END;

    PROCEDURE Pendiente@1100217004() : Decimal;
    VAR
      lwPent@1100217000 : Decimal;
    BEGIN
      // Pendiente
      // Devuelve el importe de cobro pendiente de esta reserva
      // (El campo "Importe Reserva" debe de estar calculado)

      lwPent := "Importe Reserva" - GetTotalCobros - "Importe Divisa Reserva";
      EXIT(lwPent);
    END;

    PROCEDURE PendienteDivisa@1100217005() : Decimal;
    VAR
      lwPent@1100217000 : Decimal;
    BEGIN
      // PendienteDivisa
      // Devuelve el importe de cobro pendiente de esta reserva en la divisa de la linea
      // (Los campos "Importe Reserva" Y "Cod. Divisa Reserva" deben de estar calculados)

      IF "Cod. Divisa"='' THEN
        EXIT;

      lwPent := CambioDivisa("Cod. Divisa Reserva","Cod. Divisa", Pendiente);

      EXIT(lwPent);
    END;

    LOCAL PROCEDURE _ControlEdicion@1100217006();
    VAR
      lrRsv@1100253000 : Record 7010162;
    BEGIN
      // ControlEdicion

      lrRsv.GET(Delegacion, "Num Reserva");

      lrRsv.TESTFIELD(Anulada, FALSE);
      lrRsv.TESTFIELD(Reembolsada, FALSE);
      lrRsv.TESTFIELD(Facturada, FALSE);
      lrRsv.TESTFIELD("N§ liquidacion GV", 0);
      lrRsv.TESTFIELD(Confirmada, FALSE);

      // $027
      IF (lrRsv."Reserva online") AND (GUIALLOWED) THEN
        cFunSeg.TienePermiso('EXC-ONL-MAN', TRUE);
    END;

    LOCAL PROCEDURE _DatosReserva@1100217008();
    VAR
      lrResv@1100217000 : Record 7010162;
      lrRep@1100217001 : Record 7010241;
    BEGIN
      // _DatosReserva

      IF lrResv.GET(Delegacion, "Num Reserva") THEN
      BEGIN
        "Fecha venta" := lrResv."Fecha Venta";
        "Guia venta"  := lrResv."Guia Venta"; //+$017
        IF lrRep.GET("Guia venta") THEN
          Datafono := lrRep."Datafono relacionado"; //+$020
      END;
    END;

    LOCAL PROCEDURE _CheckSetup@1000000000();
    VAR
      lrRsv@1000000000 : Record 7010162;
      lrCondGuia@1000000001 : Record 7010242;
    BEGIN
      // _CheckSetup

      //. Vamos a comprobar que la forma de pago utilizada esta configurada
      //. para la divisa utilizada. Evitamos problemas a la hora de liquidar

      //+$030 <
      lrRsv.GET(Delegacion, "Num Reserva");
      IF lrRsv."Reserva a credito" THEN
        EXIT;

      lrCondGuia.RESET;
      lrCondGuia.SETRANGE(Representante  , "Guia venta");
      lrCondGuia.SETRANGE("Forma de Pago", "Forma de Pago");
      lrCondGuia.SETRANGE(Divisa         , "Cod. Divisa");
      IF NOT lrCondGuia.FINDFIRST THEN
        ERROR(Text007);
      //+$030 >
    END;

    BEGIN
    {
      $001 AJS 09032011 Pongo un round al hacer las conversiones entre divisas

      $002 AJS 06042011 Modifico para que la divisa del cobro pueda quedar en blanco

      $003 AJS 20042011 Modifico la funcion ActualizaCobroReserva para que llame al formulario de cobro cuando se
                        inserte el registro de cobro y para que solo se inserte cuando la reserva este calculada

      $004 AJS 20042011 Modifico la funcion LlamarVentanaCobro para que se haga un Runmodal en lugar de un Run

      $005 AJS 26052011 Nuevo campo Fecha cambio cobro. Se utilizar  en las conversiones cuando la divisa del cobro
                        no coincida con la de la reserva.

      $006 AJF 30062011 Se a¤ade un commit en la funci¢n LlamarVentanaCobro al insertar un nuevo registro ya que en
                        caso contrario da un error al abrir el formulario.

      $007 AJF 30062011 (GOC-OC-11019) Se a¤ade el campo "Importe recibido" para que se pueda indicar el importe recibido
                        por defecto se redondea a la unidad y no puede ser menor que el importe calculado.

      $008 AJF 01072011 (GOC-OC-11021) Se a¤ade el campo "Primer Reembolso" para guardar el valor del primer reembolso y permitir
                                       un segundo.

      $009 AJF 25072011 Se comprueba que el importe haya cambiado antes de aplicar el redondeo del "importe recibido".

      $010 JPT 21/03/11 INC-59916 Se separa el importe reembolsado en Adultos- Ni¤os

      $011 AJS 30052012 Crear una nueva funcion para rellenar el campo "Tipo cambio cobro" con la ultima fecha de cambio de la
                        divisa de cobro, como se hace en la reserva de excursiones.

      $012 AJS 01062012 Habilitar que los cambios hechos en esta tabla se reflejen en el historico de la reserva

      $013 JPT 06/09/12 CNT 12002 Permitir mas de un cobro por reserva de excursi¢n

      $014 AJS 30102012 Agrego un control para evitar que se modifique la informacion de cobro de una reserva ya
                        liquidada/facturada/confirmada o anulada/reembolsada

      $015 AJS 12122012 Marco el campo "Fecha Cambio" como obsoleto, esta duplicado con "Fecha cambio cobro"

      $016 AJS 03022013 Nuevo campo "Fecha venta", calculado sobre reserva excursion, ahora no es calculado

      $017 AJS 19032013 Nuevo campo "Guia venta" para usar en campos calculados

      $018 AJS 12062013 Hemos creado una nueva tabla de historico de reserva

      $019 AJS 16062013 Nuevos campos "Reembolsado" y "Fecha reembolso" para usar en campos calculados

      $020 AJS 20062031 Nuevo campo Datafono para relacionar en la conciliacion con los movimientos de tarjeta
                        enviados por el banco

      $021 AJS 16072103 Nuevo campo "Tipo pago" para identificar las formas de pago en tarjeta de credito y
                        aplicar en la conciliacion de movimientos de tarjeta

      $022 AJS 07082013 Amplio el campo Liq. por Id a 20 caracteres

      $023 AJS 26092013 A¤ado el campo Fecha reembolso en la ultima clave para el informe de caja

      $024 AJS 27092013 Amplio el campo Guia Venta a 20 caracteres para mantener coherente con Go Caribic

      $025 AJS 17022014 Si se borra

      $026 ARM 21102014 CNT-OC-14057 Solo mostrar divisas y formas de pago que tengan configurado el guia

      $027 ARM 30102014 Control modificaciones reserva online

      $028 AJS 11122014 Si el guia esta en blanco cuando quieren poner Forma de pago o divisa, lo buscamos

      $029 AJS 16042015 Cubrir con GUIALLOWED la llamada al formulario de cobros para evitar problemas en WebServices

      $030 AJS 23072015 El control de setup contable por forma de pago y divisa no lo hacemos para las reservas a credito
    }
    END.
  }
}
