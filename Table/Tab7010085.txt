OBJECT Table 7010085 Condiciones temporales
{
  OBJECT-PROPERTIES
  {
    Date=04/05/15;
    Time=16:44:35;
    Modified=Yes;
    Version List=AIC2009,CNT-OC-14047;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Temporary conditions;
               ESP=Condiciones temporales];
  }
  FIELDS
  {
    { 1   ;   ;Usuario             ;Code20        ;CaptionML=[ENU=User;
                                                              ESP=Usuario] }
    { 3   ;   ;TourOperador        ;Code10        ;TableRelation=TourOperador.TourOperador;
                                                   CaptionML=[ENU=TourOperator;
                                                              ESP=TourOperador];
                                                   Description=FK TourOperador }
    { 5   ;   ;Hotel               ;Code20        ;TableRelation=Hotel.Hotel;
                                                   OnValidate=VAR
                                                                rHot@1103355000 : Record 7009724;
                                                                cod_hab@1103355001 : Code[10];
                                                                cod_reg@1103355002 : Code[10];
                                                              BEGIN
                                                                IF (rRsv.GET(Delegacion, "N§ Reserva")) AND ("Cambia booking") THEN BEGIN
                                                                  IF NOT rHot.GET(Hotel) THEN
                                                                    ERROR(Text000, Hotel);
                                                                  IF NOT rCab.GET(rRsv.Delegacion, rRsv."N§ Interno") THEN
                                                                    ERROR(Text001, rRsv."N§ Interno", rRsv.Delegacion);
                                                                  IF rHot.NoName THEN
                                                                    ERROR(Text002);

                                                                  "Contrato compra" := cCon.busca_contrato_compra(rRsv.TourOperador,
                                                                                                                  rRsv.Delegacion,
                                                                                                                  Hotel,
                                                                                                                  "Fecha desde",
                                                                                                                  "Fecha hasta");

                                                                  IF rConC.GET(rRsv.Delegacion, "Contrato compra") THEN BEGIN
                                                                    IF (rConC."Tipo de Contrato" = rConC."Tipo de Contrato"::"En nombre propio") AND
                                                                       (rCab.Circuito = '') THEN
                                                                      "Contrato venta" := cCon.busca_contrato_venta(rRsv."TourOperador Venta",
                                                                                                                    rRsv.Delegacion,
                                                                                                                    Hotel,
                                                                                                                    "Fecha desde",
                                                                                                                    "Fecha hasta");
                                                                  END;
                                                                  IF (Hotel <> '') AND ("Cambiar Hotel Origen Precios" OR (Habitacion <> '')) AND (Correcto) THEN BEGIN
                                                                    IF (Habitacion <> '') THEN
                                                                      cod_hab := Habitacion
                                                                    ELSE
                                                                      cod_hab := "Habitacion actual";
                                                                    IF "Cambiar Hotel Origen Precios" THEN
                                                                      "Hotel a cargar" := Hotel
                                                                    ELSE
                                                                      "Hotel a cargar" := rRsv."Hotel origen precios";
                                                                    cCon.busca_cupo_habitacion(rRsv.TourOperador,
                                                                                               rRsv.Delegacion,
                                                                                               Hotel,
                                                                                               "Fecha desde",
                                                                                               "Fecha hasta",
                                                                                               cod_hab,
                                                                                               "Hotel a cargar", TRUE);
                                                                    IF "Contrato venta" <> '' THEN BEGIN
                                                                      IF "Cambiar Hotel Origen Precios" THEN
                                                                        "Hotel a cargar" := Hotel
                                                                      ELSE
                                                                        "Hotel a cargar" := rRsv."Hotel venta";
                                                                      cCon.busca_cupo_habitacion_venta(rRsv."TourOperador Venta",
                                                                                                       rRsv.Delegacion,
                                                                                                       Hotel,
                                                                                                       "Fecha desde",
                                                                                                       "Fecha hasta",
                                                                                                       cod_hab,
                                                                                                       "Hotel a cargar", TRUE)
                                                                    END;
                                                                  END;
                                                                  IF (Hotel <> '') AND ("Cambiar Hotel Origen Precios" OR (Regimen <> '')) AND (Correcto) THEN BEGIN
                                                                    IF Regimen <> '' THEN
                                                                      cod_reg := Regimen
                                                                    ELSE
                                                                      cod_reg := "Regimen actual";

                                                                    IF "Cambiar Hotel Origen Precios" THEN
                                                                      "Hotel a cargar" := Hotel
                                                                    ELSE
                                                                      "Hotel a cargar" := rRsv."Hotel origen precios";
                                                                    cCon.busca_precio_regimen(rRsv.TourOperador,
                                                                                              rRsv.Delegacion,
                                                                                              "Hotel a cargar",
                                                                                              "Fecha desde",
                                                                                              "Fecha hasta",
                                                                                              cod_reg);
                                                                    IF "Contrato venta" <> '' THEN BEGIN
                                                                      IF "Cambiar Hotel Origen Precios" THEN
                                                                        "Hotel a cargar" := Hotel
                                                                      ELSE
                                                                        "Hotel a cargar" := rRsv."Hotel venta";
                                                                      cCon.busca_precio_regimen_venta(rRsv."TourOperador Venta",
                                                                                                      rRsv.Delegacion,
                                                                                                      "Hotel a cargar",
                                                                                                      "Fecha desde",
                                                                                                      "Fecha hasta",
                                                                                                      cod_reg);
                                                                    END;
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Hotel;
                                                              ESP=Hotel];
                                                   Description=FK Hotel }
    { 7   ;   ;Fecha Entrada       ;Date          ;CaptionML=[ENU=Check-in Date;
                                                              ESP=Fecha entrada] }
    { 8   ;   ;Fecha Salida        ;Date          ;CaptionML=[ENU=Check-out Date;
                                                              ESP=Fecha salida] }
    { 9   ;   ;Delegacion          ;Code10        ;TableRelation=Delegacion.Codigo;
                                                   CaptionML=[ENU=Local Office;
                                                              ESP=Delegacion];
                                                   Description=FK Delegacion }
    { 11  ;   ;Validados           ;Boolean       ;CaptionML=[ENU=Validated;
                                                              ESP=Validados] }
    { 13  ;   ;Fecha desde         ;Date          ;OnValidate=BEGIN
                                                                IF "Fecha hasta" <> 0D THEN BEGIN
                                                                  IF "Fecha desde" > "Fecha hasta" THEN
                                                                    ERROR(Text003);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Date From;
                                                              ESP=Fecha desde] }
    { 15  ;   ;Fecha hasta         ;Date          ;OnValidate=BEGIN
                                                                IF "Fecha desde" <> 0D THEN BEGIN
                                                                  IF "Fecha desde" > "Fecha hasta" THEN
                                                                    ERROR(Text003);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Date To;
                                                              ESP=Fecha hasta] }
    { 17  ;   ;Habitacion          ;Code10        ;TableRelation="Conversion Habitacion"."Habitacion cupo" WHERE (Delegacion=FIELD(Delegacion),
                                                                                                                  N§ Contrato=FIELD(Contrato compra),
                                                                                                                  Tipo contrato=CONST(Compra));
                                                   OnValidate=BEGIN
                                                                IF Hotel <> '' THEN
                                                                  VALIDATE(Hotel);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Room;
                                                              ESP=Habitacion] }
    { 19  ;   ;Regimen             ;Code10        ;TableRelation=Regimen.Regimen;
                                                   OnValidate=BEGIN
                                                                IF Hotel <> '' THEN
                                                                  VALIDATE(Hotel);
                                                              END;

                                                   CaptionML=[ENU=Board;
                                                              ESP=Regimen];
                                                   Description=FK Regimen }
    { 21  ;   ;Contrato compra     ;Code10        ;CaptionML=[ENU=Purchate contract;
                                                              ESP=Contrato compra] }
    { 23  ;   ;Contrato venta      ;Code10        ;CaptionML=[ENU="Sale contract ";
                                                              ESP=Contrato venta] }
    { 25  ;   ;Correcto            ;Boolean       ;OnValidate=BEGIN
                                                                VALIDATE(Hotel);
                                                              END;

                                                   CaptionML=[ENU=Correct;
                                                              ESP=Correcto] }
    { 27  ;   ;Cambia booking      ;Boolean       ;CaptionML=[ENU=Change booking;
                                                              ESP=Cambia booking] }
    { 29  ;   ;N§ Reserva          ;Integer       ;CaptionML=[ENU=Reservation No.;
                                                              ESP=N§ Reserva];
                                                   Editable=No }
    { 31  ;   ;Zona                ;Code10        ;TableRelation="Zona fisica"."Zona Fisica";
                                                   CaptionML=[ENU=Location;
                                                              ESP=Zona];
                                                   Description=FK Zona Fisica }
    { 33  ;   ;Mismo TourOperador  ;Boolean       ;CaptionML=[ENU=Same Touroperator;
                                                              ESP=Mismo TourOperador] }
    { 35  ;   ;Garantia            ;Boolean       ;CaptionML=[ENU=Guarantee;
                                                              ESP=Garantia] }
    { 37  ;   ;Categoria           ;Code10        ;TableRelation="Categoria Hotel".Codigo;
                                                   CaptionML=[ENU=Category;
                                                              ESP=Categoria];
                                                   Description=FK Categoria Hotel }
    { 39  ;   ;Zona Servicio       ;Code10        ;TableRelation="Zonas transfer".Zona WHERE (Tipo contrato=CONST(Servicio));
                                                   CaptionML=[ENU=Service zone;
                                                              ESP=Zona servicio];
                                                   Description=FK Zonas Transfer }
    { 41  ;   ;Fecha               ;Date          ;CaptionML=[ENU=Date;
                                                              ESP=Fecha] }
    { 43  ;   ;Tipo Transfer       ;Option        ;CaptionML=[ENU=Transfer Type;
                                                              ESP=Tipo Transfer];
                                                   OptionCaptionML=[ENU=Arrival,Departure;
                                                                    ESP=Entrada,Salida];
                                                   OptionString=Entrada,Salida }
    { 45  ;   ;Transportista       ;Code10        ;TableRelation="Transportista transfer".Codigo;
                                                   CaptionML=[ENU=Carrier;
                                                              ESP=Transportista] }
    { 47  ;   ;N§ Factura proveedor;Code20        ;CaptionML=[ENU=Supplier invoice No.;
                                                              ESP=N§ Factura proveedor] }
    { 49  ;   ;Fecha emision proveedor;Date       ;CaptionML=[ENU=Supplier date of issue;
                                                              ESP=Fecha emision proveedor] }
    { 51  ;   ;Total Factura       ;Decimal       ;CaptionML=[ENU=Total invoice;
                                                              ESP=Total Factura];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="C¢d. divisa" }
    { 53  ;   ;Compa¤ia Entrada    ;Code10        ;TableRelation="Compa¤ia aerea".Codigo;
                                                   CaptionML=[ENU=Arrival company;
                                                              ESP=Compa¤ia entrada];
                                                   Description=FK Compa¤ia Aerea }
    { 55  ;   ;Compa¤ia Salida     ;Code10        ;TableRelation="Compa¤ia aerea".Codigo;
                                                   CaptionML=[ENU=Departure company;
                                                              ESP=Compa¤ia salida];
                                                   Description=FK Compa¤ia Aerea }
    { 57  ;   ;Vuelo Entrada       ;Code10        ;TableRelation="Plan de vuelo".Vuelo WHERE (Compa¤ia=FIELD(Compa¤ia Entrada));
                                                   CaptionML=[ENU=Arrival flight;
                                                              ESP=Vuelo entrada];
                                                   Description=FK Plan de vuelo }
    { 59  ;   ;Vuelo Salida        ;Code10        ;TableRelation="Plan de vuelo".Vuelo WHERE (Compa¤ia=FIELD(Compa¤ia Salida));
                                                   CaptionML=[ENU=Departure flight;
                                                              ESP=Vuelo salida];
                                                   Description=FK Plan de vuelo }
    { 61  ;   ;Fecha llegada desde ;Date          ;CaptionML=[ENU=Arrival date from;
                                                              ESP=Fecha llegada desde];
                                                   Description=FK Plan de vuelo }
    { 63  ;   ;Fecha llegada hasta ;Date          ;CaptionML=[ENU=Arrival date to;
                                                              ESP=Fecha llegada hasta];
                                                   Description=FK Plan de vuelo }
    { 65  ;   ;Fecha salida desde  ;Date          ;CaptionML=[ENU=Departure date from;
                                                              ESP=Fecha salida desde];
                                                   Description=FK Plan de vuelo }
    { 67  ;   ;Fecha salida hasta  ;Date          ;CaptionML=[ENU=Departure date to;
                                                              ESP=Fecha salida hasta];
                                                   Description=FK Plan de vuelo }
    { 69  ;   ;Fecha Division      ;Date          ;OnValidate=BEGIN
                                                                IF (rRsv.GET(Delegacion, "N§ Reserva")) THEN BEGIN
                                                                  IF "Fecha Division" <= rRsv."Fecha entrada" THEN
                                                                    ERROR(Text004);
                                                                  IF "Fecha Division" >= rRsv."Fecha salida" THEN
                                                                    ERROR(Text005);
                                                                END;
                                                                "Fecha desde" := "Fecha Division";
                                                              END;

                                                   CaptionML=[ENU=Division date;
                                                              ESP=Fecha Division] }
    { 71  ;   ;N§ Habitaciones     ;Integer       ;CaptionML=[ENU=Rooms No.;
                                                              ESP=N§ Habitaciones] }
    { 73  ;   ;Precio Manual Venta ;Decimal       ;CaptionML=[ENU=Manual sale price;
                                                              ESP=Precio manual venta];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="C¢d. divisa" }
    { 75  ;   ;Precio Manual Compra;Decimal       ;CaptionML=[ENU=Manual purchase price;
                                                              ESP=Precio Manual Compra];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="C¢d. divisa" }
    { 77  ;   ;Tipo precio         ;Option        ;CaptionML=[ENU=Price type;
                                                              ESP=Tipo Precio];
                                                   OptionCaptionML=[ENU=,Per pax,Per room;
                                                                    ESP=,Por Pax,Por Habitacion];
                                                   OptionString=,Por Pax,Por Habitacion }
    { 79  ;   ;Calculo Unico       ;Boolean       ;CaptionML=[ENU=Unique calculation;
                                                              ESP=Calculo unico] }
    { 81  ;   ;Excursion           ;Code10        ;TableRelation="Producto agencia".Codigo WHERE (Tipo Producto=CONST(Excursion));
                                                   CaptionML=[ENU=Excursion;
                                                              ESP=Excursion];
                                                   Description=FK Producto Agencia }
    { 83  ;   ;Duracion            ;Option        ;CaptionML=[ENU=Length;
                                                              ESP=Duracion];
                                                   OptionCaptionML=[ENU=Whole day,Half day,Night,Long term;
                                                                    ESP=Dia Entero,Medio Dia,Nocturna,Larga Duracion];
                                                   OptionString=Dia Entero,Medio Dia,Nocturna,Larga Duracion }
    { 85  ;   ;Pax Maximos         ;Integer       ;CaptionML=[ENU=Pax Maximum;
                                                              ESP=Pax Maximos] }
    { 87  ;   ;Vehiculo exclusivo  ;Boolean       ;CaptionML=[ENU=Agency exclusive vehicle;
                                                              ESP=Vehiculo exclusivo agencia] }
    { 89  ;   ;Guia Venta          ;Code20        ;TableRelation="Representante excursiones".Codigo WHERE (Bloqueado=CONST(No));
                                                   CaptionML=[ENU=Sale guide;
                                                              ESP=Guia venta] }
    { 91  ;   ;Tipo TourOperador   ;Option        ;CaptionML=[ENU=TourOperator Type;
                                                              ESP=Tipo TourOperador];
                                                   OptionCaptionML=[ENU=Sale,Purchase;
                                                                    ESP=Venta,Compra];
                                                   OptionString=Venta,Compra }
    { 92  ;   ;Vuelo               ;Code10        ;CaptionML=[ENU=Flight;
                                                              ESP=Vuelo] }
    { 93  ;   ;Origen              ;Code10        ;TableRelation=Aeropuerto.Aeropuerto;
                                                   CaptionML=[ENU=Origin;
                                                              ESP=Origen];
                                                   Description=FK Aeropuerto }
    { 95  ;   ;Destino             ;Code10        ;TableRelation=Aeropuerto.Aeropuerto;
                                                   CaptionML=[ENU=Destination;
                                                              ESP=Destino];
                                                   Description=FK Aeropuerto }
    { 97  ;   ;Hora Salida         ;Time          ;CaptionML=[ENU=Departure time;
                                                              ESP=Hora salida] }
    { 99  ;   ;Hora Entrada        ;Time          ;CaptionML=[ENU=Arrival time;
                                                              ESP=Hora entrada] }
    { 101 ;   ;Frecuencia          ;Integer       ;CaptionML=[ENU=Frequency;
                                                              ESP=Frecuencia] }
    { 102 ;   ;Proveedor           ;Code20        ;TableRelation=Vendor.No.;
                                                   CaptionML=[ENU=Supplier;
                                                              ESP=Proveedor] }
    { 103 ;   ;Habitacion actual   ;Code10        ;CaptionML=[ENU=Current room;
                                                              ESP=Habitacion actual];
                                                   Description=FK Habitacion }
    { 104 ;   ;o_Minimos Guia Oficial;Boolean     ;CaptionML=[ENU=Official guide Minimums;
                                                              ESP=Minimos Guia Oficial];
                                                   Description=$004 }
    { 105 ;   ;o_Minimos Transportista;Boolean    ;CaptionML=[ENU=Carrier Minimums;
                                                              ESP=Minimos Transportista];
                                                   Description=$004 }
    { 106 ;   ;N§ Factura          ;Code20        ;CaptionML=[ENU=Invoice No.;
                                                              ESP=N§ Factura] }
    { 107 ;   ;N§ Prefactura       ;Code10        ;CaptionML=[ENU=Pro-forma invoice No.;
                                                              ESP=N§ Prefactura] }
    { 108 ;   ;Texto               ;Text80        ;CaptionML=[ENU=Text;
                                                              ESP=Texto] }
    { 109 ;   ;Cambiar Hotel Origen Precios;Boolean;
                                                   InitValue=Yes;
                                                   OnValidate=BEGIN
                                                                IF Hotel <> '' THEN
                                                                  VALIDATE(Hotel);
                                                              END;

                                                   CaptionML=[ENU=Change Origin prices hotel;
                                                              ESP=Cambiar Hotel Origen Precios] }
    { 110 ;   ;Cargo               ;Code10        ;TableRelation="Codigo cargo".Codigo;
                                                   CaptionML=[ENU=Charge;
                                                              ESP=Cargo];
                                                   Description=FK Cargo }
    { 111 ;   ;Hotel a cargar      ;Code20        ;TableRelation=Hotel.Hotel WHERE (NoName=CONST(No));
                                                   CaptionML=[ENU=Hotel to charge;
                                                              ESP=Hotel a cargar];
                                                   Description=FK Hotel }
    { 113 ;   ;Circuito            ;Code10        ;TableRelation="Maestro circuitos".Circuito;
                                                   CaptionML=[ENU=Circuit;
                                                              ESP=Circuito];
                                                   Description=FK Maestro Circuito }
    { 114 ;   ;Orden               ;Integer       ;CaptionML=[ENU=Order;
                                                              ESP=Orden] }
    { 115 ;   ;C¢d. divisa         ;Code10        ;TableRelation=Currency;
                                                   CaptionML=[ENU=Currency exchange;
                                                              ESP=C¢d. divisa];
                                                   Description=FK Divisa }
    { 117 ;   ;Efectivo devuelto   ;Decimal       ;CaptionML=[ENU=Returned Cash;
                                                              ESP=Efectivo devuelto];
                                                   Description=Circuitos;
                                                   AutoFormatType=1 }
    { 119 ;   ;Regimen actual      ;Code10        ;CaptionML=[ENU=Current Board;
                                                              ESP=Regimen actual] }
    { 121 ;   ;Cliente             ;Code20        ;TableRelation=Customer;
                                                   CaptionML=[ENU=Client;
                                                              ESP=Cliente];
                                                   Description=FK Cliente }
    { 123 ;   ;Importe Reembolso   ;Decimal       ;OnValidate=BEGIN
                                                                "Importe Reembolso comisionable" := "Importe Reembolso";
                                                              END;

                                                   CaptionML=[ENU=Refund Amount;
                                                              ESP=Importe Reembolso];
                                                   AutoFormatType=1 }
    { 125 ;   ;Importe Reembolso comisionable;Decimal;
                                                   CaptionML=[ENU=Refund Amount Commissionable;
                                                              ESP=Importe Reembolso comisionable];
                                                   AutoFormatType=1 }
    { 130 ;   ;Adultos Reembolso   ;Decimal       ;OnValidate=BEGIN
                                                                rResEx.RESET;
                                                                IF rResEx.GET(Delegacion,"N§ Reserva") THEN BEGIN
                                                                  IF "Adultos Reembolso" > (rResEx.Adultos - rResEx."Adultos Reembolsados") THEN
                                                                    ERROR(Text056);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Adults Refund;
                                                              ESP=Adultos Reembolso] }
    { 132 ;   ;Ni¤os Reembolso     ;Decimal       ;OnValidate=BEGIN
                                                                rResEx.RESET;
                                                                IF rResEx.GET(Delegacion,"N§ Reserva") THEN BEGIN
                                                                  IF "Ni¤os Reembolso" > (rResEx.Ni¤os - rResEx."Ni¤os Reembolsados") THEN
                                                                    ERROR(Text056);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Childs Refund;
                                                              ESP=Ni¤os Reembolso] }
    { 134 ;   ;Vehiculos Reembolso ;Decimal       ;OnValidate=BEGIN
                                                                rResEx.RESET;
                                                                IF rResEx.GET(Delegacion,"N§ Reserva") THEN BEGIN
                                                                  IF "Vehiculos Reembolso" > (rResEx."Num. Vehiculos" - rResEx."Vehiculos Reembolsados") THEN
                                                                    ERROR(Text056);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Vehicles Refund;
                                                              ESP=Vehiculos Reembolso] }
    { 136 ;   ;Adultos Reserva     ;Decimal       ;CaptionML=[ENU=Adults reservation;
                                                              ESP=Adultos Reserva];
                                                   Editable=No }
    { 138 ;   ;Ni¤os Reserva       ;Decimal       ;CaptionML=[ENU=Childs reservation;
                                                              ESP=Ni¤os Reserva];
                                                   Editable=No }
    { 140 ;   ;Vehiculos Reserva   ;Decimal       ;CaptionML=[ENU=Vehicles reservation;
                                                              ESP=Vehiculos Reserva];
                                                   Editable=No }
    { 7009700;;Cod. Grupo NCF      ;Code10        ;TableRelation="Grupo configuracion NCF".Codigo WHERE (Tipo grupo=CONST(Compras));
                                                   OnValidate=VAR
                                                                lrGrupNCF@1100253000 : Record 7009831;
                                                                lrVend@1100253001 : Record 23;
                                                              BEGIN

                                                                IF ("Cod. Grupo NCF" <> xRec."Cod. Grupo NCF") AND ("Cod. Grupo NCF" <> '') THEN BEGIN
                                                                  lrVend.GET(Proveedor);
                                                                  //IF lrVend."Digitos fijos NCF" <> '' THEN BEGIN
                                                                  //"Comprobante Fiscal" := lrVend."Digitos fijos NCF";
                                                                  //END
                                                                  //ELSE BEGIN
                                                                  IF lrVend."Digitos fijos NCF" = '' THEN BEGIN
                                                                    CLEAR(lrGrupNCF);
                                                                    lrGrupNCF.SETRANGE ("Tipo grupo", lrGrupNCF."Tipo grupo"::Compras);
                                                                    lrGrupNCF.SETRANGE (Codigo      , "Cod. Grupo NCF");
                                                                    IF lrGrupNCF.FINDFIRST THEN BEGIN
                                                                      lrGrupNCF.TESTFIELD("Serie NCF Facturas");
                                                                      "Comprobante Fiscal" := cNoSeries.GetNextNo(lrGrupNCF."Serie NCF Facturas", Fecha, FALSE);
                                                                    END;
                                                                  END;
                                                                END;

                                                                //IF "Cod. Grupo NCF" = '' THEN
                                                                //  "Comprobante Fiscal" := '';
                                                              END;

                                                   CaptionML=[ENU=NCF Group Code;
                                                              ESP=Cod. Grupo NCF];
                                                   Description="Grupo configuracion NCF".Codigo WHERE (Tipo grupo=CONST(Compras)) }
    { 7009703;;Comprobante Fiscal  ;Code20        ;OnValidate=VAR
                                                                lrGLSetup@1100253000 : Record 98;
                                                                lrVend@1100253001 : Record 23;
                                                              BEGIN

                                                                lrGLSetup.FINDFIRST;
                                                                IF lrGLSetup."Aplica legislacion NCF" THEN BEGIN
                                                                  lrVend.GET(Proveedor);
                                                                  IF lrVend."Digitos fijos NCF" = '' THEN
                                                                    ERROR(Text053);

                                                                  IF STRLEN("Comprobante Fiscal") <> lrGLSetup."Digitos NCF" THEN
                                                                    ERROR(Text055);
                                                                END
                                                                ELSE
                                                                  ERROR(Text054);
                                                              END;

                                                   CaptionML=[ENU=Fiscal receipt;
                                                              ESP=Comprobante fiscal] }
    { 7009704;;Importe a validar   ;Decimal       ;CaptionML=[ENU=Amount to validate;
                                                              ESP=Importe a validar] }
    { 7009706;;Turno Excursion     ;Integer       ;TableRelation="Calendario excursion".Turno WHERE (Excursion=FIELD(Excursion));
                                                   OnValidate=VAR
                                                                rCalendario@1000000000 : Record 7010254;
                                                              BEGIN
                                                                IF "Turno Excursion" <> xRec."Turno Excursion" THEN
                                                                BEGIN
                                                                  // Comprobamos que el turno seleccionado sea correcto
                                                                  IF (Excursion = '') OR (Fecha = 0D) THEN
                                                                    ERROR(Text049);

                                                                  IF "Turno Excursion" = 0 THEN
                                                                  BEGIN
                                                                    rCalendario.RESET;
                                                                    rCalendario.SETRANGE(Excursion      , Excursion);
                                                                    rCalendario.SETFILTER("Fecha inicio", '<=%1', Fecha);
                                                                    rCalendario.SETFILTER("Fecha final" , '>=%1', Fecha);
                                                                    CASE DATE2DWY(Fecha, 1) OF
                                                                      1: rCalendario.SETRANGE(Lunes    , TRUE);
                                                                      2: rCalendario.SETRANGE(Martes   , TRUE);
                                                                      3: rCalendario.SETRANGE(Miercoles, TRUE);
                                                                      4: rCalendario.SETRANGE(Jueves   , TRUE);
                                                                      5: rCalendario.SETRANGE(Viernes  , TRUE);
                                                                      6: rCalendario.SETRANGE(Sabado   , TRUE);
                                                                      7: rCalendario.SETRANGE(Domingo  , TRUE);
                                                                    END;
                                                                    IF rCalendario.FINDFIRST THEN
                                                                      ERROR(Text051);
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Excursion turn;
                                                              ESP=Turno excursion];
                                                   Description=$079 }
  }
  KEYS
  {
    {    ;Usuario                                 ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1103355007 : TextConst 'ENU=Hotel %1 does not exist;ESP=No existe el hotel %1';
      Text001@1103355008 : TextConst 'ENU=Booking %1 of local office %2 does not exist;ESP=No existe la reserva %1 de la delegacion %2.';
      Text002@1103355009 : TextConst 'ENU=Unable to indicate a code of offer hotel;ESP=No se puede indicar un codigo de hotel oferta.';
      Text003@1103355010 : TextConst 'ENU=Date to must be higher than date from.;ESP=La fecha hasta debe ser posterior a la fecha desde.';
      Text004@1103355011 : TextConst 'ENU=Division date must be higher than the check-in date of the booking;ESP=La fecha divisi¢n debe ser mayor que la fecha de entrada de la reserva';
      Text005@1103355012 : TextConst 'ENU=Division date must be lower than the check-out date of the booking;ESP=La fecha divisi¢n debe ser menor que la fecha de salida de la reserva';
      rRsv@1103355000 : Record 7009743;
      rConC@1103355001 : Record 7009723;
      rConHab@1103355003 : Record 7009731;
      rPer@1103355005 : Record 7009742;
      rCab@1103355006 : Record 7009741;
      rResEx@1000000000 : Record 7010162;
      cCon@1103355004 : Codeunit 7009701;
      cNoSeries@1100253000 : Codeunit 396;
      Text053@1100253003 : TextConst 'ENU=This supplier does not have an own numbering of Tax Certificate;ESP=Este proveedor no tiene una numeracion propia de Comprobantes fiscales, el numero se asigna automaticamente.';
      Text054@1100253002 : TextConst 'ENU=In this company the legislation on Numberings of Tax Certificate is not applied;ESP=En esta empresa no se aplica la legislacion de Numeradores de Comprobante fiscal';
      Text055@1100253001 : TextConst 'ENU=The length of the certificate number does not coincide with the established in accounting configuration;ESP=La longitud del numero de comprobante no coincide con la establecida en configuracion de contabilidad.';
      Text056@1000000001 : TextConst 'ENU=The indicated amount is bigger than the amount of the reserve.;ESP=La cantidad indicada es superior a la cantidad de la reserva.';
      Text049@1000000004 : TextConst 'ENU=You must select previously Excursion and Excursion date.;ESP=Debe seleccionar previamente Excursi¢n y Fecha excursi¢n.';
      Text050@1000000003 : TextConst 'ENU=The turn selected is not active for the date.;ESP=El turno seleccionado no est  activo para la fecha.';
      Text051@1000000002 : TextConst 'ENU=You must select a turn.;ESP=Debe seleccionar un turno.';

    PROCEDURE hotel_actual@1() : Code[20];
    BEGIN
      IF rRsv.GET(Delegacion, "N§ Reserva") THEN
        EXIT(rRsv."Hotel booking")
      ELSE
        EXIT('');
    END;

    PROCEDURE habitacion_actual@2() : Code[10];
    BEGIN
      IF rRsv.GET(Delegacion, "N§ Reserva") THEN
        EXIT(rRsv.Habitacion)
      ELSE
        EXIT('');
    END;

    PROCEDURE regimen_actual@3() : Code[10];
    BEGIN
      IF rRsv.GET(Delegacion, "N§ Reserva") THEN
        EXIT(rRsv.Regimen)
      ELSE
        EXIT('');
    END;

    PROCEDURE bono_actual@4() : Code[10];
    BEGIN
      IF rRsv.GET(Delegacion, "N§ Reserva") THEN
        EXIT(rRsv.Bono)
      ELSE
        EXIT('');
    END;

    PROCEDURE nombre_actual@5() : Text[50];
    BEGIN
      IF rRsv.GET(Delegacion, "N§ Reserva") THEN
        EXIT(rRsv.Nombre)
      ELSE
        EXIT('');
    END;

    PROCEDURE habitaciones_actual@6() : Integer;
    BEGIN
      IF rRsv.GET(Delegacion, "N§ Reserva") THEN
        EXIT(rRsv."N§ Habitaciones")
      ELSE
        EXIT(0);
    END;

    PROCEDURE InicializaRegistro@1000000000();
    VAR
      lrCond@1000000000 : Record 7010085;
    BEGIN
      // InicializaRegistro

      lrCond.RESET;
      IF NOT lrCond.GET(USERID) THEN
      BEGIN
        lrCond.INIT;
        lrCond.Usuario := USERID;
        lrCond.INSERT;
      END
      ELSE
      BEGIN
        lrCond.INIT;
        lrCond.MODIFY;
      END;
    END;

    PROCEDURE PedirFechas@1000000001();
    VAR
      lfSeleccion@1000000000 : Form 7009974;
      lrCond@1000000001 : Record 7010085;
    BEGIN
      // PedirFechas

      InicializaRegistro;

      lrCond.GET(USERID);
      lrCond.SETRECFILTER;

      CLEAR(lfSeleccion);
      lfSeleccion.SETTABLEVIEW(lrCond);
    END;

    BEGIN
    {
      ## AJF 29/06/09

        .- (09/00319) cambio c¢digos de hotel de code10 a code20.

      $001 AJF 09032011 Se a¤ade el campo "Cod. Grupo NCF" y "Comprobante fiscal" para las opciones de la validaci¢n de costes de
                        excursiones y transfer.

      $002 AJS 20012013 Modifico el campo Guia Venta para que apunte a Representantes

      $003 AJS 30012014 Amplio el campo Representante a 20 caracteres para igualar con la tabla origen

      $004 AJS 11052014 Marco campos de minimos como obsoletos

      $005 AJS 21102014 Traducciones

      $006 AJS 28102014 Amplio el retorno de la funcion nombre_actual a Text50

      $007 AJS 11122014 Traduccion

      $008 AJS 17032015 CNT-CAR-14096, Nueva funcion InicializaRegistro

      $009 AJS 04052015 Elimino TableRelation del campo Usuario para evitar problemas con Windows Login

      $010 AJS 04052015 Nueva funcion PedirFechas para que los procesos que necesiten un fecha desde y hasta ya no lo necesiten
    }
    END.
  }
}
