OBJECT Table 7010404 Zona contrato
{
  OBJECT-PROPERTIES
  {
    Date=16/10/09;
    Time=12:30:45;
    Version List=TRANSFER;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               // Comprobar por codigo de origen

               rZon.RESET;
               rZon.SETRANGE(Garaje         , Garaje);
               rZon.SETRANGE("N§ Contrato"  , "N§ Contrato");
               rZon.SETRANGE("Tipo contrato", "Tipo contrato");

               // AJS 25.06.2008, TNU08002
               // Incluimos el Tipo servicio fijo en la comprobacion,
               // Sustituyo FIND('-') por NOT ISEMPTY

               rZon.SETRANGE("Tipo Servicio fijo", "Tipo Servicio fijo");

               rZon.SETRANGE("Codigo Origen", "Codigo Origen");
               IF NOT rZon.ISEMPTY THEN
                 ERROR(err1);

               Sincroniza(FALSE);
             END;

    OnModify=BEGIN
               Sincroniza(FALSE);
             END;

    OnDelete=BEGIN
               Sincroniza(TRUE);
             END;

    OnRename=BEGIN
               CLEAR(rZon);
               rZon := xRec;
               rZon.Sincroniza(TRUE);
               Sincroniza(FALSE);
             END;

    CaptionML=ESP=Zona contrato;
    LookupFormID=Form7010419;
    DrillDownFormID=Form7010419;
  }
  FIELDS
  {
    { 1   ;   ;Garaje              ;Code10        ;TableRelation=Garaje;
                                                   CaptionML=ESP=Garaje;
                                                   SQL Data Type=Varchar;
                                                   Description=PK, FK Garaje }
    { 3   ;   ;N§ Contrato         ;Code10        ;CaptionML=ESP=N§ Contrato;
                                                   Description=PK;
                                                   Editable=No }
    { 5   ;   ;Tipo contrato       ;Option        ;CaptionML=ESP=Tipo contrato;
                                                   OptionCaptionML=ESP=Compra,Venta;
                                                   OptionString=Compra,Venta;
                                                   Description=PK }
    { 7   ;   ;Zona Precio         ;Code10        ;OnValidate=BEGIN

                                                                // AJS 23.06.2008, TNU08002
                                                                // Cuando se rellena la zona precio el sistema buscar  si hay otras lineas de zona precio
                                                                // que ya tengan zona facturacion y la utilizar n como valor por defecto

                                                                rZon.RESET;
                                                                rZon.SETRANGE (Garaje            , Garaje);
                                                                rZon.SETRANGE ("N§ Contrato"     , "N§ Contrato");
                                                                rZon.SETRANGE ("Tipo contrato"   , "Tipo contrato");

                                                                // AJS 25.06.2008, TNU08002
                                                                // Incluimos el Tipo servicio fijo en la comprobacion,

                                                                rZon.SETRANGE("Tipo Servicio fijo", "Tipo Servicio fijo");

                                                                rZon.SETRANGE ("Zona Precio"     , "Zona Precio");
                                                                rZon.SETFILTER("Codigo Origen"   , '<>%1', "Codigo Origen");
                                                                rZon.SETFILTER("Zona facturacion", '<>%1', '');
                                                                IF rZon.FINDFIRST THEN BEGIN
                                                                  "Zona facturacion"             := rZon."Zona facturacion";
                                                                  "Descripcion Zona facturacion" := rZon."Descripcion Zona facturacion";
                                                                END;
                                                              END;

                                                   CaptionML=ESP=Zona Precio;
                                                   NotBlank=Yes;
                                                   Description=PK }
    { 9   ;   ;Codigo Origen       ;Code10        ;TableRelation=IF (Base para zonas precio=CONST(Zona fisica)) "Zona fisica transfer".Codigo
                                                                 ELSE IF (Base para zonas precio=CONST(Hotel)) "Punto de recogida".Codigo;
                                                   OnValidate=BEGIN
                                                                // AJS 23.06.2008, TNU08002
                                                                // Hay que rellenar la zona facturacion con la zona de trabajo por defecto para que luego el
                                                                // usuario pueda configurarla a su gusto

                                                                IF "Tipo contrato" = "Tipo contrato"::Venta THEN BEGIN
                                                                  CASE "Base para zonas precio" OF
                                                                    "Base para zonas precio"::"Zona fisica" :
                                                                    BEGIN
                                                                      IF "Zona facturacion" = '' THEN
                                                                        "Zona facturacion" := rZonaFis.GetZonaTrabajo("Codigo Origen", '', '');
                                                                    END;

                                                                    "Base para zonas precio"::Hotel:
                                                                    BEGIN
                                                                      IF "Zona facturacion" = '' THEN BEGIN
                                                                        rHot.GET("Codigo Origen");
                                                                        "Zona facturacion" := rZonaFis.GetZonaTrabajo(rHot."Zona fisica", '', '');
                                                                      END;
                                                                    END;
                                                                  END;

                                                                  IF rZonaTrab.GET("Zona facturacion") THEN
                                                                    "Descripcion Zona facturacion" := rZonaTrab.Descripcion;
                                                                END;
                                                              END;

                                                   CaptionML=ESP=Codigo Origen;
                                                   NotBlank=Yes;
                                                   Description=IF (Base para zonas precio=CONST(Zona fisica)) "Zona fisica".Codigo ELSE IF (Base para zonas precio=CONST(Hotel)) "Punto de recogida".Codigo }
    { 11  ;   ;Orden               ;Integer       ;CaptionML=ESP=Orden }
    { 13  ;   ;Base para zonas precio;Option      ;CaptionML=ESP=Base para zonas precio;
                                                   OptionCaptionML=ESP=Zona fisica,Hotel;
                                                   OptionString=Zona fisica,Hotel;
                                                   Description=Indicar sobre que tabla se basar  la conversion de zonas precios : Zona fisica,Hotel }
    { 15  ;   ;Zona facturacion    ;Code10        ;OnValidate=BEGIN
                                                                IF "Zona facturacion" <> xRec."Zona facturacion" THEN BEGIN
                                                                  // AJS 23.06.2008, TNU08002
                                                                  // Comprobamos que todas las lineas de la misma zona precio tengan asignada
                                                                  // la misma zona de facturacion

                                                                  rZon.RESET;
                                                                  rZon.SETRANGE (Garaje            , Garaje);
                                                                  rZon.SETRANGE ("N§ Contrato"     , "N§ Contrato");
                                                                  rZon.SETRANGE ("Tipo contrato"   , "Tipo contrato");

                                                                  // AJS 25.06.2008, TNU08002
                                                                  // Incluimos el Tipo servicio fijo en la comprobacion,

                                                                  rZon.SETRANGE("Tipo Servicio fijo", "Tipo Servicio fijo");

                                                                  rZon.SETRANGE ("Zona Precio"     , "Zona Precio");
                                                                  rZon.SETFILTER("Codigo Origen"   , '<>%1', "Codigo Origen");
                                                                  rZon.SETFILTER("Zona facturacion", '<>%1', "Zona facturacion");
                                                                  IF rZon.FINDSET(TRUE, TRUE) THEN BEGIN
                                                                    // AJS 25.06.2008
                                                                    // Vamos a dar la opcion al usuario de actualizar la zona facturacion en todos los registros de
                                                                    // la zona de precio

                                                                    IF NOT CONFIRM(Text002, FALSE, "Zona Precio", rZon."Zona facturacion", "Zona facturacion") THEN
                                                                      ERROR(Text001, "Zona Precio", rZon."Zona facturacion");

                                                                    rZon.MODIFYALL("Zona facturacion"            , "Zona facturacion");
                                                                    rZon.MODIFYALL("Descripcion Zona facturacion", "Descripcion Zona facturacion");
                                                                  END;

                                                                END;
                                                              END;

                                                   CaptionML=ESP=Zona facturacion;
                                                   NotBlank=Yes;
                                                   Description=Posiblidad de definir las zonas de facturacion por Touroperador y Temporada }
    { 16  ;   ;Descripcion Zona facturacion;Text30;OnValidate=BEGIN
                                                                // AJS 30.06.2008
                                                                // Cambiamos la descripcion a todas las lineas de la zona de facturacion

                                                                IF "Descripcion Zona facturacion" <> xRec."Descripcion Zona facturacion" THEN BEGIN
                                                                  rZon.RESET;
                                                                  rZon.SETRANGE (Garaje              , Garaje);
                                                                  rZon.SETRANGE ("N§ Contrato"       , "N§ Contrato");
                                                                  rZon.SETRANGE ("Tipo contrato"     , "Tipo contrato");
                                                                  rZon.SETRANGE ("Tipo Servicio fijo", "Tipo Servicio fijo");
                                                                  rZon.SETRANGE ("Zona facturacion"  , "Zona facturacion");
                                                                  rZon.SETFILTER("Codigo Origen"     , '<>%1', "Codigo Origen");
                                                                  IF rZon.FINDSET(TRUE) THEN BEGIN
                                                                    rZon.MODIFYALL("Descripcion Zona facturacion", "Descripcion Zona facturacion");
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ESP=Descripcion Zona facturacion }
    { 17  ;   ;Tipo Servicio fijo  ;Option        ;CaptionML=ESP=Tipo Servicio fijo;
                                                   OptionCaptionML=ESP=Excursion,Traslado;
                                                   OptionString=Excursion,Traslado }
  }
  KEYS
  {
    {    ;Garaje,N§ Contrato,Tipo contrato,Tipo Servicio fijo,Zona Precio,Codigo Origen;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      rZon@1100244000 : Record 7010404;
      err1@1100244001 : TextConst 'ESP=No se puede indicar que una zona fisica este en dos zonas de compra';
      rZonaFis@1103355000 : Record 7010314;
      rZonaTrab@1103355004 : Record 7010429;
      rHot@1103355001 : Record 7010315;
      Text001@1103355002 : TextConst 'ESP=Existen registros de la zona de precio %1 asignados a la zona de facturacion %2, todos los registros de una zona de precio deben asignarse a la misma zona de facturacion';
      Text002@1103355003 : TextConst 'ESP=Existen registros de la zona de precio %1 asignados a la zona de facturacion %2, desea que se reasignen a la zona de facturacion %3';

    PROCEDURE nom_codigoorigen@1() : Text[50];
    VAR
      lrZon@1100244000 : Record 7010314;
      lrHot@1103355000 : Record 7010315;
    BEGIN
      // nom_codigoorigen

      // AJS 11.06.2008
      // Cambiado el nombre a nomb_codigoorigen, retornar  el nombre de la zona fisica o del
      // hotel en funcion del campo base para zonas precio

      IF "Base para zonas precio" = "Base para zonas precio"::"Zona fisica" THEN BEGIN
        IF lrZon.GET("Codigo Origen") THEN
          EXIT(lrZon.Descripcion);
      END
      ELSE BEGIN
        IF lrHot.GET("Codigo Origen") THEN
          EXIT(lrHot.Descripci¢n);
      END;
    END;

    PROCEDURE Sincroniza@1100253000(pwBorra@1100253001 : Boolean);
    VAR
      lrSinCon@1100253000 : Record 7035388;
    BEGIN
      // Sincroniza

      IF "Tipo contrato" = "Tipo contrato"::Compra THEN
        EXIT;

      CLEAR(lrSinCon);
      lrSinCon.CompruebaSinc(Garaje,"N§ Contrato");
      lrSinCon.SETRANGE("N§ Contrato","N§ Contrato");
      IF lrSinCon.FINDSET THEN BEGIN
        REPEAT
          lrSinCon.SincronizaZona(Rec, pwBorra);
        UNTIL lrSinCon.NEXT=0;
      END;
    END;

    BEGIN
    {
      ## AJS 11.06.2008
         1. He incluido el campo "Base para zonas precio" para los contratos de Taxis Palma

         2. He cambiado el nombre del campo Zona fisica por Codigo origen

         3. He cambiado la TableRelation de Zona fisica para que apunte a zona fisica u hotel
            en funcion del nuevo campo.

      ## AJS 20.06.2008, TNU08002

        - He incluido el campo "Zona facturacion" para poder definir zonas de facturacion por TTOO
        - He incluido el campo "Descripcion zona facturacion" para las facturas por zona trabajo

      ## AJS 25.06.2008, TNU08002

        - He incluido el campo "Tipo Servicio fijo" para poder definir zonas de precio por tipo
          de servicio y asi poder definir zonas de facturacion por tipo de servicio
        - He incluido el campo "Tipo Servicio fijo" en la clave primaria
    }
    END.
  }
}
