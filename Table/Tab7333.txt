OBJECT Table 7333 Whse. Internal Pick Header
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=NAVW16.00.01;
  }
  PROPERTIES
  {
    DataCaptionFields=No.;
    OnInsert=BEGIN
               WhseSetup.GET;
               IF "No." = '' THEN BEGIN
                 WhseSetup.TESTFIELD("Whse. Internal Pick Nos.");
                 NoSeriesMgt.InitSeries(
                   WhseSetup."Whse. Internal Pick Nos.",xRec."No. Series",0D,"No.","No. Series");
               END;
             END;

    OnDelete=BEGIN
               TESTFIELD(Status,Status::Open);
               DeleteRelatedLines;
             END;

    OnRename=BEGIN
               ERROR(Text000,TABLECAPTION);
             END;

    CaptionML=[ENU=Whse. Internal Pick Header;
               ESP=Cab. picking interno alm.];
    LookupFormID=Form7359;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;OnValidate=BEGIN
                                                                TESTFIELD(Status,Status::Open);
                                                                WhseSetup.GET;
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  NoSeriesMgt.TestManual(WhseSetup."Whse. Internal Pick Nos.");
                                                                  "No. Series" := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              ESP=N§] }
    { 2   ;   ;Location Code       ;Code10        ;TableRelation=Location WHERE (Use As In-Transit=CONST(No));
                                                   OnValidate=VAR
                                                                WhseInternalPickLine@1002 : Record 7334;
                                                              BEGIN
                                                                IF NOT WmsManagement.LocationIsAllowed("Location Code") THEN
                                                                  ERROR(Text003,FIELDCAPTION("Location Code"),"Location Code");

                                                                CheckPickRequired("Location Code");
                                                                IF "Location Code" <> xRec."Location Code" THEN BEGIN
                                                                  "To Zone Code" := '';
                                                                  "To Bin Code" := '';
                                                                  WhseInternalPickLine.SETRANGE("No.","No.");
                                                                  IF WhseInternalPickLine.FIND('-') THEN
                                                                    ERROR(
                                                                      Text001,
                                                                      FIELDCAPTION("Location Code"));
                                                                END;
                                                                IF USERID <> '' THEN BEGIN
                                                                  FILTERGROUP := 2;
                                                                  SETRANGE("Location Code","Location Code");
                                                                  FILTERGROUP := 0;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Location Code;
                                                              ESP=C¢d. almac‚n] }
    { 3   ;   ;Assigned User ID    ;Code20        ;TableRelation="Warehouse Employee" WHERE (Location Code=FIELD(Location Code));
                                                   OnValidate=BEGIN
                                                                IF "Assigned User ID" <> '' THEN BEGIN
                                                                  "Assignment Date" := TODAY;
                                                                  "Assignment Time" := TIME;
                                                                END ELSE BEGIN
                                                                  "Assignment Date" := 0D;
                                                                  "Assignment Time" := 0T;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Assigned User ID;
                                                              ESP=Id. usuario asignado] }
    { 4   ;   ;Assignment Date     ;Date          ;CaptionML=[ENU=Assignment Date;
                                                              ESP=Fecha asignaci¢n];
                                                   Editable=No }
    { 5   ;   ;Assignment Time     ;Time          ;CaptionML=[ENU=Assignment Time;
                                                              ESP=Hora asignaci¢n];
                                                   Editable=No }
    { 6   ;   ;Sorting Method      ;Option        ;OnValidate=BEGIN
                                                                IF "Sorting Method" <> xRec."Sorting Method" THEN
                                                                  SortWhseDoc;
                                                              END;

                                                   CaptionML=[ENU=Sorting Method;
                                                              ESP=M‚todo ordenaci¢n];
                                                   OptionCaptionML=[ENU=" ,Item,Shelf or Bin,Due Date";
                                                                    ESP=" ,Prod.,Estant. o ubic.,Fecha vto."];
                                                   OptionString=[ ,Item,Shelf or Bin,Due Date] }
    { 7   ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              ESP=Nos. serie] }
    { 11  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Warehouse Comment Line" WHERE (Table Name=CONST(Internal Pick),
                                                                                                     Type=CONST(" "),
                                                                                                     No.=FIELD(No.)));
                                                   CaptionML=[ENU=Comment;
                                                              ESP=Comentario];
                                                   Editable=No }
    { 12  ;   ;To Bin Code         ;Code20        ;TableRelation=IF (To Zone Code=FILTER('')) Bin.Code WHERE (Location Code=FIELD(Location Code))
                                                                 ELSE IF (To Zone Code=FILTER(<>'')) Bin.Code WHERE (Location Code=FIELD(Location Code),
                                                                                                                     Zone Code=FIELD(To Zone Code));
                                                   OnValidate=VAR
                                                                Bin@1000 : Record 7354;
                                                              BEGIN
                                                                IF xRec."To Bin Code" <> "To Bin Code" THEN BEGIN
                                                                  TESTFIELD(Status,Status::Open);
                                                                  IF "To Bin Code" <> '' THEN BEGIN
                                                                    GetLocation("Location Code");
                                                                    Location.TESTFIELD("Bin Mandatory");
                                                                    IF "To Bin Code" = Location."Adjustment Bin Code" THEN
                                                                      FIELDERROR(
                                                                        "To Bin Code",
                                                                          STRSUBSTNO(
                                                                            Text005,Location.FIELDCAPTION("Adjustment Bin Code"),
                                                                            Location.TABLECAPTION));
                                                                     Bin.GET("Location Code","To Bin Code");
                                                                     "To Zone Code" := Bin."Zone Code";
                                                                  END;
                                                                  MessageIfIntPickLinesExist(FIELDCAPTION("To Bin Code"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=To Bin Code;
                                                              ESP=Hasta c¢d. ubicaci¢n] }
    { 13  ;   ;To Zone Code        ;Code10        ;TableRelation=Zone.Code WHERE (Location Code=FIELD(Location Code));
                                                   OnValidate=BEGIN
                                                                IF "To Zone Code" <> xRec."To Zone Code" THEN BEGIN
                                                                  TESTFIELD(Status,Status::Open);
                                                                  GetLocation("Location Code");
                                                                  Location.TESTFIELD("Directed Put-away and Pick");
                                                                  "To Bin Code" := '';
                                                                  MessageIfIntPickLinesExist(FIELDCAPTION("To Zone Code"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=To Zone Code;
                                                              ESP=Hasta c¢d. zona] }
    { 34  ;   ;Document Status     ;Option        ;OnValidate=VAR
                                                                WhsePickRqst@1000 : Record 7325;
                                                              BEGIN
                                                                IF "Document Status" <> xRec."Document Status" THEN BEGIN
                                                                  WhsePickRqst.SETRANGE("Document Type",WhsePickRqst."Document Type"::"Internal Pick");
                                                                  WhsePickRqst.SETRANGE("Document No.","No.");
                                                                  WhsePickRqst.MODIFYALL(
                                                                    "Completely Picked","Document Status" = "Document Status"::"Completely Picked");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Document Status;
                                                              ESP=Estado documento];
                                                   OptionCaptionML=[ENU=" ,Partially Picked,Completely Picked";
                                                                    ESP=" ,Picking parcial,Picking completo"];
                                                   OptionString=[ ,Partially Picked,Completely Picked];
                                                   Editable=No }
    { 36  ;   ;Due Date            ;Date          ;OnValidate=BEGIN
                                                                MessageIfIntPickLinesExist(FIELDCAPTION("Due Date"));
                                                              END;

                                                   CaptionML=[ENU=Due Date;
                                                              ESP=Fecha vencimiento] }
    { 47  ;   ;Status              ;Option        ;CaptionML=[ENU=Status;
                                                              ESP=Estado];
                                                   OptionCaptionML=[ENU=Open,Released;
                                                                    ESP=Abierto,Lanzado];
                                                   OptionString=Open,Released;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Location@1002 : Record 14;
      WhseSetup@1003 : Record 5769;
      NoSeriesMgt@1001 : Codeunit 396;
      Text000@1011 : TextConst 'ENU=You cannot rename a %1.;ESP=No se puede cambiar el nombre a %1.';
      Text001@1010 : TextConst 'ENU=You cannot change the %1, because the document has one or more lines.;ESP=No puede cambiar el %1, porque el documento tiene una o m s l¡neas.';
      Text002@1000 : TextConst 'ENU=You must first set up user %1 as a warehouse employee.;ESP=Primero debe configurar usuario %1 como empleado almac‚n.';
      WmsManagement@1004 : Codeunit 7302;
      Text003@1005 : TextConst 'ENU=You are not allowed to use %1 %2.;ESP=No le est  permitido utilizar %1 %2.';
      ItemTrackingMgt@1006 : Codeunit 6500;
      HideValidationDialog@1007 : Boolean;
      Text005@1008 : TextConst 'ENU=must not be the %1 of the %2;ESP=no debe ser el %1 del %2';
      Text006@1012 : TextConst 'ENU=You have changed %1 on the %2, but it has not been changed on the existing Warehouse Internal Pick Lines.\;ESP=Ha modificado %1 en la %2, pero no ha sido modificado en las l¡ns. pick. interno alm. actuales.\';
      Text007@1009 : TextConst 'ENU=You must update the existing Warehouse Internal Pick Lines manually.;ESP=Debe actualizar las l¡ns. pick. interno alm. actuales manualmente.';

    PROCEDURE AssistEdit@8(OldWhseInternalPickHeader@1000 : Record 7333) : Boolean;
    VAR
      WhseInternalPickHeader@1001 : Record 7333;
    BEGIN
      WhseSetup.GET;
      WITH WhseInternalPickHeader DO BEGIN
        WhseInternalPickHeader := Rec;
        WhseSetup.TESTFIELD("Whse. Internal Pick Nos.");
        IF NoSeriesMgt.SelectSeries(
          WhseSetup."Whse. Internal Pick Nos.",OldWhseInternalPickHeader."No. Series","No. Series")
        THEN BEGIN
          NoSeriesMgt.SetSeries("No.");
          Rec := WhseInternalPickHeader;
          EXIT(TRUE);
        END;
      END;
    END;

    PROCEDURE SortWhseDoc@3();
    VAR
      WhseInternalPickLine@1001 : Record 7334;
      SequenceNo@1000 : Integer;
    BEGIN
      WITH WhseInternalPickLine DO BEGIN
        SETRANGE("No.",Rec."No.");
        CASE "Sorting Method" OF
          "Sorting Method"::Item:
            SETCURRENTKEY("No.","Item No.");
          "Sorting Method"::"Shelf or Bin":
            BEGIN
              GetLocation(Rec."Location Code");
              IF Location."Bin Mandatory" THEN
                SETCURRENTKEY("No.","To Bin Code")
              ELSE
                SETCURRENTKEY("No.","Shelf No.");
            END;
          "Sorting Method"::"Due Date":
            SETCURRENTKEY("No.","Due Date");
        END;

        IF FIND('-') THEN BEGIN
          SequenceNo := 10000;
          REPEAT
            "Sorting Sequence No." := SequenceNo;
            MODIFY;
            SequenceNo := SequenceNo + 10000;
          UNTIL NEXT = 0;
        END;
      END;
    END;

    PROCEDURE GetDocumentStatus@15(LineNo@1003 : Integer) : Integer;
    VAR
      WhseInternalPickLine@1001 : Record 7334;
    BEGIN
      WhseInternalPickLine.SETRANGE("No.","No.");
      WITH WhseInternalPickLine DO BEGIN
        IF LineNo <> 0 THEN
          SETFILTER("Line No.",'<>%1',LineNo);
        IF NOT FIND('-') THEN
          EXIT(Status::" ");

        SETRANGE(Status,Status::"Partially Picked");
        IF FIND('-') THEN
          EXIT(Status);

        SETRANGE(Status,Status::"Completely Picked");
        IF FIND('-') THEN BEGIN
          SETFILTER(Status,'<%1',Status::"Completely Picked");
          IF FIND('-') THEN
            EXIT(Status::"Partially Picked")
          ELSE
            EXIT(Status);
        END;

        EXIT(Status);
      END;
    END;

    LOCAL PROCEDURE MessageIfIntPickLinesExist@7(ChangedFieldName@1000 : Text[80]);
    VAR
      WhseInternalPickLine@1001 : Record 7334;
    BEGIN
      WhseInternalPickLine.SETRANGE("No.","No.");
      IF WhseInternalPickLine.FIND('-') THEN
        IF NOT HideValidationDialog THEN
          MESSAGE(
            STRSUBSTNO(
              Text006,ChangedFieldName,TABLECAPTION) + Text007);
    END;

    PROCEDURE GetLocation@10(LocationCode@1000 : Code[10]);
    BEGIN
      IF LocationCode = '' THEN
        CLEAR(Location)
      ELSE
        IF Location.Code <> LocationCode THEN
          Location.GET(LocationCode);
    END;

    PROCEDURE LookupWhseInternalPickHeader@1(VAR WhseInternalPickHeader@1001 : Record 7333) : Boolean;
    BEGIN
      COMMIT;
      IF USERID <> '' THEN BEGIN
        WhseInternalPickHeader.FILTERGROUP := 2;
        WhseInternalPickHeader.SETRANGE("Location Code");
      END;
      IF FORM.RUNMODAL(0,WhseInternalPickHeader) = ACTION::LookupOK THEN;
      IF USERID <> '' THEN BEGIN
        WhseInternalPickHeader.FILTERGROUP := 2;
        WhseInternalPickHeader.SETRANGE("Location Code",WhseInternalPickHeader."Location Code");
        WhseInternalPickHeader.FILTERGROUP := 0;
      END;
    END;

    PROCEDURE OpenWhseInternalPickHeader@2(VAR WhseInternalPickHeader@1001 : Record 7333);
    VAR
      WhseEmployee@1003 : Record 7301;
      WmsManagement@1000 : Codeunit 7302;
      CurrentLocationCode@1006 : Code[10];
    BEGIN
      IF USERID <> '' THEN BEGIN
        WhseEmployee.SETRANGE("User ID",USERID);
        IF NOT WhseEmployee.FIND('-') THEN
          ERROR(Text002,USERID);

        WhseEmployee.SETRANGE("Location Code",WhseInternalPickHeader."Location Code");
        IF WhseEmployee.FIND('-') THEN
          CurrentLocationCode := WhseInternalPickHeader."Location Code"
        ELSE
          CurrentLocationCode := WmsManagement.GetDefaultLocation;

        WhseInternalPickHeader.FILTERGROUP := 2;
        WhseInternalPickHeader.SETRANGE("Location Code",CurrentLocationCode);
        WhseInternalPickHeader.FILTERGROUP := 0;
      END;
    END;

    PROCEDURE LookupLocation@4(VAR WhseInternalPickHeader@1001 : Record 7333) : Boolean;
    VAR
      Location@1000 : Record 14;
    BEGIN
      COMMIT;
      Location.FILTERGROUP := 2;
      Location.SETRANGE(Code);
      IF FORM.RUNMODAL(FORM::"Locations with Warehouse List",Location) = ACTION::LookupOK THEN
        WhseInternalPickHeader.VALIDATE("Location Code",Location.Code);
      Location.FILTERGROUP := 0;
    END;

    PROCEDURE SetHideValidationDialog@14(NewHideValidationDialog@1000 : Boolean);
    BEGIN
      HideValidationDialog := NewHideValidationDialog;
    END;

    PROCEDURE DeleteRelatedLines@9();
    VAR
      WhseInternalPickLine@1003 : Record 7334;
      WhsePickRqst@1002 : Record 7325;
      WhseCommentLine@1001 : Record 5770;
    BEGIN
      WhseInternalPickLine.SETRANGE("No.","No.");
      WhseInternalPickLine.DELETEALL;

      WhsePickRqst.SETRANGE("Document Type",WhsePickRqst."Document Type"::"Internal Pick");
      WhsePickRqst.SETRANGE("Document No.","No.");
      WhsePickRqst.DELETEALL;

      WhseCommentLine.SETRANGE("Table Name",WhseCommentLine."Table Name"::"Internal Pick");
      WhseCommentLine.SETRANGE(Type,WhseCommentLine.Type::" ");
      WhseCommentLine.SETRANGE("No.","No.");
      WhseCommentLine.DELETEALL;

      ItemTrackingMgt.DeleteWhseItemTrkgLines(
        DATABASE::"Whse. Internal Pick Line",0,"No.",'',0,0,'',FALSE);
    END;

    PROCEDURE CheckPickRequired@5(LocationCode@1000 : Code[10]);
    BEGIN
      IF LocationCode = '' THEN BEGIN
        WhseSetup.GET;
        WhseSetup.TESTFIELD("Require Pick");
      END ELSE BEGIN
        GetLocation(LocationCode);
        Location.TESTFIELD("Require Pick");
      END;
    END;

    BEGIN
    END.
  }
}
