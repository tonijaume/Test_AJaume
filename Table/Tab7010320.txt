OBJECT Table 7010320 Codigo servicio
{
  OBJECT-PROPERTIES
  {
    Date=16/10/09;
    Time=12:30:40;
    Version List=TRANSFER;
  }
  PROPERTIES
  {
    OnDelete=BEGIN
               // Chequear que el codigo no tenga ningun precio asignado y ningun parte de trabajo

               rPre.RESET;
               rPre.SETCURRENTKEY(Garaje,
                                  "N§ Contrato",
                                  "Tipo precio",
                                  "Codigo servicio");
               rPre.SETRANGE("Codigo servicio", Codigo);
               IF rPre.FINDFIRST THEN
                 ERROR(Text0001);

               rParte.RESET;
               rParte.SETCURRENTKEY(Facturado,
                                    "Codigo Servicio");
               rParte.SETRANGE("Codigo Servicio", Codigo);
               IF rParte.FINDFIRST THEN
                 ERROR(Text0002);
             END;

    CaptionML=ESP=Codigo servicio;
    LookupFormID=Form7010338;
    DrillDownFormID=Form7010338;
  }
  FIELDS
  {
    { 1   ;   ;Codigo              ;Code10        ;CaptionML=ESP=Codigo;
                                                   SQL Data Type=Varchar;
                                                   NotBlank=Yes;
                                                   Description=PK }
    { 3   ;   ;Descripcion         ;Text30        ;CaptionML=ESP=Descripcion }
    { 5   ;   ;Tipo servicio       ;Code10        ;TableRelation="Tipo Servicio".Codigo;
                                                   OnValidate=VAR
                                                                lrParte@1100244000 : Record 7010360;
                                                              BEGIN
                                                                // Si el tipo de servicio ya ha sido utilizado en un parte facturado generar  un error
                                                                IF "Tipo servicio" <> xRec."Tipo servicio" THEN BEGIN
                                                                  lrParte.SETCURRENTKEY(Facturado,"Codigo Servicio");
                                                                  lrParte.SETRANGE (Facturado , TRUE);
                                                                  lrParte.SETRANGE ("Codigo Servicio" , xRec.Codigo);
                                                                  IF lrParte.FINDFIRST THEN
                                                                    ERROR(err1);
                                                                END;
                                                              END;

                                                   CaptionML=ESP=Tipo servicio;
                                                   SQL Data Type=Varchar;
                                                   NotBlank=Yes;
                                                   Description=FK Tipo servicio }
    { 7   ;   ;Tipo orden          ;Option        ;CaptionML=ESP=Tipo orden;
                                                   OptionCaptionML=ESP=Entrada,Salida;
                                                   OptionString=Entrada,Salida }
    { 20  ;   ;Codigo Unificado    ;Code10        ;TableRelation="Codigo servicio".Codigo;
                                                   OnValidate=BEGIN
                                                                // Nos asegurramos que el codigo unificado tenga el mismo tipo de servicio

                                                                IF "Codigo Unificado" <> '' THEN BEGIN
                                                                  CLEAR(rCodSer);
                                                                  rCodSer.GET("Codigo Unificado");
                                                                  rCodSer.TESTFIELD("Tipo servicio","Tipo servicio");
                                                                  rCodSer.TESTFIELD("Tipo orden"   ,"Tipo orden");
                                                                END;
                                                              END;

                                                   CaptionML=ESP=Codigo Unificado }
    { 21  ;   ;Filtro Cliente      ;Code20        ;FieldClass=FlowFilter;
                                                   TableRelation=Customer.No.;
                                                   CaptionML=ESP=Filtro Cliente;
                                                   Description=FlowFilter, Customer.No. }
    { 23  ;   ;Filtro Touroperador ;Code10        ;FieldClass=FlowFilter;
                                                   TableRelation=TTOO.Codigo;
                                                   CaptionML=ESP=Filtro Touroperador;
                                                   Description=FlowFilter, TTOO.Codigo }
    { 25  ;   ;Tiene precio x cliente;Boolean     ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Servicio habitual Cliente/TTOO" WHERE (Cliente=FIELD(Filtro Cliente),
                                                                                                             Touroperador=FIELD(Filtro Touroperador),
                                                                                                             Codigo servicio=FIELD(Codigo),
                                                                                                             Anulado=CONST(No)));
                                                   CaptionML=ESP=Tiene precio x cliente;
                                                   Description=Exist("Servicio habitual Cliente/TTOO" WHERE (Cliente=FIELD(Filtro Cliente),Touroperador=FIELD(Filtro Touroperador),Codigo servicio=FIELD(Codigo),Anulado=CONST(No)));
                                                   Editable=No }
    { 26  ;   ;Plazas Garaje Peque¤o;Integer      ;CaptionML=ESP=Plazas Garaje Peque¤o;
                                                   MinValue=0;
                                                   Description=Automatizaci¢n garaje TRN }
  }
  KEYS
  {
    {    ;Codigo                                  ;Clustered=Yes }
    {    ;Descripcion                              }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      err1@1100244000 : TextConst 'ESP=No es posible modificar el Tipo de Servicio, ya que existen Partes facturados con este Codigo de Servicio asociado';
      rPre@1100244001 : Record 7010405;
      rParte@1100244002 : Record 7010360;
      Text0001@1100244003 : TextConst 'ESP=No se puede borrar un codigo de servicio porque tiene precios asociados.';
      Text0002@1100244004 : TextConst 'ESP=No de puede borrar un codigo de servicio porque tiene partes asociados.';
      rCodSer@1103350000 : Record 7010320;

    PROCEDURE nom_tipo_servicio@1() : Text[30];
    VAR
      rTipSer@1100244000 : Record 7010319;
    BEGIN
      // nom_tipo_servicio
      //
      IF NOT rTipSer.GET("Tipo servicio") THEN
        EXIT('')
      ELSE
        EXIT(rTipSer.Descripcion);
    END;

    BEGIN
    END.
  }
}
