OBJECT Table 7010146 Talonario
{
  OBJECT-PROPERTIES
  {
    Date=10/06/15;
    Time=16:50:04;
    Modified=Yes;
    Version List=AIC2009;
  }
  PROPERTIES
  {
    OnInsert=VAR
               rPar@1103355000 : Record 7009700;
               rTalonario@1103355001 : Record 7010146;
             BEGIN
               rPar.FINDFIRST;

               Delegacion := rPar.Delegacion;

               rTalonario.RESET;
               rTalonario.SETRANGE(Delegacion  , Delegacion);
               rTalonario.SETRANGE("Guia Venta", "Guia Venta");
               IF rTalonario.FINDLAST THEN
                 Orden := rTalonario.Orden + 1
               ELSE
                 Orden := 1;
             END;

    OnModify=BEGIN
               "Fecha Modificacion"   := TODAY;
               "Usuario Modificacion" := USERID;
             END;

    OnDelete=BEGIN
               IF Activo THEN
                 ERROR(Text001);

               rRsv.RESET;
               rRsv.SETCURRENTKEY("N§ Ticket");
               rRsv.SETRANGE("N§ Ticket", "N§ Ticket inicial", "N§ Ticket final");
               IF rRsv.FINDFIRST THEN
                 ERROR(Text001);
             END;

    OnRename=BEGIN
               ERROR(Text002+
                     Text003);

               rRsv.RESET;
               rRsv.SETCURRENTKEY("N§ Ticket");
               rRsv.SETRANGE("N§ Ticket", "N§ Ticket inicial", "N§ Ticket final");
               IF rRsv.FINDFIRST THEN BEGIN
                 IF NOT CONFIRM(Text004) THEN
                   ERROR(Text005);
               END;

               Comprobar_Solape;
             END;

    CaptionML=[ENU=Ticket Book;
               ESP=Talonario];
    LookupFormID=Form7010156;
    DrillDownFormID=Form7010156;
  }
  FIELDS
  {
    { 1   ;   ;Guia Venta          ;Code20        ;TableRelation="Representante excursiones".Codigo WHERE (Bloqueado=CONST(No));
                                                   OnValidate=BEGIN
                                                                IF (xRec."Guia Venta" <> '') AND (xRec."Guia Venta" <> "Guia Venta") THEN BEGIN
                                                                  IF NOT CONFIRM(Text006, FALSE) THEN
                                                                    "Guia Venta" := xRec."Guia Venta";
                                                                END;

                                                                IF rGuia.GET("Guia Venta") THEN
                                                                  Oficina := rGuia."Oficina ventas";
                                                              END;

                                                   CaptionML=[ENU=Sale guide;
                                                              ESP=Guia venta];
                                                   NotBlank=Yes;
                                                   Description=PK, "Representante excursiones".Codigo WHERE (Bloqueado=CONST(No)) }
    { 2   ;   ;Delegacion          ;Code10        ;TableRelation=Delegacion.Codigo;
                                                   CaptionML=[ENU=Local Office;
                                                              ESP=Delegacion];
                                                   Description=PK, FK Delegacion;
                                                   Editable=No }
    { 3   ;   ;N§ Ticket inicial   ;Code10        ;OnValidate=VAR
                                                                rTalonario@1103355000 : Record 7010146;
                                                              BEGIN
                                                                a¤ade_ceros("N§ Ticket inicial", Oficina);
                                                                IF "N§ Ticket final" <> '' THEN
                                                                  IF "N§ Ticket inicial" > "N§ Ticket final" THEN
                                                                    ERROR(Text007 + ' ' + Text008);

                                                                IF Activo THEN
                                                                  Comprobar_Solape;
                                                              END;

                                                   CaptionML=[ENU=Initial ticket No.;
                                                              ESP=N§ Ticket inicial] }
    { 5   ;   ;N§ Ticket final     ;Code10        ;OnValidate=BEGIN
                                                                a¤ade_ceros("N§ Ticket final", Oficina);
                                                                IF "N§ Ticket final" < "N§ Ticket inicial" THEN
                                                                  ERROR(Text009 + ' ' + Text010);

                                                                IF Activo THEN
                                                                  Comprobar_Solape;
                                                              END;

                                                   CaptionML=[ENU=Final ticket No.;
                                                              ESP=N§ Ticket final] }
    { 7   ;   ;Activo              ;Boolean       ;OnValidate=BEGIN
                                                                IF Activo THEN
                                                                  Comprobar_Solape;
                                                              END;

                                                   CaptionML=[ENU=Active;
                                                              ESP=Activo] }
    { 9   ;   ;TourOperador        ;Code10        ;TableRelation=TourOperador.TourOperador;
                                                   CaptionML=[ENU=TourOperator;
                                                              ESP=TourOperador];
                                                   Description=FK TourOperador }
    { 11  ;   ;Orden               ;Integer       ;CaptionML=[ENU=Order;
                                                              ESP=Orden];
                                                   Editable=No }
    { 13  ;   ;Fecha Modificacion  ;Date          ;CaptionML=[ENU=Modification Date;
                                                              ESP=Fecha modificacion];
                                                   Editable=No }
    { 15  ;   ;Usuario Modificacion;Code20        ;CaptionML=[ENU=Modification User;
                                                              ESP=Usuario modificacion];
                                                   Editable=No }
    { 17  ;   ;Estado              ;Option        ;CaptionML=[ENU=Status;
                                                              ESP=Estado];
                                                   OptionCaptionML=[ENU=Committed,Closed,Active;
                                                                    ESP=Entregado,Cerrado,Activo];
                                                   OptionString=Entregado,Cerrado,Activo }
    { 19  ;   ;Ultimo utilizado    ;Code10        ;CaptionML=[ENU=Last used;
                                                              ESP=Ultimo utilizado];
                                                   Editable=No }
    { 21  ;   ;Oficina             ;Code10        ;TableRelation="Oficina ventas".Codigo;
                                                   CaptionML=[ENU=Office;
                                                              ESP=Oficina];
                                                   Description=Oficina.Codigo }
    { 23  ;   ;Fecha entrega       ;Date          ;OnValidate=BEGIN
                                                                IF Estado <> Estado::Entregado THEN
                                                                  ERROR(Text014);
                                                              END;

                                                   CaptionML=[ENU=Delivery date;
                                                              ESP=Fecha entrega] }
    { 25  ;   ;Usuario entrega     ;Text30        ;TableRelation=User."User ID";
                                                   OnValidate=BEGIN
                                                                IF Estado <> Estado::Entregado THEN
                                                                  ERROR(Text014);
                                                              END;

                                                   CaptionML=[ENU=Delivery user;
                                                              ESP=Usuario entrega];
                                                   Description=User."User ID" }
  }
  KEYS
  {
    {    ;Delegacion,Guia Venta,Orden             ;Clustered=Yes }
    {    ;N§ Ticket inicial,N§ Ticket final       ;KeyGroups=RENUMERING }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1103355002 : TextConst 'ENU=Unable to delete the checkbook because it is actived;ESP=No se puede borrar el talonario porque est  activo';
      Text002@1103355003 : TextConst 'ENU=Sale guide cannot be changed directly on a checkbook, use the function \;ESP=No se puede cambiar el guia de venta de un talonario directamente, utilice la funcion \';
      Text003@1103355004 : TextConst 'ENU=Change Guide of the checkbook window;ESP=Cambia Guia de la ventana de Talonarios.';
      Text004@1103355005 : TextConst 'ENU=This checkbook already has associated bookings, Would you like to continue with the change?;ESP=Este talonario ya tiene reservas asociadas, desea continuar con el cambio';
      Text005@1103355006 : TextConst 'ENU=Cancelled change;ESP=Cambio anulado.';
      Text006@1103355007 : TextConst 'ENU=Continue with the change of checkbook guide;ESP=Continuar con el cambio de Guia del talonario';
      Text007@1103355008 : TextConst 'ENU=Number of Initial ticket cannot be higher than \;ESP=El n£mero de ticket inicial no puede ser mayor al';
      Text008@1103355009 : TextConst 'ENU=Final ticket no.;ESP=n§ de ticket final';
      Text009@1103355010 : TextConst 'ENU=Number of Final ticket cannot be lower than \;ESP=El n£mero de ticket final no puede ser inferior al';
      Text010@1103355011 : TextConst 'ENU=Initial ticket no.;ESP=n§ de ticket inicial';
      Text011@1103355012 : TextConst 'ENU=Initial ticket No. Is included into another checkbook - Guide %1;ESP=El N§ de Ticket inicial esta incluido en otro Talonario - Guia %1.';
      Text012@1103355013 : TextConst 'ENU=Final ticket No. Is included into another checkbook - Guide %1.;ESP="El N§ de Ticket Final esta incluido en otro Talonario - Guia %1. "';
      Text013@1103355014 : TextConst 'ENU=Checkbook includes other ones - Guide %1;ESP=El Talonario incluye otros ya introducidos - Guia %1.';
      rRsv@1103355000 : Record 7010162;
      rGuia@1100217000 : Record 7010241;
      Text014@1100217001 : TextConst 'ENU=This field can only be filled if the status is delivered.;ESP=Este campo solo se puede rellenar si estado es entregado.';

    PROCEDURE Comprobar_Solape@1();
    VAR
      rTalonario@1103355000 : Record 7010146;
    BEGIN
      // Comprobar_Solape
      //
      //  rec        ->        <------------------->
      //              /     <------->
      //              |            <-------->
      //  rtalonario <                      <---------->
      //              |    <-------------------------->
      //              \

      rTalonario.RESET;
      rTalonario.SETCURRENTKEY("N§ Ticket inicial",
                               "N§ Ticket final");
      rTalonario.SETRANGE(Activo              , TRUE);
      rTalonario.SETRANGE(Oficina             , Oficina); //+$001
      rTalonario.SETFILTER("N§ Ticket inicial", '>=%1&<=%2', "N§ Ticket inicial",
                                                             "N§ Ticket final");
      IF rTalonario.FINDFIRST THEN
      BEGIN
        REPEAT
          IF ("Guia Venta" <> rTalonario."Guia Venta") OR
             ((Orden <> rTalonario.Orden) AND ("Guia Venta" = rTalonario."Guia Venta")) THEN
            ERROR(Text011, rTalonario."Guia Venta"); //+$003
        UNTIL rTalonario.NEXT = 0;
      END;
      rTalonario.SETFILTER("N§ Ticket inicial"  , '');
      rTalonario.SETFILTER("N§ Ticket final"    , '>=%1&<=%2', "N§ Ticket inicial",
                                                               "N§ Ticket final");
      IF rTalonario.FINDFIRST THEN
      BEGIN
        REPEAT
          IF ("Guia Venta" <> rTalonario."Guia Venta") OR
             ((Orden <> rTalonario.Orden) AND ("Guia Venta" = rTalonario."Guia Venta")) THEN
            ERROR(Text012, rTalonario."Guia Venta"); //+$003
        UNTIL rTalonario.NEXT = 0;
      END;
      rTalonario.SETFILTER("N§ Ticket inicial", '<%1', "N§ Ticket inicial");
      rTalonario.SETFILTER("N§ Ticket final"  , '>%1', "N§ Ticket final");
      IF rTalonario.FINDFIRST THEN
      BEGIN
        REPEAT
          IF ("Guia Venta" <> rTalonario."Guia Venta") OR
             ((Orden <> rTalonario.Orden) AND ("Guia Venta" = rTalonario."Guia Venta")) THEN
            ERROR(Text013, rTalonario."Guia Venta"); //+$003
        UNTIL rTalonario.NEXT = 0;
      END;
    END;

    PROCEDURE a¤ade_ceros@2(VAR par_ticket@1103355000 : Code[10];pwOficina@1100217000 : Code[10]);
    VAR
      lon@1103355001 : Integer;
      x@1103355002 : Integer;
      aux@1103355003 : Integer;
      lrOficina@1100217001 : Record 7009720;
    BEGIN
      // a¤ade_ceros

      //+$002 <
      IF NOT lrOficina.GET(pwOficina) THEN
        CLEAR(lrOficina);
      //+$002 >

      lon := STRLEN(par_ticket);
      FOR x := 1 TO lon DO BEGIN
        IF NOT EVALUATE(aux, COPYSTR(par_ticket, x, 1)) THEN
          EXIT;
      END;

      IF lon = 10 THEN
        EXIT;

      //-$002FOR x := 1 TO (10 - lon) DO
      //-$002  par_ticket := '0' + par_ticket;

      //+$002 <
      FOR x := 1 TO (9 - lon) DO
        par_ticket := '0' + par_ticket;
      par_ticket := lrOficina."Digito tickets" + par_ticket;
      //+$002 >
    END;

    BEGIN
    {
      $001 AJS 30012013 En la comprobacion de solapamiento incluimos la oficina, relacionada con el guia de venta

      $002 AJS 30012013 En la funcion a¤ade_ceros el primer digito por la izquierda ser  el identificador de oficina

      $003 AJS 07122013 Modifico la funcion Comprobar_Solape para mostrar mejor informacion en el mensaje

      $004 AJS 30042014 Nuevos campos "Fecha entrega" y "Usuario entrega"

      $005 AJS 10062015 Cambio la propiedad DrillDownFormID para que apunte a la lista de talonarios
    }
    END.
  }
}
