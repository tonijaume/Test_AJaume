OBJECT Table 7000020 Payment Order
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVES6.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF "No." = '' THEN BEGIN
                 CarteraSetup.GET;
                 CarteraSetup.TESTFIELD("Payment Order Nos.");
                 NoSeriesMgt.InitSeries(CarteraSetup."Payment Order Nos.",xRec."No. Series",0D,"No.","No. Series");
               END;

               IF GETFILTER("Bank Account No.") <> '' THEN
                 IF GETRANGEMIN("Bank Account No.") = GETRANGEMAX("Bank Account No.") THEN BEGIN
                   BankAcc.GET(GETRANGEMIN("Bank Account No."));
                   VALIDATE("Currency Code",BankAcc."Currency Code");
                   VALIDATE("Bank Account No.",BankAcc."No.");
                 END;

               CheckNoNotUsed;
               UpdateDescription;
               "Posting Date" := WORKDATE;
             END;

    OnDelete=BEGIN
               Doc.SETCURRENTKEY(Type,"Bill Gr./Pmt. Order No.");
               Doc.SETRANGE(Type,Doc.Type::Payable);
               Doc.SETRANGE("Bill Gr./Pmt. Order No.","No.");
               IF Doc.FIND('-') THEN
                 ERROR(Text1100000);

               BGPOCommentLine.SETRANGE("BG/PO No.","No.");
               BGPOCommentLine.DELETEALL;
             END;

    CaptionML=[ENU=Payment Order;
               ESP=Orden pago];
    LookupFormID=Form7000051;
    DrillDownFormID=Form7000051;
  }
  FIELDS
  {
    { 2   ;   ;No.                 ;Code20        ;OnValidate=BEGIN
                                                                IF "No." = xRec."No." THEN
                                                                  EXIT;

                                                                CheckPrinted;
                                                                ResetPrinted;

                                                                CarteraSetup.GET;
                                                                NoSeriesMgt.TestManual(CarteraSetup."Payment Order Nos.");
                                                                "No. Series" := '';

                                                                UpdateDescription;
                                                                CheckNoNotUsed;
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              ESP=N§] }
    { 3   ;   ;Bank Account No.    ;Code20        ;TableRelation="Bank Account";
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Bank Account Name");

                                                                IF "Bank Account No." = '' THEN
                                                                  EXIT;

                                                                BankAcc.GET("Bank Account No.");
                                                                BankAcc.TESTFIELD(Blocked,FALSE);

                                                                IF PmtOrdIsEmpty THEN BEGIN
                                                                  VALIDATE("Currency Code",BankAcc."Currency Code");
                                                                  EXIT;
                                                                END;

                                                                BankAcc.TESTFIELD("Currency Code","Currency Code");

                                                                CALCFIELDS(Amount);

                                                                IF "Bank Account No." <> xRec."Bank Account No." THEN BEGIN
                                                                  CheckPrinted;
                                                                  ResetPrinted;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Bank Account No.;
                                                              ESP=C¢d. cuenta banco] }
    { 4   ;   ;Bank Account Name   ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Bank Account".Name WHERE (No.=FIELD(Bank Account No.)));
                                                   CaptionML=[ENU=Bank Account Name;
                                                              ESP=Nombre banco];
                                                   Editable=No }
    { 5   ;   ;Posting Description ;Text50        ;CaptionML=[ENU=Posting Description;
                                                              ESP=Texto de registro] }
    { 7   ;   ;Amount              ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Cartera Doc."."Remaining Amount" WHERE (Bill Gr./Pmt. Order No.=FIELD(No.),
                                                                                                            Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                            Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                            Category Code=FIELD(Category Filter),
                                                                                                            Due Date=FIELD(Due Date Filter),
                                                                                                            Type=CONST(Payable)));
                                                   CaptionML=[ENU=Amount;
                                                              ESP=Importe];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 8   ;   ;Reason Code         ;Code10        ;TableRelation="Reason Code";
                                                   CaptionML=[ENU=Reason Code;
                                                              ESP=C¢d. auditor¡a] }
    { 9   ;   ;No. Printed         ;Integer       ;CaptionML=[ENU=No. Printed;
                                                              ESP=N§ copias impresas] }
    { 10  ;   ;Posting Date        ;Date          ;OnValidate=BEGIN
                                                                IF "Posting Date" <> xRec."Posting Date" THEN BEGIN
                                                                  CheckPrinted;
                                                                  ResetPrinted;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Posting Date;
                                                              ESP=Fecha registro] }
    { 11  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("BG/PO Comment Line" WHERE (BG/PO No.=FIELD(No.),
                                                                                                 Type=FILTER(Payable)));
                                                   CaptionML=[ENU=Comment;
                                                              ESP=Comentario];
                                                   Editable=No }
    { 12  ;   ;Category Filter     ;Code10        ;FieldClass=FlowFilter;
                                                   TableRelation="Category Code";
                                                   ValidateTableRelation=No;
                                                   CaptionML=[ENU=Category Filter;
                                                              ESP=Filtro clasificaci¢n] }
    { 13  ;   ;Due Date Filter     ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Due Date Filter;
                                                              ESP=Filtro fecha vto.] }
    { 14  ;   ;Global Dimension 1 Filter;Code10   ;FieldClass=FlowFilter;
                                                   TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=[ENU=Global Dimension 1 Filter;
                                                              ESP=Filtro dimensi¢n global 1];
                                                   CaptionClass='1,3,1' }
    { 15  ;   ;Global Dimension 2 Filter;Code10   ;FieldClass=FlowFilter;
                                                   TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=[ENU=Global Dimension 2 Filter;
                                                              ESP=Filtro dimensi¢n global  2];
                                                   CaptionClass='1,3,2' }
    { 16  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              ESP=Nos. serie];
                                                   Editable=No }
    { 33  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   OnValidate=BEGIN
                                                                IF BankAcc.GET("Bank Account No.") AND ("Currency Code" <> BankAcc."Currency Code")
                                                                THEN
                                                                  TESTFIELD("Currency Code",BankAcc."Currency Code");

                                                                IF ("Currency Code" <> xRec."Currency Code") AND NOT PmtOrdIsEmpty THEN
                                                                  FIELDERROR("Currency Code",
                                                                    STRSUBSTNO(Text1100001,TABLECAPTION));

                                                                IF "Currency Code" <> '' THEN BEGIN
                                                                  Currency.RESET;
                                                                  Currency.SETRANGE("Payment Orders",TRUE);
                                                                  Currency.Code := "Currency Code";
                                                                  IF NOT Currency.FIND THEN
                                                                    ERROR(
                                                                      Text1100002,
                                                                      "Currency Code");
                                                                END;

                                                                IF "Currency Code" <> xRec."Currency Code" THEN BEGIN
                                                                  CheckPrinted;
                                                                  ResetPrinted;
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              Currency.RESET;

                                                              IF Currency.GET("Currency Code") THEN;
                                                              Currencies.SETRECORD(Currency);
                                                              Currencies.LOOKUPMODE(TRUE);
                                                              IF ACTION::LookupOK = Currencies.RUNMODAL THEN BEGIN
                                                                Currencies.GETRECORD(Currency);
                                                                CLEAR(Currencies);
                                                                VALIDATE("Currency Code",Currency.Code);
                                                              END ELSE
                                                                CLEAR(Currencies);
                                                            END;

                                                   CaptionML=[ENU=Currency Code;
                                                              ESP=C¢d. divisa] }
    { 34  ;   ;Amount (LCY)        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Cartera Doc."."Remaining Amt. (LCY)" WHERE (Bill Gr./Pmt. Order No.=FIELD(No.),
                                                                                                                Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                Category Code=FIELD(Category Filter),
                                                                                                                Due Date=FIELD(Due Date Filter),
                                                                                                                Type=CONST(Payable)));
                                                   CaptionML=[ENU=Amount (LCY);
                                                              ESP=Importe (DL)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 35  ;   ;Elect. Pmts Exported;Boolean       ;CaptionML=[ENU=Elect. Pmts Exported;
                                                              ESP=Pagos electr. exportados] }
    { 36  ;   ;Export Electronic Payment;Boolean  ;OnValidate=BEGIN
                                                                TESTFIELD("Elect. Pmts Exported",FALSE);
                                                              END;

                                                   CaptionML=[ENU=Export Electronic Payment;
                                                              ESP=Exportar pago electr¢nico] }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Bank Account No.                         }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text1100000@1000 : TextConst 'ENU=This Payment Order is not empty. Remove all its bills and invoices and try again.;ESP=La orden de pago no est  vac¡a. Elimine todos sus efectos y facturas e intntelo de nuevo.';
      Text1100001@1001 : TextConst 'ENU=can only be changed when the %1 is empty;ESP=s¢lo se puede cambiar cuando %1 est  vac¡a';
      Text1100002@1002 : TextConst 'ENU=The operation is not allowed for payment order using %1. Check your currency setup.;ESP=La operaci¢n no se permite para ord. pago que usan %1. Compruebe la configuraci¢n de la divisa.';
      Text1100003@1003 : TextConst 'ENU=This payment order has already been printed. Proceed anyway?;ESP=Ya se ha impreso la orden de pago. ¨Confirma que desea continuar?';
      Text1100004@1004 : TextConst 'ENU=The update has been interrupted by the user.;ESP=La actualizaci¢n se ha interrumpido por el usuario.';
      Text1100005@1005 : TextConst 'ENU=Payment Order;ESP=Orden pago';
      Text1100006@1006 : TextConst 'ENU=" is currently in use in a Posted Payment Order.";ESP=" ya ha sido utilizado en una orden pago registrada."';
      Text1100007@1007 : TextConst 'ENU=" is currently in use in a Closed Payment Order.";ESP=" ya ha sido utilizado en una orden pago cerrada."';
      Text1100008@1008 : TextConst 'ENU=untitled;ESP=sin t¡tulo';
      PmtOrd@1100001 : Record 7000020;
      PostedPmtOrd@1100002 : Record 7000021;
      ClosedPmtOrd@1100003 : Record 7000022;
      Doc@1100004 : Record 7000002;
      CarteraSetup@1100005 : Record 7000016;
      Currency@1100006 : Record 4;
      BankAcc@1100007 : Record 270;
      BGPOCommentLine@1100008 : Record 7000008;
      Currencies@1100011 : Form 5;
      NoSeriesMgt@1100010 : Codeunit 396;

    PROCEDURE AssistEdit@3(OldPmtOrd@1100000 : Record 7000020) : Boolean;
    BEGIN
      WITH PmtOrd DO BEGIN
        PmtOrd := Rec;
        CarteraSetup.GET;
        CarteraSetup.TESTFIELD("Payment Order Nos.");
        IF NoSeriesMgt.SelectSeries(CarteraSetup."Payment Order Nos.",OldPmtOrd."No. Series","No. Series") THEN BEGIN
          CarteraSetup.GET;
          CarteraSetup.TESTFIELD("Payment Order Nos.");
          NoSeriesMgt.SetSeries("No.");
          Rec := PmtOrd;
          EXIT(TRUE);
        END;
      END;
    END;

    LOCAL PROCEDURE CheckPrinted@1();
    BEGIN
      IF "No. Printed" <> 0 THEN
        IF NOT CONFIRM(Text1100003) THEN
          ERROR(Text1100004);
    END;

    PROCEDURE ResetPrinted@2();
    BEGIN
      "No. Printed" := 0;
    END;

    LOCAL PROCEDURE UpdateDescription@4();
    BEGIN
      "Posting Description" := Text1100005 + ' ' + "No.";
    END;

    LOCAL PROCEDURE CheckNoNotUsed@5();
    BEGIN
      IF PostedPmtOrd.GET("No.") THEN
        FIELDERROR("No.",PostedPmtOrd."No." + Text1100006);
      IF ClosedPmtOrd.GET("No.") THEN
        FIELDERROR("No.",ClosedPmtOrd."No." + Text1100007);
    END;

    PROCEDURE PrintRecords@6(ShowRequestForm@1100000 : Boolean);
    VAR
      CarteraReportSelection@1100001 : Record 7000013;
    BEGIN
      WITH PmtOrd DO BEGIN
        COPY(Rec);
        CarteraReportSelection.SETRANGE(Usage,CarteraReportSelection.Usage::"Payment Order");
        CarteraReportSelection.SETFILTER("Report ID",'<>0');
        CarteraReportSelection.FIND('-');
        REPEAT
          REPORT.RUNMODAL(CarteraReportSelection."Report ID",ShowRequestForm,FALSE,PmtOrd);
        UNTIL CarteraReportSelection.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE PmtOrdIsEmpty@7() : Boolean;
    BEGIN
      Doc.SETCURRENTKEY(Type,"Bill Gr./Pmt. Order No.");
      Doc.SETRANGE(Type,Doc.Type::Payable);
      Doc.SETRANGE("Bill Gr./Pmt. Order No.","No.");
      EXIT(NOT Doc.FIND('-'));
    END;

    PROCEDURE Caption@9() : Text[100];
    BEGIN
      IF "No." = '' THEN
        EXIT(Text1100008);
      CALCFIELDS("Bank Account Name");
      EXIT(STRSUBSTNO('%1 %2',"No.","Bank Account Name"));
    END;

    BEGIN
    END.
  }
}
