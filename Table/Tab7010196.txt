OBJECT Table 7010196 Tarifa Compra Circuito
{
  OBJECT-PROPERTIES
  {
    Date=04/03/14;
    Time=[ 9:37:15];
    Modified=Yes;
    Version List=AIC2009;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               rParC.LOCKTABLE;
               rPar.FINDFIRST;
               rParC.FINDFIRST;

               IF Delegacion = '' THEN
                 Delegacion := rPar.Delegacion;

               IF "N§ Tarifa" = '' THEN BEGIN
                 CASE "Tipo Tarifa" OF
                   "Tipo Tarifa"::Transportista:
                   BEGIN
                     //-$001rParC.TESTFIELD("Cont. Tarifa Transfer Circuito");
                     //+$001 <
                     IF rParC."Cont. Tarifa compra Circuito" = '' THEN
                       rParC."Cont. Tarifa compra Circuito" := Text011 + '0000000';
                     //+$001 >
                     REPEAT
                       rParC."Cont. Tarifa compra Circuito" := INCSTR(rParC."Cont. Tarifa compra Circuito");
                     UNTIL NOT rTar.GET(Delegacion, "Tipo Tarifa", rParC."Cont. Tarifa compra Circuito");
                     "N§ Tarifa" := rParC."Cont. Tarifa compra Circuito";
                   END;
                   "Tipo Tarifa"::Restaurante:
                   BEGIN
                     //-$001rParC.TESTFIELD("Cont. Tarifa Restaura Circuito");
                     //+$001 <
                     IF rParC."Cont. Tarifa compra Circuito" = '' THEN
                       rParC."Cont. Tarifa compra Circuito" := Text011 + '0000000';
                     //+$001 >
                     REPEAT
                       rParC."Cont. Tarifa compra Circuito" := INCSTR(rParC."Cont. Tarifa compra Circuito");
                     UNTIL NOT rTar.GET(Delegacion, "Tipo Tarifa", rParC."Cont. Tarifa compra Circuito");
                     "N§ Tarifa" := rParC."Cont. Tarifa compra Circuito";
                   END;
                   "Tipo Tarifa"::Visita:
                   BEGIN
                     //-$001rParC.TESTFIELD("Cont. Tarifa Visita Circuito");
                     //+$001 <
                     IF rParC."Cont. Tarifa compra Circuito" = '' THEN
                       rParC."Cont. Tarifa compra Circuito" := Text011 + '0000000';
                     //+$001 >
                     REPEAT
                       rParC."Cont. Tarifa compra Circuito" := INCSTR(rParC."Cont. Tarifa compra Circuito");
                     UNTIL NOT rTar.GET(Delegacion, "Tipo Tarifa", rParC."Cont. Tarifa compra Circuito");
                     "N§ Tarifa" := rParC."Cont. Tarifa compra Circuito";
                   END;
                   "Tipo Tarifa"::"Guia Oficial":
                   BEGIN
                     //-$001rParC.TESTFIELD("Cont. Tarifa Guia Ofi Circuito");
                     //+$001 <
                     IF rParC."Cont. Tarifa compra Circuito" = '' THEN
                       rParC."Cont. Tarifa compra Circuito" := Text011 + '0000000';
                     //+$001 >
                     REPEAT
                       rParC."Cont. Tarifa compra Circuito" := INCSTR(rParC."Cont. Tarifa compra Circuito");
                     UNTIL NOT rTar.GET(Delegacion, "Tipo Tarifa"::Transportista, rParC."Cont. Tarifa compra Circuito");
                     "N§ Tarifa" := rParC."Cont. Tarifa compra Circuito";
                   END;
                   "Tipo Tarifa"::"Guia Acompa¤ante":
                   BEGIN
                     //-$001rParC.TESTFIELD("Cont. Tarifa Guia Aco Circuito");
                     //+$001 <
                     IF rParC."Cont. Tarifa compra Circuito" = '' THEN
                       rParC."Cont. Tarifa compra Circuito" := Text011 + '0000000';
                     //+$001 >
                     REPEAT
                       rParC."Cont. Tarifa compra Circuito" := INCSTR(rParC."Cont. Tarifa compra Circuito");
                     UNTIL NOT rTar.GET(Delegacion, "Tipo Tarifa"::Transportista, rParC."Cont. Tarifa compra Circuito");
                     "N§ Tarifa" := rParC."Cont. Tarifa compra Circuito";
                   END;
                   "Tipo Tarifa"::Extra:
                   BEGIN
                     //-$001rParC.TESTFIELD("Cont. Tarifa Extra Circuito");
                     //+$001 <
                     IF rParC."Cont. Tarifa compra Circuito" = '' THEN
                       rParC."Cont. Tarifa compra Circuito" := Text011 + '0000000';
                     //+$001 >
                     REPEAT
                       rParC."Cont. Tarifa compra Circuito" := INCSTR(rParC."Cont. Tarifa compra Circuito");
                     UNTIL NOT rTar.GET(Delegacion, "Tipo Tarifa"::Transportista, rParC."Cont. Tarifa compra Circuito");
                     "N§ Tarifa" := rParC."Cont. Tarifa compra Circuito";
                   END;
                   "Tipo Tarifa"::Hotel:
                   BEGIN
                     //-$001rParC.TESTFIELD(rParC."Cont. Tarifa Hotel Circuito");
                     //+$001 <
                     IF rParC."Cont. Tarifa compra Circuito" = '' THEN
                       rParC."Cont. Tarifa compra Circuito" := Text011 + '0000000';
                     //+$001 >
                     REPEAT
                       rParC."Cont. Tarifa compra Circuito" := INCSTR(rParC."Cont. Tarifa compra Circuito");
                     UNTIL NOT rTar.GET(Delegacion, "Tipo Tarifa"::Transportista, rParC."Cont. Tarifa compra Circuito");
                     "N§ Tarifa" := rParC."Cont. Tarifa compra Circuito";
                   END;
                 END;
                 rParC.MODIFY;
               END;
             END;

    OnModify=BEGIN
               Confirmado := Activar_Tarifa;
             END;

    OnDelete=VAR
               rPreTra@1103355000 : Record 7010197;
               rPreRes@1103355001 : Record 7010198;
               rPreGui@1103355002 : Record 7010199;
               rPreExt@1103355003 : Record 7010200;
               rPreVis@1103355004 : Record 7010201;
             BEGIN
               CASE "Tipo Tarifa" OF
                 "Tipo Tarifa"::Transportista: BEGIN
                   rPreTra.RESET;
                   rPreTra.SETRANGE(Delegacion , Delegacion);
                   rPreTra.SETRANGE("N§ Tarifa", "N§ Tarifa");
                   IF rPreTra.FINDSET(TRUE) THEN
                     rPreTra.DELETEALL;
                 END;
                 "Tipo Tarifa"::Restaurante: BEGIN
                   rPreRes.RESET;
                   rPreRes.SETRANGE(Delegacion , Delegacion);
                   rPreRes.SETRANGE("N§ Tarifa", "N§ Tarifa");
                   IF rPreRes.FINDSET(TRUE) THEN
                     rPreRes.DELETEALL;
                   rPreExt.RESET;
                   rPreExt.SETRANGE(Delegacion  , Delegacion);
                   rPreExt.SETRANGE("Tipo Extra", rPreExt."Tipo Extra"::Restaurante);
                   rPreExt.SETRANGE("N§ Tarifa" , "N§ Tarifa");
                   IF rPreExt.FINDSET(TRUE) THEN
                     rPreExt.DELETEALL;
                 END;
                 "Tipo Tarifa"::"Guia Acompa¤ante": BEGIN
                   rPreGui.RESET;
                   rPreGui.SETRANGE(Delegacion , Delegacion);
                   rPreGui.SETRANGE("N§ Tarifa", "N§ Tarifa");
                   rPreGui.SETRANGE("Tipo Guia", rPreGui."Tipo Guia"::Acompa¤ante);
                   IF rPreGui.FINDSET(TRUE) THEN
                     rPreGui.DELETEALL;
                 END;
                 "Tipo Tarifa"::"Guia Oficial": BEGIN
                   rPreGui.RESET;
                   rPreGui.SETRANGE(Delegacion , Delegacion);
                   rPreGui.SETRANGE("N§ Tarifa", "N§ Tarifa");
                   rPreGui.SETRANGE("Tipo Guia", rPreGui."Tipo Guia"::Oficial);
                   IF rPreGui.FINDSET(TRUE) THEN
                     rPreGui.DELETEALL;
                 END;
                 "Tipo Tarifa"::Extra: BEGIN
                   rPreExt.RESET;
                   rPreExt.SETRANGE(Delegacion  , Delegacion);
                   rPreExt.SETRANGE("Tipo Extra", rPreExt."Tipo Extra"::Varios);
                   rPreExt.SETRANGE("N§ Tarifa" , "N§ Tarifa");
                   IF rPreExt.FINDSET(TRUE) THEN
                     rPreExt.DELETEALL;
                 END;
                 "Tipo Tarifa"::Visita: BEGIN
                   rPreVis.RESET;
                   rPreVis.SETRANGE(Delegacion , Delegacion);
                   rPreVis.SETRANGE("N§ Tarifa", "N§ Tarifa");
                   IF rPreVis.FINDSET(TRUE) THEN
                     rPreVis.DELETEALL;
                   rPreExt.RESET;
                   rPreExt.SETRANGE(Delegacion  , Delegacion);
                   rPreExt.SETRANGE("Tipo Extra", rPreExt."Tipo Extra"::Visita);
                   rPreExt.SETRANGE("N§ Tarifa" , "N§ Tarifa");
                   IF rPreExt.FINDSET(TRUE) THEN
                     rPreExt.DELETEALL;
                 END;
                 "Tipo Tarifa"::Hotel: BEGIN
                   rPreExt.RESET;
                   rPreExt.SETRANGE(Delegacion  , Delegacion);
                   rPreExt.SETRANGE("Tipo Extra", rPreExt."Tipo Extra"::Hotel);
                   rPreExt.SETRANGE("N§ Tarifa" , "N§ Tarifa");
                   IF rPreExt.FINDSET(TRUE) THEN
                     rPreExt.DELETEALL;
                 END;
               END;
             END;

    CaptionML=[ENU=Roundtrip Purchase Tariff;
               ESP=Tarifa Compra Circuito];
    LookupFormID=Form7010255;
    DrillDownFormID=Form7010255;
  }
  FIELDS
  {
    { 1   ;   ;Delegacion          ;Code10        ;TableRelation=Delegacion.Codigo;
                                                   CaptionML=[ENU=Local Office;
                                                              ESP=Delegacion];
                                                   Description=PK, FK Delegacion;
                                                   Editable=No }
    { 2   ;   ;Tipo Tarifa         ;Option        ;CaptionML=[ENU=Tariff type;
                                                              ESP=Tipo Tarifa];
                                                   OptionCaptionML=[ENU=Carrier,Restaurant,Visit,Companion Guide,Official guide,Extra,Hotel;
                                                                    ESP=Transportista,Restaurante,Visita,Guia Acompa¤ante,Guia Oficial,Extra,Hotel];
                                                   OptionString=Transportista,Restaurante,Visita,Guia Acompa¤ante,Guia Oficial,Extra,Hotel;
                                                   Description=PK }
    { 3   ;   ;N§ Tarifa           ;Code10        ;ValidateTableRelation=No;
                                                   CaptionML=[ENU=Tariff No.;
                                                              ESP=N§ Tarifa];
                                                   Description=PK }
    { 5   ;   ;Fecha inicio        ;Date          ;OnValidate=BEGIN
                                                                IF "Fecha inicio" <> xRec."Fecha inicio" THEN BEGIN
                                                                  IF "Fecha final" <> 0D THEN BEGIN
                                                                    IF "Fecha inicio" > "Fecha final" THEN
                                                                      ERROR(Text002);
                                                                  END;

                                                                  rHist.Intro_Historico(Delegacion, "Tipo Tarifa", "N§ Tarifa", FIELDCAPTION("Fecha inicio"),
                                                                                        STRSUBSTNO('%1', xRec."Fecha inicio"), STRSUBSTNO('%1', "Fecha inicio"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Starting Date;
                                                              ESP=Fecha inicio] }
    { 7   ;   ;Fecha final         ;Date          ;OnValidate=BEGIN
                                                                IF "Fecha final" <> xRec."Fecha final" THEN BEGIN
                                                                  IF "Fecha inicio" <> 0D THEN BEGIN
                                                                    IF "Fecha inicio" > "Fecha final" THEN
                                                                      ERROR(Text002);
                                                                  END;

                                                                  rHist.Intro_Historico(Delegacion, "Tipo Tarifa", "N§ Tarifa", FIELDCAPTION("Fecha final"),
                                                                                        STRSUBSTNO('%1', xRec."Fecha final"), STRSUBSTNO('%1', "Fecha final"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Ending Date;
                                                              ESP=Fecha Final] }
    { 9   ;   ;Proveedor           ;Code20        ;TableRelation=IF (Tipo Tarifa=FILTER(<>Hotel)) Vendor.No.
                                                                 ELSE IF (Tipo Tarifa=CONST(Hotel)) Hotel.Hotel;
                                                   OnValidate=BEGIN
                                                                IF Proveedor <> xRec.Proveedor THEN
                                                                BEGIN
                                                                  IF xRec.Proveedor <> '' THEN
                                                                  BEGIN
                                                                    IF NOT CONFIRM(Text003) THEN
                                                                      ERROR(Text004);
                                                                  END;

                                                                  _GetVendorSetup; //+$002

                                                                  rHist.Intro_Historico(Delegacion, "Tipo Tarifa", "N§ Tarifa", FIELDCAPTION(Proveedor),
                                                                                        xRec.Proveedor, Proveedor);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Supplier;
                                                              ESP=Proveedor];
                                                   Description=FK Proveedor }
    { 11  ;   ;Impuestos incluidos ;Boolean       ;OnValidate=BEGIN
                                                                IF "Impuestos incluidos" <> xRec."Impuestos incluidos" THEN
                                                                  rHist.Intro_Historico(Delegacion, "Tipo Tarifa", "N§ Tarifa",FIELDCAPTION("Impuestos incluidos"),
                                                                                        STRSUBSTNO('%1', xRec."Impuestos incluidos"), STRSUBSTNO('%1', "Impuestos incluidos"));
                                                              END;

                                                   CaptionML=[ENU=Included Taxes;
                                                              ESP=Impuestos incluidos] }
    { 13  ;   ;Grupo registro iva prod.;Code10    ;TableRelation="VAT Product Posting Group".Code;
                                                   OnValidate=BEGIN
                                                                IF "Grupo registro iva prod." <> xRec."Grupo registro iva prod." THEN
                                                                  rHist.Intro_Historico(Delegacion, "Tipo Tarifa", "N§ Tarifa", FIELDCAPTION("Grupo registro iva prod."),
                                                                                        xRec."Grupo registro iva prod.", "Grupo registro iva prod.");
                                                              END;

                                                   CaptionML=[ENU=VAT Prod. posting group;
                                                              ESP=Grupo registro iva prod.];
                                                   NotBlank=Yes;
                                                   Description=FK Gr. Contable Producto }
    { 15  ;   ;Cod. Terminos Pago  ;Code10        ;TableRelation="Payment Terms".Code;
                                                   OnValidate=BEGIN
                                                                IF "Cod. Terminos Pago" <> xRec."Cod. Terminos Pago" THEN
                                                                  rHist.Intro_Historico(Delegacion, "Tipo Tarifa", "N§ Tarifa", FIELDCAPTION("Cod. Terminos Pago"),
                                                                                        xRec."Cod. Terminos Pago", "Cod. Terminos Pago");
                                                              END;

                                                   CaptionML=[ENU=Payment terms code;
                                                              ESP=Cod. Terminos Pago];
                                                   Description=FK Terminos Pago }
    { 17  ;   ;Cod. Formas Pago    ;Code10        ;TableRelation="Payment Method".Code;
                                                   OnValidate=BEGIN
                                                                IF "Cod. Formas Pago" <> xRec."Cod. Formas Pago" THEN
                                                                  rHist.Intro_Historico(Delegacion, "Tipo Tarifa", "N§ Tarifa", FIELDCAPTION("Cod. Formas Pago"),
                                                                                        xRec."Cod. Formas Pago", "Cod. Formas Pago");
                                                              END;

                                                   CaptionML=[ENU=Payment methods code;
                                                              ESP=Cod. Formas Pago];
                                                   Description=FK Cod. Forma Pago }
    { 19  ;   ;Cod. Serie          ;Code10        ;TableRelation="No. Series".Code;
                                                   OnValidate=BEGIN
                                                                IF "Cod. Serie" <> xRec."Cod. Serie" THEN
                                                                  rHist.Intro_Historico(Delegacion, "Tipo Tarifa", "N§ Tarifa", FIELDCAPTION("Cod. Serie"),
                                                                                        xRec."Cod. Serie", "Cod. Serie");
                                                              END;

                                                   CaptionML=[ENU=Serial code;
                                                              ESP=Cod. Serie];
                                                   Description=FK N§ Serie }
    { 21  ;   ;Confirmado          ;Boolean       ;CaptionML=[ENU=Confirmed;
                                                              ESP=Confirmado];
                                                   Editable=No }
    { 23  ;   ;Circuito            ;Code10        ;TableRelation="Maestro circuitos".Circuito;
                                                   OnValidate=BEGIN
                                                                IF Circuito <> xRec.Circuito THEN
                                                                  rHist.Intro_Historico(Delegacion, "Tipo Tarifa", "N§ Tarifa", FIELDCAPTION(Circuito),
                                                                                        xRec.Circuito, Circuito);
                                                              END;

                                                   CaptionML=[ENU=Roundtrip;
                                                              ESP=Circuito];
                                                   Description=FK Maestro Circuitos }
    { 25  ;   ;Pax Maximo          ;Integer       ;OnValidate=BEGIN
                                                                IF "Pax Maximo" <> xRec."Pax Maximo" THEN
                                                                  rHist.Intro_Historico(Delegacion, "Tipo Tarifa", "N§ Tarifa", FIELDCAPTION("Pax Maximo"),
                                                                                        STRSUBSTNO('%1', xRec."Pax Maximo"), STRSUBSTNO('%1', "Pax Maximo"));
                                                              END;

                                                   CaptionML=[ENU=Maximum pax;
                                                              ESP=Pax Maximo] }
    { 27  ;   ;C¢d. divisa         ;Code10        ;TableRelation=Currency;
                                                   OnValidate=BEGIN
                                                                IF "C¢d. divisa" <> xRec."C¢d. divisa" THEN
                                                                  rHist.Intro_Historico(Delegacion, "Tipo Tarifa", "N§ Tarifa", FIELDCAPTION("C¢d. divisa"),
                                                                                        xRec."C¢d. divisa", "C¢d. divisa");
                                                              END;

                                                   CaptionML=[ENU=Currency exchange;
                                                              ESP=C¢d. divisa];
                                                   Description=FK Divisa }
  }
  KEYS
  {
    {    ;Delegacion,Tipo Tarifa,N§ Tarifa        ;Clustered=Yes }
    {    ;Proveedor,Fecha inicio,Fecha final      ;KeyGroups=RENUMERING }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text002@1103355007 : TextConst 'ENU=Starting date cannot be higher than final date;ESP=La fecha de inicio no puede ser posterior a la de final.';
      Text003@1103355008 : TextConst 'ENU=Are you sure about to change the supplier from the contract?;ESP=Esta seguro de que desea cambiar el proveedor del contrato.';
      Text004@1103355009 : TextConst 'ENU=Cancelled change;ESP=Cambio anulado.';
      Text005@1103355010 : TextConst 'ENU=This tariff overlaps with another already entered.;ESP=Esta tarifa se solapa con otra ya introducida.';
      Text009@1103355014 : TextConst 'ENU=Copy the Purchase tariff %1 on the new tariff %2?;ESP=Copiar la tarifa Compra %1 sobre la nueva tarifa %2?';
      Text010@1103355015 : TextConst 'ENU=There is no tariff to be copied;ESP=No hay tarifa para copiar';
      rPar@1103355000 : Record 7009700;
      rParC@1103355001 : Record 7010185;
      rTar@1103355002 : Record 7010196;
      Ventana@1103355003 : Dialog;
      rHist@1103355004 : Record 7010208;
      Text011@1100217000 : TextConst 'ENU=RPT;ESP=TCC';

    PROCEDURE Activar_Tarifa@1() : Boolean;
    VAR
      rPrec@1103355000 : Record 7010196;
    BEGIN
      // Activar_Tarifa

      IF ("Fecha inicio" = 0D) OR ("Fecha final" = 0D) THEN
        EXIT(FALSE);

      rPrec.RESET;
      rPrec.SETRANGE (Delegacion    , Delegacion);
      rPrec.SETRANGE ("Tipo Tarifa" , "Tipo Tarifa");
      rPrec.SETFILTER("N§ Tarifa"   , '<>%1', "N§ Tarifa");
      rPrec.SETRANGE (Proveedor     , Proveedor);
      rPrec.SETRANGE (Circuito      , Circuito);
      rPrec.SETRANGE (Confirmado    , TRUE);

      rPrec.SETFILTER("Fecha inicio", '<=%1', "Fecha inicio");
      rPrec.SETFILTER("Fecha final" , '>=%1', "Fecha inicio");
      IF rPrec.FINDFIRST THEN BEGIN
        MESSAGE(Text005);
        EXIT(FALSE);
      END;

      rPrec.SETFILTER("Fecha inicio", '<=%1', "Fecha final");
      rPrec.SETFILTER("Fecha final" , '>=%1', "Fecha final");
      IF rPrec.FINDFIRST THEN BEGIN
        MESSAGE(Text005);
        EXIT(FALSE);
      END;

      rPrec.SETFILTER("Fecha inicio", '>=%1', "Fecha inicio");
      rPrec.SETFILTER("Fecha final" , '<=%1', "Fecha final");
      IF rPrec.FINDFIRST THEN BEGIN
        MESSAGE(Text005);
        EXIT(FALSE);
      END;

      EXIT(TRUE);
    END;

    PROCEDURE Copiar_Tarifa@6(rContrato@1103355000 : Record 7010196);
    VAR
      rConC@1103355001 : Record 7010196;
      rConC2@1103355002 : Record 7010196;
      NewTarifa@1103355003 : Code[10];
    BEGIN
      // Copiar_Tarifa

      IF rConC.GET(rContrato.Delegacion, rContrato."Tipo Tarifa", rContrato."N§ Tarifa") THEN
      BEGIN
        //-$001Ventana.OPEN(Text006 +
        //-$001             Text007);
        //-$001Ventana.INPUT(1, NewTarifa);
        //-$001Ventana.CLOSE;

        //-$001IF (NewTarifa <> '') AND rConC2.GET(rConC.Delegacion, rContrato."Tipo Tarifa", NewTarifa) THEN
        //-$001  ERROR(Text008, NewTarifa);

        Tarifa_Compra(rConC, NewTarifa);

        IF NOT CONFIRM(STRSUBSTNO(Text009,
                       rConC."N§ Tarifa", NewTarifa)) THEN
        BEGIN
          IF rConC.GET(rContrato.Delegacion, rContrato."Tipo Tarifa", NewTarifa) THEN
            rConC.DELETE;
          EXIT;
        END;

        Precios_Compra(rConC, NewTarifa);
      END
      ELSE
        ERROR(Text010);
    END;

    PROCEDURE Tarifa_Compra@12(ConC@1103355000 : Record 7010196;VAR NewTarifa@1103355001 : Code[10]);
    VAR
      ConC2@1103355002 : Record 7010196;
    BEGIN
      // Tarifa_compra

      ConC2.TRANSFERFIELDS(ConC);
      ConC2.VALIDATE("N§ Tarifa", NewTarifa);
      ConC2.Confirmado := FALSE;
      ConC2.INSERT(TRUE);
      IF NewTarifa = '' THEN
        NewTarifa := ConC2."N§ Tarifa";
    END;

    PROCEDURE Precios_Compra@16(ConC@1103355000 : Record 7010196;NewTarifa@1103355001 : Code[10]);
    VAR
      rPreRes@1103355002 : Record 7010198;
      rPreRes2@1103355003 : Record 7010198;
      rPreTra@1103355004 : Record 7010197;
      rPreTra2@1103355005 : Record 7010197;
      rPreGui@1103355006 : Record 7010199;
      rPreGui2@1103355007 : Record 7010199;
      rPreVis@1103355008 : Record 7010201;
      rPreVis2@1103355009 : Record 7010201;
      rPreExt@1103355010 : Record 7010200;
      rPreExt2@1103355011 : Record 7010200;
    BEGIN
      // precios_compra

      CASE ConC."Tipo Tarifa" OF
        ConC."Tipo Tarifa"::Transportista:
        BEGIN
          rPreTra.RESET;
          rPreTra.SETRANGE(Delegacion , ConC.Delegacion);
          rPreTra.SETRANGE("N§ Tarifa", ConC."N§ Tarifa");
          IF rPreTra.FINDSET THEN
            REPEAT
              rPreTra2.TRANSFERFIELDS(rPreTra);
              rPreTra2."N§ Tarifa" := NewTarifa;
              rPreTra2.Activo      := FALSE;
              rPreTra2.INSERT;
            UNTIL rPreTra.NEXT = 0;
        END;
        ConC."Tipo Tarifa"::Restaurante:
        BEGIN
          rPreRes.RESET;
          rPreRes.SETRANGE(Delegacion , ConC.Delegacion);
          rPreRes.SETRANGE("N§ Tarifa", ConC."N§ Tarifa");
          IF rPreRes.FINDSET THEN
            REPEAT
              rPreRes2.TRANSFERFIELDS(rPreRes);
              rPreRes2."N§ Tarifa" := NewTarifa;
              rPreRes2.Activo      := FALSE;
              rPreRes2.INSERT;
            UNTIL rPreRes.NEXT = 0;
        END;
        ConC."Tipo Tarifa"::"Guia Oficial", ConC."Tipo Tarifa"::"Guia Acompa¤ante":
        BEGIN
          rPreGui.RESET;
          rPreGui.SETRANGE(Delegacion , ConC.Delegacion);
          rPreGui.SETRANGE("N§ Tarifa", ConC."N§ Tarifa");
          IF rPreGui.FINDSET THEN
            REPEAT
              rPreGui2.TRANSFERFIELDS(rPreGui);
              rPreGui2."N§ Tarifa" := NewTarifa;
              rPreGui2.Activo      := FALSE;
              rPreGui2.INSERT;
            UNTIL rPreGui.NEXT = 0;
        END;
        ConC."Tipo Tarifa"::Visita:
        BEGIN
          rPreVis.RESET;
          rPreVis.SETRANGE(Delegacion , ConC.Delegacion);
          rPreVis.SETRANGE("N§ Tarifa", ConC."N§ Tarifa");
          IF rPreVis.FINDSET THEN
            REPEAT
              rPreVis2.TRANSFERFIELDS(rPreVis);
              rPreVis2."N§ Tarifa" := NewTarifa;
              rPreVis2.Activo      := FALSE;
              rPreVis2.INSERT;
            UNTIL rPreVis.NEXT = 0;
        END;
        ConC."Tipo Tarifa"::Extra, ConC."Tipo Tarifa"::Hotel:
        BEGIN
          rPreExt.RESET;
          rPreExt.SETRANGE(Delegacion , ConC.Delegacion);
          rPreExt.SETRANGE("N§ Tarifa", ConC."N§ Tarifa");
          IF rPreExt.FINDSET THEN
            REPEAT
              rPreExt2.TRANSFERFIELDS(rPreExt);
              rPreExt2."N§ Tarifa" := NewTarifa;
              rPreExt2.Activo      := FALSE;
              rPreExt2.INSERT;
            UNTIL rPreExt.NEXT = 0;
        END;
      END;
    END;

    LOCAL PROCEDURE _GetVendorSetup@1100217000();
    VAR
      lrVendor@1100217000 : Record 23;
    BEGIN
      // _GetVendorSetup

      IF NOT lrVendor.GET(Proveedor) THEN
        EXIT;

      "Cod. Terminos Pago"       := lrVendor."Payment Terms Code";
      "Cod. Formas Pago"         := lrVendor."Payment Method Code";
    END;

    BEGIN
    {
      $001 AJS 27122012 Modifico la funcion de copia tarifa para que no pida numero, no es operativo

      $002 AJS 28022014 Nueva funcion _GetVendorSetup para rellenar los valores a partir de la ficha de proveedor
    }
    END.
  }
}
