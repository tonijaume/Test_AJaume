OBJECT Table 7010310 Garaje
{
  OBJECT-PROPERTIES
  {
    Date=20/11/14;
    Time=18:23:15;
    Modified=Yes;
    Version List=TRANSFER;
  }
  PROPERTIES
  {
    OnInsert=BEGIN

               // AJS 26.01.2004
               // Convertir el garaje en un codigo de dimension

               GLSetup.FINDFIRST;

               rDimVal.INIT;
               rDimVal.VALIDATE("Dimension Code", GLSetup."Global Dimension 1 Code");
               rDimVal.VALIDATE(Code            , Garaje);
               rDimVal.VALIDATE(Name            , Nombre);
               rDimVal.INSERT(TRUE);
             END;

    OnModify=BEGIN
               // AJS 26.01.2004
               // Convertir el garaje en un codigo de dimension

               GLSetup.FINDFIRST;

               rDimVal.INIT;
               IF rDimVal.GET(GLSetup."Global Dimension 1 Code", Garaje) THEN BEGIN
                 rDimVal.VALIDATE(Name, Nombre);
                 rDimVal.MODIFY(TRUE);
               END;
             END;

    OnDelete=VAR
               lrUsuTR@1103355000 : Record 7010420;
             BEGIN
               CLEAR(lrUsuTR); lrUsuTR.RESET;
               lrUsuTR.SETRANGE("Garaje de trabajo", Garaje);
               IF lrUsuTR.FINDFIRST THEN
                 ERROR(err1, lrUsuTR.Usuario);

               rParte.RESET; rParte.INIT;
               rParte.SETRANGE(Garaje, Garaje);
               IF rParte.FINDFIRST THEN
                 ERROR(parte_asignado);
             END;

    OnRename=BEGIN
               ERROR(err2);
             END;

    CaptionML=ESP=Garaje;
    LookupFormID=Form7010322;
    DrillDownFormID=Form7010322;
  }
  FIELDS
  {
    { 1   ;   ;Garaje              ;Code10        ;CaptionML=ESP=Garaje;
                                                   SQL Data Type=Varchar;
                                                   NotBlank=Yes;
                                                   Description=PK }
    { 3   ;   ;Nombre              ;Text50        ;CaptionML=ESP=Nombre }
    { 5   ;   ;Direccion           ;Text50        ;CaptionML=ESP=Direccion;
                                                   Title=Yes }
    { 7   ;   ;Poblacion           ;Text50        ;CaptionML=ESP=Poblacion;
                                                   Title=Yes }
    { 9   ;   ;N§ Telefono         ;Text20        ;CaptionML=ESP=N§ Telefono }
    { 11  ;   ;N§ Fax              ;Text20        ;CaptionML=ESP=N§ Fax }
    { 13  ;   ;C.P.                ;Text20        ;TableRelation="Post Code";
                                                   OnValidate=VAR
                                                                rCodPos@1100244000 : Record 225;
                                                              BEGIN
                                                                IF rCodPos.GET("C.P.") THEN BEGIN
                                                                  Poblacion := rCodPos.City;
                                                                  Provincia := rCodPos.CountyText;
                                                                END;
                                                              END;

                                                   CaptionML=ESP=C.P.;
                                                   Description=FK Codigo Postal }
    { 15  ;   ;Provincia           ;Text50        ;CaptionML=ESP=Provincia }
    { 17  ;   ;Correo electronico  ;Text200       ;CaptionML=ESP=Correo electronico }
    { 19  ;   ;Pagina Web          ;Text200       ;CaptionML=ESP=Pagina Web }
    { 21  ;   ;Contacto            ;Text50        ;CaptionML=ESP=Contacto }
    { 23  ;   ;Filtro fecha        ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=ESP=Filtro fecha }
    { 24  ;   ;Cobro Directo       ;Boolean       ;OnValidate=BEGIN
                                                                IF NOT "Cobro Directo" THEN
                                                                  CLEAR("Banco Cobro");
                                                              END;

                                                   CaptionML=ESP=Cobro Directo;
                                                   Description=Indica si los servicios de este garaje son de cobro directo }
    { 25  ;   ;Banco Cobro         ;Code20        ;TableRelation="Bank Account".No.;
                                                   OnValidate=BEGIN
                                                                IF "Banco Cobro" <>'' THEN
                                                                  IF NOT "Cobro Directo" THEN
                                                                    FIELDERROR("Cobro Directo",Text0001);
                                                              END;

                                                   CaptionML=ESP=Banco Cobro }
    { 30  ;   ;Garaje para servicios peque¤os;Integer;
                                                   OnValidate=BEGIN
                                                                IF "Garaje para servicios peque¤os" <> 0  THEN BEGIN
                                                                  // Solo puede haber uno
                                                                  CLEAR(rGaraje);
                                                                  rGaraje.SETFILTER(Garaje ,'<>%1', Garaje);
                                                                  rGaraje.SETFILTER("Garaje para servicios peque¤os",'<>%1',0);
                                                                  IF rGaraje.FINDFIRST THEN
                                                                    ERROR(Text0002);
                                                                END;
                                                              END;

                                                   CaptionML=ESP=Garaje para servicios peque¤os;
                                                   MinValue=0;
                                                   Description=Seleccion automatica garaje }
    { 40  ;   ;Garaje No automatizable;Boolean    ;CaptionML=ESP=Garaje No automatizable;
                                                   Description=Seleccion automatica garaje }
    { 50  ;   ;Abierto             ;Boolean       ;CaptionML=ESP=Abierto;
                                                   Editable=No }
    { 60  ;   ;ID Borna combustible;Code10        ;CaptionML=ESP=ID Borna combustible }
  }
  KEYS
  {
    {    ;Garaje                                  ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      err1@1100244000 : TextConst 'ESP=No se puede borrar este garaje porque el usuario %1 lo tiene asignado, desasigne primero.';
      err2@1100244001 : TextConst 'ESP=No se pueden renombrar garajes.';
      rGaraje@1100253000 : Record 7010310;
      rParte@1100244003 : Record 7010360;
      parte_asignado@1100244004 : TextConst 'ESP=No se puede borrar un garaje que tiene partes asignados.';
      rDimVal@1100244002 : Record 349;
      GLSetup@1100244005 : Record 98;
      Text0001@1103350000 : TextConst 'ESP=Tiene que ser S¡';
      Text0002@1100253001 : TextConst 'ESP=Solo puede existir un garaje de Servicios Peque¤os';
      Text0003@1100253002 : TextConst 'ESP=¨Desea realmente Abrir el garaje %1 ?';
      Text0004@1100253003 : TextConst 'ESP=¨Desea realmente Cerrar el garaje %1 ?';
      Text0005@1100253004 : TextConst 'ESP=El Garaje %1 tiene zonas fisicas relacionadas. Debe de seleccinar un nuevo garaje para cubrir esas zonas.';
      Text0006@1100253005 : TextConst 'ESP=Ha indicado el mismo garaje';
      Text0007@1100253006 : TextConst 'ESP=No ha indicado ning£n Garaje.';
      Text0008@1100253007 : TextConst 'ESP=El Garaje %1 No est  abierto';
      Text0009@1100253008 : TextConst 'ESP=El Garaje %1 ya est  Abieto';
      Text0010@1100253009 : TextConst 'ESP=El Garaje %1 ya est  Cerrado';
      Text0012@1100253010 : TextConst 'ESP=¨Desea cambiar el Garaje %1 por %2 en todas las zonas relacionadas?';
      Text0013@1103355000 : TextConst 'ESP=AP-GARAJE';
      Text0015@1103355002 : TextConst 'ESP=El usuario %1 No est  autorizado para modificar Garajes';
      Text0016@1103355003 : TextConst 'ESP=El garaje %1 est  cerrado';

    PROCEDURE AbrirGaraje@1100253000();
    VAR
      lrZon@1100253000 : Record 7010314;
    BEGIN
      // AbrirGaraje

      RestriccionesGaraje;

      IF Abierto THEN
        ERROR(Text0009, Garaje);

      IF NOT CONFIRM(Text0003, FALSE, Garaje) THEN
        EXIT;

      CLEAR(lrZon);
      lrZon.SETCURRENTKEY("Garaje Predeterminado","Garaje Anterior");
      lrZon.SETRANGE("Garaje Anterior", Garaje);
      IF lrZon.FINDFIRST THEN BEGIN
        lrZon.MODIFYALL("Garaje Predeterminado", Garaje);
        lrZon.MODIFYALL("Garaje Anterior"      , '');
      END;

      VALIDATE(Abierto, TRUE);
      MODIFY(TRUE);
    END;

    PROCEDURE CerrarGaraje@1100253001();
    VAR
      lrZon@1100253000 : Record 7010314;
    BEGIN
      // CerrarGaraje

      RestriccionesGaraje;

      IF NOT Abierto THEN
        ERROR(Text0010, Garaje);


      IF NOT CONFIRM(Text0004, FALSE, Garaje) THEN
        EXIT;

      CLEAR(lrZon);
      lrZon.SETCURRENTKEY("Garaje Predeterminado","Garaje Anterior");
      lrZon.SETRANGE("Garaje Predeterminado", Garaje);
      IF lrZon.FINDFIRST THEN BEGIN
        IF NOT CONFIRM(Text0005) THEN
          EXIT;
        CLEAR(rGaraje);
        rGaraje.FILTERGROUP(2);
        rGaraje.SETFILTER(Garaje, '<>%1', Garaje);
        rGaraje.SETRANGE (Abierto, TRUE);
        rGaraje.FILTERGROUP(0);
        IF FORM.RUNMODAL(0, rGaraje)<> ACTION::LookupOK THEN
          EXIT;
        IF rGaraje.Garaje = Garaje THEN
          ERROR(Text0006);
        IF rGaraje.Garaje ='' THEN
          ERROR(Text0007);
        IF NOT rGaraje.Abierto THEN
          ERROR(Text0008, rGaraje.Garaje);

        IF NOT CONFIRM(Text0012, FALSE, Garaje, rGaraje.Garaje) THEN
          EXIT;
        lrZon.MODIFYALL("Garaje Anterior"       , Garaje);
        lrZon.MODIFYALL("Garaje Predeterminado" , rGaraje.Garaje);
      END;

      VALIDATE(Abierto, FALSE);
      MODIFY(TRUE)
    END;

    PROCEDURE RestriccionesGaraje@1103355000();
    VAR
      lrUsu@1103355001 : Record 7010420;
      lrAcc@1103355000 : Record 7010422;
    BEGIN
      // RestriccionesGaraje
      // Comprueba que el usuario No tenga restricciones de Garaje

      IF NOT lrUsu.GET(USERID) THEN BEGIN
        lrUsu.INIT;
        lrUsu.Usuario := USERID;
        lrUsu.INSERT;
      END;

      IF lrAcc.GET(lrUsu."Perfil Transfer", Text0013) THEN
        ERROR(Text0015, USERID);
    END;

    PROCEDURE ControlCerrado@1103355001(pwGaraje@1103355000 : Code[10]);
    BEGIN
      // ControlCerrado
      // Genera un error si el garaje est  cerrado

      IF pwGaraje='' THEN
        EXIT;
      CLEAR(rGaraje);
      rGaraje.GET(pwGaraje);
      IF NOT rGaraje.Abierto THEN
        ERROR(Text0016, rGaraje.Garaje);
    END;

    BEGIN
    END.
  }
}
