OBJECT Table 7000002 Cartera Doc.
{
  OBJECT-PROPERTIES
  {
    Date=10/11/11;
    Time=12:00:00;
    Version List=NAVES6.00,RegF269949;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF Type = Type::Payable THEN
                 ElectPmtMgmt.GetTransferType("Account No.","Remaining Amount","Transfer Type",FALSE);
             END;

    OnModify=BEGIN
               TESTFIELD("Elect. Pmts Exported",FALSE);
             END;

    OnDelete=BEGIN
               TESTFIELD("Elect. Pmts Exported",FALSE);
             END;

    OnRename=BEGIN
               TESTFIELD("Elect. Pmts Exported",FALSE);
             END;

    CaptionML=[ENU=Cartera Doc.;
               ESP=Doc. cartera];
    LookupFormID=Form7000003;
    DrillDownFormID=Form7000003;
  }
  FIELDS
  {
    { 1   ;   ;Type                ;Option        ;CaptionML=[ENU=Type;
                                                              ESP=Tipo];
                                                   OptionCaptionML=[ENU=Receivable,Payable;
                                                                    ESP=A cobrar,A pagar];
                                                   OptionString=Receivable,Payable }
    { 2   ;   ;Entry No.           ;Integer       ;CaptionML=[ENU=Entry No.;
                                                              ESP=N§ mov.] }
    { 3   ;   ;No.                 ;Code20        ;CaptionML=[ENU=No.;
                                                              ESP=N§] }
    { 4   ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              ESP=Fecha registro] }
    { 5   ;   ;Document No.        ;Code20        ;CaptionML=[ENU=Document No.;
                                                              ESP=N§ documento] }
    { 6   ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              ESP=Descripci¢n] }
    { 9   ;   ;Remaining Amount    ;Decimal       ;CaptionML=[ENU=Remaining Amount;
                                                              ESP=Importe pendiente];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 10  ;   ;Remaining Amt. (LCY);Decimal       ;CaptionML=[ENU=Remaining Amt. (LCY);
                                                              ESP=Importe pendiente (DL)];
                                                   AutoFormatType=1 }
    { 11  ;   ;Due Date            ;Date          ;OnValidate=VAR
                                                                DocEdit@1000 : Codeunit 7000008;
                                                              BEGIN
                                                                CheckDueDate;
                                                                DocEdit.EditDueDate(Rec);

                                                                MODIFY;

                                                                ResetNoPrinted;
                                                              END;

                                                   CaptionML=[ENU=Due Date;
                                                              ESP=Fecha vencimiento] }
    { 12  ;   ;Payment Method Code ;Code10        ;TableRelation="Payment Method";
                                                   CaptionML=[ENU=Payment Method Code;
                                                              ESP=C¢d. forma pago] }
    { 13  ;   ;Accepted            ;Option        ;CaptionML=[ENU=Accepted;
                                                              ESP=Aceptado];
                                                   OptionCaptionML=[ENU=Not Required,Yes,No;
                                                                    ESP=Innecesario,S¡,No];
                                                   OptionString=Not Required,Yes,No }
    { 14  ;   ;Place               ;Boolean       ;CaptionML=[ENU=Place;
                                                              ESP=Plaza] }
    { 15  ;   ;Collection Agent    ;Option        ;CaptionML=[ENU=Collection Agent;
                                                              ESP=Entidad cobro];
                                                   OptionCaptionML=[ENU=Direct,Bank;
                                                                    ESP=Directo,Banco];
                                                   OptionString=Direct,Bank }
    { 16  ;   ;Bill Gr./Pmt. Order No.;Code20     ;TableRelation=IF (Type=CONST(Receivable)) "Bill Group".No.
                                                                 ELSE IF (Type=CONST(Payable)) "Payment Order".No.;
                                                   CaptionML=[ENU=Bill Gr./Pmt. Order No.;
                                                              ESP=N§ remesa/ord. pago] }
    { 17  ;   ;Category Code       ;Code10        ;TableRelation="Category Code";
                                                   CaptionML=[ENU=Category Code;
                                                              ESP=C¢d. clasificaci¢n] }
    { 18  ;   ;Account No.         ;Code20        ;TableRelation=IF (Type=CONST(Receivable)) Customer
                                                                 ELSE IF (Type=CONST(Payable)) Vendor;
                                                   CaptionML=[ENU=Account No.;
                                                              ESP=N§ cuenta] }
    { 19  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=[ENU=Currency Code;
                                                              ESP=C¢d. divisa] }
    { 20  ;   ;Cust./Vendor Bank Acc. Code;Code10 ;TableRelation=IF (Type=CONST(Receivable)) "Customer Bank Account".Code WHERE (Customer No.=FIELD(Account No.))
                                                                 ELSE IF (Type=CONST(Payable)) "Vendor Bank Account".Code WHERE (Vendor No.=FIELD(Account No.));
                                                   OnValidate=BEGIN
                                                                ResetNoPrinted;
                                                              END;

                                                   CaptionML=[ENU=Cust./Vendor Bank Acc. Code;
                                                              ESP=C¢d. banco cliente/prov.] }
    { 21  ;   ;Pmt. Address Code   ;Code10        ;TableRelation=IF (Type=CONST(Receivable)) "Customer Pmt. Address".Code WHERE (Customer No.=FIELD(Account No.))
                                                                 ELSE IF (Type=CONST(Payable)) "Vendor Pmt. Address".Code WHERE (Vendor No.=FIELD(Account No.));
                                                   OnValidate=BEGIN
                                                                ResetNoPrinted;
                                                              END;

                                                   CaptionML=[ENU=Pmt. Address Code;
                                                              ESP=C¢d. direcci¢n pago] }
    { 22  ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=[ENU=Global Dimension 1 Code;
                                                              ESP=C¢d. dimensi¢n global 1];
                                                   CaptionClass='1,1,1' }
    { 23  ;   ;Global Dimension 2 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=[ENU=Global Dimension 2 Code;
                                                              ESP=C¢d. dimensi¢n global 2];
                                                   CaptionClass='1,1,2' }
    { 29  ;   ;Original Amount     ;Decimal       ;CaptionML=[ENU=Original Amount;
                                                              ESP=Importe inicial];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 30  ;   ;Original Amount (LCY);Decimal      ;CaptionML=[ENU=Original Amount (LCY);
                                                              ESP=Importe inicial (DL)];
                                                   AutoFormatType=1 }
    { 40  ;   ;Document Type       ;Option        ;CaptionML=[ENU=Document Type;
                                                              ESP=Tipo documento];
                                                   OptionCaptionML=[ENU=Invoice,,Bill;
                                                                    ESP=Factura,,Efecto];
                                                   OptionString=Invoice,,Bill;
                                                   Editable=No }
    { 45  ;   ;On Hold             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Vendor Ledger Entry" WHERE (On Hold=FILTER(<>''),
                                                                                                  Entry No.=FIELD(Entry No.)));
                                                   CaptionML=[ENU=On Hold;
                                                              ESP=Esperar] }
    { 46  ;   ;Adjusted            ;Boolean       ;CaptionML=[ENU=Adjusted;
                                                              ESP=Ajustado] }
    { 48  ;   ;Adjusted Amount     ;Decimal       ;CaptionML=[ENU=Adjusted Amount;
                                                              ESP=Importe ajustado] }
    { 49  ;   ;From Journal        ;Boolean       ;CaptionML=[ENU=From Journal;
                                                              ESP=Desde diario] }
    { 50  ;   ;Elect. Pmts Exported;Boolean       ;CaptionML=[ENU=Elect. Pmts Exported;
                                                              ESP=Pagos electr. exportados] }
    { 51  ;   ;Export File Name    ;Text30        ;CaptionML=[ENU=Export File Name;
                                                              ESP=Nombre archivo exp.] }
    { 52  ;   ;Transfer Type       ;Option        ;CaptionML=[ENU=Transfer Type;
                                                              ESP=Tipo transferencia];
                                                   OptionCaptionML=[ENU=National,International,Special;
                                                                    ESP=Nacional,Internacional,Especial];
                                                   OptionString=National,International,Special }
  }
  KEYS
  {
    {    ;Type,Entry No.                          ;Clustered=Yes }
    {    ;Type,Document No.                        }
    {    ;Type,Collection Agent,Bill Gr./Pmt. Order No.,Currency Code,Accepted,Due Date,Place;
                                                   SumIndexFields=Remaining Amount,Remaining Amt. (LCY) }
    {    ;Type,Bill Gr./Pmt. Order No.,Category Code,Currency Code,Accepted,Due Date;
                                                   SumIndexFields=Remaining Amount,Remaining Amt. (LCY) }
    { No ;Type,Bill Gr./Pmt. Order No.,Global Dimension 1 Code,Global Dimension 2 Code,Currency Code,Accepted,Due Date,Place;
                                                   SumIndexFields=Remaining Amount,Remaining Amt. (LCY) }
    { No ;Type,Bill Gr./Pmt. Order No.,Global Dimension 1 Code,Global Dimension 2 Code,Category Code,Currency Code,Accepted,Due Date;
                                                   SumIndexFields=Remaining Amount,Remaining Amt. (LCY) }
    {    ;Type,Bill Gr./Pmt. Order No.,Category Code,Currency Code,Account No.,Due Date,Document Type;
                                                   SumIndexFields=Remaining Amount,Remaining Amt. (LCY) }
    {    ;Type,Bill Gr./Pmt. Order No.,Category Code,Currency Code,Accepted,Account No.,Due Date,Document Type;
                                                   SumIndexFields=Remaining Amount,Remaining Amt. (LCY) }
    {    ;Type,Collection Agent,Bill Gr./Pmt. Order No.,Currency Code,Accepted,Due Date,Place,Document Type;
                                                   SumIndexFields=Remaining Amount,Remaining Amt. (LCY) }
    {    ;Type,Bill Gr./Pmt. Order No.,Collection Agent,Due Date,Global Dimension 1 Code,Global Dimension 2 Code,Category Code,Posting Date,Document No.,Accepted,Currency Code,Document Type;
                                                   SumIndexFields=Remaining Amount,Remaining Amt. (LCY) }
    {    ;Type,Bill Gr./Pmt. Order No.,Transfer Type }
    {    ;Type,Bill Gr./Pmt. Order No.,Transfer Type,Account No. }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      BillGr@1100002 : Record 7000005;
      PmtOrd@1100003 : Record 7000020;
      ElectPmtMgmt@1100000 : Codeunit 10701;
      Text001@1100001 : TextConst 'ENU=%1 is more than the legal limit of %2 days after the document date %3 for the original document;ESP=%1 es superior al l¡mite legal de %2 d¡as posteriores a la fecha de emisi¢n documento %3 del documento original';

    PROCEDURE ResetNoPrinted@1();
    BEGIN
      IF "Bill Gr./Pmt. Order No." <> '' THEN
        IF Type = Type::Receivable THEN BEGIN
          BillGr.GET("Bill Gr./Pmt. Order No.");
          BillGr."No. Printed" := 0;
          BillGr.MODIFY;
        END ELSE BEGIN
          PmtOrd.GET("Bill Gr./Pmt. Order No.");
          PmtOrd."No. Printed" := 0;
          PmtOrd.MODIFY;
        END;
    END;

    PROCEDURE CheckDueDate@1100000();
    VAR
      InvoiceSplitPayment@1100004 : Codeunit 7000005;
      DocumentDate@1100006 : Date;
      MaxNoOfDaysTillDueDate@1100000 : Integer;
    BEGIN
      GetDocumentDates(DocumentDate,MaxNoOfDaysTillDueDate);

      IF NOT InvoiceSplitPayment.CheckDueDate("Due Date",DocumentDate,MaxNoOfDaysTillDueDate) THEN
        FIELDERROR("Due Date",STRSUBSTNO(Text001,"Due Date",MaxNoOfDaysTillDueDate,DocumentDate));
    END;

    LOCAL PROCEDURE GetDocumentDates@1100001(VAR DocumentDate@1100000 : Date;VAR MaxNoOfDaysTillDueDate@1100006 : Integer);
    VAR
      PaymentTerms@1100005 : Record 3;
      SalesInvoiceHeader@1100004 : Record 112;
      ServiceInvoiceHeader@1100003 : Record 5992;
      PurchInvHeader@1100002 : Record 122;
    BEGIN
      CASE Type OF
        Type::Receivable:
          BEGIN
            IF SalesInvoiceHeader.GET("Document No.") THEN BEGIN
              PaymentTerms.GET(SalesInvoiceHeader."Payment Terms Code");
              DocumentDate := SalesInvoiceHeader."Document Date";
            END ELSE
              IF ServiceInvoiceHeader.GET("Document No.") THEN BEGIN
                PaymentTerms.GET(ServiceInvoiceHeader."Payment Terms Code");
                DocumentDate := ServiceInvoiceHeader."Document Date";
              END;
          END;
        Type::Payable:
          IF PurchInvHeader.GET("Document No.") THEN BEGIN
            PaymentTerms.GET(PurchInvHeader."Payment Terms Code");
            DocumentDate := PurchInvHeader."Document Date";
          END;
      END;

      MaxNoOfDaysTillDueDate := PaymentTerms."Max. No. of Days till Due Date";
    END;

    BEGIN
    END.
  }
}
