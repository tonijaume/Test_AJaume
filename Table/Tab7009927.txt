OBJECT Table 7009927 Cobro reserva transfer
{
  OBJECT-PROPERTIES
  {
    Date=13/03/15;
    Time=17:02:00;
    Modified=Yes;
    Version List=AIC2009,CNT-CAR-14063;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               _ControlEdicion; //+$014

               CLEAR(rCobr);
               rCobr.SETRANGE(Delegacion   , Delegacion);
               rCobr.SETRANGE("Num Reserva", "Num Reserva");
               IF NOT rCobr.FINDLAST THEN
                 CLEAR(rCobr);
               "ID Cobro" := rCobr."ID Cobro" + 1;

               _DatosReserva;

               _UltimaFechaCambio; //+$011
             END;

    OnModify=BEGIN
               _ControlEdicion; //+$014

               "Fecha Modificacion"  := CURRENTDATETIME;
               "Usuario Modificacion":= USERID;
             END;

    OnDelete=BEGIN
               _ControlEdicion; //+$014

               cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", "Num Reserva", rHis."Tipo Reserva"::Transfer,
                                   Text006, Text006, '');
             END;

    CaptionML=[ENU=Transfer reservation payment;
               ESP=Cobro reserva transfer];
    LookupFormID=Form7009921;
    DrillDownFormID=Form7009921;
  }
  FIELDS
  {
    { 1   ;   ;Delegacion          ;Code10        ;TableRelation=Delegacion.Codigo;
                                                   CaptionML=[ENU=Local Office;
                                                              ESP=Delegacion];
                                                   NotBlank=Yes }
    { 3   ;   ;N§ Interno          ;Integer       ;CaptionML=[ENU=Internal No.;
                                                              ESP=N§ Interno];
                                                   Description=FK Cabecera reserva;
                                                   Editable=No }
    { 5   ;   ;N§ Periodo          ;Integer       ;CaptionML=[ENU=Period No.;
                                                              ESP=N§ Periodo];
                                                   Description=FK Periodo reserva;
                                                   Editable=No }
    { 10  ;   ;Num Reserva         ;Integer       ;TableRelation="Reserva Transfer"."N§ Reserva" WHERE (Delegacion=FIELD(Delegacion));
                                                   CaptionML=[ENU=Reservation No.;
                                                              ESP=Num Reserva];
                                                   NotBlank=Yes }
    { 20  ;   ;ID Cobro            ;Integer       ;CaptionML=[ENU=Payment ID;
                                                              ESP=ID Cobro] }
    { 30  ;   ;Forma de Pago       ;Code10        ;TableRelation="Payment Method".Code;
                                                   OnValidate=VAR
                                                                lrFormaPago@1100217000 : Record 289;
                                                              BEGIN

                                                                IF "Forma de Pago" <> xRec."Forma de Pago" THEN
                                                                BEGIN
                                                                  lrFormaPago.GET("Forma de Pago");
                                                                  "Tipo pago" := lrFormaPago."Tipo pago";

                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", "Num Reserva", rHis."Tipo Reserva"::Transfer,
                                                                                    FORMAT("ID Cobro") + ' ' + FIELDCAPTION("Forma de Pago")
                                                                                    , FORMAT(xRec."Forma de Pago"), FORMAT("Forma de Pago"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Payment Method;
                                                              ESP=Forma de Pago];
                                                   NotBlank=Yes;
                                                   Description=$013 }
    { 40  ;   ;Importe             ;Decimal       ;CaptionML=[ENU=Amount;
                                                              ESP=Importe];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Cod. Divisa" }
    { 50  ;   ;Cod. Divisa         ;Code10        ;TableRelation=Currency.Code;
                                                   OnValidate=BEGIN
                                                                IF "Cod. Divisa" <> xRec."Cod. Divisa" THEN
                                                                BEGIN
                                                                  _UltimaFechaCambio;

                                                                  CALCFIELDS("Cod. Divisa Reserva");
                                                                  // JPT 10/10/12 Si el campo "Importe Recibido" est  rellenado hacemos la conversi¢n
                                                                  IF "Importe Recibido" <> 0 THEN
                                                                    SetImpDivCobro;

                                                                  SetImpDivResv;

                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", "Num Reserva", rHis."Tipo Reserva"::Transfer,
                                                                                    FORMAT("ID Cobro") + ' ' + FIELDCAPTION("Cod. Divisa")
                                                                                    , FORMAT(xRec."Cod. Divisa"), FORMAT("Cod. Divisa"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Currency Code;
                                                              ESP=Cod. Divisa] }
    { 55  ;   ;Importe Divisa Reserva;Decimal     ;OnValidate=BEGIN
                                                                CALCFIELDS("Cod. Divisa Reserva");
                                                              END;

                                                   CaptionML=[ENU=Reservation Currency Amount;
                                                              ESP=Importe Divisa Reserva] }
    { 60  ;   ;Fecha Modificacion  ;DateTime      ;CaptionML=[ENU=Modification Date;
                                                              ESP=Fecha Modificaci¢n];
                                                   Editable=No }
    { 70  ;   ;Usuario Modificacion;Text20        ;CaptionML=[ENU=Modification User;
                                                              ESP=Usuario Modificaci¢n];
                                                   Editable=No }
    { 80  ;   ;Importe Reembolsado Adulto;Decimal ;OnValidate=BEGIN
                                                                IF TotalImporteReembolsado > "Importe Recibido" THEN //+007
                                                                  ERROR(Text001);
                                                              END;

                                                   CaptionML=[ENU=Adult refunded amount;
                                                              ESP=Importe Reembolsado Adulto];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Cod. Divisa" }
    { 81  ;   ;Importe Reembolsado Ni¤o;Decimal   ;OnValidate=BEGIN
                                                                IF TotalImporteReembolsado > "Importe Recibido" THEN //+007
                                                                  ERROR(Text001);
                                                              END;

                                                   CaptionML=ESP=Importe Reembolsado Ni¤o }
    { 85  ;   ;Importe Reembolsado ;Decimal       ;CaptionML=[ENU=Refunded amount;
                                                              ESP=Importe Reembolsado];
                                                   AutoFormatExpr="Cod. Divisa" }
    { 90  ;   ;Importe Recibido    ;Decimal       ;OnValidate=BEGIN
                                                                // $013
                                                                //TESTFIELD("Cod. Divisa");
                                                                CALCFIELDS("Cod. Divisa Reserva");

                                                                SetImpDivResv;

                                                                Importe := "Importe Recibido";

                                                                IF "Forma de Pago" <> xRec."Forma de Pago" THEN
                                                                BEGIN
                                                                  _TestImporteRecibido; //+007

                                                                END;

                                                                cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", "Num Reserva", rHis."Tipo Reserva"::Transfer,
                                                                                  FORMAT("ID Cobro") + ' ' + FIELDCAPTION("Importe Recibido")
                                                                                  , FORMAT(xRec."Importe Recibido"), FORMAT("Importe Recibido"));
                                                              END;

                                                   CaptionML=[ENU=Received amount;
                                                              ESP=Importe Recibido];
                                                   AutoFormatExpr="Cod. Divisa" }
    { 100 ;   ;O_Fecha Cambio      ;Date          ;CaptionML=[ENU=Exchange date;
                                                              ESP=Fecha cambio];
                                                   Description=Auxiliar en Temporales Liquidacion GV }
    { 102 ;   ;Fecha cambio cobro  ;Date          ;CaptionML=[ENU=Payment exchange date;
                                                              ESP=Fecha cambio cobro];
                                                   Description=Se utilizar  en las conversiones cuando la divisa del cobro no coincida con la de la reserva }
    { 200 ;   ;Adultos Reembolsados;Decimal       ;OnValidate=VAR
                                                                lrRes@1100253000 : Record 7009744;
                                                              BEGIN
                                                                CLEAR(lrRes);
                                                                IF lrRes.GET(Delegacion, "Num Reserva") THEN BEGIN
                                                                  IF lrRes."N§ Personas" < "Adultos Reembolsados" THEN
                                                                    ERROR(Text002, FIELDCAPTION("Adultos Reembolsados"), lrRes.FIELDCAPTION("N§ Personas"), lrRes."N§ Personas");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Refunded Adults;
                                                              ESP=Adultos Reembolsados];
                                                   DecimalPlaces=0:2;
                                                   MinValue=0 }
    { 210 ;   ;Ni¤os Reembolsados  ;Decimal       ;OnValidate=VAR
                                                                lrRes@1100253000 : Record 7009744;
                                                              BEGIN
                                                                CLEAR(lrRes);
                                                                IF lrRes.GET(Delegacion, "Num Reserva") THEN BEGIN
                                                                  IF lrRes."N§ Ni¤os" < "Ni¤os Reembolsados" THEN
                                                                    ERROR(Text002, FIELDCAPTION("Ni¤os Reembolsados"), lrRes.FIELDCAPTION("N§ Ni¤os"), lrRes."N§ Ni¤os");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Refunded Children;
                                                              ESP=Ni¤os Reembolsados];
                                                   DecimalPlaces=0:2;
                                                   MinValue=0 }
    { 221 ;   ;Autorizacion operacion;Code20      ;CaptionML=[ENU=Operating Authorization;
                                                              ESP=Autorizaci¢n Operacion] }
    { 222 ;   ;Tipo conciliaci¢n   ;Option        ;OptionCaptionML=[ENU=,Automatic,Manual;
                                                                    ESP=" ,Autom tica,Manual"];
                                                   OptionString=[ ,Autom tica,Manual] }
    { 223 ;   ;Liq. por Id.        ;Code20        ;CaptionML=[ENU=Liq. by Id.;
                                                              ESP=Liq. por Id.];
                                                   Editable=No }
    { 224 ;   ;N§ conciliaci¢n     ;Integer       ;CaptionML=[ENU=Conciliation No.;
                                                              ESP=N§ conciliaci¢n];
                                                   Editable=Yes }
    { 300 ;   ;Cod. Divisa Reserva ;Code10        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Reserva Transfer"."C¢d. divisa" WHERE (Delegacion=FIELD(Delegacion),
                                                                                                              N§ Reserva=FIELD(Num Reserva)));
                                                   CaptionML=[ENU=Reservation currency;
                                                              ESP=Cod. Divisa Reserva];
                                                   Description=Flowfield;
                                                   Editable=No }
    { 310 ;   ;Importe Reserva     ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Reserva Transfer"."Ingreso reserva" WHERE (Delegacion=FIELD(Delegacion),
                                                                                                                  N§ Reserva=FIELD(Num Reserva)));
                                                   CaptionML=[ENU=Reservation Amount;
                                                              ESP=Importe Reserva];
                                                   Description=Flowfield,Lookup("Reserva transfer"."Ingreso reserva" WHERE (Delegacion=FIELD(Delegacion),Num. Reserva=FIELD(Num Reserva)));
                                                   Editable=No }
    { 320 ;   ;Bono                ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Reserva Transfer".Bono WHERE (Delegacion=FIELD(Delegacion),
                                                                                                     N§ Reserva=FIELD(Num Reserva)));
                                                   CaptionML=[ENU=Booking code;
                                                              ESP=Bono];
                                                   Description=Lookup("Reserva transfer"."N§ Ticket" WHERE (Delegacion=FIELD(Delegacion),N§ Reserva=FIELD(Num Reserva)));
                                                   Editable=No }
    { 330 ;   ;Fecha venta         ;Date          ;CaptionML=[ENU=Sales date;
                                                              ESP=Fecha venta] }
    { 340 ;   ;Guia venta          ;Code20        ;TableRelation="Representante excursiones".Codigo;
                                                   CaptionML=[ENU=Sales guide;
                                                              ESP=Guia venta];
                                                   Description="Representante excursiones".Codigo;
                                                   Editable=No }
    { 350 ;   ;Reembolsado         ;Boolean       ;CaptionML=[ENU=Refunded;
                                                              ESP=Reembolsado] }
    { 360 ;   ;Fecha reembolso     ;Date          ;CaptionML=[ENU=Refund date;
                                                              ESP=Fecha reembolso] }
    { 361 ;   ;Datafono            ;Code10        ;CaptionML=[ENU=Pin Pad;
                                                              ESP=Datafono] }
    { 370 ;   ;Tipo pago           ;Option        ;CaptionML=[ENU=Payment Type;
                                                              ESP=Tipo pago];
                                                   OptionCaptionML=[ENU=Credit,Cash,Card;
                                                                    ESP=Credito,Efectivo,Tarjeta];
                                                   OptionString=Credito,Efectivo,Tarjeta }
  }
  KEYS
  {
    {    ;Delegacion,Num Reserva,ID Cobro         ;SumIndexFields=Importe Divisa Reserva;
                                                   Clustered=Yes }
    {    ;Liq. por Id.                             }
    {    ;Guia venta,Forma de Pago,Cod. Divisa,Fecha venta,Fecha reembolso;
                                                   SumIndexFields=Importe Recibido }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      rCobr@1100253000 : Record 7009927;
      Text001@1100253001 : TextConst 'ENU=Amount to refund cannot be higher than the total of the booking;ESP=El importe a reembolsar no puede superar el total de la reserva.';
      rCamb@1100253002 : Record 330;
      Text002@1100253003 : TextConst 'ENU=Unable to assign more %1 than %2 in Booking (%3);ESP=No pueden asignarse m s %1 que %2 en Reserva (%3)';
      Text003@1100253004 : TextConst 'ENU=The sales representative works on credit;ESP=El representante trabaja a Credito';
      Text004@1100253005 : TextConst 'ENU=Received amount cannot be lower than the calculated amount;ESP=El importe recibido no puede ser menor que el importe calculado.';
      rHis@1000000000 : Record 7009751;
      cPar@1100253007 : Codeunit 7009700;
      Text005@1100217000 : TextConst 'ENU=The total amounts of fees can not be higher than the reserve amount;ESP=El Total de los importes de los cobros No puede ser superior al de la reserva';
      Text006@1100217001 : TextConst 'ENU=Payment deleted;ESP=Cobro borrado';

    PROCEDURE ActualizaCobroReserva@1100253017(VAR prRsv@1100253000 : Record 7009744);
    VAR
      lwRegistroNuevo@1100253002 : Boolean;
      lwImpAnt@1100253003 : Decimal;
      lrCobros2@1100217000 : Record 7009927;
    BEGIN
      // ActualizaCobroReserva
       {
      // JPT 18/03/11 Si es representante a credito no tiene que tener cobros
      IF prRsv.EsRepresentanteCredito THEN
        EXIT;

      IF (prRsv.Delegacion='') OR
         (prRsv."N§ Reserva" = 0) OR
         (prRsv."C¢d. divisa" = '') THEN
        EXIT;

      IF (prRsv."Ingreso reserva" = 0) THEN
      BEGIN
        lrCobros2.RESET;
        lrCobros2.SETRANGE(Delegacion   , prRsv.Delegacion);
        lrCobros2.SETRANGE("Num Reserva", prRsv."N§ Reserva");
        IF lrCobros2.FINDSET THEN
        BEGIN
          lrCobros2.Importe := 0;
          lrCobros2.VALIDATE("Importe Recibido", 0);
          lrCobros2.MODIFY;
        END;
      END;

      //. Si ya se ha liquidado, no modificamos el importe por recalculo
      IF prRsv."N§ liquidacion GV" <> 0 THEN
        EXIT;

      prRsv.TESTFIELD("Fecha cambio");

      CLEAR(Rec);
      SETRANGE(Delegacion   , prRsv.Delegacion);
      SETRANGE("Num Reserva", prRsv."N§ Reserva");
      IF NOT FINDLAST THEN BEGIN
        // Si no existe un registro lo creamos
        Delegacion   := prRsv.Delegacion;
        "Num Reserva":= prRsv."N§ Reserva";
        Importe      := prRsv."Ingreso reserva";
        "Cod. Divisa":= prRsv.Divisa;
        _ActualizaImporteRecibido;

        INSERT(TRUE);

        lwRegistroNuevo := TRUE;
      END;

      IF lwRegistroNuevo THEN BEGIN
        COMMIT;
        LlamarVentanaCobro(prRsv.Delegacion, prRsv."N§ Reserva");
      END
      ELSE
      BEGIN
        lrCobros2.RESET;
        lrCobros2.SETRANGE(Delegacion   , prRsv.Delegacion);
        lrCobros2.SETRANGE("Num Reserva", prRsv."N§ Reserva");
        IF lrCobros2.COUNT = 1 THEN
        BEGIN
          //. En los casos en los que hay un solo cobro actualizamos el importe del cobro

          lwImpAnt := Importe;

          "Cod. Divisa Reserva" := prRsv.Divisa;

          Importe := CambioDivisa("Cod. Divisa Reserva", "Cod. Divisa", prRsv."Ingreso reserva");

          IF (lwImpAnt <> Importe) OR ("Importe Recibido" = 0) THEN
            _ActualizaImporteRecibido;

          CALCFIELDS("Cod. Divisa Reserva");
          SetImpDivResv; //. Convertir el importe recibido a la divisa de venta de la reserva

          MODIFY(TRUE);
        END;

        IF lrCobros2.FINDSET THEN BEGIN
          REPEAT
            lrCobros2."Importe Divisa Reserva" := lrCobros2.CambioDivisa(lrCobros2."Cod. Divisa", prRsv.Divisa,
                                                                         lrCobros2."Importe Recibido");
            lrCobros2.MODIFY;
          UNTIL lrCobros2.NEXT = 0;
        END;
      END;
       }
    END;

    PROCEDURE LlamarVentanaCobro@1100253006(pwDelegacion@1100253000 : Code[10];pwNumReserva@1100253001 : Integer);
    VAR
      lrRes@1100253002 : Record 7009744;
    BEGIN
      // LlamarVentanaCobro

      IF (pwDelegacion='') OR (pwNumReserva = 0) THEN
        EXIT;

      // Si no existe ni la reserva salimos
      CLEAR(lrRes);
      IF NOT lrRes.GET(pwDelegacion, pwNumReserva) THEN
        EXIT;

      // JPT 18/03/11 Si es representante a credito no tiene que tener cobros
      IF lrRes.EsRepresentanteCredito THEN
        ERROR(Text003);

      CLEAR(rCobr);
      rCobr.SETRANGE(Delegacion   , pwDelegacion);
      rCobr.SETRANGE("Num Reserva", pwNumReserva);
      IF NOT rCobr.FINDFIRST THEN BEGIN
        rCobr.Delegacion   := pwDelegacion;
        rCobr."Num Reserva":= pwNumReserva;
        rCobr.Importe      := lrRes."Ingreso reserva";
        rCobr."Cod. Divisa":= lrRes."C¢d. divisa";
        rCobr.INSERT(TRUE);
        COMMIT;
      END;

      FORM.RUNMODAL(0, rCobr);
    END;

    LOCAL PROCEDURE _ActualizaImporteRecibido@1100253004();
    BEGIN
      // _ActualizaImporteRecibido.
      //: Se actualiza el Importe Recibido como un redondeo a la unidad hacia arriba.


      // En caso que sea 0 no redondeamos.
      IF Importe = 0 THEN BEGIN
        VALIDATE("Importe Recibido", Importe);
        EXIT;
      END;

      // Redondeamos hacia arriba a la unidad.
      VALIDATE("Importe Recibido", ROUND(Importe, 1, '>'));
    END;

    PROCEDURE _TestImporteRecibido@1100253000();
    BEGIN
      // _TestImporteRecibido.

      IF "Importe Recibido" < Importe THEN
        ERROR(Text004);
    END;

    PROCEDURE TotalImporteReembolsado@1100253001() : Decimal;
    BEGIN
      // TotalImporteReembolsado
      // $010

      EXIT("Importe Reembolsado Adulto" + "Importe Reembolsado Ni¤o");
    END;

    LOCAL PROCEDURE _UltimaFechaCambio@1100253002();
    VAR
      lrCurrExch@1100253000 : Record 330;
      lrRsv@1100217000 : Record 7009744;
    BEGIN
      // _UltimaFechaCambio

      //. Rellenar el campo Fecha Cambio con la ultima fecha de cambio registrada en contabilidad

      IF "Cod. Divisa" = '' THEN
        EXIT;

      IF ("Fecha cambio cobro" <> 0D) AND
         ("Cod. Divisa" = xRec."Cod. Divisa") THEN
        EXIT;

      lrRsv.GET(Delegacion, "Num Reserva");

      lrCurrExch.RESET;
      lrCurrExch.SETRANGE ("Currency Code", "Cod. Divisa");
      lrCurrExch.SETFILTER("Starting Date", '<=%1', lrRsv."Fecha Venta");
      lrCurrExch.FINDLAST;

      "Fecha cambio cobro" := lrCurrExch."Starting Date";
    END;

    PROCEDURE DatosDefecto@1100217000();
    VAR
      lrResv@1100217000 : Record 7009744;
    BEGIN
      // DatosDefecto
      // Valores por defecto al inicializar un nuevo registro

      CLEAR(lrResv);
      IF lrResv.GET(Delegacion, "Num Reserva") THEN BEGIN
        "Cod. Divisa" := lrResv."C¢d. divisa";
      END;
    END;

    PROCEDURE CambioDivisa@1100217002(pwDivOrigen@1100217000 : Code[10];pwDivDestino@1100217001 : Code[10];pwImporte@1100217003 : Decimal) : Decimal;
    VAR
      lwImporte@1100217002 : Decimal;
      lrDivisa@1100217004 : Record 4;
    BEGIN
      // CambioDivisa

      IF pwDivOrigen = pwDivDestino THEN
        EXIT(pwImporte);

      CLEAR(lrDivisa);
      IF pwDivDestino <> '' THEN
        lrDivisa.GET(pwDivDestino);

      TESTFIELD("Fecha cambio cobro");
      lwImporte  := ROUND(rCamb.ExchangeAmtFCYToFCY("Fecha cambio cobro", pwDivOrigen, pwDivDestino, pwImporte),
                       lrDivisa."Amount Rounding Precision");

      EXIT(lwImporte);
    END;

    PROCEDURE SetImpDivResv@1100217007();
    BEGIN
      // SetImpDivResv
      // Calcula el valor "Importe Divisa Reserva" a partir del importe del cobro
      // Notese que no se ha calculado "Cod. Divisa Reserva" que es un flowfield. Eso debe de hacerse externamente a la funci¢n

      "Importe Divisa Reserva" := CambioDivisa("Cod. Divisa", "Cod. Divisa Reserva", "Importe Recibido")
    END;

    PROCEDURE SetImpDivCobro@1100217003();
    BEGIN
      // SetImpDivCobro
      // Calcula el importe del cobro partiendo del valor "Importe Divisa Reserva"
      // Notese que no se ha calculado "Cod. Divisa Reserva" que es un flowfield. Eso debe de hacerse externamente a la funci¢n

      IF xRec."Cod. Divisa" <> "Cod. Divisa" THEN
        "Importe Recibido" := CambioDivisa(xRec."Cod. Divisa", "Cod. Divisa", "Importe Recibido")
      ELSE
        "Importe Recibido" := CambioDivisa("Cod. Divisa Reserva", "Cod. Divisa", "Importe Recibido");
    END;

    PROCEDURE GetTotalCobros@1100217009() : Decimal;
    VAR
      lwTotal@1100217000 : Decimal;
      lrCobro@1100217001 : Record 7009927;
    BEGIN
      // GetTotalCobros
      // Devuelve el total del importe cobrado en divisa de la reserva, sin contar con el registro Actual

      CLEAR(lwTotal);

      CLEAR(lrCobro);
      lrCobro.SETRANGE(Delegacion    , Delegacion);
      lrCobro.SETRANGE("Num Reserva" , "Num Reserva");
      lrCobro.SETFILTER("ID Cobro"   , '<>%1', "ID Cobro"); // Excluimos el registro actual
      lrCobro.CALCSUMS("Importe Divisa Reserva");
      lwTotal := lrCobro."Importe Divisa Reserva";

      EXIT(lwTotal);
    END;

    PROCEDURE Pendiente@1100217004() : Decimal;
    VAR
      lwPent@1100217000 : Decimal;
    BEGIN
      // Pendiente
      // Devuelve el importe de cobro pendiente de esta reserva
      // (El campo "Importe Reserva" debe de estar calculado)

      lwPent := "Importe Reserva" - GetTotalCobros - "Importe Divisa Reserva";
      EXIT(lwPent);
    END;

    PROCEDURE PendienteDivisa@1100217005() : Decimal;
    VAR
      lwPent@1100217000 : Decimal;
    BEGIN
      // PendienteDivisa
      // Devuelve el importe de cobro pendiente de esta reserva en la divisa de la linea
      // (Los campos "Importe Reserva" Y "Cod. Divisa Reserva" deben de estar calculados)

      IF "Cod. Divisa"='' THEN
        EXIT;

      lwPent := CambioDivisa("Cod. Divisa Reserva","Cod. Divisa", Pendiente);

      EXIT(lwPent);
    END;

    LOCAL PROCEDURE _ControlEdicion@1100217006();
    VAR
      lrRsv@1100253000 : Record 7009744;
    BEGIN
      // ControlEdicion
      {
      lrRsv.GET(Delegacion, "Num Reserva");

      lrRsv.TESTFIELD(Anulada, FALSE);
      lrRsv.TESTFIELD(Reembolsada, FALSE);
      lrRsv.TESTFIELD(Facturada, FALSE);
      lrRsv.TESTFIELD("N§ liquidacion GV", 0);
      lrRsv.TESTFIELD(Confirmada, FALSE);
      }
    END;

    LOCAL PROCEDURE _DatosReserva@1100217008();
    VAR
      lrResv@1100217000 : Record 7009744;
      lrRep@1100217001 : Record 7010241;
    BEGIN
      // _DatosReserva

      IF lrResv.GET(Delegacion, "Num Reserva") THEN
      BEGIN
        "Fecha venta" := lrResv."Fecha Venta";
        "Guia venta"  := lrResv."Guia Venta";
        IF lrRep.GET("Guia venta") THEN
          Datafono := lrRep."Datafono relacionado";
      END;
    END;

    BEGIN
    {
      ARM 24092014 CNT-CAR-14063
    }
    END.
  }
}
