OBJECT Table 7035366 Definicion turnos conductor
{
  OBJECT-PROPERTIES
  {
    Date=16/10/09;
    Time=12:30:48;
    Version List=TRANSFER;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF ("Fecha desde" = 0D) OR ("Fecha hasta" = 0D) THEN
                 ERROR(Text002);

               rTurnos.RESET;
               IF rTurnos.FINDLAST THEN
                 ID := rTurnos.ID + 1
               ELSE
                 ID := 1;

               CompruebaSolape;
             END;

    OnModify=BEGIN
               CompruebaSolape;
             END;

    CaptionML=ESP=Definicion turnos conductor;
  }
  FIELDS
  {
    { 1   ;   ;ID                  ;Integer       ;CaptionML=ESP=ID }
    { 3   ;   ;Turno               ;Option        ;CaptionML=ESP=Turno;
                                                   OptionCaptionML=ESP=Ma¤ana,Tarde,Todo el dia;
                                                   OptionString=Ma¤ana,Tarde,Todo el dia }
    { 5   ;   ;Fecha desde         ;Date          ;OnValidate=BEGIN
                                                                CompruebaFechas;
                                                              END;

                                                   CaptionML=ESP=Fecha desde }
    { 7   ;   ;Fecha hasta         ;Date          ;OnValidate=BEGIN
                                                                CompruebaFechas;
                                                              END;

                                                   CaptionML=ESP=Fecha hasta }
    { 9   ;   ;Hora inicio         ;Time          ;CaptionML=ESP=Hora inicio }
    { 11  ;   ;Hora final          ;Time          ;CaptionML=ESP=Hora final }
  }
  KEYS
  {
    {    ;ID                                      ;Clustered=Yes }
    {    ;Fecha desde,Fecha hasta                  }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1100244000 : TextConst 'ESP=La fecha desde debe ser anterior a la fecha hasta.';
      Text002@1100244001 : TextConst 'ESP=No se pueden dejar las fechas en blanco.';
      rTurnos@1100244002 : Record 7035366;
      Text003@1100244003 : TextConst 'ESP=La fecha desde %1 ya esta cubierta por la linea de fechas %2-%3.';
      Text004@1100244004 : TextConst 'ESP=La fecha hasta %1 ya esta cubierta por la linea de fechas %2-%3.';
      Text005@1100244005 : TextConst 'ESP=Estas fechas %1-%2 se solapan con otras ya introducidas %3-%4.';

    PROCEDURE CompruebaFechas@1100244000();
    BEGIN
      // CompruebaFechas
      //
      IF "Fecha desde" = 0D THEN
        EXIT;

      IF "Fecha hasta" = 0D THEN
        EXIT;

      IF "Fecha desde" > "Fecha hasta" THEN
        ERROR(Text001);
    END;

    PROCEDURE CompruebaSolape@1100244001();
    BEGIN
      // CompruebaSolape;
      //
      rTurnos.RESET;
      rTurnos.SETRANGE (Turno        , Turno);
      rTurnos.SETFILTER(ID           , '<>%1', ID);
      rTurnos.SETFILTER("Fecha desde", '<=%1', "Fecha desde");
      rTurnos.SETFILTER("Fecha hasta", '>=%1', "Fecha desde");
      IF rTurnos.FINDFIRST THEN
        ERROR(Text003, "Fecha desde", rTurnos."Fecha desde", rTurnos."Fecha hasta");

      rTurnos.SETFILTER("Fecha desde", '<=%1', "Fecha hasta");
      rTurnos.SETFILTER("Fecha hasta", '>=%1', "Fecha hasta");
      IF rTurnos.FINDFIRST THEN
        ERROR(Text004, "Fecha hasta", rTurnos."Fecha desde", rTurnos."Fecha hasta");

      rTurnos.SETFILTER("Fecha desde", '>=%1', "Fecha desde");
      rTurnos.SETFILTER("Fecha hasta", '<=%1', "Fecha hasta");
      IF rTurnos.FINDFIRST THEN
        ERROR(Text005, "Fecha desde", "Fecha hasta", rTurnos."Fecha desde", rTurnos."Fecha hasta");
    END;

    BEGIN
    END.
  }
}
