OBJECT Table 7010368 Registro de multas
{
  OBJECT-PROPERTIES
  {
    Date=04/12/14;
    Time=18:00:06;
    Modified=Yes;
    Version List=TRANSFER;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               rMulta.RESET;
               rMulta.ASCENDING(FALSE);
               IF rMulta.FINDFIRST THEN
                 "Id Multa" := INCSTR(rMulta."Id Multa")
               ELSE
                 "Id Multa" := '1';

               Fecha := TODAY;

               // Insertamos un comentario para conservar la fecha en que se entro la multa

               rCom.INIT;
               rCom."Tipo comentario"      := rCom."Tipo comentario"::Multa;
               rCom."Id Enlace"            := "Id Multa";
               rCom."Id comentario"        := 10000;
               rCom.Dia                    := TODAY;
               rCom."Texto comentario"     := STRSUBSTNO(Text004, TODAY, USERID);
               rCom."Fecha introduccion"   := TODAY;
               rCom."Hora introduccion"    := TIME;
               rCom."Usuario introduccion" := USERID;
               rCom.INSERT;
             END;

    OnModify=BEGIN
               IF Pagada AND xRec.Pagada THEN
                 ERROR(Text002);
             END;

    OnDelete=BEGIN
               IF Pagada THEN
                 ERROR(Text002);

               rCom.RESET;
               rCom.SETRANGE("Tipo comentario", rCom."Tipo comentario"::Multa);
               rCom.SETRANGE("Id Enlace"      , "Id Multa");
               IF rCom.FINDFIRST THEN
                 rCom.DELETEALL;
             END;

    CaptionML=ESP=Registro de multas;
    LookupFormID=Form7035305;
    DrillDownFormID=Form7035305;
  }
  FIELDS
  {
    { 1   ;   ;Id Multa            ;Code10        ;CaptionML=ESP=Id Multa;
                                                   SQL Data Type=Variant;
                                                   Description=PK;
                                                   Editable=No }
    { 3   ;   ;Matricula           ;Code10        ;TableRelation=Vehiculo.Matricula WHERE (Vehiculo propio=CONST(Yes));
                                                   OnValidate=BEGIN
                                                                IF rVeh.GET(Matricula) THEN
                                                                  Garaje := rVeh.Garaje;
                                                              END;

                                                   OnLookup=BEGIN
                                                              rPar.FINDFIRST;
                                                              CLEAR(rVeh);
                                                              IF (Garaje <>'') AND (Garaje <> rPar."Todos los garajes") THEN
                                                                rVeh.SETRANGE(Garaje, Garaje);
                                                              IF FORM.RUNMODAL(0,rVeh)= ACTION::LookupOK THEN
                                                                VALIDATE(Matricula, rVeh.Matricula);
                                                            END;

                                                   CaptionML=ESP=Matricula;
                                                   Description=FK Vehiculo }
    { 5   ;   ;Fecha               ;Date          ;CaptionML=ESP=Fecha }
    { 7   ;   ;Conductor           ;Code10        ;TableRelation=Conductor.Conductor WHERE (Externo=CONST(No));
                                                   CaptionML=ESP=Conductor;
                                                   Description=FK Conductor }
    { 9   ;   ;Tipo de multa       ;Code10        ;TableRelation="Tipo de multa".Codigo;
                                                   CaptionML=ESP=Tipo de multa;
                                                   Description=FK Tipo de multa }
    { 11  ;   ;Importe             ;Decimal       ;CaptionML=ESP=Importe;
                                                   AutoFormatType=1 }
    { 13  ;   ;Pagada              ;Boolean       ;OnValidate=BEGIN
                                                                IF "Fecha pago" = 0D THEN
                                                                  ERROR(Text003);
                                                              END;

                                                   CaptionML=ESP=Pagada }
    { 15  ;   ;Fecha pago          ;Date          ;CaptionML=ESP=Fecha pago }
    { 17  ;   ;Importe pago        ;Decimal       ;CaptionML=ESP=Importe pago }
    { 19  ;   ;Num expediente      ;Code20        ;OnValidate=BEGIN
                                                                rMulta.RESET;
                                                                rMulta.SETCURRENTKEY("Num expediente");
                                                                rMulta.SETRANGE ("Num expediente" , "Num expediente");
                                                                rMulta.SETFILTER("Id Multa", '<>%1', "Id Multa");
                                                                IF rMulta.FINDFIRST THEN
                                                                  ERROR(Text001);
                                                              END;

                                                   CaptionML=ESP=Num expediente }
    { 21  ;   ;Garaje              ;Code10        ;TableRelation=Garaje.Garaje;
                                                   CaptionML=ESP=Garaje;
                                                   NotBlank=Yes;
                                                   Description=FK Garaje }
    { 23  ;   ;Recurrida           ;Boolean       ;CaptionML=ESP=Recurrida }
  }
  KEYS
  {
    {    ;Id Multa                                ;Clustered=Yes }
    {    ;Num expediente                           }
    {    ;Garaje                                   }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      rMulta@1100244000 : Record 7010368;
      Text001@1100244001 : TextConst 'ESP=No se puede indicar un mismo numero de expendiente a 2 multas.';
      Text002@1100244002 : TextConst 'ESP=No se puede modificar una multa pagada.';
      rVeh@1100244003 : Record 7010346;
      Text003@1100244004 : TextConst 'ESP=Antes de marcar un multa como pagada hay que indicar la fecha de pago.';
      rCom@1100244005 : Record 7010441;
      Text004@1100244006 : TextConst 'ESP=Multa registrada el dia %1 por el usuario %2.';
      rPar@1103355000 : Record 7010311;
      Text005@1103355001 : TextConst 'ESP=No existe el usuario %1.';

    PROCEDURE NumVehiculo@2() : Text[30];
    VAR
      rVeh@1100244000 : Record 7010346;
    BEGIN
      // NumVehiculo
      //
      IF rVeh.GET(Matricula) THEN
        EXIT(rVeh.Numero)
      ELSE
        EXIT('');
    END;

    PROCEDURE TipoVehiculo@3() : Code[10];
    VAR
      rVeh@1100244000 : Record 7010346;
    BEGIN
      // TipoVehiculo
      //
      IF rVeh.GET(Matricula) THEN
        EXIT(rVeh."Tipo vehiculo")
      ELSE
        EXIT('');
    END;

    PROCEDURE NomConductor@4() : Code[30];
    VAR
      rCond@1100244000 : Record 7010327;
    BEGIN
      // NombConductor
      //
      IF rCond.GET(Conductor) THEN
        EXIT(rCond."Nombre Abreviado")
      ELSE
        EXIT('');
    END;

    PROCEDURE FiltrarGarajeUsuario@1103355000();
    VAR
      lrParGenerales@1103355000 : Record 7010311;
      lrUsuario@1103355001 : Record 7010420;
    BEGIN
      // FiltrarGarajeUsuario.
      // Filtramos los registro de multas por garaje dependiendo de la configuraci¢n del usuario.

      lrParGenerales.FINDFIRST;

      IF NOT lrUsuario.GET(USERID) THEN
        ERROR(Text005, USERID);

      SETCURRENTKEY(Garaje);

      IF (lrUsuario."Garaje de trabajo" <> '') AND (lrUsuario."Garaje de trabajo" <> lrParGenerales."Todos los garajes") THEN BEGIN
        FILTERGROUP(2);
        SETRANGE(Garaje, lrUsuario."Garaje de trabajo");
        FILTERGROUP(0);
      END;
    END;

    BEGIN
    END.
  }
}
