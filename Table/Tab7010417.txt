OBJECT Table 7010417 Lineas Prefactura
{
  OBJECT-PROPERTIES
  {
    Date=07/06/10;
    Time=17:33:44;
    Version List=TRANSFER;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               rLin.RESET; rLin.INIT;
               rLin.SETRANGE("N§ Prefactura", "N§ Prefactura");
               IF rLin.FINDLAST THEN
                 "N§ Linea" := rLin."N§ Linea" + 1000
               ELSE
                 "N§ Linea" := 1000;
             END;

    OnModify=BEGIN

               // JPT 10/09/12 No permitimos cambiar lineas facturadas
               CLEAR(rPref);
               rPref.GET("N§ Prefactura");
             END;

    CaptionML=ESP=Lineas Prefactura;
    LookupFormID=Form7010480;
    DrillDownFormID=Form7010480;
  }
  FIELDS
  {
    { 1   ;   ;N§ Prefactura       ;Code10        ;TableRelation="Prefactura ingreso"."N§ Prefactura";
                                                   CaptionML=ESP=N§ Prefactura;
                                                   Description=FK N§ Prefactura;
                                                   Editable=No }
    { 3   ;   ;N§ Linea            ;Integer       ;CaptionML=ESP=N§ Linea;
                                                   Editable=No }
    { 5   ;   ;Tipo                ;Option        ;CaptionML=ESP=Tipo;
                                                   OptionCaptionML=ESP=Base,Suplemento,Maletas,Comentario,Zona,Resumen Zona,Solo Resumen Zona,Extra,Localizador;
                                                   OptionString=Base,Suplemento,Maletas,Comentario,Zona,Resumen Zona,Solo Resumen Zona,Extra,Localizador }
    { 7   ;   ;Fecha               ;Date          ;CaptionML=ESP=Fecha }
    { 9   ;   ;Codigo Servicio     ;Code10        ;CaptionML=ESP=Codigo Servicio }
    { 11  ;   ;Precio con impuestos;Decimal       ;OnValidate=BEGIN
                                                                busca_precision;

                                                                "Precio sin impuestos" := ROUND("Precio con impuestos" / (1 + (rConfIVA."VAT+EC %" / 100)),
                                                                                                precision_ingreso);
                                                              END;

                                                   CaptionML=ESP=Precio con impuestos;
                                                   AutoFormatType=2;
                                                   AutoFormatExpr="Cod. Divisa" }
    { 13  ;   ;Importe con impuestos;Decimal      ;OnValidate=BEGIN
                                                                busca_precision;

                                                                "Importe sin impuestos" := ROUND("Importe con impuestos" / (1 + (rConfIVA."VAT+EC %" / 100)),
                                                                                                precision_ingreso);
                                                              END;

                                                   CaptionML=ESP=Importe con impuestos;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Cod. Divisa" }
    { 15  ;   ;Vuelo               ;Text30        ;CaptionML=ESP=Vuelo }
    { 17  ;   ;Letra               ;Code10        ;CaptionML=ESP=Letra }
    { 19  ;   ;Bus                 ;Code10        ;CaptionML=ESP=Bus }
    { 21  ;   ;Parte               ;Code10        ;CaptionML=ESP=Parte }
    { 23  ;   ;Origen              ;Code10        ;CaptionML=ESP=Origen }
    { 25  ;   ;Pax                 ;Decimal       ;CaptionML=ESP=Pax;
                                                   DecimalPlaces=0:2 }
    { 27  ;   ;Plazas              ;Decimal       ;CaptionML=ESP=Plazas;
                                                   DecimalPlaces=0:2 }
    { 29  ;   ;Destino             ;Code10        ;CaptionML=ESP=Destino }
    { 31  ;   ;Hora                ;Time          ;CaptionML=ESP=Hora }
    { 33  ;   ;Descripcion         ;Text30        ;CaptionML=ESP=Descripcion }
    { 35  ;   ;Importe sin impuestos;Decimal      ;OnValidate=BEGIN
                                                                busca_precision;

                                                                "Importe con impuestos" := ROUND("Importe sin impuestos" * (1 + (rConfIVA."VAT+EC %" / 100)),
                                                                                                 precision_ingreso);
                                                              END;

                                                   CaptionML=ESP=Importe sin impuestos;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Cod. Divisa" }
    { 37  ;   ;Grupo registro IVA producto;Code10 ;TableRelation="VAT Product Posting Group".Code;
                                                   OnValidate=BEGIN
                                                                rPref.GET("N§ Prefactura");
                                                                IF rPref."Impuesto Incluidos" THEN BEGIN
                                                                  VALIDATE("Importe con impuestos");
                                                                  VALIDATE("Precio con impuestos");
                                                                  "Importe Sin IVA Sin Dto" := ROUND("Importe Con IVA Sin Dto" / (1 + (rConfIVA."VAT+EC %" / 100)), precision_ingreso);
                                                                END
                                                                ELSE BEGIN
                                                                  VALIDATE("Importe sin impuestos");
                                                                  VALIDATE("Precio sin impuestos");
                                                                  "Importe Con IVA Sin Dto" := ROUND("Importe Sin IVA Sin Dto" * (1 + (rConfIVA."VAT+EC %" / 100)), precision_ingreso);
                                                                END;
                                                              END;

                                                   CaptionML=ESP=Grupo registro IVA producto;
                                                   Description="VAT Product Posting Group".Code }
    { 39  ;   ;Zona                ;Code10        ;CaptionML=ESP=Zona }
    { 41  ;   ;Cod. Divisa         ;Code10        ;TableRelation=Currency.Code;
                                                   CaptionML=ESP=Cod. Divisa;
                                                   Description=FK Divisa }
    { 43  ;   ;Precio sin impuestos;Decimal       ;OnValidate=BEGIN
                                                                busca_precision;

                                                                "Precio con impuestos" := ROUND("Precio sin impuestos" * (1 + (rConfIVA."VAT+EC %" / 100)),
                                                                                                precision_ingreso);
                                                              END;

                                                   CaptionML=ESP=Precio sin impuestos;
                                                   AutoFormatType=2;
                                                   AutoFormatExpr="Cod. Divisa" }
    { 44  ;   ;Tipo aplicacion     ;Option        ;CaptionML=ESP=Tipo aplicacion;
                                                   OptionCaptionML=ESP=Vehiculo,Pax;
                                                   OptionString=Vehiculo,Pax }
    { 45  ;   ;N§ de Servicios     ;Decimal       ;CaptionML=ESP=N§ de Servicios }
    { 46  ;   ;Ni¤os Facturados    ;Decimal       ;CaptionML=ESP=Ni¤os Facturados;
                                                   DecimalPlaces=0:2;
                                                   Description=Ni¤os facturados }
    { 47  ;   ;Zona Trabajo        ;Code10        ;CaptionML=ESP=Zona Trabajo }
    { 48  ;   ;Tipo Servicio Fijo  ;Option        ;CaptionML=ESP=Tipo Servicio Fijo;
                                                   OptionCaptionML=ESP=Excursion,Traslado;
                                                   OptionString=Excursion,Traslado }
    { 49  ;   ;Touroperador        ;Code10        ;CaptionML=ESP=Touroperador }
    { 50  ;   ;Referencia          ;Text30        ;CaptionML=ESP=Referencia }
    { 51  ;   ;Concepto facturacion;Text30        ;CaptionML=ESP=Concepto facturacion }
    { 52  ;   ;% Dto               ;Decimal       ;OnValidate=BEGIN
                                                                busca_precision;
                                                                IF rPref."Impuesto Incluidos" THEN BEGIN
                                                                  "Cantidad Dto" := ROUND("Importe Con IVA Sin Dto" * "% Dto" / 100 ,precision_ingreso);
                                                                  VALIDATE("Importe con impuestos","Importe Con IVA Sin Dto" - "Cantidad Dto");
                                                                END
                                                                ELSE BEGIN
                                                                  "Cantidad Dto" := ROUND("Importe Sin IVA Sin Dto" * "% Dto" / 100 ,precision_ingreso);
                                                                  VALIDATE("Importe sin impuestos","Importe Sin IVA Sin Dto" - "Cantidad Dto");
                                                                END;
                                                              END;

                                                   CaptionML=ESP=% Dto;
                                                   MinValue=0 }
    { 53  ;   ;Cantidad Dto        ;Decimal       ;OnValidate=BEGIN
                                                                busca_precision;
                                                                IF rPref."Impuesto Incluidos" THEN BEGIN
                                                                  VALIDATE("Importe con impuestos" , "Importe Con IVA Sin Dto"-"Cantidad Dto");
                                                                  IF "Importe Con IVA Sin Dto" <> 0 THEN
                                                                    "% Dto" := ROUND("Cantidad Dto"/"Importe Con IVA Sin Dto"*100,precision_ingreso)
                                                                  ELSE
                                                                    "% Dto" := 0;
                                                                END
                                                                ELSE BEGIN
                                                                  VALIDATE("Importe sin impuestos","Importe Sin IVA Sin Dto"-"Cantidad Dto");
                                                                  IF "Importe Sin IVA Sin Dto" <> 0 THEN
                                                                    "% Dto" := ROUND("Cantidad Dto"/"Importe Sin IVA Sin Dto"*100,precision_ingreso)
                                                                  ELSE
                                                                    "% Dto" := 0;
                                                                END;
                                                              END;

                                                   CaptionML=ESP=Cantidad Dto;
                                                   MinValue=0 }
    { 54  ;   ;Importe Sin IVA Sin Dto;Decimal    ;OnValidate=BEGIN
                                                                busca_precision;
                                                                IF rPref."Impuesto Incluidos" THEN
                                                                  VALIDATE("Importe con impuestos","Importe Con IVA Sin Dto"-"Cantidad Dto")
                                                                ELSE
                                                                  VALIDATE("Importe sin impuestos","Importe Sin IVA Sin Dto"-"Cantidad Dto");
                                                              END;

                                                   CaptionML=ESP=Importe Sin IVA Sin Dto }
    { 55  ;   ;Importe Con IVA Sin Dto;Decimal    ;OnValidate=BEGIN
                                                                busca_precision;
                                                                IF rPref."Impuesto Incluidos" THEN
                                                                  VALIDATE("Importe con impuestos","Importe Con IVA Sin Dto"-"Cantidad Dto")
                                                                ELSE
                                                                  VALIDATE("Importe sin impuestos","Importe Sin IVA Sin Dto"-"Cantidad Dto");
                                                              END;

                                                   CaptionML=ESP=Importe Con IVA Sin Dto }
    { 56  ;   ;Precio manual       ;Boolean       ;CaptionML=ESP=Precio manual }
    { 57  ;   ;Cod Suplemento      ;Code10        ;CaptionML=ESP=Cod Suplemento }
    { 58  ;   ;Garaje              ;Code10        ;CaptionML=ESP=Garaje }
    { 90  ;   ;Orden               ;Integer       ;CaptionML=ESP=Orden;
                                                   Description=Orden Impresion }
  }
  KEYS
  {
    {    ;N§ Prefactura,N§ Linea                  ;Clustered=Yes }
    {    ;N§ Prefactura,Hora,Fecha,Parte           }
    { No ;N§ Prefactura,Codigo Servicio,Hora,Fecha,Parte,Tipo }
    {    ;N§ Prefactura,Vuelo,Hora,Fecha,Parte     }
    {    ;N§ Prefactura,Fecha,Codigo Servicio,Hora,Parte,Tipo }
    {    ;N§ Prefactura,Codigo Servicio,Fecha,Hora,Parte }
    {    ;N§ Prefactura,Fecha,Codigo Servicio,Vuelo,Parte,Tipo }
    { No ;N§ Prefactura,Codigo Servicio,Fecha,Referencia,Parte,Tipo;
                                                   MaintainSIFTIndex=No }
    { No ;N§ Prefactura,Zona Trabajo,Fecha,Hora,Parte;
                                                   MaintainSIFTIndex=No }
    { No ;N§ Prefactura,Fecha,Referencia,Parte,Tipo }
    {    ;N§ Prefactura,Tipo                      ;SumIndexFields=Importe sin impuestos }
    {    ;N§ Prefactura,Fecha,Referencia,Tipo      }
    {    ;N§ Prefactura,Orden                      }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      rLin@1100244000 : Record 7010417;
      rPref@1100244001 : Record 7010415;
      rCli@1100244002 : Record 18;
      rComp@1100244003 : Record 7010313;
      rConfIVA@1100244004 : Record 325;
      precision_ingreso@1100244006 : Decimal;

    PROCEDURE nom_servicio@1() : Text[30];
    VAR
      rCodSer@1100244000 : Record 7010320;
    BEGIN
      // nom_servicio
      //
      rCodSer.RESET;
      IF rCodSer.GET("Codigo Servicio") THEN
        EXIT(rCodSer.Descripcion)
      ELSE
        EXIT('');
    END;

    PROCEDURE busca_precision@2();
    VAR
      lrCon@1100244000 : Record 7010403;
      lrDiv@1100244001 : Record 4;
      lrConf@1100244002 : Record 98;
    BEGIN
      // busca_precision
      //

      // ----  AJS 5.10.2001  Buscar la prefactura y composicion cliente y clientes  ----

      rPref.RESET;
      rPref.GET("N§ Prefactura");

      rComp.RESET;
      rComp.GET(rPref.Cliente, rPref.Touroperador);

      rCli.RESET;
      rCli.GET(rComp."Cliente facturacion");

      rConfIVA.GET (rCli."VAT Bus. Posting Group", "Grupo registro IVA producto");

      // ----  AJS 5.10.2001  Sacar la precision de redondeo del contrato en funcion de si se  ----
      // ----  trata de importes en divisa o en DL                                             ----

      lrCon.RESET;
      lrCon.GET(rPref.Garaje, rPref."N§ Contrato");

      IF lrCon."Cod. Divisa" <> '' THEN BEGIN
        lrDiv.GET(lrCon."Cod. Divisa");
        precision_ingreso := lrDiv."Amount Rounding Precision";
      END
      ELSE BEGIN
        lrConf.FINDFIRST;
        precision_ingreso := lrConf."Amount Rounding Precision";
      END;
    END;

    PROCEDURE RefCliente@1100244000(prCondFact@1100244000 : Record 7010416) : Text[30];
    VAR
      lrParte@1100244001 : Record 7010360;
      lTexto@1100244002 : Text[30];
    BEGIN
      // RefCliente
      // Devuelve el texto Referencia Cliente , seg£n las condiciones establecidas

      CLEAR(lTexto);
      lrParte.RESET;
      IF lrParte.GET(Parte) THEN BEGIN
        CASE prCondFact."Ref. Cliente" OF
          prCondFact."Ref. Cliente"::Bono       : lTexto := lrParte.Bono;
          prCondFact."Ref. Cliente"::Referencia : lTexto := Referencia;
          prCondFact."Ref. Cliente"::"N§ Vuelo" :
          BEGIN
            IF Vuelo = '' THEN
              lTexto := Referencia
            ELSE
              lTexto := Vuelo;
          END;
        END;
      END;
      EXIT(lTexto);
    END;

    BEGIN
    {
      // AJS 16.01.2008
         Hemos agregado un valor nuevo Localizador en el campo Tipo

      ## AJS 07.06.2010

        .- Establezco la TableRelation del campo Grupo registro IVA Producto
    }
    END.
  }
}
