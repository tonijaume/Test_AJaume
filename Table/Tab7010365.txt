OBJECT Table 7010365 Touroperador x Parte
{
  OBJECT-PROPERTIES
  {
    Date=28/01/15;
    Time=12:29:44;
    Modified=Yes;
    Version List=TRANSFER;
  }
  PROPERTIES
  {
    OnInsert=BEGIN

               // ----  Cuando se inserta un registro el campo Precios por se rellena con el valor que  ----
               // ----  el campo en el fichero de parte                                                 ----

               rParte.RESET;
               IF "N§ Parte" <> '' THEN BEGIN
                 rParte.GET("N§ Parte");
                 IF rParte.Confirmado THEN
                   ERROR(Text00003);
                 VALIDATE(Bono         , rParte.Bono);
                 // JPT 13/01/05 Rellenamos el nuevo campo
                 "Fecha Servicio Parte" := rParte.Fecha;
                 Facturable             := rParte.Facturable;
                 "Ingreso Precios Por"  := rParte."Ingreso Precios por";
                 "Coste Precios Por"    := rParte."Coste Precios por";
                 Gestor                 := rParte.Gestor;

                 // AJS 21.09.2005
                 // Rellenamos los campos de vehiculo por si el parte ya esta asignado
                 Vehiculo        := rParte.Vehiculo;
                 "Tipo Vehiculo" := rParte."Tipo Vehiculo facturacion";

                 // AJF 31/03/08
                 // A¤adimos Zona Parte.
                 "Zona Parte"    := rParte."Zona parte";

               END;
             END;

    OnModify=BEGIN
               IF "N§ Parte" <> '' THEN BEGIN
                 rParte.GET("N§ Parte");
                 IF rParte.Confirmado THEN
                   ERROR(Text00001);
                 VALIDATE(Bono, rParte.Bono);
               END;
             END;

    OnDelete=BEGIN
               IF "N§ Parte" <> '' THEN BEGIN
                 rParte.GET("N§ Parte");
                 IF rParte.Confirmado THEN
                   ERROR(Text00002);
               END;
             END;

    OnRename=BEGIN
               MESSAGE(Text000);
             END;

    CaptionML=ESP=Touroperador x Parte;
    LookupFormID=Form7010410;
    DrillDownFormID=Form7010410;
  }
  FIELDS
  {
    { 1   ;   ;N§ Parte            ;Code10        ;TableRelation=Parte."N§ Parte";
                                                   CaptionML=ESP=N§ Parte;
                                                   SQL Data Type=Varchar;
                                                   Description=PK, FK Parte;
                                                   Editable=No }
    { 3   ;   ;Touroperador        ;Code10        ;TableRelation=Cliente/TTOO.TTOO WHERE (Cliente=FIELD(Cliente operativo));
                                                   OnValidate=BEGIN
                                                                // AJF 23/08/10
                                                                IF rCliTO.GET("Cliente operativo", Touroperador) THEN
                                                                  "Ingreso Precios Por" := rCliTO."Precios por";
                                                              END;

                                                   CaptionML=ESP=Touroperador;
                                                   SQL Data Type=Varchar;
                                                   NotBlank=Yes;
                                                   Description=PK, FK Touroperador;
                                                   Editable=No }
    { 5   ;   ;Adultos transportados;Decimal      ;CaptionML=ESP=Adultos transportados;
                                                   DecimalPlaces=0:2;
                                                   Editable=No }
    { 7   ;   ;Ni¤os transportados ;Decimal       ;CaptionML=ESP=Ni¤os transportados;
                                                   DecimalPlaces=0:2;
                                                   Editable=No }
    { 8   ;   ;Pax Transportados   ;Decimal       ;CaptionML=ESP=Pax Transportados;
                                                   DecimalPlaces=0:2 }
    { 9   ;   ;Adultos anulados    ;Decimal       ;CaptionML=ESP=Adultos anulados;
                                                   DecimalPlaces=0:2;
                                                   Editable=No }
    { 11  ;   ;Ni¤os anulados      ;Decimal       ;CaptionML=ESP=Ni¤os anulados;
                                                   DecimalPlaces=0:2;
                                                   Editable=No }
    { 13  ;   ;Adultos invitados ingreso;Decimal  ;CaptionML=ESP=Adultos invitados ingreso;
                                                   DecimalPlaces=0:2;
                                                   Editable=No }
    { 15  ;   ;Ni¤os invitados ingreso;Decimal    ;CaptionML=ESP=Ni¤os invitados ingreso;
                                                   DecimalPlaces=0:2;
                                                   Editable=No }
    { 17  ;   ;Adultos invitados coste;Decimal    ;CaptionML=ESP=Adultos invitados coste;
                                                   DecimalPlaces=0:2;
                                                   Editable=No }
    { 19  ;   ;Ni¤os invitados coste;Decimal      ;CaptionML=ESP=Ni¤os invitados coste;
                                                   DecimalPlaces=0:2;
                                                   Editable=No }
    { 21  ;   ;Touroperador sin ingreso;Boolean   ;CaptionML=ESP=No Ingreso }
    { 23  ;   ;Precio manual venta ;Decimal       ;OnValidate=VAR
                                                                lrCont@1103355000 : Record 7010403;
                                                              BEGIN
                                                                VALIDATE("Cod. Divisa venta");
                                                                IF "Precio manual venta" <> 0 THEN BEGIN
                                                                  "Ingreso Precios Por" := "Ingreso Precios Por"::"Zona mas alejada";

                                                                  // JPT 08/06/07 Especificamos en precio manual si las maletas van incluidas o no
                                                                  IF (("Precio manual venta"=0) <> (xRec."Precio manual venta"=0)) THEN BEGIN // Si ha cambiado precio manual
                                                                    IF "N§ Contrato venta" <> '' THEN BEGIN
                                                                      lrCont.SETRANGE("N§ Contrato",  "N§ Contrato venta");
                                                                      IF lrCont.FINDFIRST THEN
                                                                        "P Manual Maletas Inc" := lrCont."Maletas incluidas";
                                                                    END;
                                                                  END;
                                                                END
                                                                ELSE BEGIN
                                                                  "Ingreso Precios Por"  := "Ingreso Precios Por"::"Cada zona";
                                                                  "P Manual Maletas Inc" := FALSE;
                                                                END;

                                                                // ----  AJS 21-05-2002  ----
                                                                // ----  Incluir anotacion en el historico del parte de trabajo  ----

                                                                rHist.inserta_registro(rHist."Tipo Fichero"::Parte, "N§ Parte", 0, FIELDCAPTION("Precio manual venta"),
                                                                                       FORMAT(xRec."Precio manual venta"), FORMAT("Precio manual venta"));

                                                                // ----  AJS 21-05-2002  ----
                                                                // ----  Pedir si se desean calcular las maletas al modificar un precio manual  ----

                                                                rParte.RESET;
                                                                IF rParte.GET("N§ Parte") THEN BEGIN
                                                                  IF CONFIRM(Text00004) THEN
                                                                    rParte.VALIDATE("Calcular maletas", TRUE)
                                                                  ELSE BEGIN
                                                                    rParte.VALIDATE("Calcular maletas", FALSE);
                                                                    "P Manual Maletas Inc" := FALSE;
                                                                  END;
                                                                  rParte.MODIFY;
                                                                END;
                                                              END;

                                                   CaptionML=ESP=Precio manual venta;
                                                   AutoFormatType=2;
                                                   AutoFormatExpr="Cod. Divisa venta" }
    { 24  ;   ;P Manual Maletas Inc;Boolean       ;OnValidate=BEGIN

                                                                IF "P Manual Maletas Inc" THEN BEGIN
                                                                  rParte.RESET;
                                                                  IF rParte.GET("N§ Parte") THEN BEGIN
                                                                    IF NOT rParte."Calcular maletas" THEN
                                                                      ERROR(Text00007);
                                                                  END;

                                                                  IF "Precio manual venta" = 0 THEN
                                                                    ERROR(Text00008);
                                                                END;
                                                              END;

                                                   CaptionML=ESP=Maletas Incluidas en Precio Manual;
                                                   Description=Indica si en el precio manual estan las maletas incluidas }
    { 25  ;   ;Cod. Divisa venta   ;Code10        ;TableRelation=Currency;
                                                   OnValidate=BEGIN
                                                                IF "Cod. Divisa venta" <> '' THEN BEGIN
                                                                  rParte.GET("N§ Parte");
                                                                  IF rParte."Fecha facturacion" = 0D THEN
                                                                    "Precio manual venta DL" := 0
                                                                  ELSE
                                                                    "Precio manual venta DL" := rTipo.ExchangeAmtFCYToLCY(rParte."Fecha facturacion", "Cod. Divisa venta",
                                                                                                                     "Precio manual venta",
                                                                                                                     rTipo.ExchangeRate(rParte."Fecha facturacion",
                                                                                                                                      "Cod. Divisa venta"));
                                                                END
                                                                ELSE
                                                                  "Precio manual venta DL" := "Precio manual venta";
                                                              END;

                                                   CaptionML=ESP=Cod. Divisa venta;
                                                   SQL Data Type=Varchar;
                                                   Description=FK Divisa;
                                                   Editable=No }
    { 27  ;   ;Precio manual venta DL;Decimal     ;CaptionML=ESP=Precio manual venta DL;
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 29  ;   ;Ingreso margen      ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum(Margen."Importe sin impuesto DL" WHERE (Usuario=FIELD(Rango Usuario),
                                                                                                           N§ Parte=FIELD(N§ Parte),
                                                                                                           Touroperador=FIELD(Touroperador),
                                                                                                           Concepto=CONST(Ingreso)));
                                                   CaptionML=ESP=Ingreso margen;
                                                   Description=Calculado sobre margen;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Cod. Divisa venta" }
    { 31  ;   ;Coste margen        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum(Margen."Importe sin impuesto DL" WHERE (Usuario=FIELD(Rango Usuario),
                                                                                                           N§ Parte=FIELD(N§ Parte),
                                                                                                           Touroperador=FIELD(Touroperador),
                                                                                                           Concepto=CONST(Coste)));
                                                   CaptionML=ESP=Coste margen;
                                                   Description=Calculado sobre margen;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Cod. Divisa compra" }
    { 33  ;   ;Ingreso C/I DL      ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum(Coste-Ingreso."Importe sin impuesto DL" WHERE (N§ Parte=FIELD(N§ Parte),
                                                                                                                  Touroperador=FIELD(Touroperador),
                                                                                                                  N§ Factura=FIELD(Filtro Num Factura)));
                                                   CaptionML=ESP=Ingreso C/I DL;
                                                   Description=Calculado sobre coste-ingreso;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 34  ;   ;Ingreso Prod DL     ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Produccion Ingreso"."Importe sin impuesto DL" WHERE (N§ Parte=FIELD(N§ Parte),
                                                                                                                         Touroperador=FIELD(Touroperador),
                                                                                                                         N§ Factura=FIELD(Filtro Num Factura)));
                                                   CaptionML=ESP=Ingreso C/I DL;
                                                   Description=Calculado sobre produccion ingreso;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 35  ;   ;Coste C/I DL        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Produccion Coste"."Importe sin impuesto DL" WHERE (N§ Parte=FIELD(N§ Parte),
                                                                                                                       Touroperador=FIELD(Touroperador)));
                                                   CaptionML=ESP=Coste C/I DL;
                                                   Description=Calculado sobre produccion coste;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 37  ;   ;Rango Usuario       ;Code20        ;FieldClass=FlowFilter;
                                                   CaptionML=ESP=Rango Usuario }
    { 39  ;   ;Precio manual compra;Decimal       ;OnValidate=BEGIN
                                                                VALIDATE("Cod. Divisa compra");

                                                                // ----  AJS 21-05-2002  ----
                                                                // ----  Incluir anotacion en el historico del parte de trabajo  ----

                                                                rHist.inserta_registro(rHist."Tipo Fichero"::Parte, "N§ Parte", 0, FIELDCAPTION("Precio manual compra"),
                                                                                       FORMAT(xRec."Precio manual compra"), FORMAT("Precio manual compra"));

                                                                // ----  AJS 21-05-2002  ----
                                                                // ----  Pedir si se desean calcular las maletas al modificar un precio manual  ----

                                                                rParte.RESET;
                                                                IF rParte.GET("N§ Parte") THEN BEGIN
                                                                  IF CONFIRM(Text00004) THEN
                                                                    rParte.VALIDATE("Calcular maletas", TRUE)
                                                                  ELSE
                                                                    rParte.VALIDATE("Calcular maletas", FALSE);
                                                                  rParte.MODIFY;
                                                                END;
                                                              END;

                                                   CaptionML=ESP=Precio manual compra;
                                                   AutoFormatType=2;
                                                   AutoFormatExpr="Cod. Divisa compra" }
    { 41  ;   ;Cod. Divisa compra  ;Code10        ;TableRelation=Currency;
                                                   OnValidate=BEGIN
                                                                IF "Cod. Divisa compra" <> '' THEN BEGIN
                                                                  rParte.GET("N§ Parte");
                                                                  IF rParte."Fecha facturacion" = 0D THEN
                                                                    "Precio manual compra DL" := 0
                                                                  ELSE
                                                                    "Precio manual compra DL" := rTipo.ExchangeAmtFCYToLCY(rParte."Fecha facturacion", "Cod. Divisa compra",
                                                                                                                      "Precio manual compra",
                                                                                                                      rTipo.ExchangeRate(rParte."Fecha facturacion",
                                                                                                                                       "Cod. Divisa compra"));
                                                                END
                                                                ELSE
                                                                  "Precio manual compra DL" := "Precio manual compra";
                                                              END;

                                                   CaptionML=ESP=Cod. Divisa compra;
                                                   Description=FK Divisa;
                                                   Editable=No }
    { 43  ;   ;Precio manual compra DL;Decimal    ;CaptionML=ESP=Precio manual compra DL;
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 44  ;   ;Coste Precios Por   ;Option        ;OnValidate=BEGIN
                                                                IF "Precio manual compra" <> 0 THEN
                                                                  ERROR(Text001);
                                                              END;

                                                   CaptionML=ESP=Coste Precios Por;
                                                   OptionCaptionML=ESP="Cada zona,Zona mas alejada ";
                                                   OptionString=Cada zona,Zona mas alejada }
    { 45  ;   ;Ingreso Precios Por ;Option        ;OnValidate=BEGIN
                                                                IF "Precio manual venta" <> 0 THEN
                                                                  ERROR(Text001);
                                                              END;

                                                   CaptionML=ESP=Ingreso Precios Por;
                                                   OptionCaptionML=ESP=Cada zona,Zona mas alejada,Zonas combinadas;
                                                   OptionString=Cada zona,Zona mas alejada,Zonas combinadas }
    { 46  ;   ;Garaje              ;Code10        ;TableRelation=Garaje.Garaje;
                                                   CaptionML=ESP=Garaje;
                                                   Description=Para usar en estadisticas Cliente / TTOO }
    { 47  ;   ;Cliente estadistico ;Code20        ;TableRelation=Customer.No.;
                                                   CaptionML=ESP=Cliente estad¡stico;
                                                   Description=Para usar en estadisticas Cliente / TTOO }
    { 48  ;   ;Fecha Facturacion   ;Date          ;CaptionML=ESP=Fecha Facturacion;
                                                   Description=Para usar en estadisticas Cliente / TTOO }
    { 49  ;   ;Tipo Servicio       ;Code10        ;TableRelation="Tipo Servicio".Codigo;
                                                   CaptionML=ESP=Tipo Servicio;
                                                   Description=Para usar en estadisticas Cliente / TTOO }
    { 50  ;   ;Codigo Servicio     ;Code10        ;TableRelation="Codigo servicio".Codigo;
                                                   CaptionML=ESP=Codigo Servicio;
                                                   Description=Para usar en estadisticas Cliente / TTOO }
    { 51  ;   ;N§ Viajes           ;Decimal       ;CaptionML=ESP=N§ Viajes;
                                                   Description=Para usar en estadisticas Cliente / TTOO }
    { 52  ;   ;Confirmado          ;Boolean       ;CaptionML=ESP=Confirmado;
                                                   Description=Para usar en estadisticas Cliente / TTOO }
    { 54  ;   ;N§ Contrato venta   ;Code10        ;CaptionML=ESP=N§ Contrato venta;
                                                   SQL Data Type=Varchar;
                                                   Editable=No }
    { 55  ;   ;Ingreso Prod        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Produccion Ingreso"."Importe sin impuesto" WHERE (N§ Parte=FIELD(N§ Parte),
                                                                                                                      Touroperador=FIELD(Touroperador)));
                                                   CaptionML=ESP=Ingreso C/I;
                                                   Description=Calculado sobre Produccion Ingreso;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Cod. Divisa venta" }
    { 56  ;   ;N§ Contrato compra  ;Code10        ;CaptionML=ESP=N§ Contrato compra;
                                                   Editable=No }
    { 57  ;   ;Marca               ;Code20        ;CaptionML=ESP=Marca }
    { 58  ;   ;Ingreso C/I         ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum(Coste-Ingreso."Importe sin impuesto" WHERE (N§ Parte=FIELD(N§ Parte),
                                                                                                               Touroperador=FIELD(Touroperador)));
                                                   CaptionML=ESP=Ingreso C/I;
                                                   Description=Calculado sobre Coste-Ingreso;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Cod. Divisa venta" }
    { 59  ;   ;Coste C/I           ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Produccion Coste"."Importe sin impuesto" WHERE (N§ Parte=FIELD(N§ Parte),
                                                                                                                    Touroperador=FIELD(Touroperador)));
                                                   CaptionML=ESP=Coste C/I;
                                                   Description=Calculado sobre Produccion Coste;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Cod. Divisa compra" }
    { 60  ;   ;Tipo Vehiculo       ;Code10        ;CaptionML=ESP=Tipo Vehiculo }
    { 61  ;   ;Filtro Fecha        ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=ESP=Filtro Fecha }
    { 62  ;   ;N§ Factura          ;Code20        ;OnValidate=VAR
                                                                lrPref@1100244000 : Record 7010415;
                                                              BEGIN
                                                                rPar.FINDFIRST;

                                                                // AJS 17.11.2005
                                                                // La fecha de registro la tomamos de la tabla prefactura porque el rendimiento es mejor

                                                                //lrCab.RESET;
                                                                //lrCab.SETRANGE("No.","N§ Factura");
                                                                //IF NOT lrCab.FINDFIRST THEN
                                                                //  CLEAR(lrCab);
                                                                //VALIDATE("Fecha Registro Factura",lrCab."Posting Date");

                                                                IF NOT lrPref.GET("N§ Prefactura") THEN
                                                                  CLEAR(lrPref);
                                                                VALIDATE("Fecha Registro Factura", lrPref."Fecha Registro factura");

                                                                // JPT 15/12/04 UEX Si se ha facturado marcamos el TTOOxParte como  Conciliado
                                                                //IF rPar."Empresa Real" = rPar."Empresa Real"::UEX THEN BEGIN
                                                                //  IF "N§ Factura" <> xRec."N§ Factura" THEN
                                                                //    lcFactTREX.CreaLinConciliadaFactFB(Rec);
                                                                //END;
                                                              END;

                                                   CaptionML=ESP=N§ Factura }
    { 63  ;   ;Bono                ;Code10        ;CaptionML=ESP=Bono;
                                                   Editable=No }
    { 64  ;   ;Filtro Num Factura  ;Code10        ;FieldClass=FlowFilter;
                                                   CaptionML=ESP=Filtro Num Factura }
    { 65  ;   ;N§ Prefactura       ;Code20        ;CaptionML=ESP=N§ Prefactura;
                                                   Description=Utilizado en autofacturacion UEX }
    { 66  ;   ;Servicio arrendado  ;Boolean       ;CaptionML=ESP=Servicio arrendado;
                                                   Description=Para usar en campos calculados;
                                                   Editable=No }
    { 67  ;   ;Fecha parte         ;Date          ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Parte.Fecha WHERE (N§ Parte=FIELD(N§ Parte)));
                                                   CaptionML=ESP=Fecha parte;
                                                   Description=Calculado para obtener la fecha operativa del parte;
                                                   Editable=No }
    { 69  ;   ;Zona trabajo        ;Code10        ;TableRelation="Zona de trabajo".Codigo;
                                                   CaptionML=ESP=Zona trabajo;
                                                   Description=FK Zona de trabajo, concepto incluido por Transunion;
                                                   Editable=No }
    { 70  ;   ;Concepto facturacion;Text30        ;CaptionML=ESP=Concepto facturacion;
                                                   Description=Descripcion manual para la factura }
    { 71  ;   ;Adultos facturados  ;Decimal       ;CaptionML=ESP=Adultos facturados }
    { 72  ;   ;Ni¤os facturados    ;Decimal       ;CaptionML=ESP=Ni¤os facturados }
    { 73  ;   ;Orden calculo       ;Integer       ;CaptionML=ESP=Orden calculo;
                                                   Description=Poder indicar en que orden se calculan los TTOO's }
    { 74  ;   ;Referencia          ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Parte.Referencia WHERE (N§ Parte=FIELD(N§ Parte)));
                                                   CaptionML=ESP=Referencia;
                                                   Description=Calculado a partir de Parte }
    { 75  ;   ;No aplica minimos   ;Boolean       ;CaptionML=ESP=No aplica minimos }
    { 76  ;   ;Ingreso C/I Bruto   ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum(Coste-Ingreso."Importe con impuesto" WHERE (N§ Parte=FIELD(N§ Parte),
                                                                                                               Touroperador=FIELD(Touroperador)));
                                                   CaptionML=ESP=Ingreso C/I Bruto;
                                                   Description=Calculado sobre Coste-Ingreso;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Cod. Divisa venta" }
    { 77  ;   ;Fecha Registro Factura;Date        ;CaptionML=ESP=Fecha Registro Factura;
                                                   Editable=No }
    { 78  ;   ;Ingreso Prod Bruto  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Produccion Ingreso"."Importe con impuesto" WHERE (N§ Parte=FIELD(N§ Parte),
                                                                                                                      Touroperador=FIELD(Touroperador)));
                                                   CaptionML=ESP=Ingreso Prod Bruto;
                                                   Description=Calculado sobre Produccion Ingreso;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Cod. Divisa venta" }
    { 79  ;   ;Vuelos partes       ;Text150       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Parte.Vuelos WHERE (N§ Parte=FIELD(N§ Parte)));
                                                   CaptionML=ESP=Vuelos partes;
                                                   Description=Calculado a partir de Parte;
                                                   Editable=No }
    { 81  ;   ;Importe Touroperador;Decimal       ;CaptionML=ESP=Importe Touroperador }
    { 101 ;   ;Ingreso C/I DL Sin  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum(Coste-Ingreso."Importe sin impuesto DL" WHERE (N§ Parte=FIELD(N§ Parte),
                                                                                                                  Touroperador=FIELD(Touroperador),
                                                                                                                  N§ Factura=FIELD(Filtro Num Factura)));
                                                   CaptionML=ESP=Ingreso C/I DL Sin;
                                                   Description=Calculado sobre coste-ingreso;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 102 ;   ;Vehiculo            ;Code10        ;CaptionML=ESP=Vehiculo }
    { 103 ;   ;Conciliado          ;Option        ;CaptionML=ESP=Conciliado;
                                                   OptionCaptionML=ESP=Sin Conciliar,Parcialmente,Totalmente;
                                                   OptionString=Sin Conciliar,Parcialmente,Totalmente;
                                                   Description=Conciliacion UEX TREX }
    { 104 ;   ;Fecha Servicio Parte;Date          ;CaptionML=ESP=Fecha Servicio Parte }
    { 105 ;   ;Facturable          ;Boolean       ;CaptionML=ESP=Facturable;
                                                   Description=Se mantiene desde Parte;
                                                   Editable=No }
    { 106 ;   ;Ingreso Anterior    ;Decimal       ;CaptionML=ESP=Ingreso Anterior;
                                                   Description=Conciliacion UEX. Cuando se cambia el precio manual desde ese modulo se marca el precio anterior;
                                                   Editable=No }
    { 110 ;   ;Gestor              ;Code20        ;CaptionML=ESP=Gestor;
                                                   Description=Usuario gestor del TTOO;
                                                   Editable=No }
    { 111 ;   ;Zona Parte          ;Code10        ;CaptionML=ESP=Zona Parte;
                                                   Description=FK Zona fisica }
    { 112 ;   ;Cliente operativo   ;Code20        ;CaptionML=ESP=Cliente operativo;
                                                   Description=FK Cliente }
  }
  KEYS
  {
    {    ;N§ Parte,Touroperador                   ;Clustered=Yes }
    {    ;Confirmado,Cliente estadistico,Touroperador,Fecha Facturacion,Garaje,Tipo Servicio,Codigo Servicio,Pax Transportados,Fecha Servicio Parte,Servicio arrendado;
                                                   SumIndexFields=N§ Viajes,Adultos transportados,Ni¤os transportados }
    { No ;Garaje,Fecha Facturacion,Touroperador,Tipo Servicio,Codigo Servicio }
    {    ;N§ Contrato venta,Confirmado             }
    {    ;N§ Contrato compra,Confirmado            }
    {    ;Confirmado,Cliente operativo,Touroperador,Tipo Servicio,Codigo Servicio,Fecha Facturacion;
                                                   SumIndexFields=Adultos transportados,Ni¤os transportados }
    {    ;Confirmado,Cliente operativo,Touroperador,Bono;
                                                   SumIndexFields=N§ Viajes,Adultos transportados,Ni¤os transportados }
    {    ;N§ Parte,Orden calculo                   }
    {    ;N§ Factura                               }
    {    ;Confirmado,Cliente operativo,Touroperador,N§ Factura }
    {    ;Confirmado,Cliente operativo,Touroperador,Tipo Servicio,Fecha Facturacion;
                                                   SumIndexFields=Adultos transportados,Ni¤os transportados }
    { No ;Conciliado,Fecha Servicio Parte         ;MaintainSQLIndex=No;
                                                   MaintainSIFTIndex=No }
    {    ;Confirmado,Cliente estadistico,Touroperador,Fecha Facturacion,Garaje,Tipo Servicio,Codigo Servicio,Pax Transportados,Servicio arrendado,Tipo Vehiculo,Vehiculo;
                                                   SumIndexFields=N§ Viajes,Adultos transportados,Ni¤os transportados }
    {    ;Marca                                   ;MaintainSQLIndex=No;
                                                   MaintainSIFTIndex=No }
    {    ;Confirmado,Cliente estadistico,Touroperador,Zona Parte }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100244007 : TextConst 'ESP=1 - Touroperador x Parte';
      Text001@1100244008 : TextConst 'ESP=Este campo no es editable cuando se ha especificado un precio manual, siempre se calcula por la zona mas alejada';
      rParte@1100244000 : Record 7010360;
      Text00001@1100244001 : TextConst 'ESP=No se pueden modificar lineas asociadas a un parte confirmado.';
      Text00002@1100244002 : TextConst 'ESP=No se pueden borrar lineas asociadas a un parte confirmado.';
      rTipo@1100244003 : Record 330;
      Text00003@1100244004 : TextConst 'ESP=No se pueden insertar lineas asociadas a un parte confirmado.';
      rHist@1100244005 : Record 7010361;
      Text00004@1100244006 : TextConst 'ESP=Desea calcular las maletas de este parte.';
      rCliTO@1100244009 : Record 7010313;
      rPar@1103350000 : Record 7010311;
      Text00005@1103350001 : TextConst 'ESP=Indique precio manual: #1###########';
      cFuncP@1103350002 : Codeunit 7010318;
      w_ventana@1103350003 : Dialog;
      Text00006@1100253000 : TextConst 'ESP=Cambiar Precio Actual,Cambiar Precio Filtrados';
      Text00007@1103355000 : TextConst 'ESP=No se calulan las maletas';
      Text00008@1103355001 : TextConst 'ESP=No se ha indicado ning£n precio manual';

    PROCEDURE MantenTipoIngreso@8(pwAnula@1103350001 : Boolean);
    VAR
      lrParte@1100244001 : Record 7010360;
      lrTxP@1100244002 : Record 7010365;
      lwTTOO@1103350000 : ARRAY [2] OF Code[10];
      lrConfCalcIng@1103350002 : Record 7035379;
    BEGIN
      // MantenTipoIngreso
      //

      IF NOT lrParte.GET("N§ Parte") THEN
        EXIT;

      CLEAR(lwTTOO);
      CLEAR(lrConfCalcIng);
      lrTxP.SETRANGE("N§ Parte"   ,"N§ Parte");
      lrTxP.SETFILTER(Touroperador,'<>%1',Touroperador);
      IF NOT pwAnula THEN
        lwTTOO[1] := Touroperador;
      IF lrTxP.FINDSET THEN BEGIN
        REPEAT
          // JPT 07/03/05 Para insertar el tipo de Calculo Ingreso en Parte a partir de la combinaci¢n de TTOOs
          IF lwTTOO[1] = '' THEN
            lwTTOO[1] := lrTxP.Touroperador
          ELSE
            IF lwTTOO[2] = '' THEN
              lwTTOO[2] := lrTxP.Touroperador
          UNTIL lrTxP.NEXT=0;
      END;

      CLEAR(lrParte."Tipo Calculo Ingresos");
      // JPT 07/03/05 Para insertar el tipo de Calculo Ingreso en Parte a partir de la combinaci¢n de TTOOs
      IF (lwTTOO[1] <> '') AND (lwTTOO[2] <> '') THEN BEGIN
        IF lrConfCalcIng.GET(lwTTOO[1],lwTTOO[2]) THEN BEGIN
          lrParte."Tipo Calculo Ingresos" := lrConfCalcIng."Tipo Calculo Ingreso";
        END;
      END;
        lrParte.MODIFY;
    END;

    PROCEDURE CambiaPrecioManual@1103350000();
    VAR
      lrTOPar@1103350000 : Record 7010365;
      lw_preciomanual@1103350001 : Decimal;
      lrParte@1103350002 : Record 7010360;
    BEGIN
      // CambiaPrecioManual

      lrTOPar := Rec;
      lw_preciomanual := lrTOPar."Precio manual venta";
      w_ventana.OPEN(Text00005);
      w_ventana.INPUT(1, lw_preciomanual);
      w_ventana.CLOSE;

      // Guardamos el precio anterior
      lrTOPar.VALIDATE("Ingreso Anterior"   , lrTOPar.TotalIngresoDL);
      lrTOPar.VALIDATE("Precio manual venta", lw_preciomanual);
      lrTOPar.MODIFY;

      lrParte.GET(lrTOPar."N§ Parte");
      //BRM 25/05/04 A¤adimos ultimo parametro para incluir tratamiento grupos
      cFuncP.desconfirmar_partes(lrParte   , FALSE,'',3); // Necesario para las anulaciones
      cFuncP.confirmar_partes   (lrParte   , FALSE,'',3);
    END;

    PROCEDURE CambiaVariosPrecioManual@1100253000(VAR prParte@1100253000 : Record 7010360);
    VAR
      lrParte@1100253004 : Record 7010360;
      lrTOPar@1103350000 : Record 7010365;
      lw_preciomanual@1103350001 : Decimal;
      lwOpc@1100253001 : Integer;
      lwImporte@1100253002 : Decimal;
      lwNumP@1100253003 : Integer;
    BEGIN
      // CambiaVariosPrecioManual
      // Cambiar el precio manual

      lrParte.COPY(prParte);

      lwOpc := STRMENU(Text00006);
      IF lwOpc=0 THEN
        EXIT;

      IF lwOpc= 1 THEN // Si solo es el actual filtramos
        lrParte.SETRECFILTER;

      lw_preciomanual := lrTOPar."Precio manual venta";
      w_ventana.OPEN(Text00005);
      w_ventana.INPUT(1, lw_preciomanual);
      w_ventana.CLOSE;

      IF lrParte.FINDSET THEN BEGIN
        REPEAT
        UNTIL lrParte.NEXT=0;
      END;



      // Guardamos el precio anterior
      lrTOPar.VALIDATE("Ingreso Anterior"   , lrTOPar.TotalIngresoDL);
      lrTOPar.VALIDATE("Precio manual venta", lw_preciomanual);
      lrTOPar.MODIFY;

      lrParte.GET(lrTOPar."N§ Parte");
      //BRM 25/05/04 A¤adimos ultimo parametro para incluir tratamiento grupos
      cFuncP.desconfirmar_partes(lrParte   , FALSE,'',3); // Necesario para las anulaciones
      cFuncP.confirmar_partes   (lrParte   , FALSE,'',3);
    END;

    PROCEDURE TotalIngresoDL@1103355002() : Decimal;
    BEGIN
      // TotalIngresoDL
      // Deveulve el total de ingresos Facturaci¢n + Produccion
      // Solo calculamos produccion cuando el filtro Num Factura est  vacio

      CALCFIELDS("Ingreso C/I DL");
      CLEAR("Ingreso Prod DL");
      IF GETFILTER("Filtro Num Factura")='' THEN
        CALCFIELDS("Ingreso Prod DL");
      EXIT("Ingreso C/I DL" + "Ingreso Prod DL");
    END;

    PROCEDURE TotalIngreso@1103355000() : Decimal;
    BEGIN
      // TotalIngreso
      // Deveulve el total de ingresos Facturaci¢n + Produccion


      CALCFIELDS("Ingreso C/I" , "Ingreso Prod");
      EXIT("Ingreso C/I" + "Ingreso Prod");
    END;

    PROCEDURE TotalIngresoBruto@1103355001() : Decimal;
    BEGIN
      // TotalIngresoBruto
      // Deveulve el total de ingresos Facturaci¢n + Produccion

      CALCFIELDS("Ingreso C/I Bruto","Ingreso Prod Bruto");
      EXIT("Ingreso C/I Bruto" + "Ingreso Prod Bruto");
    END;

    BEGIN
    {
      JPT 29/06/05
      La clave N§13 Tiene que estar desactivada para todos los clientes menos Ibizatours ya que se utiliza para calcfields informes Excel

      ## AJF 20/08/10
        .- (OC10014) Nuevo campo "Cliente operativo" correspondiente al cliente de Cliente/TTOO. Renombrado campo cliente a
           "Cliente estadistico" que corresponder  a cliente o cliente facturaci¢n dependiendo de como est configurado Cliente/TTOO.
        .- (OC10014) Modificado validate de "Touroperador" para que use el campo cliente operativo.

      $001 AJS 28012015 Nueva clave Confirmado,Cliente estadistico,Touroperador,Zona Parte para informes estadisticos
    }
    END.
  }
}
