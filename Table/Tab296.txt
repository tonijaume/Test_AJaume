OBJECT Table 296 Reminder Line
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=NAVW16.00.01,NAVES4.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               ReminderHeader.GET("Reminder No.");
               "Attached to Line No." := 0;
             END;

    OnModify=BEGIN
               TESTFIELD("System-Created Entry",FALSE);
             END;

    OnDelete=BEGIN
               ReminderLine.SETRANGE("Reminder No.","Reminder No.");
               ReminderLine.SETRANGE("Attached to Line No.","Line No.");
               ReminderLine.DELETEALL;
             END;

    CaptionML=[ENU=Reminder Line;
               ESP=L¡n. recordatorio];
  }
  FIELDS
  {
    { 1   ;   ;Reminder No.        ;Code20        ;TableRelation="Reminder Header";
                                                   CaptionML=[ENU=Reminder No.;
                                                              ESP=N§ recordatorio] }
    { 2   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              ESP=N§ l¡nea];
                                                   NotBlank=Yes }
    { 3   ;   ;Attached to Line No.;Integer       ;TableRelation="Reminder Line"."Line No." WHERE (Reminder No.=FIELD(Reminder No.));
                                                   CaptionML=[ENU=Attached to Line No.;
                                                              ESP=N§ l¡nea texto adicional];
                                                   Editable=No }
    { 4   ;   ;Type                ;Option        ;OnValidate=BEGIN
                                                                IF Type <> xRec.Type THEN BEGIN
                                                                  ReminderLine := Rec;
                                                                  INIT;
                                                                  Type := ReminderLine.Type;
                                                                  GetReminderHeader;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Type;
                                                              ESP=Tipo];
                                                   OptionCaptionML=[ENU=" ,G/L Account,Customer Ledger Entry";
                                                                    ESP=" ,Cuenta,Mov. cliente"];
                                                   OptionString=[ ,G/L Account,Customer Ledger Entry] }
    { 5   ;   ;Entry No.           ;Integer       ;TableRelation="Cust. Ledger Entry";
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Type,Type::"Customer Ledger Entry");
                                                                GetReminderHeader;
                                                                CustLedgEntry.GET("Entry No.");
                                                                CustLedgEntry.TESTFIELD(Open,TRUE);
                                                                CustLedgEntry.TESTFIELD("Customer No.",ReminderHeader."Customer No.");
                                                                IF CustLedgEntry."Currency Code" <> ReminderHeader."Currency Code" THEN
                                                                  ERROR(
                                                                    Text000,
                                                                    ReminderHeader.FIELDCAPTION("Currency Code"),
                                                                    ReminderHeader.TABLECAPTION,CustLedgEntry.TABLECAPTION);
                                                                "Posting Date" := CustLedgEntry."Posting Date";
                                                                "Document Date" := CustLedgEntry."Document Date";
                                                                "Due Date" := CustLedgEntry."Due Date";
                                                                "Document Type" := CustLedgEntry."Document Type";
                                                                "Document No." := CustLedgEntry."Document No.";
                                                                Description := CustLedgEntry.Description;
                                                                CustLedgEntry.CALCFIELDS(Amount,"Remaining Amount");
                                                                "Original Amount" := CustLedgEntry.Amount;
                                                                "Remaining Amount" := CustLedgEntry."Remaining Amount";

                                                                ReminderEntry.SETCURRENTKEY("Customer Entry No.");
                                                                ReminderEntry.SETRANGE("Customer Entry No.","Entry No.");
                                                                ReminderEntry.SETRANGE(Type,ReminderEntry.Type::Reminder);
                                                                IF ReminderEntry.FIND('+') THEN
                                                                  "No. of Reminders" := ReminderEntry."Reminder Level"
                                                                ELSE
                                                                  "No. of Reminders" := 0;
                                                                IF (CustLedgEntry."On Hold" = '') AND ("Due Date" < ReminderHeader."Document Date") THEN
                                                                  "No. of Reminders" := "No. of Reminders" + 1;
                                                                CalcFinChrg;
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF Type <> Type::"Customer Ledger Entry" THEN
                                                                EXIT;
                                                              SetCustLedgEntryView;
                                                              IF CustLedgEntry.GET("Entry No.") THEN;
                                                              LookupCustLedgEntry;
                                                            END;

                                                   CaptionML=[ENU=Entry No.;
                                                              ESP=N§ mov.];
                                                   BlankZero=Yes }
    { 6   ;   ;No. of Reminders    ;Integer       ;CaptionML=[ENU=No. of Reminders;
                                                              ESP=N§ de recordatorios] }
    { 7   ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              ESP=Fecha registro];
                                                   Editable=No }
    { 8   ;   ;Document Date       ;Date          ;CaptionML=[ENU=Document Date;
                                                              ESP=Fecha emisi¢n documento];
                                                   Editable=No }
    { 9   ;   ;Due Date            ;Date          ;CaptionML=[ENU=Due Date;
                                                              ESP=Fecha vencimiento];
                                                   Editable=No }
    { 10  ;   ;Document Type       ;Option        ;OnValidate=BEGIN
                                                                TESTFIELD(Type,Type::"Customer Ledger Entry");
                                                                VALIDATE("Document No.");
                                                              END;

                                                   CaptionML=[ENU=Document Type;
                                                              ESP=Tipo documento];
                                                   OptionCaptionML=[ENU=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund,,,,,,,,,,,,,,,Bill";
                                                                    ESP=" ,Pago,Factura,Abono,Docs. inter‚s,Recordatorio,Reembolso,,,,,,,,,,,,,,,Efecto"];
                                                   OptionString=[ ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund,,,,,,,,,,,,,,,Bill] }
    { 11  ;   ;Document No.        ;Code20        ;OnValidate=BEGIN
                                                                TESTFIELD(Type,Type::"Customer Ledger Entry");
                                                                "Entry No." := 0;
                                                                IF "Document No." <> '' THEN BEGIN
                                                                  SetCustLedgEntryView;
                                                                  IF "Document Type" <> 0 THEN
                                                                    CustLedgEntry.SETRANGE("Document Type","Document Type");
                                                                  CustLedgEntry.SETRANGE("Document No.","Document No.");
                                                                  IF CustLedgEntry.FIND('-') THEN
                                                                    VALIDATE("Entry No.",CustLedgEntry."Entry No.")
                                                                  ELSE
                                                                    ERROR(Text002,FORMAT(Type),FIELDCAPTION("Document No."),"Document No.");
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF Type <> Type::"Customer Ledger Entry" THEN
                                                                EXIT;
                                                              SetCustLedgEntryView;
                                                              IF "Document Type" <> 0 THEN
                                                                CustLedgEntry.SETRANGE("Document Type","Document Type");
                                                              IF "Document No." <> '' THEN
                                                                CustLedgEntry.SETRANGE("Document No.","Document No.");
                                                              IF CustLedgEntry.FIND('-') THEN;
                                                              CustLedgEntry.SETRANGE("Document Type");
                                                              CustLedgEntry.SETRANGE("Document No.");
                                                              LookupCustLedgEntry;
                                                            END;

                                                   CaptionML=[ENU=Document No.;
                                                              ESP=N§ documento] }
    { 12  ;   ;Description         ;Text100       ;CaptionML=[ENU=Description;
                                                              ESP=Descripci¢n] }
    { 13  ;   ;Original Amount     ;Decimal       ;CaptionML=[ENU=Original Amount;
                                                              ESP=Importe inicial];
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCodeFromHeader }
    { 14  ;   ;Remaining Amount    ;Decimal       ;CaptionML=[ENU=Remaining Amount;
                                                              ESP=Importe pendiente];
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCodeFromHeader }
    { 15  ;   ;No.                 ;Code20        ;TableRelation=IF (Type=CONST(" ")) "Standard Text"
                                                                 ELSE IF (Type=CONST(G/L Account)) "G/L Account";
                                                   OnValidate=BEGIN
                                                                IF "No." <> '' THEN BEGIN
                                                                  CASE Type OF
                                                                    Type::" ":
                                                                      BEGIN
                                                                        StdTxt.GET("No.");
                                                                        Description := StdTxt.Description;
                                                                      END;
                                                                    Type::"Customer Ledger Entry":
                                                                      BEGIN
                                                                        ReminderLine.Type := ReminderLine.Type::" ";
                                                                        ReminderLine2.Type := ReminderLine2.Type::"G/L Account";
                                                                        ERROR(
                                                                          Text001,
                                                                          FIELDCAPTION(Type),ReminderLine.Type,ReminderLine2.Type);
                                                                      END;
                                                                    Type::"G/L Account":
                                                                      BEGIN
                                                                        GLAcc.GET("No.");
                                                                        GLAcc.CheckGLAcc;
                                                                        IF NOT "System-Created Entry" THEN
                                                                        GLAcc.TESTFIELD("Direct Posting",TRUE);
                                                                        GLAcc.TESTFIELD("Gen. Prod. Posting Group");
                                                                        Description := GLAcc.Name;
                                                                        GetReminderHeader;
                                                                        "Tax Group Code" := GLAcc."Tax Group Code";
                                                                        VALIDATE("Gen. Prod. Posting Group",GLAcc."Gen. Prod. Posting Group");
                                                                        VALIDATE("VAT Prod. Posting Group",GLAcc."VAT Prod. Posting Group");
                                                                      END;
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              ESP=N§] }
    { 16  ;   ;Amount              ;Decimal       ;OnValidate=BEGIN
                                                                IF Type = Type::" " THEN BEGIN
                                                                  ReminderLine.Type := ReminderLine.Type::"G/L Account";
                                                                  ReminderLine2.Type := ReminderLine.Type::"Customer Ledger Entry";
                                                                  ERROR(
                                                                    Text001,
                                                                    FIELDCAPTION(Type),ReminderLine.Type,ReminderLine2.Type);
                                                                END;
                                                                GetReminderHeader;
                                                                Amount := ROUND(Amount,Currency."Amount Rounding Precision");
                                                                CASE "VAT Calculation Type" OF
                                                                  "VAT Calculation Type"::"Normal VAT",
                                                                  "VAT Calculation Type"::"Reverse Charge VAT",
                                                                  "VAT Calculation Type"::"Full VAT",
                                                                  "VAT Calculation Type"::"No Taxable VAT":
                                                                    "VAT Amount" := Amount * ("VAT %" / 100);
                                                                  "VAT Calculation Type"::"Sales Tax":
                                                                    BEGIN
                                                                      "VAT Amount" :=
                                                                        SalesTaxCalculate.CalculateTax(
                                                                          ReminderHeader."Tax Area Code","Tax Group Code",ReminderHeader."Tax Liable",
                                                                          ReminderHeader."Posting Date",Amount,0,0);
                                                                      IF Amount - "VAT Amount" <> 0 THEN
                                                                        "VAT %" := ROUND(100 * "VAT Amount" / Amount,0.000001)
                                                                      ELSE
                                                                        "VAT %" := 0;
                                                                    END;
                                                                  "VAT Calculation Type"::"No Taxable VAT":
                                                                    BEGIN
                                                                      "VAT Amount" := 0;
                                                                      "VAT %" := 0;
                                                                    END;
                                                                END;
                                                                "VAT Amount" := ROUND("VAT Amount",Currency."Amount Rounding Precision");
                                                              END;

                                                   CaptionML=[ENU=Amount;
                                                              ESP=Importe];
                                                   BlankZero=Yes;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCodeFromHeader }
    { 17  ;   ;Interest Rate       ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD(Type,Type::"Customer Ledger Entry");
                                                                TESTFIELD("Entry No.");
                                                                CalcFinChrg;
                                                              END;

                                                   CaptionML=[ENU=Interest Rate;
                                                              ESP=Tipo inter‚s];
                                                   DecimalPlaces=0:6;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 18  ;   ;Gen. Prod. Posting Group;Code10    ;TableRelation="Gen. Product Posting Group";
                                                   OnValidate=BEGIN
                                                                IF xRec."Gen. Prod. Posting Group" <> "Gen. Prod. Posting Group" THEN
                                                                  IF GenProdPostingGrp.ValidateVatProdPostingGroup(GenProdPostingGrp,"Gen. Prod. Posting Group") THEN
                                                                    VALIDATE("VAT Prod. Posting Group",GenProdPostingGrp."Def. VAT Prod. Posting Group");
                                                              END;

                                                   CaptionML=[ENU=Gen. Prod. Posting Group;
                                                              ESP=Grupo contable producto] }
    { 19  ;   ;VAT %               ;Decimal       ;CaptionML=[ENU=VAT %;
                                                              ESP=% IVA];
                                                   DecimalPlaces=0:6;
                                                   Editable=No }
    { 20  ;   ;VAT Calculation Type;Option        ;CaptionML=[ENU=VAT Calculation Type;
                                                              ESP=Tipo c lculo IVA];
                                                   OptionCaptionML=[ENU=Normal VAT,Reverse Charge VAT,Full VAT,Sales Tax,No Taxable VAT;
                                                                    ESP=Normal,Reversi¢n,Total,Impto. venta,No sujeto];
                                                   OptionString=Normal VAT,Reverse Charge VAT,Full VAT,Sales Tax,No Taxable VAT;
                                                   Editable=No }
    { 21  ;   ;VAT Amount          ;Decimal       ;CaptionML=[ENU=VAT Amount;
                                                              ESP=Importe IVA];
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCodeFromHeader }
    { 22  ;   ;Tax Group Code      ;Code10        ;TableRelation="Tax Group";
                                                   OnValidate=BEGIN
                                                                VALIDATE("VAT Prod. Posting Group");
                                                              END;

                                                   CaptionML=[ENU=Tax Group Code;
                                                              ESP=C¢d. grupo impuesto] }
    { 23  ;   ;VAT Prod. Posting Group;Code10     ;TableRelation="VAT Product Posting Group";
                                                   OnValidate=BEGIN
                                                                GetReminderHeader;
                                                                VATPostingSetup.GET(ReminderHeader."VAT Bus. Posting Group","VAT Prod. Posting Group");
                                                                "VAT %" := VATPostingSetup."VAT+EC %";
                                                                "VAT Calculation Type" := VATPostingSetup."VAT Calculation Type";
                                                                "VAT Identifier" := VATPostingSetup."VAT Identifier";
                                                                CASE "VAT Calculation Type" OF
                                                                  "VAT Calculation Type"::"Reverse Charge VAT":
                                                                    "VAT %" := 0;
                                                                  "VAT Calculation Type"::"Full VAT":
                                                                    BEGIN
                                                                      TESTFIELD(Type,Type::"G/L Account");
                                                                      VATPostingSetup.TESTFIELD("Sales VAT Account");
                                                                      TESTFIELD("No.",VATPostingSetup."Sales VAT Account");
                                                                    END;
                                                                  "VAT Calculation Type"::"Sales Tax":
                                                                    BEGIN
                                                                      "VAT Amount" :=
                                                                        SalesTaxCalculate.CalculateTax(
                                                                          ReminderHeader."Tax Area Code","Tax Group Code",ReminderHeader."Tax Liable",
                                                                          ReminderHeader."Posting Date",Amount,0,0);
                                                                      IF Amount - "VAT Amount" <> 0 THEN
                                                                        "VAT %" := ROUND(100 * "VAT Amount" / Amount,0.000001)
                                                                      ELSE
                                                                        "VAT %" := 0;
                                                                      "VAT Amount" := ROUND("VAT Amount",Currency."Amount Rounding Precision");
                                                                    END;
                                                                END;
                                                                VALIDATE(Amount);
                                                              END;

                                                   CaptionML=[ENU=VAT Prod. Posting Group;
                                                              ESP=Grupo registro IVA prod.] }
    { 24  ;   ;VAT Identifier      ;Code10        ;CaptionML=[ENU=VAT Identifier;
                                                              ESP=Identific. IVA];
                                                   Editable=No }
    { 25  ;   ;Line Type           ;Option        ;CaptionML=[ENU=Line Type;
                                                              ESP=Tipo l¡nea];
                                                   OptionCaptionML=[ENU=ReminderLine,Not Due,Beginning Text,Ending Text,Rounding,OnHold,Additional Fee;
                                                                    ESP=L¡n. recordatorio,No vencido,Texto inicial,Texto final,Redondeo,Esperar,Recargo fijo];
                                                   OptionString=ReminderLine,Not Due,Beginning Text,Ending Text,Rounding,OnHold,Additional Fee }
    { 101 ;   ;System-Created Entry;Boolean       ;CaptionML=[ENU=System-Created Entry;
                                                              ESP=Asiento autom tico];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Reminder No.,Line No.                   ;SumIndexFields=Amount,VAT Amount,Remaining Amount;
                                                   MaintainSIFTIndex=No;
                                                   Clustered=Yes }
    {    ;Reminder No.,Type                       ;SumIndexFields=Amount,VAT Amount,Remaining Amount;
                                                   MaintainSQLIndex=No;
                                                   MaintainSIFTIndex=No }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=The %1 on the %2 and the %3 must be the same.;ESP=El/la %1 en el/la %2 y en el/la %3 deben ser igual.';
      Text001@1001 : TextConst 'ENU=%1 must be %2 or %3.;ESP=%1 debe ser %2 o %3.';
      FinChrgTerms@1002 : Record 5;
      ReminderTerms@1003 : Record 292;
      ReminderLevel@1004 : Record 293;
      ReminderHeader@1005 : Record 295;
      ReminderLine@1006 : Record 296;
      ReminderLine2@1007 : Record 296;
      ReminderEntry@1008 : Record 300;
      CustLedgEntry@1009 : Record 21;
      Currency@1011 : Record 4;
      VATPostingSetup@1012 : Record 325;
      CustPostingGr@1013 : Record 92;
      GLAcc@1014 : Record 15;
      StdTxt@1015 : Record 7;
      GenProdPostingGrp@1016 : Record 251;
      SalesTaxCalculate@1017 : Codeunit 398;
      InterestCalcDate@1018 : Date;
      CalcInterest@1019 : Boolean;
      Text002@1010 : TextConst 'ENU=There is no open %1 with %2 %3.;ESP=No hay %1 abiertos con el %2 %3.';

    LOCAL PROCEDURE CalcFinChrg@6();
    VAR
      DtldCLE@1001 : Record 379;
      InterestStartDate@1002 : Date;
    BEGIN
      GetReminderHeader;
      "Interest Rate" := 0;
      Amount := 0;
      "VAT Amount" := 0;
      "VAT Calculation Type" := "VAT Calculation Type"::"Normal VAT";
      "Gen. Prod. Posting Group" := '';
      "VAT Prod. Posting Group" := '';
      CustLedgEntry.GET("Entry No.");
      IF (CustLedgEntry."On Hold" <> '') OR ("Due Date" >= ReminderHeader."Document Date") THEN
        EXIT;

      ReminderLevel.SETRANGE("Reminder Terms Code",ReminderHeader."Reminder Terms Code");
      IF ReminderHeader."Use Header Level" THEN
        ReminderLevel.SETRANGE("No.",1,ReminderHeader."Reminder Level")
      ELSE
        ReminderLevel.SETRANGE("No.",1,Rec."No. of Reminders");
      IF NOT ReminderLevel.FIND('+') THEN
        ReminderLevel.INIT;
      IF (NOT ReminderLevel."Calculate Interest") OR (ReminderHeader."Fin. Charge Terms Code" = '') THEN
        EXIT;
      FinChrgTerms.GET(ReminderHeader."Fin. Charge Terms Code");
      "Interest Rate" := FinChrgTerms."Interest Rate";
      CASE FinChrgTerms."Interest Calculation Method" OF
        FinChrgTerms."Interest Calculation Method"::"Average Daily Balance":
          BEGIN
            CalcInterest := FALSE;
            FinChrgTerms.TESTFIELD("Interest Period (Days)");
            InterestCalcDate := CustLedgEntry."Due Date";
            ReminderEntry.SETCURRENTKEY("Customer Entry No.");
            ReminderEntry.SETRANGE("Customer Entry No.","Entry No.");
            ReminderEntry.SETRANGE(Type,ReminderEntry.Type::Reminder);
            ReminderEntry.SETRANGE("Interest Posted",TRUE);
            IF ReminderEntry.FIND('+') THEN
              InterestCalcDate := ReminderEntry."Document Date";
            ReminderEntry.SETRANGE(Type,ReminderEntry.Type::"Finance Charge Memo");
            ReminderEntry.SETRANGE("Interest Posted");
            IF ReminderEntry.FIND('+') THEN
              IF ReminderEntry."Document Date" > InterestCalcDate THEN
                InterestCalcDate := ReminderEntry."Document Date";
            IF (InterestCalcDate < ReminderHeader."Document Date") THEN BEGIN
              CalcInterest := TRUE;
              DtldCLE.SETCURRENTKEY("Cust. Ledger Entry No.","Entry Type","Posting Date");
              DtldCLE.SETRANGE("Cust. Ledger Entry No.",CustLedgEntry."Entry No.");
              DtldCLE.SETFILTER("Entry Type",'%1|%2|%3|%4|%5',
                DtldCLE."Entry Type"::"Initial Entry",
                DtldCLE."Entry Type"::Application,
                DtldCLE."Entry Type"::"Payment Tolerance",
                DtldCLE."Entry Type"::"Payment Discount Tolerance (VAT Excl.)",
                DtldCLE."Entry Type"::"Payment Discount Tolerance (VAT Adjustment)");
                DtldCLE.SETRANGE("Posting Date",0D,ReminderHeader."Document Date");
              IF DtldCLE.FIND('-') THEN
                REPEAT
                  IF DtldCLE."Entry Type" = DtldCLE."Entry Type"::"Initial Entry" THEN
                    InterestStartDate:= CustLedgEntry."Due Date"
                  ELSE
                    InterestStartDate := DtldCLE."Posting Date";
                  IF InterestCalcDate > InterestStartDate THEN
                    InterestStartDate := InterestCalcDate;
                  Amount := Amount + DtldCLE.Amount * (ReminderHeader."Document Date" - InterestStartDate);
                UNTIL DtldCLE.NEXT = 0;
            END;
            IF CalcInterest THEN
              Amount := Amount / FinChrgTerms."Interest Period (Days)" * "Interest Rate" / 100
            ELSE
              Amount := 0;
          END;
        FinChrgTerms."Interest Calculation Method"::"Balance Due":
          IF "Due Date" < ReminderHeader."Document Date"
          THEN
            Amount := "Remaining Amount" * "Interest Rate" / 100;
      END;
      IF Amount <> 0 THEN BEGIN
        CustPostingGr.GET(ReminderHeader."Customer Posting Group");
        CustPostingGr.TESTFIELD("Interest Account");
        GLAcc.GET(CustPostingGr."Interest Account");
        GLAcc.TESTFIELD("Gen. Prod. Posting Group");
        VALIDATE("Gen. Prod. Posting Group",GLAcc."Gen. Prod. Posting Group");
        VALIDATE("VAT Prod. Posting Group",GLAcc."VAT Prod. Posting Group");
      END;
    END;

    LOCAL PROCEDURE SetCustLedgEntryView@9();
    BEGIN
      GetReminderHeader;
      CustLedgEntry.SETCURRENTKEY("Customer No.",Open);
      CustLedgEntry.SETRANGE("Customer No.",ReminderHeader."Customer No.");
      CustLedgEntry.SETRANGE(Open,TRUE);
    END;

    LOCAL PROCEDURE LookupCustLedgEntry@12();
    BEGIN
      IF FORM.RUNMODAL(0,CustLedgEntry) = ACTION::LookupOK THEN
        VALIDATE("Entry No.",CustLedgEntry."Entry No.");
    END;

    LOCAL PROCEDURE GetReminderHeader@2();
    BEGIN
      IF "Reminder No." <> ReminderHeader."No." THEN BEGIN
        ReminderHeader.GET("Reminder No.");
        ProcessReminderHeader;
      END;
    END;

    LOCAL PROCEDURE ProcessReminderHeader@1();
    BEGIN
      ReminderHeader.TESTFIELD("Customer No.");
      ReminderHeader.TESTFIELD("Document Date");
      ReminderHeader.TESTFIELD("Customer Posting Group");
      ReminderHeader.TESTFIELD("Reminder Terms Code");
      ReminderTerms.GET(ReminderHeader."Reminder Terms Code");
      IF ReminderHeader."Currency Code" = '' THEN
        Currency.InitRoundingPrecision
      ELSE BEGIN
        Currency.GET(ReminderHeader."Currency Code");
        Currency.TESTFIELD("Amount Rounding Precision");
      END;
    END;

    PROCEDURE GetCurrencyCodeFromHeader@4() : Code[10];
    VAR
      ReminderHeader@1000 : Record 295;
    BEGIN
      IF ("Reminder No." = ReminderHeader."No.") THEN
        EXIT(ReminderHeader."Currency Code")
      ELSE
        IF ReminderHeader.GET("Reminder No.") THEN
          EXIT(ReminderHeader."Currency Code")
        ELSE
          EXIT('');
    END;

    BEGIN
    END.
  }
}
