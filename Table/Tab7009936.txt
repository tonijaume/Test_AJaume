OBJECT Table 7009936 Ingreso transfer - COM
{
  OBJECT-PROPERTIES
  {
    Date=26/06/15;
    Time=10:18:46;
    Modified=Yes;
    Version List=AIC2009,COM;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               "ID Detalle" := _GetNextID;
             END;

    LookupFormID=Form7010058;
    DrillDownFormID=Form7010058;
  }
  FIELDS
  {
    { 1   ;   ;Destino             ;Code10        ;CaptionML=[ENU=Destination;
                                                              ESP=Destino];
                                                   Description=PK }
    { 3   ;   ;Touroperador        ;Code10        ;TableRelation=TourOperador.TourOperador;
                                                   CaptionML=[ENU=Touroperator;
                                                              ESP=Touroperador];
                                                   Description=PK, TourOperador.TourOperador }
    { 5   ;   ;Num. Bono           ;Code10        ;CaptionML=[ENU=Booking Number;
                                                              ESP=Num. Bono];
                                                   Description=PK }
    { 7   ;   ;Fecha servicio      ;Date          ;CaptionML=[ENU=Service date;
                                                              ESP=Fecha servicio];
                                                   Description=PK }
    { 9   ;   ;ID Servicio         ;Integer       ;CaptionML=[ENU=Service ID;
                                                              ESP=ID Servicio];
                                                   Description=PK }
    { 11  ;   ;ID Detalle          ;Integer       ;CaptionML=[ENU=Detail ID;
                                                              ESP=ID Detalle];
                                                   Description=PK }
    { 13  ;   ;ID Calculo          ;Integer       ;CaptionML=[ENU=Calculation ID;
                                                              ESP=ID Calculo] }
    { 15  ;   ;Adultos             ;Decimal       ;CaptionML=[ENU=Adults;
                                                              ESP=Adultos];
                                                   DecimalPlaces=0:0 }
    { 17  ;   ;Ni¤os               ;Decimal       ;CaptionML=[ENU=Children;
                                                              ESP=Ni¤os];
                                                   DecimalPlaces=0:0 }
    { 19  ;   ;Precio adulto       ;Decimal       ;CaptionML=[ENU=Adult price;
                                                              ESP=Precio adulto];
                                                   AutoFormatType=2;
                                                   AutoFormatExpr="Cod. Divisa" }
    { 21  ;   ;Precio ni¤o         ;Decimal       ;CaptionML=[ENU=Child price;
                                                              ESP=Precio ni¤o];
                                                   AutoFormatType=2;
                                                   AutoFormatExpr="Cod. Divisa" }
    { 23  ;   ;Tipo aplicacion     ;Option        ;CaptionML=[ENU=Application type;
                                                              ESP=Tipo aplicacion];
                                                   OptionCaptionML=[ENU=,Person,Reservation;
                                                                    ESP=,Persona,Reserva];
                                                   OptionString=,Persona,Reserva }
    { 25  ;   ;Importe             ;Decimal       ;OnValidate=BEGIN
                                                                _CalculateAmounts;
                                                              END;

                                                   CaptionML=[ENU=Amount;
                                                              ESP=Importe];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Cod. Divisa" }
    { 27  ;   ;Cliente             ;Code20        ;TableRelation=Customer.No.;
                                                   OnValidate=BEGIN
                                                                _GetDatosCliente;
                                                              END;

                                                   CaptionML=[ENU=Customer;
                                                              ESP=Cliente];
                                                   Description=Customer.No. }
    { 29  ;   ;Cod. Divisa         ;Code10        ;TableRelation=Currency.Code;
                                                   OnValidate=BEGIN
                                                                _CalculateAmounts;
                                                              END;

                                                   CaptionML=[ENU=Currency code;
                                                              ESP=Cod. Divisa];
                                                   Description=Currency.Code }
    { 31  ;   ;Origen ruta         ;Code10        ;CaptionML=[ENU=Route origin;
                                                              ESP=Origen ruta] }
    { 33  ;   ;Destino ruta        ;Code10        ;CaptionML=[ENU=Route destination;
                                                              ESP=Destino ruta] }
    { 35  ;   ;Tipo servicio venta ;Option        ;CaptionML=[ENU=Sale service type;
                                                              ESP=Tipo servicio venta];
                                                   OptionCaptionML=[ENU=Shared,Private,Deluxe;
                                                                    ESP=Compartido,Privado,Deluxe];
                                                   OptionString=Compartido,Privado,Deluxe;
                                                   Description=Compartido,Privado,Deluxe }
    { 37  ;   ;Tipo operacion      ;Option        ;CaptionML=[ENU=Operation Type;
                                                              ESP=Tipo operacion];
                                                   OptionCaptionML=[ENU=Charter,Regular;
                                                                    ESP=Charter,Regular];
                                                   OptionString=Charter,Regular }
    { 39  ;   ;Cantidad            ;Decimal       ;CaptionML=[ENU=Quantity;
                                                              ESP=Cantidad] }
    { 41  ;   ;Codigo suplemento   ;Code10        ;TableRelation="Tipo elemento"."Tipo elemento" WHERE (Humano=CONST(No));
                                                   CaptionML=[ENU=Supplement code;
                                                              ESP=Codigo suplemento];
                                                   Description="Tipo elemento"."Tipo elemento" WHERE (Humano=CONST(No)) }
    { 43  ;   ;Tipo linea          ;Option        ;CaptionML=[ENU=Line Type;
                                                              ESP=Tipo linea];
                                                   OptionCaptionML=[ENU=Service,Supplement;
                                                                    ESP=Servicio,Suplemento];
                                                   OptionString=Base,Suplemento }
    { 45  ;   ;Gr. Registro IVA Producto;Code10   ;TableRelation="VAT Product Posting Group".Code;
                                                   OnValidate=BEGIN
                                                                _GetVAT;
                                                              END;

                                                   CaptionML=[ENU=VAT Prod. posting group;
                                                              ESP=Gr. Registro IVA Producto];
                                                   Description="VAT Product Posting Group".Code }
    { 47  ;   ;Num. Contrato       ;Code10        ;OnValidate=BEGIN
                                                                _GetDatosContrato;
                                                              END;

                                                   CaptionML=[ENU=Contract No.;
                                                              ESP=Num. Contrato] }
    { 49  ;   ;Grupo registro IVA neg.;Code10     ;TableRelation="VAT Business Posting Group".Code;
                                                   OnValidate=BEGIN
                                                                _GetVAT;
                                                              END;

                                                   CaptionML=[ENU=VAT Bus. Posting Group;
                                                              ESP=Grupo registro IVA neg.];
                                                   Description="VAT Business Posting Group".Code }
    { 51  ;   ;% IVA               ;Decimal       ;OnValidate=BEGIN
                                                                _CalculateAmounts;
                                                              END;

                                                   CaptionML=[ENU=VAT %;
                                                              ESP=% IVA] }
    { 53  ;   ;Precios IVA incluido;Boolean       ;CaptionML=[ENU=Prices VAT included;
                                                              ESP=Precios IVA incluido] }
    { 55  ;   ;Importe con impuestos;Decimal      ;CaptionML=[ENU=Amount with taxes;
                                                              ESP=Importe con impuestos] }
    { 57  ;   ;Importe sin impuestos;Decimal      ;CaptionML=[ENU=Amount w/o taxes;
                                                              ESP=Importe sin impuestos] }
    { 59  ;   ;Importe con impuestos (DL);Decimal ;CaptionML=[ENU=Amount with taxes (LCY);
                                                              ESP=Importe con impuestos (DL)] }
    { 61  ;   ;Importe sin impuestos (DL);Decimal ;CaptionML=[ENU=Amount w/o taxes (LCY);
                                                              ESP=Importe sin impuestos (DL)] }
    { 70  ;   ;Num. Prefactura     ;Code20        ;CaptionML=[ENU=Proforma No.;
                                                              ESP=Num. Prefactura] }
    { 72  ;   ;Num. Documento      ;Code20        ;CaptionML=[ENU=Document No.;
                                                              ESP=Num. Documento] }
  }
  KEYS
  {
    {    ;ID Detalle                               }
    {    ;Destino,Touroperador,Num. Bono,Fecha servicio,ID Servicio;
                                                   SumIndexFields=Importe;
                                                   Clustered=Yes }
    {    ;ID Calculo                              ;SumIndexFields=Importe }
    {    ;Num. Documento,Num. Prefactura,Destino,Touroperador,Fecha servicio,Num. Bono;
                                                   SumIndexFields=Importe }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    LOCAL PROCEDURE _GetNextID@1000000000() : Integer;
    VAR
      lrIngreso@1000000000 : Record 7009936;
    BEGIN
      // _GetNextID

      lrIngreso.RESET;
      IF lrIngreso.FINDLAST THEN
        EXIT(lrIngreso."ID Detalle" + 1)
      ELSE
        EXIT(1);
    END;

    LOCAL PROCEDURE _GetDatosContrato@1000000001();
    VAR
      lrContrato@1000000000 : Record 7009788;
    BEGIN
      // _GetDatosContrato

      IF NOT lrContrato.GET(Destino, "Num. Contrato") THEN
        EXIT;

      VALIDATE("Precios IVA incluido"     , lrContrato."Impuestos incluidos");
      VALIDATE(Cliente                    , lrContrato.Cliente);
      VALIDATE("Cod. Divisa"              , lrContrato."C¢d. divisa");
      VALIDATE("Gr. Registro IVA Producto", lrContrato."Gr. Registro IVA Producto");
    END;

    LOCAL PROCEDURE _GetDatosCliente@1000000002();
    VAR
      lrCustomer@1000000000 : Record 18;
    BEGIN
      // _GetDatosCliente

      IF NOT lrCustomer.GET(Cliente) THEN
        EXIT;

      VALIDATE("Grupo registro IVA neg.", lrCustomer."VAT Bus. Posting Group");
    END;

    LOCAL PROCEDURE _GetVAT@1000000004();
    VAR
      lrVATSetup@1000000000 : Record 325;
    BEGIN
      // _GetVAT

      IF NOT lrVATSetup.GET("Grupo registro IVA neg.", "Gr. Registro IVA Producto") THEN
        VALIDATE("% IVA", 0)
      ELSE
        VALIDATE("% IVA", lrVATSetup."VAT+EC %");
    END;

    LOCAL PROCEDURE _CalculateAmounts@1000000006();
    VAR
      lrCurrExch@1000000000 : Record 330;
    BEGIN
      // _CalculateAmounts

      IF "Precios IVA incluido" THEN
      BEGIN
        "Importe con impuestos" := Importe;
        "Importe sin impuestos" := ROUND(Importe / (1 + ("% IVA" / 100)));
      END
      ELSE
      BEGIN
        "Importe con impuestos" := ROUND(Importe * (1 + ("% IVA" / 100)));
        "Importe sin impuestos" := Importe;
      END;

      IF "Cod. Divisa" = '' THEN
      BEGIN
        "Importe con impuestos (DL)" := "Importe con impuestos";
        "Importe sin impuestos (DL)" := "Importe sin impuestos";
      END
      ELSE
      BEGIN
        "Importe con impuestos (DL)" := ROUND(
                                              lrCurrExch.ExchangeAmtFCYToFCY(TODAY, "Cod. Divisa", '', "Importe con impuestos")
                                             );
        "Importe sin impuestos (DL)" := ROUND(
                                              lrCurrExch.ExchangeAmtFCYToFCY(TODAY, "Cod. Divisa", '', "Importe sin impuestos")
                                             );
      END;
    END;

    BEGIN
    {
      $001 AJS 26062015 El campo Delegacion pasa a llamarse Destino porque contiene el valor de la dimension Destino de la facturacion
    }
    END.
  }
}
