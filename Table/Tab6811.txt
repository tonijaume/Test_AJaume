OBJECT Table 6811 EP WP Request Table
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVW16.00;
  }
  PROPERTIES
  {
    OnInsert=VAR
               Table@1000 : Record 2000000001;
               EPWebPartRequest@1001 : Record 6805;
             BEGIN
               EPWebPartRequest.GET(Rec."Group Code","WP Request Code");
               IF EPWebPartRequest.Type = EPWebPartRequest.Type::" " THEN
                 ERROR(Text007,EPWebPartRequest.FIELDCAPTION(Type),EPWebPartRequest.TABLECAPTION);

               Table.SETRANGE(Type,Table.Type::Table);
               Table.SETRANGE(ID,"Table No.");
               Table.FIND('-');
               CheckWPRTablesForInsert;
             END;

    OnDelete=VAR
               EPGrpReqTypeTableTabs@1000000000 : Record 6806;
               EPGrpReqTypeTableEditExp@1000000001 : Record 6810;
               EPGrpReqTypeConnections@1000000003 : Record 6815;
               EPGrpReqTypeFilterFields@1000000004 : Record 6832;
               EPGrpReqTypeFilterKeys@1000000005 : Record 6833;
             BEGIN
               DeleteTableActions;

               // delete tabs
               EPGrpReqTypeTableTabs.SETRANGE("Group Code","Group Code");
               EPGrpReqTypeTableTabs.SETRANGE("WP Request Code","WP Request Code");
               EPGrpReqTypeTableTabs.SETRANGE("Table No.","Table No.");
               IF EPGrpReqTypeTableTabs.FIND('-') THEN
                 REPEAT
                   EPGrpReqTypeTableTabs.DELETE(TRUE);
                 UNTIL EPGrpReqTypeTableTabs.NEXT = 0;

               // delete edit expression
               EPGrpReqTypeTableEditExp.SETRANGE("Group Code","Group Code");
               EPGrpReqTypeTableEditExp.SETRANGE("WP Request Code","WP Request Code");
               EPGrpReqTypeTableEditExp.SETRANGE("Table No.","Table No.");
               IF EPGrpReqTypeTableEditExp.FIND('-') THEN
                 REPEAT
                   EPGrpReqTypeTableEditExp.DELETE(TRUE);
                 UNTIL EPGrpReqTypeTableEditExp.NEXT = 0;

               // delete head line connection (6815)
               EPGrpReqTypeConnections.SETRANGE("Group Code","Group Code");
               EPGrpReqTypeConnections.SETRANGE("WP Request Code","WP Request Code");
               EPGrpReqTypeConnections.SETRANGE("Header Table No.","Table No.");
               IF EPGrpReqTypeConnections.FIND('-') THEN
                 REPEAT
                   EPGrpReqTypeConnections.DELETE(TRUE);
                 UNTIL EPGrpReqTypeConnections.NEXT = 0;

               // delete connections to other webparts (filter, 6832)
               EPGrpReqTypeFilterFields.SETRANGE("Group Code","Group Code");
               EPGrpReqTypeFilterFields.SETRANGE("WP Request Code","WP Request Code");
               EPGrpReqTypeFilterFields.SETRANGE("Table No.","Table No.");
               IF EPGrpReqTypeFilterFields.FIND('-') THEN
                 REPEAT
                   EPGrpReqTypeFilterFields.DELETE(TRUE);
                 UNTIL EPGrpReqTypeFilterFields.NEXT = 0;

               // delete connections to other webparts (keys, 6833)
               EPGrpReqTypeFilterKeys.SETRANGE("Group Code","Group Code");
               EPGrpReqTypeFilterKeys.SETRANGE("WP Request Code","WP Request Code");
               EPGrpReqTypeFilterKeys.SETRANGE("Table No.","Table No.");
               IF EPGrpReqTypeFilterKeys.FIND('-') THEN
                 REPEAT
                   EPGrpReqTypeFilterKeys.DELETE(TRUE);
                 UNTIL EPGrpReqTypeFilterKeys.NEXT = 0;
             END;

    OnRename=VAR
               EPSupportFunctions@1000000000 : Codeunit 6815;
             BEGIN
               CheckWPRTablesForRename;
               IF xRec."Header or Line" <> "Header or Line"::" " THEN
                 IF "Header or Line" <> xRec."Header or Line" THEN
                   IF GUIALLOWED THEN
                     IF CONFIRM(Text008,FALSE) THEN
                       DeleteTableActions;
               EPSupportFunctions.RenameTableNo(Rec, xRec);
             END;

    CaptionML=[ENU=EP WP Request Table;
               ESP=Tabla solicitud elemento Web EP];
  }
  FIELDS
  {
    { 1   ;   ;Group Code          ;Code20        ;TableRelation="EP Group".Code;
                                                   CaptionML=[ENU=Group Code;
                                                              ESP=C¢digo grupo];
                                                   Editable=No }
    { 2   ;   ;WP Request Code     ;Code20        ;TableRelation="EP Web Part Request".Code WHERE (Group Code=FIELD(Group Code));
                                                   CaptionML=[ENU=WP Request Code;
                                                              ESP=C¢digo solicitud elemento Web];
                                                   Editable=No }
    { 3   ;   ;Table No.           ;Integer       ;TableRelation=Object.ID WHERE (Type=CONST(Table));
                                                   OnValidate=VAR
                                                                Object@1000 : Record 2000000001;
                                                              BEGIN
                                                                Object.SETRANGE(Type,Object.Type::Table);
                                                                Object.SETRANGE(ID,"Table No.");
                                                                Object.FIND('-');
                                                                "Table Name" := Object.Name;
                                                              END;

                                                   CaptionML=[ENU=Table No.;
                                                              ESP=N§ tabla] }
    { 4   ;   ;Table Name          ;Text80        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObjWithCaption."Object Caption" WHERE (Object Type=CONST(Table),
                                                                                                                Object ID=FIELD(Table No.)));
                                                   CaptionML=[ENU=Table Name;
                                                              ESP=Nombre tabla];
                                                   Editable=No }
    { 5   ;   ;Header or Line      ;Option        ;CaptionML=[ENU=Header or Line;
                                                              ESP=Cabecera o l¡nea];
                                                   OptionCaptionML=[ENU=" ,Header,Line";
                                                                    ESP=" ,Cabecera,L¡nea"];
                                                   OptionString=[ ,Header,Line] }
    { 6   ;   ;First Record Shown  ;Integer       ;InitValue=1;
                                                   CaptionML=[ENU=First Record Shown;
                                                              ESP=Mostrar primer registro] }
    { 7   ;   ;No. of Records Shown;Integer       ;InitValue=10;
                                                   CaptionML=[ENU=No. of Records Shown;
                                                              ESP=N§ registros mostrados] }
    { 8   ;   ;Sorting Order       ;Option        ;CaptionML=[ENU=Sorting Order;
                                                              ESP=Ordenaci¢n];
                                                   OptionCaptionML=[ENU=Ascending,Descending;
                                                                    ESP=Ascendente,Descendente];
                                                   OptionString=Ascending,Descending }
  }
  KEYS
  {
    {    ;Group Code,WP Request Code,Table No.,Header or Line;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1000 : TextConst 'ENU=A value must be provided for the %1 field.;ESP=Proporcione un valor para el campo %1.';
      Text002@1001 : TextConst 'ENU=Only 1 Table can be defined for a %1 of %2 %3.;ESP=S¢lo se puede definir 1 tabla para %1 de %2 %3.';
      Text003@1002 : TextConst 'ENU=Only a %1 Table can be defined for a %2 of %3 %4.;ESP=S¢lo se puede definir 1 tabla %1 para %2 de %3 %4.';
      Text004@1003 : TextConst 'ENU=Only 1 %1 Table can be defined for a %2 of %3 %4.;ESP=S¢lo se puede definir 1 tabla %1 para %2 de %3 %4.';
      Text005@1004 : TextConst 'ENU=No Tables can be defined for a %1 of %2 %3.;ESP=No puede definirse ninguna tabla para %1 de %2 %3.';
      Text006@1005 : TextConst 'ENU=A Table can only be defined once in a %1.;ESP=Una tabla s¢lo se puede definir una vez en %1.';
      Text007@1006 : TextConst 'ENU=The %1 of the %2 must be filled out before attempting to declare a Table for it.;ESP=Se debe cumplimentar %1 de %2 antes de intentar declarar una tabla.';
      Text008@1007 : TextConst 'ENU=Changing the value of the field Header or Line will force the program to delete the Actions associated to this Table. Proceed?;ESP=Si se cambia el valor del campo Cabecera o l¡nea, se forzar  al programa a eliminar las acciones asociadas a esta tabla. ¨Desea continuar?';

    PROCEDURE CheckWPRTablesForInsert@1();
    VAR
      EPWebPartRequest@1001 : Record 6805;
      EPWPRTable@1000 : Record 6811;
    BEGIN
      IF "Header or Line" = "Header or Line"::" " THEN
        ERROR(Text001,FIELDCAPTION("Header or Line"));

      EPWebPartRequest.GET("Group Code","WP Request Code");
      CASE EPWebPartRequest.Type OF
        EPWebPartRequest.Type::List:
          BEGIN
            IF "Header or Line" <> "Header or Line"::Line THEN BEGIN
              "Header or Line" := "Header or Line"::Line;
              ERROR(Text003,"Header or Line",
                EPWebPartRequest.TABLECAPTION,EPWebPartRequest.FIELDCAPTION(Type),EPWebPartRequest.Type);
            END;
            EPWPRTable.SETRANGE("Group Code",Rec."Group Code");
            EPWPRTable.SETRANGE("WP Request Code",Rec."WP Request Code");
            IF EPWPRTable.FIND('-') THEN
              ERROR(Text002,EPWebPartRequest.TABLECAPTION,EPWebPartRequest.FIELDCAPTION(Type),EPWebPartRequest.Type);
          END;
        EPWebPartRequest.Type::Card:
          BEGIN
            IF "Header or Line" <> "Header or Line"::Header THEN BEGIN
              "Header or Line" := "Header or Line"::Header;
              ERROR(Text003,"Header or Line",
                EPWebPartRequest.TABLECAPTION,EPWebPartRequest.FIELDCAPTION(Type),EPWebPartRequest.Type);
            END;
            EPWPRTable.SETRANGE("Group Code",Rec."Group Code");
            EPWPRTable.SETRANGE("WP Request Code",Rec."WP Request Code");
            IF EPWPRTable.FIND('-') THEN
              ERROR(Text002,EPWebPartRequest.TABLECAPTION,EPWebPartRequest.FIELDCAPTION(Type),EPWebPartRequest.Type);
          END;
        EPWebPartRequest.Type::"Header + Line":
          BEGIN
            EPWPRTable.SETRANGE("Group Code",Rec."Group Code");
            EPWPRTable.SETRANGE("WP Request Code",Rec."WP Request Code");
            EPWPRTable.SETRANGE("Header or Line",Rec."Header or Line");
            IF EPWPRTable.FIND('-') THEN
              ERROR(Text004,"Header or Line",
                EPWebPartRequest.TABLECAPTION,EPWebPartRequest.FIELDCAPTION(Type),EPWebPartRequest.Type);
          END;
        EPWebPartRequest.Type::System:
          ERROR(Text005,EPWebPartRequest.TABLECAPTION,EPWebPartRequest.FIELDCAPTION(Type),EPWebPartRequest.Type);
      END;

      EPWPRTable.SETRANGE("Group Code",Rec."Group Code");
      EPWPRTable.SETRANGE("WP Request Code",Rec."WP Request Code");
      EPWPRTable.SETRANGE("Table No.",Rec."Table No.");
      IF EPWPRTable.FIND('-') THEN
        ERROR(Text006,EPWebPartRequest.TABLECAPTION);
    END;

    PROCEDURE CheckWPRTablesForRename@3();
    VAR
      EPWebPartRequest@1001 : Record 6805;
      EPWPRTable@1000 : Record 6811;
    BEGIN
      IF "Header or Line" = "Header or Line"::" " THEN
        ERROR(Text001,FIELDCAPTION("Header or Line"));

      EPWebPartRequest.GET("Group Code","WP Request Code");
      CASE EPWebPartRequest.Type OF
        EPWebPartRequest.Type::List:
          BEGIN
            IF "Header or Line" <> "Header or Line"::Line THEN BEGIN
              "Header or Line" := "Header or Line"::Line;
              ERROR(Text003,"Header or Line",
                EPWebPartRequest.TABLECAPTION,EPWebPartRequest.FIELDCAPTION(Type),EPWebPartRequest.Type);
            END;
          END;
        EPWebPartRequest.Type::Card:
          BEGIN
            IF "Header or Line" <> "Header or Line"::Header THEN BEGIN
              "Header or Line" := "Header or Line"::Header;
              ERROR(Text003,"Header or Line",
                EPWebPartRequest.TABLECAPTION,EPWebPartRequest.FIELDCAPTION(Type),EPWebPartRequest.Type);
            END;
          END;
        EPWebPartRequest.Type::"Header + Line":
          BEGIN
            EPWPRTable.SETRANGE("Group Code",Rec."Group Code");
            EPWPRTable.SETRANGE("WP Request Code",Rec."WP Request Code");
            EPWPRTable.SETRANGE("Header or Line",Rec."Header or Line");
            EPWPRTable.SETFILTER("Table No.",'<>%1',xRec."Table No.");
            IF EPWPRTable.FIND('-') THEN
              ERROR(Text004,"Header or Line",
                EPWebPartRequest.TABLECAPTION,EPWebPartRequest.FIELDCAPTION(Type),EPWebPartRequest.Type);
          END;
      END;

      EPWPRTable.SETRANGE("Group Code",Rec."Group Code");
      EPWPRTable.SETRANGE("WP Request Code",Rec."WP Request Code");
      EPWPRTable.SETRANGE("Table No.",Rec."Table No.");
      IF EPWPRTable.FIND('-') THEN
        ERROR(Text006,EPWebPartRequest.TABLECAPTION);
    END;

    PROCEDURE DeleteTableActions@2();
    VAR
      EPGrpReqTypeActions@1000 : Record 6809;
    BEGIN
      EPGrpReqTypeActions.SETRANGE("Group Code","Group Code");
      EPGrpReqTypeActions.SETRANGE("WP Request Code","WP Request Code");
      EPGrpReqTypeActions.SETRANGE("Table No.","Table No.");
      EPGrpReqTypeActions.SETRANGE("Header or Line","Header or Line");
      IF EPGrpReqTypeActions.FIND('-') THEN
        REPEAT
          EPGrpReqTypeActions.DELETE(TRUE);
        UNTIL EPGrpReqTypeActions.NEXT = 0;
    END;

    BEGIN
    END.
  }
}
