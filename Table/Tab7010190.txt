OBJECT Table 7010190 C/I Circuito
{
  OBJECT-PROPERTIES
  {
    Date=04/03/14;
    Time=[ 9:35:39];
    Modified=Yes;
    Version List=AIC2009;
  }
  PROPERTIES
  {
    OnInsert=VAR
               rCostesCir@1103355000 : Record 7010190;
               rCir@1103355001 : Record 7010187;
             BEGIN
               rCostesCir.RESET;
               rCostesCir.SETRANGE(Delegacion     , Delegacion);
               rCostesCir.SETRANGE(Circuito       , Circuito);
               rCostesCir.SETRANGE(Orden          , Orden);
               rCostesCir.SETRANGE("Coste/Ingreso", "Coste/Ingreso");
               IF rCostesCir.FIND('+') THEN
                 "N§ Linea" := rCostesCir."N§ Linea" + 1
               ELSE
                 "N§ Linea" := 1;

               "Fecha creacion" := TODAY;
               "Hora creacion"  := TIME;

               {
               rCir.RESET;
               IF rCir.GET(Delegacion, Circuito, Orden) THEN BEGIN
                 rCir.CALCFIELDS(Paxes);
                 Paxes := rCir.Paxes;
               END;
               }
             END;

    OnDelete=BEGIN
               //IF "Tipo linea" = "Tipo linea"::Autom tica THEN
               //  ERROR(Text000);
             END;

    CaptionML=[ENU=Roundtrip Cost/Income;
               ESP=C/I Circuito];
    LookupFormID=Form7010259;
    DrillDownFormID=Form7010259;
  }
  FIELDS
  {
    { 1   ;   ;Delegacion          ;Code10        ;TableRelation=Delegacion.Codigo;
                                                   CaptionML=[ENU=Local Office;
                                                              ESP=Delegacion];
                                                   NotBlank=Yes;
                                                   Description=PK, FK Delegacion;
                                                   Editable=No }
    { 3   ;   ;Circuito            ;Code10        ;TableRelation="Maestro circuitos".Circuito;
                                                   CaptionML=[ENU=Circuit;
                                                              ESP=Circuito];
                                                   NotBlank=Yes;
                                                   Description=PK, FK Maestro Circuitos;
                                                   Editable=No }
    { 5   ;   ;Orden               ;Integer       ;CaptionML=[ENU=Order;
                                                              ESP=Orden];
                                                   Description=PK;
                                                   Editable=No }
    { 6   ;   ;Coste/Ingreso       ;Option        ;CaptionML=[ENU=Cost/Income;
                                                              ESP=Coste/Ingreso];
                                                   OptionCaptionML=[ENU=Cost,Income;
                                                                    ESP=Coste,Ingreso];
                                                   OptionString=Coste,Ingreso;
                                                   Description=PK;
                                                   Editable=No }
    { 7   ;   ;N§ Linea            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              ESP=N§ Linea];
                                                   Description=PK;
                                                   Editable=No }
    { 8   ;   ;TourOperador        ;Code10        ;TableRelation=TourOperador.TourOperador;
                                                   CaptionML=[ENU=TourOperator;
                                                              ESP=TourOperador];
                                                   Description=FK TourOperador }
    { 9   ;   ;Tipo Proveedor      ;Option        ;CaptionML=[ENU=Supplier type;
                                                              ESP=Tipo proveedor];
                                                   OptionCaptionML=[ENU=Carrier,Restaurant,Visit,Companion Guide,Official guide,Extra,Hotel;
                                                                    ESP=Transportista,Restaurante,Visita,Guia Acompa¤ante,Guia Oficial,Extra,Hotel];
                                                   OptionString=Transportista,Restaurante,Visita,Guia Acompa¤ante,Guia Oficial,Extra,Hotel }
    { 11  ;   ;Proveedor/Cliente   ;Code20        ;TableRelation=IF (Coste/Ingreso=CONST(Coste),
                                                                     Tipo Proveedor=FILTER(<>Hotel)) Vendor.No.
                                                                     ELSE IF (Coste/Ingreso=CONST(Coste),
                                                                              Tipo Proveedor=CONST(Hotel)) Hotel.Hotel
                                                                              ELSE IF (Coste/Ingreso=CONST(Ingreso)) Customer.No.;
                                                   OnValidate=VAR
                                                                cNom@1103355000 : Codeunit 7009702;
                                                              BEGIN
                                                                {
                                                                IF (Transportista <> xRec.Transportista) AND (Transportista <> '') AND (Paxes > 0) AND
                                                                   ("N§ Vehiculos" > 0) THEN BEGIN
                                                                  rTarTrans.RESET;
                                                                  rTarTrans.SETRANGE ("N§", Transportista);
                                                                  rTarTrans.SETRANGE ("N§ Orden"     , Circuito);
                                                                  rTarTrans.SETFILTER("Fecha hasta"  , '<=%1', Paxes); // ROUND(Paxes / "N§ Vehiculos", 1));
                                                                  rTarTrans.SETFILTER("Pax desde"  , '>=%1', Paxes); // ROUND(Paxes / "N§ Vehiculos", 1));
                                                                  rTarTrans.SETRANGE ("Tipo Precio"       , TRUE);
                                                                  IF NOT rTarTrans.FIND('-') THEN BEGIN
                                                                    rTarTrans.SETFILTER("N§ Orden"   , '=%1', '');
                                                                    IF NOT rTarTrans.FIND('-') THEN
                                                                      ERROR(Text001, Transportista, Paxes);
                                                                  END;
                                                                  "Tipo Precio"   := rTarTrans.Precio;
                                                                  Servicio        := cNom.nom_proveedor(Transportista);
                                                                  VALIDATE(Precio , rTarTrans."Pax hasta");
                                                                END;
                                                                }

                                                                {
                                                                IF (Restaurante <> xRec.Restaurante) AND (Restaurante <> '') THEN BEGIN
                                                                  rTarRes.RESET;
                                                                  IF NOT rTarRes.GET(Restaurante) THEN
                                                                    ERROR(Text002, Restaurante);
                                                                  "Precio Bebidas" := rTarRes."Fecha desde";
                                                                  Servicio         := cNom.nom_proveedor(Restaurante);
                                                                  VALIDATE(Precio  , rTarRes."N§ Orden");
                                                                END;
                                                                }

                                                                {
                                                                IF (Guia <> xRec.Guia) AND (Guia <> '') THEN BEGIN
                                                                  rTarGui.RESET;
                                                                  rTarGui.SETRANGE (Delegacion       , Guia);
                                                                  rTarGui.SETRANGE ("N§ Orden"   , Circuito);
                                                                  rTarGui.SETFILTER("Pax hasta", '<=%1', Paxes);
                                                                  rTarGui.SETFILTER(Precio, '>=%1', Paxes);
                                                                  rTarGui.SETRANGE ("Fecha hasta"     , TRUE);
                                                                  IF NOT rTarGui.FIND('-') THEN BEGIN
                                                                    rTarGui.SETFILTER("N§ Orden"   ,'=%1', '');
                                                                    IF NOT rTarGui.FIND('-') THEN
                                                                      ERROR(Text003, Guia, Paxes);
                                                                  END;
                                                                  "Tipo Precio"   := rTarGui."Fecha desde";
                                                                  Servicio        := cNom.nom_proveedor(Guia);
                                                                  VALIDATE(Precio , rTarGui."Tipo Precio");
                                                                END;
                                                                }

                                                                {
                                                                IF (Extra <> xRec.Extra) AND (Extra <> '') THEN BEGIN
                                                                  rTarExt.RESET;
                                                                  IF NOT rTarExt.GET(Extra) THEN
                                                                    ERROR(Text004, Extra);
                                                                  "Tipo Precio"   := rTarExt.Precio;
                                                                  Proveedor       := rTarExt."Tipo Precio";
                                                                  Descripcion     := cNom.nom_extra_circuito(Extra);
                                                                  VALIDATE(Precio , rTarExt."N§ Orden");
                                                                END;
                                                                }
                                                              END;

                                                   CaptionML=[ENU=Supplier/Client;
                                                              ESP=Proveedor/Cliente];
                                                   NotBlank=Yes;
                                                   Description=FK Proveedor/Hotel/Cliente }
    { 12  ;   ;Codigo              ;Code10        ;TableRelation=IF (Tipo Proveedor=CONST(Restaurante),
                                                                     Extra=CONST(No)) "Codigo Circuito".Codigo WHERE (Tipo Codigo=CONST(Men£))
                                                                     ELSE IF (Tipo Proveedor=CONST(Visita),
                                                                              Extra=CONST(No)) "Codigo Circuito".Codigo WHERE (Tipo Codigo=CONST(Visita))
                                                                              ELSE IF (Extra=CONST(Yes)) "Codigo Circuito".Codigo WHERE (Tipo Codigo=CONST(Extra))
                                                                              ELSE IF (Tipo Proveedor=CONST(10)) "Conversion Habitacion"."Habitacion cupo";
                                                   CaptionML=[ENU=Code;
                                                              ESP=Codigo] }
    { 13  ;   ;Fecha               ;Date          ;CaptionML=[ENU=Date;
                                                              ESP=Fecha];
                                                   NotBlank=Yes }
    { 14  ;   ;Extra               ;Boolean       ;CaptionML=[ENU=Extra;
                                                              ESP=Extra] }
    { 15  ;   ;Servicio            ;Text30        ;CaptionML=[ENU=Service;
                                                              ESP=Servicio] }
    { 17  ;   ;Paxes               ;Integer       ;OnValidate=BEGIN
                                                                VALIDATE(Importe);
                                                              END;

                                                   CaptionML=[ENU=Paxes;
                                                              ESP=Paxes] }
    { 19  ;   ;Precio              ;Decimal       ;OnValidate=BEGIN
                                                                VALIDATE(Importe);
                                                              END;

                                                   CaptionML=[ENU=Price;
                                                              ESP=Precio];
                                                   AutoFormatType=2;
                                                   AutoFormatExpr="C¢d. divisa" }
    { 21  ;   ;Tipo Precio         ;Option        ;OnValidate=BEGIN
                                                                VALIDATE(Importe);
                                                              END;

                                                   CaptionML=[ENU=Price type;
                                                              ESP=Tipo Precio];
                                                   OptionCaptionML=[ENU=Pax,Fixed,Vehicle;
                                                                    ESP=Pax,Fijo,Vehiculo];
                                                   OptionString=Pax,Fijo,Vehiculo }
    { 22  ;   ;Porcentaje TO       ;Decimal       ;InitValue=1;
                                                   OnValidate=BEGIN
                                                                VALIDATE(Importe);
                                                              END;

                                                   CaptionML=[ENU=TO percentage;
                                                              ESP=Porcentaje TO];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="C¢d. divisa" }
    { 23  ;   ;Importe             ;Decimal       ;OnValidate=BEGIN
                                                                CASE "Tipo Precio" OF
                                                                  "Tipo Precio"::Pax     : Importe := ROUND(Paxes * Precio * "Porcentaje TO");
                                                                  "Tipo Precio"::Vehiculo: Importe := ROUND(Precio * "N§ Vehiculos" * "Porcentaje TO");
                                                                  "Tipo Precio"::Fijo    : Importe := ROUND(Precio * "Porcentaje TO");
                                                                END;
                                                                VALIDATE("Importe Con Impuesto");
                                                              END;

                                                   CaptionML=[ENU=Amount;
                                                              ESP=Importe];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="C¢d. divisa" }
    { 25  ;   ;Origen              ;Code10        ;CaptionML=[ENU=Origin;
                                                              ESP=Origen] }
    { 27  ;   ;Destino             ;Code10        ;CaptionML=[ENU=Destination;
                                                              ESP=Destino] }
    { 29  ;   ;N§ Vehiculos        ;Integer       ;InitValue=1;
                                                   OnValidate=BEGIN
                                                                VALIDATE(Importe);
                                                              END;

                                                   CaptionML=[ENU=Vehicles No.;
                                                              ESP=N§ vehiculos] }
    { 31  ;   ;Impuestos incluidos ;Boolean       ;OnValidate=BEGIN
                                                                VALIDATE("Importe Con Impuesto");
                                                              END;

                                                   CaptionML=[ENU=Included Taxes;
                                                              ESP=Impuestos incluidos] }
    { 33  ;   ;Grupo Registro IVA Neg.;Code10     ;TableRelation="VAT Business Posting Group".Code;
                                                   OnValidate=BEGIN
                                                                VALIDATE("Importe Con Impuesto");
                                                              END;

                                                   CaptionML=[ENU=VAT Bus. posting group;
                                                              ESP=Grupo Registro IVA Neg.];
                                                   Description=FK Grupo Regirstro IVA Negocio }
    { 35  ;   ;Grupo Registro IVA Prod.;Code10    ;TableRelation="VAT Product Posting Group".Code;
                                                   OnValidate=BEGIN
                                                                VALIDATE("Importe Con Impuesto");
                                                              END;

                                                   CaptionML=[ENU=VAT Prod. posting group;
                                                              ESP=Grupo registro iva prod.];
                                                   Description=FK Grupo Regirstro IVA Producto }
    { 37  ;   ;Importe Con Impuesto;Decimal       ;OnValidate=VAR
                                                                rConfIVA@1103355000 : Record 325;
                                                              BEGIN
                                                                IF ("Grupo Registro IVA Neg." <> '') AND ("Grupo Registro IVA Prod." <> '') THEN BEGIN
                                                                  IF NOT rConfIVA.GET("Grupo Registro IVA Neg.", "Grupo Registro IVA Prod.") THEN
                                                                    ERROR(Text005, "Grupo Registro IVA Neg.", "Grupo Registro IVA Prod.");

                                                                  IF "Impuestos incluidos" THEN BEGIN
                                                                    "Importe Con Impuesto" := Importe;
                                                                    "Importe Sin Impuesto" := ROUND(Importe / (1 + rConfIVA."VAT+EC %" / 100));
                                                                  END
                                                                  ELSE BEGIN
                                                                    "Importe Con Impuesto" := ROUND(Importe * (1 + rConfIVA."VAT+EC %" / 100));
                                                                    "Importe Sin Impuesto" := Importe;
                                                                  END;
                                                                END
                                                                ELSE BEGIN
                                                                  "Importe Con Impuesto" := Importe;
                                                                  "Importe Sin Impuesto" := Importe;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Amount with tax;
                                                              ESP=Importe con impuesto];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="C¢d. divisa" }
    { 39  ;   ;Importe Sin Impuesto;Decimal       ;OnValidate=BEGIN
                                                                VALIDATE("Importe Con Impuesto");
                                                              END;

                                                   CaptionML=[ENU=Amount without tax;
                                                              ESP=Importe sin impuesto];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="C¢d. divisa" }
    { 41  ;   ;N§ Factura          ;Code20        ;CaptionML=[ENU=Invoice No.;
                                                              ESP=N§ Factura] }
    { 43  ;   ;Pendiente FPR       ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[ENU=Remaining Invoices to be received;
                                                              ESP=Pendiente FPR];
                                                   Editable=No }
    { 45  ;   ;Regularizacion      ;Boolean       ;CaptionML=[ENU=Adjustment;
                                                              ESP=Regularizacion] }
    { 47  ;   ;N§ linea Auxiliar   ;Integer       ;CaptionML=[ENU=Auxiliar line no.;
                                                              ESP=N§ linea Auxiliar] }
    { 49  ;   ;Tipo linea          ;Option        ;InitValue=Manual;
                                                   CaptionML=[ENU=Line type;
                                                              ESP=Tipo Linea];
                                                   OptionCaptionML=[ENU=Manual,Automatic;
                                                                    ESP=Manual,Autom tica];
                                                   OptionString=Manual,Autom tica;
                                                   Editable=No }
    { 51  ;   ;Usuario             ;Code20        ;CaptionML=[ENU=User;
                                                              ESP=Usuario] }
    { 53  ;   ;Descripcion Marca   ;Text30        ;CaptionML=[ENU=Mark description;
                                                              ESP=Descripcion Marca];
                                                   Editable=No }
    { 55  ;   ;Efectivo            ;Boolean       ;CaptionML=[ENU=Cash;
                                                              ESP=Efectivo] }
    { 57  ;   ;C¢d. divisa         ;Code10        ;TableRelation=Currency;
                                                   CaptionML=[ENU=Currency exchange;
                                                              ESP=C¢d. divisa];
                                                   Description=FK Divisa }
    { 59  ;   ;N§ Tarifa           ;Code10        ;TableRelation=IF (Coste/Ingreso=CONST(Coste)) "Tarifa Compra Circuito"."N§ Tarifa" WHERE (Delegacion=FIELD(Delegacion),
                                                                                                                                             Tipo Tarifa=FIELD(Tipo Proveedor))
                                                                                                                                             ELSE IF (Coste/Ingreso=CONST(Ingreso)) "Tarifa Venta Circuito"."N§ Tarifa" WHERE (Delegacion=FIELD(Delegacion));
                                                   ValidateTableRelation=No;
                                                   CaptionML=[ENU=Tariff No.;
                                                              ESP=N§ Tarifa];
                                                   Description=FK Tarifa }
    { 61  ;   ;N§ Cierre           ;Integer       ;CaptionML=[ENU=Closure No.;
                                                              ESP=N§ Cierre];
                                                   Editable=No }
    { 63  ;   ;Fecha creacion      ;Date          ;CaptionML=[ENU=Creation Date;
                                                              ESP=Fecha creacion];
                                                   Editable=No }
    { 65  ;   ;Hora creacion       ;Time          ;CaptionML=[ENU=Creation Time;
                                                              ESP=Hora creacion];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Delegacion,Circuito,Orden,Coste/Ingreso,N§ Linea;
                                                   SumIndexFields=Importe,Importe Con Impuesto,Importe Sin Impuesto;
                                                   KeyGroups=RENUMERING;
                                                   Clustered=Yes }
    {    ;TourOperador,N§ linea Auxiliar          ;SumIndexFields=Importe,Importe Con Impuesto,Importe Sin Impuesto;
                                                   KeyGroups=RENUMERING }
    {    ;TourOperador,N§ Factura                 ;SumIndexFields=Importe,Importe Con Impuesto,Importe Sin Impuesto;
                                                   KeyGroups=RENUMERING }
    {    ;Usuario                                 ;KeyGroups=RENUMERING }
    {    ;Descripcion Marca                       ;KeyGroups=RENUMERING }
    {    ;Efectivo                                ;SumIndexFields=Importe,Importe Con Impuesto,Importe Sin Impuesto;
                                                   KeyGroups=RENUMERING }
    {    ;Coste/Ingreso,Tipo Proveedor,Efectivo,Fecha,Codigo,Proveedor/Cliente,Pendiente FPR;
                                                   KeyGroups=RENUMERING }
    {    ;Delegacion,Circuito,Orden,Coste/Ingreso,N§ linea Auxiliar,N§ Cierre;
                                                   KeyGroups=RENUMERING }
    {    ;Delegacion,TourOperador,Fecha           ;KeyGroups=RENUMERING }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1103355000 : TextConst 'ENU=Unable to delete automatic lines;ESP=No se pueden borrar l¡neas autom ticas';
      Text001@1103355001 : TextConst 'ENU=Carrier %1 does not have created tariffs for this range %2 paxes;ESP=El transportista %1 no tiene tarifas creadas para el rango %2 paxes';
      Text002@1103355002 : TextConst 'ENU=Restaurant %1 does not have tariffs;ESP=El restaurante %1 no tiene tarifas';
      Text003@1103355003 : TextConst 'ENU=For guide %1, paxes %2 tariffs does not exist;ESP=No existe tarifa para el guia %1, paxes %2';
      Text004@1103355004 : TextConst 'ENU=For extra %1 tariff does not exist;ESP=No existe tarifa para el extra %1';
      Text005@1103355005 : TextConst 'ENU=VAT configuration %1 - %2 does not exist;ESP=No existe la configuraci¢n iva %1 - %2';

    BEGIN
    END.
  }
}
