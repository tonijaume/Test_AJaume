OBJECT Table 7010348 Incidencia
{
  OBJECT-PROPERTIES
  {
    Date=04/12/14;
    Time=18:08:32;
    Modified=Yes;
    Version List=TRANSFER;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               rPar.FINDFIRST;
               rPar.TESTFIELD("Serie incidencias");

               GestNoSerie.InitSeries(rPar."Serie incidencias", rPar."Serie incidencias", TODAY, "Parte Incidencia",
                                     rPar."Serie incidencias");
             END;

    OnDelete=VAR
               rPiezasxIncidencia@1100244000 : Record 7010355;
             BEGIN
               CompruebaDiaCerrado();

               IF "Fecha final reparacion" <> 0D THEN
                 ERROR(err1);

               // ----  Cuando se Borre un registro se borrar n tambien todos los relacionados de la  ----
               // ----  tabla Piezas x Incidencia                                                   ----
               rPiezasxIncidencia.RESET;
               rPiezasxIncidencia.SETRANGE("N§ Incidencia", "Parte Incidencia");
               rPiezasxIncidencia.SETRANGE(Traspasado     , TRUE);
               IF rPiezasxIncidencia.FIND('-') THEN
                 ERROR(no_borra_incidencia);
               rPiezasxIncidencia.DELETEALL;
             END;

    CaptionML=ESP=Incidencia;
    LookupFormID=Form7010378;
    DrillDownFormID=Form7010378;
  }
  FIELDS
  {
    { 1   ;   ;Parte Incidencia    ;Code10        ;CaptionML=ESP=Parte Incidencia;
                                                   SQL Data Type=Varchar;
                                                   Description=PK }
    { 3   ;   ;Matricula           ;Code10        ;TableRelation=Vehiculo.Matricula;
                                                   OnValidate=VAR
                                                                rVeh@1100244000 : Record 7010346;
                                                              BEGIN
                                                                IF NOT rVeh.GET(Matricula) THEN
                                                                  ERROR(err2, Matricula);
                                                                Garaje := rVeh.Garaje;
                                                              END;

                                                   OnLookup=VAR
                                                              rUsu@1100244000 : Record 7010420;
                                                              rPar@1100244001 : Record 7010311;
                                                              rVeh@1100244002 : Record 7010346;
                                                            BEGIN
                                                              rPar.FINDFIRST;
                                                              IF NOT rUsu.GET(USERID) THEN
                                                                ERROR(err3, USERID);

                                                              rVeh.RESET;
                                                              rVeh.SETCURRENTKEY(Garaje);
                                                              IF (rUsu."Garaje de trabajo" <> '') AND (rUsu."Garaje de trabajo" <> rPar."Todos los garajes") THEN BEGIN
                                                                rVeh.FILTERGROUP(2);
                                                                rVeh.SETRANGE(Garaje, rUsu."Garaje de trabajo");
                                                                rVeh.FILTERGROUP(0);
                                                              END;
                                                              IF FORM.RUNMODAL(0, rVeh) = ACTION::LookupOK THEN
                                                                VALIDATE(Matricula, rVeh.Matricula);
                                                            END;

                                                   CaptionML=ESP=Matricula;
                                                   SQL Data Type=Varchar;
                                                   Description=FK Vehiculo }
    { 5   ;   ;Fecha Incidencia    ;Date          ;OnValidate=BEGIN
                                                                VALIDATE("Fecha cambio divisa", "Fecha Incidencia");
                                                              END;

                                                   CaptionML=ESP=Fecha Incidencia }
    { 7   ;   ;Fecha inicio reparacion;Date       ;OnValidate=BEGIN
                                                                CompruebaDiaCerrado();

                                                                IF "Fecha Incidencia" <> 0D THEN BEGIN
                                                                  IF "Fecha inicio reparacion" < "Fecha Incidencia" THEN
                                                                    ERROR(err4);
                                                                END
                                                                ELSE
                                                                  ERROR(err5);
                                                              END;

                                                   CaptionML=ESP=Fecha inicio reparacion }
    { 9   ;   ;Fecha final reparacion;Date        ;OnValidate=BEGIN
                                                                IF "Fecha inicio reparacion" <> 0D THEN BEGIN
                                                                  IF "Fecha final reparacion" < "Fecha inicio reparacion" THEN
                                                                    ERROR(err6);
                                                                END
                                                                ELSE
                                                                  ERROR(err7);
                                                              END;

                                                   CaptionML=ESP=Fecha final reparacion }
    { 11  ;   ;Taller              ;Code10        ;TableRelation=Taller.Taller;
                                                   CaptionML=ESP=Taller;
                                                   SQL Data Type=Varchar;
                                                   Description=FK Taller }
    { 13  ;   ;Horas empleadas     ;Integer       ;CaptionML=ESP=Horas empleadas }
    { 15  ;   ;Minutos empleados   ;Integer       ;OnValidate=BEGIN
                                                                IF "Minutos empleados" > 59 THEN
                                                                  ERROR(err8);
                                                              END;

                                                   CaptionML=ESP=Minutos empleados }
    { 17  ;   ;Importe reparacion  ;Decimal       ;OnValidate=VAR
                                                                rPiezasxIncidencia@1100244000 : Record 7010355;
                                                              BEGIN
                                                                VALIDATE("Cod. Divisa");

                                                                rPiezasxIncidencia.RESET;
                                                                rPiezasxIncidencia.SETCURRENTKEY("N§ Incidencia",
                                                                                                 "N§ Linea");
                                                                rPiezasxIncidencia.SETRANGE("N§ Incidencia", "Parte Incidencia");
                                                                rPiezasxIncidencia.SETRANGE("Tipo de Linea", rPiezasxIncidencia."Tipo de Linea"::Servicios);
                                                                IF rPiezasxIncidencia.FIND('-') THEN BEGIN
                                                                  rPiezasxIncidencia.VALIDATE("Precio Unitario", "Importe reparacion");
                                                                  rPiezasxIncidencia.MODIFY(TRUE);
                                                                END
                                                                ELSE BEGIN
                                                                  MODIFY(TRUE);
                                                                  rPiezasxIncidencia.INIT;
                                                                  rPiezasxIncidencia."N§ Incidencia" := "Parte Incidencia";
                                                                  rPiezasxIncidencia."Tipo de Linea" := rPiezasxIncidencia."Tipo de Linea"::Servicios;
                                                                  rPiezasxIncidencia.INSERT(TRUE);
                                                                  rPiezasxIncidencia.VALIDATE("Precio Unitario", "Importe reparacion");
                                                                  rPiezasxIncidencia.MODIFY(TRUE);
                                                                END;
                                                              END;

                                                   CaptionML=ESP=Importe reparacion;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Cod. Divisa" }
    { 19  ;   ;Piezas utilizadas   ;Text250       ;CaptionML=ESP=Piezas utilizadas }
    { 21  ;   ;Observaciones Conductor;Text250    ;CaptionML=ESP=Observaciones Conductor }
    { 23  ;   ;Parte accidente asociado;Code10    ;TableRelation=Accidente."Parte accidente";
                                                   CaptionML=ESP=Parte accidente asociado;
                                                   SQL Data Type=Varchar;
                                                   Description=FK Accidente;
                                                   Editable=No }
    { 25  ;   ;Garaje              ;Code10        ;TableRelation=Garaje.Garaje;
                                                   CaptionML=ESP=Garaje;
                                                   SQL Data Type=Varchar;
                                                   Description=FK Garaje;
                                                   Editable=No }
    { 27  ;   ;Cod. Divisa         ;Code10        ;TableRelation=Currency.Code;
                                                   OnValidate=BEGIN
                                                                IF "Cod. Divisa" <> '' THEN BEGIN
                                                                  IF "Fecha cambio divisa" = 0D THEN
                                                                    "Importe reparacion DL" := 0
                                                                  ELSE
                                                                    "Importe reparacion DL" :=
                                                                    rTipo.ExchangeAmtFCYToLCY("Fecha cambio divisa", "Cod. Divisa", "Importe reparacion",
                                                                                         rTipo.ExchangeRate("Fecha cambio divisa", "Cod. Divisa"));
                                                                END
                                                                ELSE
                                                                  "Importe reparacion DL" := "Importe reparacion";
                                                              END;

                                                   CaptionML=ESP=Cod. Divisa;
                                                   Description=FK Divisa }
    { 29  ;   ;Fecha cambio divisa ;Date          ;OnValidate=BEGIN
                                                                VALIDATE("Cod. Divisa");
                                                              END;

                                                   CaptionML=ESP=Fecha cambio divisa }
    { 31  ;   ;Importe reparacion DL;Decimal      ;CaptionML=ESP=Importe reparacion DL;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 33  ;   ;Piezas asociadas    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Piezas x Incidencia".Cantidad WHERE (N§ Incidencia=FIELD(Parte Incidencia)));
                                                   CaptionML=ESP=Piezas asociadas;
                                                   DecimalPlaces=0:2;
                                                   Description=Calculado sobre Piezas x Incidencia;
                                                   Editable=No }
    { 35  ;   ;Piezas sin registrar;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Piezas x Incidencia".Cantidad WHERE (N§ Incidencia=FIELD(Parte Incidencia),
                                                                                                         Traspasado=CONST(No)));
                                                   CaptionML=ESP=Piezas sin registrar;
                                                   DecimalPlaces=0:2;
                                                   Description=Calculado sobre Piezas x Incidencia;
                                                   Editable=No }
    { 36  ;   ;Tipo Incidencia     ;Code10        ;TableRelation="Vehiculo - Tipo incidencia".Codigo;
                                                   OnValidate=VAR
                                                                lrTipInc@1100244000 : Record 7035343;
                                                              BEGIN
                                                                lrTipInc.GET("Tipo Incidencia");
                                                                "Prioridad incidencia" := lrTipInc.Prioridad;
                                                                Tipo                   := lrTipInc.Tipo;

                                                                // AJS 24.09.2004
                                                                // Si es una revision incluyo un control para que tenga que estar definido en revisiones x vehiculo

                                                                IF Tipo = Tipo::Revision THEN BEGIN
                                                                  IF NOT rResxVeh.GET(Matricula, "Tipo Incidencia") THEN
                                                                    ERROR(Text50000);
                                                                END;
                                                              END;

                                                   CaptionML=ESP=Tipo Incidencia;
                                                   NotBlank=Yes }
    { 37  ;   ;Cod. conductor      ;Code10        ;TableRelation=Conductor.Conductor;
                                                   CaptionML=ESP=Cod. conductor;
                                                   Description=FK Conductor }
    { 38  ;   ;No. Factura         ;Code20        ;CaptionML=ESP=No. Factura }
    { 39  ;   ;Observaciones Taller;Text250       ;CaptionML=ESP=Observaciones Taller }
    { 41  ;   ;Prioridad incidencia;Integer       ;CaptionML=ESP=Prioridad incidencia;
                                                   Editable=No }
    { 50  ;   ;Kilometros          ;Decimal       ;CaptionML=ESP=Kilometros;
                                                   DecimalPlaces=0:2 }
    { 51  ;   ;Reparacion en carretera;Boolean    ;CaptionML=ESP=Reparacion en carretera }
    { 52  ;   ;Rep. cubierta por garantia;Boolean ;CaptionML=ESP=Rep. cubierta por garantia }
    { 53  ;   ;Rep. pagada por el seguro;Boolean  ;CaptionML=ESP=Rep. pagada por el seguro }
    { 60  ;   ;Tipo                ;Option        ;CaptionML=ESP=Tipo;
                                                   OptionCaptionML=ESP=Incidencia,Revision;
                                                   OptionString=Incidencia,Revision;
                                                   Editable=No }
    { 100 ;   ;Operacion           ;Option        ;CaptionML=ESP=Operacion;
                                                   OptionCaptionML=ESP=,Sustitucion,Rayado,Pinchazo,Cruce,Pasar detr s,Equilibrado;
                                                   OptionString=,Sustitucion,Rayado,Pinchazo,Cruce,Pasar detr s,Equilibrado;
                                                   BlankZero=Yes;
                                                   Description=Neumaticos }
    { 101 ;   ;N1                  ;Boolean       ;CaptionML=ESP=N1;
                                                   Description=Neumatico 1 }
    { 102 ;   ;N2                  ;Boolean       ;CaptionML=ESP=N2;
                                                   Description=Neumatico 2 }
    { 103 ;   ;N3                  ;Boolean       ;CaptionML=ESP=N3;
                                                   Description=Neumatico 3 }
    { 104 ;   ;N4                  ;Boolean       ;CaptionML=ESP=N4;
                                                   Description=Neumatico 3 }
    { 105 ;   ;N5                  ;Boolean       ;CaptionML=ESP=N5;
                                                   Description=Neumatico 5 }
    { 106 ;   ;N6                  ;Boolean       ;CaptionML=ESP=N6;
                                                   Description=Neumatico 6 }
    { 107 ;   ;Marca Neumatico     ;Code10        ;CaptionML=ESP=Marca Neumatico;
                                                   Description=Neumaticos }
  }
  KEYS
  {
    {    ;Parte Incidencia                        ;Clustered=Yes }
    {    ;Matricula,Fecha Incidencia,Garaje        }
    {    ;Taller,Fecha Incidencia                  }
    {    ;Parte accidente asociado                 }
    {    ;Garaje                                   }
    {    ;Matricula,Fecha inicio reparacion,Fecha final reparacion }
    {    ;Fecha inicio reparacion                  }
    {    ;Tipo Incidencia                          }
    {    ;Matricula,Prioridad incidencia,Fecha inicio reparacion }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      GestNoSerie@1100244000 : Codeunit 396;
      rPar@1100244001 : Record 7010311;
      err1@1100244002 : TextConst 'ESP=No se puede borrar una incidencia finalizada.';
      err2@1100244003 : TextConst 'ESP=No existe el vehiculo %1.';
      err3@1100244004 : TextConst 'ESP=No existe el usuario %1.';
      err4@1100244005 : TextConst 'ESP=No se puede iniciar la reparacion antes de la incidencia.';
      err5@1100244006 : TextConst 'ESP=No puede indicar Fecha de inicio de la reparacion, antes debe indicar la Fecha de incidencia.';
      err6@1100244007 : TextConst 'ESP=No se puede finalizar la reparacion antes de iniciarla.';
      err7@1100244008 : TextConst 'ESP=No puede indicar Fecha de final de la reparacion, antes debe indicar la Fecha de inicio.';
      rTipo@1100244009 : Record 330;
      err8@1100244010 : TextConst 'ESP=Los minutos no pueden ser mayores de 59';
      no_borra_incidencia@1100244011 : TextConst 'ESP=No se pueden borrar incidencias con piezas asociadas ya borradas.';
      err9@1100244012 : TextConst 'ESP=No puede borrar ni modificar la fecha de inicio de una incidencia asociada a un dia cerrado.';
      rResxVeh@1103350000 : Record 7010395;
      Text50000@1103350001 : TextConst 'ESP=Esta revision no esta definida para este vehiculo.';
      Text50001@1103355000 : TextConst 'ESP=No existe el usuario %1.';

    PROCEDURE nombre_taller@1() : Text[50];
    VAR
      rTall@1100244000 : Record 7010347;
    BEGIN
      // nombre_taller
      //
      IF rTall.GET(Taller) THEN
        EXIT(rTall.Nombre)
      ELSE
        EXIT('');
    END;

    PROCEDURE numero_vehiculo@2() : Text[30];
    VAR
      rVeh@1100244000 : Record 7010346;
    BEGIN
      // numero_vehiculo
      //
      IF rVeh.GET(Matricula) THEN
        EXIT(rVeh.Numero)
      ELSE
        EXIT('');
    END;

    PROCEDURE tipo_vehiculo@3() : Code[10];
    VAR
      rVeh@1100244000 : Record 7010346;
    BEGIN
      // tipo_vehiculo
      //
      IF rVeh.GET(Matricula) THEN
        EXIT(rVeh."Tipo vehiculo")
      ELSE
        EXIT('');
    END;

    PROCEDURE descripcion_incidencia@4() : Text[30];
    VAR
      rTiposInci@1100244000 : Record 7035343;
    BEGIN
      // descripcion_incidencia
      //
      IF rTiposInci.GET("Tipo Incidencia") THEN
        EXIT(UPPERCASE(rTiposInci.Descripcion))
      ELSE
        EXIT('');
    END;

    PROCEDURE CompruebaDiaCerrado@5();
    VAR
      rDiasAbiertos@1100244000 : Record 7035341;
    BEGIN
      // CompruebaDiaCerrado

      rPar.FINDFIRST;
      IF rPar."Empresa Real" IN [rPar."Empresa Real"::IBZ, rPar."Empresa Real"::SJO] THEN
        EXIT;

      IF rDiasAbiertos.GET(xRec."Fecha inicio reparacion") THEN
        IF rDiasAbiertos.Cerrado = TRUE THEN
          ERROR(err9);
    END;

    PROCEDURE Nombre_Conductor@6() : Code[20];
    VAR
      rCond@1100244000 : Record 7010327;
    BEGIN
      // nombre_conductor

      rCond.RESET;
      IF rCond.GET("Cod. conductor") THEN
        EXIT(rCond."Nombre Abreviado")
      ELSE
        EXIT('');
    END;

    PROCEDURE FiltrarGarajeUsuario@1103355000();
    VAR
      lrParGenerales@1103355000 : Record 7010311;
      lrUsuario@1103355001 : Record 7010420;
    BEGIN
      // FiltrarGarajeUsuario.
      // Filtramos los partes por garaje dependiendo de la configuraci¢n del usuario.

      lrParGenerales.FINDFIRST;

      IF NOT lrUsuario.GET(USERID) THEN
        ERROR(Text50001, USERID);

      SETCURRENTKEY(Garaje);

      IF (lrUsuario."Garaje de trabajo" <> '') AND (lrUsuario."Garaje de trabajo" <> lrParGenerales."Todos los garajes") THEN BEGIN
        FILTERGROUP(2);
        SETRANGE(Garaje, lrUsuario."Garaje de trabajo");
        FILTERGROUP(0);
      END;
    END;

    BEGIN
    END.
  }
}
