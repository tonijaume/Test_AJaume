OBJECT Table 7009738 Precios contrato compra
{
  OBJECT-PROPERTIES
  {
    Date=24/06/14;
    Time=16:20:51;
    Modified=Yes;
    Version List=AIC2009;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               rParAge.FINDFIRST;
               IF NOT rParAge."Empresa Delegacion" THEN
                 ERROR(Text001 + Text002);

               cFunSeg.TienePermiso(Text006, TRUE);

               IF "Orden Precio" = 0 THEN BEGIN
                 rPreCom.RESET;
                 rPreCom.SETCURRENTKEY(Delegacion, "N§ Contrato", "Orden Precio");
                 rPreCom.SETRANGE(rPreCom.Delegacion     , Delegacion);
                 rPreCom.SETRANGE(rPreCom."N§ Contrato"  , "N§ Contrato");
                 //rPreCom.SETRANGE(rPreCom."Codigo Precio", "Codigo Precio");
                 IF NOT rPreCom.FINDLAST THEN
                   "Orden Precio" := 10
                 ELSE
                   "Orden Precio" := rPreCom."Orden Precio" + 10;
               END;

               // Para los precios de r‚gimen inicializamos las edades a 1 y 99.

               IF ("Codigo Precio" = "Codigo Precio"::Regimen) AND
                  (("Edad desde" = 0) AND ("Edad hasta" = 0))
               THEN
               BEGIN
                 "Edad desde" := 1;
                 "Edad hasta" := 99;
               END;

               //-$002CASE "Codigo Precio" OF
               //-$002  "Codigo Precio"::Ofertas:
               //-$002  BEGIN
               //-$002    "Tipo Oferta" := "Tipo Oferta"::Precio;
               //-$002  END;
               //-$002  "Codigo Precio"::AxB:
               //-$002  BEGIN
               //-$002    "Tipo Oferta" := "Tipo Oferta"::AxB;
               //-$002  END;
               //-$002END;

               activar_precio;

               VALIDATE(Replicado);
             END;

    OnModify=BEGIN
               rParAge.FINDFIRST;
               IF NOT rParAge."Empresa Delegacion" THEN
                 ERROR(Text003 + Text002);

               cFunSeg.TienePermiso(Text006, TRUE);

               IF rConC.GET(Delegacion, "N§ Contrato") THEN BEGIN
                 rConC.Enviar := TRUE;
                 rConC.MODIFY;
               END;

               activar_precio;

               VALIDATE(Replicado);

               // AJS 21.02.2007
               // Comprobar si hay que marcar reservas de hotel para cerrar

               RevisarReservasAfectadas;
             END;

    OnDelete=VAR
               lrActED@1103355000 : Record 7010001;
               lrImcpt@1103355001 : Record 7009829;
             BEGIN
               rParAge.FINDFIRST;
               IF NOT rParAge."Empresa Delegacion" THEN
                 ERROR(Text004 + Text002);

               cFunSeg.TienePermiso(Text006, TRUE);

               IF rConC.GET(Delegacion, "N§ Contrato") THEN BEGIN
                 rConC.Enviar := TRUE;
                 rConC.MODIFY;
               END;

               //. JPT 18/09/08 Si es una oferta borramos sus lineas de imcompatibilidades

               IF "Codigo Precio" = "Codigo Precio"::Ofertas THEN BEGIN
                 CLEAR(lrImcpt);
                 lrImcpt.SETRANGE(Delegacion     , Delegacion);
                 lrImcpt.SETRANGE("N§ Contrato"  , "N§ Contrato");
                 lrImcpt.SETRANGE("Codigo precio", FORMAT("Codigo Precio"));
                 lrImcpt.SETRANGE("Orden precio" , "Orden Precio");
                 IF lrImcpt.FINDSET(TRUE) THEN
                   lrImcpt.DELETEALL;
               END;

               cPar.intro_historico_precios(Delegacion, "N§ Contrato", rHis.Tipo::"Hotel Compra", "Codigo Precio",
                                            "Orden Precio", Text008, Text009, '');

               //. Para la replicacion Hotel Payment

               InsertaLinAction;
             END;

    OnRename=BEGIN
               rParAge.FINDFIRST;
               IF NOT rParAge."Empresa Delegacion" THEN
                 ERROR(Text011 + Text002);

               VALIDATE(Replicado);
             END;

    CaptionML=[ENU=Purchase contract prices;
               ESP=Precios contrato compra];
  }
  FIELDS
  {
    { 1   ;   ;Delegacion          ;Code10        ;CaptionML=[ENU=Local Office;
                                                              ESP=Delegacion];
                                                   Description=PK, FK Delegacion;
                                                   Editable=Yes }
    { 3   ;   ;N§ Contrato         ;Code10        ;CaptionML=[ENU=Contract No.;
                                                              ESP=N§ Contrato];
                                                   Description=PK, FK Contrato Compra;
                                                   Editable=Yes }
    { 5   ;   ;Codigo Precio       ;Option        ;CaptionML=[ENU=Price code;
                                                              ESP=Codigo Precio];
                                                   OptionCaptionML=[ENU=Room,Board,Surchage,Extras,Offers,AxB;
                                                                    ESP=Habitacion,Regimen,Suplementos,Extras,Ofertas,AxB];
                                                   OptionString=Habitacion,Regimen,Suplementos,Extras,Ofertas,AxB;
                                                   Description=PK;
                                                   Editable=Yes }
    { 7   ;   ;Orden Precio        ;Integer       ;CaptionML=[ENU=Price order;
                                                              ESP=Orden Precio];
                                                   Description=PK }
    { 9   ;   ;Codigo              ;Code10        ;TableRelation=IF (Codigo Precio=CONST(Ofertas)) "Oferta Precio Hotel".Codigo;
                                                   OnValidate=VAR
                                                                lrOfert@1103355000 : Record 7009996;
                                                              BEGIN
                                                                CASE "Codigo Precio" OF
                                                                  "Codigo Precio"::Regimen:
                                                                  BEGIN
                                                                    IF NOT rReg.GET(Codigo) THEN
                                                                      ERROR(Text012, Codigo);
                                                                  END;
                                                                  "Codigo Precio"::Habitacion:
                                                                  BEGIN
                                                                    rConHab.RESET;
                                                                    rConHab.SETRANGE(Delegacion       , Delegacion);
                                                                    rConHab.SETRANGE("N§ Contrato"    , "N§ Contrato");
                                                                    rConHab.SETRANGE("Tipo contrato"  , rConHab."Tipo contrato"::Compra);
                                                                    rConHab.SETRANGE("Habitacion cupo", Codigo);
                                                                    IF NOT rConHab.FIND('-') THEN
                                                                      ERROR(Text013, Codigo);
                                                                  END;
                                                                  "Codigo Precio"::Suplementos:
                                                                  BEGIN
                                                                    rTipoEle.RESET;
                                                                    rTipoEle.SETRANGE(Humano, TRUE);
                                                                    rTipoEle.SETRANGE("Tipo elemento", Codigo);
                                                                    IF NOT rTipoEle.FIND('-') THEN
                                                                      ERROR(Text014);
                                                                    rTipoEle.RESET;
                                                                  END;
                                                                  "Codigo Precio"::Extras:
                                                                  BEGIN
                                                                    IF NOT rCodExt.GET(Codigo) THEN
                                                                      ERROR(Text015, Codigo);
                                                                  END;
                                                                  "Codigo Precio"::Ofertas : BEGIN
                                                                    IF Codigo <> '' THEN BEGIN
                                                                      lrOfert.GET(Codigo);
                                                                      lrOfert.CopiaDatosCompra(Rec);
                                                                    END;
                                                                  END;
                                                                END;

                                                                IF Codigo <> xRec.Codigo THEN BEGIN
                                                                  cPar.intro_historico_precios(Delegacion, "N§ Contrato", rHis.Tipo::"Hotel Compra", "Codigo Precio",
                                                                                               "Orden Precio", FIELDCAPTION(Codigo), Codigo, xRec.Codigo);
                                                                END;
                                                              END;

                                                   OnLookup=VAR
                                                              lrOfert@1103355000 : Record 7009996;
                                                            BEGIN
                                                              CASE "Codigo Precio" OF
                                                                "Codigo Precio":: Regimen:
                                                                BEGIN
                                                                  IF FORM.RUNMODAL(0, rReg) = ACTION::LookupOK THEN
                                                                    Codigo := rReg.Regimen;
                                                                END;
                                                                "Codigo Precio"::Habitacion:
                                                                BEGIN
                                                                  rConHab.RESET;
                                                                  rConHab.SETRANGE(Delegacion     , Delegacion);
                                                                  rConHab.SETRANGE("N§ Contrato"  , "N§ Contrato");
                                                                  rConHab.SETRANGE("Tipo contrato", rConHab."Tipo contrato"::Compra);
                                                                  IF FORM.RUNMODAL(0, rConHab) = ACTION::LookupOK THEN BEGIN
                                                                    Codigo := rConHab."Habitacion cupo";
                                                                  END;
                                                                  rConHab.RESET;
                                                                END;
                                                                "Codigo Precio"::Extras:
                                                                BEGIN
                                                                  IF FORM.RUNMODAL(0, rCodExt) = ACTION::LookupOK THEN
                                                                    Codigo := rCodExt.Codigo;
                                                                END;
                                                                "Codigo Precio"::Suplementos:
                                                                BEGIN
                                                                  rTipoEle.RESET;
                                                                  rTipoEle.SETRANGE(Humano, TRUE);
                                                                  IF FORM.RUNMODAL(7009712, rTipoEle) = ACTION::LookupOK THEN
                                                                    Codigo := rTipoEle."Tipo elemento";
                                                                  rTipoEle.RESET;
                                                                END;
                                                                "Codigo Precio"::Ofertas: BEGIN
                                                                  CLEAR(lrOfert);
                                                                  lrOfert.Codigo :=  Codigo;
                                                                  IF FORM.RUNMODAL(0, lrOfert) = ACTION::LookupOK THEN
                                                                    VALIDATE(Codigo, lrOfert.Codigo);
                                                                END;
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Code;
                                                              ESP=Codigo];
                                                   NotBlank=Yes;
                                                   Description=Multi Relacion }
    { 11  ;   ;Fecha desde         ;Date          ;OnValidate=BEGIN
                                                                IF "Fecha desde" <> xRec."Fecha desde" THEN BEGIN
                                                                  IF "Fecha hasta" <> 0D THEN BEGIN
                                                                    IF "Fecha desde" > "Fecha hasta" THEN
                                                                      ERROR(Text016);
                                                                  END;

                                                                  // AJS 07.09.2008
                                                                  // El tipo de Fecha "Fecha entrada+salida" no debe comprobar si esta dentro del contrato

                                                                  IF ("Tipo Fechas" <> "Tipo Fechas"::"Fecha venta") AND
                                                                     ("Tipo Fechas" <> "Tipo Fechas"::"Fecha venta+entrada") AND
                                                                     ("Tipo Fechas" <> "Tipo Fechas"::"Fecha venta+estancia") AND
                                                                     ("Tipo Fechas" <> "Tipo Fechas"::"Fecha entrada+salida") THEN BEGIN
                                                                    IF rConC.GET(Delegacion, "N§ Contrato") THEN BEGIN
                                                                      IF ("Fecha desde" < rConC."Fecha inicio contrato") OR ("Fecha desde" > rConC."Fecha final contrato") THEN
                                                                        ERROR(Text017);
                                                                    END;
                                                                  END;

                                                                  cPar.intro_historico_precios(Delegacion, "N§ Contrato", rHis.Tipo::"Hotel Compra", "Codigo Precio",
                                                                                               "Orden Precio", FIELDCAPTION("Fecha desde"), STRSUBSTNO('%1', "Fecha desde"),
                                                                                               STRSUBSTNO('%1', xRec."Fecha desde"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Date From;
                                                              ESP=Fecha desde] }
    { 13  ;   ;Fecha hasta         ;Date          ;OnValidate=BEGIN
                                                                IF "Fecha hasta" <> xRec."Fecha hasta" THEN BEGIN
                                                                  IF "Fecha desde" <> 0D THEN BEGIN
                                                                    IF "Fecha desde" > "Fecha hasta" THEN
                                                                      ERROR(Text016);
                                                                  END;

                                                                  // AJS 07.09.2008
                                                                  // El tipo de Fecha "Fecha entrada+salida" no debe comprobar si esta dentro del contrato

                                                                  IF ("Tipo Fechas" <> "Tipo Fechas"::"Fecha venta") AND
                                                                     ("Tipo Fechas" <> "Tipo Fechas"::"Fecha venta+entrada") AND
                                                                     ("Tipo Fechas" <> "Tipo Fechas"::"Fecha venta+estancia") AND
                                                                     ("Tipo Fechas" <> "Tipo Fechas"::"Fecha entrada+salida") THEN BEGIN
                                                                    IF rConC.GET(Delegacion, "N§ Contrato") THEN BEGIN
                                                                      IF ("Fecha hasta" < rConC."Fecha inicio contrato") OR ("Fecha hasta" > rConC."Fecha final contrato") THEN
                                                                        ERROR(Text018);
                                                                    END;
                                                                  END;

                                                                  cPar.intro_historico_precios(Delegacion, "N§ Contrato", rHis.Tipo::"Hotel Compra", "Codigo Precio",
                                                                                               "Orden Precio", FIELDCAPTION("Fecha hasta"), STRSUBSTNO('%1', "Fecha hasta"),
                                                                                               STRSUBSTNO('%1', xRec."Fecha hasta"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Date To;
                                                              ESP=Fecha hasta] }
    { 15  ;   ;Importe             ;Decimal       ;OnValidate=BEGIN
                                                                IF Importe <> xRec.Importe THEN BEGIN

                                                                  IF Importe <> 0 THEN
                                                                    IF "Noches gratis" <> 0 THEN
                                                                      ERROR(Text035);

                                                                  cPar.intro_historico_precios(Delegacion, "N§ Contrato", rHis.Tipo::"Hotel Compra", "Codigo Precio",
                                                                                               "Orden Precio", FIELDCAPTION(Importe), FORMAT(Importe),
                                                                                               FORMAT(xRec.Importe));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Amount;
                                                              ESP=Importe];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="C¢d. divisa" }
    { 17  ;   ;Tipo Precio         ;Option        ;InitValue=Pax;
                                                   OnValidate=BEGIN
                                                                IF "Tipo Precio" <> xRec."Tipo Precio" THEN BEGIN
                                                                  cPar.intro_historico_precios(Delegacion, "N§ Contrato", rHis.Tipo::"Hotel Compra", "Codigo Precio",
                                                                                               "Orden Precio", FIELDCAPTION("Tipo Precio"), STRSUBSTNO('%1', "Tipo Precio"),
                                                                                               STRSUBSTNO('%1', xRec."Tipo Precio"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Price type;
                                                              ESP=Tipo Precio];
                                                   OptionCaptionML=[ENU=Room,Pax;
                                                                    ESP=Habitaci¢n,Pax];
                                                   OptionString=Habitaci¢n,Pax }
    { 19  ;   ;Garantizable        ;Boolean       ;OnValidate=BEGIN
                                                                IF Garantizable <> xRec.Garantizable THEN BEGIN
                                                                  IF Garantizable THEN
                                                                    "Importe HP" := FALSE
                                                                  ELSE
                                                                    "Importe HP" := TRUE;
                                                                  cPar.intro_historico_precios(Delegacion, "N§ Contrato", rHis.Tipo::"Hotel Compra", "Codigo Precio",
                                                                                               "Orden Precio", FIELDCAPTION(Garantizable), STRSUBSTNO('%1', Garantizable),
                                                                                               STRSUBSTNO('%1', xRec.Garantizable));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Warrantable;
                                                              ESP=Garantizable] }
    { 21  ;   ;Importe HP          ;Boolean       ;InitValue=Yes;
                                                   OnValidate=BEGIN
                                                                IF "Importe HP" <> xRec."Importe HP" THEN BEGIN
                                                                  IF "Importe HP" THEN
                                                                    Garantizable := FALSE
                                                                  ELSE
                                                                    Garantizable := TRUE;
                                                                  cPar.intro_historico_precios(Delegacion, "N§ Contrato", rHis.Tipo::"Hotel Compra", "Codigo Precio",
                                                                                               "Orden Precio", FIELDCAPTION("Importe HP"), STRSUBSTNO('%1', "Importe HP"),
                                                                                               STRSUBSTNO('%1', xRec."Importe HP"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=HP Amount;
                                                              ESP=Importe HP] }
    { 23  ;   ;N§ Persona          ;Integer       ;OnValidate=BEGIN
                                                                IF "N§ Persona" <> xRec."N§ Persona" THEN BEGIN
                                                                  cPar.intro_historico_precios(Delegacion, "N§ Contrato", rHis.Tipo::"Hotel Compra", "Codigo Precio",
                                                                                               "Orden Precio", FIELDCAPTION("N§ Persona"), STRSUBSTNO('%1', "N§ Persona"),
                                                                                               STRSUBSTNO('%1', xRec."N§ Persona"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Person No.;
                                                              ESP=N§ Persona] }
    { 25  ;   ;Tipo Habitacion     ;Code10        ;OnValidate=BEGIN
                                                                IF "Tipo Habitacion" <> xRec."Tipo Habitacion" THEN BEGIN
                                                                  IF "Tipo Habitacion" <> '' THEN BEGIN
                                                                    rConHab.RESET;
                                                                    rConHab.SETRANGE(Delegacion       , Delegacion);
                                                                    rConHab.SETRANGE("N§ Contrato"    , "N§ Contrato");
                                                                    rConHab.SETRANGE("Tipo contrato"  , rConHab."Tipo contrato"::Compra);
                                                                    rConHab.SETRANGE("Habitacion cupo", "Tipo Habitacion");
                                                                    IF NOT rConHab.FIND('-') THEN
                                                                      ERROR(Text019, "Tipo Habitacion");
                                                                  END;

                                                                  cPar.intro_historico_precios(Delegacion, "N§ Contrato", rHis.Tipo::"Hotel Compra", "Codigo Precio",
                                                                                               "Orden Precio", FIELDCAPTION("Tipo Habitacion"), "Tipo Habitacion",
                                                                                               xRec."Tipo Habitacion");
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              rConHab.RESET;
                                                              rConHab.SETRANGE(Delegacion     , Delegacion);
                                                              rConHab.SETRANGE("N§ Contrato"  , "N§ Contrato");
                                                              rConHab.SETRANGE("Tipo contrato", rConHab."Tipo contrato"::Compra);
                                                              IF FORM.RUNMODAL(7009741, rConHab) = ACTION::LookupOK THEN
                                                                "Tipo Habitacion" := rConHab."Habitacion cupo";
                                                              rConHab.SETRANGE(Delegacion);
                                                              rConHab.SETRANGE("N§ Contrato");
                                                            END;

                                                   CaptionML=[ENU=Room type;
                                                              ESP=Tipo Habitacion] }
    { 27  ;   ;Tipo Regimen        ;Code10        ;TableRelation=Regimen.Regimen;
                                                   OnValidate=BEGIN
                                                                IF "Tipo Regimen" <> xRec."Tipo Regimen" THEN BEGIN
                                                                  cPar.intro_historico_precios(Delegacion, "N§ Contrato", rHis.Tipo::"Hotel Compra", "Codigo Precio",
                                                                                               "Orden Precio", FIELDCAPTION("Tipo Regimen"), "Tipo Regimen",
                                                                                               "Tipo Regimen");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Board type;
                                                              ESP=Tipo Regimen];
                                                   Description=FK Regimen }
    { 29  ;   ;Tipo Fechas         ;Option        ;InitValue=Fecha estancia;
                                                   OnValidate=BEGIN
                                                                IF "Tipo Fechas" <> xRec."Tipo Fechas" THEN BEGIN
                                                                  IF ("Fecha desde" = 0D) OR ("Fecha hasta" = 0D) THEN
                                                                    EXIT;
                                                                  IF ("Tipo Fechas" <> "Tipo Fechas"::"Fecha venta") AND
                                                                     ("Tipo Fechas" <> "Tipo Fechas"::"Fecha venta+entrada") AND
                                                                     ("Tipo Fechas" <> "Tipo Fechas"::"Fecha venta+estancia") AND
                                                                     ("Tipo Fechas" <> "Tipo Fechas"::"Fecha venta+salida") THEN BEGIN
                                                                    IF rConC.GET(Delegacion, "N§ Contrato") THEN BEGIN
                                                                      IF ("Fecha desde" < rConC."Fecha inicio contrato") OR
                                                                         ("Fecha desde" > rConC."Fecha final contrato") THEN
                                                                        ERROR(Text017);
                                                                      IF ("Fecha hasta" < rConC."Fecha inicio contrato") OR
                                                                         ("Fecha hasta" > rConC."Fecha final contrato") THEN
                                                                        ERROR(Text018);
                                                                    END;
                                                                  END;
                                                                  IF ("Tipo Fechas" = "Tipo Fechas"::"Fecha venta+entrada") OR
                                                                     ("Tipo Fechas" = "Tipo Fechas"::"Fecha venta+estancia") OR
                                                                     ("Tipo Fechas" = "Tipo Fechas"::"Fecha venta+salida") OR
                                                                     ("Tipo Fechas" = "Tipo Fechas"::"Fecha entrada+salida") THEN BEGIN
                                                                    IF ("2¦ Fecha desde" = 0D) OR ("2¦ Fecha hasta" = 0D) THEN
                                                                      EXIT;
                                                                    IF rConC.GET(Delegacion, "N§ Contrato") THEN BEGIN
                                                                      IF ("2¦ Fecha desde" < rConC."Fecha inicio contrato") OR
                                                                         ("2¦ Fecha desde" > rConC."Fecha final contrato") THEN
                                                                        ERROR(Text017);
                                                                      IF ("2¦ Fecha hasta" < rConC."Fecha inicio contrato") OR
                                                                         ("2¦ Fecha hasta" > rConC."Fecha final contrato") THEN
                                                                        ERROR(Text018);
                                                                    END;
                                                                  END;

                                                                  IF "Tipo Fechas" <> "Tipo Fechas"::"Fecha estancia" THEN BEGIN
                                                                    IF "Dias Antes Llegada EBB" <> 0 THEN BEGIN
                                                                      "Dias Antes Llegada EBB":=0;
                                                                    END;
                                                                  END;

                                                                  cPar.intro_historico_precios(Delegacion, "N§ Contrato", rHis.Tipo::"Hotel Compra", "Codigo Precio",
                                                                                               "Orden Precio", FIELDCAPTION("Tipo Fechas"), STRSUBSTNO('%1', "Tipo Fechas"),
                                                                                               STRSUBSTNO('%1', xRec."Tipo Fechas"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Dates type;
                                                              ESP=Tipo Fechas];
                                                   OptionCaptionML=[ENU="Sale date,Check-in date,Stay date,Sale+stay date,Sale+check-in date,Check-out date,Sale+check-out date,Check-out+check-in date ";
                                                                    ESP=Fecha venta,Fecha entrada,Fecha estancia,Fecha venta+estancia,Fecha venta+entrada,Fecha salida,Fecha venta+salida,Fecha entrada+salida];
                                                   OptionString=Fecha venta,Fecha entrada,Fecha estancia,Fecha venta+estancia,Fecha venta+entrada,Fecha salida,Fecha venta+salida,Fecha entrada+salida }
    { 31  ;   ;Tipo Persona        ;Code10        ;TableRelation="Tipo elemento"."Tipo elemento" WHERE (Humano=CONST(Yes));
                                                   OnValidate=BEGIN
                                                                IF "Tipo Persona" <> xRec."Tipo Persona" THEN BEGIN
                                                                  rTipoEle.RESET;
                                                                  rTipoEle.SETRANGE(Humano         , TRUE);
                                                                  rTipoEle.SETRANGE("Tipo elemento", "Tipo Persona");
                                                                  IF NOT rTipoEle.FINDFIRST THEN
                                                                     ERROR(Text014);

                                                                  cPar.intro_historico_precios(Delegacion, "N§ Contrato", rHis.Tipo::"Hotel Compra", "Codigo Precio",
                                                                                               "Orden Precio", FIELDCAPTION("Tipo Persona"), "Tipo Persona",
                                                                                               xRec."Tipo Persona");
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              rTipoEle.RESET;
                                                              rTipoEle.SETRANGE(Humano, TRUE);
                                                              IF FORM.RUNMODAL(7009712, rTipoEle) = ACTION::LookupOK THEN
                                                                "Tipo Persona" := rTipoEle."Tipo elemento";
                                                            END;

                                                   CaptionML=[ENU=Person type;
                                                              ESP=Tipo Persona];
                                                   Description=FK Tipo elemento }
    { 33  ;   ;Edad desde          ;Integer       ;OnValidate=BEGIN
                                                                IF "Edad desde" <> xRec."Edad desde" THEN BEGIN
                                                                  IF "Edad desde" < 0 THEN
                                                                    ERROR(Text020);
                                                                  IF "Edad desde" > 120 THEN
                                                                    ERROR(Text021);
                                                                  IF "Edad hasta" <> 0 THEN BEGIN
                                                                    IF "Edad hasta" < "Edad desde" THEN
                                                                      ERROR(Text022);
                                                                  END;
                                                                  cPar.intro_historico_precios(Delegacion, "N§ Contrato", rHis.Tipo::"Hotel Compra", "Codigo Precio",
                                                                                               "Orden Precio", FIELDCAPTION("Edad desde"), STRSUBSTNO('%1', "Edad desde"),
                                                                                               STRSUBSTNO('%1', xRec."Edad desde"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Age from;
                                                              ESP=Edad desde] }
    { 35  ;   ;Edad hasta          ;Integer       ;OnValidate=BEGIN
                                                                IF "Edad hasta" <> xRec."Edad hasta" THEN BEGIN
                                                                  IF "Edad hasta" > 120 THEN
                                                                    ERROR(Text021);
                                                                  IF "Edad hasta" < "Edad desde" THEN
                                                                    ERROR(Text022);

                                                                  cPar.intro_historico_precios(Delegacion, "N§ Contrato", rHis.Tipo::"Hotel Compra", "Codigo Precio",
                                                                                               "Orden Precio", FIELDCAPTION("Edad hasta"), STRSUBSTNO('%1', "Edad hasta"),
                                                                                               STRSUBSTNO('%1', xRec."Edad hasta"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Age to;
                                                              ESP=Edad hasta] }
    { 37  ;   ;Tipo Persona acompa¤ante;Code10    ;TableRelation="Tipo elemento"."Tipo elemento" WHERE (Humano=CONST(Yes));
                                                   OnValidate=BEGIN
                                                                IF "Tipo Persona acompa¤ante" <> xRec."Tipo Persona acompa¤ante" THEN BEGIN
                                                                  rTipoEle.RESET;
                                                                  rTipoEle.SETRANGE(Humano, TRUE);
                                                                  rTipoEle.SETRANGE("Tipo elemento", "Tipo Persona acompa¤ante");
                                                                  IF NOT rTipoEle.FIND('-') THEN
                                                                     ERROR(Text014);
                                                                  rTipoEle.RESET;

                                                                  cPar.intro_historico_precios(Delegacion, "N§ Contrato", rHis.Tipo::"Hotel Compra", "Codigo Precio",
                                                                                               "Orden Precio", FIELDCAPTION("Tipo Persona acompa¤ante"),
                                                                                               "Tipo Persona acompa¤ante", xRec."Tipo Persona acompa¤ante");
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              rTipoEle.RESET;
                                                              rTipoEle.SETRANGE(Humano, TRUE);
                                                              IF FORM.RUNMODAL(7009712, rTipoEle) = ACTION::LookupOK THEN
                                                                "Tipo Persona acompa¤ante" := rTipoEle."Tipo elemento";
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Companion person type;
                                                              ESP=Tipo Persona acompa¤ante];
                                                   Description=FK Tipo elemento }
    { 39  ;   ;N§ Personas acompa¤ante;Integer    ;OnValidate=BEGIN
                                                                IF "N§ Personas acompa¤ante" <> xRec."N§ Personas acompa¤ante" THEN BEGIN
                                                                  cPar.intro_historico_precios(Delegacion, "N§ Contrato", rHis.Tipo::"Hotel Compra", "Codigo Precio",
                                                                                               "Orden Precio", FIELDCAPTION("N§ Personas acompa¤ante"),
                                                                                               STRSUBSTNO('%1',"N§ Personas acompa¤ante"),
                                                                                               STRSUBSTNO('%1', xRec."N§ Personas acompa¤ante"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Companion people No.;
                                                              ESP=N§ Personas acompa¤ante] }
    { 41  ;   ;Porcentaje          ;Boolean       ;OnValidate=BEGIN
                                                                IF Porcentaje <> xRec.Porcentaje THEN BEGIN

                                                                  IF Porcentaje THEN
                                                                    IF "Noches gratis" <> 0 THEN
                                                                      ERROR(Text033);

                                                                  cPar.intro_historico_precios(Delegacion, "N§ Contrato", rHis.Tipo::"Hotel Compra", "Codigo Precio",
                                                                                               "Orden Precio", FIELDCAPTION(Porcentaje), STRSUBSTNO('%1', Porcentaje),
                                                                                               STRSUBSTNO('%1', xRec.Porcentaje));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Percentage;
                                                              ESP=Porcentaje] }
    { 43  ;   ;Acumular al total   ;Boolean       ;OnValidate=BEGIN
                                                                IF "Acumular al total" <> xRec."Acumular al total" THEN BEGIN

                                                                  IF "Acumular al total" THEN
                                                                    IF "Noches gratis" <> 0 THEN
                                                                      ERROR(Text034);

                                                                  cPar.intro_historico_precios(Delegacion, "N§ Contrato", rHis.Tipo::"Hotel Compra", "Codigo Precio",
                                                                                               "Orden Precio", FIELDCAPTION("Acumular al total"), STRSUBSTNO('%1', "Acumular al total"),
                                                                                               STRSUBSTNO('%1', xRec."Acumular al total"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Accumulate to total;
                                                              ESP=Acumular al total] }
    { 45  ;   ;Frecuencia          ;Integer       ;OnValidate=BEGIN
                                                                IF Frecuencia <> xRec.Frecuencia THEN BEGIN
                                                                  cPar.intro_historico_precios(Delegacion, "N§ Contrato", rHis.Tipo::"Hotel Compra", "Codigo Precio",
                                                                                               "Orden Precio", FIELDCAPTION(Frecuencia), STRSUBSTNO('%1', Frecuencia),
                                                                                               STRSUBSTNO('%1', xRec.Frecuencia));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Frequency;
                                                              ESP=Frecuencia] }
    { 47  ;   ;N§ Personas         ;Integer       ;OnValidate=BEGIN
                                                                IF "N§ Personas" <> xRec."N§ Personas" THEN BEGIN
                                                                  cPar.intro_historico_precios(Delegacion, "N§ Contrato", rHis.Tipo::"Hotel Compra", "Codigo Precio",
                                                                                               "Orden Precio", FIELDCAPTION("N§ Personas"), STRSUBSTNO('%1', "N§ Personas"),
                                                                                               STRSUBSTNO('%1', xRec."N§ Personas"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=People No.;
                                                              ESP=N§ Personas] }
    { 49  ;   ;N§ Usos Oferta      ;Integer       ;CaptionML=[ENU=Offer usages No.;
                                                              ESP=N§ Usos Oferta] }
    { 51  ;   ;N§ Reservas aplicadas;Integer      ;CaptionML=[ENU=Applied bookings No.;
                                                              ESP=N§ Reservas aplicadas] }
    { 53  ;   ;Oferta excluyente   ;Boolean       ;OnValidate=BEGIN
                                                                IF "Oferta excluyente" <> xRec."Oferta excluyente" THEN BEGIN
                                                                  cPar.intro_historico_precios(Delegacion, "N§ Contrato", rHis.Tipo::"Hotel Compra", "Codigo Precio",
                                                                                               "Orden Precio", FIELDCAPTION("Oferta excluyente"), STRSUBSTNO('%1', "Oferta excluyente"),
                                                                                               STRSUBSTNO('%1', xRec."Oferta excluyente"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Exclusive offer;
                                                              ESP=Oferta excluyente] }
    { 55  ;   ;A partir de estancias;Integer      ;OnValidate=BEGIN
                                                                IF "A partir de estancias" <> xRec."A partir de estancias" THEN BEGIN
                                                                  IF "N§ estancias" <> 0 THEN
                                                                    ERROR(Text023);

                                                                  VALIDATE("Hasta numero estancias");

                                                                  cPar.intro_historico_precios(Delegacion, "N§ Contrato", rHis.Tipo::"Hotel Compra", "Codigo Precio",
                                                                                               "Orden Precio", FIELDCAPTION("A partir de estancias"), FORMAT("A partir de estancias"),
                                                                                               FORMAT(xRec."A partir de estancias"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=From stays;
                                                              ESP=A partir de estancias] }
    { 57  ;   ;N§ estancias        ;Integer       ;OnValidate=BEGIN
                                                                IF "N§ estancias" <> xRec."N§ estancias" THEN BEGIN
                                                                  cPar.intro_historico_precios(Delegacion, "N§ Contrato", rHis.Tipo::"Hotel Compra", "Codigo Precio",
                                                                                               "Orden Precio", FIELDCAPTION("N§ estancias"), STRSUBSTNO('%1', "N§ estancias"),
                                                                                               STRSUBSTNO('%1', xRec."N§ estancias"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Stays No.;
                                                              ESP=N§ estancias] }
    { 59  ;   ;N§ estancias a facturar;Integer    ;OnValidate=BEGIN
                                                                IF "N§ estancias a facturar" <> xRec."N§ estancias a facturar" THEN BEGIN
                                                                  IF "A partir de estancias" <> 0 THEN
                                                                    ERROR(Text023);

                                                                  cPar.intro_historico_precios(Delegacion, "N§ Contrato", rHis.Tipo::"Hotel Compra", "Codigo Precio",
                                                                                               "Orden Precio", FIELDCAPTION("N§ estancias a facturar"),
                                                                                               FORMAT("N§ estancias a facturar"), FORMAT(xRec."N§ estancias a facturar"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Stays no. To invoice;
                                                              ESP=N§ estancias a facturar] }
    { 61  ;   ;Tipo Oferta         ;Option        ;CaptionML=[ENU=Offer type;
                                                              ESP=Tipo Oferta];
                                                   OptionCaptionML=[ENU=Price,AxB;
                                                                    ESP=Precio,AxB];
                                                   OptionString=Precio,AxB }
    { 63  ;   ;Activo              ;Boolean       ;FieldClass=Normal;
                                                   InitValue=No;
                                                   CaptionML=[ENU=Active;
                                                              ESP=Activo];
                                                   Editable=No }
    { 65  ;   ;Aplica a Habitacion ;Boolean       ;OnValidate=BEGIN
                                                                IF "Aplica a Habitacion" <> xRec."Aplica a Habitacion" THEN BEGIN
                                                                  IF "Subtipo Oferta" = "Subtipo Oferta"::"Free Night" THEN
                                                                    Rec.VALIDATE("Anula a Habitacion", "Aplica a Habitacion");

                                                                  cPar.intro_historico_precios(Delegacion, "N§ Contrato", rHis.Tipo::"Hotel Compra", "Codigo Precio",
                                                                                               "Orden Precio", FIELDCAPTION("Aplica a Habitacion"), STRSUBSTNO('%1', "Aplica a Habitacion"),
                                                                                               STRSUBSTNO('%1', xRec."Aplica a Habitacion"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Apply to room;
                                                              ESP=Aplica a Habitacion] }
    { 67  ;   ;Aplica a Regimen    ;Boolean       ;OnValidate=BEGIN
                                                                IF "Aplica a Regimen" <> xRec."Aplica a Regimen" THEN BEGIN
                                                                  IF "Subtipo Oferta" = "Subtipo Oferta"::"Free Night" THEN
                                                                    Rec.VALIDATE("Anula a Regimen", "Aplica a Regimen");

                                                                  cPar.intro_historico_precios(Delegacion, "N§ Contrato", rHis.Tipo::"Hotel Compra", "Codigo Precio",
                                                                                               "Orden Precio", FIELDCAPTION("Aplica a Regimen"), STRSUBSTNO('%1', "Aplica a Regimen"),
                                                                                               STRSUBSTNO('%1', xRec."Aplica a Regimen"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Apply to board;
                                                              ESP=Aplica a Regimen] }
    { 69  ;   ;Aplica a Suplementos;Boolean       ;OnValidate=BEGIN
                                                                IF "Aplica a Suplementos" <> xRec."Aplica a Suplementos" THEN BEGIN
                                                                  IF "Subtipo Oferta" = "Subtipo Oferta"::"Free Night" THEN
                                                                    Rec.VALIDATE("Anula a Suplementos", "Aplica a Suplementos");

                                                                  cPar.intro_historico_precios(Delegacion, "N§ Contrato", rHis.Tipo::"Hotel Compra", "Codigo Precio",
                                                                                               "Orden Precio", FIELDCAPTION("Aplica a Suplementos"), STRSUBSTNO('%1', "Aplica a Suplementos"),
                                                                                               STRSUBSTNO('%1', xRec."Aplica a Suplementos"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Apply to supplements;
                                                              ESP=Aplica a Suplementos] }
    { 70  ;   ;Aplica a Extras     ;Boolean       ;OnValidate=BEGIN
                                                                IF "Aplica a Extras" <> xRec."Aplica a Extras" THEN BEGIN
                                                                  IF "Subtipo Oferta" = "Subtipo Oferta"::"Free Night" THEN
                                                                    Rec.VALIDATE("Anula a Extras", "Aplica a Extras");

                                                                  cPar.intro_historico_precios(Delegacion, "N§ Contrato", rHis.Tipo::"Hotel Compra", "Codigo Precio",
                                                                                               "Orden Precio", FIELDCAPTION("Aplica a Extras"), STRSUBSTNO('%1', "Aplica a Extras"),
                                                                                               STRSUBSTNO('%1', xRec."Aplica a Extras"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Apply to extras;
                                                              ESP=Aplica a Extras] }
    { 71  ;   ;Aplica a Ofertas    ;Boolean       ;OnValidate=BEGIN
                                                                IF "Aplica a Ofertas" <> xRec."Aplica a Ofertas" THEN BEGIN
                                                                  IF "Codigo Precio" = "Codigo Precio"::AxB THEN
                                                                    Rec.VALIDATE("Anula a Ofertas", "Aplica a Ofertas");

                                                                  cPar.intro_historico_precios(Delegacion, "N§ Contrato", rHis.Tipo::"Hotel Compra", "Codigo Precio",
                                                                                               "Orden Precio", FIELDCAPTION("Aplica a Ofertas"), STRSUBSTNO('%1', "Aplica a Ofertas"),
                                                                                               STRSUBSTNO('%1', xRec."Aplica a Ofertas"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Apply to offers;
                                                              ESP=Aplica a Ofertas] }
    { 73  ;   ;N§ Acompa¤antes exacto;Boolean     ;OnValidate=BEGIN
                                                                IF "N§ Acompa¤antes exacto" <> xRec."N§ Acompa¤antes exacto" THEN BEGIN
                                                                  cPar.intro_historico_precios(Delegacion, "N§ Contrato", rHis.Tipo::"Hotel Compra", "Codigo Precio",
                                                                                               "Orden Precio", FIELDCAPTION("N§ Acompa¤antes exacto"), STRSUBSTNO('%1', "N§ Acompa¤antes exacto"),
                                                                                               STRSUBSTNO('%1', xRec."N§ Acompa¤antes exacto"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Companions No. Exactly;
                                                              ESP=N§ Acompa¤antes exacto] }
    { 75  ;   ;Anula a Habitacion  ;Boolean       ;OnValidate=BEGIN
                                                                IF "Anula a Habitacion" <> xRec."Anula a Habitacion" THEN
                                                                  cPar.intro_historico_precios(Delegacion, "N§ Contrato", rHis.Tipo::"Hotel Compra", "Codigo Precio",
                                                                                               "Orden Precio", FIELDCAPTION("Anula a Habitacion"),
                                                                                               FORMAT("Anula a Habitacion"), FORMAT(xRec."Anula a Habitacion"));
                                                              END;

                                                   CaptionML=[ENU=Cancel to Room;
                                                              ESP=Anula a Habitacion] }
    { 77  ;   ;Anula a Regimen     ;Boolean       ;OnValidate=BEGIN
                                                                IF "Anula a Regimen" <> xRec."Anula a Regimen" THEN
                                                                  cPar.intro_historico_precios(Delegacion, "N§ Contrato", rHis.Tipo::"Hotel Compra", "Codigo Precio",
                                                                                               "Orden Precio", FIELDCAPTION("Anula a Regimen"),
                                                                                               FORMAT("Anula a Regimen"), FORMAT(xRec."Anula a Regimen"));
                                                              END;

                                                   CaptionML=[ENU=Cancel to Board;
                                                              ESP=Anula a Regimen] }
    { 79  ;   ;Anula a Suplementos ;Boolean       ;OnValidate=BEGIN
                                                                IF "Anula a Suplementos" <> xRec."Anula a Suplementos" THEN
                                                                  cPar.intro_historico_precios(Delegacion, "N§ Contrato", rHis.Tipo::"Hotel Compra", "Codigo Precio",
                                                                                               "Orden Precio", FIELDCAPTION("Anula a Suplementos"),
                                                                                               FORMAT("Anula a Suplementos"), FORMAT(xRec."Anula a Suplementos"));
                                                              END;

                                                   CaptionML=[ENU=Cancel to supplements;
                                                              ESP=Anula a Suplementos] }
    { 80  ;   ;Anula a Extras      ;Boolean       ;OnValidate=BEGIN
                                                                IF "Anula a Extras" <> xRec."Anula a Extras" THEN
                                                                  cPar.intro_historico_precios(Delegacion, "N§ Contrato", rHis.Tipo::"Hotel Compra", "Codigo Precio",
                                                                                               "Orden Precio", FIELDCAPTION("Anula a Extras"),
                                                                                               FORMAT("Anula a Extras"), FORMAT(xRec."Anula a Extras"));
                                                              END;

                                                   CaptionML=[ENU=Cancel to extras;
                                                              ESP=Anula a Extras] }
    { 81  ;   ;Anula a Ofertas     ;Boolean       ;OnValidate=BEGIN
                                                                IF "Anula a Ofertas" <> xRec."Anula a Ofertas" THEN
                                                                  cPar.intro_historico_precios(Delegacion, "N§ Contrato", rHis.Tipo::"Hotel Compra", "Codigo Precio",
                                                                                               "Orden Precio", FIELDCAPTION("Anula a Ofertas"),
                                                                                               FORMAT("Anula a Ofertas"), FORMAT(xRec."Anula a Ofertas"));
                                                              END;

                                                   CaptionML=[ENU=Cancel to Offers;
                                                              ESP=Anula a Ofertas] }
    { 83  ;   ;Aplicacion fija     ;Boolean       ;OnValidate=BEGIN
                                                                IF "Aplicacion fija" <> xRec."Aplicacion fija" THEN
                                                                  cPar.intro_historico_precios(Delegacion, "N§ Contrato", rHis.Tipo::"Hotel Compra", "Codigo Precio",
                                                                                               "Orden Precio", FIELDCAPTION("Aplicacion fija"),
                                                                                               FORMAT("Aplicacion fija"), FORMAT(xRec."Aplicacion fija"));
                                                              END;

                                                   CaptionML=[ENU=Fixed application;
                                                              ESP=Aplicacion fija] }
    { 85  ;   ;Tipo Ocupantes      ;Code10        ;TableRelation="Tipo elemento"."Tipo elemento" WHERE (Humano=CONST(Yes));
                                                   OnValidate=BEGIN
                                                                IF "Tipo Ocupantes" <> xRec."Tipo Ocupantes" THEN BEGIN
                                                                  rTipoEle.RESET;
                                                                  rTipoEle.SETRANGE(Humano, TRUE);
                                                                  rTipoEle.SETRANGE("Tipo elemento", "Tipo Ocupantes");
                                                                  IF NOT rTipoEle.FIND('-') THEN
                                                                     ERROR(Text014);
                                                                  rTipoEle.RESET;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Occupants type;
                                                              ESP=Tipo Ocupantes];
                                                   Description=FK Tipo elemento }
    { 87  ;   ;N§ Ocupantes        ;Integer       ;CaptionML=[ENU=Occupants No.;
                                                              ESP=N§ Ocupantes] }
    { 89  ;   ;N§ Reservas aplicacion;Integer     ;CaptionML=[ENU=Application booking No.;
                                                              ESP=N§ reservas aplicacion] }
    { 90  ;   ;Replicado           ;Boolean       ;InitValue=No;
                                                   OnValidate=BEGIN
                                                                Replicado:= FALSE;

                                                                IF rConC.GET(Delegacion,"N§ Contrato") THEN BEGIN
                                                                  rConC.Replicado := FALSE;
                                                                  rConC.MODIFY;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Replicated;
                                                              ESP=Replicado];
                                                   Description=Campo usado por el replicador }
    { 91  ;   ;Aplicar tras AxB    ;Boolean       ;OnValidate=BEGIN
                                                                IF "Aplicar tras AxB" <> xRec."Aplicar tras AxB" THEN
                                                                  cPar.intro_historico_precios(Delegacion, "N§ Contrato", rHis.Tipo::"Hotel Compra", "Codigo Precio",
                                                                                               "Orden Precio", FIELDCAPTION("Aplicar tras AxB"),
                                                                                               FORMAT("Aplicar tras AxB"), FORMAT(xRec."Aplicar tras AxB"));
                                                              END;

                                                   CaptionML=[ENU=Apply after AxB;
                                                              ESP=Aplicar tras AxB] }
    { 93  ;   ;C¢d. divisa         ;Code10        ;TableRelation=Currency;
                                                   CaptionML=[ENU=Currency code;
                                                              ESP=C¢d. divisa];
                                                   Description=FK Divisa }
    { 95  ;   ;2¦ Fecha desde      ;Date          ;OnValidate=BEGIN
                                                                IF "2¦ Fecha desde" <> xRec."2¦ Fecha desde" THEN BEGIN
                                                                  IF "2¦ Fecha hasta" <> 0D THEN BEGIN
                                                                    IF "2¦ Fecha desde" > "2¦ Fecha hasta" THEN
                                                                      ERROR(Text024);
                                                                  END;

                                                                  // AJS 07.09.2008
                                                                  // El tipo de Fecha "Fecha entrada+salida" no debe comprobar si esta dentro del contrato

                                                                  IF ("Tipo Fechas" = "Tipo Fechas"::"Fecha venta+entrada") OR
                                                                     ("Tipo Fechas" = "Tipo Fechas"::"Fecha venta+estancia") OR
                                                                     ("Tipo Fechas" = "Tipo Fechas"::"Fecha venta+salida") THEN BEGIN
                                                                    IF rConC.GET(Delegacion, "N§ Contrato") THEN BEGIN
                                                                      IF ("2¦ Fecha desde" < rConC."Fecha inicio contrato") OR ("2¦ Fecha desde" > rConC."Fecha final contrato") THEN
                                                                        ERROR(Text025);
                                                                    END;
                                                                  END;

                                                                  cPar.intro_historico_precios(Delegacion, "N§ Contrato", rHis.Tipo::"Hotel Compra", "Codigo Precio",
                                                                                               "Orden Precio", FIELDCAPTION("2¦ Fecha desde"), STRSUBSTNO('%1', "2¦ Fecha desde"),
                                                                                               STRSUBSTNO('%1', xRec."2¦ Fecha desde"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=2nd date from;
                                                              ESP=2¦ Fecha desde] }
    { 97  ;   ;2¦ Fecha hasta      ;Date          ;OnValidate=BEGIN
                                                                IF "2¦ Fecha hasta" <> xRec."2¦ Fecha hasta" THEN BEGIN
                                                                  IF "2¦ Fecha desde" <> 0D THEN BEGIN
                                                                    IF "2¦ Fecha desde" > "2¦ Fecha hasta" THEN
                                                                      ERROR(Text024);
                                                                  END;

                                                                  // AJS 07.09.2008
                                                                  // El tipo de Fecha "Fecha entrada+salida" no debe comprobar si esta dentro del contrato

                                                                  IF ("Tipo Fechas" = "Tipo Fechas"::"Fecha venta+entrada") OR
                                                                     ("Tipo Fechas" = "Tipo Fechas"::"Fecha venta+estancia") OR
                                                                     ("Tipo Fechas" = "Tipo Fechas"::"Fecha venta+salida") THEN BEGIN
                                                                    IF rConC.GET(Delegacion, "N§ Contrato") THEN BEGIN
                                                                      IF ("2¦ Fecha hasta" < rConC."Fecha inicio contrato") OR
                                                                         ("2¦ Fecha hasta" > rConC."Fecha final contrato") THEN
                                                                        ERROR(Text026);
                                                                    END;
                                                                  END;

                                                                  cPar.intro_historico_precios(Delegacion, "N§ Contrato", rHis.Tipo::"Hotel Compra", "Codigo Precio",
                                                                                               "Orden Precio", FIELDCAPTION("2¦ Fecha hasta"), STRSUBSTNO('%1', "2¦ Fecha hasta"),
                                                                                               STRSUBSTNO('%1', xRec."2¦ Fecha hasta"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=2nd date to;
                                                              ESP=2¦ Fecha hasta] }
    { 99  ;   ;Hotel oferta especial;Code20       ;TableRelation="Conversion hotel"."Hotel TO";
                                                   OnValidate=BEGIN
                                                                IF "Hotel oferta especial" <> '' THEN BEGIN
                                                                  rConC.RESET;
                                                                  rConC.GET(Delegacion, "N§ Contrato");

                                                                  rConv.RESET;
                                                                  rConv.SETRANGE(TourOperador, rConC.TourOperador);
                                                                  rConv.SETRANGE("Hotel TO"  , "Hotel oferta especial");
                                                                  IF NOT rConv.FINDFIRST THEN
                                                                    ERROR(Text027);
                                                                END;

                                                                cPar.intro_historico_precios(Delegacion, "N§ Contrato", rHis.Tipo::"Hotel Compra", "Codigo Precio", "Orden Precio",
                                                                                             FIELDCAPTION("Hotel oferta especial"), FORMAT("Hotel oferta especial"),
                                                                                             FORMAT(xRec."Hotel oferta especial"));
                                                              END;

                                                   OnLookup=BEGIN
                                                              rConC.RESET;
                                                              rConC.GET(Delegacion, "N§ Contrato");

                                                              rConv.RESET;
                                                              rConv.SETRANGE(TourOperador     , rConC.TourOperador);
                                                              rConv.SETRANGE("Oferta de Hotel", TRUE);

                                                              CLEAR(fTabConvHotel);
                                                              fTabConvHotel.SETTABLEVIEW(rConv);
                                                              fTabConvHotel.EDITABLE(FALSE);
                                                              fTabConvHotel.LOOKUPMODE(TRUE);

                                                              IF fTabConvHotel.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                                                fTabConvHotel.GETRECORD(rConv);
                                                                "Hotel oferta especial" := rConv."Hotel TO";
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Special offer hotel;
                                                              ESP=Hotel oferta especial] }
    { 101 ;   ;Aplica Lunes        ;Boolean       ;OnValidate=BEGIN
                                                                cPar.intro_historico_precios(Delegacion, "N§ Contrato", rHis.Tipo::"Hotel Compra", "Codigo Precio", "Orden Precio",
                                                                                             FIELDCAPTION("Aplica Lunes"), FORMAT("Aplica Lunes"), FORMAT(xRec."Aplica Lunes"));
                                                              END;

                                                   CaptionML=[ENU=Apply Monday;
                                                              ESP=Aplica Lunes] }
    { 103 ;   ;Aplica Martes       ;Boolean       ;OnValidate=BEGIN
                                                                cPar.intro_historico_precios(Delegacion, "N§ Contrato", rHis.Tipo::"Hotel Compra", "Codigo Precio", "Orden Precio",
                                                                                             FIELDCAPTION("Aplica Martes"), FORMAT("Aplica Martes"), FORMAT(xRec."Aplica Martes"));
                                                              END;

                                                   CaptionML=[ENU=Apply Tuesday;
                                                              ESP=Aplica Martes] }
    { 105 ;   ;Aplica Miercoles    ;Boolean       ;OnValidate=BEGIN
                                                                cPar.intro_historico_precios(Delegacion, "N§ Contrato", rHis.Tipo::"Hotel Compra", "Codigo Precio", "Orden Precio",
                                                                                             FIELDCAPTION("Aplica Miercoles"), FORMAT("Aplica Miercoles"), FORMAT(xRec."Aplica Miercoles"));
                                                              END;

                                                   CaptionML=[ENU=Apply Wednesday;
                                                              ESP=Aplica Miercoles] }
    { 107 ;   ;Aplica Jueves       ;Boolean       ;OnValidate=BEGIN
                                                                cPar.intro_historico_precios(Delegacion, "N§ Contrato", rHis.Tipo::"Hotel Compra", "Codigo Precio", "Orden Precio",
                                                                                             FIELDCAPTION("Aplica Jueves"), FORMAT("Aplica Jueves"), FORMAT(xRec."Aplica Jueves"));
                                                              END;

                                                   CaptionML=[ENU=Apply Thursday;
                                                              ESP=Aplica Jueves] }
    { 109 ;   ;Aplica Viernes      ;Boolean       ;OnValidate=BEGIN
                                                                cPar.intro_historico_precios(Delegacion, "N§ Contrato", rHis.Tipo::"Hotel Compra", "Codigo Precio", "Orden Precio",
                                                                                             FIELDCAPTION("Aplica Viernes"), FORMAT("Aplica Viernes"), FORMAT(xRec."Aplica Viernes"));
                                                              END;

                                                   CaptionML=[ENU=Apply Friday;
                                                              ESP=Aplica Viernes] }
    { 111 ;   ;Aplica Sabado       ;Boolean       ;OnValidate=BEGIN
                                                                cPar.intro_historico_precios(Delegacion, "N§ Contrato", rHis.Tipo::"Hotel Compra", "Codigo Precio", "Orden Precio",
                                                                                             FIELDCAPTION("Aplica Sabado"), FORMAT("Aplica Sabado"), FORMAT(xRec."Aplica Sabado"));
                                                              END;

                                                   CaptionML=[ENU=Apply Saturday;
                                                              ESP=Aplica Sabado] }
    { 113 ;   ;Aplica Domingo      ;Boolean       ;OnValidate=BEGIN
                                                                cPar.intro_historico_precios(Delegacion, "N§ Contrato", rHis.Tipo::"Hotel Compra", "Codigo Precio", "Orden Precio",
                                                                                             FIELDCAPTION("Aplica Domingo"), FORMAT("Aplica Domingo"), FORMAT(xRec."Aplica Domingo"));
                                                              END;

                                                   CaptionML=[ENU=Apply Sunday;
                                                              ESP=Aplica Domingo] }
    { 115 ;   ;Aplicacion x dia    ;Boolean       ;OnValidate=BEGIN
                                                                cPar.intro_historico_precios(Delegacion, "N§ Contrato", rHis.Tipo::"Hotel Compra", "Codigo Precio", "Orden Precio",
                                                                                             FIELDCAPTION("Aplicacion x dia"), FORMAT("Aplicacion x dia"), FORMAT(xRec."Aplicacion x dia"));
                                                              END;

                                                   CaptionML=[ENU=Apply x day;
                                                              ESP=Aplicacion x dia];
                                                   Description=Para las ofertas que se aplican en funcion del dia de la semana }
    { 116 ;   ;Dias Antes Llegada EBB;Integer     ;OnValidate=BEGIN
                                                                IF ("Tipo Fechas" <> "Tipo Fechas"::"Fecha estancia") AND
                                                                   ("Tipo Fechas" <> "Tipo Fechas"::"Fecha entrada") THEN
                                                                  Rec.FIELDERROR("Tipo Fechas", Text028);

                                                                cPar.intro_historico_precios(Delegacion, "N§ Contrato", rHis.Tipo::"Hotel Compra", "Codigo Precio", "Orden Precio",
                                                                                             FIELDCAPTION("Dias Antes Llegada EBB"),
                                                                                             FORMAT("Dias Antes Llegada EBB"), FORMAT(xRec."Dias Antes Llegada EBB"));
                                                              END;

                                                   CaptionML=[ENU=Day before arrival EBB;
                                                              ESP=Dias Antes Llegada EBB];
                                                   MinValue=0;
                                                   Description=Dias antes para aplicarle una oferta Early booking }
    { 117 ;   ;Touroperador aplicacion;Code10     ;TableRelation=TourOperador.TourOperador;
                                                   OnValidate=BEGIN
                                                                cPar.intro_historico_precios(Delegacion, "N§ Contrato", rHis.Tipo::"Hotel Compra", "Codigo Precio", "Orden Precio",
                                                                                             FIELDCAPTION("Touroperador aplicacion"),
                                                                                             FORMAT("Touroperador aplicacion"), FORMAT(xRec."Touroperador aplicacion"));
                                                              END;

                                                   CaptionML=[ENU=Application touroperator;
                                                              ESP=Touroperador aplicacion];
                                                   Description=FK Touroperador, de uso en las ofertas AxB, para indicar a que Touroperador Venta se aplica la oferta }
    { 118 ;   ;No aplicar en AxB   ;Boolean       ;OnValidate=BEGIN
                                                                IF "No aplicar en AxB" <> xRec."No aplicar en AxB" THEN
                                                                  cPar.intro_historico_precios(Delegacion, "N§ Contrato", rHis.Tipo::"Hotel Compra", "Codigo Precio",
                                                                                               "Orden Precio", FIELDCAPTION("No aplicar en AxB"),
                                                                                               FORMAT("No aplicar en AxB"), FORMAT(xRec."No aplicar en AxB"));
                                                              END;

                                                   CaptionML=[ENU=Do not apply on AxB;
                                                              ESP=No aplicar en AxB] }
    { 119 ;   ;Validacion HP especial;Boolean     ;OnValidate=BEGIN
                                                                cPar.intro_historico_precios(Delegacion, "N§ Contrato", rHis.Tipo::"Hotel Compra", "Codigo Precio", "Orden Precio",
                                                                                             FIELDCAPTION("Validacion HP especial"), FORMAT("Validacion HP especial"),
                                                                                             FORMAT(xRec."Validacion HP especial"));
                                                              END;

                                                   CaptionML=[ENU=Special HP validation;
                                                              ESP=Validacion HP especial];
                                                   Description=Marcar los extras que se validar a traves de Hotel Payment, separadamente del bono normal }
    { 120 ;   ;Hotel Factura       ;Code20        ;TableRelation=Hotel.Hotel;
                                                   OnValidate=BEGIN
                                                                cPar.intro_historico_precios(Delegacion, "N§ Contrato", rHis.Tipo::"Hotel Compra", "Codigo Precio", "Orden Precio",
                                                                                             FIELDCAPTION("Hotel Factura"), "Hotel Factura", xRec."Hotel Factura");
                                                              END;

                                                   CaptionML=[ENU=Invoice Hotel;
                                                              ESP=Hotel Factura];
                                                   Description=Hotel.Hotel, Utilizar este hotel cuando queremos que el coste se refleje en un hotel distinto del contrato }
    { 121 ;   ;Noches gratis       ;Integer       ;OnValidate=BEGIN
                                                                IF "Noches gratis" <> 0 THEN BEGIN
                                                                  VALIDATE(Importe            , 0);
                                                                  VALIDATE(Porcentaje         , FALSE);
                                                                  VALIDATE("Acumular al total", FALSE);
                                                                END;

                                                                cPar.intro_historico_precios(Delegacion, "N§ Contrato", rHis.Tipo::"Hotel Compra", "Codigo Precio", "Orden Precio",
                                                                                             FIELDCAPTION("Noches gratis"), FORMAT("Noches gratis"),
                                                                                             FORMAT(xRec."Noches gratis") );
                                                              END;

                                                   CaptionML=[ENU=Nights for free;
                                                              ESP=Noches gratis] }
    { 122 ;   ;Aplica noches gratis al;Option     ;OnValidate=BEGIN
                                                                cPar.intro_historico_precios(Delegacion, "N§ Contrato", rHis.Tipo::"Hotel Compra", "Codigo Precio", "Orden Precio",
                                                                                             FIELDCAPTION("Aplica noches gratis al"), FORMAT("Aplica noches gratis al"),
                                                                                             FORMAT(xRec."Aplica noches gratis al") );
                                                              END;

                                                   CaptionML=[ENU=Apply nights for free to;
                                                              ESP=Aplica noches gratis al];
                                                   OptionCaptionML=[ENU=End of stay,Beginning of stay;
                                                                    ESP=Final estancia,Principio estancia];
                                                   OptionString=Final estancia,Principio estancia }
    { 123 ;   ;Hasta numero estancias;Integer     ;OnValidate=BEGIN
                                                                IF "Hasta numero estancias" <> 0 THEN
                                                                  IF "A partir de estancias" > "Hasta numero estancias" THEN
                                                                    ERROR(Text036);

                                                                IF "Hasta numero estancias" <> xRec."Hasta numero estancias" THEN
                                                                  cPar.intro_historico_precios(Delegacion, "N§ Contrato", rHis.Tipo::"Hotel Compra", "Codigo Precio", "Orden Precio",
                                                                                               FIELDCAPTION("Hasta numero estancias"), FORMAT("Hasta numero estancias"),
                                                                                               FORMAT(xRec."Hasta numero estancias") );
                                                              END;

                                                   CaptionML=[ENU=Since stays number;
                                                              ESP=Hasta numero estancias] }
    { 124 ;   ;Aplica sobre primera estancia;Boolean;
                                                   OnValidate=BEGIN
                                                                cPar.intro_historico_precios(Delegacion, "N§ Contrato", rHis.Tipo::"Hotel Compra", "Codigo Precio", "Orden Precio",
                                                                                             FIELDCAPTION("Aplica sobre primera estancia"), FORMAT("Aplica sobre primera estancia"),
                                                                                             FORMAT(xRec."Aplica sobre primera estancia"));
                                                              END;

                                                   CaptionML=[ENU=Apply on first stay;
                                                              ESP=Aplica sobre primera estancia];
                                                   Description=Solo para Extras, solo se aplica sobre la primera estancia de la reserva. }
    { 140 ;   ;Subtipo Oferta      ;Option        ;CaptionML=[ENU=Offer Subtype;
                                                              ESP=Subtipo Oferta];
                                                   OptionCaptionML=[ENU=",EBB,SPO,Arrival,Free Night,DA=DZ";
                                                                    ESP=",EBB,SPO,Llegada,Free Night,DA=DZ"];
                                                   OptionString=,EBB,SPO,Llegada,Free Night,DA=DZ;
                                                   BlankZero=Yes;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Delegacion,N§ Contrato,Codigo Precio,Orden Precio;
                                                   Clustered=Yes }
    {    ;Delegacion,N§ Contrato,Codigo Precio,Codigo,Fecha desde,Fecha hasta,Edad desde,Edad hasta;
                                                   KeyGroups=RENUMERING }
    {    ;Delegacion,N§ Contrato,Codigo Precio,Fecha desde,Fecha hasta;
                                                   KeyGroups=RENUMERING }
    { No ;N§ Contrato                              }
    { No ;Codigo Precio,N§ Contrato                }
    {    ;Replicado                               ;KeyGroups=RENUMERING }
    {    ;Delegacion,N§ Contrato,Codigo Precio,N§ Persona;
                                                   KeyGroups=RENUMERING }
    {    ;Delegacion,N§ Contrato,Codigo Precio,Activo;
                                                   KeyGroups=RENUMERING }
    {    ;Delegacion,N§ Contrato,Orden Precio      }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1103355017 : TextConst 'ENU=Agency parameters does not exist;ESP=No existe el fichero de Parametros de la Agencia.';
      Text001@1103355018 : TextConst 'ENU=Only purchase prices can be entered\;ESP=Solo se pueden dar de alta precios de compra\';
      Text002@1103355019 : TextConst 'ENU=in the local offices;ESP=en las delegaciones.';
      Text003@1103355020 : TextConst 'ENU=Only purchase prices can be modified\;ESP=Solo se pueden modificar precios de compra\';
      Text004@1103355021 : TextConst 'ENU=Only purchase prices can be cancelled\;ESP=Solo se pueden dar de baja precios de compra\';
      Text006@1103355023 : TextConst 'ENU=FUN-ACT-COC;ESP=FUN-ACT-COC';
      Text008@1103355025 : TextConst 'ENU=Deleted;ESP=Borrado';
      Text009@1103355026 : TextConst 'ENU=Deleted register;ESP=Borrado registro';
      Text010@1103355027 : TextConst 'ENU=<Number>;ESP=<Number>';
      Text011@1103355028 : TextConst 'ENU=Only purchase prices can be renamed\;ESP=Solo se pueden renombrar precios de compra\';
      Text012@1103355029 : TextConst 'ENU=Board %1 does not exist;ESP=No existe el regimen %1.';
      Text013@1103355030 : TextConst 'ENU=Room code %1 does not exist;ESP=No existe el codigo de habitacion %1';
      Text014@1103355031 : TextConst 'ENU=Incorrect person type;ESP=Tipo de persona incorrecto.';
      Text015@1103355032 : TextConst 'ENU=%1 extras code does not exist;ESP=No existe el codigo de extras %1.';
      Text016@1103355033 : TextConst 'ENU=Date to must be higher than date from.;ESP=La fecha hasta debe ser posterior a la fecha desde.';
      Text017@1103355034 : TextConst 'ENU=Date from is out of the range of the contract;ESP=La fecha desde esta fuera de los rangos del contrato.';
      Text018@1103355035 : TextConst 'ENU=Date to is out of the range of the contract;ESP=La fecha hasta esta fuera de los rangos del contrato.';
      Text019@1103355036 : TextConst 'ENU=Room code %1 does not exist;ESP=No existe el codigo de Habitacion %1.';
      Text020@1103355037 : TextConst 'ENU=Unable to indicate an age lower than 0 years;ESP=No puede indicar una edad menor de 0 a¤os.';
      Text021@1103355038 : TextConst 'ENU=Unable to indicate an age higher than 120 years;ESP=No puede indicar una edad mayor de 120 a¤os.';
      Text022@1103355039 : TextConst 'ENU=Age to must be after age from;ESP=La edad hasta debe ser posterior a la edad desde.';
      Text023@1103355040 : TextConst 'ENU=Unable to indicate "Stays No." and "From" the same time;ESP=No se puede indicar "N§ estancias" y "A partir de" al mismo tiempo.';
      Text024@1103355041 : TextConst 'ENU=The 2nd date from must be after than the 2nd date to;ESP=La 2¦ fecha hasta debe ser posterior a la 2¦ fecha desde.';
      Text025@1103355042 : TextConst 'ENU=the 2nd date from is out of the ranges of the contract.;ESP=La 2¦ fecha desde esta fuera de los rangos del contrato.';
      Text026@1103355043 : TextConst 'ENU=the 2nd date to is out of the ranges of the contract.;ESP=La 2¦ fecha hasta esta fuera de los rangos del contrato.';
      Text027@1103355044 : TextConst 'ENU=This special hotel code does not exist for the touroperator of the contract;ESP=No existe ese codigo de hotel especial para el touroperador del contrato.';
      Text028@1103355045 : TextConst 'ENU=Must be Stay Date or check-in date;ESP=Tiene que ser Fecha Estancia o Fecha Entrada';
      Text029@1103355046 : TextConst 'ENU=Unique application;ESP=Aplicacion unica';
      Text030@1103355047 : TextConst 'ENU=Daily application;ESP=Aplicacion diaria';
      Text031@1103355048 : TextConst 'ENU=Application every %1 days;ESP=Aplicacion cada %1 dias';
      Text032@1103355049 : TextConst 'ENU=Application every %1 weeks;ESP=Aplicacion cada %1 semanas';
      rParPer@1103355002 : Record 7009701;
      rPreCom@1103355003 : Record 7009738;
      rConHab@1103355004 : Record 7009731;
      rParAge@1103355005 : Record 7009700;
      rConC@1103355006 : Record 7009723;
      rReg@1103355007 : Record 7009712;
      rHab@1103355008 : Record 7009731;
      rCodExt@1103355009 : Record 7009760;
      rHis@1103355010 : Record 7009765;
      rTipoEle@1103355011 : Record 7009715;
      rConv@1103355012 : Record 7009725;
      cPar@1103355013 : Codeunit 7009700;
      cCon@1103355014 : Codeunit 7009701;
      cFunSeg@1100253000 : Codeunit 7009751;
      fTabConvHotel@1103355016 : Form 7009733;
      Text033@1103355050 : TextConst 'ENU=You are entering an offer of free nights, unable to indicate the percentage;ESP=Esta introduciendo una oferta de noches gratis, no se puede indicar porcentaje.';
      Text034@1103355051 : TextConst 'ENU=You are entering an offer of free nights, unable to indicate that it accumulates the total;ESP=Esta introduciendo una oferta de noches gratis, no se puede indicar que acumula al total.';
      Text035@1103355052 : TextConst 'ENU=You are entering an offer of free nights, unable to indicate the amount;ESP=Esta introduciendo una oferta de noches gratis, no se puede indicar Importe.';
      Text036@1103355053 : TextConst 'ENU=The stays range is not correct.;ESP=El rango de estancias es incorrecto.';
      Text037@1103355054 : TextConst 'ENU=Reviewing affected reservations @1@@@@@@@@@@@@@;ESP=Revisando reservas afectadas @1@@@@@@@@@@@@@';

    PROCEDURE activar_precio@1();
    BEGIN
      CASE "Codigo Precio" OF
        "Codigo Precio"::Habitacion:
        BEGIN
          Activo := cCon.ActivarPrecioHabitacionCompra(Rec);
        END;
        "Codigo Precio"::Regimen:
        BEGIN
          Activo := cCon.ActivarPrecioRegimenCompra(Rec);
        END;
        "Codigo Precio"::Suplementos:
        BEGIN
          Activo := cCon.activar_suplemento_compra(Rec);
        END;
        "Codigo Precio"::Extras:
        BEGIN
          Activo := cCon.activar_suplemento_compra(Rec);
        END;
        "Codigo Precio"::Ofertas: BEGIN
          Activo := cCon.activar_oferta_precio_compra(Rec);
        END;
      END;
    END;

    PROCEDURE texto_frecuencia@2() : Text[30];
    BEGIN
      CASE Frecuencia OF
        0: EXIT(Text029);
        1: EXIT(Text030);
        2,3,4,5,8,9,10,11,12,13,15,16,17,18,19,20,
        22,23,24,25,26,27,28,29: EXIT(STRSUBSTNO(Text031, Frecuencia));
        7,14,21: EXIT(STRSUBSTNO(Text032, Frecuencia/7));
      END;
    END;

    PROCEDURE RevisarReservasAfectadas@1103355000();
    BEGIN
      // RevisarReservasAfectadas

      // Cuando se modifica un precio queremos que marquen las reservas afectadas para volver a cerrar llegadas

      CASE "Codigo Precio" OF
        "Codigo Precio"::Habitacion: CheckCambioPrecioHabitacion;

        "Codigo Precio"::Regimen: CheckCambioPrecioRegimen;

        "Codigo Precio"::Suplementos: CheckCambioPrecioSupl_Ofe;

        "Codigo Precio"::Extras: CheckCambioPrecioSupl_Ofe;

        "Codigo Precio"::Ofertas: CheckCambioPrecioSupl_Ofe;

        "Codigo Precio"::AxB: CheckCambioPrecioSupl_Ofe;
      END;
    END;

    PROCEDURE CheckCambioPrecioHabitacion@1103355001();
    VAR
      lrRsv@1103355000 : Record 7009743;
      lrCon@1103355001 : Record 7009723;
      lwVentana@1103355002 : Dialog;
      lwActual@1103355003 : Integer;
      lwTotal@1103355004 : Integer;
    BEGIN
      // CheckCambioPrecioHabitacion

      lrCon.GET(Delegacion, "N§ Contrato");

      lrRsv.RESET;
      lrRsv.SETCURRENTKEY(TourOperador,
                          "Confirmacion hotel",
                          Responsable);

      lrRsv.SETRANGE (TourOperador   , lrCon.TourOperador);
      lrRsv.SETRANGE (Responsable    , TRUE);
      lrRsv.SETFILTER("Fecha entrada", '>=%1&<%2', "Fecha desde", "Fecha hasta");
      IF lrRsv.FINDSET(TRUE) THEN BEGIN
        lwVentana.OPEN(Text037);
        lwActual := 0;
        lwTotal  := lrRsv.COUNT;
        REPEAT
          lwActual += 1;
          lwVentana.UPDATE(1, ROUND( lwActual / lwTotal * 10000, 1));

          // Comprobamos que se cumplan el resto de condiciones, no estan puestas como filtros para no afectar al
          // rendimiento ya que no existe ninguna clave optima

          IF (lrRsv."Hotel origen precios" = lrCon.Hotel) AND
             (lrRsv.Habitacion = Codigo) AND
             (lrRsv."Fecha salida" < "Fecha hasta") AND
             (NOT lrRsv."Pendiente calculo") THEN BEGIN
            lrRsv."Pendiente calculo" := TRUE;
            lrRsv.MODIFY;
          END;
        UNTIL lrRsv.NEXT = 0;
      END;
    END;

    PROCEDURE CheckCambioPrecioRegimen@1103355002();
    VAR
      lrRsv@1103355000 : Record 7009743;
      lrCon@1103355001 : Record 7009723;
      lwVentana@1103355002 : Dialog;
      lwActual@1103355003 : Integer;
      lwTotal@1103355004 : Integer;
    BEGIN
      // CheckCambioPrecioRegimen

      lrCon.GET(Delegacion, "N§ Contrato");

      lrRsv.RESET;
      lrRsv.SETCURRENTKEY(TourOperador,
                          "Confirmacion hotel",
                          Responsable);

      lrRsv.SETRANGE (TourOperador   , lrCon.TourOperador);
      lrRsv.SETRANGE (Responsable    , TRUE);
      lrRsv.SETFILTER("Fecha entrada", '>=%1&<%2', "Fecha desde", "Fecha hasta");
      IF lrRsv.FINDSET(TRUE) THEN BEGIN
        lwVentana.OPEN(Text037);
        lwActual := 0;
        lwTotal  := lrRsv.COUNT;
        REPEAT
          lwActual += 1;
          lwVentana.UPDATE(1, ROUND( lwActual / lwTotal * 10000, 1));

          // Comprobamos que se cumplan el resto de condiciones, no estan puestas como filtros para no afectar al
          // rendimiento ya que no existe ninguna clave optima

          IF (lrRsv."Hotel origen precios" = lrCon.Hotel) AND
             (lrRsv.Regimen = Codigo) AND
             (lrRsv."Fecha salida" < "Fecha hasta") AND
             (NOT lrRsv."Pendiente calculo") THEN BEGIN
            lrRsv."Pendiente calculo" := TRUE;
            lrRsv.MODIFY;
          END;
        UNTIL lrRsv.NEXT = 0;
      END;
    END;

    PROCEDURE CheckCambioPrecioSupl_Ofe@1103355004();
    VAR
      lrRsv@1103355000 : Record 7009743;
      lrCon@1103355001 : Record 7009723;
      lwVentana@1103355002 : Dialog;
      lwActual@1103355003 : Integer;
      lwTotal@1103355004 : Integer;
      lwFechaDesde@1103355005 : Date;
      lwFechaHasta@1103355006 : Date;
    BEGIN
      // CheckCambioPrecioSupl/Ofe

      IF (NOT "Aplicacion fija") AND ("Codigo Precio" = "Codigo Precio"::Extras) THEN
        EXIT;

      lrCon.GET(Delegacion, "N§ Contrato");

      lrRsv.RESET;
      lrRsv.SETCURRENTKEY(TourOperador,
                          "Confirmacion hotel",
                          Responsable);

      lrRsv.SETRANGE (TourOperador   , lrCon.TourOperador);
      lrRsv.SETRANGE (Responsable    , TRUE);

      CASE "Tipo Fechas" OF

        "Tipo Fechas"::"Fecha venta":
        BEGIN
          lwFechaDesde := CALCDATE('<-6M>', TODAY);
          lwFechaHasta := CALCDATE('<+1M>', TODAY);
          lrRsv.SETFILTER("Fecha entrada", '>=%1&<%2', lwFechaDesde, lwFechaHasta);
        END;

        "Tipo Fechas"::"Fecha entrada":
          lrRsv.SETFILTER("Fecha entrada", '>=%1&<%2', "Fecha desde", "Fecha hasta");

        "Tipo Fechas"::"Fecha estancia":
          lrRsv.SETFILTER("Fecha entrada", '>=%1&<%2', "Fecha desde", "Fecha hasta");

        "Tipo Fechas"::"Fecha venta+estancia":
        BEGIN
          lwFechaDesde := CALCDATE('<-6M>', TODAY);
          lwFechaHasta := CALCDATE('<+1M>', TODAY);
          lrRsv.SETFILTER("Fecha entrada", '>=%1&<%2', lwFechaDesde, lwFechaHasta);
        END;

        "Tipo Fechas"::"Fecha venta+entrada":
        BEGIN
          lwFechaDesde := CALCDATE('<-6M>', TODAY);
          lwFechaHasta := CALCDATE('<+1M>', TODAY);
          lrRsv.SETFILTER("Fecha entrada", '>=%1&<%2', lwFechaDesde, lwFechaHasta);
        END;

        "Tipo Fechas"::"Fecha salida":
        BEGIN
          lwFechaDesde := CALCDATE('<-6M>', TODAY);
          lwFechaHasta := CALCDATE('<+1M>', TODAY);
          lrRsv.SETFILTER("Fecha entrada", '>=%1&<%2', lwFechaDesde, lwFechaHasta);
        END;

        "Tipo Fechas"::"Fecha venta+salida":
        BEGIN
          lwFechaDesde := CALCDATE('<-6M>', TODAY);
          lwFechaHasta := CALCDATE('<+1M>', TODAY);
          lrRsv.SETFILTER("Fecha entrada", '>=%1&<%2', lwFechaDesde, lwFechaHasta);
        END;

        "Tipo Fechas"::"Fecha entrada+salida":
          lrRsv.SETFILTER("Fecha entrada", '>=%1&<%2', "Fecha desde", "Fecha hasta");

      END;
      IF lrRsv.FINDSET(TRUE) THEN BEGIN
        lwVentana.OPEN(Text037);
        lwActual := 0;
        lwTotal  := lrRsv.COUNT;
        REPEAT
          lwActual += 1;
          lwVentana.UPDATE(1, ROUND( lwActual / lwTotal * 10000, 1));

          // Comprobamos que se cumplan el resto de condiciones, no estan puestas como filtros para no afectar al
          // rendimiento ya que no existe ninguna clave optima

          IF (lrRsv."Hotel origen precios" = lrCon.Hotel) AND
             (NOT lrRsv."Pendiente calculo") THEN BEGIN

            IF CompruebaAplicacionPrecio(lrRsv) THEN BEGIN
              lrRsv."Pendiente calculo" := TRUE;
              lrRsv.MODIFY;
            END;
          END;
        UNTIL lrRsv.NEXT = 0;
      END;
    END;

    PROCEDURE CompruebaAplicacionPrecio@1103355003(prRsv@1103355000 : Record 7009743) : Boolean;
    VAR
      lwFecha@1103355001 : Date;
    BEGIN
      // CompruebaAplicacionPrecio

      IF NOT CompruebaFechas(prRsv) THEN
        EXIT(FALSE);

      CASE "Codigo Precio" OF
        "Codigo Precio"::Suplementos: CompruebaTipoPersona(Codigo, "N§ Persona", prRsv);
        "Codigo Precio"::Extras: CompruebaTipoPersona("Tipo Persona", "N§ Persona", prRsv);
        "Codigo Precio"::Ofertas: CompruebaTipoPersona("Tipo Persona", "N§ Persona", prRsv);
      END;

      IF NOT CompruebaTipoHabitacion(prRsv.Habitacion) THEN
        EXIT(FALSE);

      IF NOT CompruebaTipoRegimen(prRsv.Regimen) THEN
        EXIT(FALSE);

      IF NOT CompruebaEdad(prRsv) THEN
        EXIT(FALSE);

      IF NOT CompruebaHotelOfertaEspecial(prRsv."Hotel TO") THEN
        EXIT(FALSE);

      IF NOT CompruebaTouroperadorAplicacio(prRsv."TourOperador Venta") THEN
        EXIT(FALSE);

      IF NOT CompruebaNumeroEstancias(prRsv."Fin estancia" - prRsv."Fecha entrada") THEN
        EXIT(FALSE);

      CASE "Tipo Precio" OF
        "Tipo Fechas"::"Fecha estancia", "Tipo Fechas"::"Fecha venta+estancia":
        BEGIN
          FOR lwFecha := prRsv."Fecha entrada" TO prRsv."Fin estancia" DO BEGIN
            IF NOT CompruebaAplicacionDiaria(lwFecha) THEN
              EXIT(FALSE);
          END;
        END
        ELSE
        BEGIN
          IF NOT CompruebaAplicacionDiaria(prRsv."Fecha entrada") THEN
            EXIT(FALSE);
        END;
      END;

      EXIT(TRUE);
    END;

    PROCEDURE CompruebaFechas@1103355006(prRsv@1103355000 : Record 7009743) : Boolean;
    VAR
      lwOk@1103355001 : Boolean;
    BEGIN
      // CompruebaFechas

      lwOk := TRUE;

      CASE "Tipo Fechas" OF

        "Tipo Fechas"::"Fecha venta":
        BEGIN
          IF ("Fecha desde" > prRsv."Fecha venta") OR (prRsv."Fecha venta" > "Fecha hasta") THEN
            lwOk := FALSE;
        END;

        "Tipo Fechas"::"Fecha entrada":
        BEGIN
          IF ("Fecha desde" > prRsv."Fecha entrada") OR (prRsv."Fecha entrada" > "Fecha hasta") THEN
            lwOk := FALSE;
        END;

        "Tipo Fechas"::"Fecha estancia":
        BEGIN
          IF ("Fecha desde" > prRsv."Fecha salida") OR (prRsv."Fecha entrada" > "Fecha hasta") THEN
            lwOk := FALSE;
        END;

        "Tipo Fechas"::"Fecha venta+estancia":
        BEGIN
          IF ("Fecha desde" > prRsv."Fecha venta") OR (prRsv."Fecha venta" > "Fecha hasta") THEN
            lwOk := FALSE;
          IF ("2¦ Fecha desde" > prRsv."Fecha salida") OR (prRsv."Fecha entrada" > "2¦ Fecha hasta") THEN
            lwOk := FALSE;
        END;

        "Tipo Fechas"::"Fecha venta+entrada":
        BEGIN
          IF ("Fecha desde" > prRsv."Fecha venta") OR (prRsv."Fecha venta" > "Fecha hasta") THEN
            lwOk := FALSE;
          IF ("2¦ Fecha desde" > prRsv."Fecha entrada") OR (prRsv."Fecha entrada" > "2¦ Fecha hasta") THEN
            lwOk := FALSE;
        END;

        "Tipo Fechas"::"Fecha salida":
        BEGIN
          IF ("Fecha desde" > prRsv."Fecha salida") OR (prRsv."Fecha salida" > "Fecha hasta") THEN
            lwOk := FALSE;
        END;

        "Tipo Fechas"::"Fecha venta+salida":
        BEGIN
          IF ("Fecha desde" > prRsv."Fecha venta") OR (prRsv."Fecha venta" > "Fecha hasta") THEN
            lwOk := FALSE;
          IF ("2¦ Fecha desde" > prRsv."Fecha salida") OR (prRsv."Fecha salida" > "2¦ Fecha hasta") THEN
            lwOk := FALSE;
        END;

        "Tipo Fechas"::"Fecha entrada+salida":
        BEGIN
          IF ("Fecha desde" > prRsv."Fecha entrada") OR (prRsv."Fecha entrada" > "Fecha hasta") THEN
            lwOk := FALSE;
          IF ("2¦ Fecha desde" > prRsv."Fecha salida") OR (prRsv."Fecha salida" > "2¦ Fecha hasta") THEN
            lwOk := FALSE;
        END;

      END;

      EXIT(lwOk);
    END;

    PROCEDURE CompruebaTipoPersona@1103355005(pwTipoPersona@1103355000 : Code[10];pwNumPersona@1103355003 : Integer;prRsv@1103355002 : Record 7009743) : Boolean;
    VAR
      lrRsv@1103355001 : Record 7009743;
    BEGIN
      // CompruebaTipoPersona

      lrRsv.RESET;
      lrRsv.SETRANGE(Delegacion      , prRsv.Delegacion);
      lrRsv.SETRANGE("N§ Responsable", prRsv."N§ Reserva");
      lrRsv.SETRANGE("Tipo Persona"  , pwTipoPersona);
      IF pwNumPersona <> 0 THEN
        lrRsv.SETRANGE("N§ persona", pwNumPersona);
      EXIT(lrRsv.FINDFIRST);
    END;

    PROCEDURE CompruebaTipoHabitacion@1103355013(pwTipoHabitacion@1103355000 : Code[10]) : Boolean;
    BEGIN
      // CompruebaTipoHabitacion

      IF ("Tipo Habitacion" <> '') AND
         ("Tipo Habitacion" <> pwTipoHabitacion) THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE CompruebaTipoRegimen@1103355015(pwTipoRegimen@1103355000 : Code[10]) : Boolean;
    BEGIN
      // CompruebaTipoRegimen

      IF ("Tipo Regimen" <> '') AND
         ("Tipo Regimen" <> pwTipoRegimen) THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE CompruebaEdad@1103355009(prRsv@1103355001 : Record 7009743) : Boolean;
    VAR
      lrRsv@1103355000 : Record 7009743;
    BEGIN
      // CompruebaEdad

      IF ("Edad desde" <> 0) AND ("Edad hasta" <> 0) THEN BEGIN
        lrRsv.RESET;
        lrRsv.SETRANGE(Delegacion      , prRsv.Delegacion);
        lrRsv.SETRANGE("N§ Responsable", prRsv."N§ Reserva");
        IF lrRsv.FINDSET THEN BEGIN
          REPEAT
            IF ("Edad desde" > lrRsv.Edad) OR (lrRsv.Edad > "Edad hasta") THEN
              EXIT(FALSE);
          UNTIL lrRsv.NEXT = 0;
        END;
      END;

      EXIT(TRUE);
    END;

    PROCEDURE CompruebaHotelOfertaEspecial@1103355014(pwHotelTTOO@1103355000 : Code[20]) : Boolean;
    BEGIN
      // CompruebaHotelOfertaEspecial

      IF ("Hotel oferta especial" <> '') AND
         ("Hotel oferta especial" <> pwHotelTTOO) THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE CompruebaTouroperadorAplicacio@1103355007(pwTouroperador@1103355000 : Code[10]) : Boolean;
    BEGIN
      // CompruebaTouroperadorAplicacio

      IF ("Touroperador aplicacion" <> '') AND
         ("Touroperador aplicacion" <> pwTouroperador) THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE CompruebaNumeroEstancias@1103355008(pwEstancia@1103355000 : Integer) : Boolean;
    BEGIN
      // CompruebaNumeroEstancias

      IF ("A partir de estancias" <> 0) THEN BEGIN
        IF ("A partir de estancias" > pwEstancia) OR (pwEstancia > "Hasta numero estancias") THEN
          EXIT(FALSE);
      END;

      EXIT(TRUE);
    END;

    PROCEDURE CompruebaAplicacionDiaria@1103355011(pwFecha@1103355000 : Date) : Boolean;
    BEGIN
      // CompruebaAplicacionDiaria

      IF "Aplicacion x dia" THEN BEGIN
        CASE DATE2DWY(pwFecha, 1) OF
          1:
            IF NOT "Aplica Lunes" THEN
              EXIT(FALSE);
          2:
            IF NOT "Aplica Martes" THEN
              EXIT(FALSE);
          3:
            IF NOT "Aplica Miercoles" THEN
              EXIT(FALSE);
          4:
            IF NOT "Aplica Jueves" THEN
              EXIT(FALSE);
          5:
            IF NOT "Aplica Viernes" THEN
              EXIT(FALSE);
          6:
            IF NOT "Aplica Sabado" THEN
              EXIT(FALSE);
          7:
            IF NOT "Aplica Domingo" THEN
              EXIT(FALSE);
        END;
      END;

      EXIT(TRUE);
    END;

    PROCEDURE InsertaLinAction@1103355010();
    VAR
      lwRec@1103355000 : RecordRef;
      lcFunExp@1103355001 : Codeunit 7009911;
    BEGIN
      // InsertaLinAction
      // Inserta una linea para el borrado de la sincronizacion a la empresa Hotel Payment

      lwRec.GETTABLE(Rec);
      lcFunExp.InsertaLinAct(lwRec);
    END;

    BEGIN
    {
      ## AJS 01.06.2009

        .- En la rutina CheckCambioPrecioSupl_Ofe he cambiado al comprobacion por dia de la semana
           para que se haga para cada dia de la estancia si el tipo de fechas es Fecha entancia o
           Fecha venta+estancia.

      ## AJF 29/06/09

        .- (09/00319) cambio c¢digos de hotel de code10 a code20.

      $001 AJS 04062014 La numeraci¢n de los precios no debe tener en cuenta el campo Codigo precio

      $002 AJS 24062014 Elimino las ofertas AxB como un codigo especial de precios
    }
    END.
  }
}
