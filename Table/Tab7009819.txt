OBJECT Table 7009819 Registro variacion cupo
{
  OBJECT-PROPERTIES
  {
    Date=22/07/14;
    Time=13:52:33;
    Modified=Yes;
    Version List=AIC2009;
  }
  PROPERTIES
  {
    OnInsert=VAR
               lrReg@1103355000 : Record 7009819;
             BEGIN
               lrReg.RESET;
               IF lrReg.FINDLAST THEN
                 No := lrReg.No +1
               ELSE
                 No := 1;

               IF (Hotel <> '') AND ("Fecha Desde" <> 0D) AND ("Fecha Hasta" <> 0D)  AND (Cantidad <> 0) AND ("Cod. Habitacion" <> '') THEN
                 CrearAumentosDiarios(Rec);
             END;

    OnModify=BEGIN
               //IF Estado <> Estado::Pendiente THEN
               //  ERROR(Text000,Estado);

               IF (Hotel <> xRec.Hotel) OR ("Fecha Desde" <> xRec."Fecha Desde") OR ("Fecha Hasta" <> xRec."Fecha Hasta") OR
                  (Cantidad <> xRec.Cantidad) OR ("Cod. Habitacion" <> xRec."Cod. Habitacion") THEN BEGIN
                 BorrarAumentosDiarios(xRec);
                 CrearAumentosDiarios(Rec);
               END;
             END;

    OnDelete=BEGIN
               IF Estado <> Estado::Pendiente THEN
                 ERROR(Text001,Estado);

               BorrarAumentosDiarios(Rec);
             END;

    CaptionML=[ENU=Allotment Variation Register;
               ESP=Registro variacion cupo];
    LookupFormID=Form7009831;
    DrillDownFormID=Form7009831;
  }
  FIELDS
  {
    { 1   ;   ;No                  ;Integer       ;CaptionML=[ENU=No;
                                                              ESP=No];
                                                   MinValue=1 }
    { 2   ;   ;Hotel               ;Code20        ;TableRelation=Hotel.Hotel;
                                                   OnValidate=BEGIN
                                                                CompruebaSolapamiento;
                                                                BuscaActual;
                                                              END;

                                                   CaptionML=[ENU=Hotel;
                                                              ESP=Hotel] }
    { 3   ;   ;Fecha Desde         ;Date          ;OnValidate=BEGIN
                                                                CompruebaSolapamiento;
                                                                BuscaActual;
                                                              END;

                                                   CaptionML=[ENU=Date From;
                                                              ESP=Fecha desde] }
    { 4   ;   ;Fecha Hasta         ;Date          ;OnValidate=BEGIN
                                                                CompruebaSolapamiento;
                                                                BuscaActual;
                                                              END;

                                                   CaptionML=[ENU=Date To;
                                                              ESP=Fecha hasta] }
    { 5   ;   ;Cantidad            ;Integer       ;CaptionML=[ENU=Amount;
                                                              ESP=Cantidad] }
    { 6   ;   ;Cod. Habitacion     ;Code10        ;TableRelation=IF (Contrato Compra=FILTER(<>'')) "Conversion Habitacion"."Habitacion cupo" WHERE (N§ Contrato=FIELD(Contrato Compra),
                                                                                                                                                    Tipo contrato=CONST(Compra));
                                                   OnValidate=BEGIN
                                                                CompruebaSolapamiento;

                                                                BuscaActual;

                                                                "Habitacion basica" := COPYSTR("Cod. Habitacion", 1, 2);
                                                              END;

                                                   CaptionML=[ENU=Room code;
                                                              ESP=Cod. Habitacion] }
    { 7   ;   ;Cupo Actual         ;Integer       ;CaptionML=[ENU=Current allotment;
                                                              ESP=Cupo Actual] }
    { 8   ;   ;Estado              ;Option        ;CaptionML=[ENU=Status;
                                                              ESP=Estado];
                                                   OptionCaptionML=[ENU=Remaining,Confirmed,Denied;
                                                                    ESP=Pendiente,Confirmado,Denegado];
                                                   OptionString=Pendiente,Confirmado,Denegado }
    { 9   ;   ;Usuario Confirmacion;Code20        ;CaptionML=[ENU=Confirmation user;
                                                              ESP=Usuario confirmacion] }
    { 10  ;   ;Fecha Confirmacion  ;Date          ;CaptionML=[ENU=Confirmation date;
                                                              ESP=Fecha Confirmacion] }
    { 11  ;   ;Hora Confirmacion   ;Time          ;CaptionML=[ENU=Confirmation time;
                                                              ESP=Hora Confirmacion] }
    { 12  ;   ;Contrato Compra     ;Code10        ;TableRelation="Contrato compra hotel"."N§ Contrato compra";
                                                   CaptionML=[ENU=Purchate contract;
                                                              ESP=Contrato compra] }
    { 13  ;   ;Touroperador        ;Code10        ;TableRelation=TourOperador.TourOperador;
                                                   OnValidate=BEGIN
                                                                //$001-
                                                                rTTOO.RESET;
                                                                rTTOO.GET(Touroperador);
                                                                rTTOO.TESTFIELD(Bloqueado, FALSE);
                                                                //$001+

                                                                CompruebaSolapamiento;

                                                                BuscaActual;
                                                              END;

                                                   CaptionML=[ENU=TourOperator;
                                                              ESP=TourOperador] }
    { 15  ;   ;Habitacion basica   ;Code10        ;CaptionML=[ENU=Basic Room;
                                                              ESP=Habitacion basica] }
    { 17  ;   ;Comentarios         ;Text80        ;CaptionML=[ENU=Comments;
                                                              ESP=Comentarios] }
    { 19  ;   ;Hotel TO            ;Code20        ;TableRelation="Conversion hotel"."Hotel TO" WHERE (TourOperador=FIELD(Touroperador),
                                                                                                      Hotel estancia=FIELD(Hotel));
                                                   CaptionML=[ENU=TO Hotel;
                                                              ESP=Hotel TO] }
    { 21  ;   ;Habitacion TO       ;Code10        ;CaptionML=[ENU=TO room;
                                                              ESP=Habitacion TO] }
    { 23  ;   ;Num envios          ;Integer       ;CaptionML=[ENU=Sendings No.;
                                                              ESP=Num envios];
                                                   Editable=No }
    { 24  ;   ;Primer envio        ;DateTime      ;CaptionML=[ENU=First sending;
                                                              ESP=Primer envio];
                                                   Editable=No }
    { 25  ;   ;Usuario primer envio;Code20        ;CaptionML=[ENU=User first sending;
                                                              ESP=Usuario primer envio];
                                                   Editable=No }
    { 26  ;   ;Ultimo envio        ;DateTime      ;CaptionML=[ENU=Last sending;
                                                              ESP=Ultimo envio];
                                                   Editable=No }
    { 27  ;   ;Usuario ultimo envio;Code20        ;CaptionML=[ENU=User last sending;
                                                              ESP=Usuario ultimo envio];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;No                                      ;Clustered=Yes }
    {    ;Estado,Hotel,Cod. Habitacion,Fecha Desde,Fecha Hasta;
                                                   KeyGroups=RENUMERING }
    {    ;Hotel,Estado,Fecha Desde,Fecha Hasta,Cod. Habitacion;
                                                   KeyGroups=RENUMERING }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1103355004 : TextConst 'ENU=Unable to modify this register due to %1 status;ESP=No puede modificarse este registro ya que esta en estado %1';
      Text001@1103355005 : TextConst 'ENU=Unable to delete this register due to %1 status;ESP=No puede eliminar este registro ya que esta en estado %1';
      Text002@1103355006 : TextConst 'ENU=Must indicate a date to higher than date from;ESP=Debe indicar una fecha hasta posterior a la fecha desde.';
      Text003@1103355007 : TextConst 'ENU=This line overlaps with other one of the same hotel and type of room;ESP=Esta linea se esta solapando con otra del mismo hotel y tipo de habitaci¢n';
      Text004@1103355008 : TextConst 'ENU=The register is already marked as %1;ESP=El registro ya est  marcado como %1';
      Text005@1103355009 : TextConst 'ENU=Any contract with these features has been found;ESP=No se ha encontrado ning£n contrato con dichas caracteristicas';
      rPar@1103355000 : Record 7009700;
      rConv@1103355001 : Record 7009731;
      rAumentoDia@1103355002 : Record 7009821;
      rTTOO@1000000000 : Record 7009717;
      wDia@1103355003 : Date;

    PROCEDURE CompruebaSolapamiento@1();
    VAR
      lrReg@1103355000 : Record 7009819;
    BEGIN
      // CompruebaSolapamiento
      // Comprueba que no haya ning£n otro registro pendiente que solape en fechas

      IF Estado <> Estado::Pendiente THEN
        EXIT;

      IF ("Fecha Desde" = 0D) OR ("Fecha Hasta" = 0D) THEN
        EXIT;

      IF "Fecha Desde" > "Fecha Hasta" THEN
        ERROR(Text002);

      IF (Hotel = '') OR ("Cod. Habitacion" = '') THEN
        EXIT;

      {*
      lrReg.RESET;
      lrReg.SETCURRENTKEY(Estado,Hotel,"Cod. Habitacion","Fecha Desde","Fecha Hasta");
      lrReg.SETRANGE(Estado , Estado::Pendiente);
      lrReg.SETRANGE(Hotel             , Hotel);
      lrReg.SETRANGE("Cod. Habitacion" ,"Cod. Habitacion");
      lrReg.SETFILTER("Fecha Desde", '<=%1',"Fecha Hasta");
      lrReg.SETFILTER("Fecha Hasta", '>=%1',"Fecha Desde");
      lrReg.SETFILTER(No,'<>%1',No);
      IF lrReg.FIND('-') THEN
        ERROR(Text003);
      *}
    END;

    PROCEDURE Marcar@2(pwModo@1103355000 : 'Denegado,Aceptado');
    BEGIN
      // Marcar
      //

      IF Estado <> Estado::Pendiente THEN
        ERROR(Text004,Estado);

      CASE pwModo OF
        pwModo::Aceptado : BEGIN
          Estado:= Estado::Confirmado;
          InsertaCupos;
        END;
        pwModo::Denegado : BEGIN
          Cantidad := 0;
          Estado:= Estado::Denegado;
        END;
        ELSE EXIT;
      END;

      "Usuario Confirmacion" := USERID;
      "Fecha Confirmacion"   := TODAY;
      "Hora Confirmacion"    := TIME;
      MODIFY;
    END;

    PROCEDURE InsertaCupos@7();
    VAR
      lrContH@1103355000 : Record 7009723;
      lrCupos@1103355001 : Record 7009739;
      lrCupos2@1103355002 : Record 7009739;
      lwDia@1103355003 : Date;
      lwFecha@1103355004 : ARRAY [2] OF Date;
    BEGIN
      // InsertaCupos
      // Esta funci¢n es la encargada de traspasar la informaci¢n de la aceptaci¢n de cupos al contrato de compra pertinente

      BuscaContrato(lrContH,TRUE);
      "Contrato Compra" := lrContH."N§ Contrato compra";

      lrCupos.RESET;
      lrCupos.SETRANGE(Delegacion           , lrContH.Delegacion);
      lrCupos.SETRANGE("N§ Contrato compra" , lrContH."N§ Contrato compra");
      lrCupos.SETRANGE("Habitacion cupo"    , "Cod. Habitacion");

      FOR lwDia := "Fecha Desde" TO "Fecha Hasta" DO BEGIN
        lrCupos.SETFILTER("Fecha desde", '<=%1', lwDia);
        lrCupos.SETFILTER("Fecha hasta", '>=%1', lwDia);

        IF lrCupos.FIND('-') THEN BEGIN
          // En todo caso
          lrCupos.DELETE(TRUE);

          IF lrCupos."Fecha desde" < lwDia THEN BEGIN
            // Guardamos la anterior en otro registro
            lrCupos2 := lrCupos;
            lrCupos2."Fecha hasta" := lwDia -1;
            lrCupos2.INSERT(TRUE);
          END;

          lrCupos2 := lrCupos;
          lrCupos2."Fecha desde" := lwDia;
          IF lrCupos2."Fecha hasta" > "Fecha Hasta" THEN
            lrCupos2."Fecha hasta":= "Fecha Hasta";
          lrCupos2.Cupo += Cantidad;
          lrCupos2.INSERT(TRUE);

          lwDia := lrCupos2."Fecha hasta";

          // Si el cupo no cubre todo el periodo
          IF lrCupos."Fecha hasta" > "Fecha Hasta" THEN BEGIN
            lrCupos2 := lrCupos;
            lrCupos2."Fecha desde" := "Fecha Hasta" +1;
            lrCupos2.INSERT(TRUE);
          END;

        END
        ELSE BEGIN
          lrCupos2.RESET;
          lrCupos2.INIT;
          lrCupos2."Fecha desde" := lwDia;

          lrCupos.SETFILTER("Fecha desde",'>=%1',lwDia);
          IF lrCupos.FIND('-') THEN BEGIN
            lrCupos2."Fecha hasta":= lrCupos."Fecha desde" -1;
          END
          ELSE BEGIN
            lrCupos2."Fecha hasta":= "Fecha Hasta";
          END;
          lwDia := lrCupos2."Fecha hasta";

          lrCupos2.VALIDATE(Delegacion            , rPar.Delegacion);
          lrCupos2.VALIDATE("N§ Contrato compra"  , "Contrato Compra");
          lrCupos2.VALIDATE("Habitacion cupo"     , "Cod. Habitacion");
          lrCupos2.VALIDATE(Cupo                  , Cantidad);
          lrCupos2.VALIDATE(Activo                , TRUE);
          lrCupos2.VALIDATE(Replicado             , TRUE);
          lrCupos2.INSERT(TRUE);
        END;
      END;
    END;

    PROCEDURE BuscaContrato@10(VAR prContH@1103355000 : Record 7009723;pwMarca@1103355001 : Boolean);
    BEGIN
      // BuscaContrato
      // pwMarca indica si se ha utilizado para marcar

      IF pwMarca THEN BEGIN
        TESTFIELD(Hotel);
        TESTFIELD("Fecha Desde");
        TESTFIELD("Fecha Hasta");
        TESTFIELD(Cantidad);
        TESTFIELD("Cod. Habitacion");
        TESTFIELD(Touroperador);
      END;

      rPar.GET;

      prContH.RESET;
      prContH.SETCURRENTKEY(Delegacion,TourOperador,Hotel,"Fecha inicio contrato","Fecha final contrato");
      prContH.SETRANGE(Delegacion   , rPar.Delegacion);
      prContH.SETRANGE(Hotel        , Hotel);
      prContH.SETRANGE(TourOperador , Touroperador);
      prContH.SETFILTER("Fecha inicio contrato",'<=%1',"Fecha Desde");
      prContH.SETFILTER("Fecha final contrato" ,'>=%1',"Fecha Hasta");
      prContH.SETRANGE(Confirmado              , TRUE);
      IF (NOT prContH.FIND('-')) AND pwMarca THEN
        ERROR(Text005);
    END;

    PROCEDURE BuscaActual@5();
    VAR
      lrContH@1103355000 : Record 7009723;
      lrCupos@1103355001 : Record 7009739;
    BEGIN
      // BuscaActual
      // Rellena el campo "Cupo Actual"
      // Si esta dividido en dos o mas lineas de cupo SOLO INSERTARA EL PRIMERO

      CLEAR("Cupo Actual");
      CLEAR("Contrato Compra");

      IF (Hotel='') OR ("Fecha Desde"=0D) OR ("Fecha Hasta"=0D) OR (Touroperador='') THEN
        EXIT;

      BuscaContrato(lrContH, FALSE);
      "Contrato Compra" := lrContH."N§ Contrato compra";

      IF "Cod. Habitacion"='' THEN
        EXIT;

      rConv.RESET;
      rConv.SETRANGE(Delegacion       , lrContH.Delegacion);
      rConv.SETRANGE("N§ Contrato"    , lrContH."N§ Contrato compra");
      rConv.SETRANGE("Tipo contrato"  , rConv."Tipo contrato"::Compra);
      rConv.SETRANGE("Habitacion cupo", "Cod. Habitacion");
      IF rConv.FIND('-') THEN
        "Habitacion TO" := rConv."Habitacion TO";

      lrCupos.RESET;
      lrCupos.SETRANGE(Delegacion            , lrContH.Delegacion);
      lrCupos.SETRANGE("N§ Contrato compra"  , lrContH."N§ Contrato compra");
      lrCupos.SETRANGE("Habitacion cupo"     , "Cod. Habitacion");
      lrCupos.SETFILTER("Fecha desde" ,'<=%1', "Fecha Desde");
      lrCupos.SETFILTER("Fecha hasta" ,'>=%1', "Fecha Desde");

      // AJS 14.10.2005
      // Vamos a buscar el cupo por touroperador y sino existe buscamos con touroperador en blanco y sino existe
      // buscamos cualquier linea de cupo

      lrCupos.SETRANGE("Touroperador Venta", Touroperador);
      IF NOT lrCupos.FIND('-') THEN BEGIN
        lrCupos.SETRANGE("Touroperador Venta", '');
        IF NOT lrCupos.FIND('-') THEN BEGIN
          lrCupos.SETRANGE("Touroperador Venta");
          IF NOT lrCupos.FIND('-') THEN BEGIN
            "Cupo Actual" := 0;
            EXIT;
          END;
        END;
      END;

      "Cupo Actual" := lrCupos.Cupo;
    END;

    PROCEDURE BorrarAumentosDiarios@3(prAumento@1103355000 : Record 7009819);
    BEGIN
      // BorrarAumentosDiarios
      //
      rAumentoDia.RESET;
      rAumentoDia.SETRANGE("No Aumento", prAumento.No);
      IF rAumentoDia.FIND('-') THEN
        rAumentoDia.DELETEALL;
    END;

    PROCEDURE CrearAumentosDiarios@4(prAumento@1103355000 : Record 7009819);
    VAR
      lrCupos@1103355001 : Record 7009739;
      lrContH@1103355002 : Record 7009723;
    BEGIN
      // CrearAumentosDiarios
      //

      FOR wDia := prAumento."Fecha Desde" TO prAumento."Fecha Hasta" DO BEGIN
        rAumentoDia.INIT;
        rAumentoDia."No Aumento" := prAumento.No;
        rAumentoDia.Dia          := wDia;
        rAumentoDia.Cantidad     := prAumento.Cantidad;

        BuscaContrato(lrContH, FALSE);

        lrCupos.RESET;
        lrCupos.SETRANGE(Delegacion            , lrContH.Delegacion);
        lrCupos.SETRANGE("N§ Contrato compra"  , lrContH."N§ Contrato compra");
        lrCupos.SETRANGE("Habitacion cupo"     , "Cod. Habitacion");
        lrCupos.SETFILTER("Fecha desde" ,'<=%1', wDia);
        lrCupos.SETFILTER("Fecha hasta" ,'>=%1', wDia);
        IF lrCupos.FIND('-') THEN
          rAumentoDia."Cupo actual" := lrCupos.Cupo
        ELSE
          rAumentoDia."Cupo actual" := 0;
        rAumentoDia."Cupo resultante" := rAumentoDia.Cantidad + rAumentoDia."Cupo actual";
        rAumentoDia.INSERT;
      END;
    END;

    BEGIN
    {
      $001 MNC 22072014 CNT-LP-14054 No se pueden usar TTOO bloqueados
    }
    END.
  }
}
