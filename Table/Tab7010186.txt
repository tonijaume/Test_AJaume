OBJECT Table 7010186 Reserva Circuito
{
  OBJECT-PROPERTIES
  {
    Date=28/10/14;
    Time=12:08:11;
    Modified=Yes;
    Version List=AIC2009;
  }
  PROPERTIES
  {
    OnInsert=VAR
               rPreRes@1103355000 : Record 7010204;
               rParPer@1103355001 : Record 7009701;
               rPaxTOcir@1103355002 : Record 7010188;
               rCab@1103355003 : Record 7009741;
               rAco@1103355004 : Record 7009748;
             BEGIN
               rPar.GET;
               rParCir.GET;

               IF TourOperador = '' THEN
                 TourOperador := rPar."TourOperador Compra";
               IF Delegacion = '' THEN
                 Delegacion := rPar.Delegacion;

               rParCir.LOCKTABLE;
               rParCir."Contador reserva" := rParCir."Contador reserva" + 1;
               "N§ Reserva" := rParCir."Contador reserva";
               rParCir.MODIFY;

               ActualizarPrereserva(Rec, 1);

               IF rCir.GET(Delegacion, Circuito, Orden) THEN
                 IF NOT rCir."Pendiente calcular" THEN BEGIN
                   rCir."Pendiente calcular" := TRUE;
                   rCir.MODIFY;
                 END;

               IF rPaxTOcir.GET(Delegacion, Circuito, Orden, "N§ linea") THEN BEGIN
                 TourOperador      := rPaxTOcir.TourOperador;
                 "C¢d. categor¡a"  := rPaxTOcir."Cod. Categoria";
                 "Tipo habitaci¢n" := rPaxTOcir."Tipo Habitacion";
                 "N§ Interno"      := rPaxTOcir."N§ Interno";
               END
               ELSE IF rPreRes.GET("N§ Prereserva") THEN BEGIN
                 TourOperador := rPreRes.TourOperador;
                 "Fecha Entrada" := rPreRes."Fecha entrada";
                 "Fecha Salida"  := rPreRes."Fecha salida";
                 "C¢d. categor¡a" := rPreRes."C¢d. Categor¡a";
                 "Tipo habitaci¢n" := rPreRes."Tipo habitaci¢n";
               END;

               rParPer.GET;

               IF "Tipo Persona" = '' THEN
                 "Tipo Persona" := rParPer."Codigo Adulto";


               IF NOT Gestion_Cabecera THEN
                 IF rCab.GET(Delegacion, "N§ Interno") THEN BEGIN
                   CLEAR(rAco);
                   rAco.Gestion_Cuadrante_Circuito(TRUE);
                   rAco.Delegacion   := Delegacion;
                   rAco."N§ Interno" := "N§ Interno";
                   rAco.INSERT(TRUE);
                   rAco.VALIDATE(Nombre, Nombre);
                   rAco.VALIDATE(Edad  , Edad);
                   rAco.VALIDATE("Tipo Persona", "Tipo Persona");
                   rAco.VALIDATE("Fecha entrada", "Fecha Entrada");
                   rAco.VALIDATE("Fecha salida" , "Fecha Salida");
                   rAco.MODIFY(TRUE);
                   rAco.Gestion_Cuadrante_Circuito(FALSE);
                   "N§ Acompa¤ante" := rAco."N§ Acompa¤ante";
                 END;
             END;

    OnModify=VAR
               rBajas@1103355000 : Record 7009770;
             BEGIN
             END;

    OnDelete=VAR
               rBack@1103355000 : Record 7009857;
               rCab@1103355001 : Record 7009741;
               rAco@1103355002 : Record 7009748;
             BEGIN
               rPar.FINDFIRST;
               IF rPar."Tipo Anulacion reserva" = rPar."Tipo Anulacion reserva"::Backup THEN BEGIN
                 rBack.TRANSFERFIELDS(Rec);
                 IF NOT rBack.INSERT THEN
                   rBack.MODIFY;
               END;

               ActualizarPrereserva(Rec, -1);

               IF rCir.GET(Delegacion, Circuito, Orden) THEN
                 IF NOT rCir."Pendiente calcular" THEN BEGIN
                   rCir."Pendiente calcular" := TRUE;
                   rCir.MODIFY;
                 END;

               IF NOT Gestion_Cabecera THEN
                 IF rAco.GET(Delegacion, "N§ Interno", "N§ Acompa¤ante") THEN
                   rAco.DELETE;
             END;

    CaptionML=[ENU=Roundtrip Booking;
               ESP=Reserva Circuito];
    LookupFormID=Form7010271;
    DrillDownFormID=Form7010271;
  }
  FIELDS
  {
    { 1   ;   ;Delegacion          ;Code10        ;TableRelation=Delegacion.Codigo;
                                                   CaptionML=[ENU=Local Office;
                                                              ESP=Delegacion];
                                                   NotBlank=Yes;
                                                   Description=FK Delegacion }
    { 3   ;   ;N§ Reserva          ;Integer       ;CaptionML=[ENU=Reservation No.;
                                                              ESP=N§ Reserva];
                                                   Description=PK }
    { 5   ;   ;N§ Interno          ;Integer       ;CaptionML=[ENU=Internal No.;
                                                              ESP=N§ Interno];
                                                   Description=FK Cabecera reserva }
    { 6   ;   ;Bono                ;Code10        ;CaptionML=[ENU=Voucher;
                                                              ESP=Bono] }
    { 7   ;   ;Fecha Entrada       ;Date          ;OnValidate=BEGIN
                                                                IF rCir.GET(Delegacion, Circuito, Orden) THEN
                                                                  IF NOT rCir."Pendiente calcular" THEN BEGIN
                                                                    rCir."Pendiente calcular" := TRUE;
                                                                    rCir.MODIFY;
                                                                  END;

                                                                IF NOT Gestion_Cabecera THEN BEGIN
                                                                  rAco.RESET;
                                                                  IF rAco.GET(Delegacion, "N§ Interno", "N§ Acompa¤ante") THEN BEGIN
                                                                    rAco.Gestion_Cuadrante_Circuito(TRUE);
                                                                    rAco.VALIDATE("Fecha entrada", "Fecha Entrada");
                                                                    rAco.MODIFY(TRUE);
                                                                    rAco.Gestion_Cuadrante_Circuito(FALSE);
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Check-in Date;
                                                              ESP=Fecha entrada] }
    { 8   ;   ;Fecha Salida        ;Date          ;OnValidate=BEGIN
                                                                IF rCir.GET(Delegacion, Circuito, Orden) THEN
                                                                  IF NOT rCir."Pendiente calcular" THEN BEGIN
                                                                    rCir."Pendiente calcular" := TRUE;
                                                                    rCir.MODIFY;
                                                                  END;

                                                                IF NOT Gestion_Cabecera THEN BEGIN
                                                                  rAco.RESET;
                                                                  IF rAco.GET(Delegacion, "N§ Interno", "N§ Acompa¤ante") THEN BEGIN
                                                                    rAco.Gestion_Cuadrante_Circuito(TRUE);
                                                                    rAco.VALIDATE("Fecha salida", "Fecha Salida");
                                                                    rAco.MODIFY(TRUE);
                                                                    rAco.Gestion_Cuadrante_Circuito(FALSE);
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Check-out Date;
                                                              ESP=Fecha salida] }
    { 9   ;   ;TourOperador        ;Code10        ;TableRelation=TourOperador.TourOperador;
                                                   OnValidate=BEGIN
                                                                //$001-
                                                                rTTOO.RESET;
                                                                rTTOO.GET(TourOperador);
                                                                rTTOO.TESTFIELD(Bloqueado, FALSE);
                                                                //$001+
                                                              END;

                                                   CaptionML=[ENU=TourOperator;
                                                              ESP=TourOperador];
                                                   NotBlank=Yes;
                                                   Description=FK TourOperador }
    { 11  ;   ;Nombre              ;Text50        ;OnValidate=BEGIN
                                                                IF NOT Gestion_Cabecera THEN
                                                                BEGIN
                                                                  rAco.RESET;
                                                                  IF rAco.GET(Delegacion, "N§ Interno", "N§ Acompa¤ante") THEN
                                                                  BEGIN
                                                                    rAco.Gestion_Cuadrante_Circuito(TRUE);
                                                                    rAco.VALIDATE(Nombre, Nombre);
                                                                    rAco.MODIFY(TRUE);
                                                                    rAco.Gestion_Cuadrante_Circuito(FALSE);
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Name;
                                                              ESP=Nombre] }
    { 13  ;   ;Edad                ;Integer       ;OnValidate=BEGIN
                                                                IF NOT Gestion_Cabecera THEN
                                                                BEGIN
                                                                  rAco.RESET;
                                                                  IF rAco.GET(Delegacion, "N§ Interno", "N§ Acompa¤ante") THEN
                                                                  BEGIN
                                                                    rAco.Gestion_Cuadrante_Circuito(TRUE);
                                                                    rAco.VALIDATE(Edad, Edad);
                                                                    rAco.MODIFY(TRUE);
                                                                    rAco.Gestion_Cuadrante_Circuito(FALSE);
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Age;
                                                              ESP=Edad] }
    { 15  ;   ;Tipo Persona        ;Code10        ;TableRelation="Tipo elemento"."Tipo elemento" WHERE (Humano=CONST(Yes));
                                                   OnValidate=BEGIN
                                                                TESTFIELD("Tipo Persona");

                                                                IF NOT Gestion_Cabecera THEN
                                                                BEGIN
                                                                  rAco.RESET;
                                                                  IF rAco.GET(Delegacion, "N§ Interno", "N§ Acompa¤ante") THEN
                                                                  BEGIN
                                                                    rAco.Gestion_Cuadrante_Circuito(TRUE);
                                                                    rAco.VALIDATE("Tipo Persona", "Tipo Persona");
                                                                    rAco.MODIFY(TRUE);
                                                                    rAco.Gestion_Cuadrante_Circuito(FALSE);
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Person type;
                                                              ESP=Tipo Persona];
                                                   Description=FK Tipo elemento }
    { 17  ;   ;Circuito            ;Code10        ;TableRelation="Maestro circuitos".Circuito;
                                                   CaptionML=[ENU=Roundtrip;
                                                              ESP=Circuito];
                                                   Description=FK Maestro Circuito }
    { 19  ;   ;Orden               ;Integer       ;CaptionML=[ENU=Order;
                                                              ESP=Orden] }
    { 20  ;   ;N§ linea            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              ESP=N§ Linea] }
    { 21  ;   ;N§ Acompa¤ante      ;Integer       ;CaptionML=[ENU=Companion No.;
                                                              ESP=N§ Acompa¤ante] }
    { 23  ;   ;N§ Prereserva       ;Integer       ;OnValidate=BEGIN
                                                                ActualizarPrereserva(xRec, -1);
                                                                ActualizarPrereserva(Rec, 1);
                                                              END;

                                                   CaptionML=[ENU=Pre-booking No.;
                                                              ESP=N§ Prereserva] }
    { 25  ;   ;C¢d. categor¡a      ;Code10        ;OnValidate=VAR
                                                                rPaxTOcir@1103355000 : Record 7010188;
                                                              BEGIN
                                                                TESTFIELD("C¢d. categor¡a");

                                                                IF NOT Gestion_Cabecera THEN
                                                                  IF rPaxTOcir.GET(Delegacion, Circuito, Orden, "N§ linea") THEN
                                                                    IF rPaxTOcir."Cod. Categoria" <> "C¢d. categor¡a" THEN
                                                                      ERROR(Text005, FIELDCAPTION("C¢d. categor¡a"), rPaxTOcir.TABLECAPTION);
                                                              END;

                                                   CaptionML=[ENU=Category code;
                                                              ESP=C¢d. categor¡a] }
    { 27  ;   ;Tipo habitaci¢n     ;Code10        ;OnValidate=VAR
                                                                rPaxTOcir@1103355000 : Record 7010188;
                                                              BEGIN
                                                                TESTFIELD("Tipo habitaci¢n");

                                                                IF NOT Gestion_Cabecera THEN
                                                                  IF rPaxTOcir.GET(Delegacion, Circuito, Orden, "N§ linea") THEN
                                                                    IF rPaxTOcir."Tipo Habitacion" <> "Tipo habitaci¢n" THEN
                                                                      ERROR(Text005, FIELDCAPTION("Tipo habitaci¢n"), rPaxTOcir.TABLECAPTION);
                                                              END;

                                                   CaptionML=[ENU=Room Type;
                                                              ESP=Tipo habitaci¢n] }
    { 29  ;   ;Marca Cuadrante     ;Code10        ;CaptionML=[ENU=Mark Quadrant;
                                                              ESP=Marca Cuadrante] }
  }
  KEYS
  {
    {    ;Delegacion,N§ Reserva                   ;Clustered=Yes }
    {    ;Delegacion,N§ Interno                   ;KeyGroups=RENUMERING }
    {    ;Delegacion,Circuito,Orden,N§ linea      ;KeyGroups=RENUMERING }
    {    ;Delegacion,N§ Prereserva                ;KeyGroups=RENUMERING }
    {    ;TourOperador,Fecha Entrada,C¢d. categor¡a,Tipo habitaci¢n;
                                                   KeyGroups=RENUMERING }
    {    ;Marca Cuadrante                         ;KeyGroups=RENUMERING }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text005@1103355010 : TextConst 'ENU=%1 cannot be changed if it is assigned to %2;ESP=No se puede cambiar %1 si est  asignada a %2.';
      rPar@1103355000 : Record 7009700;
      rParCir@1103355001 : Record 7010185;
      rAco@1103355002 : Record 7009748;
      rCir@1103355003 : Record 7010187;
      rTTOO@1000000000 : Record 7009717;
      Gestion_Cabecera@1103355004 : Boolean;

    PROCEDURE ActualizarPrereserva@1(par_Res@1103355000 : Record 7010186;par_sumar@1103355001 : Integer);
    VAR
      rPreRes@1103355002 : Record 7010204;
    BEGIN
      IF "N§ Reserva" = 0 THEN
        EXIT;

      IF rPreRes.GET(par_Res."N§ Prereserva") THEN BEGIN
        rPreRes.Actualizar_Paxes;
        rPreRes.Paxes := rPreRes.Paxes + par_sumar;
        rPreRes.MODIFY;
      END;
    END;

    PROCEDURE Establecer_Gestion_Cabecera@2(par_gestion_cabecera@1103355000 : Boolean);
    BEGIN
      Gestion_Cabecera := par_gestion_cabecera;
    END;

    BEGIN
    {
      $001 MNC 22072014 CNT-LP-14054 No se pueden usar TTOO bloqueados

      $002 AJS 28102014 Amplio el campo Nombre a Text50
    }
    END.
  }
}
