OBJECT Table 5995 Service Cr.Memo Line
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVW16.00,NAVES5.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Service Cr.Memo Line;
               ESP=L¡nea abono servicio];
    PasteIsValid=No;
    LookupFormID=Form5904;
    DrillDownFormID=Form5904;
  }
  FIELDS
  {
    { 2   ;   ;Customer No.        ;Code20        ;TableRelation=Customer;
                                                   CaptionML=[ENU=Customer No.;
                                                              ESP=N§ cliente];
                                                   Editable=No }
    { 3   ;   ;Document No.        ;Code20        ;TableRelation="Service Cr.Memo Header".No.;
                                                   CaptionML=[ENU=Document No.;
                                                              ESP=N§ documento] }
    { 4   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              ESP=N§ l¡nea] }
    { 5   ;   ;Type                ;Option        ;CaptionML=[ENU=Type;
                                                              ESP=Tipo];
                                                   OptionCaptionML=[ENU=" ,Item,Resource,Cost,G/L Account";
                                                                    ESP=" ,Producto,Recurso,Coste,Cuenta"];
                                                   OptionString=[ ,Item,Resource,Cost,G/L Account] }
    { 6   ;   ;No.                 ;Code20        ;TableRelation=IF (Type=CONST(" ")) "Standard Text"
                                                                 ELSE IF (Type=CONST(Item)) Item
                                                                 ELSE IF (Type=CONST(Resource)) Resource
                                                                 ELSE IF (Type=CONST(Cost)) "Service Cost"
                                                                 ELSE IF (Type=CONST(G/L Account)) "G/L Account";
                                                   CaptionML=[ENU=No.;
                                                              ESP=N§] }
    { 7   ;   ;Location Code       ;Code10        ;TableRelation=Location;
                                                   CaptionML=[ENU=Location Code;
                                                              ESP=C¢d. almac‚n] }
    { 8   ;   ;Posting Group       ;Code10        ;TableRelation=IF (Type=CONST(Item)) "Inventory Posting Group";
                                                   CaptionML=[ENU=Posting Group;
                                                              ESP=Grupo contable] }
    { 11  ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              ESP=Descripci¢n] }
    { 12  ;   ;Description 2       ;Text50        ;CaptionML=[ENU=Description 2;
                                                              ESP=Descripci¢n 2] }
    { 13  ;   ;Unit of Measure     ;Text10        ;CaptionML=[ENU=Unit of Measure;
                                                              ESP=Unidad medida] }
    { 15  ;   ;Quantity            ;Decimal       ;CaptionML=[ENU=Quantity;
                                                              ESP=Cantidad];
                                                   DecimalPlaces=0:5 }
    { 22  ;   ;Unit Price          ;Decimal       ;CaptionML=[ENU=Unit Price;
                                                              ESP=Precio venta];
                                                   Editable=Yes;
                                                   AutoFormatType=2;
                                                   AutoFormatExpr=GetCurrencyCode;
                                                   CaptionClass=GetCaptionClass(FIELDNO("Unit Price")) }
    { 23  ;   ;Unit Cost (LCY)     ;Decimal       ;CaptionML=[ENU=Unit Cost (LCY);
                                                              ESP=Coste unitario (DL)];
                                                   AutoFormatType=2 }
    { 25  ;   ;VAT %               ;Decimal       ;CaptionML=[ENU=VAT %;
                                                              ESP=% IVA];
                                                   DecimalPlaces=0:6;
                                                   Editable=No }
    { 27  ;   ;Line Discount %     ;Decimal       ;CaptionML=[ENU=Line Discount %;
                                                              ESP=% Descuento l¡nea];
                                                   DecimalPlaces=0:6;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 28  ;   ;Line Discount Amount;Decimal       ;CaptionML=[ENU=Line Discount Amount;
                                                              ESP=Importe dto. l¡nea];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 29  ;   ;Amount              ;Decimal       ;CaptionML=[ENU=Amount;
                                                              ESP=Importe];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 30  ;   ;Amount Including VAT;Decimal       ;CaptionML=[ENU=Amount Including VAT;
                                                              ESP=Importe IVA incl.];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 32  ;   ;Allow Invoice Disc. ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[ENU=Allow Invoice Disc.;
                                                              ESP=Permitir dto. factura] }
    { 34  ;   ;Gross Weight        ;Decimal       ;CaptionML=[ENU=Gross Weight;
                                                              ESP=Peso bruto];
                                                   DecimalPlaces=0:6 }
    { 35  ;   ;Net Weight          ;Decimal       ;CaptionML=[ENU=Net Weight;
                                                              ESP=Peso neto];
                                                   DecimalPlaces=0:6 }
    { 36  ;   ;Units per Parcel    ;Decimal       ;CaptionML=[ENU=Units per Parcel;
                                                              ESP=Unidades por lote];
                                                   DecimalPlaces=0:6 }
    { 37  ;   ;Unit Volume         ;Decimal       ;CaptionML=[ENU=Unit Volume;
                                                              ESP=Volumen];
                                                   DecimalPlaces=0:6 }
    { 40  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=[ENU=Shortcut Dimension 1 Code;
                                                              ESP=C¢d. dim. acceso dir. 1];
                                                   CaptionClass='1,2,1' }
    { 41  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=[ENU=Shortcut Dimension 2 Code;
                                                              ESP=C¢d. dim. acceso dir. 2];
                                                   CaptionClass='1,2,2' }
    { 42  ;   ;Customer Price Group;Code10        ;TableRelation="Customer Price Group";
                                                   CaptionML=[ENU=Customer Price Group;
                                                              ESP=Grupo precio cliente];
                                                   Editable=No }
    { 52  ;   ;Work Type Code      ;Code10        ;TableRelation="Work Type";
                                                   CaptionML=[ENU=Work Type Code;
                                                              ESP=C¢d. tipo trabajo] }
    { 63  ;   ;Shipment No.        ;Code20        ;CaptionML=[ENU=Shipment No.;
                                                              ESP=N§ albar n];
                                                   Editable=No }
    { 68  ;   ;Bill-to Customer No.;Code20        ;TableRelation=Customer;
                                                   CaptionML=[ENU=Bill-to Customer No.;
                                                              ESP=Factura-a N§ cliente];
                                                   Editable=No }
    { 69  ;   ;Inv. Discount Amount;Decimal       ;CaptionML=[ENU=Inv. Discount Amount;
                                                              ESP=Importe dto. factura];
                                                   AutoFormatExpr=GetCurrencyCode }
    { 74  ;   ;Gen. Bus. Posting Group;Code10     ;TableRelation="Gen. Business Posting Group";
                                                   CaptionML=[ENU=Gen. Bus. Posting Group;
                                                              ESP=Grupo contable negocio] }
    { 75  ;   ;Gen. Prod. Posting Group;Code10    ;TableRelation="Gen. Product Posting Group";
                                                   CaptionML=[ENU=Gen. Prod. Posting Group;
                                                              ESP=Grupo contable producto] }
    { 77  ;   ;VAT Calculation Type;Option        ;CaptionML=[ENU=VAT Calculation Type;
                                                              ESP=Tipo c lculo IVA];
                                                   OptionCaptionML=[ENU=Normal VAT,Reverse Charge VAT,Full VAT,Sales Tax,No Taxable VAT;
                                                                    ESP=Normal,Reversi¢n,Total,Impto. venta,No sujeto];
                                                   OptionString=Normal VAT,Reverse Charge VAT,Full VAT,Sales Tax,No Taxable VAT;
                                                   Editable=No }
    { 78  ;   ;Transaction Type    ;Code10        ;TableRelation="Transaction Type";
                                                   CaptionML=[ENU=Transaction Type;
                                                              ESP=Naturaleza transacci¢n] }
    { 79  ;   ;Transport Method    ;Code10        ;TableRelation="Transport Method";
                                                   CaptionML=[ENU=Transport Method;
                                                              ESP=Modo transporte] }
    { 80  ;   ;Attached to Line No.;Integer       ;TableRelation="Service Cr.Memo Line"."Line No." WHERE (Document No.=FIELD(Document No.));
                                                   CaptionML=[ENU=Attached to Line No.;
                                                              ESP=N§ l¡nea texto adicional];
                                                   Editable=No }
    { 81  ;   ;Exit Point          ;Code10        ;TableRelation="Entry/Exit Point";
                                                   CaptionML=[ENU=Exit Point;
                                                              ESP=Puerto/Aerop. carga] }
    { 82  ;   ;Area                ;Code10        ;TableRelation=Area;
                                                   CaptionML=[ENU=Area;
                                                              ESP=C¢d. provincia] }
    { 83  ;   ;Transaction Specification;Code10   ;TableRelation="Transaction Specification";
                                                   CaptionML=[ENU=Transaction Specification;
                                                              ESP=Especificaci¢n transacci¢n] }
    { 85  ;   ;Tax Area Code       ;Code20        ;TableRelation="Tax Area";
                                                   CaptionML=[ENU=Tax Area Code;
                                                              ESP=C¢d.  rea impuesto] }
    { 86  ;   ;Tax Liable          ;Boolean       ;CaptionML=[ENU=Tax Liable;
                                                              ESP=Sujeto a impuesto] }
    { 87  ;   ;Tax Group Code      ;Code10        ;TableRelation="Tax Group";
                                                   CaptionML=[ENU=Tax Group Code;
                                                              ESP=C¢d. grupo impuesto] }
    { 89  ;   ;VAT Bus. Posting Group;Code10      ;TableRelation="VAT Business Posting Group";
                                                   CaptionML=[ENU=VAT Bus. Posting Group;
                                                              ESP=Grupo registro IVA neg.] }
    { 90  ;   ;VAT Prod. Posting Group;Code10     ;TableRelation="VAT Product Posting Group";
                                                   CaptionML=[ENU=VAT Prod. Posting Group;
                                                              ESP=Grupo registro IVA prod.] }
    { 99  ;   ;VAT Base Amount     ;Decimal       ;CaptionML=[ENU=VAT Base Amount;
                                                              ESP=Importe base IVA];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 100 ;   ;Unit Cost           ;Decimal       ;CaptionML=[ENU=Unit Cost;
                                                              ESP=Coste unitario];
                                                   AutoFormatType=2;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 101 ;   ;System-Created Entry;Boolean       ;CaptionML=[ENU=System-Created Entry;
                                                              ESP=Asiento autom tico];
                                                   Editable=No }
    { 103 ;   ;Line Amount         ;Decimal       ;CaptionML=[ENU=Line Amount;
                                                              ESP=Importe l¡nea];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode;
                                                   CaptionClass=GetCaptionClass(FIELDNO("Line Amount")) }
    { 104 ;   ;VAT Difference      ;Decimal       ;CaptionML=[ENU=VAT Difference;
                                                              ESP=Diferencia IVA];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 106 ;   ;VAT Identifier      ;Code10        ;CaptionML=[ENU=VAT Identifier;
                                                              ESP=Identific. IVA];
                                                   Editable=No }
    { 5402;   ;Variant Code        ;Code10        ;TableRelation=IF (Type=CONST(Item)) "Item Variant".Code WHERE (Item No.=FIELD(No.));
                                                   CaptionML=[ENU=Variant Code;
                                                              ESP=C¢d. variante] }
    { 5403;   ;Bin Code            ;Code20        ;TableRelation=Bin.Code WHERE (Location Code=FIELD(Location Code));
                                                   CaptionML=[ENU=Bin Code;
                                                              ESP=C¢d. ubicaci¢n] }
    { 5404;   ;Qty. per Unit of Measure;Decimal   ;InitValue=1;
                                                   CaptionML=[ENU=Qty. per Unit of Measure;
                                                              ESP=Cdad. por unidad medida];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 5407;   ;Unit of Measure Code;Code10        ;TableRelation=IF (Type=CONST(Item)) "Item Unit of Measure".Code WHERE (Item No.=FIELD(No.))
                                                                 ELSE "Unit of Measure";
                                                   CaptionML=[ENU=Unit of Measure Code;
                                                              ESP=C¢d. unidad medida] }
    { 5415;   ;Quantity (Base)     ;Decimal       ;CaptionML=[ENU=Quantity (Base);
                                                              ESP=Cantidad (base)];
                                                   DecimalPlaces=0:5 }
    { 5700;   ;Responsibility Center;Code10       ;TableRelation="Responsibility Center";
                                                   CaptionML=[ENU=Responsibility Center;
                                                              ESP=Centro responsabilidad];
                                                   Editable=No }
    { 5709;   ;Item Category Code  ;Code10        ;TableRelation="Item Category".Code;
                                                   CaptionML=[ENU=Item Category Code;
                                                              ESP=C¢d. categor¡a producto] }
    { 5710;   ;Nonstock            ;Boolean       ;CaptionML=[ENU=Nonstock;
                                                              ESP=Prod. sin stock];
                                                   Editable=No }
    { 5712;   ;Product Group Code  ;Code10        ;TableRelation="Product Group".Code WHERE (Item Category Code=FIELD(Item Category Code));
                                                   CaptionML=[ENU=Product Group Code;
                                                              ESP=C¢d. grupo producto] }
    { 5811;   ;Appl.-from Item Entry;Integer      ;CaptionML=[ENU=Appl.-from Item Entry;
                                                              ESP=Liquid.-de mov. pdto] }
    { 5902;   ;Service Item No.    ;Code20        ;TableRelation="Service Item".No.;
                                                   CaptionML=[ENU=Service Item No.;
                                                              ESP=N§ prod. servicio] }
    { 5903;   ;Appl.-to Service Entry;Integer     ;CaptionML=[ENU=Appl.-to Service Entry;
                                                              ESP=Liquidar a-mov. servicio];
                                                   Editable=No }
    { 5905;   ;Service Item Serial No.;Code20     ;CaptionML=[ENU=Service Item Serial No.;
                                                              ESP=N§ serie prod. servicio] }
    { 5906;   ;Service Item Line Description;Text30;
                                                   CaptionML=[ENU=Service Item Line Description;
                                                              ESP=Descripci¢n l¡nea prod. servicio];
                                                   Editable=No }
    { 5908;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              ESP=Fecha registro] }
    { 5916;   ;Ship-to Code        ;Code10        ;TableRelation="Ship-to Address".Code WHERE (Customer No.=FIELD(Customer No.));
                                                   CaptionML=[ENU=Ship-to Code;
                                                              ESP=C¢d. direcci¢n env¡o cliente];
                                                   Editable=No }
    { 5928;   ;Service Price Group Code;Code10    ;TableRelation="Service Price Group";
                                                   CaptionML=[ENU=Service Price Group Code;
                                                              ESP=C¢d. grupo precio serv.] }
    { 5929;   ;Fault Area Code     ;Code10        ;TableRelation="Fault Area";
                                                   CaptionML=[ENU=Fault Area Code;
                                                              ESP=C¢d.  rea defecto] }
    { 5930;   ;Symptom Code        ;Code10        ;TableRelation="Symptom Code";
                                                   CaptionML=[ENU=Symptom Code;
                                                              ESP=C¢d. s¡ntoma] }
    { 5931;   ;Fault Code          ;Code10        ;TableRelation="Fault Code".Code WHERE (Fault Area Code=FIELD(Fault Area Code),
                                                                                          Symptom Code=FIELD(Symptom Code));
                                                   CaptionML=[ENU=Fault Code;
                                                              ESP=C¢d. defecto] }
    { 5932;   ;Resolution Code     ;Code10        ;TableRelation="Resolution Code";
                                                   CaptionML=[ENU=Resolution Code;
                                                              ESP=C¢d. resoluci¢n] }
    { 5933;   ;Exclude Warranty    ;Boolean       ;CaptionML=[ENU=Exclude Warranty;
                                                              ESP=Excluye garant¡a];
                                                   Editable=Yes }
    { 5934;   ;Warranty            ;Boolean       ;CaptionML=[ENU=Warranty;
                                                              ESP=Garant¡a];
                                                   Editable=No }
    { 5936;   ;Contract No.        ;Code20        ;TableRelation="Service Contract Header"."Contract No." WHERE (Contract Type=CONST(Contract));
                                                   CaptionML=[ENU=Contract No.;
                                                              ESP=N§ contrato];
                                                   Editable=No }
    { 5938;   ;Contract Disc. %    ;Decimal       ;CaptionML=[ENU=Contract Disc. %;
                                                              ESP=% Dto. contrato];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100;
                                                   Editable=No }
    { 5939;   ;Warranty Disc. %    ;Decimal       ;CaptionML=[ENU=Warranty Disc. %;
                                                              ESP=% Desc. garant¡a];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100;
                                                   Editable=No }
    { 5965;   ;Component Line No.  ;Integer       ;CaptionML=[ENU=Component Line No.;
                                                              ESP=N§ l¡nea componente] }
    { 5966;   ;Spare Part Action   ;Option        ;CaptionML=[ENU=Spare Part Action;
                                                              ESP=Acci¢n componente];
                                                   OptionCaptionML=[ENU=" ,Permanent,Temporary,Component Replaced,Component Installed";
                                                                    ESP=" ,Permanente,Temporal,Componente repuesto,Componente instalado"];
                                                   OptionString=[ ,Permanent,Temporary,Component Replaced,Component Installed] }
    { 5967;   ;Fault Reason Code   ;Code10        ;TableRelation="Fault Reason Code";
                                                   CaptionML=[ENU=Fault Reason Code;
                                                              ESP=C¢d. raz¢n defecto] }
    { 5968;   ;Replaced Item No.   ;Code20        ;TableRelation=Item;
                                                   CaptionML=[ENU=Replaced Item No.;
                                                              ESP=N§ prod. repuesto] }
    { 5969;   ;Exclude Contract Discount;Boolean  ;CaptionML=[ENU=Exclude Contract Discount;
                                                              ESP=Excluye descuento contrato];
                                                   Editable=Yes }
    { 5994;   ;Price Adjmt. Status ;Option        ;CaptionML=[ENU=Price Adjmt. Status;
                                                              ESP=Estado ajuste precio];
                                                   OptionCaptionML=[ENU=" ,Adjusted,Modified";
                                                                    ESP=" ,Ajustado,Modificado"];
                                                   OptionString=[ ,Adjusted,Modified];
                                                   Editable=No }
    { 5997;   ;Line Discount Type  ;Option        ;CaptionML=[ENU=Line Discount Type;
                                                              ESP=Tipo dto. l¡nea];
                                                   OptionCaptionML=[ENU=" ,Warranty Disc.,Contract Disc.,Line Disc.,Manual";
                                                                    ESP=" ,Dto. garant¡a,Dto. contrato,Dto. l¡nea,Manual"];
                                                   OptionString=[ ,Warranty Disc.,Contract Disc.,Line Disc.,Manual];
                                                   Editable=No }
    { 5999;   ;Copy Components From;Option        ;CaptionML=[ENU=Copy Components From;
                                                              ESP=Copiar componentes de];
                                                   OptionCaptionML=[ENU=None,Item BOM,Old Service Item,Old Serv.Item w/o Serial No.;
                                                                    ESP=Ninguno,LM productos,Prod. servicio antiguo,Prod. servicio antiguo sin n§ serie];
                                                   OptionString=None,Item BOM,Old Service Item,Old Serv.Item w/o Serial No. }
    { 6608;   ;Return Reason Code  ;Code10        ;TableRelation="Return Reason";
                                                   CaptionML=[ENU=Return Reason Code;
                                                              ESP=C¢d. motivo dev.] }
    { 7001;   ;Allow Line Disc.    ;Boolean       ;CaptionML=[ENU=Allow Line Disc.;
                                                              ESP=Permite dto. l¡nea] }
    { 7002;   ;Customer Disc. Group;Code10        ;TableRelation="Customer Discount Group";
                                                   CaptionML=[ENU=Customer Disc. Group;
                                                              ESP=Grupo dto. cliente] }
    { 10700;  ;Pmt. Disc. Given Amount;Decimal    ;CaptionML=[ENU=Pmt. Disc. Given Amount;
                                                              ESP=Dto. P.P.];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 10701;  ;EC %                ;Decimal       ;CaptionML=[ENU=EC %;
                                                              ESP=% RE] }
    { 10702;  ;EC Difference       ;Decimal       ;CaptionML=[ENU=EC Difference;
                                                              ESP=Diferencia RE];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
  }
  KEYS
  {
    {    ;Document No.,Line No.                   ;SumIndexFields=Amount;
                                                   Clustered=Yes }
    {    ;Type,No.                                 }
    {    ;Service Item No.,Type,Posting Date       }
    {    ;Document No.,Service Item No.            }
    { No ;Document No.                            ;SumIndexFields=Amount }
    {    ;Document No.,Type,No.                    }
    {    ;Type,No.,Variant Code,Location Code,Posting Date,Shortcut Dimension 1 Code,Shortcut Dimension 2 Code;
                                                   SumIndexFields=Quantity (Base) }
    {    ;Appl.-to Service Entry                   }
    {    ;Document No.,Component Line No.          }
    {    ;Fault Reason Code                        }
    {    ;Customer No.                             }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE ShowDimensions@25();
    VAR
      PostedDocDim@1003 : Record 359;
      PostedDocDimensions@1002 : Form 547;
    BEGIN
      TESTFIELD("No.");
      TESTFIELD("Line No.");
      PostedDocDim.SETRANGE("Table ID",DATABASE::"Service Cr.Memo Line");
      PostedDocDim.SETRANGE("Document No.","Document No.");
      PostedDocDim.SETRANGE("Line No.","Line No.");
      PostedDocDimensions.SETTABLEVIEW(PostedDocDim);
      PostedDocDimensions.RUNMODAL;
    END;

    PROCEDURE CalcVATAmountLines@5(VAR ServCrMemoHeader@1000 : Record 5994;VAR VATAmountLine@1001 : Record 290);
    BEGIN
      VATAmountLine.DELETEALL;
      SETRANGE("Document No.",ServCrMemoHeader."No.");
      IF FIND('-') THEN
        REPEAT
          VATAmountLine.INIT;
          VATAmountLine."VAT Identifier" := "VAT Identifier";
          VATAmountLine."VAT Calculation Type" := "VAT Calculation Type";
          VATAmountLine."Tax Group Code" := "Tax Group Code";
          VATAmountLine."VAT %" := "VAT %";
          VATAmountLine."EC %" := "EC %";
          VATAmountLine."VAT+EC Base" := Amount;
          VATAmountLine."VAT Amount" := "Amount Including VAT" - Amount;
          VATAmountLine."Amount Including VAT+EC" := "Amount Including VAT";
          VATAmountLine."Line Amount" := "Line Amount";
          IF "Allow Invoice Disc." THEN
            VATAmountLine."Inv. Disc. Base Amount" := "Line Amount";
          VATAmountLine."Invoice Discount Amount" := "Inv. Discount Amount";
          VATAmountLine.Quantity := "Quantity (Base)";
          VATAmountLine."Calculated VAT Amount" := "Amount Including VAT" - Amount - "VAT Difference";
          VATAmountLine."VAT Difference" := "VAT Difference";
          VATAmountLine."EC Difference" := "EC Difference";
          IF ServCrMemoHeader."Prices Including VAT" THEN
            VATAmountLine."Prices Including VAT" := TRUE;

          VATAmountLine.InsertLine;
        UNTIL NEXT = 0;
    END;

    LOCAL PROCEDURE GetCaptionClass@38(FieldNumber@1000 : Integer) : Text[80];
    VAR
      ServiceCMHeader@1001 : Record 5994;
    BEGIN
      IF NOT ServiceCMHeader.GET("Document No.") THEN
        ServiceCMHeader.INIT;
      IF ServiceCMHeader."Prices Including VAT" THEN
        EXIT('2,1,' + GetFieldCaption(FieldNumber));
      EXIT('2,0,' + GetFieldCaption(FieldNumber));
    END;

    PROCEDURE ShowItemTrackingLines@1();
    VAR
      ItemTrackingMgt@1000 : Codeunit 6500;
    BEGIN
      ItemTrackingMgt.CallPostedItemTrackingForm3(RowID1);
    END;

    PROCEDURE RowID1@2() : Text[250];
    VAR
      ItemTrackingMgt@1000 : Codeunit 6500;
    BEGIN
      EXIT(ItemTrackingMgt.ComposeRowID(DATABASE::"Service Invoice Line",0,"Document No.",'',0,"Line No."));
    END;

    PROCEDURE GetFieldCaption@4(FieldNumber@1000 : Integer) : Text[100];
    VAR
      Field@1001 : Record 2000000041;
    BEGIN
      Field.GET(DATABASE::"Service Cr.Memo Line",FieldNumber);
      EXIT(Field."Field Caption");
    END;

    PROCEDURE GetCurrencyCode@3() : Code[10];
    VAR
      ServiceCMHeader@1000 : Record 5994;
    BEGIN
      IF "Document No." = ServiceCMHeader."No." THEN
        EXIT(ServiceCMHeader."Currency Code");
      IF ServiceCMHeader.GET("Document No.") THEN
        EXIT(ServiceCMHeader."Currency Code");
      EXIT('');
    END;

    PROCEDURE FilterPstdDocLineValueEntries@7(VAR ValueEntry@1000 : Record 5802);
    BEGIN
      ValueEntry.RESET;
      ValueEntry.SETCURRENTKEY("Document No.");
      ValueEntry.SETRANGE("Document No.","Document No.");
      ValueEntry.SETRANGE("Document Type",ValueEntry."Document Type"::"Service Credit Memo");
      ValueEntry.SETRANGE("Document Line No.","Line No.");
    END;

    PROCEDURE CalcShippedServNotReturned@12(VAR ShippedQtyNotReturned@1006 : Decimal;VAR RevUnitCostLCY@1004 : Decimal;ExactCostReverse@1000 : Boolean);
    VAR
      TempItemLedgEntry@1011 : TEMPORARY Record 32;
      TotalCostLCY@1009 : Decimal;
      TotalQtyBase@1007 : Decimal;
    BEGIN
      ShippedQtyNotReturned := 0;
      IF (Type <> Type::Item) OR (Quantity >= 0) THEN BEGIN
        RevUnitCostLCY := "Unit Cost (LCY)";
        EXIT;
      END;

      RevUnitCostLCY := 0;
      GetItemLedgEntries(TempItemLedgEntry,FALSE);
      IF TempItemLedgEntry.FINDSET THEN
        REPEAT
          ShippedQtyNotReturned := ShippedQtyNotReturned - TempItemLedgEntry."Shipped Qty. Not Returned";
          IF ExactCostReverse THEN BEGIN
            TempItemLedgEntry.CALCFIELDS("Cost Amount (Expected)","Cost Amount (Actual)");
            TotalCostLCY :=
              TotalCostLCY + TempItemLedgEntry."Cost Amount (Expected)" + TempItemLedgEntry."Cost Amount (Actual)";
            TotalQtyBase := TotalQtyBase + TempItemLedgEntry.Quantity;
          END;
        UNTIL TempItemLedgEntry.NEXT = 0;

      IF ExactCostReverse AND (ShippedQtyNotReturned <> 0) AND (TotalQtyBase <> 0) THEN
        RevUnitCostLCY :=
          ABS(TotalCostLCY / TotalQtyBase) * "Qty. per Unit of Measure"
      ELSE
        RevUnitCostLCY := "Unit Cost (LCY)";
      ShippedQtyNotReturned := CalcQty(ShippedQtyNotReturned);

      IF ShippedQtyNotReturned > -Quantity THEN
        ShippedQtyNotReturned := -Quantity;
    END;

    LOCAL PROCEDURE CalcQty@11(QtyBase@1000 : Decimal) : Decimal;
    BEGIN
      IF "Qty. per Unit of Measure" = 0 THEN
        EXIT(QtyBase);
      EXIT(ROUND(QtyBase / "Qty. per Unit of Measure",0.00001));
    END;

    PROCEDURE GetItemLedgEntries@8(VAR TempItemLedgEntry@1000 : Record 32;SetQuantity@1003 : Boolean);
    VAR
      ItemLedgEntry@1002 : Record 32;
      ValueEntry@1001 : Record 5802;
    BEGIN
      IF SetQuantity THEN BEGIN
        TempItemLedgEntry.RESET;
        TempItemLedgEntry.DELETEALL;

        IF Type <> Type::Item THEN
          EXIT;
      END;

      FilterPstdDocLineValueEntries(ValueEntry);
      ValueEntry.SETFILTER("Invoiced Quantity",'<>0');
      IF ValueEntry.FINDSET THEN
        REPEAT
          ItemLedgEntry.GET(ValueEntry."Item Ledger Entry No.");
          TempItemLedgEntry := ItemLedgEntry;
          IF SetQuantity THEN BEGIN
            TempItemLedgEntry.Quantity := ValueEntry."Invoiced Quantity";
            IF ABS(TempItemLedgEntry."Shipped Qty. Not Returned") > ABS(TempItemLedgEntry.Quantity) THEN
              TempItemLedgEntry."Shipped Qty. Not Returned" := TempItemLedgEntry.Quantity;
          END;
          IF TempItemLedgEntry.INSERT THEN;
        UNTIL ValueEntry.NEXT = 0;
    END;

    PROCEDURE ShowItemLedgEntries@10();
    VAR
      TempItemLedgEntry@1000 : TEMPORARY Record 32;
    BEGIN
      IF Type = Type::Item THEN BEGIN
        GetItemLedgEntries(TempItemLedgEntry,FALSE);
        FORM.RUNMODAL(0,TempItemLedgEntry);
      END;
    END;

    BEGIN
    END.
  }
}
