OBJECT Table 7035330 Modificacion Produccion
{
  OBJECT-PROPERTIES
  {
    Date=16/10/09;
    Time=12:30:47;
    Version List=TRANSFER;
  }
  PROPERTIES
  {
    CaptionML=ESP=Modificacion Produccion;
    LookupFormID=Form7010505;
    DrillDownFormID=Form7010505;
  }
  FIELDS
  {
    { 1   ;   ;Id                  ;Integer       ;AutoIncrement=Yes;
                                                   CaptionML=ESP=Id }
    { 10  ;   ;N§ Parte            ;Code10        ;CaptionML=ESP=N§ Parte }
    { 11  ;   ;N§ Linea            ;Integer       ;CaptionML=ESP=N§ Linea }
    { 15  ;   ;Tipo                ;Option        ;CaptionML=ESP=Tipo;
                                                   OptionCaptionML=ESP=Ingreso,Coste;
                                                   OptionString=Ingreso,Coste }
    { 20  ;   ;Touroperador        ;Code10        ;CaptionML=ESP=Touroperador }
    { 25  ;   ;Zona Precios        ;Code10        ;CaptionML=ESP=Zona Precios }
    { 30  ;   ;Tipo elemento       ;Code10        ;CaptionML=ESP=Tipo elemento }
    { 31  ;   ;Tipo linea          ;Option        ;CaptionML=ESP=Tipo linea;
                                                   OptionCaptionML=ESP=Base,Suplemento,Manual,Extra,Ajuste;
                                                   OptionString=Base,Suplemento,Manual,Extra,Ajuste;
                                                   Editable=No }
    { 32  ;   ;Linea abono         ;Boolean       ;CaptionML=ESP=Linea abono }
    { 50  ;   ;No Campo            ;Integer       ;CaptionML=ESP=No Campo }
    { 51  ;   ;Valor               ;Text30        ;CaptionML=ESP=Valor }
    { 52  ;   ;Valor Calculado     ;Text30        ;CaptionML=ESP=Valor Calculado }
  }
  KEYS
  {
    {    ;Id                                      ;Clustered=Yes }
    {    ;N§ Parte,N§ Linea,Tipo,No Campo          }
    {    ;N§ Parte,Tipo,Touroperador,Zona Precios,Tipo elemento,Tipo linea }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text50000@1103355000 : TextConst 'ESP=Decimal';

    PROCEDURE SetModIngreso@1103355000(prProd@1103355000 : Record 7035392;prxProd@1103355001 : Record 7035392);
    VAR
      lwProdRf@1103355002 : RecordRef;
      lwXProdRf@1103355003 : RecordRef;
      lwField@1103355004 : FieldRef;
      lwXField@1103355005 : FieldRef;
      lwCont@1103355006 : Integer;
      lwOk@1103355007 : Boolean;
    BEGIN
      // SetModIngreso

      lwProdRf.GETTABLE(prProd);
      lwXProdRf.GETTABLE(prxProd);
      FOR lwCont := 1 TO lwProdRf.FIELDCOUNT DO BEGIN
        lwField  := lwProdRf.FIELDINDEX(lwCont);
        lwXField := lwXProdRf.FIELDINDEX(lwCont);

        lwOk := lwField.NUMBER IN [89,67,101,71,105,93];
        IF lwOk THEN BEGIN
          IF lwField.VALUE <> lwXField.VALUE THEN BEGIN // Inserta Linea
            CreaLineaIngreso(prProd, lwField.NUMBER, FORMAT(lwField.VALUE), FORMAT(lwXField.VALUE));
          END;
        END;
      END;
    END;

    PROCEDURE CreaLineaIngreso@1103355001(prProd@1103355000 : Record 7035392;pwNoCampo@1103355001 : Integer;Valor@1103355002 : Text[30];ValorAnt@1103355003 : Text[30]);
    VAR
      lwOk@1103355004 : Boolean;
      lrMod@1103355006 : Record 7035330;
      lwEnc@1103355005 : Boolean;
    BEGIN
      // CreaLineaIngreso


      lwOk := pwNoCampo IN [89,67,101,71,105,93];
      IF lwOk THEN BEGIN
        IF Valor <> ValorAnt THEN BEGIN  // Inserta Linea
          CLEAR(lrMod);
          lrMod.SETCURRENTKEY("N§ Parte","N§ Linea",Tipo,"No Campo");
          lrMod.SETRANGE("N§ Parte", prProd."N§ Parte");
          lrMod.SETRANGE("N§ Linea", prProd."N§ Linea");
          lrMod.SETRANGE(Tipo      , lrMod.Tipo::Ingreso);
          lrMod.SETRANGE("No Campo", pwNoCampo);
          lwEnc := lrMod.FINDFIRST;
          IF NOT lwEnc THEN BEGIN
            lrMod."N§ Parte":= prProd."N§ Parte";
            lrMod."N§ Linea":= prProd."N§ Linea";
            lrMod.Tipo      := lrMod.Tipo::Ingreso;
            lrMod."No Campo":= pwNoCampo;
            lrMod.Touroperador   := prProd.Touroperador;
            lrMod."Zona Precios" := prProd."Zona Precios";
            lrMod."Tipo elemento":= prProd."Tipo elemento";
            lrMod."Tipo linea"   := prProd."Tipo linea";
            lrMod."Linea abono"  := prProd."Linea abono";
          END;
          lrMod.Valor            := Valor;
          IF lrMod."Valor Calculado" = '' THEN
            lrMod."Valor Calculado" := ValorAnt;
          IF lwEnc THEN BEGIN
            IF lrMod.Valor = lrMod."Valor Calculado" THEN
              lrMod.DELETE
            ELSE
              lrMod.MODIFY
          END ELSE
            lrMod.INSERT(TRUE);
        END;
      END;
    END;

    PROCEDURE SetModCoste@1103355005(prProd@1103355000 : Record 7035393;prxProd@1103355001 : Record 7035393);
    VAR
      lwProdRf@1103355002 : RecordRef;
      lwXProdRf@1103355003 : RecordRef;
      lwField@1103355004 : FieldRef;
      lwXField@1103355005 : FieldRef;
      lwCont@1103355006 : Integer;
      lwOk@1103355007 : Boolean;
      lrMod@1103355008 : Record 7035330;
      lwEnc@1103355009 : Boolean;
    BEGIN
      // SetModCoste

      lwProdRf.GETTABLE(prProd);
      lwXProdRf.GETTABLE(prxProd);
      FOR lwCont := 1 TO lwProdRf.FIELDCOUNT DO BEGIN
        lwField  := lwProdRf.FIELDINDEX(lwCont);
        lwXField := lwXProdRf.FIELDINDEX(lwCont);
        lwOk := lwField.NUMBER IN [89,67,101,71,105];
        IF lwOk THEN BEGIN
          IF lwField.VALUE <> lwXField.VALUE THEN BEGIN // Inserta Linea
            CreaLineCoste(prProd, lwField.NUMBER, FORMAT(lwField.VALUE), FORMAT(lwXField.VALUE));
          END;
        END;
      END;
    END;

    PROCEDURE CreaLineCoste@1103355006(prProd@1103355000 : Record 7035393;pwNoCampo@1103355001 : Integer;Valor@1103355002 : Text[30];ValorAnt@1103355003 : Text[30]);
    VAR
      lwOk@1103355004 : Boolean;
      lrMod@1103355006 : Record 7035330;
      lwEnc@1103355005 : Boolean;
    BEGIN
      // CreaLineCoste

      lwOk := pwNoCampo IN [89,67,101,71,105];
      IF lwOk THEN BEGIN
        IF Valor <> ValorAnt THEN BEGIN  // Inserta Linea
          CLEAR(lrMod);
          lrMod.SETCURRENTKEY("N§ Parte","N§ Linea",Tipo,"No Campo");
          lrMod.SETRANGE("N§ Parte", prProd."N§ Parte");
          lrMod.SETRANGE("N§ Linea", prProd."N§ Linea");
          lrMod.SETRANGE(Tipo      , lrMod.Tipo::Coste);
          lrMod.SETRANGE("No Campo", pwNoCampo);
          lwEnc := lrMod.FINDFIRST;
          IF NOT lwEnc THEN BEGIN
            lrMod."N§ Parte":= prProd."N§ Parte";
            lrMod."N§ Linea":= prProd."N§ Linea";
            lrMod.Tipo      := lrMod.Tipo::Coste;
            lrMod."No Campo":= pwNoCampo;
            lrMod.Touroperador   := prProd.Touroperador;
            lrMod."Zona Precios" := prProd."Zona Precios";
            lrMod."Tipo elemento":= prProd."Tipo elemento";
            lrMod."Tipo linea"   := prProd."Tipo linea";
            lrMod."Linea abono"  := prProd."Linea abono";
          END;
          lrMod.Valor            := Valor;
          IF lrMod."Valor Calculado" = '' THEN
            lrMod."Valor Calculado" := ValorAnt;
          IF lwEnc THEN BEGIN
            IF lrMod.Valor = lrMod."Valor Calculado" THEN
              lrMod.DELETE
            ELSE
              lrMod.MODIFY
          END ELSE
            lrMod.INSERT(TRUE);
        END;
      END;
    END;

    PROCEDURE NombreCampo@1103355002() : Text[30];
    VAR
      lwText@1103355000 : Text[30];
      lwCamp@1103355001 : FieldRef;
      lwTabla@1103355002 : RecordRef;
    BEGIN
      // NombreCampo

      CLEAR(lwText);

      CASE Tipo OF
        Tipo::Ingreso : lwTabla.OPEN(7035392);
        Tipo::Coste   : lwTabla.OPEN(7035393);
      END;

      IF "No Campo" <> 0 THEN BEGIN
        lwCamp := lwTabla.FIELD("No Campo");
        lwText := lwCamp.CAPTION;
      END;

      EXIT(lwText);
    END;

    PROCEDURE DevuelveValorIngreso@1103355003(prProd@1103355002 : Record 7035392;pwNoCampo@1103355004 : Integer);
    VAR
      lrMod@1103355003 : Record 7035330;
      lwTabla@1103355000 : RecordRef;
      lwRecId@1103355001 : RecordID;
    BEGIN
      // DevuelveValorIngreso
      // Devuelve el valor a su registro actual

      IF NOT (pwNoCampo IN [89,67,101,71,105,93]) THEN
        EXIT;

      CLEAR(lwTabla);
      lwTabla.GETTABLE(prProd);

      CLEAR(lrMod);
      lrMod.SETCURRENTKEY("N§ Parte","N§ Linea",Tipo,"No Campo");
      lrMod.SETRANGE("N§ Parte", prProd."N§ Parte");
      lrMod.SETRANGE("N§ Linea", prProd."N§ Linea");
      lrMod.SETRANGE(Tipo      , lrMod.Tipo::Ingreso);
      lrMod.SETRANGE("No Campo", pwNoCampo);
      IF lrMod.FINDFIRST THEN
        lrMod.MarcaValor(lwTabla, TRUE, FALSE);
    END;

    PROCEDURE DevuelveValorCoste@1103355007(prProd@1103355002 : Record 7035393;pwNoCampo@1103355004 : Integer);
    VAR
      lrMod@1103355003 : Record 7035330;
      lwTabla@1103355000 : RecordRef;
      lwRecId@1103355001 : RecordID;
    BEGIN
      // DevuelveValorCoste
      // Devuelve el valor a su registro actual

      IF NOT (pwNoCampo IN [89,67,101,71,105,93]) THEN
        EXIT;

      CLEAR(lwTabla);
      lwTabla.GETTABLE(prProd);

      CLEAR(lrMod);
      lrMod.SETCURRENTKEY("N§ Parte","N§ Linea",Tipo,"No Campo");
      lrMod.SETRANGE("N§ Parte", prProd."N§ Parte");
      lrMod.SETRANGE("N§ Linea", prProd."N§ Linea");
      lrMod.SETRANGE(Tipo      , lrMod.Tipo::Ingreso);
      lrMod.SETRANGE("No Campo", pwNoCampo);
      IF lrMod.FINDFIRST THEN
        lrMod.MarcaValor(lwTabla, TRUE, FALSE);
    END;

    PROCEDURE MarcaValor@1103355004(pwTabla@1103355000 : RecordRef;pwBorra@1103355004 : Boolean;pwCalculado@1103355007 : Boolean);
    VAR
      lwField@1103355001 : FieldRef;
      lwVar@1103355002 : Variant;
      lwDec@1103355003 : Decimal;
      lwValorAnt@1103355005 : Text[30];
      lwValor@1103355006 : Text[30];
    BEGIN
      // MarcaValor

      // El valor pwTabla tiene que venir ya instanciado

      lwField    := pwTabla.FIELD("No Campo");
      lwValorAnt := FORMAT(lwField.VALUE);

      //  Si se pasa "pwCalculado" Se marcara con el varlor Calculado. Si se pasa a False, con el actual
      IF pwCalculado THEN
        lwValor := "Valor Calculado"
      ELSE
        lwValor := Valor;

      CASE FORMAT(lwField.TYPE) OF
        Text50000 : BEGIN
          EVALUATE(lwDec, lwValor);
          lwField.VALIDATE(lwDec);
        END;
        ELSE
          lwField.VALIDATE(lwValor);
      END;
      pwTabla.MODIFY;

      IF lwValor =  lwValorAnt THEN
        pwBorra := TRUE;

      // Al volver al valor anterior el registro se borra ya que no tiene ya ning£n objeto
      IF pwBorra THEN
        DELETE
      ELSE BEGIN
        Valor            := lwValor;
        "Valor Calculado" := lwValorAnt;
        MODIFY;
      END;
    END;

    BEGIN
    END.
  }
}
