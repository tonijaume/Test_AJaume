OBJECT Table 124 Purch. Cr. Memo Hdr.
{
  OBJECT-PROPERTIES
  {
    Date=02/10/12;
    Time=12:00:00;
    Modified=Yes;
    Version List=AIC2009,NAVW16.00,NAVES4.00.02;
  }
  PROPERTIES
  {
    DataCaptionFields=No.,Buy-from Vendor Name;
    OnDelete=BEGIN
               LOCKTABLE;
               PostPurchLinesDelete.DeletePurchCrMemoLines(Rec);

               PurchCommentLine.SETRANGE("Document Type",PurchCommentLine."Document Type"::"Posted Credit Memo");
               PurchCommentLine.SETRANGE("No.","No.");
               PurchCommentLine.DELETEALL;

               DimMgt.DeletePostedDocDim(DATABASE::"Purch. Cr. Memo Hdr.","No.",0);

               ApprovalsMgt.DeletePostedApprovalEntry(DATABASE::"Purch. Cr. Memo Hdr.","No.");
             END;

    CaptionML=[ENU=Purch. Cr. Memo Hdr.;
               ESP=Hist¢rico cab. abono compra];
    LookupFormID=Form147;
  }
  FIELDS
  {
    { 2   ;   ;Buy-from Vendor No. ;Code20        ;TableRelation=Vendor;
                                                   CaptionML=[ENU=Buy-from Vendor No.;
                                                              ESP=Compra a-N§ proveedor];
                                                   NotBlank=Yes }
    { 3   ;   ;No.                 ;Code20        ;CaptionML=[ENU=No.;
                                                              ESP=N§] }
    { 4   ;   ;Pay-to Vendor No.   ;Code20        ;TableRelation=Vendor;
                                                   CaptionML=[ENU=Pay-to Vendor No.;
                                                              ESP=Pago-a N§ proveedor];
                                                   NotBlank=Yes }
    { 5   ;   ;Pay-to Name         ;Text50        ;CaptionML=[ENU=Pay-to Name;
                                                              ESP=Pago a-Nombre] }
    { 6   ;   ;Pay-to Name 2       ;Text50        ;CaptionML=[ENU=Pay-to Name 2;
                                                              ESP=Pago a-Nombre 2] }
    { 7   ;   ;Pay-to Address      ;Text50        ;CaptionML=[ENU=Pay-to Address;
                                                              ESP=Pago a-Direcci¢n] }
    { 8   ;   ;Pay-to Address 2    ;Text50        ;CaptionML=[ENU=Pay-to Address 2;
                                                              ESP=Pago a-Direcci¢n 2] }
    { 9   ;   ;Pay-to City         ;Text30        ;OnValidate=BEGIN
                                                                PostCode.ValidateCity("Pay-to City","Pay-to Post Code","Pay-to County");
                                                              END;

                                                   OnLookup=BEGIN
                                                              PostCode.LookUpCity("Pay-to City","Pay-to Post Code","Pay-to County",TRUE);
                                                            END;

                                                   CaptionML=[ENU=Pay-to City;
                                                              ESP=Pago a-Poblaci¢n] }
    { 10  ;   ;Pay-to Contact      ;Text50        ;CaptionML=[ENU=Pay-to Contact;
                                                              ESP=Pago a-Atenci¢n] }
    { 11  ;   ;Your Reference      ;Text30        ;CaptionML=[ENU=Your Reference;
                                                              ESP=Su/Ntra. ref.] }
    { 12  ;   ;Ship-to Code        ;Code10        ;TableRelation="Ship-to Address".Code WHERE (Customer No.=FIELD(Sell-to Customer No.));
                                                   CaptionML=[ENU=Ship-to Code;
                                                              ESP=C¢d. direcci¢n env¡o cliente] }
    { 13  ;   ;Ship-to Name        ;Text50        ;CaptionML=[ENU=Ship-to Name;
                                                              ESP=Env¡o a-Nombre] }
    { 14  ;   ;Ship-to Name 2      ;Text50        ;CaptionML=[ENU=Ship-to Name 2;
                                                              ESP=Env¡o a-Nombre 2] }
    { 15  ;   ;Ship-to Address     ;Text50        ;CaptionML=[ENU=Ship-to Address;
                                                              ESP=Env¡o a-Direcci¢n] }
    { 16  ;   ;Ship-to Address 2   ;Text50        ;CaptionML=[ENU=Ship-to Address 2;
                                                              ESP=Env¡o a-Direcci¢n 2] }
    { 17  ;   ;Ship-to City        ;Text30        ;OnValidate=BEGIN
                                                                PostCode.ValidateCity("Ship-to City","Ship-to Post Code","Ship-to County");
                                                              END;

                                                   OnLookup=BEGIN
                                                              PostCode.LookUpCity("Ship-to City","Ship-to Post Code","Ship-to County",TRUE);
                                                            END;

                                                   CaptionML=[ENU=Ship-to City;
                                                              ESP=Env¡o a-Poblaci¢n] }
    { 18  ;   ;Ship-to Contact     ;Text50        ;CaptionML=[ENU=Ship-to Contact;
                                                              ESP=Env¡o a-Atenci¢n] }
    { 20  ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              ESP=Fecha registro] }
    { 21  ;   ;Expected Receipt Date;Date         ;CaptionML=[ENU=Expected Receipt Date;
                                                              ESP=Fecha recepci¢n esperada] }
    { 22  ;   ;Posting Description ;Text80        ;CaptionML=[ENU=Posting Description;
                                                              ESP=Texto de registro] }
    { 23  ;   ;Payment Terms Code  ;Code10        ;TableRelation="Payment Terms";
                                                   CaptionML=[ENU=Payment Terms Code;
                                                              ESP=C¢d. t‚rminos pago] }
    { 24  ;   ;Due Date            ;Date          ;CaptionML=[ENU=Due Date;
                                                              ESP=Fecha vencimiento] }
    { 25  ;   ;Payment Discount %  ;Decimal       ;CaptionML=[ENU=Payment Discount %;
                                                              ESP=% Dto. P.P.];
                                                   DecimalPlaces=0:6 }
    { 26  ;   ;Pmt. Discount Date  ;Date          ;CaptionML=[ENU=Pmt. Discount Date;
                                                              ESP=Fecha dto. P.P.] }
    { 27  ;   ;Shipment Method Code;Code10        ;TableRelation="Shipment Method";
                                                   CaptionML=[ENU=Shipment Method Code;
                                                              ESP=C¢d. condiciones env¡o] }
    { 28  ;   ;Location Code       ;Code10        ;TableRelation=Location WHERE (Use As In-Transit=CONST(No));
                                                   CaptionML=[ENU=Location Code;
                                                              ESP=C¢d. almac‚n] }
    { 29  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=[ENU=Shortcut Dimension 1 Code;
                                                              ESP=C¢d. dim. acceso dir. 1];
                                                   CaptionClass='1,2,1' }
    { 30  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=[ENU=Shortcut Dimension 2 Code;
                                                              ESP=C¢d. dim. acceso dir. 2];
                                                   CaptionClass='1,2,2' }
    { 31  ;   ;Vendor Posting Group;Code10        ;TableRelation="Vendor Posting Group";
                                                   CaptionML=[ENU=Vendor Posting Group;
                                                              ESP=Grupo contable proveedor];
                                                   Editable=No }
    { 32  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=[ENU=Currency Code;
                                                              ESP=C¢d. divisa];
                                                   Editable=No }
    { 33  ;   ;Currency Factor     ;Decimal       ;CaptionML=[ENU=Currency Factor;
                                                              ESP=Factor divisa];
                                                   DecimalPlaces=0:15;
                                                   MinValue=0 }
    { 35  ;   ;Prices Including VAT;Boolean       ;CaptionML=[ENU=Prices Including VAT;
                                                              ESP=Precios IVA incluido] }
    { 37  ;   ;Invoice Disc. Code  ;Code20        ;CaptionML=[ENU=Invoice Disc. Code;
                                                              ESP=C¢d. dto. factura] }
    { 41  ;   ;Language Code       ;Code10        ;TableRelation=Language;
                                                   CaptionML=[ENU=Language Code;
                                                              ESP=C¢d. idioma] }
    { 43  ;   ;Purchaser Code      ;Code10        ;TableRelation=Salesperson/Purchaser;
                                                   CaptionML=[ENU=Purchaser Code;
                                                              ESP=C¢d. comprador] }
    { 46  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Purch. Comment Line" WHERE (Document Type=CONST(Posted Credit Memo),
                                                                                                  No.=FIELD(No.),
                                                                                                  Document Line No.=CONST(0)));
                                                   CaptionML=[ENU=Comment;
                                                              ESP=Comentario];
                                                   Editable=No }
    { 47  ;   ;No. Printed         ;Integer       ;CaptionML=[ENU=No. Printed;
                                                              ESP=N§ copias impresas];
                                                   Editable=No }
    { 51  ;   ;On Hold             ;Code3         ;CaptionML=[ENU=On Hold;
                                                              ESP=Esperar] }
    { 52  ;   ;Applies-to Doc. Type;Option        ;CaptionML=[ENU=Applies-to Doc. Type;
                                                              ESP=Liq. por tipo documento];
                                                   OptionCaptionML=[ENU=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund,,,,,,,,,,,,,,,Bill";
                                                                    ESP=" ,Pago,Factura,Abono,Docs. inter‚s,Recordatorio,Reembolso,,,,,,,,,,,,,,,Efecto"];
                                                   OptionString=[ ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund,,,,,,,,,,,,,,,Bill] }
    { 53  ;   ;Applies-to Doc. No. ;Code20        ;OnLookup=BEGIN
                                                              VendLedgEntry.SETCURRENTKEY("Document No.");
                                                              VendLedgEntry.SETRANGE("Document Type","Applies-to Doc. Type");
                                                              VendLedgEntry.SETRANGE("Document No.","Applies-to Doc. No.");
                                                              VendLedgEntry.SETRANGE("Bill No.","Applies-to Bill No.");
                                                              FORM.RUN(0,VendLedgEntry);
                                                            END;

                                                   CaptionML=[ENU=Applies-to Doc. No.;
                                                              ESP=Liq. por n§ documento] }
    { 55  ;   ;Bal. Account No.    ;Code20        ;TableRelation=IF (Bal. Account Type=CONST(G/L Account)) "G/L Account"
                                                                 ELSE IF (Bal. Account Type=CONST(Bank Account)) "Bank Account";
                                                   CaptionML=[ENU=Bal. Account No.;
                                                              ESP=Cta. contrapartida] }
    { 60  ;   ;Amount              ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Purch. Cr. Memo Line".Amount WHERE (Document No.=FIELD(No.)));
                                                   CaptionML=[ENU=Amount;
                                                              ESP=Importe];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 61  ;   ;Amount Including VAT;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Purch. Cr. Memo Line"."Amount Including VAT" WHERE (Document No.=FIELD(No.)));
                                                   CaptionML=[ENU=Amount Including VAT;
                                                              ESP=Importe IVA incl.];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 69  ;   ;Vendor Cr. Memo No. ;Code20        ;CaptionML=[ENU=Vendor Cr. Memo No.;
                                                              ESP=N§ abono proveedor] }
    { 70  ;   ;VAT Registration No.;Text20        ;CaptionML=[ENU=VAT Registration No.;
                                                              ESP=CIF/NIF] }
    { 72  ;   ;Sell-to Customer No.;Code20        ;TableRelation=Customer;
                                                   CaptionML=[ENU=Sell-to Customer No.;
                                                              ESP=Venta a-N§ cliente] }
    { 73  ;   ;Reason Code         ;Code10        ;TableRelation="Reason Code";
                                                   CaptionML=[ENU=Reason Code;
                                                              ESP=C¢d. auditor¡a] }
    { 74  ;   ;Gen. Bus. Posting Group;Code10     ;TableRelation="Gen. Business Posting Group";
                                                   CaptionML=[ENU=Gen. Bus. Posting Group;
                                                              ESP=Grupo contable negocio] }
    { 76  ;   ;Transaction Type    ;Code10        ;TableRelation="Transaction Type";
                                                   CaptionML=[ENU=Transaction Type;
                                                              ESP=Naturaleza transacci¢n] }
    { 77  ;   ;Transport Method    ;Code10        ;TableRelation="Transport Method";
                                                   CaptionML=[ENU=Transport Method;
                                                              ESP=Modo transporte] }
    { 78  ;   ;VAT Country/Region Code;Code10     ;TableRelation=Country/Region;
                                                   CaptionML=[ENU=VAT Country/Region Code;
                                                              ESP=C¢d. IVA pa¡s/regi¢n] }
    { 79  ;   ;Buy-from Vendor Name;Text50        ;CaptionML=[ENU=Buy-from Vendor Name;
                                                              ESP=Compra a-Nombre] }
    { 80  ;   ;Buy-from Vendor Name 2;Text50      ;CaptionML=[ENU=Buy-from Vendor Name 2;
                                                              ESP=Compra a-Nombre 2] }
    { 81  ;   ;Buy-from Address    ;Text50        ;CaptionML=[ENU=Buy-from Address;
                                                              ESP=Compra a-Direcci¢n] }
    { 82  ;   ;Buy-from Address 2  ;Text50        ;CaptionML=[ENU=Buy-from Address 2;
                                                              ESP=Compra a-Direcci¢n 2] }
    { 83  ;   ;Buy-from City       ;Text30        ;OnValidate=BEGIN
                                                                PostCode.ValidateCity("Buy-from City","Buy-from Post Code","Buy-from County");
                                                              END;

                                                   OnLookup=BEGIN
                                                              PostCode.LookUpCity("Buy-from City","Buy-from Post Code","Buy-from County",TRUE);
                                                            END;

                                                   CaptionML=[ENU=Buy-from City;
                                                              ESP=Compra a-Poblaci¢n] }
    { 84  ;   ;Buy-from Contact    ;Text50        ;CaptionML=[ENU=Buy-from Contact;
                                                              ESP=Compra a-Atenci¢n] }
    { 85  ;   ;Pay-to Post Code    ;Code20        ;TableRelation="Post Code";
                                                   OnValidate=BEGIN
                                                                PostCode.ValidatePostCode("Pay-to City","Pay-to Post Code","Pay-to County");
                                                              END;

                                                   OnLookup=BEGIN
                                                              PostCode.LookUpPostCode("Pay-to City","Pay-to Post Code","Pay-to County",TRUE);
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Pay-to Post Code;
                                                              ESP=Pago a-C.P.] }
    { 86  ;   ;Pay-to County       ;Text30        ;CaptionML=[ENU=Pay-to County;
                                                              ESP=Pago a-Provincia] }
    { 87  ;   ;Pay-to Country/Region Code;Code10  ;TableRelation=Country/Region;
                                                   CaptionML=[ENU=Pay-to Country/Region Code;
                                                              ESP=Pago a-C¢d. pa¡s/regi¢n] }
    { 88  ;   ;Buy-from Post Code  ;Code20        ;TableRelation="Post Code";
                                                   OnValidate=BEGIN
                                                                PostCode.ValidatePostCode("Buy-from City","Buy-from Post Code","Buy-from County");
                                                              END;

                                                   OnLookup=BEGIN
                                                              PostCode.LookUpPostCode("Buy-from City","Buy-from Post Code","Buy-from County",TRUE);
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Buy-from Post Code;
                                                              ESP=Compra a-C.P.] }
    { 89  ;   ;Buy-from County     ;Text30        ;CaptionML=[ENU=Buy-from County;
                                                              ESP=Compra a-Provincia] }
    { 90  ;   ;Buy-from Country/Region Code;Code10;TableRelation=Country/Region;
                                                   CaptionML=[ENU=Buy-from Country/Region Code;
                                                              ESP=Compra a-C¢d. pa¡s/regi¢n] }
    { 91  ;   ;Ship-to Post Code   ;Code20        ;TableRelation="Post Code";
                                                   OnValidate=BEGIN
                                                                PostCode.ValidatePostCode("Ship-to City","Ship-to Post Code","Ship-to County");
                                                              END;

                                                   OnLookup=BEGIN
                                                              PostCode.LookUpPostCode("Ship-to City","Ship-to Post Code","Ship-to County",TRUE);
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Ship-to Post Code;
                                                              ESP=Env¡o a-C.P.] }
    { 92  ;   ;Ship-to County      ;Text30        ;CaptionML=[ENU=Ship-to County;
                                                              ESP=Env¡o a-Provincia] }
    { 93  ;   ;Ship-to Country/Region Code;Code10 ;TableRelation=Country/Region;
                                                   CaptionML=[ENU=Ship-to Country/Region Code;
                                                              ESP=Env¡o a-C¢d. pa¡s/regi¢n] }
    { 94  ;   ;Bal. Account Type   ;Option        ;CaptionML=[ENU=Bal. Account Type;
                                                              ESP=Tipo contrapartida];
                                                   OptionCaptionML=[ENU=G/L Account,Bank Account;
                                                                    ESP=Cuenta,Banco];
                                                   OptionString=G/L Account,Bank Account }
    { 95  ;   ;Order Address Code  ;Code10        ;TableRelation="Order Address".Code WHERE (Vendor No.=FIELD(Buy-from Vendor No.));
                                                   CaptionML=[ENU=Order Address Code;
                                                              ESP=C¢d. direcci¢n pedido proveed.] }
    { 97  ;   ;Entry Point         ;Code10        ;TableRelation="Entry/Exit Point";
                                                   CaptionML=[ENU=Entry Point;
                                                              ESP=Puerto/Aerop. descarga] }
    { 98  ;   ;Correction          ;Boolean       ;CaptionML=[ENU=Correction;
                                                              ESP=Correcci¢n] }
    { 99  ;   ;Document Date       ;Date          ;CaptionML=[ENU=Document Date;
                                                              ESP=Fecha emisi¢n documento] }
    { 101 ;   ;Area                ;Code10        ;TableRelation=Area;
                                                   CaptionML=[ENU=Area;
                                                              ESP=C¢d. provincia] }
    { 102 ;   ;Transaction Specification;Code10   ;TableRelation="Transaction Specification";
                                                   CaptionML=[ENU=Transaction Specification;
                                                              ESP=Especificaci¢n transacci¢n] }
    { 104 ;   ;Payment Method Code ;Code10        ;TableRelation="Payment Method";
                                                   CaptionML=[ENU=Payment Method Code;
                                                              ESP=C¢d. forma pago] }
    { 107 ;   ;Pre-Assigned No. Series;Code10     ;TableRelation="No. Series";
                                                   CaptionML=[ENU=Pre-Assigned No. Series;
                                                              ESP=N§ serie preasignado] }
    { 108 ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              ESP=Nos. serie];
                                                   Editable=No }
    { 111 ;   ;Pre-Assigned No.    ;Code20        ;CaptionML=[ENU=Pre-Assigned No.;
                                                              ESP=N§ preasignado] }
    { 112 ;   ;User ID             ;Code20        ;TableRelation=User;
                                                   OnLookup=VAR
                                                              LoginMgt@1000 : Codeunit 418;
                                                            BEGIN
                                                              LoginMgt.LookupUserID("User ID");
                                                            END;

                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=User ID;
                                                              ESP=Id. usuario] }
    { 113 ;   ;Source Code         ;Code10        ;TableRelation="Source Code";
                                                   CaptionML=[ENU=Source Code;
                                                              ESP=C¢d. origen] }
    { 114 ;   ;Tax Area Code       ;Code20        ;TableRelation="Tax Area";
                                                   CaptionML=[ENU=Tax Area Code;
                                                              ESP=C¢d.  rea impuesto] }
    { 115 ;   ;Tax Liable          ;Boolean       ;CaptionML=[ENU=Tax Liable;
                                                              ESP=Sujeto a impuesto] }
    { 116 ;   ;VAT Bus. Posting Group;Code10      ;TableRelation="VAT Business Posting Group";
                                                   CaptionML=[ENU=VAT Bus. Posting Group;
                                                              ESP=Grupo registro IVA neg.] }
    { 119 ;   ;VAT Base Discount % ;Decimal       ;CaptionML=[ENU=VAT Base Discount %;
                                                              ESP=% Dto. base IVA];
                                                   DecimalPlaces=0:6;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 138 ;   ;Prepmt. Cr. Memo No. Series;Code10 ;TableRelation="No. Series";
                                                   CaptionML=[ENU=Prepmt. Cr. Memo No. Series;
                                                              ESP=N§ serie abono prepago] }
    { 140 ;   ;Prepayment Credit Memo;Boolean     ;CaptionML=[ENU=Prepayment Credit Memo;
                                                              ESP=Abono prepago] }
    { 141 ;   ;Prepayment Order No.;Code20        ;CaptionML=[ENU=Prepayment Order No.;
                                                              ESP=N§ pedido prepago] }
    { 5050;   ;Campaign No.        ;Code20        ;TableRelation=Campaign;
                                                   CaptionML=[ENU=Campaign No.;
                                                              ESP=N§ campa¤a] }
    { 5052;   ;Buy-from Contact No.;Code20        ;TableRelation=Contact;
                                                   CaptionML=[ENU=Buy-from Contact No.;
                                                              ESP=Compra a-N§ contacto] }
    { 5053;   ;Pay-to Contact No.  ;Code20        ;TableRelation=Contact;
                                                   CaptionML=[ENU=Pay-to Contact No.;
                                                              ESP=Pago a-N§ contacto] }
    { 5700;   ;Responsibility Center;Code10       ;TableRelation="Responsibility Center";
                                                   CaptionML=[ENU=Responsibility Center;
                                                              ESP=Centro responsabilidad] }
    { 6601;   ;Return Order No.    ;Code20        ;CaptionML=[ENU=Return Order No.;
                                                              ESP=N§ devoluci¢n] }
    { 6602;   ;Return Order No. Series;Code10     ;TableRelation="No. Series";
                                                   CaptionML=[ENU=Return Order No. Series;
                                                              ESP=N§ serie devoluci¢n] }
    { 10700;  ;Autocredit Memo No. ;Code20        ;CaptionML=[ENU=Autocredit Memo No.;
                                                              ESP=N§ autoabono generado];
                                                   Editable=No }
    { 10705;  ;Corrected Invoice No.;Code20       ;TableRelation="Purch. Inv. Header";
                                                   OnLookup=VAR
                                                              PurchaseInvoiceHeader@1100002 : Record 122;
                                                              PostedPurchaseInvoices@1100003 : Form 146;
                                                            BEGIN
                                                              PurchaseInvoiceHeader.SETCURRENTKEY("No.");
                                                              PurchaseInvoiceHeader.SETRANGE("Pay-to Vendor No.","Pay-to Vendor No.");
                                                              PurchaseInvoiceHeader.SETRANGE("No.","Corrected Invoice No.");

                                                              PostedPurchaseInvoices.SETTABLEVIEW(PurchaseInvoiceHeader);
                                                              PostedPurchaseInvoices.SETRECORD(PurchaseInvoiceHeader);
                                                              PostedPurchaseInvoices.LOOKUPMODE(TRUE);
                                                              IF PostedPurchaseInvoices.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                                                 PostedPurchaseInvoices.GETRECORD(PurchaseInvoiceHeader);
                                                              END;
                                                              CLEAR(PostedPurchaseInvoices);
                                                            END;

                                                   CaptionML=[ENU=Corrected Invoice No.;
                                                              ESP=N.§ factura corregida] }
    { 50001;  ;Tipo de Clave       ;Code10        ;TableRelation="Maestro de Claves".Clave;
                                                   CaptionML=ESP=Tipo de Clave;
                                                   Description=$002 "Maestro de Claves".Clave }
    { 7000000;;Applies-to Bill No. ;Code20        ;CaptionML=[ENU=Applies-to Bill No.;
                                                              ESP=Liq. por n§ efecto] }
    { 7000001;;Vendor Bank Acc. Code;Code10       ;TableRelation="Vendor Bank Account".Code WHERE (Vendor No.=FIELD(Pay-to Vendor No.));
                                                   CaptionML=[ENU=Vendor Bank Acc. Code;
                                                              ESP=C¢d. banco proveedor] }
    { 7000003;;Pay-at Code         ;Code20        ;TableRelation="Vendor Pmt. Address".Code WHERE (Vendor No.=FIELD(Pay-to Vendor No.));
                                                   CaptionML=[ENU=Pay-at Code;
                                                              ESP=Pago en-C¢digo] }
    { 7009700;;Cod. Grupo NCF      ;Code10        ;TableRelation="Grupo configuracion NCF".Codigo WHERE (Tipo grupo=CONST(Compras));
                                                   CaptionML=ESP=Cod. Grupo NCF;
                                                   Description=$005 "Grupo configuracion NCF".Codigo WHERE (Tipo grupo=CONST(Compras)) }
    { 7009703;;Comprobante Fiscal  ;Code20        ;CaptionML=ESP=Comprobante Fiscal;
                                                   Description=$005 }
    { 7009704;;Tipo factura compra ;Code10        ;TableRelation="Tipo factura compra RD";
                                                   CaptionML=ESP=Tipo factura compra;
                                                   Description=$006  Tipo factura compra RD;
                                                   Editable=No }
    { 7009705;;Codigo barras PDF   ;Code20        ;CaptionML=ESP=Codigo barras PDF;
                                                   Description=$007 Este codigo de barras ser  el nombre del fichero escaneado con la factura }
    { 99008500;;Date Received      ;Date          ;CaptionML=[ENU=Date Received;
                                                              ESP=Fecha recepci¢n] }
    { 99008501;;Time Received      ;Time          ;CaptionML=[ENU=Time Received;
                                                              ESP=Hora recepci¢n] }
    { 99008508;;BizTalk Purchase Credit Memo;Boolean;
                                                   CaptionML=[ENU=BizTalk Purchase Credit Memo;
                                                              ESP=Abono compra BizTalk] }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Pre-Assigned No.                         }
    {    ;Vendor Cr. Memo No.,Posting Date         }
    {    ;Return Order No.                         }
    {    ;Prepayment Order No.                    ;KeyGroups=PrePmt }
    {    ;Buy-from Vendor No.                     ;KeyGroups=INCOMING;
                                                   MaintainSQLIndex=No }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;No.,Buy-from Vendor No.,Pay-to Vendor No.,Posting Date,Posting Description }
  }
  CODE
  {
    VAR
      PurchCrMemoHeader@1000 : Record 124;
      PurchCommentLine@1001 : Record 43;
      VendLedgEntry@1002 : Record 25;
      PostCode@1007 : Record 225;
      PostPurchLinesDelete@1003 : Codeunit 364;
      DimMgt@1004 : Codeunit 408;
      ApprovalsMgt@1008 : Codeunit 439;

    PROCEDURE PrintRecordsAutoCrMemo@1100002(ShowRequestForm@1100000 : Boolean);
    VAR
      ReportSelection@1100001 : Record 77;
    BEGIN
      WITH PurchCrMemoHeader DO BEGIN
        COPY(Rec);
        ReportSelection.SETRANGE(Usage,ReportSelection.Usage::"P.AutoCr.Memo");
        ReportSelection.SETFILTER("Report ID",'<>0');
        ReportSelection.FIND('-');
        REPEAT
          REPORT.RUNMODAL(ReportSelection."Report ID",ShowRequestForm,FALSE,PurchCrMemoHeader);
        UNTIL ReportSelection.NEXT = 0;
      END;
    END;

    PROCEDURE PrintRecords@1(ShowRequestForm@1000 : Boolean);
    VAR
      ReportSelection@1001 : Record 77;
    BEGIN
      WITH PurchCrMemoHeader DO BEGIN
        COPY(Rec);
        ReportSelection.SETRANGE(Usage,ReportSelection.Usage::"P.Cr.Memo");
        ReportSelection.SETFILTER("Report ID",'<>0');
        ReportSelection.FIND('-');
        REPEAT
          REPORT.RUNMODAL(ReportSelection."Report ID",ShowRequestForm,FALSE,PurchCrMemoHeader);
        UNTIL ReportSelection.NEXT = 0;
      END;
    END;

    PROCEDURE Navigate@2();
    VAR
      NavigateForm@1000 : Form 344;
    BEGIN
      NavigateForm.SetDoc("Posting Date","No.");
      NavigateForm.RUN;
    END;

    PROCEDURE FechaLiquidacion@1103355000() : Date;
    VAR
      lrMov@1103355000 : Record 25;
      lrDet@1103355001 : Record 380;
    BEGIN
      // FechaLiquidacion
      // $004
      // 1. Primero localizamos el movimiento proveedor del abono

      lrMov.RESET;
      lrMov.SETCURRENTKEY("Document No.",
                          "Document Type",
                          "Vendor No.");
      lrMov.SETRANGE("Vendor No."   , "Pay-to Vendor No.");
      lrMov.SETRANGE("Document Type", lrMov."Document Type"::"Credit Memo");
      lrMov.SETRANGE("Document No." , "No.");
      IF lrMov.FIND('-') THEN BEGIN

        // 2. Buscar el movimiento detallado de liquidacion

        lrDet.SETCURRENTKEY("Vendor Ledger Entry No.");
        lrDet.SETRANGE("Vendor Ledger Entry No.", lrMov."Entry No.");
        lrDet.SETRANGE("Entry Type", lrDet."Entry Type"::Application);
        IF lrDet.FIND('-') THEN
          EXIT(lrDet."Posting Date")
        ELSE
          EXIT(0D);
      END;
    END;

    BEGIN
    {
      // INCOMING

      $001 Aumentar el campo Texto de registro a 80 caracteres

      $002 Se han agregado nuevos campos

          50001 Tipo de Clave Code10 "Maestro de Claves".Clave

      $003 Se ha creado nueva clave

          Campos : Buy-from Vendor No.
          KeyGroups : INCOMING
          MaintainSQLIndex : No

      $004 Se ha creado una nueva funcion FechaLiquidacion que retorna la fecha que se liquido el abono

      $005 AJS 29.12.2006, Comprobantes fiscales
         He creado un campo para almacenar el grupo al que pertenece el proveedor y otro para almacenar el numero de comprobante
         fiscal asignado

          7009700 Cod. Grupo NCF     Code10 "Grupo configuracion NCF".Codigo WHERE (Tipo grupo=CONST(Compras))
          7009703 Comprobante Fiscal Code20

      $006 AJS 07.02.2007, Declaracion ITBIS
         He creado un nuevo campo para poder indicar en cada factura a que tipo (de los prefijados por el gobierno)
         pertenece cada factura

          7009704 Tipo factura compra Code10, Tipo factura compra RD

      $007 AJS 27.02.2007, Escaneo documentos
         Hemos agregado un campo para almacenar el codigo de barras asignado al documento escaneado

          7009705 Codigo barras PDF Code20, Este codigo de barras ser  el nombre del fichero escaneado con la factura
    }
    END.
  }
}
