OBJECT Table 7010180 EX-Suplemento coste x reserva
{
  OBJECT-PROPERTIES
  {
    Date=17/06/13;
    Time=17:54:37;
    Modified=Yes;
    Version List=AIC2009;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               _CheckCosteTicket;

               _CheckStatusReserva;

               "ID Suplemento" := _GetNextID;

               rHis.NewRecord(Delegacion, "Num. Reserva", rHis."Tipo Registro"::Compra, FORMAT("ID Suplemento") + ' ' + Text0004,
                              '', "Codigo suplemento");

               CalculoSuplemento(0, 0); //. 0 - Indica mantenimiento, no retorna errores por falta de
                                     //.     configuracion de proveedor o IVA

               _LogManagement;
             END;

    OnModify=BEGIN
               _CheckStatusReserva;

               CalculoSuplemento(0, 0); //. 0 - Indica mantenimiento, no retorna errores por falta de
                                     //.     configuracion de proveedor o IVA

               _LogManagement;
             END;

    OnDelete=BEGIN
               _CheckStatusReserva;

               rHis.NewRecord(Delegacion, "Num. Reserva", rHis."Tipo Registro"::Compra, FORMAT("ID Suplemento") + ' ' + Text0005,
                              '', "Codigo suplemento");
             END;

    OnRename=BEGIN
               _CheckStatusReserva;
             END;

    CaptionML=[ENU=EX-Cost supplement x reservation;
               ESP=EX-Suplemento coste x reserva];
  }
  FIELDS
  {
    { 1   ;   ;Delegacion          ;Code10        ;TableRelation=Delegacion.Codigo;
                                                   CaptionML=[ENU=Local office;
                                                              ESP=Delegacion];
                                                   NotBlank=Yes;
                                                   Description=PK, Delegacion.Delegacion }
    { 3   ;   ;Num. Reserva        ;Integer       ;TableRelation="Reserva Excursion"."N§ Reserva";
                                                   CaptionML=[ENU=Reservation No.;
                                                              ESP=Num. Reserva];
                                                   Description=PK, "Reserva Excursion"."N§ Reserva" }
    { 5   ;   ;ID Suplemento       ;Integer       ;CaptionML=[ENU=Supplement ID;
                                                              ESP=ID Suplemento];
                                                   Description=PK }
    { 7   ;   ;Tipo contrato       ;Option        ;CaptionML=[ENU=Contract type;
                                                              ESP=Tipo contrato];
                                                   OptionCaptionML=[ENU=Excursion,Carrier,,Offical Guide;
                                                                    ESP=Excursion,Transportista,,Guia Oficial];
                                                   OptionString=Excursion,Transportista,,Guia Oficial;
                                                   Description=Excursion,Transportista,,Guia Oficial }
    { 9   ;   ;Num. Contrato       ;Code10        ;TableRelation="Contrato Compra Excursiones"."N§ Contrato compra" WHERE (Delegacion=FIELD(Delegacion),
                                                                                                                           Tipo Contrato=FIELD(Tipo contrato));
                                                   OnLookup=BEGIN
                                                              _LookupContrato;
                                                            END;

                                                   CaptionML=[ENU=Contract No.;
                                                              ESP=Num. Contrato];
                                                   Description="Contrato Compra Excursiones"."N§ Contrato compra" WHERE (Delegacion=FIELD(Delegacion),Tipo Contrato=FIELD(Tipo contrato)) }
    { 11  ;   ;Codigo suplemento   ;Code10        ;OnValidate=BEGIN
                                                                IF "Codigo suplemento" <> xRec."Codigo suplemento" THEN
                                                                  _InitPaxes;
                                                              END;

                                                   OnLookup=BEGIN
                                                              _LookupCodigoSup;
                                                            END;

                                                   CaptionML=[ENU=Supplement code;
                                                              ESP=Codigo suplemento] }
    { 13  ;   ;Adultos             ;Integer       ;OnValidate=BEGIN
                                                                IF Adultos <> xRec.Adultos THEN
                                                                  _CheckPaxesReserva;
                                                              END;

                                                   CaptionML=[ENU=Adults;
                                                              ESP=Adultos];
                                                   MinValue=0 }
    { 15  ;   ;Ni¤os               ;Integer       ;OnValidate=BEGIN
                                                                IF Ni¤os <> xRec.Ni¤os THEN
                                                                  _CheckPaxesReserva;
                                                              END;

                                                   CaptionML=[ENU=Childs;
                                                              ESP=Ni¤os];
                                                   MinValue=0 }
    { 17  ;   ;Precio adulto       ;Decimal       ;CaptionML=[ENU=Adult price;
                                                              ESP=Precio adulto];
                                                   Editable=No }
    { 19  ;   ;Precio ni¤o         ;Decimal       ;CaptionML=[ENU=Child price;
                                                              ESP=Precio ni¤o];
                                                   Editable=No }
    { 21  ;   ;Importe Base        ;Decimal       ;CaptionML=[ENU=Base Amount;
                                                              ESP=Importe Base];
                                                   Editable=No }
    { 23  ;   ;Importe IVA         ;Decimal       ;CaptionML=[ENU=VAT Amount;
                                                              ESP=Importe IVA];
                                                   Editable=No }
    { 25  ;   ;Importe Total       ;Decimal       ;CaptionML=[ENU=Total Amount;
                                                              ESP=Importe Total];
                                                   Editable=No }
    { 27  ;   ;ID Linea calculo    ;Integer       ;CaptionML=[ENU=ID Calculation line;
                                                              ESP=ID Linea calculo] }
    { 29  ;   ;ID Detalle adulto   ;Integer       ;CaptionML=[ENU=ID adult detail;
                                                              ESP=ID Detalle adulto] }
    { 31  ;   ;ID Detalle ni¤o     ;Integer       ;CaptionML=[ENU=ID child detail;
                                                              ESP=ID Detalle adulto] }
  }
  KEYS
  {
    {    ;Delegacion,Num. Reserva,ID Suplemento   ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text0001@1100217000 : TextConst 'ENU=This reservation is cancelled or refunded, cannot be modified.;ESP="Esta reserva esta anulada/reembolsada, no se puede modificar. "';
      Text0002@1100217001 : TextConst 'ENU=This reservation is confirmed, cannot be modified.;ESP=Esta reserva esta confirmada, no se puede modificar.';
      Text0003@1100217002 : TextConst 'ENU=You cannot indicate more persons than are in the reservation.;ESP=No se pueden indicar m s personas de las que hay en la reserva.';
      rHis@1100217003 : Record 7010255;
      Text0004@1100217004 : TextConst 'ENU=New cost supplement.;ESP=Nuevo suplemento de coste.';
      Text0005@1100217005 : TextConst 'ENU=Cost supplement deleted.;ESP=Borrado suplemento coste.';
      Text0006@1100217006 : TextConst 'ENU=It doesn''t exist the vendor %1.;ESP=No existe el proveedor %1.';
      Text0007@1100217007 : TextConst 'ENU=It doesn''t exist the VAT setup %1-%2;ESP=No existe la configuracion de IVA %1-%2';
      Text0008@1100217008 : TextConst 'ENU=Supplements may only be made by reservation if the calculation is per ticket.;ESP=Solo se pueden introducir suplementos por reserva si el calculo es por ticket.';
      Text0009@1100217009 : TextConst 'ENU=There is no price for supplement %1 in the contract %2.;ESP=No se encuentra precio para el suplemento %1 en el contrato %2.';

    LOCAL PROCEDURE _GetNextID@1100217000() : Integer;
    VAR
      lrSuplEx@1100217000 : Record 7010180;
    BEGIN
      lrSuplEx.RESET;
      lrSuplEx.SETRANGE(Delegacion    , Delegacion);
      lrSuplEx.SETRANGE("Num. Reserva", "Num. Reserva");
      IF lrSuplEx.FINDLAST THEN
        EXIT(lrSuplEx."ID Suplemento" + 10)
      ELSE
        EXIT(10);
    END;

    LOCAL PROCEDURE _LogManagement@1100217008();
    BEGIN
      IF "Tipo contrato" <> xRec."Tipo contrato" THEN
        rHis.NewRecord(Delegacion, "Num. Reserva", rHis."Tipo Registro"::Compra,
                       FORMAT("ID Suplemento") + ' ' + FIELDCAPTION("Tipo contrato"),
                       FORMAT(xRec."Tipo contrato"), FORMAT("Tipo contrato"));

      IF "Num. Contrato" <> xRec."Num. Contrato" THEN
        rHis.NewRecord(Delegacion, "Num. Reserva", rHis."Tipo Registro"::Compra,
                       FORMAT("ID Suplemento") + ' ' + FIELDCAPTION("Num. Contrato"),
                       xRec."Num. Contrato", "Num. Contrato");

      IF "Codigo suplemento" <> xRec."Codigo suplemento" THEN
        rHis.NewRecord(Delegacion, "Num. Reserva", rHis."Tipo Registro"::Compra,
                       FORMAT("ID Suplemento") + ' ' + FIELDCAPTION("Codigo suplemento"),
                       xRec."Codigo suplemento", "Codigo suplemento");

      IF Adultos <> xRec.Adultos THEN
        rHis.NewRecord(Delegacion, "Num. Reserva", rHis."Tipo Registro"::Compra,
                       FORMAT("ID Suplemento") + ' ' + FIELDCAPTION(Adultos),
                       FORMAT(xRec.Adultos), FORMAT(Adultos));

      IF Ni¤os <> xRec.Ni¤os THEN
        rHis.NewRecord(Delegacion, "Num. Reserva", rHis."Tipo Registro"::Compra,
                       FORMAT("ID Suplemento") + ' ' + FIELDCAPTION(Ni¤os),
                       FORMAT(xRec.Ni¤os), FORMAT(Ni¤os));
    END;

    LOCAL PROCEDURE _CheckCosteTicket@1100217007();
    VAR
      lrRsv@1100217000 : Record 7010162;
      lrExc@1100217001 : Record 7009710;
    BEGIN
      lrRsv.GET(Delegacion, "Num. Reserva");

      lrExc.GET(lrRsv.Producto);

      IF NOT lrExc."Coste x ticket" THEN
        ERROR(Text0008);
    END;

    LOCAL PROCEDURE _CheckStatusReserva@1100217002();
    VAR
      lrRsv@1100217000 : Record 7010162;
    BEGIN
      lrRsv.GET(Delegacion, "Num. Reserva");
      IF lrRsv.Anulada OR lrRsv.Reembolsada THEN
        ERROR(Text0001);

      IF lrRsv.Confirmada THEN
        ERROR(Text0002);
    END;

    LOCAL PROCEDURE _CheckPaxesReserva@1100217004();
    VAR
      lrRsv@1100217000 : Record 7010162;
    BEGIN
      lrRsv.GET(Delegacion, "Num. Reserva");
      IF (Adultos > lrRsv.Adultos) OR (Ni¤os > lrRsv.Ni¤os) THEN
        ERROR(Text0003);
    END;

    LOCAL PROCEDURE _InitPaxes@1100217001();
    VAR
      lrRsv@1100217000 : Record 7010162;
    BEGIN
      lrRsv.GET(Delegacion, "Num. Reserva");
      IF Adultos = 0 THEN
        Adultos := lrRsv.Adultos;
      IF Ni¤os = 0 THEN
        Ni¤os   := lrRsv.Ni¤os;
    END;

    LOCAL PROCEDURE _LookupContrato@1100217003();
    VAR
      lrContrato@1100217000 : Record 7010142;
      lrRsv@1100217001 : Record 7010162;
    BEGIN
      lrRsv.GET(Delegacion, "Num. Reserva");

      lrContrato.RESET;
      lrContrato.SETRANGE (Delegacion             , Delegacion);
      lrContrato.SETRANGE ("Tipo Contrato"        , "Tipo contrato");
      lrContrato.SETFILTER("Fecha inicio contrato", '<=%1', lrRsv."Fecha Excursion");
      lrContrato.SETFILTER("Fecha final contrato" , '>=%1', lrRsv."Fecha Excursion");

      IF "Tipo contrato" = "Tipo contrato"::Excursion THEN
        lrContrato.SETRANGE (Excursion               , lrRsv.Producto);

      IF FORM.RUNMODAL(0, lrContrato) = ACTION::LookupOK THEN
        VALIDATE("Num. Contrato", lrContrato."N§ Contrato compra");
    END;

    LOCAL PROCEDURE _LookupCodigoSup@1100217006();
    VAR
      lrPreEX@1100217000 : Record 7010151;
      lrPreTR@1100217001 : Record 7010150;
      lrPreGO@1100217002 : Record 7010154;
      lrRsv@1100217003 : Record 7010162;
      lrSuplEx@1100217004 : Record 7010144;
      lrSuplGO@1100217005 : Record 7010145;
    BEGIN
      lrRsv.GET(Delegacion, "Num. Reserva");

      CASE "Tipo contrato" OF
        "Tipo contrato"::Excursion:
        BEGIN
          //. Limpiamos las marcas
          lrSuplEx.CLEARMARKS;

          //. Buscamos en los precios para marcar los suplementos que tiene precio
          lrPreEX.RESET;
          lrPreEX.SETRANGE (Delegacion   , Delegacion);
          lrPreEX.SETRANGE ("N§ Contrato", "Num. Contrato");
          lrPreEX.SETRANGE ("Tipo precio", lrPreEX."Tipo precio"::Suplemento);
          lrPreEX.SETFILTER("Fecha desde", '<=%1', lrRsv."Fecha Excursion");
          lrPreEX.SETFILTER("Fecha hasta", '>=%1', lrRsv."Fecha Excursion");
          IF lrPreEX.FINDSET THEN
          BEGIN
            REPEAT
              IF lrSuplEx.GET(lrPreEX."Codigo Suplemento") THEN
                lrSuplEx.MARK(TRUE);
            UNTIL lrPreEX.NEXT = 0;
          END;

          //. Mostramos los suplementos disponibles
          lrSuplEx.MARKEDONLY(TRUE);
          IF FORM.RUNMODAL(0, lrSuplEx) = ACTION::LookupOK THEN
            VALIDATE("Codigo suplemento", lrSuplEx."Codigo Suplemento");
        END;
        "Tipo contrato"::Transportista:
        BEGIN
          //. Limpiamos las marcas
          lrSuplEx.CLEARMARKS;

          //. Buscamos en los precios para marcar los suplementos que tiene precio
          lrPreTR.RESET;
          lrPreTR.SETRANGE (Delegacion   , Delegacion);
          lrPreTR.SETRANGE ("N§ Contrato", "Num. Contrato");
          lrPreTR.SETRANGE ("Tipo precio", lrPreTR."Tipo precio"::Suplemento);
          lrPreTR.SETFILTER("Fecha desde", '<=%1', lrRsv."Fecha Excursion");
          lrPreTR.SETFILTER("Fecha hasta", '>=%1', lrRsv."Fecha Excursion");
          IF lrPreTR.FINDSET THEN
          BEGIN
            REPEAT
              IF lrSuplEx.GET(lrPreTR."Codigo suplemento") THEN
                lrSuplEx.MARK(TRUE);
            UNTIL lrPreEX.NEXT = 0;
          END;

          //. Mostramos los suplementos disponibles
          lrSuplEx.MARKEDONLY(TRUE);
          IF FORM.RUNMODAL(0, lrSuplEx) = ACTION::LookupOK THEN
            VALIDATE("Codigo suplemento", lrSuplEx."Codigo Suplemento");
        END;
        "Tipo contrato"::"Guia Oficial":
        BEGIN
          //. Limpiamos las marcas
          lrSuplGO.CLEARMARKS;

          //. Buscamos en los precios para marcar los suplementos que tiene precio
          lrPreGO.RESET;
          lrPreGO.SETRANGE (Delegacion   , Delegacion);
          lrPreGO.SETRANGE ("N§ Contrato", "Num. Contrato");
          lrPreGO.SETRANGE ("Tipo precio", lrPreGO."Tipo precio"::Suplemento);
          lrPreGO.SETFILTER("Fecha desde", '<=%1', lrRsv."Fecha Excursion");
          lrPreGO.SETFILTER("Fecha hasta", '>=%1', lrRsv."Fecha Excursion");
          IF lrPreGO.FINDSET THEN
          BEGIN
            REPEAT
              IF lrSuplGO.GET(lrPreGO."Codigo Suplemento") THEN
                lrSuplGO.MARK(TRUE);
            UNTIL lrPreGO.NEXT = 0;
          END;

          //. Mostramos los suplementos disponibles
          lrSuplGO.MARKEDONLY(TRUE);
          IF FORM.RUNMODAL(0, lrSuplGO) = ACTION::LookupOK THEN
            VALIDATE("Codigo suplemento", lrSuplGO."Codigo Suplemento");
        END;
      END;
    END;

    PROCEDURE CalculoSuplemento@1100217005(pwTipoCalculo@1100217003 : 'Mantenimiento,Calculo';pwNumServicio@1100217007 : Integer);
    VAR
      lrContrato@1100217000 : Record 7010142;
      lrVendor@1100217001 : Record 23;
      lrVATSetup@1100217002 : Record 325;
      lcCalculo@1100217006 : Codeunit 7010170;
      lwIVA@1100217004 : Decimal;
      lwPrecio@1100217005 : Boolean;
    BEGIN
      //. Si no estan rellenados los campos necesarios salimos del calculo
      IF ("Num. Contrato" = '') OR
         ("Codigo suplemento" = '') THEN
        EXIT;

      //. Buscamos el contrato, para obtener el proveedor y el IVA

      lrContrato.RESET;
      lrContrato.SETRANGE(Delegacion          , Delegacion);
      lrContrato.SETRANGE("N§ Contrato compra", "Num. Contrato");
      lrContrato.SETRANGE("Tipo Contrato"     , "Tipo contrato");
      lrContrato.FINDFIRST;

      IF (NOT lrVendor.GET(lrContrato.Proveedor)) AND
         (pwTipoCalculo = pwTipoCalculo::Calculo) THEN
          lcCalculo.InsertaError(pwNumServicio, STRSUBSTNO(Text0006, lrContrato.Proveedor));

      IF (NOT lrVATSetup.GET(lrVendor."VAT Bus. Posting Group", lrContrato."Grupo registro iva prod.")) AND
         (pwTipoCalculo = pwTipoCalculo::Calculo) THEN
          lcCalculo.InsertaError(pwNumServicio, STRSUBSTNO(Text0007,
                                                           lrVendor."VAT Bus. Posting Group",
                                                           lrContrato."Grupo registro iva prod."));

      lwIVA := 1 + (lrVATSetup."VAT+EC %" / 100);

      //. Buscamos los precios segun el tipo de contrato

      CASE lrContrato."Tipo Contrato" OF
        lrContrato."Tipo Contrato"::Transportista:
          lwPrecio := _BuscaPrecioTransportista("Precio adulto", "Precio ni¤o");
        lrContrato."Tipo Contrato"::Excursion:
          lwPrecio := _BuscaPrecioExcursion("Precio adulto", "Precio ni¤o");
        lrContrato."Tipo Contrato"::"Guia Oficial":
          lwPrecio := _BuscaPrecioGuiaOficial("Precio adulto", "Precio ni¤o");
      END;

      IF (NOT lwPrecio) AND
         (pwTipoCalculo = pwTipoCalculo::Calculo) THEN
        lcCalculo.InsertaError(pwNumServicio, STRSUBSTNO(Text0009, "Codigo suplemento", "Num. Contrato"));

      //. Calculamos el importe, teniendo en cuanto si esta con los impuestos incluidos o no

      IF lrContrato."Impuestos incluidos" THEN
      BEGIN
        "Importe Total" := (Adultos * "Precio adulto") + (Ni¤os * "Precio ni¤o");
        "Importe Base"  := ROUND("Importe Total" / lwIVA);
      END
      ELSE
      BEGIN
        "Importe Base"  := (Adultos * "Precio adulto") + (Ni¤os * "Precio ni¤o");
        "Importe Total" := ROUND("Importe Base" * lwIVA);
      END;

      "Importe IVA" := "Importe Total" - "Importe Base";
    END;

    LOCAL PROCEDURE _BuscaPrecioTransportista@1100217009(VAR pwPrecioAd@1100217000 : Decimal;VAR pwPrecioNi@1100217001 : Decimal) : Boolean;
    VAR
      lrRsv@1100217003 : Record 7010162;
      lrPre@1100217002 : Record 7010150;
    BEGIN
      pwPrecioAd := 0;
      pwPrecioNi := 0;

      lrRsv.GET(Delegacion, "Num. Reserva");

      lrPre.RESET;
      lrPre.SETRANGE (Delegacion       , Delegacion);
      lrPre.SETRANGE ("N§ Contrato"    , "Num. Contrato");
      lrPre.SETRANGE ("Tipo precio"    , lrPre."Tipo precio"::Suplemento);
      lrPre.SETRANGE (Producto         , lrRsv.Producto);
      lrPre.SETRANGE ("Codigo suplemento"  , "Codigo suplemento");
      lrPre.SETRANGE ("Tipo aplicacion", lrPre."Tipo aplicacion"::Pax);
      lrPre.SETFILTER("Fecha desde"    , '<=%1', lrRsv."Fecha Excursion");
      lrPre.SETFILTER("Fecha hasta"    , '>=%1', lrRsv."Fecha Excursion");
      lrPre.SETFILTER("Rango desde"    , '<=%1', Adultos+Ni¤os);
      lrPre.SETFILTER("Rango hasta"    , '>=%1', Adultos+Ni¤os);
      lrPre.SETRANGE (Activo           , TRUE);
      IF NOT lrPre.FINDFIRST THEN
        EXIT;

      pwPrecioAd := lrPre.Precio;
      pwPrecioNi := lrPre.Precio;

      EXIT(TRUE);
    END;

    LOCAL PROCEDURE _BuscaPrecioExcursion@1100217010(VAR pwPrecioAd@1100217001 : Decimal;VAR pwPrecioNi@1100217000 : Decimal) : Boolean;
    VAR
      lrPre@1100217002 : Record 7010151;
      lrRsv@1100217003 : Record 7010162;
    BEGIN
      pwPrecioAd := 0;
      pwPrecioNi := 0;

      lrRsv.GET(Delegacion, "Num. Reserva");

      lrPre.RESET;
      lrPre.SETRANGE (Delegacion         , Delegacion);
      lrPre.SETRANGE ("N§ Contrato"      , "Num. Contrato");
      lrPre.SETRANGE ("Tipo precio"      , lrPre."Tipo precio"::Suplemento);
      lrPre.SETRANGE ("Codigo Suplemento", "Codigo suplemento");
      lrPre.SETRANGE ("Tipo aplicacion"  , lrPre."Tipo aplicacion"::Pax);
      lrPre.SETFILTER("Fecha desde"      , '<=%1', lrRsv."Fecha Excursion");
      lrPre.SETFILTER("Fecha hasta"      , '>=%1', lrRsv."Fecha Excursion");
      lrPre.SETFILTER("Rango desde"      , '<=%1', Adultos+Ni¤os);
      lrPre.SETFILTER("Rango hasta"      , '>=%1', Adultos+Ni¤os);
      lrPre.SETRANGE (Activo             , TRUE);
      IF NOT lrPre.FINDFIRST THEN
        EXIT;

      pwPrecioAd := lrPre."Precio Adulto";
      pwPrecioNi := lrPre."Precio Ni¤o";

      EXIT(TRUE);
    END;

    LOCAL PROCEDURE _BuscaPrecioGuiaOficial@1100217011(VAR pwPrecioAd@1100217001 : Decimal;VAR pwPrecioNi@1100217000 : Decimal) : Boolean;
    VAR
      lrPre@1100217003 : Record 7010154;
      lrRsv@1100217002 : Record 7010162;
      lrExc@1100217004 : Record 7009710;
    BEGIN
      pwPrecioAd := 0;
      pwPrecioNi := 0;

      lrRsv.GET(Delegacion, "Num. Reserva");

      lrExc.GET(lrRsv.Producto);

      lrPre.RESET;
      lrPre.SETRANGE (Delegacion         , Delegacion);
      lrPre.SETRANGE ("N§ Contrato"      , "Num. Contrato");
      lrPre.SETRANGE ("Tipo precio"      , lrPre."Tipo precio"::Suplemento);
      lrPre.SETRANGE ("Codigo Suplemento", "Codigo suplemento");
      lrPre.SETRANGE ("Tipo Aplicacion"  , lrPre."Tipo Aplicacion"::Pax);
      lrPre.SETFILTER("Fecha desde"      , '<=%1', lrRsv."Fecha Excursion");
      lrPre.SETFILTER("Fecha hasta"      , '>=%1', lrRsv."Fecha Excursion");
      lrPre.SETFILTER("Rango desde"      , '<=%1', Adultos+Ni¤os);
      lrPre.SETFILTER("Rango hasta"      , '>=%1', Adultos+Ni¤os);
      lrPre.SETRANGE (Duracion           , lrExc.Duracion);
      lrPre.SETRANGE (Excursion          , lrRsv.Producto);
      lrPre.SETRANGE (Zona               , lrRsv."Zona Hotel");
      lrPre.SETRANGE (Activo             , TRUE);
      IF NOT lrPre.FINDFIRST THEN
      BEGIN
        //. Probamos por excursion/zona, sin duracion
        lrPre.SETRANGE (Duracion, lrPre.Duracion::" ");
        IF NOT lrPre.FINDFIRST THEN
        BEGIN
          //. Probamos solo la excursion, sin duracion ni zona
          lrPre.SETRANGE(Zona, '');
          IF NOT lrPre.FINDFIRST THEN
          BEGIN
            //. Probamos solo con la duracion/zona, sin excursion
            lrPre.SETRANGE (Duracion           , lrExc.Duracion);
            lrPre.SETRANGE (Zona               , lrRsv."Zona Hotel");
            lrPre.SETRANGE (Excursion          , '');
            IF NOT lrPre.FINDFIRST THEN
            BEGIN
              //. Probamos solo con la duracion sin excursion ni zona
              lrPre.SETRANGE(Zona, '');
              IF NOT lrPre.FINDFIRST THEN
                EXIT;
            END;
          END;
        END;
      END;

      pwPrecioAd := lrPre."Precio Adulto";
      pwPrecioNi := lrPre."Precio Ni¤o";

      EXIT(TRUE);
    END;

    BEGIN
    {
      $000 AJS 11062013 Nueva tabla para permitir la introduccion de suplementos de compra a nivel de reserva
    }
    END.
  }
}
