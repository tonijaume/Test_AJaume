OBJECT Table 99000880 Order Promising Line
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=NAVW16.00.01;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Order Promising Line;
               ESP=L¡n. compr. entrega ped.];
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;CaptionML=[ENU=Entry No.;
                                                              ESP=N§ mov.] }
    { 10  ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   CaptionML=[ENU=Item No.;
                                                              ESP=N§ producto] }
    { 11  ;   ;Variant Code        ;Code10        ;TableRelation="Item Variant".Code WHERE (Item No.=FIELD(Item No.));
                                                   CaptionML=[ENU=Variant Code;
                                                              ESP=C¢d. variante];
                                                   Editable=No }
    { 12  ;   ;Location Code       ;Code10        ;TableRelation=Location;
                                                   CaptionML=[ENU=Location Code;
                                                              ESP=C¢d. almac‚n];
                                                   Editable=No }
    { 13  ;   ;Quantity            ;Decimal       ;CaptionML=[ENU=Quantity;
                                                              ESP=Cantidad];
                                                   DecimalPlaces=0:5 }
    { 14  ;   ;Unit of Measure Code;Code10        ;TableRelation="Item Unit of Measure".Code WHERE (Item No.=FIELD(Item No.));
                                                   CaptionML=[ENU=Unit of Measure Code;
                                                              ESP=C¢d. unidad medida];
                                                   Editable=No }
    { 15  ;   ;Qty. per Unit of Measure;Decimal   ;CaptionML=[ENU=Qty. per Unit of Measure;
                                                              ESP=Cdad. por unidad medida];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 16  ;   ;Unavailable Quantity;Decimal       ;CaptionML=[ENU=Unavailable Quantity;
                                                              ESP=Cdad. no disponible];
                                                   DecimalPlaces=0:5 }
    { 17  ;   ;Quantity (Base)     ;Decimal       ;CaptionML=[ENU=Quantity (Base);
                                                              ESP=Cantidad (base)];
                                                   DecimalPlaces=0:5 }
    { 18  ;   ;Unavailable Quantity (Base);Decimal;CaptionML=[ENU=Unavailable Quantity (Base);
                                                              ESP=Cdad. (base) no disponible];
                                                   DecimalPlaces=0:5 }
    { 20  ;   ;Source Type         ;Option        ;CaptionML=[ENU=Source Type;
                                                              ESP=Tipo procedencia mov.];
                                                   OptionCaptionML=[ENU=" ,Sales,Requisition Line,Purchase,Item Journal,BOM Journal,Item Ledger Entry,Prod. Order Line,Prod. Order Component,Planning Line,Planning Component,Transfer,Service Order";
                                                                    ESP=" ,Ventas,L¡n. repos.,Compras,Diario prod.,Diario L.M.,Mov. prod.,L¡n. orden producc.,Comp. orden producc.,Planif. l¡n.,Planif. componente,Transfer.,Pedido servicio"];
                                                   OptionString=[ ,Sales,Requisition Line,Purchase,Item Journal,BOM Journal,Item Ledger Entry,Prod. Order Line,Prod. Order Component,Planning Line,Planning Component,Transfer,Service Order] }
    { 21  ;   ;Source Subtype      ;Integer       ;CaptionML=[ENU=Source Subtype;
                                                              ESP=Subtipo origen] }
    { 22  ;   ;Source ID           ;Code20        ;CaptionML=[ENU=Source ID;
                                                              ESP=Id. origen] }
    { 23  ;   ;Source Batch Name   ;Code10        ;CaptionML=[ENU=Source Batch Name;
                                                              ESP=Nombre secci¢n origen] }
    { 25  ;   ;Source Line No.     ;Integer       ;CaptionML=[ENU=Source Line No.;
                                                              ESP=N§ l¡n. origen] }
    { 30  ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              ESP=Descripci¢n] }
    { 40  ;   ;Requested Delivery Date;Date       ;OnValidate=VAR
                                                                SalesLine@1000 : Record 37;
                                                              BEGIN
                                                                SalesLine.GET("Source Subtype","Source ID","Source Line No.");
                                                                "Requested Shipment Date" := CalcReqShipDate(SalesLine);
                                                              END;

                                                   CaptionML=[ENU=Requested Delivery Date;
                                                              ESP=Fecha entrega requerida] }
    { 41  ;   ;Planned Delivery Date;Date         ;OnValidate=VAR
                                                                SalesLine@1000 : Record 37;
                                                              BEGIN
                                                                IF "Planned Delivery Date" <> 0D THEN BEGIN
                                                                  SalesLine.GET("Source Subtype","Source ID","Source Line No.");
                                                                  SalesLine.SuspendStatusCheck(TRUE);
                                                                  SalesLine.VALIDATE("Planned Delivery Date","Planned Delivery Date");
                                                                  "Planned Delivery Date" := SalesLine."Planned Delivery Date";
                                                                  "Earliest Shipment Date" := SalesLine."Shipment Date";
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Planned Delivery Date;
                                                              ESP=Fecha entrega planificada] }
    { 42  ;   ;Original Shipment Date;Date        ;CaptionML=[ENU=Original Shipment Date;
                                                              ESP=Fecha env¡o original] }
    { 43  ;   ;Earliest Shipment Date;Date        ;OnValidate=VAR
                                                                SalesLine@1000 : Record 37;
                                                              BEGIN
                                                                IF "Earliest Shipment Date" <> 0D THEN BEGIN
                                                                  SalesLine.GET("Source Subtype","Source ID","Source Line No.");
                                                                  SalesLine.SuspendStatusCheck(TRUE);
                                                                  SalesLine.Reserve := SalesLine.Reserve::Never; // Suspend automatic reservation.
                                                                  SalesLine.VALIDATE("Shipment Date","Earliest Shipment Date");
                                                                  "Earliest Shipment Date" := SalesLine."Shipment Date";
                                                                  "Planned Delivery Date" := SalesLine."Planned Delivery Date"
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Earliest Shipment Date;
                                                              ESP=Primera fecha env¡o] }
    { 44  ;   ;Requested Shipment Date;Date       ;CaptionML=[ENU=Requested Shipment Date;
                                                              ESP=Fecha de env¡o solicitada];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
    {    ;Requested Shipment Date                  }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE TransferFromSalesLine@2(VAR SalesLine@1000 : Record 37);
    BEGIN
      "Source Type" := "Source Type"::Sales;
      "Source Subtype" := SalesLine."Document Type";
      "Source ID" := SalesLine."Document No.";
      "Source Line No." := SalesLine."Line No.";

      "Item No." := SalesLine."No.";
      "Variant Code" := SalesLine."Variant Code";
      "Location Code" := SalesLine."Location Code";
      VALIDATE("Requested Delivery Date",SalesLine."Requested Delivery Date");
      "Original Shipment Date" := SalesLine."Shipment Date";
      Description := SalesLine.Description;
      Quantity := SalesLine."Outstanding Quantity";
      "Unit of Measure Code" := SalesLine."Unit of Measure Code";
      "Qty. per Unit of Measure" := SalesLine."Qty. per Unit of Measure";
      "Quantity (Base)" := SalesLine."Outstanding Qty. (Base)";
    END;

    PROCEDURE CalcReqShipDate@1(SalesLine@1000 : Record 37) : Date;
    BEGIN
      IF (SalesLine."Requested Delivery Date" <> 0D) AND
         (SalesLine."Promised Delivery Date" = 0D)
      THEN BEGIN
        SalesLine.SuspendStatusCheck(TRUE);
        SalesLine.VALIDATE("Requested Delivery Date",SalesLine."Requested Delivery Date");
      END;
      EXIT(SalesLine."Shipment Date");
    END;

    BEGIN
    END.
  }
}
