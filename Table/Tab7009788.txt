OBJECT Table 7009788 Contrato venta transfer
{
  OBJECT-PROPERTIES
  {
    Date=05/06/15;
    Time=14:56:52;
    Modified=Yes;
    Version List=AIC2009,COM;
  }
  PROPERTIES
  {
    OnInsert=VAR
               rContrato@1103355000 : Record 7009788;
             BEGIN
               rPar.LOCKTABLE;
               rPar.FINDFIRST;
               IF NOT rPar."Empresa Delegacion" THEN
                 ERROR(Text001);

               IF rPar."Contador Contrato venta trans" = '' THEN
                 rPar."Contador Contrato venta trans" := Text011 + '0000000'; //+$003
                 //-$003ERROR(Text002);

               IF "N§ Contrato Venta" = '' THEN BEGIN
                 REPEAT
                   rPar."Contador Contrato venta trans" := INCSTR(rPar."Contador Contrato venta trans");
                   rPar.MODIFY;
                 UNTIL NOT rContrato.GET(rPar.Delegacion, rPar."Contador Contrato venta trans");
                 "N§ Contrato Venta" := rPar."Contador Contrato venta trans";
               END;

               Delegacion := rPar.Delegacion;

               //+$009
               //-$013rSalesSetup.FINDFIRST;
               //-$013"Cod. Serie" := rSalesSetup."Posted Invoice Nos.";
             END;

    OnModify=BEGIN
               rPar.FINDFIRST;
               IF NOT rPar."Empresa Delegacion" THEN
                 ERROR(Text003);

               Confirmado := cCon.confirmar_contrato_venta(Rec);

               _SincronizaComercializadora(0); //+$017
             END;

    OnDelete=BEGIN
               rPar.FINDFIRST;
               IF NOT rPar."Empresa Delegacion" THEN
                 ERROR(Text004);

               //. No se puede borrar un contrato con ingresos confirmados
               _CheckIngresoConfirmado;

               _borrado_registro;

               _SincronizaComercializadora(1); //+$017

               cPar.intro_historico_contrato(Delegacion, "N§ Contrato Venta", rHis.Tipo::"Transfer Venta", Text005, Text006, '');
             END;

    OnRename=BEGIN
               ERROR(Text007);
             END;

    CaptionML=[ENU=Transfer sale contract;
               ESP=Contrato venta transfer];
    LookupFormID=Form7009919;
    DrillDownFormID=Form7009919;
  }
  FIELDS
  {
    { 1   ;   ;Delegacion          ;Code10        ;TableRelation=Delegacion.Codigo;
                                                   CaptionML=[ENU=Local Office;
                                                              ESP=Delegacion];
                                                   Description=PK, FK Delegacion;
                                                   Editable=No }
    { 3   ;   ;N§ Contrato Venta   ;Code10        ;CaptionML=[ENU=Sale contract No.;
                                                              ESP=N§ Contrato venta];
                                                   Description=PK }
    { 5   ;   ;Cliente             ;Code20        ;TableRelation=Customer.No.;
                                                   OnValidate=VAR
                                                                lrCli@1103355000 : Record 18;
                                                              BEGIN
                                                                IF Cliente <> xRec.Cliente THEN
                                                                BEGIN
                                                                  //+$005
                                                                  _CheckIngresoConfirmado;

                                                                  //. Rellenar los campos del contrato a partir de los del cliente

                                                                  IF Comercializadora THEN
                                                                  BEGIN
                                                                    rTTOO.GET(TourOperador);
                                                                    lrCli.CHANGECOMPANY(rTTOO."Empresa comercializadora");
                                                                  END;

                                                                  lrCli.RESET;
                                                                  lrCli.GET(Cliente);
                                                                  "Cod. Terminos Pago"  := lrCli."Payment Terms Code";
                                                                  "Cod. Formas Pago"    := lrCli."Payment Method Code";
                                                                  "Impuestos incluidos" := lrCli."Prices Including VAT"; //+$015
                                                                  "C¢d. divisa"         := lrCli."Currency Code";

                                                                  //switch;

                                                                  cPar.intro_historico_contrato(Delegacion, "N§ Contrato Venta", rHis.Tipo::"Transfer Venta",
                                                                                                FIELDCAPTION(Cliente),
                                                                                                xRec.Cliente, Cliente);
                                                                END;
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Client;
                                                              ESP=Cliente];
                                                   Description=FK Cliente }
    { 7   ;   ;TourOperador        ;Code10        ;TableRelation=TourOperador.TourOperador;
                                                   OnValidate=BEGIN
                                                                IF TourOperador <> xRec.TourOperador THEN
                                                                BEGIN
                                                                  //$014-
                                                                  rTTOO.RESET;
                                                                  rTTOO.GET(TourOperador);
                                                                  rTTOO.TESTFIELD(Bloqueado, FALSE);
                                                                  //$014+

                                                                  //+$017 <
                                                                  IF Comercializadora THEN
                                                                    rTTOO.TESTFIELD("Empresa comercializadora");
                                                                  //+$017 >

                                                                  //+$005
                                                                  _CheckIngresoConfirmado;

                                                                  VALIDATE(Confirmado, FALSE);

                                                                  _BuscarCliente; //$002

                                                                  cPar.intro_historico_contrato(Delegacion, "N§ Contrato Venta", rHis.Tipo::"Transfer Venta",
                                                                                                FIELDCAPTION(TourOperador),
                                                                                                xRec.TourOperador, TourOperador);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=TourOperator;
                                                              ESP=TourOperador];
                                                   NotBlank=Yes;
                                                   Description=FK TourOperador }
    { 9   ;   ;Fecha firma contrato;Date          ;OnValidate=BEGIN
                                                                IF "Fecha firma contrato" <> xRec."Fecha firma contrato" THEN
                                                                BEGIN
                                                                  _CheckDates;

                                                                  IF "Fecha inicio contrato" = 0D THEN
                                                                    VALIDATE("Fecha inicio contrato", "Fecha firma contrato");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Enrollment date;
                                                              ESP=Fecha firma contrato] }
    { 11  ;   ;Fecha inicio contrato;Date         ;OnValidate=BEGIN
                                                                IF "Fecha inicio contrato" <> xRec."Fecha inicio contrato" THEN
                                                                BEGIN
                                                                  _CheckDates;

                                                                  _CheckFechasPrecios;

                                                                  VALIDATE(Confirmado, FALSE);

                                                                  cPar.intro_historico_contrato(Delegacion, "N§ Contrato Venta", rHis.Tipo::"Transfer Venta",
                                                                                                FIELDCAPTION("Fecha inicio contrato"),
                                                                                                FORMAT(xRec."Fecha inicio contrato"), FORMAT("Fecha inicio contrato"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Starting Contract Date;
                                                              ESP=Fecha inicio contrato] }
    { 13  ;   ;Fecha final contrato;Date          ;OnValidate=BEGIN
                                                                IF "Fecha final contrato" <> xRec."Fecha final contrato" THEN
                                                                BEGIN
                                                                  _CheckDates;

                                                                  _CheckFechasPrecios;

                                                                  VALIDATE(Confirmado, FALSE);

                                                                  cPar.intro_historico_contrato(Delegacion, "N§ Contrato Venta", rHis.Tipo::"Transfer Venta",
                                                                                                FIELDCAPTION("Fecha final contrato"),
                                                                                                FORMAT(xRec."Fecha final contrato"), FORMAT("Fecha final contrato"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Ending Contract Date;
                                                              ESP=Fecha final contrato] }
    { 15  ;   ;Impuestos incluidos ;Boolean       ;OnValidate=BEGIN
                                                                IF "Impuestos incluidos" <> xRec."Impuestos incluidos" THEN
                                                                BEGIN
                                                                  //+$005
                                                                  _CheckIngresoConfirmado;

                                                                  cPar.intro_historico_contrato(Delegacion, "N§ Contrato Venta", rHis.Tipo::"Transfer Venta",
                                                                                                FIELDCAPTION("Impuestos incluidos"),
                                                                                                FORMAT(xRec."Impuestos incluidos"), FORMAT("Impuestos incluidos"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Included Taxes;
                                                              ESP=Impuestos incluidos] }
    { 17  ;   ;Gr. Registro IVA Producto;Code10   ;TableRelation="VAT Product Posting Group".Code;
                                                   OnValidate=BEGIN
                                                                IF "Gr. Registro IVA Producto" <> xRec."Gr. Registro IVA Producto" THEN
                                                                BEGIN
                                                                  //+$005
                                                                  _CheckIngresoConfirmado;

                                                                  //IF xRec."Gr. Registro IVA Producto" <> '' THEN
                                                                  //  switch;

                                                                  cPar.intro_historico_contrato(Delegacion, "N§ Contrato Venta", rHis.Tipo::"Transfer Venta",
                                                                                                FIELDCAPTION("Gr. Registro IVA Producto"),
                                                                                                xRec."Gr. Registro IVA Producto", "Gr. Registro IVA Producto");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=VAT Prod. posting group;
                                                              ESP=Gr. Registro IVA Producto];
                                                   Description=FK Grupo Registro IVA Producto }
    { 19  ;   ;Cod. Terminos Pago  ;Code10        ;TableRelation="Payment Terms".Code;
                                                   OnValidate=BEGIN
                                                                IF "Cod. Terminos Pago" <> xRec."Cod. Terminos Pago" THEN
                                                                BEGIN
                                                                  cPar.intro_historico_contrato(Delegacion, "N§ Contrato Venta", rHis.Tipo::"Transfer Venta",
                                                                                                FIELDCAPTION("Cod. Terminos Pago"),
                                                                                                  xRec."Cod. Terminos Pago", "Cod. Terminos Pago");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Payment terms code;
                                                              ESP=Cod. Terminos Pago];
                                                   Description=FK Terminos Pago }
    { 21  ;   ;Cod. Formas Pago    ;Code10        ;TableRelation="Payment Method".Code;
                                                   OnValidate=BEGIN
                                                                IF "Cod. Formas Pago" <> xRec."Cod. Formas Pago" THEN
                                                                BEGIN
                                                                  cPar.intro_historico_contrato(Delegacion, "N§ Contrato Venta", rHis.Tipo::"Transfer Venta",
                                                                                                FIELDCAPTION("Cod. Formas Pago"),
                                                                                                  xRec."Cod. Formas Pago", "Cod. Formas Pago");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Payment methods code;
                                                              ESP=Cod. Formas Pago];
                                                   Description=FK Formas Pago }
    { 23  ;   ;Tipo de Facturacion ;Option        ;OnValidate=BEGIN
                                                                IF "Tipo de Facturacion" <> xRec."Tipo de Facturacion" THEN
                                                                BEGIN
                                                                  //+$005
                                                                  _CheckIngresoConfirmado;

                                                                  //+$010
                                                                  IF "Tipo de Facturacion" = "Tipo de Facturacion"::Separado THEN
                                                                    VALIDATE("Tipo Precio", "Tipo Precio"::"Una via")
                                                                  ELSE
                                                                    VALIDATE("Tipo Precio", "Tipo Precio"::"Ida y Vuelta");
                                                                  //+$010

                                                                  cPar.intro_historico_contrato(Delegacion, "N§ Contrato Venta", rHis.Tipo::"Transfer Venta",
                                                                                                FIELDCAPTION("Fecha final contrato"),
                                                                                                FORMAT(xRec."Fecha final contrato"), FORMAT("Fecha final contrato"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Invoicing type;
                                                              ESP=Tipo de Facturacion];
                                                   OptionCaptionML=[ENU=Separated,Arrival;
                                                                    ESP=Separado,Llegada];
                                                   OptionString=Separado,Llegada }
    { 25  ;   ;Tipo Precio         ;Option        ;OnValidate=BEGIN
                                                                IF "Tipo Precio" <> xRec."Tipo Precio" THEN
                                                                BEGIN
                                                                  //+$008 <
                                                                  IF "Tipo Precio" = "Tipo Precio"::"Una via" THEN
                                                                    "Busca precios por" := "Busca precios por"::"Pasaje servicio";
                                                                  //+$008 >

                                                                  cPar.intro_historico_contrato(Delegacion, "N§ Contrato Venta", rHis.Tipo::"Transfer Venta",
                                                                                                FIELDCAPTION("Tipo Precio"),
                                                                                                FORMAT(xRec."Tipo Precio"), FORMAT("Tipo Precio"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Price type;
                                                              ESP=Tipo Precio];
                                                   OptionCaptionML=[ENU=One way,Roundtrip;
                                                                    ESP=Una via,Ida y Vuelta];
                                                   OptionString=Una via,Ida y Vuelta }
    { 27  ;   ;O_Cod. Serie        ;Code10        ;TableRelation="No. Series".Code;
                                                   CaptionML=[ENU=Serial code;
                                                              ESP=Cod. Serie];
                                                   Description=FK Serie }
    { 29  ;   ;Confirmado          ;Boolean       ;CaptionML=[ENU=Confirmed;
                                                              ESP=Confirmado];
                                                   Editable=No }
    { 31  ;   ;OLD_Minimos         ;Integer       ;CaptionML=[ENU=Minimums;
                                                              ESP=Minimos] }
    { 33  ;   ;OLD_Punto Origen/Destino;Code10    ;TableRelation=Aeropuerto.Aeropuerto WHERE (Aeropuerto Local=CONST(Yes));
                                                   CaptionML=[ENU=Origin/Destination zone;
                                                              ESP=Punto Origen/Destino];
                                                   Description=FK Aeropuerto }
    { 35  ;   ;C¢d. divisa         ;Code10        ;TableRelation=Currency;
                                                   OnValidate=BEGIN
                                                                IF "C¢d. divisa" <> xRec."C¢d. divisa" THEN
                                                                BEGIN
                                                                  _CheckIngresoConfirmado;

                                                                  cPar.intro_historico_contrato(Delegacion, "N§ Contrato Venta", rHis.Tipo::"Transfer Venta",
                                                                                                FIELDCAPTION("C¢d. divisa"),
                                                                                                xRec."C¢d. divisa", "C¢d. divisa");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Currency code;
                                                              ESP=C¢d. divisa];
                                                   Description=FK Divisa }
    { 37  ;   ;Busca precios por   ;Option        ;OnValidate=BEGIN
                                                                IF "Busca precios por" <> xRec."Busca precios por" THEN
                                                                  cPar.intro_historico_contrato(Delegacion, "N§ Contrato Venta", rHis.Tipo::"Transfer Venta",
                                                                                                  FIELDCAPTION("Busca precios por"),
                                                                                                  FORMAT(xRec."Busca precios por"), FORMAT("Busca precios por"));
                                                              END;

                                                   CaptionML=[ENU=Search prices by;
                                                              ESP=Busca precios por];
                                                   OptionCaptionML=[ENU=Service passengers,Arrival passengers;
                                                                    ESP=Pasaje servicio,Pasaje entrada];
                                                   OptionString=Pasaje servicio,Pasaje entrada }
    { 39  ;   ;Texto factura precio vehiculo;Text30;
                                                   OnValidate=BEGIN
                                                                IF "Texto factura precio vehiculo" <> xRec."Texto factura precio vehiculo" THEN
                                                                  cPar.intro_historico_contrato(Delegacion, "N§ Contrato Venta", rHis.Tipo::"Transfer Venta",
                                                                                                FIELDCAPTION("Texto factura precio vehiculo"),
                                                                                                FORMAT(xRec."Texto factura precio vehiculo"), FORMAT("Texto factura precio vehiculo"));
                                                              END;

                                                   CaptionML=[ENU=Vehicle price invoice text;
                                                              ESP=Texto factura precio vehiculo] }
    { 41  ;   ;Buscar precio multizona;Option     ;OnValidate=BEGIN
                                                                IF "Buscar precio multizona" <> xRec."Buscar precio multizona" THEN
                                                                  cPar.intro_historico_contrato(Delegacion, "N§ Contrato Venta", rHis.Tipo::"Transfer Venta",
                                                                                                FIELDCAPTION("Buscar precio multizona"),
                                                                                                FORMAT(xRec."Buscar precio multizona"), FORMAT("Buscar precio multizona"));
                                                              END;

                                                   CaptionML=[ENU=Multizone search prices by;
                                                              ESP=Buscar precio multizona por];
                                                   OptionCaptionML=[ENU=Service,Zone;
                                                                    ESP=Servicio,Zona];
                                                   OptionString=Servicio,Zona;
                                                   Description=$006 }
    { 43  ;   ;Comercializadora    ;Boolean       ;CaptionML=[ENU=Offshore;
                                                              ESP=Comercializadora] }
  }
  KEYS
  {
    {    ;Delegacion,N§ Contrato Venta            ;Clustered=Yes }
    {    ;TourOperador,Fecha inicio contrato,Fecha final contrato;
                                                   KeyGroups=RENUMERING }
    { No ;TourOperador                             }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1103355007 : TextConst 'ENU="To sign up sale contracts of transfers is only available in the local offices ";ESP=Solo es posible dar de alta contratos de venta de transfer en las delegaciones.';
      Text003@1103355009 : TextConst 'ENU=To modify sale contracts of transfer is only available  in the local offices;ESP=Solo es posible modificar contratos de venta de transfer en las delegaciones.';
      Text004@1103355010 : TextConst 'ENU=To cancel sale contracts of transfer is only available  in the local offices;ESP=Solo es posible dar de baja contratos de venta de transfer en las delegaciones.';
      Text005@1103355011 : TextConst 'ENU=Deleted;ESP=Borrado';
      Text006@1103355012 : TextConst 'ENU=Deleted register;ESP=Borrado registro';
      Text007@1103355013 : TextConst 'ENU=Unable to rename sale contracts of transfer;ESP=No es posible renombrar contratos de venta de transfer.';
      Text008@1103355014 : TextConst 'ENU=Starting date of the contract must be after;ESP=La fecha de inicio del contrato debe ser posterior a la';
      Text009@1103355015 : TextConst 'ENU=the signature date of the contract.;ESP=fecha de firma del contrato.';
      Text010@1103355016 : TextConst 'ENU=Starting date cannot be higher than final date;ESP=La fecha de inicio no puede ser posterior a la de final.';
      cPar@1103355000 : Codeunit 7009700;
      cCon@1103355001 : Codeunit 7009718;
      rPar@1103355002 : Record 7009700;
      rHis@1103355003 : Record 7009764;
      Text031@1100217001 : TextConst 'ENU=You must configure the accounts of the touroperator %1.;ESP=Debe configurar las cuentas del touroperador %1.';
      Text011@1100217000 : TextConst 'ENU=TSC;ESP=CVT';
      Text012@1100217002 : TextConst 'ENU=You cannot change sensitive data of a contract with incomes confirmed.;ESP=No se pueden cambiar datos sensibles de un contrato con ingresos confirmados.';
      rTTOO@1000000000 : Record 7009717;
      Text015@1000000001 : TextConst 'ENU=You can not apply the change of dates because some prices would fall outside the contract period;ESP=No se puede aplicar el cambio de fechas porque algunos precios quedarian fuera del periodo del contrato';

    LOCAL PROCEDURE _borrado_registro@2();
    VAR
      lrCom@1100253000 : Record 7009784;
      lrZona@1000000000 : Record 7009791;
      lrPre@1000000001 : Record 7009790;
    BEGIN
      // borrado_registro

      _CheckIngresoConfirmado; //+011

      lrPre.RESET;
      lrPre.SETRANGE(Delegacion   , Delegacion);
      lrPre.SETRANGE("N§ Contrato", "N§ Contrato Venta");
      IF lrPre.FINDSET(TRUE) THEN
        lrPre.DELETEALL;

      lrZona.RESET;
      lrZona.SETRANGE(Contrato, "N§ Contrato Venta");
      lrZona.SETRANGE("Tipo contrato", lrZona."Tipo contrato"::Venta);
      IF lrZona.FINDSET(TRUE) THEN
        lrZona.DELETEALL;

      //+$001
      lrCom.RESET;
      lrCom.SETRANGE(Delegacion     , Delegacion);
      lrCom.SETRANGE("N§ Contrato"  , "N§ Contrato Venta");
      lrCom.SETRANGE("Tipo Contrato", lrCom."Tipo Contrato"::"V Transfer");
      IF lrCom.FINDSET(TRUE) THEN
        lrCom.DELETEALL;
      //+$001
    END;

    LOCAL PROCEDURE _BuscarCliente@1100217000();
    VAR
      lrCtaTO@1100217000 : Record 7009705;
    BEGIN
      // _BuscarCliente

      lrCtaTO.RESET;
      IF NOT lrCtaTO.GET(Delegacion, TourOperador) THEN
      BEGIN
        IF NOT lrCtaTO.GET('', TourOperador) THEN
        BEGIN
          IF NOT lrCtaTO.GET(Delegacion, '') THEN
            ERROR(Text031);
        END;
      END;

      //+$017 <
      IF Comercializadora THEN
      BEGIN
        lrCtaTO.TESTFIELD("Cliente comercializadora");
        VALIDATE(Cliente, lrCtaTO."Cliente comercializadora");
      END
      ELSE
      BEGIN
        lrCtaTO.TESTFIELD("Cliente Transfer");
        VALIDATE(Cliente, lrCtaTO."Cliente Transfer");
      END;
      //+$017 >
    END;

    LOCAL PROCEDURE _CheckIngresoConfirmado@1100217001();
    VAR
      lrIngreso@1100217000 : Record 7009805;
    BEGIN
      // _CheckIngresoConfirmado

      lrIngreso.RESET;
      lrIngreso.SETRANGE(Concepto                 , 'TRNI');
      lrIngreso.SETRANGE("Num. Contrato"          , "N§ Contrato Venta"); //+$007

      //-$007lrIngreso.SETRANGE(TourOperador             , TourOperador);
      //-$007lrIngreso.SETRANGE(Fecha                    , "Fecha inicio contrato", "Fecha final contrato");
      //-$007lrIngreso.SETRANGE("Origen/Destino transfer", "Punto Origen/Destino");

      IF NOT lrIngreso.ISEMPTY THEN
        ERROR(Text012);
    END;

    LOCAL PROCEDURE _CheckDates@1000000000();
    BEGIN
      // _CheckDates

      IF ("Fecha firma contrato" <> 0D) AND ("Fecha inicio contrato" <>0D) THEN
        IF ("Fecha firma contrato" > "Fecha inicio contrato") THEN
          ERROR(Text008 + ' ' + Text009);

      IF ("Fecha final contrato" <> 0D) AND ("Fecha inicio contrato" <> 0D) THEN
        IF "Fecha inicio contrato" > "Fecha final contrato" THEN
          ERROR(Text010);
    END;

    LOCAL PROCEDURE _CheckFechasPrecios@1000000002();
    VAR
      lrPre@1000000000 : Record 7009790;
    BEGIN
      // _CheckFechasPrecios

      //. Vamos a comprobar que las fechas de los precios no queden fuera del contrato con un cambio de fechas

      lrPre.RESET;
      lrPre.SETRANGE (Delegacion   , Delegacion);
      lrPre.SETRANGE ("N§ Contrato", "N§ Contrato Venta");
      lrPre.SETFILTER("Fecha desde", '<%1', "Fecha inicio contrato");
      IF lrPre.FINDFIRST THEN
        ERROR(Text015);

      lrPre.RESET;
      lrPre.SETRANGE (Delegacion   , Delegacion);
      lrPre.SETRANGE ("N§ Contrato", "N§ Contrato Venta");
      lrPre.SETFILTER("Fecha hasta", '>%1', "Fecha final contrato");
      IF lrPre.FINDFIRST THEN
        ERROR(Text015);
    END;

    PROCEDURE GetComercializadora@1000000001(pwDelegacion@1000000000 : Code[10];pwNumContrato@1000000001 : Code[10]) : Boolean;
    VAR
      lrContrato@1000000002 : Record 7009788;
    BEGIN
      // _GetComercializadora

      lrContrato.GET(pwDelegacion, pwNumContrato);
      EXIT(lrContrato.Comercializadora);
    END;

    LOCAL PROCEDURE _SincronizaComercializadora@1000000003(pwOperacion@1000000003 : Integer);
    VAR
      lrRecRef@1000000001 : RecordRef;
      lrxRecRef@1000000000 : RecordRef;
      lcSincroCOM@1000000002 : Codeunit 7009793;
    BEGIN
      //+$016 <

      IF TourOperador = '' THEN //+$017
        EXIT;

      IF Comercializadora THEN
      BEGIN
        rTTOO.GET(TourOperador);

        lrRecRef.GETTABLE(Rec);
        lrxRecRef.GETTABLE(xRec);
        IF pwOperacion = 0 THEN
          lcSincroCOM.SincronizaTabla(lrRecRef, lrxRecRef, lcSincroCOM.OpModify, rTTOO."Empresa comercializadora")
        ELSE
          lcSincroCOM.SincronizaTabla(lrRecRef, lrxRecRef, lcSincroCOM.OpDelete, rTTOO."Empresa comercializadora");
      END;
      //+$016 >
    END;

    BEGIN
    {
      $001 AJS 20122011 Modifico la funcion borrado_registro para incluir los comentarios

      $002 AJS 28082012 El cliente se obtiene de la tabla de Cuentas TO-Delegacion

      $003 AJS 24122012 Automatizo el parametro de contador de contratos de compra

      $004 AJS 21022013 Al cambiar la divisa compruebo que no haya ingresos confirmados

      $005 AJS 07032013 Al cambiar Cliente o punto de origen compruebo que no haya ingresos confirmados

      $006 AJS 22112013 Nuevo campo "Buscar precio multizona", para indicar como se debe buscar el precio si el servicio
                        incluye m s de una zona de precio

      $007 AJS 26112013 La comprobacion de ingresos confirmados la hago por numero de contrato

      $008 AJS 28112103 Si el contrato es "Tipo precio"=Una via indicamos "Buscar precio por"=Pasaje servicio

      $009 AJS 02042014 Cuando creamos el contrato relleno la serie con la indicada por defecto en Gestion financiera

      $010 AJS 02042014 Hago que el campo Tipo Precio se rellene de manera coherente al campo "Tipo de Facturacion"

      $011 AJS 13052014 No dejamos borrar un contrato con ingresos confirmados

      $012 AJS 09062014 CNT-OC-14046, Marcamos como obsoleto el campo "Punto Origen/Destino" porque pasa a precios

      $013 AJS 23062014 Marco el campo Cod. Serie como obsoleto

      $014 MNC 22072014 CNT-LP-14054 No se pueden usar TTOO bloqueados

      $015 AJS 04102014 La marca de precios impuestos incluidos viene del cliente

      $016 AJS 12032015 CNT-CAR-14096, Nuevo campo Comercializadora

      $017 AJS 05062015 Corregir error en _SincronizaComercializadora cuando el touroperador esta en blanco
    }
    END.
  }
}
