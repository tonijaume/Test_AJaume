OBJECT Table 7010192 Precio Venta Circuito
{
  OBJECT-PROPERTIES
  {
    Date=06/03/14;
    Time=22:31:53;
    Modified=Yes;
    Version List=AIC2009;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               rPreVta.SETRANGE(Delegacion , Delegacion);
               rPreVta.SETRANGE("N§ Tarifa", "N§ Tarifa");
               IF rPreVta.FIND('+') THEN
                 Orden := rPreVta.Orden + 1
               ELSE
                 Orden := 1;

               rTarVta.GET(Delegacion, "N§ Tarifa");
               "C¢d. divisa" := rTarVta."C¢d. divisa";
             END;

    OnModify=VAR
               rHot@1103355000 : Record 7010193;
               rHot2@1103355001 : Record 7010193;
             BEGIN
               IF ("C¢d. Categoria" <> xRec."C¢d. Categoria") OR (Circuito <> xRec.Circuito) THEN BEGIN
                 rPreVta.RESET;
                 rPreVta.SETRANGE(Delegacion      , Delegacion);
                 rPreVta.SETRANGE("N§ Tarifa"     , "N§ Tarifa");
                 rPreVta.SETRANGE(Circuito        , xRec.Circuito);
                 rPreVta.SETRANGE("C¢d. Categoria", xRec."C¢d. Categoria");
                 rPreVta.SETFILTER(Orden          , '<>%1', Orden);
                 IF NOT rPreVta.FINDFIRST THEN BEGIN
                   rHot.SETRANGE(Delegacion      , Delegacion);
                   rHot.SETRANGE("N§ Tarifa"     , "N§ Tarifa");
                   rHot.SETRANGE(Circuito        , xRec.Circuito);
                   rHot.SETRANGE("C¢d. Categoria", xRec."C¢d. Categoria");
                   IF rHot.FIND('-') THEN
                     REPEAT
                       rHot2 := rHot;
                       rHot2.Circuito := Circuito;
                       rHot2."C¢d. Categoria" := "C¢d. Categoria";
                       rHot2.Activo := FALSE;
                       rHot2.MODIFY;
                     UNTIL rHot.NEXT = 0;
                 END;
               END;
               Activo := Activar_Precio;
             END;

    OnDelete=VAR
               rHot@1103355000 : Record 7010193;
               rHot2@1103355001 : Record 7010193;
             BEGIN
               rPreVta.RESET;
               rPreVta.SETRANGE(Delegacion      , Delegacion);
               rPreVta.SETRANGE("N§ Tarifa"     , "N§ Tarifa");
               rPreVta.SETRANGE(Circuito        , Circuito);
               rPreVta.SETRANGE("C¢d. Categoria", "C¢d. Categoria");
               rPreVta.SETFILTER(Orden          , '<>%1', Orden);
               IF NOT rPreVta.FINDFIRST THEN BEGIN
                 rHot.SETRANGE(Delegacion      , Delegacion);
                 rHot.SETRANGE("N§ Tarifa"     , "N§ Tarifa");
                 rHot.SETRANGE(Circuito        , Circuito);
                 rHot.SETRANGE("C¢d. Categoria", "C¢d. Categoria");
                 IF rHot.FIND('-') THEN
                   rHot.DELETEALL;
               END;
             END;

    CaptionML=[ENU=Roundtrip Sale Price;
               ESP=Precio Venta Circuito];
    LookupFormID=Form7010280;
    DrillDownFormID=Form7010280;
  }
  FIELDS
  {
    { 1   ;   ;Delegacion          ;Code10        ;TableRelation=Delegacion.Codigo;
                                                   CaptionML=[ENU=Local Office;
                                                              ESP=Delegacion];
                                                   NotBlank=Yes;
                                                   Description=PK, FK Delegacion;
                                                   Editable=No }
    { 3   ;   ;N§ Tarifa           ;Code10        ;TableRelation="Tarifa Venta Circuito"."N§ Tarifa";
                                                   CaptionML=[ENU=Tariff No.;
                                                              ESP=N§ Tarifa];
                                                   NotBlank=Yes;
                                                   Description=PK, FK Tarifa venta circuitos;
                                                   Editable=No }
    { 5   ;   ;Orden               ;Integer       ;CaptionML=[ENU=Order;
                                                              ESP=Orden];
                                                   Description=PK;
                                                   Editable=No }
    { 6   ;   ;Circuito            ;Code10        ;TableRelation="Maestro circuitos".Circuito;
                                                   OnValidate=BEGIN
                                                                IF Circuito <> xRec.Circuito THEN
                                                                  rHist.Intro_Historico(Delegacion, rHist.Tipo::Venta, "N§ Tarifa", Orden, FIELDCAPTION(Circuito),
                                                                                        xRec.Circuito, Circuito);
                                                              END;

                                                   CaptionML=[ENU=Circuit;
                                                              ESP=Circuito];
                                                   Description=FK Maestro Circuitos }
    { 7   ;   ;Fecha desde         ;Date          ;OnValidate=BEGIN
                                                                IF "Fecha desde" <> xRec."Fecha desde" THEN
                                                                BEGIN
                                                                  IF "Fecha hasta" <> 0D THEN
                                                                  BEGIN
                                                                    IF "Fecha desde" > "Fecha hasta" THEN
                                                                      ERROR(Text000);
                                                                  END;

                                                                  rHist.Intro_Historico(Delegacion, rHist.Tipo::Venta, "N§ Tarifa", Orden, FIELDCAPTION("Fecha desde"),
                                                                                        STRSUBSTNO('%1', xRec."Fecha desde"), STRSUBSTNO('%1', "Fecha desde"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Date From;
                                                              ESP=Fecha desde] }
    { 9   ;   ;Fecha hasta         ;Date          ;OnValidate=BEGIN
                                                                IF "Fecha hasta" <> xRec."Fecha hasta" THEN
                                                                BEGIN
                                                                  IF "Fecha desde" <> 0D THEN
                                                                  BEGIN
                                                                    IF "Fecha desde" > "Fecha hasta" THEN
                                                                      ERROR(Text001);
                                                                  END;

                                                                  rHist.Intro_Historico(Delegacion, rHist.Tipo::Venta, "N§ Tarifa", Orden, FIELDCAPTION("Fecha hasta"),
                                                                                        STRSUBSTNO('%1', xRec."Fecha hasta"), STRSUBSTNO('%1', "Fecha hasta"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Date To;
                                                              ESP=Fecha hasta] }
    { 11  ;   ;Pax desde           ;Integer       ;OnValidate=BEGIN
                                                                IF "Pax desde" <> xRec."Pax desde" THEN
                                                                BEGIN
                                                                  IF "Pax hasta" <> 0 THEN
                                                                  BEGIN
                                                                    IF "Pax desde" > "Pax hasta" THEN
                                                                      ERROR(Text002);
                                                                  END;

                                                                  rHist.Intro_Historico(Delegacion, rHist.Tipo::Venta, "N§ Tarifa", Orden, FIELDCAPTION("Pax desde"),
                                                                                        STRSUBSTNO('%1', xRec."Pax desde"), STRSUBSTNO('%1', "Pax desde"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Pax from;
                                                              ESP=Pax desde] }
    { 13  ;   ;Pax hasta           ;Integer       ;OnValidate=BEGIN
                                                                IF "Pax hasta" <> xRec."Pax hasta" THEN
                                                                BEGIN
                                                                  IF "Pax desde" <> 0 THEN
                                                                  BEGIN
                                                                    IF "Pax desde" > "Pax hasta" THEN
                                                                      ERROR(Text003);
                                                                  END;

                                                                  rHist.Intro_Historico(Delegacion, rHist.Tipo::Venta, "N§ Tarifa", Orden, FIELDCAPTION("Pax hasta"),
                                                                                        STRSUBSTNO('%1', xRec."Pax hasta"), STRSUBSTNO('%1', "Pax hasta"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Pax to;
                                                              ESP=Pax hasta] }
    { 15  ;   ;Precio              ;Decimal       ;OnValidate=BEGIN
                                                                IF Precio <> xRec.Precio THEN
                                                                  rHist.Intro_Historico(Delegacion, rHist.Tipo::Venta, "N§ Tarifa", Orden, FIELDCAPTION(Precio),
                                                                                        STRSUBSTNO('%1', xRec.Precio), STRSUBSTNO('%1', Precio));
                                                              END;

                                                   CaptionML=[ENU=Price;
                                                              ESP=Precio];
                                                   AutoFormatType=2;
                                                   AutoFormatExpr="C¢d. divisa" }
    { 17  ;   ;Tipo Precio         ;Option        ;OnValidate=BEGIN
                                                                IF "Tipo Precio" <> xRec."Tipo Precio" THEN
                                                                  rHist.Intro_Historico(Delegacion, rHist.Tipo::Venta, "N§ Tarifa", Orden, FIELDCAPTION("Tipo Precio"),
                                                                                        STRSUBSTNO('%1', xRec."Tipo Precio"), STRSUBSTNO('%1', "Tipo Precio"));
                                                              END;

                                                   CaptionML=[ENU=Price type;
                                                              ESP=Tipo Precio];
                                                   OptionCaptionML=[ENU=Pax,Vehicle;
                                                                    ESP=Pax,Vehiculo];
                                                   OptionString=Pax,Vehiculo }
    { 19  ;   ;Activo              ;Boolean       ;CaptionML=[ENU=Active;
                                                              ESP=Activo];
                                                   Editable=No }
    { 21  ;   ;Tipo Habitacion     ;Code10        ;TableRelation="Conversion Habitacion"."Habitacion cupo" WHERE (Delegacion=FIELD(Delegacion),
                                                                                                                  N§ Contrato=FIELD(N§ Tarifa),
                                                                                                                  Tipo contrato=CONST(Circuito));
                                                   OnValidate=BEGIN
                                                                IF "Tipo Habitacion" <> xRec."Tipo Habitacion" THEN
                                                                  rHist.Intro_Historico(Delegacion, rHist.Tipo::Venta, "N§ Tarifa", Orden, FIELDCAPTION("Tipo Habitacion"),
                                                                                        xRec."Tipo Habitacion", "Tipo Habitacion");
                                                              END;

                                                   CaptionML=[ENU=Room type;
                                                              ESP=Tipo Habitacion];
                                                   Description=FK Conversion Habitacion }
    { 23  ;   ;C¢d. Categoria      ;Code10        ;TableRelation="Codigo Circuito".Codigo WHERE (Tipo Codigo=CONST(Categoria));
                                                   OnValidate=BEGIN
                                                                IF "C¢d. Categoria" <> xRec."C¢d. Categoria" THEN
                                                                  rHist.Intro_Historico(Delegacion, rHist.Tipo::Venta, "N§ Tarifa", Orden, FIELDCAPTION("C¢d. Categoria"),
                                                                                        xRec."C¢d. Categoria", "C¢d. Categoria");
                                                              END;

                                                   CaptionML=[ENU=Category code;
                                                              ESP=C¢d. Categoria];
                                                   Description=FK Codigo circuito }
    { 25  ;   ;C¢d. divisa         ;Code10        ;TableRelation=Currency;
                                                   CaptionML=[ENU=Currency exchange;
                                                              ESP=C¢d. divisa];
                                                   Description=FK Divisa }
  }
  KEYS
  {
    {    ;Delegacion,N§ Tarifa,Orden              ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1103355003 : TextConst 'ENU=Date from cannot be higher than date to;ESP=La fecha desde no puede ser posterior a la fecha hasta.';
      Text001@1103355004 : TextConst 'ENU=Date to cannot be lower than date from;ESP=La fecha hasta no puede ser anterior a la fecha desde.';
      Text002@1103355005 : TextConst 'ENU=Pax from cannot be higher than pax to;ESP=El pax desde no puede ser superior al pax hasta.';
      Text003@1103355006 : TextConst 'ENU=Pax to cannot be lower than pax from;ESP=El pax hasta no puede ser inferior al pax desde.';
      Text004@1103355007 : TextConst 'ENU=This tariff overlaps with another already entered.;ESP=Esta tarifa se solapa con otra ya introducida.';
      Text005@1103355008 : TextConst 'ENU=Unable to activate the prices if the tariff is not confirmed;ESP=No se pueden activar los precios si la tarifa no est  confirmada';
      Text006@1103355009 : TextConst 'ENU=Date from cannot be lower than the initial date of the tariff;ESP=La fecha desde no puede ser inferior a la fecha de inicio de la tarifa';
      Text007@1103355010 : TextConst 'ENU=Date to cannot be higher than final date of the tariff;ESP=La fecha hasta no puede ser superior a la fecha final de la tarifa';
      rTarVta@1103355000 : Record 7010191;
      rPreVta@1103355001 : Record 7010192;
      rHist@1103355002 : Record 7010209;

    PROCEDURE Activar_Precio@1() : Boolean;
    VAR
      rPrec@1103355000 : Record 7010192;
    BEGIN
      // activar_Precio

      IF ("Fecha desde" = 0D) OR ("Fecha hasta" = 0D) OR ("Pax desde" = 0) OR ("Pax hasta" = 0) THEN
        EXIT(FALSE);

      IF NOT Comprobar_Tarifa THEN
        EXIT(FALSE);

      rPrec.RESET;
      rPrec.SETRANGE (Delegacion   , Delegacion);
      rPrec.SETRANGE ("N§ Tarifa"  , "N§ Tarifa");
      rPrec.SETFILTER(Orden        , '<>%1', Orden);
      rPrec.SETFILTER(Circuito     , Circuito);
      rPrec.SETRANGE ("Tipo Habitacion", "Tipo Habitacion");
      rPrec.SETRANGE ("C¢d. Categoria" , "C¢d. Categoria");
      rPrec.SETRANGE (Activo       , TRUE);

      rPrec.SETFILTER("Fecha desde", '<=%1', "Fecha desde");
      rPrec.SETFILTER("Fecha hasta", '>=%1', "Fecha desde");
      rPrec.SETRANGE ("Pax desde");
      rPrec.SETRANGE ("Pax hasta");
      IF rPrec.FINDFIRST THEN BEGIN
        rPrec.SETFILTER("Pax desde"  , '<=%1', "Pax desde");
        rPrec.SETFILTER("Pax hasta"  , '>=%1', "Pax desde");
        IF rPrec.FINDFIRST THEN BEGIN
          MESSAGE(Text004);
          EXIT(FALSE);
        END;
        rPrec.SETFILTER("Pax desde"  , '<=%1', "Pax hasta");
        rPrec.SETFILTER("Pax hasta"  , '>=%1', "Pax hasta");
        IF rPrec.FINDFIRST THEN BEGIN
          MESSAGE(Text004);
          EXIT(FALSE);
        END;
        rPrec.SETFILTER("Pax desde"  , '>=%1', "Pax desde");
        rPrec.SETFILTER("Pax hasta"  , '<=%1', "Pax hasta");
        IF rPrec.FINDFIRST THEN BEGIN
          MESSAGE(Text004);
          EXIT(FALSE);
        END;
        EXIT(TRUE);
      END;

      rPrec.SETFILTER("Fecha desde", '<=%1', "Fecha hasta");
      rPrec.SETFILTER("Fecha hasta", '>=%1', "Fecha hasta");
      rPrec.SETRANGE ("Pax desde");
      rPrec.SETRANGE ("Pax hasta");
      IF rPrec.FINDFIRST THEN BEGIN
        rPrec.SETFILTER("Pax desde"  , '<=%1', "Pax desde");
        rPrec.SETFILTER("Pax hasta"  , '>=%1', "Pax desde");
        IF rPrec.FINDFIRST THEN BEGIN
          MESSAGE(Text004);
          EXIT(FALSE);
        END;
        rPrec.SETFILTER("Pax desde"  , '<=%1', "Pax hasta");
        rPrec.SETFILTER("Pax hasta"  , '>=%1', "Pax hasta");
        IF rPrec.FINDFIRST THEN BEGIN
          MESSAGE(Text004);
          EXIT(FALSE);
        END;
        rPrec.SETFILTER("Pax desde"  , '>=%1', "Pax desde");
        rPrec.SETFILTER("Pax hasta"  , '<=%1', "Pax hasta");
        IF rPrec.FINDFIRST THEN BEGIN
          MESSAGE(Text004);
          EXIT(FALSE);
        END;
        EXIT(TRUE);
      END;

      rPrec.SETFILTER("Fecha desde", '>=%1', "Fecha desde");
      rPrec.SETFILTER("Fecha hasta", '<=%1', "Fecha hasta");
      rPrec.SETRANGE ("Pax desde");
      rPrec.SETRANGE ("Pax hasta");
      IF rPrec.FINDFIRST THEN BEGIN
        rPrec.SETFILTER("Pax desde"  , '<=%1', "Pax desde");
        rPrec.SETFILTER("Pax hasta"  , '>=%1', "Pax desde");
        IF rPrec.FINDFIRST THEN BEGIN
          MESSAGE(Text004);
          EXIT(FALSE);
        END;
        rPrec.SETFILTER("Pax desde"  , '<=%1', "Pax hasta");
        rPrec.SETFILTER("Pax hasta"  , '>=%1', "Pax hasta");
        IF rPrec.FINDFIRST THEN BEGIN
          MESSAGE(Text004);
          EXIT(FALSE);
        END;
        rPrec.SETFILTER("Pax desde"  , '>=%1', "Pax desde");
        rPrec.SETFILTER("Pax hasta"  , '<=%1', "Pax hasta");
        IF rPrec.FINDFIRST THEN BEGIN
          MESSAGE(Text004);
          EXIT(FALSE);
        END;
        EXIT(TRUE);
      END;

      EXIT(TRUE);
    END;

    PROCEDURE Comprobar_Tarifa@2() : Boolean;
    VAR
      rTar@1103355000 : Record 7010191;
    BEGIN
      IF NOT rTar.GET(Delegacion, "N§ Tarifa") THEN
        EXIT(FALSE);

      IF NOT rTar.Confirmado THEN BEGIN
        MESSAGE(Text005);
        EXIT(FALSE);
      END;

      IF "Fecha desde" < rTar."Fecha inicio" THEN BEGIN
        MESSAGE(Text006);
        EXIT(FALSE);
      END;

      IF "Fecha hasta" > rTar."Fecha final" THEN BEGIN
        MESSAGE(Text007);
        EXIT(FALSE);
      END;

      EXIT(TRUE);
    END;

    BEGIN
    END.
  }
}
