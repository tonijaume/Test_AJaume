OBJECT Table 99000754 Work Center
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=NAVW16.00.01,NAVES4.00;
  }
  PROPERTIES
  {
    DataCaptionFields=No.,Name;
    OnInsert=BEGIN
               MfgSetup.GET;
               IF "No." = '' THEN BEGIN
                 MfgSetup.TESTFIELD("Work Center Nos.");
                 NoSeriesMgt.InitSeries(MfgSetup."Work Center Nos.",xRec."No. Series",0D,"No.","No. Series");
               END;
               DimMgt.UpdateDefaultDim(
                 DATABASE::"Work Center","No.",
                 "Global Dimension 1 Code","Global Dimension 2 Code");
             END;

    OnModify=BEGIN
               "Last Date Modified" := TODAY;
             END;

    OnDelete=VAR
               ProdOrderRtngLine@1000 : Record 5409;
             BEGIN
               CapLedgEntry.SETCURRENTKEY("Work Center No.");
               CapLedgEntry.SETRANGE("Work Center No.","No.");
               IF CapLedgEntry.FIND('-') THEN
                 ERROR(Text010,TABLECAPTION,"No.",CapLedgEntry.TABLECAPTION);

               CalendarEntry.SETCURRENTKEY("Capacity Type","No.");
               CalendarEntry.SETRANGE("Capacity Type",CalendarEntry."Capacity Type"::"Work Center");
               CalendarEntry.SETRANGE("No.","No.");
               CalendarEntry.DELETEALL;

               CalAbsentEntry.SETCURRENTKEY("Capacity Type","No.");
               CalAbsentEntry.SETRANGE("Capacity Type",CalendarEntry."Capacity Type"::"Work Center");
               CalAbsentEntry.SETRANGE("No.","No.");
               CalAbsentEntry.DELETEALL;

               MfgCommentLine.SETRANGE("Table Name",MfgCommentLine."Table Name"::"Work Center");
               MfgCommentLine.SETRANGE("No.","No.");
               MfgCommentLine.DELETEALL;

               ProdOrderRtngLine.SETCURRENTKEY("Work Center No.");
               ProdOrderRtngLine.SETRANGE("Work Center No.","No.");
               IF ProdOrderRtngLine.FIND('-') THEN
                 ERROR(Text000);

               DimMgt.DeleteDefaultDim(DATABASE::"Work Center","No.");
             END;

    OnRename=BEGIN
               "Last Date Modified" := TODAY;
             END;

    CaptionML=[ENU=Work Center;
               ESP=Centro trabajo];
    LookupFormID=Form99000755;
    DrillDownFormID=Form99000755;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;AltSearchField=Search Name;
                                                   CaptionML=[ENU=No.;
                                                              ESP=N§] }
    { 3   ;   ;Name                ;Text30        ;OnValidate=BEGIN
                                                                "Search Name" := Name;
                                                              END;

                                                   CaptionML=[ENU=Name;
                                                              ESP=Nombre] }
    { 4   ;   ;Search Name         ;Code30        ;CaptionML=[ENU=Search Name;
                                                              ESP=Alias] }
    { 5   ;   ;Name 2              ;Text30        ;CaptionML=[ENU=Name 2;
                                                              ESP=Nombre 2] }
    { 6   ;   ;Address             ;Text50        ;CaptionML=[ENU=Address;
                                                              ESP=Direcci¢n] }
    { 7   ;   ;Address 2           ;Text50        ;CaptionML=[ENU=Address 2;
                                                              ESP=Direcci¢n 2] }
    { 8   ;   ;City                ;Text30        ;OnValidate=BEGIN
                                                                PostCode.ValidateCity(City,"Post Code",County);
                                                              END;

                                                   OnLookup=BEGIN
                                                              PostCode.LookUpCity(City,"Post Code",County,TRUE);
                                                            END;

                                                   CaptionML=[ENU=City;
                                                              ESP=Poblaci¢n] }
    { 9   ;   ;Post Code           ;Code20        ;TableRelation="Post Code";
                                                   OnValidate=BEGIN
                                                                PostCode.ValidatePostCode(City,"Post Code",County);
                                                              END;

                                                   OnLookup=BEGIN
                                                              PostCode.LookUpPostCode(City,"Post Code",County,TRUE);
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Post Code;
                                                              ESP=C.P.] }
    { 12  ;   ;Alternate Work Center;Code20       ;TableRelation="Work Center";
                                                   CaptionML=[ENU=Alternate Work Center;
                                                              ESP=Alternar centro trab.] }
    { 14  ;   ;Work Center Group Code;Code10      ;TableRelation="Work Center Group";
                                                   OnValidate=VAR
                                                                ProdOrderRtngLine@1000 : Record 5409;
                                                                ProdOrderCapNeedEntry@1001 : Record 5410;
                                                                PlanningRtngLine@1002 : Record 99000830;
                                                              BEGIN
                                                                IF "Work Center Group Code" = xRec."Work Center Group Code" THEN
                                                                  EXIT;

                                                                CalendarEntry.SETCURRENTKEY("Work Center No.");
                                                                CalendarEntry.SETRANGE("Work Center No.","No.");
                                                                IF NOT CalendarEntry.FIND('-') THEN
                                                                  EXIT;

                                                                IF CurrFieldNo <> 0 THEN
                                                                  IF NOT CONFIRM(Text001,FALSE,FIELDCAPTION("Work Center Group Code"))
                                                                  THEN BEGIN
                                                                    "Work Center Group Code" := xRec."Work Center Group Code";
                                                                    EXIT;
                                                                  END;

                                                                Window.OPEN(
                                                                  Text002 +
                                                                  Text003 +
                                                                  Text004 +
                                                                  Text006);

                                                                // Capacity Calendar
                                                                EntryCounter := 0;
                                                                NoOfRecords := CalendarEntry.COUNTAPPROX;
                                                                IF CalendarEntry.FIND('-') THEN
                                                                  REPEAT
                                                                    EntryCounter := EntryCounter + 1;
                                                                    Window.UPDATE(1,EntryCounter);
                                                                    Window.UPDATE(2,ROUND(EntryCounter / NoOfRecords * 10000,1));
                                                                    CalendarEntry."Work Center Group Code" := "Work Center Group Code";
                                                                    CalendarEntry.MODIFY;
                                                                  UNTIL CalendarEntry.NEXT = 0;

                                                                // Capacity Absence
                                                                EntryCounter := 0;
                                                                CalAbsentEntry.SETCURRENTKEY("Work Center No.");
                                                                CalAbsentEntry.SETRANGE("Work Center No.","No.");
                                                                NoOfRecords := CalAbsentEntry.COUNTAPPROX;
                                                                IF CalAbsentEntry.FIND('-') THEN
                                                                  REPEAT
                                                                    EntryCounter := EntryCounter + 1;
                                                                    Window.UPDATE(3,EntryCounter);
                                                                    Window.UPDATE(4,ROUND(EntryCounter / NoOfRecords * 10000,1));
                                                                    CalAbsentEntry."Work Center Group Code" := "Work Center Group Code";
                                                                    CalAbsentEntry.MODIFY;
                                                                  UNTIL CalAbsentEntry.NEXT = 0;

                                                                EntryCounter := 0;

                                                                ProdOrderCapNeedEntry.SETCURRENTKEY("Work Center No.");
                                                                ProdOrderCapNeedEntry.SETRANGE("Work Center No.","No.");
                                                                NoOfRecords := ProdOrderCapNeedEntry.COUNTAPPROX;
                                                                IF ProdOrderCapNeedEntry.FIND('-') THEN
                                                                  REPEAT
                                                                    EntryCounter := EntryCounter + 1;
                                                                    Window.UPDATE(7,EntryCounter);
                                                                    Window.UPDATE(8,ROUND(EntryCounter / NoOfRecords * 10000,1));
                                                                    ProdOrderCapNeedEntry."Work Center Group Code" := "Work Center Group Code";
                                                                    ProdOrderCapNeedEntry.MODIFY;
                                                                  UNTIL ProdOrderCapNeedEntry.NEXT = 0;

                                                                MODIFY;

                                                                RtngLine.SETCURRENTKEY("Work Center No.");
                                                                RtngLine.SETRANGE("Work Center No.","No.");
                                                                RtngLine.MODIFYALL("Work Center Group Code","Work Center Group Code");

                                                                PlanningRtngLine.SETCURRENTKEY("Work Center No.");
                                                                PlanningRtngLine.SETRANGE("Work Center No.","No.");
                                                                PlanningRtngLine.MODIFYALL("Work Center Group Code","Work Center Group Code");

                                                                ProdOrderRtngLine.SETCURRENTKEY("Work Center No.");
                                                                ProdOrderRtngLine.SETRANGE("Work Center No.","No.");
                                                                ProdOrderRtngLine.MODIFYALL("Work Center Group Code","Work Center Group Code");

                                                                Window.CLOSE;
                                                              END;

                                                   CaptionML=[ENU=Work Center Group Code;
                                                              ESP=C¢d. grupo centro trab.] }
    { 16  ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Global Dimension 1 Code");
                                                              END;

                                                   CaptionML=[ENU=Global Dimension 1 Code;
                                                              ESP=C¢d. dimensi¢n global 1];
                                                   CaptionClass='1,1,1' }
    { 17  ;   ;Global Dimension 2 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2,"Global Dimension 2 Code");
                                                              END;

                                                   CaptionML=[ENU=Global Dimension 2 Code;
                                                              ESP=C¢d. dimensi¢n global 2];
                                                   CaptionClass='1,1,2' }
    { 18  ;   ;Subcontractor No.   ;Code20        ;TableRelation=Vendor;
                                                   CaptionML=[ENU=Subcontractor No.;
                                                              ESP=N§ subcontratista] }
    { 19  ;   ;Direct Unit Cost    ;Decimal       ;OnValidate=BEGIN
                                                                VALIDATE("Indirect Cost %");
                                                              END;

                                                   CaptionML=[ENU=Direct Unit Cost;
                                                              ESP=Coste unit. directo];
                                                   MinValue=0;
                                                   AutoFormatType=2 }
    { 20  ;   ;Indirect Cost %     ;Decimal       ;OnValidate=BEGIN
                                                                GetGLSetup;
                                                                "Unit Cost" :=
                                                                  ROUND(
                                                                    "Direct Unit Cost" * (1 + "Indirect Cost %" / 100) + "Overhead Rate",
                                                                    GLSetup."Unit-Amount Rounding Precision");
                                                              END;

                                                   CaptionML=[ENU=Indirect Cost %;
                                                              ESP=% Coste indirecto];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 21  ;   ;Unit Cost           ;Decimal       ;OnValidate=BEGIN
                                                                GetGLSetup;
                                                                "Direct Unit Cost" :=
                                                                  ROUND(("Unit Cost" - "Overhead Rate") / (1 + "Indirect Cost %" / 100),
                                                                    GLSetup."Unit-Amount Rounding Precision");
                                                              END;

                                                   CaptionML=[ENU=Unit Cost;
                                                              ESP=Coste unitario];
                                                   DecimalPlaces=2:5;
                                                   MinValue=0;
                                                   AutoFormatType=2 }
    { 22  ;   ;Queue Time          ;Decimal       ;CaptionML=[ENU=Queue Time;
                                                              ESP=Tiempo cola];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 23  ;   ;Queue Time Unit of Meas. Code;Code10;
                                                   TableRelation="Capacity Unit of Measure";
                                                   CaptionML=[ENU=Queue Time Unit of Meas. Code;
                                                              ESP=C¢d. udad. medida tiempo cola] }
    { 26  ;   ;Last Date Modified  ;Date          ;CaptionML=[ENU=Last Date Modified;
                                                              ESP=Fecha £lt. modificaci¢n];
                                                   Editable=No }
    { 27  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Manufacturing Comment Line" WHERE (Table Name=CONST(Work Center),
                                                                                                         No.=FIELD(No.)));
                                                   CaptionML=[ENU=Comment;
                                                              ESP=Comentario];
                                                   Editable=No }
    { 30  ;   ;Unit of Measure Code;Code10        ;TableRelation="Capacity Unit of Measure";
                                                   OnValidate=BEGIN
                                                                IF "Unit of Measure Code" = xRec."Unit of Measure Code" THEN
                                                                  EXIT;

                                                                CALCFIELDS("Prod. Order Need (Qty.)");
                                                                IF "Prod. Order Need (Qty.)" <> 0 THEN
                                                                  ERROR(Text007,FIELDCAPTION("Unit of Measure Code"));

                                                                IF xRec."Unit of Measure Code" <> '' THEN
                                                                  IF CurrFieldNo <> 0 THEN
                                                                    IF NOT CONFIRM(Text001,FALSE,FIELDCAPTION("Unit of Measure Code"))
                                                                    THEN BEGIN
                                                                      "Unit of Measure Code" := xRec."Unit of Measure Code";
                                                                      EXIT;
                                                                    END;

                                                                Window.OPEN(
                                                                  Text008 +
                                                                  Text009);

                                                                MODIFY;

                                                                // Capacity Calendar
                                                                EntryCounter := 0;
                                                                CalendarEntry.SETCURRENTKEY("Work Center No.");
                                                                CalendarEntry.SETRANGE("Work Center No.","No.");
                                                                NoOfRecords := CalendarEntry.COUNTAPPROX;
                                                                IF CalendarEntry.FIND('-') THEN
                                                                  REPEAT
                                                                    EntryCounter := EntryCounter + 1;
                                                                    Window.UPDATE(1,EntryCounter);
                                                                    Window.UPDATE(2,ROUND(EntryCounter / NoOfRecords * 10000,1));
                                                                    CalendarEntry.VALIDATE("Ending Time");
                                                                    CalendarEntry.MODIFY;
                                                                  UNTIL CalendarEntry.NEXT = 0;

                                                                Window.CLOSE;
                                                              END;

                                                   CaptionML=[ENU=Unit of Measure Code;
                                                              ESP=C¢d. unidad medida] }
    { 31  ;   ;Capacity            ;Decimal       ;InitValue=1;
                                                   CaptionML=[ENU=Capacity;
                                                              ESP=Capacidad];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 32  ;   ;Efficiency          ;Decimal       ;InitValue=100;
                                                   CaptionML=[ENU=Efficiency;
                                                              ESP=Eficiencia];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 33  ;   ;Maximum Efficiency  ;Decimal       ;CaptionML=[ENU=Maximum Efficiency;
                                                              ESP=Eficiencia m xima];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 34  ;   ;Minimum Efficiency  ;Decimal       ;CaptionML=[ENU=Minimum Efficiency;
                                                              ESP=Eficiencia m¡nima];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 35  ;   ;Calendar Rounding Precision;Decimal;InitValue=0,0001;
                                                   CaptionML=[ENU=Calendar Rounding Precision;
                                                              ESP=Precisi¢n redondeo calendario];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0,0001;
                                                   NotBlank=Yes }
    { 36  ;   ;Simulation Type     ;Option        ;CaptionML=[ENU=Simulation Type;
                                                              ESP=Tipo simulaci¢n];
                                                   OptionCaptionML=[ENU=Moves,Moves When Necessary,Critical;
                                                                    ESP=En Movimiento,En movim. si es necesario,Cr¡tico.];
                                                   OptionString=Moves,Moves When Necessary,Critical }
    { 37  ;   ;Shop Calendar Code  ;Code10        ;TableRelation="Shop Calendar";
                                                   CaptionML=[ENU=Shop Calendar Code;
                                                              ESP=C¢d. calend. planta] }
    { 38  ;   ;Blocked             ;Boolean       ;CaptionML=[ENU=Blocked;
                                                              ESP=Bloqueado] }
    { 39  ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Date Filter;
                                                              ESP=Filtro fecha] }
    { 40  ;   ;Work Shift Filter   ;Code10        ;FieldClass=FlowFilter;
                                                   TableRelation="Work Shift";
                                                   CaptionML=[ENU=Work Shift Filter;
                                                              ESP=Filtro turno trabajo] }
    { 41  ;   ;Capacity (Total)    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Calendar Entry"."Capacity (Total)" WHERE (Capacity Type=CONST(Work Center),
                                                                                                              No.=FIELD(No.),
                                                                                                              Work Shift Code=FIELD(Work Shift Filter),
                                                                                                              Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Capacity (Total);
                                                              ESP=Capacidad (Total)];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 42  ;   ;Capacity (Effective);Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Calendar Entry"."Capacity (Effective)" WHERE (Capacity Type=CONST(Work Center),
                                                                                                                  No.=FIELD(No.),
                                                                                                                  Work Shift Code=FIELD(Work Shift Filter),
                                                                                                                  Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Capacity (Effective);
                                                              ESP=Capacidad (efectiva)];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 44  ;   ;Prod. Order Need (Qty.);Decimal    ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Prod. Order Capacity Need"."Allocated Time" WHERE (Work Center No.=FIELD(No.),
                                                                                                                       Status=FIELD(Prod. Order Status Filter),
                                                                                                                       Date=FIELD(Date Filter),
                                                                                                                       Requested Only=CONST(No)));
                                                   CaptionML=[ENU=Prod. Order Need (Qty.);
                                                              ESP=Nec. ord. prod. (cdad.)];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 45  ;   ;Prod. Order Need Amount;Decimal    ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Prod. Order Routing Line"."Expected Operation Cost Amt." WHERE (Work Center No.=FIELD(No.),
                                                                                                                                    Status=FIELD(Prod. Order Status Filter)));
                                                   CaptionML=[ENU=Prod. Order Need Amount;
                                                              ESP=Importe nec. ord. prod.];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 47  ;   ;Prod. Order Status Filter;Option   ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Prod. Order Status Filter;
                                                              ESP=Filtro estado ord. prod.];
                                                   OptionCaptionML=[ENU=Simulated,Planned,Firm Planned,Released,Finished;
                                                                    ESP=Simulada,Planificada,Planif. en firme,Lanzada,Terminada];
                                                   OptionString=Simulated,Planned,Firm Planned,Released,Finished }
    { 50  ;   ;Unit Cost Calculation;Option       ;CaptionML=[ENU=Unit Cost Calculation;
                                                              ESP=C lculo coste unitario];
                                                   OptionCaptionML=[ENU=Time,Units;
                                                                    ESP=Tiempo,Unidades];
                                                   OptionString=Time,Units }
    { 51  ;   ;Specific Unit Cost  ;Boolean       ;CaptionML=[ENU=Specific Unit Cost;
                                                              ESP=Coste unitario espec¡fico] }
    { 52  ;   ;Consolidated Calendar;Boolean      ;CaptionML=[ENU=Consolidated Calendar;
                                                              ESP=Calendario consolidado] }
    { 53  ;   ;Flushing Method     ;Option        ;InitValue=Manual;
                                                   CaptionML=[ENU=Flushing Method;
                                                              ESP=Mtodo de baja];
                                                   OptionCaptionML=[ENU=Manual,Forward,Backward;
                                                                    ESP=Manual,Anticipada,Retroactiva];
                                                   OptionString=Manual,Forward,Backward }
    { 80  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              ESP=Nos. serie];
                                                   Editable=No }
    { 81  ;   ;Overhead Rate       ;Decimal       ;OnValidate=BEGIN
                                                                VALIDATE("Indirect Cost %");
                                                              END;

                                                   CaptionML=[ENU=Overhead Rate;
                                                              ESP=Tasa costes generales];
                                                   AutoFormatType=2 }
    { 82  ;   ;Gen. Prod. Posting Group;Code10    ;TableRelation="Gen. Product Posting Group";
                                                   CaptionML=[ENU=Gen. Prod. Posting Group;
                                                              ESP=Grupo contable producto] }
    { 83  ;   ;County              ;Text30        ;CaptionML=[ENU=County;
                                                              ESP=Provincia] }
    { 84  ;   ;Country/Region Code ;Code10        ;TableRelation=Country/Region;
                                                   CaptionML=[ENU=Country/Region Code;
                                                              ESP=C¢d. pa¡s/regi¢n] }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Search Name                              }
    {    ;Work Center Group Code                   }
    {    ;Subcontractor No.                        }
    {    ;Name                                    ;KeyGroups=SearchCol }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=The Work Center is being used on production orders.;ESP=Centro trabajo utiliz ndose con ¢rdenes producci¢n.';
      Text001@1001 : TextConst 'ENU=Do you want to change %1?;ESP=¨Confirma que desea cambiar %1?';
      Text002@1002 : TextConst 'ENU=Work Center Group Code is changed...\\;ESP=Se ha cambiado el C¢d. grupo cen. trab...\\';
      Text003@1003 : TextConst 'ENU=Calendar Entry    #1###### @2@@@@@@@@@@@@@\;ESP=Mov. calendario   #1###### @2@@@@@@@@@@@@@\';
      Text004@1004 : TextConst 'ENU=Calendar Absent.  #3###### @4@@@@@@@@@@@@@\;ESP=Absent. calenda.  #3###### @4@@@@@@@@@@@@@\';
      Text006@1005 : TextConst 'ENU=Prod. Order Need  #7###### @8@@@@@@@@@@@@@;ESP=Nec. ord. prod.   #7###### @8@@@@@@@@@@@@@';
      Text007@1006 : TextConst 'ENU=%1 cannot be changed for scheduled work centers.;ESP=%1 no puede cambiarse para centros trabajo programados.';
      Text008@1007 : TextConst 'ENU=Capacity Unit of Time is corrected on\\;ESP=Se ha corregido la udad. tiempo capacidad en\\';
      Text009@1008 : TextConst 'ENU=Calendar Entry    #1###### @2@@@@@@@@@@@@@;ESP=Mov. calendario   #1###### @2@@@@@@@@@@@@@';
      PostCode@1024 : Record 225;
      MfgSetup@1009 : Record 99000765;
      WorkCenter@1010 : Record 99000754;
      CapLedgEntry@1016 : Record 5832;
      CalendarEntry@1011 : Record 99000757;
      CalAbsentEntry@1012 : Record 99000760;
      MfgCommentLine@1013 : Record 99000770;
      RtngLine@1014 : Record 99000764;
      GLSetup@1022 : Record 98;
      NoSeriesMgt@1015 : Codeunit 396;
      DimMgt@1020 : Codeunit 408;
      Window@1017 : Dialog;
      EntryCounter@1018 : Integer;
      NoOfRecords@1019 : Integer;
      GLSetupRead@1021 : Boolean;
      Text010@1023 : TextConst 'ENU=You cannot delete %1 %2 because there exists at least one %3 associated with it.;ESP=No puede borrar %1 %2 porque existe al menos %3 asociado a l.';

    PROCEDURE AssistEdit@2(OldWorkCenter@1000 : Record 99000754) : Boolean;
    BEGIN
      WITH WorkCenter DO BEGIN
        WorkCenter := Rec;
        MfgSetup.GET;
        MfgSetup.TESTFIELD("Work Center Nos.");
        IF NoSeriesMgt.SelectSeries(MfgSetup."Work Center Nos.",OldWorkCenter."No. Series","No. Series") THEN BEGIN
          NoSeriesMgt.SetSeries("No.");
          Rec := WorkCenter;
          EXIT(TRUE);
        END;
      END;
    END;

    PROCEDURE ValidateShortcutDimCode@29(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.ValidateDimValueCode(FieldNumber,ShortcutDimCode);
      DimMgt.SaveDefaultDim(DATABASE::"Work Center","No.",FieldNumber,ShortcutDimCode);
      MODIFY;
    END;

    LOCAL PROCEDURE GetGLSetup@14();
    BEGIN
      IF NOT GLSetupRead THEN
        GLSetup.GET;
      GLSetupRead := TRUE;
    END;

    BEGIN
    END.
  }
}
