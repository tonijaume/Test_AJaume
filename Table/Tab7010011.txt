OBJECT Table 7010011 Reclamacion cliente
{
  OBJECT-PROPERTIES
  {
    Date=22/07/14;
    Time=14:07:12;
    Modified=Yes;
    Version List=AIC2009;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF NOT rPar.FIND('-') THEN
                 ERROR(Text000);
               IF NOT rPar."Empresa Central" THEN
                 ERROR(Text001);
               "Tipo reclamacion" := "Tipo reclamacion"::Intermediacion;
               Observaciones := Text002;
             END;

    OnModify=BEGIN
               IF NOT rPar.FIND('-') THEN
                 ERROR(Text000);
               IF NOT rPar."Empresa Central" THEN
                 ERROR(Text003);
             END;

    OnDelete=BEGIN
               IF NOT rPar.FIND('-') THEN
                 ERROR(Text000);
               IF NOT rPar."Empresa Central" THEN
                 ERROR(Text004);

               IF NOT Pendiente THEN
                 ERROR(Text005);
             END;

    OnRename=BEGIN
               IF NOT rPar.FIND('-') THEN
                 ERROR(Text000);
               IF NOT rPar."Empresa Central" THEN
                 ERROR(Text006);
             END;

    CaptionML=[ENU=Client claim;
               ESP=Reclamacion cliente];
    LookupFormID=Form7010059;
    DrillDownFormID=Form7010059;
  }
  FIELDS
  {
    { 1   ;   ;TourOperador        ;Code10        ;TableRelation=TourOperador.TourOperador;
                                                   OnValidate=VAR
                                                                rTO@1103355000 : Record 7009717;
                                                              BEGIN
                                                                //$001-
                                                                rTO.RESET;
                                                                rTO.GET(TourOperador);
                                                                rTO.TESTFIELD(Bloqueado, FALSE);
                                                                //$001+

                                                                IF TourOperador = '' THEN
                                                                  ERROR(Text007);

                                                                IF NOT rTO.GET(TourOperador) THEN
                                                                  ERROR(Text008);
                                                              END;

                                                   CaptionML=[ENU=TourOperator;
                                                              ESP=TourOperador];
                                                   NotBlank=Yes;
                                                   Description=PK, FK TourOperador }
    { 3   ;   ;Delegacion          ;Code10        ;TableRelation=Delegacion.Codigo;
                                                   OnValidate=VAR
                                                                rDel@1103355000 : Record 7009718;
                                                              BEGIN
                                                                IF Delegacion = '' THEN
                                                                  ERROR(Text009);

                                                                IF NOT rDel.GET(Delegacion) THEN
                                                                  ERROR(Text010);
                                                              END;

                                                   CaptionML=[ENU=Local Office;
                                                              ESP=Delegacion];
                                                   NotBlank=Yes;
                                                   Description=PK, FK Delegacion }
    { 5   ;   ;Hotel               ;Code20        ;TableRelation=Hotel.Hotel;
                                                   OnValidate=VAR
                                                                rHotel@1103355000 : Record 7009724;
                                                              BEGIN
                                                                IF Hotel = '' THEN
                                                                  ERROR(Text011);

                                                                IF NOT rHotel.GET(Hotel) THEN
                                                                  ERROR(Text012);
                                                              END;

                                                   CaptionML=[ENU=Hotel;
                                                              ESP=Hotel];
                                                   NotBlank=Yes;
                                                   Description=PK, FK Hotel }
    { 7   ;   ;N§ Referencia       ;Code10        ;CaptionML=[ENU=Reference No.;
                                                              ESP=N§ Referencia];
                                                   Description=PK }
    { 9   ;   ;N§ Linea            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              ESP=N§ Linea];
                                                   Description=PK }
    { 11  ;   ;N§ Bono             ;Code10        ;CaptionML=[ENU=Voucher No.;
                                                              ESP=N§ Bono] }
    { 13  ;   ;Nombre Cliente      ;Text30        ;CaptionML=[ENU=Client Name;
                                                              ESP=Nombre cliente] }
    { 15  ;   ;Reclamado a         ;Option        ;CaptionML=[ENU=Claimed to;
                                                              ESP=Reclamado a];
                                                   OptionCaptionML=[ENU=Hotel,Agency;
                                                                    ESP=Hotel,Agencia];
                                                   OptionString=Hotel,Agencia }
    { 17  ;   ;Fecha entrada cliente;Date         ;CaptionML=[ENU=Client check-in date;
                                                              ESP=Fecha entrada cliente] }
    { 19  ;   ;Fecha salida cliente;Date          ;CaptionML=[ENU=Client check-out date;
                                                              ESP=Fecha salida cliente] }
    { 21  ;   ;Importe             ;Decimal       ;OnValidate=BEGIN
                                                                IF "Contabilizado confirmacion" THEN
                                                                  ERROR(Text013+
                                                                        Text014);
                                                                Rec.VALIDATE("C¢d. divisa");
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF Importe = 0 THEN
                                                                ERROR(Text015);
                                                            END;

                                                   CaptionML=[ENU=Amount;
                                                              ESP=Importe];
                                                   MinValue=0;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="C¢d. divisa" }
    { 23  ;   ;Plazo concedido     ;Integer       ;OnValidate=BEGIN
                                                                IF "Plazo concedido" < 0 THEN
                                                                  ERROR(Text016);
                                                                Rec.VALIDATE(Plazo);
                                                              END;

                                                   CaptionML=[ENU=Granted term;
                                                              ESP=Plazo concedido] }
    { 25  ;   ;Observaciones       ;Text60        ;CaptionML=[ENU=Comments;
                                                              ESP=Observaciones] }
    { 27  ;   ;Pendiente           ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[ENU=Remaining;
                                                              ESP=Pendiente];
                                                   Editable=No }
    { 31  ;   ;Importe confirmado  ;Decimal       ;OnValidate=BEGIN
                                                                IF "Importe confirmado" > Importe THEN
                                                                  ERROR(Text017 +
                                                                        Text018);

                                                                Rec.VALIDATE("C¢d. divisa");
                                                              END;

                                                   CaptionML=[ENU=Confirmed amount;
                                                              ESP=Importe confirmado];
                                                   MinValue=0;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="C¢d. divisa" }
    { 33  ;   ;Fecha confirmacion  ;Date          ;OnValidate=BEGIN
                                                                IF "Fecha introduccion" > "Fecha confirmacion" THEN
                                                                  ERROR(Text019);
                                                              END;

                                                   CaptionML=[ENU=Confirmation date;
                                                              ESP=Fecha Confirmacion];
                                                   Editable=Yes }
    { 35  ;   ;Emitido TourOperador;Boolean       ;CaptionML=[ENU=Issued Touroperator;
                                                              ESP=Emitido TourOperador];
                                                   Editable=No }
    { 37  ;   ;C¢d. divisa         ;Code10        ;TableRelation=Currency.Code;
                                                   OnValidate=VAR
                                                                rCambio@1103355000 : Record 330;
                                                              BEGIN
                                                                IF rDiv.GET("C¢d. divisa") AND ("Fecha introduccion" <> 0D) THEN BEGIN
                                                                  "Importe DL" := ROUND(rCambio.ExchangeAmtLCYToFCY("Fecha introduccion","C¢d. divisa",Importe,
                                                                                                              rCambio.ExchangeRate("Fecha introduccion", "C¢d. divisa")), rDiv.
                                                                "Amount Rounding Precision");
                                                                  IF NOT "Contabilizado confirmacion" THEN
                                                                    "Importe confirmado" := "Importe DL";
                                                                  "Importe confirmado DL" := ROUND(rCambio.ExchangeAmtFCYToLCY("Fecha introduccion","C¢d. divisa","Importe confirmado",
                                                                                                                         rCambio.ExchangeRate("Fecha introduccion", "C¢d. divisa")),
                                                                                                                         rDiv."Amount Rounding Precision");
                                                                  "Importe rectificacion DL" := ROUND(rCambio.ExchangeAmtFCYToLCY("Fecha introduccion","C¢d. divisa","Importe rectificado",
                                                                                                                            rCambio.ExchangeRate("Fecha introduccion", "C¢d. divisa")),
                                                                                                                            rDiv."Amount Rounding Precision");
                                                                END
                                                                ELSE BEGIN
                                                                  "Importe DL" := Importe;
                                                                  IF NOT "Contabilizado confirmacion" THEN BEGIN
                                                                    "Importe confirmado" := Importe;
                                                                    "Importe confirmado DL" := Importe;
                                                                  END
                                                                  ELSE
                                                                    "Importe confirmado DL" := "Importe confirmado";
                                                                  "Importe rectificacion DL" := "Importe rectificado";
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Currency exchange;
                                                              ESP=C¢d. divisa];
                                                   Description=FK Divisa }
    { 41  ;   ;Plazo               ;Date          ;OnValidate=BEGIN
                                                                Plazo := "Fecha introduccion" + "Plazo concedido";
                                                              END;

                                                   CaptionML=[ENU=Term;
                                                              ESP=Plazo];
                                                   Editable=No }
    { 43  ;   ;Importe rectificado ;Decimal       ;OnValidate=BEGIN
                                                                IF "Importe rectificado" > "Importe confirmado" THEN
                                                                  ERROR(Text020 +
                                                                        Text021);

                                                                Rec.VALIDATE("C¢d. divisa");
                                                              END;

                                                   CaptionML=[ENU=Correct amount;
                                                              ESP=Importe rectificado];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="C¢d. divisa" }
    { 45  ;   ;Fecha introduccion  ;Date          ;OnValidate=BEGIN
                                                                IF "Fecha introduccion" = 0D THEN
                                                                  ERROR(Text022);

                                                                IF "Fecha entrada cliente" > "Fecha introduccion" THEN
                                                                  ERROR(Text023);

                                                                IF "Fecha confirmacion" = 0D THEN
                                                                  "Fecha confirmacion" := "Fecha introduccion";

                                                                Rec.VALIDATE(Plazo);
                                                                Rec.VALIDATE("C¢d. divisa");
                                                              END;

                                                   CaptionML=[ENU=Entering date;
                                                              ESP=Fecha introduccion] }
    { 47  ;   ;Fecha rectificacion ;Date          ;OnValidate=BEGIN
                                                                IF "Fecha confirmacion" > "Fecha rectificacion" THEN
                                                                  ERROR(Text024);
                                                              END;

                                                   CaptionML=[ENU=Correction date;
                                                              ESP=Fecha rectificacion];
                                                   Editable=Yes }
    { 49  ;   ;Contabilizado confirmacion;Boolean ;CaptionML=[ENU=Confirmation registered;
                                                              ESP=Contabilizado confirmacion];
                                                   Editable=No }
    { 51  ;   ;Contabilizado rectificacion;Boolean;CaptionML=[ENU=Correction registered;
                                                              ESP=Contabilizado rectificacion];
                                                   Editable=No }
    { 53  ;   ;Tipo reclamacion    ;Option        ;CaptionML=[ENU=Claim type;
                                                              ESP=Tipo reclamacion];
                                                   OptionCaptionML=[ENU=Own behalf,Intermediary;
                                                                    ESP=Cuenta Propia,Intermediacion];
                                                   OptionString=Cuenta Propia,Intermediacion }
    { 55  ;   ;Importe DL          ;Decimal       ;CaptionML=[ENU=LCY Amount;
                                                              ESP=Importe DL];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 57  ;   ;Importe confirmado DL;Decimal      ;CaptionML=[ENU=Confirmed LCY amount;
                                                              ESP=Importe confirmado DL];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 59  ;   ;Importe rectificacion DL;Decimal   ;CaptionML=[ENU=Correction LCY amount;
                                                              ESP=Importe rectificacion DL];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 61  ;   ;Reimprimir          ;Boolean       ;CaptionML=[ENU=Re-print;
                                                              ESP=Reimprimir] }
  }
  KEYS
  {
    {    ;TourOperador,Delegacion,Hotel,N§ Referencia,N§ Linea;
                                                   SumIndexFields=Importe,Importe confirmado,Importe rectificado,Importe DL,Importe confirmado DL,Importe rectificacion DL;
                                                   KeyGroups=RENUMERING;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1103355002 : TextConst 'ENU=Agency parameters folder does not exist;ESP=No existe el fichero de Parametros de la Agencia.';
      Text001@1103355003 : TextConst 'ENU=Only is possible to register claims in the central;ESP=Solo se puede dar de alta reclamaciones en la central.';
      Text002@1103355004 : TextConst 'ENU=CUSTOMER CLAIM;ESP=RECLAMACION CLIENTE.';
      Text003@1103355005 : TextConst 'ENU=Only is possible to modify claims in central;ESP=Solo se puede modificar reclamaciones en la central.';
      Text004@1103355006 : TextConst 'ENU=Only is possible to resign claims in central;ESP=Solo se puede dar de baja reclamaciones en la central.';
      Text005@1103355007 : TextConst 'ENU=Unable to delete claims which letter has been issued;ESP=No se pueden borrar reclamaciones que ya hayan emitido la carta.';
      Text006@1103355008 : TextConst 'ENU=Only is possible to rename claims in central;ESP=Solo se puede renombrar reclamaciones en la central.';
      Text007@1103355009 : TextConst 'ENU=Touroperator must be specified;ESP=Hay que especificar un TourOperador';
      Text008@1103355010 : TextConst 'ENU=Specified TourOperator does not exist;ESP=El TourOperador especificado no existe';
      Text009@1103355011 : TextConst 'ENU=A Local office has to be specified;ESP=Hay que especificar una Delegacion';
      Text010@1103355012 : TextConst 'ENU=The specified local office does not exist;ESP=La Delegaci¢n especificada no existe';
      Text011@1103355013 : TextConst 'ENU=Hotel must be specified;ESP=Hay que especificar un Hotel';
      Text012@1103355014 : TextConst 'ENU=Specified hotel does not exist;ESP=El Hotel especificado no existe';
      Text013@1103355015 : TextConst 'ENU=Amount cannot be modified. \;ESP=No se puede modificar el importe.\';
      Text014@1103355016 : TextConst 'ENU=This claim is in the ABR;ESP=Esta reclamacion esta en el ABR.';
      Text015@1103355017 : TextConst 'ENU=AN amount has to be specified;ESP=Hay que especificar un importe';
      Text016@1103355018 : TextConst 'ENU=Term cannot be negative;ESP=El plazo concedido no puede ser negativo';
      Text017@1103355019 : TextConst 'ENU=Confirmed amount cannot be higher\;ESP=El importe confirmado no puede ser superior\';
      Text018@1103355020 : TextConst 'ENU=than the claimed one;ESP=al importe reclamado';
      Text019@1103355021 : TextConst 'ENU=Introduction date cannot be higher than confirmation date;ESP=La fecha de introducci¢n no puede ser superior a la fecha de confirmaci¢n';
      Text020@1103355022 : TextConst 'ENU=Correct amount cannot be higher \;ESP=El importe rectificado no puede ser mayor \';
      Text021@1103355023 : TextConst 'ENU=than the confirmed one;ESP=que el importe confirmado';
      Text022@1103355024 : TextConst 'ENU=Introduction date must be specified;ESP=Hay que especificar una fecha de introducci¢n';
      Text023@1103355025 : TextConst 'ENU=Check-in date on the client cannot be higher than entering date;ESP=La fecha de entrada del cliente no puede ser superior a la fecha de introducci¢n';
      Text024@1103355026 : TextConst 'ENU=Confirmation date cannot be higher than rectification date;ESP=La fecha de confirmaci¢n no puede ser superior a la fecha de rectificaci¢n';
      rDiv@1103355000 : Record 4;
      rPar@1103355001 : Record 7009700;

    BEGIN
    {
      $001 MNC 22072014 CNT-LP-14054 No se pueden usar TTOO bloqueados
    }
    END.
  }
}
