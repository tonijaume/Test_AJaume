OBJECT Table 5092 Opportunity
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVW16.00;
  }
  PROPERTIES
  {
    DataCaptionFields=No.,Description;
    OnInsert=BEGIN
               IF "No." = '' THEN BEGIN
                 RMSetup.GET;
                 RMSetup.TESTFIELD("Opportunity Nos.");
                 NoSeriesMgt.InitSeries(RMSetup."Opportunity Nos.",xRec."No. Series",0D,"No.","No. Series");
               END;
               IF "No." <> '' THEN
                 SearchManagement.ParseOpportunity(Rec,FALSE);
             END;

    OnModify=BEGIN

               IF "No." <> '' THEN BEGIN
                 SearchManagement.DeleteOpportunityDetails(xRec."No.");
                 SearchManagement.ParseOpportunity(Rec,FALSE);
               END;
             END;

    OnDelete=VAR
               OppEntry@1000 : Record 5093;
             BEGIN
               IF Status <> Status::"Not Started" THEN
                 ERROR(Text000);

               RMCommentLine.SETRANGE("Table Name",RMCommentLine."Table Name"::Opportunity);
               RMCommentLine.SETRANGE("No.","No.");
               RMCommentLine.DELETEALL;

               OppEntry.SETCURRENTKEY("Opportunity No.");
               OppEntry.SETRANGE("Opportunity No.","No.");
               OppEntry.DELETEALL;
             END;

    CaptionML=[ENU=Opportunity;
               ESP=Oportunidad];
    LookupFormID=Form5123;
    DrillDownFormID=Form5123;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;OnValidate=BEGIN
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  RMSetup.GET;
                                                                  NoSeriesMgt.TestManual(RMSetup."Opportunity Nos.");
                                                                  "No. Series" := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              ESP=N§] }
    { 2   ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              ESP=Descripci¢n] }
    { 3   ;   ;Salesperson Code    ;Code10        ;TableRelation=Salesperson/Purchaser;
                                                   OnValidate=VAR
                                                                Todo@1000 : Record 5080;
                                                                Todo2@1004 : Record 5080;
                                                                OppEntry@1001 : Record 5093;
                                                                Attendee@1005 : Record 5199;
                                                                Window@1009 : Dialog;
                                                                TotalRecordsNumber@1003 : Integer;
                                                                Counter@1002 : Integer;
                                                                StartTime@1007 : Time;
                                                                EndTime@1008 : Time;
                                                              BEGIN
                                                                IF ("Salesperson Code" <> xRec."Salesperson Code") AND
                                                                   (xRec."Salesperson Code" <> '') AND
                                                                   ("No." <> '')
                                                                THEN BEGIN
                                                                  TESTFIELD("Salesperson Code");
                                                                  Todo.RESET;
                                                                  Todo.SETCURRENTKEY("Opportunity No.",Date,Closed);
                                                                  Todo.SETRANGE("Opportunity No.","No.");
                                                                  Todo.SETRANGE(Closed,FALSE);
                                                                  Todo.SETRANGE("Salesperson Code",xRec."Salesperson Code");
                                                                  TotalRecordsNumber := Todo.COUNT;
                                                                  Counter := 0;
                                                                  IF Todo.FIND('-') THEN
                                                                    IF CONFIRM(Text008,FALSE,FIELDCAPTION("Salesperson Code")) THEN BEGIN
                                                                      Window.OPEN(Text012 + Text013);
                                                                      Window.UPDATE(2,Text014);
                                                                      StartTime := TIME;
                                                                      REPEAT
                                                                        Counter := Counter + 1;
                                                                        Window.UPDATE(1,ROUND(Counter / TotalRecordsNumber * 10000,1));
                                                                        IF Todo.Type = Todo.Type::Meeting THEN BEGIN
                                                                          Todo.GetMeetingOrganizerTodo(Todo2);
                                                                          IF Todo."Salesperson Code" <> Todo2."Salesperson Code" THEN BEGIN
                                                                            Todo.VALIDATE("Salesperson Code","Salesperson Code");
                                                                            Todo.MODIFY;
                                                                          END;
                                                                          Attendee.RESET;
                                                                          Attendee.SETRANGE("To-do No.",Todo2."No.");
                                                                          Attendee.SETRANGE("Attendee No.",xRec."Salesperson Code");
                                                                          Attendee.SETRANGE("Attendee Type",Attendee."Attendee Type"::Salesperson);
                                                                          Attendee.SETRANGE("Attendance Type",Attendee."Attendance Type"::Required,Attendee."Attendance Type"::Optional);
                                                                          IF Attendee.FIND('-') THEN BEGIN
                                                                            Attendee.VALIDATE("Attendee No.","Salesperson Code");
                                                                            Attendee.MODIFY(TRUE);
                                                                          END;
                                                                        END
                                                                        ELSE BEGIN
                                                                          Todo.VALIDATE("Salesperson Code","Salesperson Code");
                                                                          Todo.MODIFY(TRUE);
                                                                        END;
                                                                      UNTIL Todo.NEXT = 0;
                                                                      EndTime := TIME;
                                                                      Window.CLOSE;
                                                                    END;

                                                                  OppEntry.RESET;
                                                                  OppEntry.SETCURRENTKEY(Active,"Opportunity No.");
                                                                  OppEntry.SETRANGE(Active,TRUE);
                                                                  OppEntry.SETRANGE("Opportunity No.","No.");
                                                                  IF OppEntry.FIND('-') THEN
                                                                    REPEAT
                                                                      OppEntry."Salesperson Code" := "Salesperson Code";
                                                                      OppEntry.MODIFY;
                                                                    UNTIL OppEntry.NEXT = 0;

                                                                  MODIFY;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Salesperson Code;
                                                              ESP=C¢d. vendedor] }
    { 4   ;   ;Campaign No.        ;Code20        ;TableRelation=Campaign;
                                                   OnValidate=VAR
                                                                Todo@1001 : Record 5080;
                                                                OppEntry@1000 : Record 5093;
                                                              BEGIN
                                                                IF ("Campaign No." <> xRec."Campaign No.") AND
                                                                   ("No." <> '')
                                                                THEN BEGIN
                                                                  Todo.RESET;
                                                                  Todo.SETCURRENTKEY("Opportunity No.",Date,Closed);
                                                                  Todo.SETRANGE("Opportunity No.","No.");
                                                                  Todo.SETRANGE(Closed,FALSE);
                                                                  Todo.SETRANGE("Campaign No.",xRec."Campaign No.");
                                                                  IF Todo.FIND('-') THEN
                                                                    IF CONFIRM(Text008,FALSE,FIELDCAPTION("Campaign No.")) THEN
                                                                      REPEAT
                                                                        Todo."Campaign No." := "Campaign No.";
                                                                        Todo.MODIFY;
                                                                      UNTIL Todo.NEXT = 0;

                                                                  OppEntry.RESET;
                                                                  OppEntry.SETCURRENTKEY(Active,"Opportunity No.");
                                                                  OppEntry.SETRANGE(Active,TRUE);
                                                                  OppEntry.SETRANGE("Opportunity No.","No.");
                                                                  IF OppEntry.FIND('-') THEN
                                                                    REPEAT
                                                                      OppEntry."Campaign No." := "Campaign No.";
                                                                      OppEntry.MODIFY;
                                                                    UNTIL OppEntry.NEXT = 0;

                                                                  MODIFY;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Campaign No.;
                                                              ESP=N§ campa¤a] }
    { 5   ;   ;Contact No.         ;Code20        ;TableRelation=Contact;
                                                   OnValidate=VAR
                                                                Cont@1000 : Record 5050;
                                                                Todo@1002 : Record 5080;
                                                                Todo2@1005 : Record 5080;
                                                                OppEntry@1001 : Record 5093;
                                                                SalesHeader@1003 : Record 36;
                                                                Attendee@1004 : Record 5199;
                                                                Window@1007 : Dialog;
                                                                TotalRecordsNumber@1011 : Integer;
                                                                Counter@1012 : Integer;
                                                                StartTime@1008 : Time;
                                                                EndTime@1009 : Time;
                                                              BEGIN
                                                                TESTFIELD("Contact No.");
                                                                Cont.GET("Contact No.");

                                                                IF ("Contact No." <> xRec."Contact No.") AND
                                                                   (xRec."Contact No." <> '') AND
                                                                   ("No." <> '')
                                                                THEN BEGIN
                                                                  CALCFIELDS("Contact Name");
                                                                  IF ("Contact Company No." <> Cont."Company No.") AND
                                                                     (Status <> Status::"Not Started")
                                                                  THEN
                                                                    ERROR(Text009,Cont."No.",Cont.Name);

                                                                  IF ("Sales Document No." <> '') AND ("Sales Document Type" = "Sales Document Type"::Quote) THEN BEGIN
                                                                    SalesHeader.GET(SalesHeader."Document Type"::Quote,"Sales Document No.");
                                                                    IF SalesHeader."Sell-to Contact No." <> "Contact No." THEN BEGIN
                                                                      MODIFY;
                                                                      SalesHeader.SetHideValidationDialog(TRUE);
                                                                      SalesHeader.VALIDATE("Sell-to Contact No.","Contact No.");
                                                                      SalesHeader.MODIFY
                                                                    END
                                                                  END;
                                                                  Todo.RESET;
                                                                  Todo.SETCURRENTKEY("Opportunity No.",Date,Closed);
                                                                  Todo.SETRANGE("Opportunity No.","No.");
                                                                  Todo.SETRANGE(Closed,FALSE);
                                                                  Todo.SETRANGE("Contact No.",xRec."Contact No.");
                                                                  TotalRecordsNumber := Todo.COUNT;
                                                                  Counter := 0;
                                                                  IF Todo.FIND('-') THEN
                                                                    IF CONFIRM(Text008,FALSE,FIELDCAPTION("Contact No.")) THEN BEGIN
                                                                      Window.OPEN(Text012 + Text013);
                                                                      Window.UPDATE(2,Text014);
                                                                      StartTime := TIME;
                                                                      REPEAT
                                                                        Counter := Counter + 1;
                                                                        Window.UPDATE(1,ROUND(Counter / TotalRecordsNumber * 10000,1));
                                                                        IF Todo.Type = Todo.Type::Meeting THEN BEGIN
                                                                          Todo.GetMeetingOrganizerTodo(Todo2);
                                                                          Todo.VALIDATE("Contact No.","Contact No.");
                                                                          Todo.MODIFY;
                                                                          Attendee.RESET;
                                                                          Attendee.SETRANGE("To-do No.",Todo2."No.");
                                                                          Attendee.SETRANGE("Attendee No.",xRec."Contact No.");
                                                                          Attendee.SETRANGE("Attendee Type",Attendee."Attendee Type"::Contact);
                                                                          IF Attendee.FIND('-') THEN BEGIN
                                                                            Attendee.VALIDATE("Attendee No.","Contact No.");
                                                                            Attendee.MODIFY(TRUE);
                                                                          END;
                                                                        END ELSE BEGIN
                                                                          Todo.VALIDATE("Contact No.","Contact No.");
                                                                          Todo.MODIFY(TRUE);
                                                                        END;
                                                                      UNTIL Todo.NEXT = 0;
                                                                      EndTime := TIME;
                                                                      Window.CLOSE;
                                                                    END;

                                                                  OppEntry.RESET;
                                                                  OppEntry.SETCURRENTKEY(Active,"Opportunity No.");
                                                                  OppEntry.SETRANGE(Active,TRUE);
                                                                  OppEntry.SETRANGE("Opportunity No.","No.");
                                                                  IF OppEntry.FIND('-') THEN
                                                                    REPEAT
                                                                      OppEntry.VALIDATE("Contact No.","Contact No.");
                                                                      OppEntry.MODIFY;
                                                                    UNTIL OppEntry.NEXT = 0;

                                                                  MODIFY;
                                                                END;

                                                                "Contact Company No." := Cont."Company No.";
                                                                CALCFIELDS("Contact Name","Contact Company Name");
                                                              END;

                                                   OnLookup=VAR
                                                              Cont@1000 : Record 5050;
                                                            BEGIN
                                                              IF Cont.GET("Contact No.") THEN BEGIN
                                                                IF Status <> Status::"Not Started" THEN
                                                                  Cont.SETRANGE("Company No.",Cont."Company No.");
                                                                IF FORM.RUNMODAL(0,Cont) = ACTION::LookupOK THEN BEGIN
                                                                  xRec."Contact No." := "Contact No.";
                                                                  VALIDATE("Contact No.",Cont."No.");
                                                                END;
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Contact No.;
                                                              ESP=N§ contacto] }
    { 6   ;   ;Contact Company No. ;Code20        ;TableRelation=Contact WHERE (Type=CONST(Company));
                                                   CaptionML=[ENU=Contact Company No.;
                                                              ESP=N§ empresa contacto] }
    { 7   ;   ;Sales Cycle Code    ;Code10        ;TableRelation="Sales Cycle";
                                                   OnValidate=VAR
                                                                SalesCycle@1000 : Record 5090;
                                                              BEGIN
                                                                SalesCycle.GET("Sales Cycle Code");
                                                                SalesCycle.TESTFIELD(Blocked,FALSE);
                                                              END;

                                                   CaptionML=[ENU=Sales Cycle Code;
                                                              ESP=C¢d. ciclo ventas] }
    { 8   ;   ;Sales Document No.  ;Code20        ;TableRelation=IF (Sales Document Type=CONST(Quote)) "Sales Header".No. WHERE (Document Type=CONST(Quote),
                                                                                                                                 Sell-to Contact No.=FIELD(Contact No.))
                                                                                                                                 ELSE IF (Sales Document Type=CONST(Order)) "Sales Header".No. WHERE (Document Type=CONST(Order),
                                                                                                                                                                                                      Sell-to Contact No.=FIELD(Contact No.))
                                                                                                                                                                                                      ELSE IF (Sales Document Type=CONST(Posted Invoice)) "Sales Invoice Header".No. WHERE (Sell-to Contact No.=FIELD(Contact No.));
                                                   OnValidate=VAR
                                                                Opp@1000 : Record 5092;
                                                                SalesHeader@1001 : Record 36;
                                                              BEGIN
                                                                IF "Sales Document No." = '' THEN BEGIN
                                                                  "Sales Document Type" := "Sales Document Type"::" ";
                                                                  IF xRec."Sales Document Type" = "Sales Document Type"::Quote THEN
                                                                    IF SalesHeader.GET(SalesHeader."Document Type"::Quote,xRec."Sales Document No.") THEN BEGIN
                                                                      SalesHeader."Opportunity No." := '';
                                                                      SalesHeader.MODIFY
                                                                    END
                                                                END ELSE
                                                                  IF "Sales Document No." <> xRec."Sales Document No." THEN BEGIN
                                                                    Opp.RESET;
                                                                    Opp.SETCURRENTKEY("Sales Document Type","Sales Document No.");
                                                                    Opp.SETRANGE("Sales Document Type","Sales Document Type");
                                                                    Opp.SETRANGE("Sales Document No.","Sales Document No.");
                                                                    IF Opp.FIND('-') THEN
                                                                      IF Opp."No." <> "No." THEN
                                                                        ERROR(Text006,Opp."Sales Document Type",Opp."Sales Document No.",Opp."No.");

                                                                    IF xRec."Sales Document Type" = "Sales Document Type"::Quote THEN
                                                                      IF SalesHeader.GET(SalesHeader."Document Type"::Quote,xRec."Sales Document No.") THEN BEGIN
                                                                        SalesHeader."Opportunity No." := '';
                                                                        SalesHeader.MODIFY
                                                                      END;
                                                                    IF "Sales Document Type" = "Sales Document Type"::Quote THEN
                                                                      IF SalesHeader.GET(SalesHeader."Document Type"::Quote,"Sales Document No.") THEN BEGIN
                                                                        SalesHeader."Opportunity No." := "No.";
                                                                        SalesHeader.MODIFY
                                                                      END
                                                                  END;
                                                              END;

                                                   CaptionML=[ENU=Sales Document No.;
                                                              ESP=N§ documento venta] }
    { 9   ;   ;Creation Date       ;Date          ;CaptionML=[ENU=Creation Date;
                                                              ESP=Fecha creaci¢n] }
    { 10  ;   ;Status              ;Option        ;CaptionML=[ENU=Status;
                                                              ESP=Estado];
                                                   OptionCaptionML=[ENU=Not Started,In Progress,Won,Lost;
                                                                    ESP=No iniciado,En progreso,Ganado,Perdido];
                                                   OptionString=Not Started,In Progress,Won,Lost;
                                                   Editable=No }
    { 11  ;   ;Priority            ;Option        ;InitValue=Normal;
                                                   CaptionML=[ENU=Priority;
                                                              ESP=Prioridad];
                                                   OptionCaptionML=[ENU=Low,Normal,High;
                                                                    ESP=Baja,Normal,Alta];
                                                   OptionString=Low,Normal,High }
    { 12  ;   ;Closed              ;Boolean       ;CaptionML=[ENU=Closed;
                                                              ESP=Cerrado];
                                                   Editable=No }
    { 13  ;   ;Date Closed         ;Date          ;CaptionML=[ENU=Date Closed;
                                                              ESP=Fecha cerrada];
                                                   Editable=No }
    { 15  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              ESP=Nos. serie];
                                                   Editable=No }
    { 16  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Rlshp. Mgt. Comment Line" WHERE (Table Name=CONST(Opportunity),
                                                                                                       No.=FIELD(No.)));
                                                   CaptionML=[ENU=Comment;
                                                              ESP=Comentario];
                                                   Editable=No }
    { 17  ;   ;Current Sales Cycle Stage;Integer  ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Opportunity Entry"."Sales Cycle Stage" WHERE (Opportunity No.=FIELD(No.),
                                                                                                                     Active=CONST(Yes)));
                                                   CaptionML=[ENU=Current Sales Cycle Stage;
                                                              ESP=Etapa ciclo ventas actual];
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 18  ;   ;Estimated Value (LCY);Decimal      ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Opportunity Entry"."Estimated Value (LCY)" WHERE (Opportunity No.=FIELD(No.),
                                                                                                                      Active=CONST(Yes)));
                                                   CaptionML=[ENU=Estimated Value (LCY);
                                                              ESP=Valor estimado (DL)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 19  ;   ;Probability %       ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Opportunity Entry"."Probability %" WHERE (Opportunity No.=FIELD(No.),
                                                                                                                 Active=CONST(Yes)));
                                                   CaptionML=[ENU=Probability %;
                                                              ESP=% Probabilidad];
                                                   DecimalPlaces=1:1;
                                                   Editable=No }
    { 20  ;   ;Calcd. Current Value (LCY);Decimal ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Opportunity Entry"."Calcd. Current Value (LCY)" WHERE (Opportunity No.=FIELD(No.),
                                                                                                                           Active=CONST(Yes)));
                                                   CaptionML=[ENU=Calcd. Current Value (LCY);
                                                              ESP=Valor actual calculado (DL)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 21  ;   ;Chances of Success %;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Opportunity Entry"."Chances of Success %" WHERE (Opportunity No.=FIELD(No.),
                                                                                                                        Active=CONST(Yes)));
                                                   CaptionML=[ENU=Chances of Success %;
                                                              ESP=% Posibilidades de xito];
                                                   DecimalPlaces=0:0;
                                                   Editable=No }
    { 22  ;   ;Completed %         ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Opportunity Entry"."Completed %" WHERE (Opportunity No.=FIELD(No.),
                                                                                                               Active=CONST(Yes)));
                                                   CaptionML=[ENU=Completed %;
                                                              ESP=% Completado];
                                                   DecimalPlaces=0:0;
                                                   Editable=No }
    { 23  ;   ;Contact Name        ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Contact.Name WHERE (No.=FIELD(Contact No.)));
                                                   CaptionML=[ENU=Contact Name;
                                                              ESP=Nombre contacto];
                                                   Editable=No }
    { 24  ;   ;Contact Company Name;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Contact.Name WHERE (No.=FIELD(Contact Company No.)));
                                                   CaptionML=[ENU=Contact Company Name;
                                                              ESP=Nombre empresa contacto];
                                                   Editable=No }
    { 25  ;   ;Salesperson Name    ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Salesperson/Purchaser.Name WHERE (Code=FIELD(Salesperson Code)));
                                                   CaptionML=[ENU=Salesperson Name;
                                                              ESP=Nombre vendedor];
                                                   Editable=No }
    { 26  ;   ;Campaign Description;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Campaign.Description WHERE (No.=FIELD(Campaign No.)));
                                                   CaptionML=[ENU=Campaign Description;
                                                              ESP=Descripci¢n campa¤a];
                                                   Editable=No }
    { 27  ;   ;Segment No.         ;Code20        ;TableRelation="Segment Header";
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Segment No.;
                                                              ESP=N§ segmento] }
    { 28  ;   ;Estimated Closing Date;Date        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Opportunity Entry"."Estimated Close Date" WHERE (Opportunity No.=FIELD(No.),
                                                                                                                        Active=CONST(Yes)));
                                                   CaptionML=[ENU=Estimated Closing Date;
                                                              ESP=Fecha cierre estimada];
                                                   Editable=No }
    { 29  ;   ;Sales Document Type ;Option        ;OnValidate=BEGIN
                                                                IF "Sales Document Type" = xRec."Sales Document Type" THEN
                                                                  EXIT;
                                                                IF "Sales Document Type" = "Sales Document Type"::" " THEN
                                                                  VALIDATE("Sales Document No.",'');
                                                              END;

                                                   CaptionML=[ENU=Sales Document Type;
                                                              ESP=Tipo doc. venta];
                                                   OptionCaptionML=[ENU=" ,Quote,Order,Posted Invoice";
                                                                    ESP=" ,Oferta,Pedido,Factura registrada"];
                                                   OptionString=[ ,Quote,Order,Posted Invoice] }
    { 30  ;   ;No. of Interactions ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Interaction Log Entry" WHERE (Opportunity No.=FIELD(FILTER(No.)),
                                                                                                    Canceled=CONST(No),
                                                                                                    Postponed=CONST(No)));
                                                   CaptionML=[ENU=No. of Interactions;
                                                              ESP=N§ de interacciones];
                                                   Editable=No }
    { 9501;   ;Wizard Step         ;Option        ;CaptionML=[ENU=Wizard Step;
                                                              ESP=Paso asistente];
                                                   OptionCaptionML=[ENU=" ,1,2,3,4,5,6";
                                                                    ESP=" ,1,2,3,4,5,6"];
                                                   OptionString=[ ,1,2,3,4,5,6];
                                                   Editable=No }
    { 9502;   ;Activate First Stage;Boolean       ;CaptionML=[ENU=Activate First Stage;
                                                              ESP=Activar primera etapa] }
    { 9503;   ;Segment Description ;Text50        ;CaptionML=[ENU=Segment Description;
                                                              ESP=Descripci¢n del segmento] }
    { 9504;   ;Wizard Estimated Value (LCY);Decimal;
                                                   CaptionML=[ENU=Wizard Estimated Value (LCY);
                                                              ESP=Valor estimado asistente (DL)];
                                                   AutoFormatType=1 }
    { 9505;   ;Wizard Chances of Success %;Decimal;CaptionML=[ENU=Wizard Chances of Success %;
                                                              ESP=% posibilidades xito asistente];
                                                   DecimalPlaces=0:0 }
    { 9506;   ;Wizard Estimated Closing Date;Date ;CaptionML=[ENU=Wizard Estimated Closing Date;
                                                              ESP=Fecha cierre estimado asistente] }
    { 9507;   ;Wizard Contact Name ;Text50        ;CaptionML=[ENU=Wizard Contact Name;
                                                              ESP=Nombre contacto asistente] }
    { 9508;   ;Wizard Campaign Description;Text50 ;CaptionML=[ENU=Wizard Campaign Description;
                                                              ESP=Descripci¢n campa¤a asistente] }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Contact Company No.,Contact No.,Closed   }
    {    ;Salesperson Code,Closed                  }
    {    ;Campaign No.,Closed                      }
    {    ;Segment No.,Closed                       }
    {    ;Sales Document Type,Sales Document No.   }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;No.,Description,Creation Date,Status     }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=You cannot delete this opportunity while it is active.;ESP=No puede borrar esta oportunidad mientras est activa.';
      Text001@1001 : TextConst 'ENU=You cannot create opportunities on an empty segment.;ESP=No puede crear oportunidades en un segmento cerrado.';
      Text002@1002 : TextConst 'ENU=Do you want to create an opportunity for all contacts in the %1 segment?;ESP=¨Desea crear una oportunidad en todos los contactos del segmento %1?';
      Text005@1005 : TextConst 'ENU=You cannot assign a sales quote to the %2 record of the %1 while the %2 record of the %1 has no contact company assigned.;ESP=No puede asignar oferta venta al registro %2 de %1 cuando el registro %2 no tiene asignado contacto empresa.';
      RMSetup@1011 : Record 5079;
      Opp@1012 : Record 5092;
      RMCommentLine@1013 : Record 5061;
      SegHeader@1018 : Record 5076;
      OppEntry@1020 : Record 5093;
      RMCommentLineTmp@1022 : TEMPORARY Record 5061;
      NoSeriesMgt@1014 : Codeunit 396;
      SearchManagement@1006 : Codeunit 5067;
      Text006@1004 : TextConst 'ENU=Sales %1 %2 is already assigned to opportunity %3.;ESP=%1 %2 venta ya est  asignada a la oportunidad %3.';
      Text008@1007 : TextConst 'ENU=Do you want to change %1 on the related open to-dos with the same %1?;ESP=¨Desea cambiar %1 en las tareas abiertas relacionadas con el mismo %1?';
      Text009@1008 : TextConst 'ENU=Contact %1 %2 is related to another company.;ESP=Contacto %1 %2 est  relacionado con otra empresa.';
      Text011@1010 : TextConst 'ENU=A sales quote has already been assigned to this opportunity.;ESP=Ya se ha asignado una oferta de venta a esta oportunidad.';
      Text012@1017 : TextConst 'ENU=Current process @1@@@@@@@@@@@@@@@\;ESP=Proceso actual @1@@@@@@@@@@@@@@@\';
      Text013@1016 : TextConst 'ENU=Current status  #2###############;ESP=Estado actual  #2###############';
      Text014@1015 : TextConst 'ENU=Updating To-dos;ESP=Actualizando tareas';
      Text022@1026 : TextConst 'ENU=You must fill in the %1 field.;ESP=Debe rellenar el campo %1.';
      Text023@1025 : TextConst 'ENU=You must fill in the contact that is involved in the opportunity.;ESP=Debe seleccionar el contacto que est  relacionado con la oportunidad.';
      Text024@1024 : TextConst 'ENU=%1 must be greater than 0.;ESP=%1 debe ser mayor que 0.';
      Text025@1023 : TextConst 'ENU=The Estimated closing date has to be later than this change;ESP=La fecha estimada de cierre debe ser posterior a la fecha de esta modificaci¢n';

    PROCEDURE CreateOppFromOpp@1(VAR Opp@1007 : Record 5092);
    VAR
      TempOpp@1000 : TEMPORARY Record 5092;
      Cont@1001 : Record 5050;
      SalesPurchPerson@1002 : Record 13;
      Campaign@1003 : Record 5071;
      SegHeader@1004 : Record 5076;
      SegLine@1005 : Record 5077;
      SalesCycle@1006 : Record 5090;
    BEGIN
      DELETEALL;
      INIT;
      "Creation Date" := WORKDATE;
      RMSetup.GET;
      IF RMSetup."Default Sales Cycle Code" <> '' THEN
        IF SalesCycle.GET(RMSetup."Default Sales Cycle Code") THEN
          IF NOT SalesCycle.Blocked THEN
            "Sales Cycle Code" := RMSetup."Default Sales Cycle Code";
      IF Cont.GET(Opp.GETFILTER("Contact Company No.")) THEN BEGIN
        VALIDATE("Contact No.",Cont."No.");
        "Salesperson Code" := Cont."Salesperson Code";
        SETRANGE("Contact Company No.","Contact No.");
      END;
      IF Cont.GET(Opp.GETFILTER("Contact No.")) THEN BEGIN
        VALIDATE("Contact No.",Cont."No.");
        "Salesperson Code" := Cont."Salesperson Code";
        SETRANGE("Contact No.","Contact No.");
      END;
      IF SalesPurchPerson.GET(Opp.GETFILTER("Salesperson Code")) THEN BEGIN
        "Salesperson Code" := SalesPurchPerson.Code;
        SETRANGE("Salesperson Code","Salesperson Code");
      END;
      IF Campaign.GET(Opp.GETFILTER("Campaign No.")) THEN BEGIN
        "Campaign No." := Campaign."No.";
        "Salesperson Code" := Campaign."Salesperson Code";
        SETRANGE("Campaign No.","Campaign No.");
      END;
      IF SegHeader.GET(Opp.GETFILTER("Segment No.")) THEN BEGIN
        SegLine.SETRANGE(SegLine."Segment No.",SegHeader."No.");
        IF SegLine.COUNT = 0 THEN
          ERROR(Text001);
        "Segment No." := SegHeader."No.";
        "Campaign No." := SegHeader."Campaign No.";
        "Salesperson Code" := SegHeader."Salesperson Code";
        SETRANGE("Segment No.","Segment No.");
      END;

      StartWizard;
    END;

    PROCEDURE InsertOpportunity@3(VAR Opp2@1000 : Record 5092;OppEntry2@1004 : Record 5093;VAR RMCommentLineTmp@1007 : Record 5061;ActivateFirstStage@1006 : Boolean);
    VAR
      SegHeader@1001 : Record 5076;
      SegLine@1002 : Record 5077;
      SalesCycleStage@1003 : Record 5091;
      OppEntry@1005 : Record 5093;
    BEGIN
      Opp := Opp2;

      IF ActivateFirstStage THEN BEGIN
        SalesCycleStage.RESET;
        SalesCycleStage.SETRANGE("Sales Cycle Code",Opp."Sales Cycle Code");
        IF SalesCycleStage.FIND('-') THEN
          OppEntry2."Sales Cycle Stage" := SalesCycleStage.Stage;
      END;

      IF SegHeader.GET(GETFILTER("Segment No.")) THEN BEGIN
        SegLine.SETRANGE("Segment No.",SegHeader."No.");
        SegLine.SETFILTER("Contact No.",'<>%1','');
        IF SegLine.FIND('-') THEN BEGIN
          IF CONFIRM(Text002,TRUE,SegHeader."No.") THEN BEGIN
            REPEAT
              Opp."Contact No." := SegLine."Contact No.";
              Opp."Contact Company No." := SegLine."Contact Company No.";
              CLEAR(Opp."No.");
              Opp.INSERT(TRUE);
              CreateCommentLines(RMCommentLineTmp,Opp."No.");
              IF ActivateFirstStage THEN BEGIN
                OppEntry.INIT;
                OppEntry := OppEntry2;
                OppEntry.InitOpportunityEntry(Opp);
                OppEntry.InsertEntry(OppEntry,FALSE,TRUE);
                OppEntry.UpdateEstimates;
              END;
            UNTIL SegLine.NEXT = 0;
          END;
        END;
      END ELSE BEGIN
        Opp.INSERT(TRUE);
        CreateCommentLines(RMCommentLineTmp,Opp."No.");
        IF ActivateFirstStage THEN BEGIN
          OppEntry.INIT;
          OppEntry := OppEntry2;
          OppEntry.InitOpportunityEntry(Opp);
          OppEntry.InsertEntry(OppEntry,FALSE,TRUE);
          OppEntry.UpdateEstimates;
        END;
      END;
    END;

    PROCEDURE UpdateOpportunity@4();
    VAR
      TempOppEntry@1000 : TEMPORARY Record 5093;
    BEGIN
      IF "No." <> '' THEN
        TempOppEntry.UpdateOppFromOpp(Rec);
    END;

    PROCEDURE CloseOpportunity@5();
    VAR
      TempOppEntry@1000 : TEMPORARY Record 5093;
    BEGIN
      IF "No." <> '' THEN
        TempOppEntry.CloseOppFromOpp(Rec);
    END;

    PROCEDURE AssignQuote@6();
    VAR
      Cont@1001 : Record 5050;
      SalesHeader@1000 : Record 36;
    BEGIN
      Cont.GET("Contact No.");

      IF (Cont.Type = Cont.Type::Person) AND (Cont."Company No." = '') THEN
        ERROR(
          Text005,
          Cont.TABLECAPTION,Cont."No.");

      TESTFIELD(Status,Status::"In Progress");

      IF NOT SalesHeader.GET(SalesHeader."Document Type"::Quote,"Sales Document No.") THEN BEGIN
        SalesHeader.SETRANGE("Sell-to Contact No.",Cont."No.");
        SalesHeader.INIT;
        SalesHeader."Document Type" := SalesHeader."Document Type"::Quote;
        SalesHeader.INSERT(TRUE);
        SalesHeader.VALIDATE("Salesperson Code","Salesperson Code");
        SalesHeader.VALIDATE("Campaign No.","Campaign No.");
        SalesHeader."Opportunity No." := "No.";
        SalesHeader."Order Date" := GetEstimatedClosingDate;
        SalesHeader."Shipment Date" := SalesHeader."Order Date";
        SalesHeader.MODIFY;
        "Sales Document Type" := "Sales Document Type"::Quote;
        "Sales Document No." := SalesHeader."No.";
        MODIFY;
      END ELSE
        ERROR(Text011);
      FORM.RUN(FORM::"Sales Quote",SalesHeader);
    END;

    PROCEDURE GetEstimatedClosingDate@8() : Date;
    VAR
      OppEntry@1000 : Record 5093;
    BEGIN
      OppEntry.SETCURRENTKEY(Active,"Opportunity No.");
      OppEntry.SETRANGE(Active,TRUE);
      OppEntry.SETRANGE("Opportunity No.","No.");
      IF OppEntry.FIND('-') THEN
        EXIT(OppEntry."Estimated Close Date");
    END;

    PROCEDURE ShowQuote@2();
    VAR
      SalesHeader@1000 : Record 36;
    BEGIN
      IF SalesHeader.GET(SalesHeader."Document Type"::Quote,"Sales Document No.") THEN
        FORM.RUNMODAL(FORM::"Sales Quote",SalesHeader);
    END;

    PROCEDURE CreateCommentLines@7(VAR RMCommentLineTmp@1001 : Record 5061;OppNo@1000 : Code[20]);
    BEGIN
      IF RMCommentLineTmp.FIND('-') THEN
        REPEAT
          RMCommentLine.INIT;
          RMCommentLine := RMCommentLineTmp;
          RMCommentLine."No." := OppNo;
          RMCommentLine.INSERT;
        UNTIL RMCommentLineTmp.NEXT = 0;
    END;

    PROCEDURE StartWizard@11();
    VAR
      Cont@1000 : Record 5050;
      Campaign@1001 : Record 5071;
      SegHeader@1002 : Record 5076;
    BEGIN
      "Wizard Step" := "Wizard Step"::"1";

      IF Cont.GET(GETFILTER("Contact No.")) THEN
        "Wizard Contact Name" := Cont.Name
      ELSE
        IF Cont.GET(GETFILTER("Contact Company No.")) THEN
          "Wizard Contact Name" := Cont.Name;

      IF Campaign.GET(GETFILTER("Campaign No.")) THEN
        "Wizard Campaign Description" := Campaign.Description;
      IF SegHeader.GET(GETFILTER("Segment No.")) THEN
        "Segment Description" := SegHeader.Description;

      INSERT;
      FORM.RUNMODAL(FORM::"Create Opportunity",Rec);
    END;

    PROCEDURE PerformNextWizardStatus@9();
    VAR
      InteractTmpl@1000 : Record 5064;
      Cont@1001 : Record 5050;
    BEGIN
      "Wizard Step" := "Wizard Step" + 1;

      IF "Wizard Step" = "Wizard Step"::"2" THEN BEGIN
        CLEAR(Cont);
        IF Cont.GET(GETFILTER("Contact No.")) THEN
          "Contact Name" := Cont.Name
        ELSE
          IF Cont.GET(GETFILTER("Contact Company No.")) THEN
            "Contact Name" := Cont.Name;
      END;
    END;

    PROCEDURE PerformPrevWizardStatus@12();
    BEGIN
      "Wizard Step" := "Wizard Step" - 1;
    END;

    PROCEDURE CheckStatus@16();
    VAR
      InteractTmpl@1000 : Record 5064;
      Attachment@1001 : Record 5062;
      SalutationFormula@1002 : Record 5069;
    BEGIN
      CASE "Wizard Step" OF
        "Wizard Step"::"1":
          BEGIN
            IF "Creation Date" = 0D THEN
              ErrorMessage(FIELDCAPTION("Creation Date"));
            IF Description = '' THEN
              ErrorMessage(FIELDCAPTION(Description));
          END;
        "Wizard Step"::"2":
          BEGIN
            IF NOT SegHeader.GET(GETFILTER("Segment No.")) THEN
              IF "Contact No." = '' THEN
                ERROR(Text023);
            IF "Salesperson Code" = '' THEN
              ErrorMessage(FIELDCAPTION("Salesperson Code"));
            IF "Sales Cycle Code" = '' THEN
              ErrorMessage(FIELDCAPTION("Sales Cycle Code"));
          END;
        "Wizard Step"::"4":
          BEGIN
            IF "Activate First Stage" THEN BEGIN
              IF "Wizard Estimated Value (LCY)" <= 0 THEN
                ERROR(Text024,FIELDCAPTION("Wizard Estimated Value (LCY)"));
              IF "Wizard Chances of Success %" <= 0 THEN
                ERROR(Text024,FIELDCAPTION("Wizard Chances of Success %"));
              IF "Wizard Estimated Closing Date" = 0D THEN
                ErrorMessage(FIELDCAPTION("Wizard Estimated Closing Date"));
              IF "Wizard Estimated Closing Date" < OppEntry."Date of Change" THEN
                ERROR(Text025);
            END;
          END;
      END;
    END;

    PROCEDURE FinishWizard@18() : Boolean;
    VAR
      ActivateFirstStage@1000 : Boolean;
    BEGIN
      "Wizard Step" := Opp."Wizard Step"::" ";
      ActivateFirstStage := "Activate First Stage";
      "Activate First Stage" := FALSE;
      OppEntry."Chances of Success %" := "Wizard Chances of Success %";
      OppEntry."Estimated Close Date" := "Wizard Estimated Closing Date";
      OppEntry."Estimated Value (LCY)" := "Wizard Estimated Value (LCY)";

      "Wizard Chances of Success %" := 0;
      "Wizard Estimated Closing Date" := 0D;
      "Wizard Estimated Value (LCY)" := 0;
      "Segment Description" := '';
      "Wizard Contact Name" := '';
      "Wizard Campaign Description" := '';

      InsertOpportunity(Rec,OppEntry,RMCommentLineTmp,ActivateFirstStage);
      DELETE;
    END;

    PROCEDURE ErrorMessage@10(FieldName@1000 : Text[1024]);
    BEGIN
      ERROR(Text022,FieldName);
    END;

    PROCEDURE ShowComments@13();
    BEGIN
      RMCommentLineTmp.SETRANGE("Table Name",RMCommentLineTmp."Table Name"::Opportunity);
      RMCommentLineTmp.SETRANGE("No.","No.");
      RMCommentLineTmp.SETRANGE("Sub No.",0);
      FORM.RUNMODAL(FORM::"Rlshp. Mgt. Comment Sheet",RMCommentLineTmp);
    END;

    PROCEDURE CommentsExist@14() : Boolean;
    BEGIN
      EXIT(NOT RMCommentLineTmp.ISEMPTY)
    END;

    PROCEDURE GetComments@64(VAR RMCommentLine@1001 : Record 5061);
    BEGIN
      RMCommentLine.DELETEALL;
      IF RMCommentLineTmp.FIND('-') THEN
        REPEAT
          RMCommentLine := RMCommentLineTmp;
          RMCommentLine.INSERT;
        UNTIL RMCommentLineTmp.NEXT = 0;
    END;

    PROCEDURE SetComments@53(VAR RMCommentLine@1001 : Record 5061);
    BEGIN
      RMCommentLineTmp.DELETEALL;

      IF RMCommentLine.FINDSET THEN
        REPEAT
          RMCommentLineTmp := RMCommentLine;
          RMCommentLineTmp.INSERT;
        UNTIL RMCommentLine.NEXT = 0;
    END;

    BEGIN
    END.
  }
}
