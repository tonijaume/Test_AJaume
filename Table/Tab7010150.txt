OBJECT Table 7010150 Precios Compra Transportista
{
  OBJECT-PROPERTIES
  {
    Date=23/06/15;
    Time=[ 8:17:31];
    Modified=Yes;
    Version List=AIC2009;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               rPar.FINDFIRST;
               IF NOT rPar."Empresa Delegacion" THEN
                 ERROR(Text001);

               rPre.RESET;
               rPre.SETCURRENTKEY(Delegacion,
                                  "N§ Contrato",
                                  "Orden precio");
               rPre.SETRANGE(Delegacion     , Delegacion);
               rPre.SETRANGE("N§ Contrato"  , "N§ Contrato");
               IF rPre.FINDLAST THEN
                 "Orden precio" := rPre."Orden precio" + 1
               ELSE
                 "Orden precio" := 1;
               rPre.RESET;

               IF "Tipo precio" = "Tipo precio"::Suplemento THEN
                 "Tipo aplicacion" := "Tipo aplicacion"::Pax;
               IF rConC.GET(Delegacion, "N§ Contrato", rConC."Tipo Contrato"::Transportista) THEN
               BEGIN
                 "C¢d. divisa" := rConC."Cod. divisa";
                 //+$001
                 "Fecha desde" := rConC."Fecha inicio contrato";
                 "Fecha hasta" := rConC."Fecha final contrato";
                 //+$001
               END;
             END;

    OnModify=BEGIN
               rPar.FINDFIRST;
               IF NOT rPar."Empresa Delegacion" THEN
                 ERROR(Text002);

               IF "Fecha desde" = 0D THEN
                 MESSAGE(Text005);
               IF "Fecha hasta" = 0D THEN
                 MESSAGE(Text006);
               IF "Rango desde" = 0 THEN
                 MESSAGE(Text007);
               IF "Rango hasta" = 0 THEN
                 MESSAGE(Text008);
               CASE "Tipo precio" OF

                 //-$008"Tipo precio"::"Precio zona":
                 //-$008  IF "Tipo vehiculo" = '' THEN
                 //-$008    MESSAGE(Text009);

                 "Tipo precio"::Suplemento:
                   IF "Codigo suplemento" = '' THEN
                     MESSAGE(Text010);
               END
             END;

    OnDelete=BEGIN
               rPar.FINDFIRST;
               IF NOT rPar."Empresa Delegacion" THEN
                 ERROR(Text011);

               IF ("Tipo aplicacion" = "Tipo aplicacion"::Pax) AND ("Codigo suplemento" = '') THEN
               BEGIN
                 rPre.RESET;
                 rPre.RESET;
                 rPre.SETRANGE (Delegacion         , Delegacion);
                 rPre.SETRANGE ("N§ Contrato"      , "N§ Contrato");
                 rPre.SETRANGE ("Tipo precio"      , "Tipo precio");
                 rPre.SETRANGE ("Orden dependiente", "Orden precio");
                 rPre.SETFILTER("Codigo suplemento", '<>%1', '');
                 IF rPre.FINDSET(TRUE) THEN
                   rPre.DELETEALL;
               END;

               cPar.intro_historico_precios_transp(Delegacion, "N§ Contrato", rHisP.Tipo::Compra, "Tipo precio",
                                                   "Orden precio", Text012, Text013, '');
             END;

    OnRename=BEGIN
               rPar.FINDFIRST;
               IF NOT rPar."Empresa Delegacion" THEN
                 ERROR(Text014);
             END;

    CaptionML=[ENU=Carrier purchase prices;
               ESP=Precios Compra Transportista];
    PasteIsValid=No;
  }
  FIELDS
  {
    { 1   ;   ;Delegacion          ;Code10        ;TableRelation=Delegacion.Codigo;
                                                   CaptionML=[ENU=Local Office;
                                                              ESP=Delegacion];
                                                   Description=PK, FK Delegacion;
                                                   Editable=No }
    { 3   ;   ;N§ Contrato         ;Code10        ;CaptionML=[ENU=Contract No.;
                                                              ESP=N§ Contrato];
                                                   Description=PK;
                                                   Editable=No }
    { 5   ;   ;Tipo precio         ;Option        ;CaptionML=[ENU=Price Type;
                                                              ESP=Tipo precio];
                                                   OptionCaptionML=[ENU=Price x zone,Supplement,Route price;
                                                                    ESP=Precio zona,Suplemento,Precio ruta];
                                                   OptionString=Precio zona,Suplemento,Precio ruta;
                                                   Description=PK;
                                                   Editable=No }
    { 6   ;   ;Producto            ;Code10        ;TableRelation="Producto agencia".Codigo WHERE (Tipo Producto=CONST(Excursion),
                                                                                                  Caducado=CONST(No));
                                                   OnValidate=BEGIN
                                                                IF "Orden precio" = 0 THEN
                                                                  EXIT;

                                                                IF Activo AND ("Tipo precio" = "Tipo precio"::"Precio zona") THEN BEGIN
                                                                  rPre.RESET;
                                                                  rPre.SETRANGE (Delegacion     , xRec.Delegacion);
                                                                  rPre.SETRANGE ("N§ Contrato"  , xRec."N§ Contrato");
                                                                  rPre.SETRANGE ("Tipo precio"  , xRec."Tipo precio");
                                                                  rPre.SETRANGE (Producto       , xRec.Producto);
                                                                  rPre.SETRANGE (Zona           , xRec.Zona);
                                                                  rPre.SETRANGE ("Fecha desde"  , xRec."Fecha desde");
                                                                  rPre.SETRANGE ("Fecha hasta"  , xRec."Fecha hasta");
                                                                  rPre.SETRANGE ("Tipo vehiculo", xRec."Tipo vehiculo");
                                                                  rPre.SETRANGE ("Rango desde"  , xRec."Rango desde");
                                                                  rPre.SETRANGE ("Rango hasta"  , xRec."Rango hasta");
                                                                  rPre.SETFILTER("Codigo suplemento", '<>%1', '');
                                                                  IF rPre.FINDFIRST THEN
                                                                    ERROR(Text015);
                                                                END;

                                                                // $002
                                                                cFunExc.ControlOficinaExcursion(Producto, TRUE);

                                                                IF Producto <> xRec.Producto THEN BEGIN
                                                                  VALIDATE(Activo, FALSE);

                                                                  cPar.intro_historico_precios_transp(Delegacion, "N§ Contrato", rHisP.Tipo::Compra, "Tipo precio", "Orden precio",
                                                                                                      FIELDCAPTION(Producto),
                                                                                                      FORMAT(xRec.Producto), FORMAT(Producto));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Excursion;
                                                              ESP=Excursion];
                                                   Description=PK, FK Producto agencia }
    { 7   ;   ;Orden precio        ;Integer       ;CaptionML=[ENU=Price order;
                                                              ESP=Orden Precio];
                                                   Description=PK;
                                                   Editable=No }
    { 9   ;   ;Fecha desde         ;Date          ;OnValidate=BEGIN
                                                                IF "Orden precio" = 0 THEN
                                                                  EXIT;

                                                                IF "Fecha desde" <> xRec."Fecha desde" THEN BEGIN
                                                                  IF "Fecha hasta" <> 0D THEN BEGIN
                                                                    IF "Fecha desde" > "Fecha hasta" THEN
                                                                      ERROR(Text016);
                                                                  END;

                                                                  VALIDATE(Activo, FALSE);

                                                                  modifica_rangos_elementos;

                                                                  cPar.intro_historico_precios_transp(Delegacion, "N§ Contrato", rHisP.Tipo::Compra, "Tipo precio", "Orden precio",
                                                                                                      FIELDCAPTION("Fecha desde"),
                                                                                                      FORMAT(xRec."Fecha desde"), FORMAT("Fecha desde"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Date From;
                                                              ESP=Fecha desde] }
    { 11  ;   ;Fecha hasta         ;Date          ;OnValidate=BEGIN
                                                                IF "Orden precio" = 0 THEN
                                                                  EXIT;

                                                                IF "Fecha hasta" <> xRec."Fecha hasta" THEN BEGIN
                                                                  IF "Fecha desde" <> 0D THEN BEGIN
                                                                    IF "Fecha desde" > "Fecha hasta" THEN
                                                                      ERROR(Text016);
                                                                  END;

                                                                  VALIDATE(Activo, FALSE);

                                                                  modifica_rangos_elementos;

                                                                  cPar.intro_historico_precios_transp(Delegacion, "N§ Contrato", rHisP.Tipo::Compra, "Tipo precio", "Orden precio",
                                                                                                      FIELDCAPTION("Fecha hasta"),
                                                                                                      FORMAT(xRec."Fecha hasta"), FORMAT("Fecha hasta"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Date To;
                                                              ESP=Fecha hasta] }
    { 13  ;   ;Zona                ;Code10        ;TableRelation="Zonas Excursiones".Zona WHERE (Codigo Contrato=FIELD(N§ Contrato));
                                                   OnValidate=BEGIN
                                                                IF "Orden precio" = 0 THEN
                                                                  EXIT;

                                                                IF Activo AND ("Tipo precio" = "Tipo precio"::"Precio zona") THEN
                                                                BEGIN
                                                                  rPre.RESET;
                                                                  rPre.SETRANGE (Delegacion     , xRec.Delegacion);
                                                                  rPre.SETRANGE ("N§ Contrato"  , xRec."N§ Contrato");
                                                                  rPre.SETRANGE ("Tipo precio"  , xRec."Tipo precio");
                                                                  rPre.SETRANGE (Producto       , xRec.Producto);
                                                                  rPre.SETRANGE (Zona           , xRec.Zona);
                                                                  rPre.SETRANGE ("Fecha desde"  , xRec."Fecha desde");
                                                                  rPre.SETRANGE ("Fecha hasta"  , xRec."Fecha hasta");
                                                                  rPre.SETRANGE ("Tipo vehiculo", xRec."Tipo vehiculo");
                                                                  rPre.SETRANGE ("Rango desde"  , xRec."Rango desde");
                                                                  rPre.SETRANGE ("Rango hasta"  , xRec."Rango hasta");
                                                                  rPre.SETFILTER("Codigo suplemento", '<>%1', '');

                                                                  IF rPre.FINDFIRST THEN
                                                                    ERROR(Text015);
                                                                END;

                                                                IF Zona <> xRec.Zona THEN
                                                                BEGIN
                                                                  modifica_rangos_elementos;

                                                                  VALIDATE(Activo, FALSE);

                                                                  cPar.intro_historico_precios_transp(Delegacion, "N§ Contrato", rHisP.Tipo::Compra, "Tipo precio", "Orden precio",
                                                                                                      FIELDCAPTION(Producto),
                                                                                                      FORMAT(xRec.Producto), FORMAT(Producto));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Zone;
                                                              ESP=Zona];
                                                   Description=FK tabla Zona compra excursiones }
    { 14  ;   ;Precio              ;Decimal       ;OnValidate=VAR
                                                                lrPre@1100217000 : Record 7010150;
                                                              BEGIN
                                                                IF Precio <> xRec.Precio THEN
                                                                BEGIN

                                                                  IF "Codigo suplemento" = '' THEN
                                                                  BEGIN
                                                                    lrPre.RESET;
                                                                    lrPre.SETRANGE (Delegacion         , Delegacion);
                                                                    lrPre.SETRANGE ("N§ Contrato"      , "N§ Contrato");
                                                                    lrPre.SETRANGE ("Tipo precio"    , "Tipo precio");
                                                                    lrPre.SETRANGE ("Orden dependiente", "Orden precio");
                                                                    lrPre.SETFILTER("Codigo suplemento"    , '<>%1', '');
                                                                    IF lrPre.FINDSET(TRUE) THEN
                                                                      lrPre.MODIFYALL(Precio, Precio);
                                                                  END;

                                                                  cPar.intro_historico_precios_transp(Delegacion, "N§ Contrato", rHisP.Tipo::Compra, "Tipo precio", "Orden precio",
                                                                                                      FIELDCAPTION(Precio),
                                                                                                      FORMAT(xRec.Precio), FORMAT(Precio));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Price;
                                                              ESP=Precio];
                                                   AutoFormatType=2;
                                                   AutoFormatExpr="C¢d. divisa" }
    { 15  ;   ;O_Precio (DL)       ;Decimal       ;CaptionML=[ENU=Price (LCY);
                                                              ESP=Precio (DL)];
                                                   Description=$004;
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 17  ;   ;Tipo aplicacion     ;Option        ;OnValidate=BEGIN
                                                                IF "Tipo aplicacion" <> xRec."Tipo aplicacion" THEN
                                                                BEGIN
                                                                  _CheckCosteTicket; //+$005

                                                                  cPar.intro_historico_precios_transp(Delegacion, "N§ Contrato", rHisP.Tipo::Compra, "Tipo precio", "Orden precio",
                                                                                                      FIELDCAPTION("Tipo aplicacion"),
                                                                                                      FORMAT(xRec."Tipo aplicacion"), FORMAT("Tipo aplicacion"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Price application;
                                                              ESP=Tipo aplicacion];
                                                   OptionCaptionML=[ENU=,Pax,Vehicle;
                                                                    ESP=,Pax,Vehiculo];
                                                   OptionString=,Pax,Vehiculo }
    { 19  ;   ;C¢d. divisa         ;Code10        ;TableRelation=Currency.Code;
                                                   OnValidate=BEGIN
                                                                IF "C¢d. divisa" <> xRec."C¢d. divisa" THEN
                                                                  cPar.intro_historico_precios_transp(Delegacion, "N§ Contrato", rHisP.Tipo::Compra, "Tipo precio", "Orden precio",
                                                                                                      FIELDCAPTION("C¢d. divisa"),
                                                                                                      FORMAT(xRec."C¢d. divisa"), FORMAT("C¢d. divisa"));
                                                              END;

                                                   CaptionML=[ENU=Currency code;
                                                              ESP=C¢d. divisa];
                                                   Description=FK Divisa;
                                                   Editable=No }
    { 21  ;   ;Tipo vehiculo       ;Code10        ;TableRelation="Tipo transporte".Codigo;
                                                   OnValidate=BEGIN
                                                                IF "Orden precio" = 0 THEN
                                                                  EXIT;

                                                                IF "Tipo vehiculo" <> xRec."Tipo vehiculo" THEN
                                                                BEGIN
                                                                  VALIDATE(Activo, FALSE);

                                                                  modifica_rangos_elementos;

                                                                  cPar.intro_historico_precios_transp(Delegacion, "N§ Contrato", rHisP.Tipo::Compra, "Tipo precio", "Orden precio",
                                                                                                      FIELDCAPTION("Tipo vehiculo"),
                                                                                                      FORMAT(xRec."Tipo vehiculo"), FORMAT("Tipo vehiculo"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Vehicle type;
                                                              ESP=Tipo vehiculo];
                                                   Description=FK Tipo transporte }
    { 23  ;   ;Rango desde         ;Integer       ;OnValidate=BEGIN
                                                                IF "Orden precio" = 0 THEN
                                                                  EXIT;

                                                                IF "Rango desde" <> xRec."Rango desde" THEN BEGIN
                                                                  IF "Rango hasta" <> 0 THEN
                                                                     IF "Rango desde" > "Rango hasta" THEN
                                                                       ERROR(Text017);

                                                                  VALIDATE(Activo, FALSE);

                                                                  modifica_rangos_elementos;

                                                                  cPar.intro_historico_precios_transp(Delegacion, "N§ Contrato", rHisP.Tipo::Compra, "Tipo precio", "Orden precio",
                                                                                                      FIELDCAPTION("Rango desde"),
                                                                                                      FORMAT(xRec."Rango desde"), FORMAT("Rango desde"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Range From;
                                                              ESP=Rango desde] }
    { 25  ;   ;Rango hasta         ;Integer       ;OnValidate=BEGIN
                                                                IF "Orden precio" = 0 THEN
                                                                  EXIT;

                                                                IF "Rango hasta" <> xRec."Rango hasta" THEN BEGIN
                                                                  IF "Rango desde" <> 0 THEN
                                                                     IF "Rango desde" > "Rango hasta" THEN
                                                                       ERROR(Text017);

                                                                  VALIDATE(Activo, FALSE);
                                                                  modifica_rangos_elementos;

                                                                  cPar.intro_historico_precios_transp(Delegacion, "N§ Contrato", rHisP.Tipo::Compra, "Tipo precio", "Orden precio",
                                                                                                      FIELDCAPTION("Rango hasta"),
                                                                                                      FORMAT(xRec."Rango hasta"), FORMAT("Rango hasta"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Range To;
                                                              ESP=Rango hasta] }
    { 27  ;   ;Codigo suplemento   ;Code10        ;TableRelation=IF (Tipo precio=CONST(Precio zona)) "Tipo elemento"."Tipo elemento" WHERE (Humano=CONST(Yes))
                                                                 ELSE IF (Tipo precio=CONST(Precio ruta)) "Tipo elemento"."Tipo elemento" WHERE (Humano=CONST(Yes))
                                                                 ELSE IF (Tipo precio=CONST(Suplemento)) "Suplemento Compra"."Codigo Suplemento";
                                                   OnValidate=BEGIN
                                                                IF "Codigo suplemento" <> xRec."Codigo suplemento" THEN BEGIN
                                                                  VALIDATE(Activo, FALSE);

                                                                  cPar.intro_historico_precios_transp(Delegacion, "N§ Contrato", rHisP.Tipo::Compra, "Tipo precio", "Orden precio",
                                                                                                      FIELDCAPTION("Codigo suplemento"),
                                                                                                      FORMAT(xRec."Codigo suplemento"), FORMAT("Codigo suplemento"));
                                                                END;
                                                              END;

                                                   OnLookup=VAR
                                                              lrTip@1100253000 : Record 7009715;
                                                              lrCodSupl@1100217000 : Record 7010144;
                                                            BEGIN
                                                              CASE "Tipo precio" OF
                                                                "Tipo precio"::"Precio zona":
                                                                BEGIN
                                                                  CLEAR(lrTip);
                                                                  lrTip.FILTERGROUP(2);
                                                                  lrTip.SETRANGE(Humano, TRUE);
                                                                  lrTip.FILTERGROUP(0);

                                                                  IF FORM.RUNMODAL(7009844, lrTip) = ACTION::LookupOK THEN
                                                                    VALIDATE("Codigo suplemento", lrTip."Tipo elemento");
                                                                END;
                                                                "Tipo precio"::Suplemento:
                                                                BEGIN
                                                                  lrCodSupl.RESET;
                                                                  IF FORM.RUNMODAL(0, lrCodSupl) = ACTION::LookupOK THEN
                                                                    VALIDATE("Codigo suplemento", lrCodSupl."Codigo Suplemento");
                                                                END;
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Supplement Code;
                                                              ESP=Codigo suplemento];
                                                   Description=FK Tipo elemento }
    { 35  ;   ;Activo              ;Boolean       ;OnValidate=BEGIN
                                                                Comprobar_Contrato;

                                                                Activo := activar_precio;
                                                              END;

                                                   CaptionML=[ENU=Active;
                                                              ESP=Activo];
                                                   Editable=No }
    { 37  ;   ;Orden dependiente   ;Integer       ;CaptionML=[ENU=Related order;
                                                              ESP=Orden dependiente];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Delegacion,N§ Contrato,Tipo precio,Producto,Orden precio;
                                                   Clustered=Yes }
    {    ;Delegacion,N§ Contrato,Tipo precio,Codigo suplemento;
                                                   KeyGroups=RENUMERING }
    {    ;Zona,Tipo vehiculo,Codigo suplemento,Activo,Fecha desde,Fecha hasta,Rango desde,Rango hasta;
                                                   KeyGroups=RENUMERING }
    {    ;Delegacion,N§ Contrato,Orden precio     ;KeyGroups=RENUMERING }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1103355007 : TextConst 'ENU=To sign up purchase prices of transfer is only available  in the local offices;ESP=Solo es posible dar de alta precios de compra de transfer en las Delegaciones.';
      Text002@1103355008 : TextConst 'ENU=To modify purchase prices of transfer is only available  in the local offices;ESP=Solo es posible modificar precios de compra de transfer en las Delegaciones.';
      Text003@1103355009 : TextConst 'ENU=Product must be specified;ESP=Debe especificar un producto';
      Text004@1103355010 : TextConst 'ENU=Code must be specified;ESP=Debe especificar un codigo';
      Text005@1103355011 : TextConst 'ENU=Correct date from must be specified;ESP=Debe especificar una fecha desde correcta';
      Text006@1103355012 : TextConst 'ENU=Correct date to must be specified;ESP=Debe especificar una fecha hasta correcta';
      Text007@1103355013 : TextConst 'ENU=Range from must be specified;ESP=Debe especificar un rango desde';
      Text008@1103355014 : TextConst 'ENU=Range to must be specified;ESP=Debe especificar un rango hasta';
      Text009@1103355015 : TextConst 'ENU=Vehicle type must be specified;ESP=Debe especificar un tipo veh¡culo';
      Text010@1103355016 : TextConst 'ENU=Element type must be specified;ESP=Debe especificar un tipo elemento';
      Text011@1103355017 : TextConst 'ENU=To cancel purchase prices of transfer is only available  in the local offices;ESP=Solo es posible dar de baja precios de compra de transfer en las Delegaciones.';
      Text012@1103355018 : TextConst 'ENU=Deleted;ESP=Borrado';
      Text013@1103355019 : TextConst 'ENU=Register deleted;ESP=Registro Borrado';
      Text014@1103355020 : TextConst 'ENU=Only is possible to rename transfer purchase prices in the Local Offices;ESP=Solo es posible renombrar precios de compra de transfer en las Delegaciones.';
      Text015@1103355021 : TextConst 'ENU=Code cannot be changed;ESP=No se puede cambiar el c¢digo';
      Text016@1103355022 : TextConst 'ENU=Date from cannot be higher than date to;ESP=La fecha desde no puede ser posterior a la fecha hasta.';
      Text017@1103355023 : TextConst 'ENU=Range from cannot be higher than range to;ESP=El rango desde no puede ser mayor que el rango hasta.';
      Text018@1103355024 : TextConst 'ENU="Indicated element does not exist or is not suitable for the current type of price ";ESP=El tipo de elemento indicado no existe o no es adecuado para el tipo de precio actual.';
      Text019@1103355025 : TextConst 'ENU=Date from is not within the period of the contract;ESP=La fecha desde no esta entre el periodo del contrato';
      Text020@1103355026 : TextConst 'ENU=Date to is not within the period of the contract;ESP=La fecha hasta no esta entre el periodo del contrato';
      Text021@1103355027 : TextConst 'ENU=This price overlaps with another entered price;ESP=Este precio se solapa con otro precio ya introducido.';
      Text022@1103355028 : TextConst 'ENU=Contract does not exist for this register;ESP=No existe el contrato para este registro';
      rPar@1103355000 : Record 7009700;
      rPre@1103355001 : Record 7010150;
      rTipoElem@1103355002 : Record 7009715;
      cPar@1103355003 : Codeunit 7009700;
      cFunExc@1100217000 : Codeunit 7010141;
      rHisP@1103355004 : Record 7010155;
      rConC@1103355005 : Record 7010142;
      Text023@1100217001 : TextConst 'ENU=You cannot indicate price per vehicle because the excursion have cost per ticket.;ESP=No se puede indicar precio por vehiculo porque la excursion se costea por ticket.';

    PROCEDURE modifica_rangos_elementos@1();
    VAR
      lrPre@1100217000 : Record 7010150;
    BEGIN
      // modifica_rangos_elementos

      //. Solo actualizamos los precios de adulto/ni¤o para los precios base de transfer
      IF NOT ("Tipo precio" IN ["Tipo precio"::"Precio zona", "Tipo precio"::"Precio ruta"]) THEN
        EXIT;

      //. Si estamos modificando un precio de adulto/ni¤o no hay que actualizar nada
      IF "Codigo suplemento" <> '' THEN
        EXIT;

      IF ("Tipo aplicacion" <> "Tipo aplicacion"::Pax) THEN
        EXIT;

      lrPre.RESET;
      lrPre.SETRANGE (Delegacion         , Delegacion);
      lrPre.SETRANGE ("N§ Contrato"      , "N§ Contrato");
      lrPre.SETRANGE ("Tipo precio"    , "Tipo precio");
      lrPre.SETRANGE ("Orden dependiente", "Orden precio");
      lrPre.SETFILTER("Codigo suplemento"    , '<>%1', '');
      IF lrPre.FINDSET(TRUE) THEN BEGIN
        lrPre.MODIFYALL(Zona         , Zona);
        lrPre.MODIFYALL("Fecha desde"  , "Fecha desde");
        lrPre.MODIFYALL("Fecha hasta"  , "Fecha hasta");
        lrPre.MODIFYALL("Tipo vehiculo", "Tipo vehiculo");
        lrPre.MODIFYALL("Rango desde"  , "Rango desde");
        lrPre.MODIFYALL("Rango hasta"  , "Rango hasta");
      END;
    END;

    PROCEDURE activar_precio@2() : Boolean;
    VAR
      rPrecio@1103355000 : Record 7010150;
      rConC@1103355001 : Record 7010142;
    BEGIN
      IF rConC.GET(Delegacion, "N§ Contrato", rConC."Tipo Contrato"::Transportista) THEN BEGIN
        IF NOT rConC.Confirmado THEN
          EXIT(FALSE);
        IF ("Fecha desde" = 0D) OR ("Fecha hasta" = 0D) THEN
          EXIT(FALSE);
        IF ("Fecha desde" < rConC."Fecha inicio contrato") OR
             ("Fecha desde" > rConC."Fecha final contrato") THEN BEGIN
          MESSAGE(Text019);
          EXIT(FALSE);
        END;

        IF ("Fecha hasta" < rConC."Fecha inicio contrato") OR
             ("Fecha hasta" > rConC."Fecha final contrato") THEN BEGIN
          MESSAGE(Text020);
          EXIT(FALSE);
        END;
      END;

      _CheckCosteTicket; //+$005

      rPrecio.RESET;
      rPrecio.SETRANGE (Delegacion     ,Delegacion);
      rPrecio.SETRANGE ("N§ Contrato"  ,"N§ Contrato");
      rPrecio.SETRANGE ("Tipo precio","Tipo precio");
      rPrecio.SETRANGE (Producto       ,Producto);
      rPrecio.SETRANGE (Zona         ,Zona);
      IF"Tipo precio" ="Tipo precio"::"Precio zona" THEN
        rPrecio.SETRANGE ("Tipo vehiculo","Tipo vehiculo");
      rPrecio.SETRANGE ("Codigo suplemento","Codigo suplemento");
      rPrecio.SETRANGE (Activo         , TRUE);
      rPrecio.SETFILTER("Orden precio" , '<>%1&<>0',"Orden precio");

      rPrecio.SETFILTER("Fecha desde"  , '<=%1',"Fecha desde");
      rPrecio.SETFILTER("Fecha hasta"  , '>=%1',"Fecha desde");
      IF rPrecio.FINDFIRST THEN BEGIN
        rPrecio.SETFILTER("Rango desde", '<=%1',"Rango desde");
        rPrecio.SETFILTER("Rango hasta", '>=%1',"Rango desde");
        IF rPrecio.FINDFIRST THEN BEGIN
            MESSAGE(Text021);
            EXIT(FALSE);
        END;

        rPrecio.SETFILTER("Rango desde", '<=%1',"Rango hasta");
        rPrecio.SETFILTER("Rango hasta", '>=%1',"Rango hasta");
        IF rPrecio.FINDFIRST THEN BEGIN
            MESSAGE(Text021);
            EXIT(FALSE);
        END;

        rPrecio.SETFILTER("Rango desde", '>=%1',"Rango desde");
        rPrecio.SETFILTER("Rango hasta", '<=%1',"Rango hasta");
        IF rPrecio.FINDFIRST THEN BEGIN
            MESSAGE(Text021);
            EXIT(FALSE);
        END;
      END;

      rPrecio.SETFILTER("Fecha desde"  , '<=%1',"Fecha hasta");
      rPrecio.SETFILTER("Fecha hasta"  , '>=%1',"Fecha hasta");
      IF rPrecio.FINDFIRST THEN BEGIN
        rPrecio.SETFILTER("Rango desde", '<=%1',"Rango desde");
        rPrecio.SETFILTER("Rango hasta", '>=%1',"Rango desde");
        IF rPrecio.FINDFIRST THEN BEGIN
            MESSAGE(Text021);
            EXIT(FALSE);
        END;

        rPrecio.SETFILTER("Rango desde", '<=%1',"Rango hasta");
        rPrecio.SETFILTER("Rango hasta", '>=%1',"Rango hasta");
        IF rPrecio.FINDFIRST THEN BEGIN
            MESSAGE(Text021);
            EXIT(FALSE);
        END;

        rPrecio.SETFILTER("Rango desde", '>=%1',"Rango desde");
        rPrecio.SETFILTER("Rango hasta", '<=%1',"Rango hasta");
        IF rPrecio.FINDFIRST THEN BEGIN
            MESSAGE(Text021);
            EXIT(FALSE);
        END;
      END;

      rPrecio.SETFILTER("Fecha desde"  , '>=%1',"Fecha desde");
      rPrecio.SETFILTER("Fecha hasta"  , '<=%1',"Fecha hasta");
      IF rPrecio.FINDFIRST THEN BEGIN
        rPrecio.SETFILTER("Rango desde", '<=%1',"Rango desde");
        rPrecio.SETFILTER("Rango hasta", '>=%1',"Rango desde");
        IF rPrecio.FINDFIRST THEN BEGIN
            MESSAGE(Text021);
            EXIT(FALSE);
        END;

        rPrecio.SETFILTER("Rango desde", '<=%1',"Rango hasta");
        rPrecio.SETFILTER("Rango hasta", '>=%1',"Rango hasta");
        IF rPrecio.FINDFIRST THEN BEGIN
            MESSAGE(Text021);
            EXIT(FALSE);
        END;

        rPrecio.SETFILTER("Rango desde", '>=%1',"Rango desde");
        rPrecio.SETFILTER("Rango hasta", '<=%1',"Rango hasta");
        IF rPrecio.FINDFIRST THEN BEGIN
            MESSAGE(Text021);
            EXIT(FALSE);
        END;
      END;

      CASE "Tipo precio" OF
        //-$008"Tipo precio"::"Precio zona":
        //-$008  IF ("Fecha desde" = 0D) OR ("Fecha hasta" = 0D) OR
        //-$008     ("Rango desde" = 0) OR ("Rango hasta" = 0) OR ("Tipo vehiculo" = '') THEN
        //-$008    EXIT(FALSE);

        "Tipo precio"::"Precio zona":
          IF ("Fecha desde" = 0D) OR ("Fecha hasta" = 0D) OR
             ("Rango desde" = 0) OR ("Rango hasta" = 0) THEN
            EXIT(FALSE);

        "Tipo precio"::Suplemento:
          IF ("Fecha desde" = 0D) OR ("Fecha hasta" = 0D) OR
             ("Rango desde" = 0) OR ("Rango hasta" = 0) OR ("Codigo suplemento" = '') THEN
            EXIT(FALSE);
      END;

      EXIT(TRUE);
    END;

    PROCEDURE Comprobar_Contrato@4();
    VAR
      rContrato@1103355000 : Record 7010142;
    BEGIN
      IF NOT rContrato.GET(Delegacion, "N§ Contrato", rContrato."Tipo Contrato"::Transportista) THEN
        ERROR(Text022);

      IF "Fecha desde" <> 0D THEN
        IF ("Fecha desde" < rContrato."Fecha inicio contrato") OR
           ("Fecha desde" > rContrato."Fecha final contrato") THEN
          MESSAGE(Text019);

      IF "Fecha hasta" <> 0D THEN
        IF ("Fecha hasta" < rContrato."Fecha inicio contrato") OR
           ("Fecha hasta" > rContrato."Fecha final contrato") THEN
          MESSAGE(Text020);
    END;

    PROCEDURE ExistePrecioTipoPersona@1100253000(prPre@1100253000 : Record 7010150;pwTipoPersona@1100253001 : Code[10]);
    VAR
      lrPre@1100253002 : Record 7010150;
    BEGIN
      // ExistePrecioTipoPersona

      lrPre.RESET;
      lrPre.SETRANGE (Delegacion         , prPre.Delegacion);
      lrPre.SETRANGE ("N§ Contrato"      , prPre."N§ Contrato");
      lrPre.SETRANGE ("Tipo precio"    , prPre."Tipo precio");
      lrPre.SETRANGE ("Orden dependiente", prPre."Orden precio");
      lrPre.SETFILTER("Codigo suplemento"    , pwTipoPersona);
      IF NOT lrPre.FINDFIRST THEN
      BEGIN
        lrPre := prPre;
        lrPre.VALIDATE("Codigo suplemento", pwTipoPersona);
        lrPre."Orden dependiente" := prPre."Orden precio";
        lrPre.INSERT(TRUE);

        COMMIT;
      END;
    END;

    LOCAL PROCEDURE _CheckCosteTicket@1100217000();
    VAR
      lrExc@1100217000 : Record 7009710;
    BEGIN
      // _CheckCosteTicket

      IF "Tipo aplicacion" = "Tipo aplicacion"::Pax THEN
        EXIT;

      lrExc.GET(Producto);
      IF lrExc."Coste x ticket" THEN
        ERROR(Text023);
    END;

    BEGIN
    {
      $001 AJS 31052012 Iniciamos las fechas con el periodo del contrato

      $002 JPT 08/08/12 CNT-OC-12004 Incluir filtro por oficina en las excursiones.Control de Oficina en Excursion

      $003 AJS 19122012 Incluyo una relacion entre los precios con tipo precio=PAX y los precios por Adulto y Ni¤o

      $004 AJS 19122012 El precio DL no tiene interes, lo marco como obsoleto

      $005 AJS 11062013 Nueva funcion _CheckCosteTicket para comprobar que no se tratan de definir precios por vehiculo
                        en excursiones que se costean por ticket

      $006 AJS 19062013 Elimino los campos Transportista, "Zona 1" y "Zona 2" porque son obsoletos

      $007 AJS 07052014 Cambio el nombre del campo para que sea Excursion en lugar de Producto

      $008 AJS 11052014 El campo Tipo vehiculo no es obligatorio

      $009 AJS 16092014 Modifico el campo 27 para que sea Codigo suplemento en lugar de Tipo elemento

      $020 AJS 23062015 Corrijo un error en el borrado de precios para borrar los precios dependientes
    }
    END.
  }
}
