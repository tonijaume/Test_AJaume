OBJECT Table 5635 Insurance Journal Line
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVW16.00;
  }
  PROPERTIES
  {
    OnInsert=VAR
               JnlLineDim@1000 : Record 356;
             BEGIN
               JnlLineDim.LOCKTABLE;
               LOCKTABLE;
               InsuranceJnlTempl.GET("Journal Template Name");
               "Source Code" := InsuranceJnlTempl."Source Code";
               InsuranceJnlBatch.GET("Journal Template Name","Journal Batch Name");
               "Reason Code" := InsuranceJnlBatch."Reason Code";

               ValidateShortcutDimCode(1,"Shortcut Dimension 1 Code");
               ValidateShortcutDimCode(2,"Shortcut Dimension 2 Code");
               DimMgt.InsertJnlLineDim(
                 DATABASE::"Insurance Journal Line",
                 "Journal Template Name","Journal Batch Name","Line No.",0,
                 "Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
             END;

    OnDelete=BEGIN
               DimMgt.DeleteJnlLineDim(
                 DATABASE::"Insurance Journal Line",
                 "Journal Template Name","Journal Batch Name","Line No.",0);
             END;

    CaptionML=[ENU=Insurance Journal Line;
               ESP=L¡n. diario seguro];
  }
  FIELDS
  {
    { 1   ;   ;Journal Template Name;Code10       ;TableRelation="Insurance Journal Template";
                                                   CaptionML=[ENU=Journal Template Name;
                                                              ESP=Nombre libro diario] }
    { 2   ;   ;Journal Batch Name  ;Code10        ;TableRelation="Insurance Journal Batch".Name WHERE (Journal Template Name=FIELD(Journal Template Name));
                                                   CaptionML=[ENU=Journal Batch Name;
                                                              ESP=Nombre secci¢n diario] }
    { 3   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              ESP=N§ l¡nea] }
    { 4   ;   ;Insurance No.       ;Code20        ;TableRelation=Insurance;
                                                   OnValidate=BEGIN
                                                                IF "Insurance No." = '' THEN BEGIN
                                                                  CreateDim(DATABASE::Insurance,"Insurance No.");
                                                                  EXIT;
                                                                END;

                                                                Insurance.GET("Insurance No.");
                                                                Insurance.TESTFIELD(Blocked,FALSE);
                                                                Description := Insurance.Description;

                                                                CreateDim(DATABASE::Insurance,"Insurance No.");
                                                              END;

                                                   CaptionML=[ENU=Insurance No.;
                                                              ESP=N§ seguro] }
    { 6   ;   ;FA No.              ;Code20        ;TableRelation="Fixed Asset";
                                                   OnValidate=BEGIN
                                                                IF "FA No." = '' THEN BEGIN
                                                                  "FA Description" := '';
                                                                  EXIT;
                                                                END;
                                                                FA.GET("FA No.");
                                                                "FA Description" := FA.Description;
                                                                FA.TESTFIELD(Blocked,FALSE);
                                                                FA.TESTFIELD(Inactive,FALSE);
                                                              END;

                                                   CaptionML=[ENU=FA No.;
                                                              ESP=A/F N§] }
    { 7   ;   ;FA Description      ;Text30        ;CaptionML=[ENU=FA Description;
                                                              ESP=A/F Descripci¢n] }
    { 8   ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              ESP=Fecha registro] }
    { 9   ;   ;Document Type       ;Option        ;CaptionML=[ENU=Document Type;
                                                              ESP=Tipo documento];
                                                   OptionCaptionML=[ENU=" ,,Invoice,Credit Memo";
                                                                    ESP=" ,,Factura,Abono"];
                                                   OptionString=[ ,,Invoice,Credit Memo] }
    { 10  ;   ;Document Date       ;Date          ;CaptionML=[ENU=Document Date;
                                                              ESP=Fecha emisi¢n documento] }
    { 11  ;   ;Document No.        ;Code20        ;CaptionML=[ENU=Document No.;
                                                              ESP=N§ documento] }
    { 12  ;   ;External Document No.;Code20       ;CaptionML=[ENU=External Document No.;
                                                              ESP=N§ documento externo] }
    { 13  ;   ;Amount              ;Decimal       ;CaptionML=[ENU=Amount;
                                                              ESP=Importe];
                                                   AutoFormatType=1 }
    { 14  ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              ESP=Descripci¢n] }
    { 15  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Shortcut Dimension 1 Code");
                                                                MODIFY;
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 1 Code;
                                                              ESP=C¢d. dim. acceso dir. 1];
                                                   CaptionClass='1,2,1' }
    { 16  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2,"Shortcut Dimension 2 Code");
                                                                MODIFY;
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 2 Code;
                                                              ESP=C¢d. dim. acceso dir. 2];
                                                   CaptionClass='1,2,2' }
    { 17  ;   ;Reason Code         ;Code10        ;TableRelation="Reason Code";
                                                   CaptionML=[ENU=Reason Code;
                                                              ESP=C¢d. auditor¡a] }
    { 18  ;   ;Source Code         ;Code10        ;TableRelation="Source Code";
                                                   CaptionML=[ENU=Source Code;
                                                              ESP=C¢d. origen] }
    { 20  ;   ;Index Entry         ;Boolean       ;CaptionML=[ENU=Index Entry;
                                                              ESP=Mov. valor ajuste] }
    { 21  ;   ;Posting No. Series  ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=Posting No. Series;
                                                              ESP=N§ serie registro] }
  }
  KEYS
  {
    {    ;Journal Template Name,Journal Batch Name,Line No.;
                                                   Clustered=Yes }
    {    ;Journal Template Name,Journal Batch Name,Posting Date;
                                                   MaintainSQLIndex=No }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Insurance@1000 : Record 5628;
      FA@1001 : Record 5600;
      InsuranceJnlTempl@1002 : Record 5633;
      InsuranceJnlBatch@1003 : Record 5634;
      InsuranceJnlLine@1004 : Record 5635;
      NoSeriesMgt@1005 : Codeunit 396;
      DimMgt@1006 : Codeunit 408;

    PROCEDURE SetUpNewLine@8(LastInsuranceJnlLine@1000 : Record 5635);
    BEGIN
      InsuranceJnlTempl.GET("Journal Template Name");
      InsuranceJnlBatch.GET("Journal Template Name","Journal Batch Name");
      InsuranceJnlLine.SETRANGE("Journal Template Name","Journal Template Name");
      InsuranceJnlLine.SETRANGE("Journal Batch Name","Journal Batch Name");
      IF InsuranceJnlLine.FIND('-') THEN BEGIN
        "Posting Date" := LastInsuranceJnlLine."Posting Date";
        "Document No." := LastInsuranceJnlLine."Document No.";
      END ELSE BEGIN
        "Posting Date" := WORKDATE;
        IF InsuranceJnlBatch."No. Series" <> '' THEN BEGIN
          CLEAR(NoSeriesMgt);
          "Document No." := NoSeriesMgt.TryGetNextNo(InsuranceJnlBatch."No. Series","Posting Date");
        END;
      END;
      "Source Code" := InsuranceJnlTempl."Source Code";
      "Reason Code" := InsuranceJnlBatch."Reason Code";
      "Posting No. Series" := InsuranceJnlBatch."Posting No. Series";
    END;

    PROCEDURE CreateDim@13(Type1@1000 : Integer;No1@1001 : Code[20]);
    VAR
      TableID@1002 : ARRAY [10] OF Integer;
      No@1003 : ARRAY [10] OF Code[20];
    BEGIN
      TableID[1] := Type1;
      No[1] := No1;
      "Shortcut Dimension 1 Code" := '';
      "Shortcut Dimension 2 Code" := '';
      DimMgt.GetDefaultDim(
        TableID,No,"Source Code",
        "Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
      IF "Line No." <> 0 THEN
        DimMgt.UpdateJnlLineDefaultDim(
          DATABASE::"Insurance Journal Line",
          "Journal Template Name","Journal Batch Name","Line No.",0,
          "Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
    END;

    PROCEDURE ValidateShortcutDimCode@14(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.ValidateDimValueCode(FieldNumber,ShortcutDimCode);
      IF "Line No." <> 0 THEN BEGIN
        DimMgt.SaveJnlLineDim(
          DATABASE::"Insurance Journal Line","Journal Template Name",
          "Journal Batch Name","Line No.",0,FieldNumber,ShortcutDimCode);
        IF MODIFY THEN;
      END ELSE
        DimMgt.SaveTempDim(FieldNumber,ShortcutDimCode);
    END;

    PROCEDURE LookupShortcutDimCode@18(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.LookupDimValueCode(FieldNumber,ShortcutDimCode);
      IF "Line No." <> 0 THEN BEGIN
        DimMgt.SaveJnlLineDim(
          DATABASE::"Insurance Journal Line","Journal Template Name",
          "Journal Batch Name","Line No.",0,FieldNumber,ShortcutDimCode);
        MODIFY;
      END ELSE
        DimMgt.SaveTempDim(FieldNumber,ShortcutDimCode);
    END;

    PROCEDURE ShowShortcutDimCode@15(VAR ShortcutDimCode@1000 : ARRAY [8] OF Code[20]);
    BEGIN
      IF "Line No." <> 0 THEN
        DimMgt.ShowJnlLineDim(
          DATABASE::"Insurance Journal Line","Journal Template Name",
          "Journal Batch Name","Line No.",0,ShortcutDimCode)
      ELSE
        DimMgt.ShowTempDim(ShortcutDimCode);
    END;

    PROCEDURE GetDim@1(VAR JnlLineDim@1000 : Record 356);
    BEGIN
      DimMgt.GetJnlLineDefaultDim(JnlLineDim);
    END;

    BEGIN
    END.
  }
}
