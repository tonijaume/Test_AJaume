OBJECT Table 7009731 Conversion Habitacion
{
  OBJECT-PROPERTIES
  {
    Date=01/07/14;
    Time=15:26:50;
    Modified=Yes;
    Version List=AIC2009;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               rParAge.FINDFIRST;
               IF NOT rParAge."Empresa Delegacion" THEN
                 ERROR(Text001 + Text002);

               rConversion.RESET;
               rConversion.SETRANGE(Delegacion     , Delegacion);
               rConversion.SETRANGE("N§ Contrato"  , "N§ Contrato");
               rConversion.SETRANGE("Tipo contrato", "Tipo contrato");
               rConversion.SETRANGE("Habitacion TO", "Habitacion TO");
               IF rConversion.FIND('-') THEN
                 ERROR(Text003);

               VALIDATE(Replicado);
             END;

    OnModify=BEGIN
               rParAge.FINDFIRST;
               IF NOT rParAge."Empresa Delegacion" THEN
                 ERROR(Text004 + Text002);

               IF "Tipo contrato" = "Tipo contrato"::Compra THEN
               BEGIN
                 IF rConC.GET(Delegacion, "N§ Contrato") THEN
                 BEGIN
                   rConC.Enviar := TRUE;
                   rConC.MODIFY;
                 END;
               END
               ELSE
               BEGIN
                 IF rConV.GET(Delegacion, "N§ Contrato") THEN
                 BEGIN
                   rConV.Enviar := TRUE;
                   rConV.MODIFY;
                 END;
               END;

               VALIDATE(Replicado);
             END;

    OnDelete=BEGIN
               rParAge.FINDFIRST;
               IF NOT rParAge."Empresa Delegacion" THEN
                 ERROR(Text005 + Text002);

               IF "Tipo contrato" = "Tipo contrato"::Compra THEN
                 cFunSeg.TienePermiso(Text007, TRUE)
               ELSE
                 cFunSeg.TienePermiso(Text009, TRUE);


               // JPT-07/08/03 PARA GOC
               InsertaLinAction;
             END;

    OnRename=BEGIN
               rParAge.FINDFIRST;
               IF NOT rParAge."Empresa Delegacion" THEN
                 ERROR(Text011 + Text002);

               VALIDATE(Replicado);
             END;

    CaptionML=[ENU=Room Conversion;
               ESP=Conversion Habitacion];
    LookupFormID=Form7009741;
    DrillDownFormID=Form7009741;
  }
  FIELDS
  {
    { 1   ;   ;Delegacion          ;Code10        ;TableRelation=Delegacion.Codigo;
                                                   CaptionML=[ENU=Local Office;
                                                              ESP=Delegacion];
                                                   Description=PK, FK Delegacion;
                                                   Editable=No }
    { 3   ;   ;N§ Contrato         ;Code10        ;CaptionML=[ENU=Contract No.;
                                                              ESP=N§ Contrato];
                                                   Description=PK;
                                                   Editable=No }
    { 5   ;   ;Habitacion TO       ;Code10        ;CaptionML=[ENU=TO room;
                                                              ESP=Habitacion TO];
                                                   NotBlank=Yes;
                                                   Description=PK }
    { 7   ;   ;Habitacion basica   ;Code10        ;TableRelation="Habitacion basica"."Codigo Habitacion";
                                                   CaptionML=[ENU=Basic Room;
                                                              ESP=Habitacion basica];
                                                   NotBlank=Yes;
                                                   Description=FK Habitacion basica }
    { 9   ;   ;Habitacion cupo     ;Code10        ;OnValidate=BEGIN
                                                                vhab := COPYSTR("Habitacion cupo", 1, 2);
                                                                IF NOT rHabBas.GET(vhab) THEN
                                                                  ERROR(Text012 + Text013);

                                                                "Habitacion basica" := vhab;
                                                              END;

                                                   CaptionML=[ENU=Allotment room;
                                                              ESP=Habitacion cupo];
                                                   NotBlank=Yes }
    { 11  ;   ;Descripcion         ;Text60        ;CaptionML=[ENU=Description;
                                                              ESP=Descripcion] }
    { 13  ;   ;Tipo contrato       ;Option        ;CaptionML=[ENU=Contract type;
                                                              ESP=Tipo contrato];
                                                   OptionCaptionML=[ENU=Purchase,Sale,Circuit;
                                                                    ESP=Compra,Venta,Circuito];
                                                   OptionString=Compra,Venta,Circuito }
    { 15  ;   ;Minimo adultos      ;Integer       ;OnValidate=BEGIN
                                                                IF "Minimo adultos" <> xRec."Minimo adultos" THEN BEGIN
                                                                  IF "Ocupacion Maxima" = 0 THEN
                                                                    "Ocupacion Maxima" := "Minimo adultos";
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Minimum adults;
                                                              ESP=Minimo adultos];
                                                   Description=N§ minimo de adultos en la habitacion }
    { 17  ;   ;Ocupacion Maxima    ;Integer       ;OnValidate=VAR
                                                                lrCupCom@1103355000 : Record 7009739;
                                                                lrCupVen@1103355001 : Record 7009730;
                                                              BEGIN
                                                                // ----  Pasar los paxes de ocupacion a los cupos  ----

                                                                CASE "Tipo contrato" OF
                                                                  "Tipo contrato"::Compra:
                                                                  BEGIN
                                                                    lrCupCom.SETRANGE(Delegacion          , Delegacion);
                                                                    lrCupCom.SETRANGE("N§ Contrato compra", "N§ Contrato");
                                                                    lrCupCom.SETRANGE("Habitacion cupo"   , "Habitacion cupo");
                                                                    IF lrCupCom.FINDSET(TRUE) THEN
                                                                      lrCupCom.MODIFYALL("Pax ocupacion", "Ocupacion Maxima");
                                                                  END;
                                                                  "Tipo contrato"::Venta:
                                                                  BEGIN
                                                                    lrCupVen.SETRANGE(Delegacion         , Delegacion);
                                                                    lrCupVen.SETRANGE("N§ Contrato venta", "N§ Contrato");
                                                                    lrCupVen.SETRANGE("Habitacion cupo"  , "Habitacion cupo");
                                                                    IF lrCupVen.FINDSET(TRUE) THEN
                                                                      lrCupVen.MODIFYALL("Pax ocupacion", "Ocupacion Maxima");
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Maximum Occupancy;
                                                              ESP=Ocupacion Maxima];
                                                   Description=N§ de personas en la habitacion }
    { 19  ;   ;Replicado           ;Boolean       ;InitValue=No;
                                                   OnValidate=BEGIN
                                                                Replicado:= FALSE;

                                                                IF "Tipo contrato" = "Tipo contrato"::Compra THEN BEGIN
                                                                   IF rConC.GET(Delegacion,"N§ Contrato") THEN
                                                                      rConC.MODIFY(TRUE);
                                                                END ELSE BEGIN
                                                                   IF rCVenta.GET(Delegacion,"N§ Contrato") THEN
                                                                      rCVenta.MODIFY(TRUE);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Replicated;
                                                              ESP=Replicado];
                                                   Description=Campo usado por el replicador }
    { 21  ;   ;Codigo importacion  ;Code10        ;CaptionML=[ENU=Importation code;
                                                              ESP=Codigo importacion];
                                                   Description=Este codigo se utiliza solo para la importacion de contratos LTU/MWR }
    { 23  ;   ;Descripcion ampliada;Text250       ;CaptionML=[ENU=Extended descripcion;
                                                              ESP=Descripcion ampliada];
                                                   Description=$001 }
    { 25  ;   ;Categoria CAVAL     ;Code20        ;CaptionML=[ENU=CAVAL Category;
                                                              ESP=Categoria CAVAL];
                                                   Description=$001 }
    { 27  ;   ;Permite ni¤os       ;Boolean       ;CaptionML=[ENU=Child allowed;
                                                              ESP=Permite ni¤os];
                                                   Description=$001 }
    { 29  ;   ;Permite bebes       ;Boolean       ;CaptionML=[ENU=Infants allowed;
                                                              ESP=Permite bebes];
                                                   Description=$001 }
    { 31  ;   ;Bebes ocupan cama   ;Boolean       ;CaptionML=[ENU=Infants occupy bed;
                                                              ESP=Bebes ocupan cama];
                                                   Description=$001 }
  }
  KEYS
  {
    {    ;Delegacion,N§ Contrato,Tipo contrato,Habitacion TO,Habitacion cupo;
                                                   Clustered=Yes }
    {    ;Delegacion,N§ Contrato,Tipo contrato,Ocupacion Maxima;
                                                   KeyGroups=RENUMERING }
    {    ;Replicado                               ;KeyGroups=RENUMERING }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1103355010 : TextConst 'ENU=Agency parameters folder does not exist;ESP=No existe el fichero de Parametros de la Agencia.';
      Text001@1103355011 : TextConst 'ENU=Only is possible to enter conversions for\;ESP=Solo es posible dar de alta conversiones para\';
      Text002@1103355012 : TextConst 'ENU=rooms in the local offices;ESP=habitaciones en las delegaciones.';
      Text003@1103355013 : TextConst 'ENU=Conversion for this touroperator room already exists;ESP=Ya existe una conversion para esta habitacion Touroperador.';
      Text004@1103355014 : TextConst 'ENU=Only is possible to modify conversions for\;ESP=Solo es posible modificar conversiones para\';
      Text005@1103355015 : TextConst 'ENU=Only is possible to cancel conversions for\;ESP=Solo es posible dar de baja conversiones para\';
      Text006@1103355016 : TextConst 'ENU=User %1 does not exist;ESP=No existe el usuario %1.';
      Text007@1103355017 : TextConst 'ENU=FUN-ACT-COC;ESP=FUN-ACT-COC';
      Text009@1103355019 : TextConst 'ENU=FUN-ACT-COV;ESP=FUN-ACT-COV';
      Text010@1103355020 : TextConst 'ENU=<Number>;ESP=<Number>';
      Text011@1103355021 : TextConst 'ENU=Only is possible to rename conversions for\;ESP=Solo es posible renombrar conversiones para\';
      Text012@1103355022 : TextConst 'ENU=The first two letters of the room code must correspond with \;ESP=Las dos primeras letras del codigo de habitacion se deben corresponder con \';
      Text013@1103355023 : TextConst 'ENU=a code of a basic room.;ESP=un codigo de habitacion basica.';
      rParAge@1103355002 : Record 7009700;
      vhab@1103355003 : Code[10];
      rHabBas@1103355004 : Record 7009711;
      rConC@1103355005 : Record 7009723;
      rConV@1103355006 : Record 7009727;
      rConversion@1103355007 : Record 7009731;
      rCVenta@1103355009 : Record 7009727;
      cFunSeg@1100253000 : Codeunit 7009751;

    PROCEDURE InsertaLinAction@1103355000();
    VAR
      lwRec@1103355000 : RecordRef;
      lcFunExp@1103355001 : Codeunit 7009911;
    BEGIN
      // InsertaLinAction
      // Inserta una linea para el borrado de la sincronizacion a la empresa Hotel Payment

      lwRec.GETTABLE(Rec);
      lcFunExp.InsertaLinAct(lwRec);
    END;

    BEGIN
    {
      ## AJS 05.02.2010

        .- Ampliamos el campo Descripcion a 60 caracteres

      $001 AJS 01072014 QNT-CAR-14001, Nuevos campos para ampliar la informacion para la venta online

      $002 AJS 01072014 Cambio de los nombre Pax Legal y Paxes ocupacion
    }
    END.
  }
}
