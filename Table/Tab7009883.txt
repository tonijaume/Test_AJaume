OBJECT Table 7009883 Excursion cotizacion
{
  OBJECT-PROPERTIES
  {
    Date=02/10/12;
    Time=12:00:00;
    Modified=Yes;
    Version List=AIC2009;
  }
  PROPERTIES
  {
    OnInsert=VAR
               lrExc@1103355000 : Record 7009883;
             BEGIN

               IF lrExc.FINDLAST THEN
                 Id := lrExc.Id + 1
               ELSE
                 Id := 1;
             END;

    CaptionML=[ENU=Rate excursion;
               ESP=Excursion cotizacion];
  }
  FIELDS
  {
    { 1   ;   ;Id                  ;Integer       ;CaptionML=[ENU=ID;
                                                              ESP=ID] }
    { 2   ;   ;Producto            ;Code10        ;TableRelation="Producto agencia".Codigo;
                                                   OnValidate=BEGIN

                                                                //ComprobarHotxExc;
                                                              END;

                                                   CaptionML=[ENU=Item;
                                                              ESP=Producto] }
    { 3   ;   ;Hotel               ;Code20        ;TableRelation=Hotel.Hotel;
                                                   OnValidate=BEGIN

                                                                //ComprobarHotxExc;
                                                              END;

                                                   OnLookup=VAR
                                                              lwHotel@1103355000 : Code[20];
                                                            BEGIN

                                                              lwHotel := cCotCom.LookupHotel("Id Cotizacion");

                                                              IF (lwHotel <> '') AND (lwHotel <> Hotel) THEN
                                                                VALIDATE(Hotel, lwHotel);
                                                            END;

                                                   CaptionML=[ENU=Hotel;
                                                              ESP=Hotel] }
    { 4   ;   ;Fecha               ;Date          ;OnValidate=BEGIN

                                                                IF NOT cCotCom.ComprobarFechasCabecera("Id Cotizacion", Fecha) THEN
                                                                  ERROR(Text003, FIELDNAME(Fecha));
                                                              END;

                                                   CaptionML=[ENU=Date;
                                                              ESP=Fecha] }
    { 5   ;   ;Id Cotizacion       ;Integer       ;CaptionML=[ENU=Id Value;
                                                              ESP=Id Cotizacion] }
    { 6   ;   ;N§ ticket           ;Code10        ;CaptionML=[ENU=Ticket No.;
                                                              ESP=N§ Ticket] }
    { 7   ;   ;Id persona          ;Integer       ;CaptionML=[ENU=Person ID;
                                                              ESP=Id persona];
                                                   Description=representa el responsable de la reserva }
    { 8   ;   ;Adultos             ;Integer       ;OnValidate=BEGIN

                                                                ComprobarPersonas;
                                                              END;

                                                   CaptionML=[ENU=Adults;
                                                              ESP=Adultos] }
    { 9   ;   ;Ni¤os               ;Integer       ;OnValidate=BEGIN

                                                                ComprobarPersonas;
                                                              END;

                                                   CaptionML=[ENU=Children;
                                                              ESP=Ni¤os] }
    { 10  ;   ;Infants             ;Integer       ;OnValidate=BEGIN

                                                                ComprobarPersonas;
                                                              END;

                                                   CaptionML=[ENU=Infants;
                                                              ESP=Infants] }
  }
  KEYS
  {
    {    ;Id                                      ;Clustered=Yes }
    {    ;Id Cotizacion                           ;KeyGroups=RENUMERING }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      cCotCom@1103355000 : Codeunit 7009913;
      Text001@1103355001 : TextConst 'ENU=Quantity of assigned people to excursion is over the value;ESP=La cantidad de Personas asignadas a la excursion supera las de la cotizacion.';
      Text002@1103355002 : TextConst 'ENU=Hotel %1 does not have pick up time for the excursion %2;ESP=El hotel %1 No tiene hora de recogida para la excursion %2';
      Text003@1103355003 : TextConst 'ENU=%1 is not found into the range of dates from the header;ESP=La %1 no se encuentra dentro del rango de fechas de la cabecera.';

    PROCEDURE LookUpResponsable@1103355000();
    VAR
      lfPersonas@1103355000 : Form 7010044;
      lrPersonas@1103355001 : Record 7009873;
    BEGIN
      // LookUpResponsable

      lrPersonas.SETCURRENTKEY("Id cotizacion", "Tipo uso", "Tipo linea");

      lrPersonas.FILTERGROUP(2);
      lrPersonas.SETRANGE ("Id cotizacion",  "Id Cotizacion");
      lrPersonas.SETRANGE ("Tipo uso"     , lrPersonas."Tipo uso"::Seleccion);
      lrPersonas.SETRANGE ("Tipo linea"   , lrPersonas."Tipo linea"::Persona);
      lrPersonas.FILTERGROUP(0);

      lfPersonas.SetParametros(FALSE);
      lfPersonas.LOOKUPMODE := TRUE;
      lfPersonas.EDITABLE   := FALSE;
      lfPersonas.SETTABLEVIEW (lrPersonas);

      IF lfPersonas.RUNMODAL IN [ACTION::LookupOK, ACTION::OK] THEN BEGIN
        lrPersonas.RESET;
        lfPersonas.GETRECORD(lrPersonas);
        IF lrPersonas.Id <> 0 THEN BEGIN
          "Id persona" := lrPersonas.Id;
          MODIFY;
        END;
      END;
    END;

    PROCEDURE MostrarResponsable@1103355001() rvText : Text[80];
    VAR
      lrPersona@1103355000 : Record 7009873;
      lwTipo@1103355001 : Code[10];
      lrParPer@1103355002 : Record 7009701;
      lwNumPers@1103355003 : Integer;
    BEGIN
      // MostrarResponsable

      lrParPer.FINDFIRST;


      IF "Id persona" = 0 THEN
        EXIT('');

      IF NOT lrPersona.GET("Id persona") THEN
        EXIT('');

      lwTipo := cCotCom.GetTipoPersona(lrPersona."N§ Persona");

      CASE lwTipo OF
        lrParPer."Codigo Adulto": lwNumPers := lrPersona."N§ Persona" - cCotCom.GetNumeracionAdulto;
        lrParPer."Codigo Ni¤o"  : lwNumPers := lrPersona."N§ Persona" - cCotCom.GetNumeracionNi¤o;
        lrParPer."Codigo Infant": lwNumPers := lrPersona."N§ Persona" - cCotCom.GetNumeracionInfant;
      END;

      EXIT('(' + COPYSTR(lwTipo, 1, 1) + FORMAT(lwNumPers) + ') ' + lrPersona.Nombre);
    END;

    LOCAL PROCEDURE ComprobarPersonas@1103355002();
    VAR
      lrCab@1103355000 : Record 7009871;
    BEGIN
      // ComprobarPersonas

      lrCab.GET("Id Cotizacion");

      IF (lrCab.Adultos < Adultos) OR (lrCab.Ni¤os < Ni¤os) OR (lrCab.Infants < Infants) THEN
        ERROR(Text001);
    END;

    LOCAL PROCEDURE ComprobarHotxExc@1103355003();
    VAR
      lrHotxExc@1103355000 : Record 7010184;
    BEGIN
      // ComprobarHotxExc

      IF (Hotel = '') OR (Producto = '') THEN
        EXIT;

      lrHotxExc.SETRANGE (Hotel    , Hotel);
      lrHotxExc.SETRANGE (Excursion, Producto);

      IF NOT lrHotxExc.FINDFIRST THEN
        ERROR(Text002, Hotel, Producto);

      IF lrHotxExc."Hora recogida" = 0T THEN
        ERROR(Text002, Hotel, Producto);
    END;

    BEGIN
    {

      ## AJF 15/06/09

        .- (09/00279) Cambiado el LookUp de hotel para que filtre por el pais de la cabecera de cotizaci¢n.

      ## AJF 16/06/09

        .- (INC-41445) A¤adido control para que las fechas no se salgan del rango de fechas de la cabecera.
    }
    END.
  }
}
