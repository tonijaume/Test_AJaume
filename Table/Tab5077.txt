OBJECT Table 5077 Segment Line
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=NAVW16.00.01;
  }
  PROPERTIES
  {
    OnDelete=VAR
               SegLine@1001 : Record 5077;
               SegmentCriteriaLine@1002 : Record 5097;
               SegmentHistory@1003 : Record 5078;
               SegInteractLanguage@1005 : Record 5104;
             BEGIN
               CampaignTargetGrMgt.DeleteSegfromTargetGr(Rec);

               SegInteractLanguage.RESET;
               SegInteractLanguage.SETRANGE("Segment No.","Segment No.");
               SegInteractLanguage.SETRANGE("Segment Line No.","Line No.");
               SegInteractLanguage.DELETEALL(TRUE);
               GET("Segment No.","Line No.");

               SegLine.SETRANGE("Segment No.","Segment No.");
               SegLine.SETFILTER("Line No.",'<>%1',"Line No.");
               IF SegLine.ISEMPTY THEN BEGIN
                 IF SegHeader.GET("Segment No.") THEN
                   SegHeader.CALCFIELDS("No. of Criteria Actions");
                 IF SegHeader."No. of Criteria Actions" > 1 THEN
                   IF CONFIRM(Text006,TRUE) THEN BEGIN
                     SegmentCriteriaLine.SETRANGE("Segment No.","Segment No.");
                     SegmentCriteriaLine.DELETEALL;
                     SegmentHistory.SETRANGE("Segment No.","Segment No.");
                     SegmentHistory.DELETEALL;
                   END;
               END;
               IF "Contact No." <> '' THEN BEGIN
                 SegLine.SETRANGE("Contact No.","Contact No.");
                 IF SegLine.ISEMPTY THEN BEGIN
                   Todo.SETRANGE("Segment No.","Segment No.");
                   Todo.SETRANGE("Contact No.","Contact No.");
                   Todo.MODIFYALL("Segment No.",'');
                 END;
               END;
             END;

    CaptionML=[ENU=Segment Line;
               ESP=L¡n. segmento];
  }
  FIELDS
  {
    { 1   ;   ;Segment No.         ;Code20        ;TableRelation="Segment Header";
                                                   CaptionML=[ENU=Segment No.;
                                                              ESP=N§ segmento] }
    { 2   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              ESP=N§ l¡nea] }
    { 3   ;   ;Contact No.         ;Code20        ;TableRelation=Contact;
                                                   OnValidate=VAR
                                                                SegInteractLanguage@1000 : Record 5104;
                                                                Attachment@1001 : Record 5062;
                                                                InteractTmpl@1002 : Record 5064;
                                                              BEGIN
                                                                InitLine;

                                                                IF Cont.GET("Contact No.") THEN BEGIN
                                                                  "Language Code" := FindLanguage("Interaction Template Code",Cont."Language Code");
                                                                  "Contact Company No." := Cont."Company No.";
                                                                  "Contact Alt. Address Code" := Cont.ActiveAltAddress(Date);
                                                                  IF SegHeader.GET("Segment No.") THEN BEGIN
                                                                    IF SegHeader."Salesperson Code" = '' THEN
                                                                      "Salesperson Code" := Cont."Salesperson Code"
                                                                    ELSE
                                                                      "Salesperson Code" := SegHeader."Salesperson Code";
                                                                    IF SegHeader."Ignore Contact Corres. Type" AND
                                                                      (SegHeader."Correspondence Type (Default)" <> SegHeader."Correspondence Type (Default)"::" ")
                                                                    THEN
                                                                      "Correspondence Type" := SegHeader."Correspondence Type (Default)"
                                                                    ELSE IF InteractTmpl.GET(SegHeader."Interaction Template Code") AND
                                                                      (InteractTmpl."Ignore Contact Corres. Type" OR
                                                                      ((InteractTmpl."Ignore Contact Corres. Type" = FALSE) AND
                                                                      (Cont."Correspondence Type"  = Cont."Correspondence Type"::" ")))
                                                                    THEN
                                                                      "Correspondence Type" := InteractTmpl."Correspondence Type (Default)"
                                                                    ELSE
                                                                      "Correspondence Type" := Cont."Correspondence Type";
                                                                  END ELSE
                                                                    IF NOT Salesperson.GET(GETFILTER("Salesperson Code")) THEN
                                                                      "Salesperson Code" := Cont."Salesperson Code";
                                                                END ELSE BEGIN
                                                                  "Contact Company No." := '';
                                                                  "Contact Alt. Address Code" := '';
                                                                  IF SegHeader.GET("Segment No.") THEN
                                                                    "Salesperson Code" := SegHeader."Salesperson Code"
                                                                  ELSE BEGIN
                                                                    "Salesperson Code" := '';
                                                                    "Language Code" := '';
                                                                  END;
                                                                END;
                                                                CALCFIELDS("Contact Name","Contact Company Name");

                                                                IF "Segment No." <> '' THEN BEGIN
                                                                  IF UniqueAttachmentExists THEN BEGIN
                                                                    MODIFY;
                                                                    SegInteractLanguage.RESET;
                                                                    SegInteractLanguage.SETRANGE("Segment No.","Segment No.");
                                                                    SegInteractLanguage.SETRANGE("Segment Line No.","Line No.");
                                                                    SegInteractLanguage.DELETEALL(TRUE);
                                                                    GET("Segment No.","Line No.");
                                                                  END;

                                                                  "Language Code" := FindLanguage("Interaction Template Code","Language Code");
                                                                  IF SegInteractLanguage.GET("Segment No.",0,"Language Code") THEN BEGIN
                                                                    IF Attachment.GET(SegInteractLanguage."Attachment No.") THEN
                                                                      "Attachment No." := SegInteractLanguage."Attachment No.";
                                                                    Subject := SegInteractLanguage.Subject;
                                                                  END;
                                                                END;

                                                                IF (xRec."Contact No." <> "Contact No.") THEN
                                                                  SetCampaignTargetGroup;
                                                              END;

                                                   CaptionML=[ENU=Contact No.;
                                                              ESP=N§ contacto] }
    { 4   ;   ;Campaign No.        ;Code20        ;TableRelation=Campaign;
                                                   OnValidate=BEGIN
                                                                IF (xRec."Campaign No." <> "Campaign No.") THEN
                                                                  SetCampaignTargetGroup;
                                                              END;

                                                   CaptionML=[ENU=Campaign No.;
                                                              ESP=N§ campa¤a] }
    { 5   ;   ;Salesperson Code    ;Code10        ;TableRelation=Salesperson/Purchaser;
                                                   CaptionML=[ENU=Salesperson Code;
                                                              ESP=C¢d. vendedor] }
    { 6   ;   ;Correspondence Type ;Option        ;OnValidate=VAR
                                                                Attachment@1000 : Record 5062;
                                                                ErrorText@1001 : Text[80];
                                                              BEGIN
                                                                IF NOT Attachment.GET("Attachment No.") THEN
                                                                  EXIT;

                                                                ErrorText := Attachment.CheckCorrespondenceType("Correspondence Type");
                                                                IF ErrorText <> '' THEN
                                                                  ERROR(
                                                                    Text000+ErrorText,
                                                                    FIELDCAPTION("Correspondence Type"),"Correspondence Type",TABLECAPTION,"Line No.");
                                                              END;

                                                   CaptionML=[ENU=Correspondence Type;
                                                              ESP=Tipo correspondencia];
                                                   OptionCaptionML=[ENU=" ,Hard Copy,E-Mail,Fax";
                                                                    ESP=" ,Impresi¢n,Correo electr¢nico,Fax"];
                                                   OptionString=[ ,Hard Copy,E-Mail,Fax] }
    { 7   ;   ;Interaction Template Code;Code10   ;TableRelation="Interaction Template";
                                                   OnValidate=VAR
                                                                SegInteractLanguage@1001 : Record 5104;
                                                                Attachment@1000 : Record 5062;
                                                                InteractTemplLanguage@1002 : Record 5103;
                                                                InteractTmpl@1003 : Record 5064;
                                                              BEGIN
                                                                TESTFIELD("Contact No.");
                                                                Cont.GET("Contact No.");
                                                                "Attachment No." := 0;
                                                                "Language Code" := '';
                                                                Subject := '';
                                                                "Correspondence Type" := "Correspondence Type"::" ";
                                                                "Interaction Group Code" := '';
                                                                "Cost (LCY)" := 0;
                                                                "Duration (Min.)" := 0;
                                                                "Information Flow" := "Information Flow"::" ";
                                                                "Initiated By" := "Initiated By"::" ";
                                                                "Campaign Target" := FALSE;
                                                                "Campaign Response" := FALSE;
                                                                "Correspondence Type" := "Correspondence Type"::" ";
                                                                IF (GETFILTER("Campaign No.") = '') AND (InteractTmpl."Campaign No." <> '') THEN
                                                                  "Campaign No." := '';
                                                                MODIFY;

                                                                IF ("Segment No." <> '') THEN BEGIN
                                                                  SegInteractLanguage.RESET;
                                                                  SegInteractLanguage.SETRANGE("Segment No.","Segment No.");
                                                                  SegInteractLanguage.SETRANGE("Segment Line No.","Line No.");
                                                                  SegInteractLanguage.DELETEALL(TRUE);
                                                                  GET("Segment No.","Line No.");
                                                                  IF ("Interaction Template Code" <> '') THEN BEGIN
                                                                    SegHeader.GET("Segment No.");
                                                                    IF ("Interaction Template Code" <> SegHeader."Interaction Template Code") THEN BEGIN
                                                                      CreateSegInteractLanguages("Interaction Template Code");
                                                                      "Language Code" := FindLanguage("Interaction Template Code",Cont."Language Code");
                                                                      IF SegInteractLanguage.GET("Segment No.","Line No.","Language Code") THEN
                                                                        "Attachment No." := SegInteractLanguage."Attachment No.";
                                                                    END ELSE BEGIN
                                                                      "Language Code" := FindLanguage("Interaction Template Code",Cont."Language Code");
                                                                      IF SegInteractLanguage.GET("Segment No.",0,"Language Code") THEN
                                                                        "Attachment No." := SegInteractLanguage."Attachment No.";
                                                                    END;
                                                                  END;
                                                                END ELSE BEGIN
                                                                  "Language Code" := FindLanguage("Interaction Template Code",Cont."Language Code");
                                                                  IF InteractTemplLanguage.GET("Interaction Template Code","Language Code") THEN
                                                                    "Attachment No." := InteractTemplLanguage."Attachment No.";
                                                                END;

                                                                IF InteractTmpl.GET("Interaction Template Code") THEN BEGIN
                                                                  "Interaction Group Code" := InteractTmpl."Interaction Group Code";
                                                                  "Cost (LCY)" := InteractTmpl."Unit Cost (LCY)";
                                                                  "Duration (Min.)" := InteractTmpl."Unit Duration (Min.)";
                                                                  "Information Flow" := InteractTmpl."Information Flow";
                                                                  "Initiated By" := InteractTmpl."Initiated By";
                                                                  "Campaign Target" := InteractTmpl."Campaign Target";
                                                                  "Campaign Response" := InteractTmpl."Campaign Response";

                                                                  CASE TRUE OF
                                                                    SegHeader."Ignore Contact Corres. Type" AND
                                                                    (SegHeader."Correspondence Type (Default)" <> SegHeader."Correspondence Type (Default)"::" ") :
                                                                      "Correspondence Type" := SegHeader."Correspondence Type (Default)";

                                                                    InteractTmpl."Ignore Contact Corres. Type" OR
                                                                    ((InteractTmpl."Ignore Contact Corres. Type" = FALSE) AND
                                                                     (Cont."Correspondence Type" = Cont."Correspondence Type"::" ") AND
                                                                     (InteractTmpl."Correspondence Type (Default)" <> InteractTmpl."Correspondence Type (Default)"::" ")) :
                                                                      "Correspondence Type" := InteractTmpl."Correspondence Type (Default)";

                                                                    ELSE
                                                                      IF Cont."Correspondence Type" <> Cont."Correspondence Type"::" " THEN
                                                                        "Correspondence Type" := Cont."Correspondence Type"
                                                                      ELSE
                                                                        "Correspondence Type" := xRec."Correspondence Type";
                                                                  END;
                                                                  IF SegHeader."Campaign No." <> '' THEN
                                                                    "Campaign No." := SegHeader."Campaign No."
                                                                  ELSE
                                                                    IF (GETFILTER("Campaign No.") = '') AND (InteractTmpl."Campaign No." <> '') THEN
                                                                      "Campaign No." := InteractTmpl."Campaign No.";
                                                                END;
                                                                IF Campaign.GET("Campaign No.") THEN
                                                                  "Campaign Description" := Campaign.Description;

                                                                MODIFY;
                                                              END;

                                                   CaptionML=[ENU=Interaction Template Code;
                                                              ESP=C¢d. plantilla interacci¢n] }
    { 8   ;   ;Cost (LCY)          ;Decimal       ;CaptionML=[ENU=Cost (LCY);
                                                              ESP=Coste (DL)];
                                                   MinValue=0;
                                                   AutoFormatType=1 }
    { 9   ;   ;Duration (Min.)     ;Decimal       ;CaptionML=[ENU=Duration (Min.);
                                                              ESP=Duraci¢n (Min.)];
                                                   DecimalPlaces=0:0;
                                                   MinValue=0 }
    { 10  ;   ;Attachment No.      ;Integer       ;TableRelation=Attachment;
                                                   CaptionML=[ENU=Attachment No.;
                                                              ESP=N§ anexo] }
    { 11  ;   ;Campaign Response   ;Boolean       ;CaptionML=[ENU=Campaign Response;
                                                              ESP=Respuesta campa¤a] }
    { 12  ;   ;Contact Name        ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Contact.Name WHERE (No.=FIELD(Contact No.),
                                                                                          Type=CONST(Person)));
                                                   CaptionML=[ENU=Contact Name;
                                                              ESP=Nombre contacto];
                                                   Editable=No }
    { 13  ;   ;Information Flow    ;Option        ;CaptionML=[ENU=Information Flow;
                                                              ESP=Flujo informaci¢n];
                                                   OptionCaptionML=[ENU=" ,Outbound,Inbound";
                                                                    ESP=" ,Salida,Entrada"];
                                                   OptionString=[ ,Outbound,Inbound];
                                                   BlankZero=Yes }
    { 14  ;   ;Initiated By        ;Option        ;CaptionML=[ENU=Initiated By;
                                                              ESP=Iniciado por];
                                                   OptionCaptionML=[ENU=" ,Us,Them";
                                                                    ESP=" ,Nosotros,Ellos"];
                                                   OptionString=[ ,Us,Them];
                                                   BlankZero=Yes }
    { 15  ;   ;Contact Alt. Address Code;Code10   ;TableRelation="Contact Alt. Address".Code WHERE (Contact No.=FIELD(Contact No.));
                                                   CaptionML=[ENU=Contact Alt. Address Code;
                                                              ESP=C¢d. direcci¢n alt. contacto] }
    { 16  ;   ;Evaluation          ;Option        ;CaptionML=[ENU=Evaluation;
                                                              ESP=Evaluaci¢n];
                                                   OptionCaptionML=[ENU=" ,Very Positive,Positive,Neutral,Negative,Very Negative";
                                                                    ESP=" ,Muy positiva,Positiva,Neutra,Negativa,Muy negativa"];
                                                   OptionString=[ ,Very Positive,Positive,Neutral,Negative,Very Negative] }
    { 17  ;   ;Campaign Target     ;Boolean       ;OnValidate=BEGIN
                                                                IF (xRec."Campaign Target" <> "Campaign Target") THEN
                                                                  SetCampaignTargetGroup;
                                                              END;

                                                   CaptionML=[ENU=Campaign Target;
                                                              ESP=Objetivo campa¤a] }
    { 18  ;   ;Contact Company Name;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Contact.Name WHERE (No.=FIELD(Contact Company No.),
                                                                                          Type=CONST(Company)));
                                                   CaptionML=[ENU=Contact Company Name;
                                                              ESP=Nombre empresa contacto];
                                                   Editable=No }
    { 19  ;   ;Language Code       ;Code10        ;TableRelation=Language;
                                                   OnValidate=VAR
                                                                SegInteractLanguage@1002 : Record 5104;
                                                                Language@1000 : Record 8;
                                                                InteractTemplLanguage@1001 : Record 5103;
                                                              BEGIN
                                                                TESTFIELD("Interaction Template Code");

                                                                IF "Language Code" = xRec."Language Code" THEN
                                                                  EXIT;

                                                                IF SegHeader.GET("Segment No.") THEN BEGIN
                                                                  IF NOT UniqueAttachmentExists THEN BEGIN
                                                                    IF SegInteractLanguage.GET("Segment No.",0,"Language Code") THEN BEGIN
                                                                      "Attachment No." := SegInteractLanguage."Attachment No.";
                                                                      Subject := SegInteractLanguage.Subject;
                                                                    END ELSE BEGIN
                                                                      "Attachment No." := 0;
                                                                      Subject := '';
                                                                    END;
                                                                  END ELSE BEGIN
                                                                    IF SegInteractLanguage.GET("Segment No.","Line No.","Language Code") THEN BEGIN
                                                                      "Attachment No." := SegInteractLanguage."Attachment No.";
                                                                      Subject := SegInteractLanguage.Subject;
                                                                    END ELSE BEGIN
                                                                      "Attachment No." := 0;
                                                                      Subject := '';
                                                                    END;
                                                                  END;
                                                                  MODIFY;
                                                                END ELSE BEGIN
                                                                  InteractTemplLanguage.GET("Interaction Template Code","Language Code");
                                                                  SetInteractionAttachment;
                                                                END;
                                                              END;

                                                   OnLookup=VAR
                                                              SegInteractLanguage@1004 : Record 5104;
                                                              InteractTemplLanguage@1002 : Record 5103;
                                                            BEGIN
                                                              TESTFIELD("Interaction Template Code");

                                                              IF SegHeader.GET("Segment No.") THEN BEGIN
                                                                SegInteractLanguage.SETRANGE("Segment No.","Segment No.");
                                                                IF UniqueAttachmentExists OR
                                                                   ("Interaction Template Code" <> SegHeader."Interaction Template Code") THEN
                                                                  SegInteractLanguage.SETRANGE("Segment Line No.","Line No.")
                                                                ELSE
                                                                  SegInteractLanguage.SETRANGE("Segment Line No.",0);

                                                                IF FORM.RUNMODAL(0,SegInteractLanguage) = ACTION::LookupOK THEN BEGIN
                                                                  GET("Segment No.","Line No.");
                                                                  "Language Code" := SegInteractLanguage."Language Code";
                                                                  "Attachment No." := SegInteractLanguage."Attachment No.";
                                                                  Subject := SegInteractLanguage.Subject;
                                                                  MODIFY;
                                                                END ELSE
                                                                  GET("Segment No.","Line No.");
                                                              END ELSE BEGIN  //Create Interaction
                                                                InteractTemplLanguage.SETRANGE("Interaction Template Code","Interaction Template Code");
                                                                IF FORM.RUNMODAL(0,InteractTemplLanguage) = ACTION::LookupOK THEN BEGIN
                                                                  "Language Code" := InteractTemplLanguage."Language Code";
                                                                  MODIFY;
                                                                END;
                                                                SetInteractionAttachment;
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Language Code;
                                                              ESP=C¢d. idioma] }
    { 22  ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              ESP=Descripci¢n] }
    { 23  ;   ;Date                ;Date          ;OnValidate=BEGIN
                                                                IF Cont.GET("Contact No.") THEN
                                                                  IF "Contact Alt. Address Code" = Cont.ActiveAltAddress(xRec.Date) THEN
                                                                    "Contact Alt. Address Code" := Cont.ActiveAltAddress(Date);
                                                              END;

                                                   CaptionML=[ENU=Date;
                                                              ESP=Fecha] }
    { 24  ;   ;Time of Interaction ;Time          ;CaptionML=[ENU=Time of Interaction;
                                                              ESP=Hora de interacci¢n] }
    { 25  ;   ;Attempt Failed      ;Boolean       ;CaptionML=[ENU=Attempt Failed;
                                                              ESP=Intento fallido] }
    { 26  ;   ;To-do No.           ;Code20        ;TableRelation=To-do;
                                                   CaptionML=[ENU=To-do No.;
                                                              ESP=N§ tarea] }
    { 27  ;   ;Contact Company No. ;Code20        ;TableRelation=Contact WHERE (Type=CONST(Company));
                                                   CaptionML=[ENU=Contact Company No.;
                                                              ESP=N§ empresa contacto] }
    { 28  ;   ;Campaign Entry No.  ;Integer       ;TableRelation="Campaign Entry";
                                                   CaptionML=[ENU=Campaign Entry No.;
                                                              ESP=N§ mov. campa¤a];
                                                   Editable=No }
    { 29  ;   ;Interaction Group Code;Code10      ;TableRelation="Interaction Group";
                                                   CaptionML=[ENU=Interaction Group Code;
                                                              ESP=C¢d. grupo interacci¢n] }
    { 31  ;   ;Document Type       ;Option        ;CaptionML=[ENU=Document Type;
                                                              ESP=Tipo documento];
                                                   OptionCaptionML=[ENU=" ,Sales Qte.,Sales Blnkt. Ord,Sales Ord. Cnfrmn.,Sales Inv.,Sales Shpt. Note,Sales Cr. Memo,Sales Stmnt.,Sales Rmdr.,Serv. Ord. Create,Serv. Ord. Post,Purch.Qte.,Purch. Blnkt. Ord.,Purch. Ord.,Purch. Inv.,Purch. Rcpt.,Purch. Cr. Memo,Cover Sheet";
                                                                    ESP=" ,Oferta vta.,Ped. abierto vta.,Confirm. ped. vta.,Fact. vta.,Alb. env¡o vta.,Abono vta.,Extracto vta.,Record. vta.,Crear ped. serv.,Regis. ped. serv.,Oferta compra,Ped. abierto compra,Ped. compra,Fact. compra,Alb. compra,Abono compra,Portada"];
                                                   OptionString=[ ,Sales Qte.,Sales Blnkt. Ord,Sales Ord. Cnfrmn.,Sales Inv.,Sales Shpt. Note,Sales Cr. Memo,Sales Stmnt.,Sales Rmdr.,Serv. Ord. Create,Serv. Ord. Post,Purch.Qte.,Purch. Blnkt. Ord.,Purch. Ord.,Purch. Inv.,Purch. Rcpt.,Purch. Cr. Memo,Cover Sheet] }
    { 32  ;   ;Document No.        ;Code20        ;TestTableRelation=No;
                                                   CaptionML=[ENU=Document No.;
                                                              ESP=N§ documento] }
    { 33  ;   ;Send Word Doc. As Attmt.;Boolean   ;CaptionML=[ENU=Send Word Doc. As Attmt.;
                                                              ESP=Env¡a doc. Word como anexo] }
    { 34  ;   ;Contact Via         ;Text80        ;CaptionML=[ENU=Contact Via;
                                                              ESP=Contacta v¡a] }
    { 35  ;   ;Version No.         ;Integer       ;CaptionML=[ENU=Version No.;
                                                              ESP=N§ versi¢n] }
    { 36  ;   ;Doc. No. Occurrence ;Integer       ;CaptionML=[ENU=Doc. No. Occurrence;
                                                              ESP=Ocurrencia N§ doc.] }
    { 37  ;   ;Subject             ;Text50        ;CaptionML=[ENU=Subject;
                                                              ESP=Asunto] }
    { 44  ;   ;Opportunity No.     ;Code20        ;TableRelation=Opportunity;
                                                   CaptionML=[ENU=Opportunity No.;
                                                              ESP=N§ oportunidad] }
    { 45  ;   ;Mail GUID           ;GUID          ;CaptionML=[ENU=Mail GUID;
                                                              ESP=GUID correo] }
    { 9501;   ;Wizard Step         ;Option        ;CaptionML=[ENU=Wizard Step;
                                                              ESP=Paso asistente];
                                                   OptionCaptionML=[ENU=" ,1,2,3,4,5,6";
                                                                    ESP=" ,1,2,3,4,5,6"];
                                                   OptionString=[ ,1,2,3,4,5,6];
                                                   Editable=No }
    { 9502;   ;Wizard Contact Name ;Text50        ;CaptionML=[ENU=Wizard Contact Name;
                                                              ESP=Nombre contacto asistente] }
    { 9503;   ;Opportunity Description;Text50     ;CaptionML=[ENU=Opportunity Description;
                                                              ESP=Descripci¢n oportunidad] }
    { 9504;   ;Campaign Description;Text50        ;CaptionML=[ENU=Campaign Description;
                                                              ESP=Descripci¢n campa¤a] }
    { 9505;   ;Interaction Successful;Boolean     ;CaptionML=[ENU=Interaction Successful;
                                                              ESP=Interacci¢n correcta] }
    { 9506;   ;Dial Contact        ;Boolean       ;CaptionML=[ENU=Dial Contact;
                                                              ESP=Llamar contacto] }
    { 9507;   ;Mail Contact        ;Boolean       ;CaptionML=[ENU=Mail Contact;
                                                              ESP=Enviar mensaje contacto] }
  }
  KEYS
  {
    {    ;Segment No.,Line No.                    ;SumIndexFields=Cost (LCY),Duration (Min.);
                                                   Clustered=Yes }
    {    ;Segment No.,Campaign No.,Date            }
    {    ;Contact No.,Segment No.                  }
    {    ;Campaign No.                             }
    {    ;Campaign No.,Contact Company No.,Campaign Target }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU="%1 = %2 can not be specified for %3 %4.\";ESP="%1 = %2 no puede ser especificado para %3 %4.\"';
      Text001@1001 : TextConst 'ENU=Inherited;ESP=Heredado';
      Text002@1002 : TextConst 'ENU=Unique;ESP=Unico';
      SegHeader@1006 : Record 5076;
      Cont@1007 : Record 5050;
      Salesperson@1008 : Record 13;
      Campaign@1013 : Record 5071;
      InteractTmpl@1003 : Record 5064;
      Attachment@1005 : Record 5062;
      AttachmentTemp@1004 : TEMPORARY Record 5062;
      InterLogEntryCommentLine@1017 : Record 5123;
      InterLogEntryCommentLineTmp@1018 : TEMPORARY Record 5123;
      ContactThrough@1021 : TEMPORARY Record 5100;
      AttachmentManagement@1010 : Codeunit 5052;
      Text003@1009 : TextConst 'ENU=All Files (*.*)|*.*;ESP=Todos los archivos (*.*)|*.*';
      Text005@1023 : TextConst 'ENU=You must fill in the %1 field.;ESP=Debe rellenar el campo %1.';
      Text004@1012 : TextConst 'ENU=The program has stopped importing the attachment at your request.;ESP=El programa ha parado la importaci¢n del anexo a su petici¢n.';
      Text006@1011 : TextConst 'ENU=Your Segment is now empty.\Reset No. of Criteria Actions?;ESP=Su segmento est  vac¡o.\¨Reiniciar n§ acciones criterio?';
      CampaignTargetGrMgt@1014 : Codeunit 7030;
      TAPIManagement@1019 : Codeunit 5053;
      Mail@1020 : Codeunit 397;
      ResumedAttachmentNo@1015 : Integer;
      Text007@1016 : TextConst 'ENU=Do you want to finish this interaction later?;ESP=¨Desea terminar la interacci¢n m s tarde?';
      Text008@1022 : TextConst 'ENU=You must select an interaction template with an attachment.;ESP=Debe seleccionar una plantilla de interacci¢n que incluya un archivo adjunto.';
      Text010@1027 : TextConst 'ENU=Call was not logged.;ESP=No se grab¢ la llamada.';
      Text013@1024 : TextConst 'ENU=You must fill in the phone number.;ESP=Debe rellenar el n£mero de telfono.';
      Text023@1028 : TextConst 'ENU=''%1'' is not found among %2''s e-mail addresses.;ESP=''%1'' no se encuentra entre las direcciones de correo electr¢nico de %2.';
      Text024@1032 : TextConst 'ENU="%1 = %2 can not be specified.\";ESP="No se puede especificar %1 = %2.\"';
      Todo@1102601000 : Record 5080;
      Text025@1102601001 : TextConst 'ENU=Wizard Action field is not filled for selected interaction. \Blank Wizard Action does not enable interactions with hard copy or e-mail.;ESP=No se complet¢ el campo Acci¢n asistente para la interacci¢n seleccionada. \Si se deja el campo en blanco, la interacci¢n con la copia impresa o el correo electr¢nico estar  deshabilitada.';

    PROCEDURE InitLine@1();
    BEGIN
      IF SegHeader.GET("Segment No.") THEN BEGIN
        Description := SegHeader.Description;
        "Campaign No." := SegHeader."Campaign No.";
        "Salesperson Code" := SegHeader."Salesperson Code";
        "Correspondence Type" := SegHeader."Correspondence Type (Default)";
        "Interaction Template Code" := SegHeader."Interaction Template Code";
        "Interaction Group Code" := SegHeader."Interaction Group Code";
        "Cost (LCY)" := SegHeader."Unit Cost (LCY)";
        "Duration (Min.)" := SegHeader."Unit Duration (Min.)";
        "Attachment No." := SegHeader."Attachment No.";
        Date := SegHeader.Date;
        "Campaign Target" := SegHeader."Campaign Target";
        "Information Flow" := SegHeader."Information Flow";
        "Initiated By" := SegHeader."Initiated By";
        "Campaign Response" := SegHeader."Campaign Response";
        "Send Word Doc. As Attmt." := SegHeader."Send Word Docs. as Attmt.";
        CLEAR(Evaluation);
      END;
    END;

    PROCEDURE AttachmentText@5() : Text[30];
    BEGIN
      IF AttachmentInherited THEN
        EXIT(Text001)
      ELSE
        IF "Attachment No." <> 0 THEN
          EXIT(Text002)
        ELSE
          EXIT('');
    END;

    PROCEDURE MaintainAttachment@9();
    VAR
      Cont@1000 : Record 5050;
      SalutationFormula@1001 : Record 5069;
    BEGIN
      TESTFIELD("Interaction Template Code");

      Cont.GET("Contact No.");
      SalutationFormula.GET(Cont."Salutation Code","Language Code",0);
      SalutationFormula.GET(Cont."Salutation Code","Language Code",1);

      IF "Attachment No." <> 0 THEN
        OpenAttachment
      ELSE
        CreateAttachment;
    END;

    PROCEDURE CreateAttachment@8();
    VAR
      SegInteractLanguage@1003 : Record 5104;
      AttachmentManagement@1000 : Codeunit 5052;
      WordManagement@1001 : Codeunit 5054;
      NewAttmtNo@1002 : Integer;
    BEGIN
      IF NOT SegInteractLanguage.GET("Segment No.","Line No.","Language Code") THEN BEGIN
        SegInteractLanguage.INIT;
        SegInteractLanguage."Segment No." := "Segment No.";
        SegInteractLanguage."Segment Line No." := "Line No.";
        SegInteractLanguage."Language Code" := "Language Code";
        SegInteractLanguage.Description := Description;
        SegInteractLanguage.Subject := Subject;
      END;

      SegInteractLanguage.CreateAttachment;
    END;

    PROCEDURE OpenAttachment@2();
    VAR
      Attachment@1004 : Record 5062;
      Attachment2@1003 : Record 5062;
      SegInteractLanguage@1002 : Record 5104;
      NewAttachmentNo@1000 : Integer;
    BEGIN
      IF "Attachment No." = 0 THEN
        EXIT;

      Attachment.GET("Attachment No.");
      Attachment2 := Attachment;

      Attachment2.ShowAttachment(Rec,"Segment No." + ' ' + Description,FALSE);

      IF AttachmentInherited THEN BEGIN
        NewAttachmentNo := Attachment2."No.";
        IF (Attachment."Last Date Modified" <> Attachment2."Last Date Modified") OR
           (Attachment."Last Time Modified" <> Attachment2."Last Time Modified")
        THEN BEGIN
          SegInteractLanguage.INIT;
          SegInteractLanguage."Segment No." := "Segment No.";
          SegInteractLanguage."Segment Line No." := "Line No.";
          SegInteractLanguage."Language Code" := "Language Code";
          SegInteractLanguage.Description := Description;
          SegInteractLanguage.Subject := Subject;
          SegInteractLanguage."Attachment No." := NewAttachmentNo;
          SegInteractLanguage.INSERT(TRUE);
          GET("Segment No.","Line No.");
          "Attachment No." := NewAttachmentNo;
          MODIFY;
        END;
      END
    END;

    PROCEDURE ImportAttachment@3();
    VAR
      SegInteractLanguage@1003 : Record 5104;
    BEGIN
      IF NOT SegInteractLanguage.GET("Segment No.","Line No.","Language Code") THEN BEGIN
        SegInteractLanguage.INIT;
        SegInteractLanguage."Segment No." := "Segment No.";
        SegInteractLanguage."Segment Line No." := "Line No.";
        SegInteractLanguage."Language Code" := "Language Code";
        SegInteractLanguage.Description := Description;
        SegInteractLanguage.INSERT(TRUE);
      END;
      SegInteractLanguage.ImportAttachment;
    END;

    PROCEDURE ExportAttachment@4();
    VAR
      SegInteractLanguage@1000 : Record 5104;
    BEGIN
      IF UniqueAttachmentExists THEN BEGIN
        IF SegInteractLanguage.GET("Segment No.","Line No.","Language Code") THEN
          IF SegInteractLanguage."Attachment No." <> 0 THEN
            SegInteractLanguage.ExportAttachment;
      END ELSE
        IF SegInteractLanguage.GET("Segment No.",0,"Language Code") THEN
          IF SegInteractLanguage."Attachment No." <> 0 THEN
            SegInteractLanguage.ExportAttachment;
    END;

    PROCEDURE RemoveAttachment@7(Prompt@1000 : Boolean);
    VAR
      SegInteractLanguage@1002 : Record 5104;
    BEGIN
      IF SegInteractLanguage.GET("Segment No.","Line No.","Language Code") THEN BEGIN
        SegInteractLanguage.DELETE(TRUE);
        GET("Segment No.","Line No.");
      END;
      "Attachment No." := 0;
    END;

    PROCEDURE CreateCall@21();
    VAR
      TempSegmentLine@1000 : TEMPORARY Record 5077;
      InteractionTmplSetup@1001 : Record 5122;
    BEGIN
      Cont.GET("Contact No.");
      TempSegmentLine."Contact No." := Cont."No.";
      TempSegmentLine."Contact Via" := Cont."Phone No.";
      TempSegmentLine."Contact Company No." := Cont."Company No.";
      TempSegmentLine."To-do No." := "To-do No.";
      IF "Contact Alt. Address Code" <> '' THEN
        TempSegmentLine."Contact Alt. Address Code" := "Contact Alt. Address Code";
      IF "Campaign No." <> '' THEN
        TempSegmentLine."Campaign No." := "Campaign No.";

      TempSegmentLine."Campaign Target" := "Campaign Target";
      TempSegmentLine."Campaign Response" := "Campaign Response";
      TempSegmentLine.SETRANGE("Contact No.",TempSegmentLine."Contact No.");
      TempSegmentLine.SETRANGE("Campaign No.",TempSegmentLine."Campaign No.");

      TempSegmentLine.StartWizard2;
    END;

    PROCEDURE FindLanguage@10(InteractTmplCode@1001 : Code[10];ContactLanguageCode@1000 : Code[10]) Language@1005 : Code[10];
    VAR
      SegInteractLanguage@1004 : Record 5104;
      InteractTemplLanguage@1003 : Record 5103;
      InteractTmpl@1002 : Record 5064;
    BEGIN
      IF SegHeader.GET("Segment No.") THEN BEGIN
        IF NOT UniqueAttachmentExists AND
           ("Interaction Template Code" = SegHeader."Interaction Template Code")
        THEN BEGIN
          IF SegInteractLanguage.GET("Segment No.",0,ContactLanguageCode) THEN
            Language := ContactLanguageCode
          ELSE
            Language := SegHeader."Language Code (Default)";
        END ELSE
          IF SegInteractLanguage.GET("Segment No.","Line No.",ContactLanguageCode) THEN
            Language := ContactLanguageCode
          ELSE BEGIN
            InteractTmpl.GET(InteractTmplCode);
            IF SegInteractLanguage.GET("Segment No.","Line No.",InteractTmpl."Language Code (Default)") THEN
              Language := InteractTmpl."Language Code (Default)"
            ELSE BEGIN
              SegInteractLanguage.SETRANGE("Segment No.","Segment No.");
              SegInteractLanguage.SETRANGE("Segment Line No.","Line No.");
              IF SegInteractLanguage.FIND('-') THEN
                Language := SegInteractLanguage."Language Code";
            END;
          END;
      END ELSE BEGIN  //Create Interaction:
        IF InteractTemplLanguage.GET(InteractTmplCode,ContactLanguageCode) THEN
          Language := ContactLanguageCode
        ELSE
          IF InteractTmpl.GET(InteractTmplCode) THEN
            Language := InteractTmpl."Language Code (Default)";
      END;
    END;

    PROCEDURE CreateSegInteractLanguages@11(InteractTemplCode@1000 : Code[10]);
    VAR
      SegInteractLanguage@1003 : Record 5104;
      InteractTemplLanguage@1002 : Record 5103;
      Attachment@1001 : Record 5062;
    BEGIN
      SegInteractLanguage.RESET;
      SegInteractLanguage.SETRANGE("Segment No.","Segment No.");
      SegInteractLanguage.SETRANGE("Segment Line No.","Line No.");
      SegInteractLanguage.DELETEALL(TRUE);

      IF SegHeader.GET("Segment No.") THEN
        IF ("Interaction Template Code" <> SegHeader."Interaction Template Code") THEN BEGIN
          InteractTemplLanguage.RESET;
          InteractTemplLanguage.SETRANGE("Interaction Template Code",InteractTemplCode);
          IF InteractTemplLanguage.FIND('-') THEN
            REPEAT
              SegInteractLanguage.INIT;
              SegInteractLanguage."Segment No." := "Segment No.";
              SegInteractLanguage."Segment Line No." := "Line No.";
              SegInteractLanguage."Language Code" := InteractTemplLanguage."Language Code";
              SegInteractLanguage.Description := Description;
              IF Attachment.GET(InteractTemplLanguage."Attachment No.") THEN
                SegInteractLanguage."Attachment No." :=
                  AttachmentManagement.InsertAttachment(InteractTemplLanguage."Attachment No.");
              SegInteractLanguage.INSERT(TRUE);
            UNTIL InteractTemplLanguage.NEXT = 0;
        END;
    END;

    PROCEDURE AttachmentInherited@12() : Boolean;
    VAR
      SegInteractLanguage@1000 : Record 5104;
    BEGIN
      IF "Attachment No." = 0 THEN
        EXIT(FALSE);
      IF NOT SegHeader.GET("Segment No.") THEN
        EXIT(FALSE);
      IF "Interaction Template Code" = '' THEN
        EXIT(FALSE);

      SegInteractLanguage.SETRANGE("Segment No.","Segment No.");
      SegInteractLanguage.SETRANGE("Segment Line No.","Line No.");
      SegInteractLanguage.SETRANGE("Language Code","Language Code");
      SegInteractLanguage.SETRANGE("Attachment No.","Attachment No.");
      IF SegInteractLanguage.FIND('-') THEN
        EXIT(FALSE)
      ELSE BEGIN
        SegInteractLanguage.SETRANGE("Segment Line No.",0);
        IF SegInteractLanguage.FIND('-') THEN
          EXIT(TRUE)
        ELSE
          EXIT(FALSE);
      END;
    END;

    PROCEDURE SetInteractionAttachment@13();
    VAR
      Attachment@1001 : Record 5062;
      InteractTemplLanguage@1000 : Record 5103;
    BEGIN
      IF InteractTemplLanguage.GET("Interaction Template Code","Language Code") THEN BEGIN
        IF Attachment.GET(InteractTemplLanguage."Attachment No.") THEN
          "Attachment No." := InteractTemplLanguage."Attachment No."
        ELSE
          "Attachment No." := 0;
      END;
      MODIFY;
    END;

    PROCEDURE UniqueAttachmentExists@14() : Boolean;
    VAR
      SegInteractLanguage@1000 : Record 5104;
    BEGIN
      IF "Line No." <> 0 THEN BEGIN
        SegInteractLanguage.SETRANGE("Segment No.","Segment No.");
        SegInteractLanguage.SETRANGE("Segment Line No.","Line No.");
        IF SegInteractLanguage.FIND('-') THEN
          EXIT(TRUE)
        ELSE
          EXIT(FALSE);
      END ELSE
        EXIT(FALSE);
    END;

    LOCAL PROCEDURE SetCampaignTargetGroup@15();
    BEGIN
      IF Campaign.GET(xRec."Campaign No.") THEN BEGIN
        Campaign.CALCFIELDS(Activated);
        IF Campaign.Activated THEN
          CampaignTargetGrMgt.DeleteSegfromTargetGr(xRec);
      END;

      IF Campaign.GET("Campaign No.") THEN BEGIN
        Campaign.CALCFIELDS(Activated);
        IF Campaign.Activated THEN
          CampaignTargetGrMgt.AddSegLinetoTargetGr(Rec);
      END;
    END;

    PROCEDURE CreateInteractionFromContact@38(VAR Contact@1000 : Record 5050);
    BEGIN
      DELETEALL;
      INIT;
      IF Contact.Type = Contact.Type::Person THEN
        SETRANGE("Contact Company No.",Contact."Company No.");
      SETRANGE("Contact No.",Contact."No.");
      VALIDATE("Contact No.",Contact."No.");
      "Salesperson Code" := Contact."Salesperson Code";
      StartWizard;
    END;

    PROCEDURE CreateInteractionFromSalesPurc@39(VAR Salesperson@1000 : Record 13);
    BEGIN
      DELETEALL;
      INIT;
      VALIDATE("Salesperson Code",Salesperson.Code);
      SETRANGE("Salesperson Code",Salesperson.Code);
      StartWizard;
    END;

    PROCEDURE CreateInteractionFromIntLogEnt@42(VAR InteractionLogEntry@1000 : Record 5065);
    VAR
      SegLine@1006 : TEMPORARY Record 5077;
      Cont@1005 : Record 5050;
      SalesPurchPerson@1004 : Record 13;
      Campaign@1003 : Record 5071;
      Todo@1002 : Record 5080;
      Opportunity@1001 : Record 5092;
    BEGIN
      IF Todo.GET(InteractionLogEntry.GETFILTER("To-do No.")) THEN BEGIN
        "To-do No." := Todo."No.";
        SETRANGE("To-do No.","To-do No.");
        IF Cont.GET(Todo."Contact No.") THEN
          VALIDATE("Contact No.",Todo."Contact No.");
        IF SalesPurchPerson.GET(Todo."Salesperson Code") THEN
          "Salesperson Code" := SalesPurchPerson.Code;
        IF Campaign.GET(Todo."Campaign No.") THEN
          "Campaign No." := Campaign."No.";
        IF Opportunity.GET(Todo."Opportunity No.") THEN
          "Opportunity No." := Todo."Opportunity No.";
      END ELSE BEGIN
        IF Cont.GET(InteractionLogEntry.GETFILTER("Contact Company No.")) THEN BEGIN
          VALIDATE("Contact No.",Cont."Company No.");
          SETRANGE("Contact No.","Contact No.");
        END;
        IF Cont.GET(InteractionLogEntry.GETFILTER("Contact No.")) THEN BEGIN
          VALIDATE("Contact No.",Cont."No.");
          SETRANGE("Contact No.","Contact No.");
        END;
        IF SalesPurchPerson.GET(InteractionLogEntry.GETFILTER("Salesperson Code")) THEN BEGIN
          "Salesperson Code" := SalesPurchPerson.Code;
          SETRANGE("Salesperson Code","Salesperson Code");
        END;
        IF Campaign.GET(InteractionLogEntry.GETFILTER("Campaign No.")) THEN BEGIN
          "Campaign No." := Campaign."No.";
          SETRANGE("Campaign No.","Campaign No.");
        END;
        IF Opportunity.GET(InteractionLogEntry.GETFILTER("Opportunity No.")) THEN BEGIN
          "Opportunity No." := Opportunity."No.";
          SETRANGE("Opportunity No.","Opportunity No.");
        END;
      END;
      StartWizard;
    END;

    PROCEDURE CreateInteractionFromToDo@43(VAR ToDo@1000 : Record 5080);
    VAR
      SegLine@1004 : TEMPORARY Record 5077;
      Cont@1003 : Record 5050;
      SalesPurchPerson@1002 : Record 13;
      Campaign@1001 : Record 5071;
    BEGIN
      INIT;
      "To-do No." := ToDo."No.";
      SETRANGE("To-do No.","To-do No.");
      IF Cont.GET(ToDo."Contact No.") THEN
        VALIDATE("Contact No.",Cont."No.");
      IF SalesPurchPerson.GET(ToDo."Salesperson Code") THEN
        "Salesperson Code" := SalesPurchPerson.Code;
      IF Campaign.GET(ToDo."Campaign No.") THEN
        "Campaign No." := Campaign."No.";
      StartWizard;
    END;

    PROCEDURE GetContactName@41() : Text[50];
    VAR
      Cont@1000 : Record 5050;
    BEGIN
      IF Cont.GET("Contact No.") THEN
        EXIT(Cont.Name);
      IF Cont.GET("Contact Company No.") THEN
        EXIT(Cont.Name);
    END;

    PROCEDURE StartWizard@33();
    VAR
      Opp@1000 : Record 5092;
    BEGIN
      IF Campaign.GET("Campaign No.") THEN
        "Campaign Description" := Campaign.Description;
      IF Opp.GET("Opportunity No.") THEN
        "Opportunity Description" := Opp.Description;
      "Wizard Contact Name" := GetContactName;
      "Wizard Step" := "Wizard Step"::"1";
      "Interaction Successful" := TRUE;
      VALIDATE(Date,WORKDATE);
      INSERT;
      FORM.RUNMODAL(FORM::"Create Interaction",Rec,"Interaction Template Code");
    END;

    PROCEDURE PerformNextWizardStatus@6(VAR AttachmentTmp@1001 : Record 5062);
    VAR
      InteractTmpl@1000 : Record 5064;
    BEGIN
      CASE "Wizard Step" OF
        "Wizard Step"::"1":
          BEGIN
            InteractTmpl.GET("Interaction Template Code");
            IF InteractTmpl."Wizard Action" <> InteractTmpl."Wizard Action"::" " THEN
              "Wizard Step" := "Wizard Step"::"2"
            ELSE
              "Wizard Step" := "Wizard Step"::"3";
          END;
        "Wizard Step"::"2":
          BEGIN
            HandleTrigger(AttachmentTmp);
            "Wizard Step" := "Wizard Step" + 1;
          END;
        "Wizard Step"::"3".."Wizard Step"::"4":
          "Wizard Step":= "Wizard Step" + 1;
      END;

      IF "Wizard Step" = "Wizard Step"::"4" THEN
    END;

    PROCEDURE PerformPrevWizardStatus@32();
    BEGIN
      CASE "Wizard Step" OF
        "Wizard Step"::"2".."Wizard Step"::"3":
          "Wizard Step" := "Wizard Step"::"1";
        ELSE
          "Wizard Step" := "Wizard Step" - 1;
      END;
    END;

    PROCEDURE CheckStatus@16();
    VAR
      InteractTmpl@1000 : Record 5064;
      Attachment@1001 : Record 5062;
      SalutationFormula@1002 : Record 5069;
    BEGIN
      CASE "Wizard Step" OF
        "Wizard Step"::"1":
          BEGIN
            IF "Contact No." = '' THEN
              ERROR(Text006);
            IF "Interaction Template Code" = '' THEN
              ErrorMessage(FIELDCAPTION("Interaction Template Code"));
            IF"Salesperson Code" = '' THEN
              ErrorMessage(FIELDCAPTION("Salesperson Code"));
            IF Date = 0D THEN
              ErrorMessage(FIELDCAPTION(Date));
            IF Description = '' THEN
              ErrorMessage(FIELDCAPTION(Description));

            InteractTmpl.GET("Interaction Template Code");
            IF InteractTmpl."Wizard Action" = InteractTmpl."Wizard Action"::Open THEN
              IF "Attachment No." = 0 THEN
                ErrorMessage(Attachment.TABLECAPTION);

            Cont.GET("Contact No.");
            SalutationFormula.GET(Cont."Salutation Code","Language Code",0);
            SalutationFormula.GET(Cont."Salutation Code","Language Code",1);
          END;
        "Wizard Step"::"2":;
        "Wizard Step"::"3":
          BEGIN
            IF AttachmentTemp.FIND('-') THEN
              AttachmentTemp.CALCFIELDS(Attachment);
            IF ("Correspondence Type" = "Correspondence Type"::"E-Mail") AND
               ("Attachment No." = 0)
            THEN
              ERROR(Text008);
          END;
        "Wizard Step"::"4":;
      END;
    END;

    PROCEDURE FinishWizard@18(IsFinish@1000 : Boolean;VAR AttachmentTmp@1004 : Record 5062) : Boolean;
    VAR
      SegManagement@1002 : Codeunit 5051;
      send@1001 : Boolean;
      Flag@1102601000 : Boolean;
    BEGIN
      Flag := FALSE;
      IF IsFinish THEN
        Flag := TRUE
      ELSE
        Flag := CONFIRM(Text007);

      IF Flag THEN BEGIN
        AttachmentTemp.COPY(AttachmentTmp);
        "Attempt Failed" := NOT "Interaction Successful";
        Subject := Description;
        ProcessPostponedAttachment;
        send := (IsFinish AND ("Correspondence Type" <> "Correspondence Type"::" "));
        SegManagement.LogInteraction(Rec,AttachmentTemp,InterLogEntryCommentLineTmp,send,NOT IsFinish)
      END;
      DELETE
    END;

    PROCEDURE ErrorMessage@17(FieldName@1000 : Text[1024]);
    BEGIN
      ERROR(Text005,FieldName);
    END;

    PROCEDURE ValidateCorrespondenceType@47();
    VAR
      ErrorText@1000 : Text[80];
    BEGIN
      IF "Correspondence Type" <> "Correspondence Type":: " " THEN
      IF AttachmentTemp.FIND('-') THEN BEGIN
      ErrorText := AttachmentTemp.CheckCorrespondenceType("Correspondence Type");
      IF ErrorText <> '' THEN
        ERROR(
          Text024 + ErrorText,
          FIELDCAPTION("Correspondence Type"),"Correspondence Type");
      END ELSE
        ERROR(Text025);
    END;

    PROCEDURE HandleTrigger@20(VAR AttachmentTmp@1002 : Record 5062);
    VAR
      CommonDialogMgt@1001 : Codeunit 412;
      ImportedFileName@1000 : Text[260];
      FileName@1004 : Text[30];
      RBAutoMgt@1102601000 : Codeunit 419;
      Blobref@1102601001 : Record 99008535;
    BEGIN
      InteractTmpl.GET("Interaction Template Code");
      IF NOT AttachmentTemp.Attachment.HASVALUE THEN
        AttachmentTemp.COPY(AttachmentTmp);
      CASE InteractTmpl."Wizard Action" OF
        InteractTmpl."Wizard Action"::Open:
        BEGIN
          TESTFIELD("Attachment No.");
          LoadTempAttachment;
          Subject := Description;
          AttachmentTemp.ShowAttachment(Rec,Description,TRUE);
          AttachmentTmp.COPY(AttachmentTemp);
        END;
        InteractTmpl."Wizard Action"::Import:
        BEGIN
          ImportedFileName := RBAutoMgt.BLOBImport(Blobref,ImportedFileName,TRUE);
          IF ImportedFileName = '' THEN
            MESSAGE(Text004)
          ELSE BEGIN
            AttachmentTemp.DELETEALL;
            AttachmentTemp.Attachment := Blobref.Blob;
            AttachmentTemp."File Extension" := AttachmentManagement.FileExtension(ImportedFileName);
            AttachmentTemp.INSERT;
            AttachmentTmp.COPY(AttachmentTemp);
          END;
        END;
      END;
    END;

    PROCEDURE LoadTempAttachment@22();
    BEGIN
      IF AttachmentTemp.Attachment.HASVALUE THEN
        EXIT;
      Attachment.GET("Attachment No.");
      Attachment.CALCFIELDS(Attachment);
      AttachmentTemp.DELETEALL;
      AttachmentTemp.WizEmbeddAttachment(Attachment);
      AttachmentTemp."No." := 0;
      AttachmentTemp."Read Only" := FALSE;
      AttachmentTemp.INSERT;
    END;

    PROCEDURE ProcessPostponedAttachment@19();
    BEGIN
      IF "Attachment No." <> 0 THEN BEGIN
        LoadTempAttachment;
        IF "Line No." <> 0 THEN
          "Attachment No." := ResumedAttachmentNo;
      END ELSE
        IF Attachment.GET(ResumedAttachmentNo) THEN
          Attachment.RemoveAttachment(FALSE);
    END;

    PROCEDURE LoadAttachment@24();
    BEGIN
      IF "Line No." <> 0 THEN BEGIN
        InterLogEntryCommentLine.SETRANGE("Entry No.","Line No.");
        IF InterLogEntryCommentLine.FIND('-') THEN
          REPEAT
            InterLogEntryCommentLineTmp.INIT;
            InterLogEntryCommentLineTmp.TRANSFERFIELDS(InterLogEntryCommentLine,FALSE);
            InterLogEntryCommentLineTmp."Line No." := InterLogEntryCommentLine."Line No.";
            InterLogEntryCommentLineTmp.INSERT;
          UNTIL InterLogEntryCommentLine.NEXT =0;
        ResumedAttachmentNo := "Attachment No.";
      END;
      IF "Attachment No." <> 0 THEN
        LoadTempAttachment;
    END;

    PROCEDURE MakePhoneCallFromContact@45(VAR Cont@1000 : Record 5050;ToDo@1001 : Record 5080;TableNo@1005 : Integer;PhoneNo@1003 : Text[30];ContAltAddrCode@1002 : Code[10]);
    BEGIN
      INIT;
      IF Cont.Type = Cont.Type::Person THEN
        SETRANGE("Contact No.",Cont."No.")
      ELSE
        SETRANGE("Contact Company No.",Cont."Company No.");
      IF PhoneNo <> '' THEN
        "Contact Via" := PhoneNo
      ELSE
        "Contact Via" := Cont."Phone No.";
      VALIDATE("Contact No.",Cont."No.");
      "Contact Name" := Cont.Name;
      VALIDATE(Date,TODAY);
      IF ContAltAddrCode <> '' THEN
        "Contact Alt. Address Code" := ContAltAddrCode;
      IF TableNo = DATABASE::"To-do" THEN
        "To-do No." := ToDo."No.";
      StartWizard2;
    END;

    PROCEDURE StartWizard2@34();
    VAR
      InteractionTmplSetup@1000 : Record 5122;
      Campaign@1001 : Record 5071;
    BEGIN
      InteractionTmplSetup.GET;
      InteractionTmplSetup.TESTFIELD(InteractionTmplSetup."Outg. Calls");

      "Wizard Step" := "Wizard Step"::"1";
      IF Date = 0D THEN
        Date := TODAY;
      "Time of Interaction" := TIME;
      "Interaction Successful" := TRUE;
      "Dial Contact" := TRUE;

      IF Campaign.GET(GETFILTER("Campaign No.")) THEN
        "Campaign Description" := Campaign.Description;
      "Wizard Contact Name" := GetContactName;

      INSERT;
      VALIDATE("Interaction Template Code",InteractionTmplSetup."Outg. Calls");
      FORM.RUNMODAL(FORM::"Make Phone Call",Rec,"Contact Via");
    END;

    PROCEDURE PerformNextWizardStatus2@26();
    VAR
      InteractTmpl@1000 : Record 5064;
    BEGIN
      "Wizard Step" := "Wizard Step" + 1;
    END;

    PROCEDURE PerformPrevWizardStatus2@35();
    BEGIN
      "Wizard Step" := "Wizard Step" - 1;
    END;

    PROCEDURE PerformPostStep2@46();
    BEGIN
      CASE "Wizard Step" OF
        "Wizard Step"::"2":
          IF "Dial Contact" THEN BEGIN
            IF TAPIManagement.Dial("Contact Via") THEN
              "Dial Contact" := FALSE;
          END ELSE
            ERROR(Text010);
      END;
    END;

    PROCEDURE CheckStatus2@25();
    VAR
      InteractTmpl@1000 : Record 5064;
      Attachment@1001 : Record 5062;
      SalutationFormula@1002 : Record 5069;
    BEGIN
      IF "Wizard Step" = "Wizard Step"::"1" THEN BEGIN
        IF "Dial Contact" AND ("Contact Via" = '') THEN
          ERROR(Text013);
        IF Date = 0D THEN
          ErrorMessage(FIELDCAPTION(Date));
        IF Description = '' THEN
          ErrorMessage(FIELDCAPTION(Description));
        IF "Salesperson Code" = '' THEN
          ErrorMessage(FIELDCAPTION("Salesperson Code"));
      END;
    END;

    PROCEDURE FinishWizard2@23() : Boolean;
    VAR
      SegManagement@1002 : Codeunit 5051;
      TempAttachment@1000 : TEMPORARY Record 5062;
      SegLine@1001 : Record 5077;
    BEGIN
      "Attempt Failed" := NOT "Interaction Successful";

      SegManagement.LogInteraction(Rec,TempAttachment,InterLogEntryCommentLineTmp,FALSE,FALSE);

      IF SegLine.GET("Segment No.","Line No.") THEN BEGIN
        SegLine.LOCKTABLE;
        SegLine."Contact Via" := "Contact Via";
        SegLine."Wizard Step" := SegLine."Wizard Step"::" ";
        SegLine.MODIFY;
      END;
    END;

    PROCEDURE ShowComment@27();
    BEGIN
      FORM.RUNMODAL(FORM::"Inter. Log Entry Comment Sheet",InterLogEntryCommentLineTmp);
    END;

    PROCEDURE CommentExists@28() : Boolean;
    BEGIN
      EXIT(NOT InterLogEntryCommentLineTmp.ISEMPTY);
    END;

    PROCEDURE GetComments@64(VAR InterLogEntryCommentLine@1001 : Record 5123);
    BEGIN
      InterLogEntryCommentLine.DELETEALL;
      IF InterLogEntryCommentLineTmp.FIND('-') THEN
        REPEAT
          InterLogEntryCommentLine := InterLogEntryCommentLineTmp;
          InterLogEntryCommentLine.INSERT;
        UNTIL InterLogEntryCommentLineTmp.NEXT = 0;
    END;

    PROCEDURE SetComments@53(VAR InterLogEntryCommentLine@1001 : Record 5123);
    BEGIN
      InterLogEntryCommentLineTmp.DELETEALL;

      IF InterLogEntryCommentLine.FINDSET THEN
        REPEAT
          InterLogEntryCommentLineTmp := InterLogEntryCommentLine;
          InterLogEntryCommentLineTmp.INSERT;
        UNTIL InterLogEntryCommentLine.NEXT = 0;
    END;

    PROCEDURE CreateMailFromContact@40(VAR Cont@1000 : Record 5050;Email@1001 : Text[80]);
    BEGIN
      DELETEALL;
      INIT;
      IF Cont.Type = Cont.Type::Person THEN
        SETRANGE("Contact No.",Cont."No.")
      ELSE
        SETRANGE("Contact Company No.",Cont."Company No.");
      IF Email <> '' THEN
        "Contact Via" := Email
      ELSE
        "Contact Via" := Cont."E-Mail";
      VALIDATE("Contact No.",Cont."No.");
      VALIDATE(Date,TODAY);

      StartWizard3;
    END;

    PROCEDURE StartWizard3@37();
    VAR
      InteractionTmplSetup@1000 : Record 5122;
    BEGIN
      "Wizard Step" := "Wizard Step"::"1";
      "Interaction Successful" := TRUE;
      "Mail Contact" := TRUE;
      IF "Contact No." = '' THEN
        "Contact No." := "Contact Company No.";
      "Wizard Contact Name" := GetContactName;
      INSERT;
      InteractionTmplSetup.GET;
      VALIDATE("Interaction Template Code",InteractionTmplSetup."E-Mails");
      "Correspondence Type" := "Correspondence Type"::"E-Mail";
      MODIFY;

      FORM.RUNMODAL(FORM::"Create Mail",Rec);
    END;

    PROCEDURE PerformNextWizardStatus3@31();
    VAR
      InteractTmpl@1000 : Record 5064;
      Opp@1001 : Record 5092;
    BEGIN
      "Wizard Step" := "Wizard Step" + 1;
    END;

    PROCEDURE PerformPrevWizardStatus3@36();
    BEGIN
      "Wizard Step" := "Wizard Step" - 1;
    END;

    PROCEDURE PerformPostStep3@44();
    BEGIN
      CASE "Wizard Step" OF
        "Wizard Step"::"2":
          IF "Mail Contact" THEN BEGIN
            IF Mail.NewMessage("Contact Via",'',Subject,'','',TRUE) THEN BEGIN
              "Mail Contact" := FALSE;
              "Mail GUID" := Mail.GetMailGUIDValue;
              "Time of Interaction" := TIME;
              MODIFY;
            END ELSE
              ERROR(FORMAT(Mail.GetErrorCode) + ' : ' + Mail.GetErrorDesc + '.');
          END;
      END;
    END;

    PROCEDURE CheckStatus3@30();
    VAR
      InteractTmpl@1000 : Record 5064;
      Attachment@1001 : Record 5062;
      SalutationFormula@1002 : Record 5069;
    BEGIN
      IF "Wizard Step" = "Wizard Step"::"1" THEN BEGIN
        IF Date = 0D THEN
          ErrorMessage(FIELDCAPTION(Date));
        IF "Mail Contact" AND ("Contact Via" = '') THEN
          ErrorMessage(FIELDCAPTION("Contact Via"));
        IF "Mail Contact" AND ("Contact Via" <> '') THEN BEGIN
          IF NOT ContactThrough.FIND('-') THEN
            Mail.CollectAddresses("Contact No.",ContactThrough,FALSE);
          IF NOT Mail.ValidateEmail(ContactThrough,"Contact Via") THEN
            ERROR(Text023,"Contact Via",Cont.TABLECAPTION);
        END;
        IF Subject = '' THEN
          ErrorMessage(FIELDCAPTION(Subject));
        IF "Salesperson Code" = '' THEN
          ErrorMessage(FIELDCAPTION("Salesperson Code"));
      END;
    END;

    PROCEDURE FinishWizard3@29() : Boolean;
    VAR
      SegLine@1002 : Record 5077;
      TempAttachment@1001 : Record 5062;
      SegManagement@1000 : Codeunit 5051;
    BEGIN
      "Attempt Failed" := NOT "Interaction Successful";
      Description := Subject;

      "Wizard Contact Name" := '';
      "Opportunity Description" := '';
      "Campaign Description" := '';
      "Wizard Step" := "Wizard Step"::" ";
      "Interaction Successful" := FALSE;
      "Dial Contact" := FALSE;
      "Mail Contact" := FALSE;

      SegManagement.LogInteraction(Rec,TempAttachment,InterLogEntryCommentLineTmp,FALSE,FALSE);

      IF SegLine.GET("Segment No.","Line No.") THEN BEGIN
        SegLine.LOCKTABLE;
        SegLine."Contact Via" := "Contact Via";
        SegLine.MODIFY;
      END;
    END;

    BEGIN
    END.
  }
}
