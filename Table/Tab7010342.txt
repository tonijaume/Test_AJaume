OBJECT Table 7010342 Incidencias Conductor x Dia
{
  OBJECT-PROPERTIES
  {
    Date=16/10/09;
    Time=12:30:41;
    Version List=TRANSFER;
  }
  PROPERTIES
  {
    CaptionML=ESP=Incidencias Conductor x Dia;
  }
  FIELDS
  {
    { 1   ;   ;Conductor           ;Code10        ;TableRelation=Conductor.Conductor;
                                                   CaptionML=ESP=Conductor;
                                                   Description=PK , FK Conductor }
    { 2   ;   ;Fecha               ;Date          ;CaptionML=ESP=Fecha }
    { 4   ;   ;Motivo              ;Option        ;CaptionML=ESP=Motivo;
                                                   OptionCaptionML=ESP="  ,Dia Libre,Vacaciones,Baja,Accidente,Otros,Libre Acumulado,Libre / Defuncion,Medico,Permiso Social,Accidente Laboral";
                                                   OptionString=[  ,Dia Libre,Vacaciones,Baja,Accidente,Otros,Libre Acumulado,Libre / Defuncion,Medico,Permiso Social,Accidente Laboral] }
    { 5   ;   ;Garage              ;Code10        ;TableRelation=Garaje.Garaje;
                                                   CaptionML=ESP=Garage }
    { 6   ;   ;id                  ;Integer       ;CaptionML=ESP=id }
    { 7   ;   ;Cod Motivo          ;Code10        ;TableRelation="Configuracion Incidencia Cond.".Codigo;
                                                   CaptionML=ESP=Cod Motivo }
  }
  KEYS
  {
    {    ;Conductor,Fecha,id                      ;Clustered=Yes }
    {    ;id,Conductor                             }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100244000 : TextConst 'ESP=+ 1D';

    PROCEDURE CreaPerido@1(VAR prHIC@1100244000 : Record 7010333);
    VAR
      lwFecha@1100244001 : Date;
      lrIncDia@1100244002 : Record 7010342;
    BEGIN
      // CreaPeriodo
      // Crea todas las lineas relacionadas con la linea de incidencia de conductor
      // Eso es, una linea por d¡a e incidencia

      IF (prHIC."Fecha Desde"<>0D) AND (prHIC."Fecha Hasta"<> 0D) THEN BEGIN
        RESET;
        INIT;
        Conductor     := prHIC.Conductor;
        //BRM 17/06/04
        //Motivo        := prHIC.Motivo;
        "Cod Motivo"  := prHIC."Cod Motivo";
        Garage        := prHIC.Garaje;
        id            := prHIC.ID;
        lwFecha := prHIC."Fecha Desde";
        REPEAT
          Fecha := lwFecha;
          INSERT;
          lwFecha := CALCDATE(Text000,lwFecha);
        UNTIL lwFecha > prHIC."Fecha Hasta";
      END;


      {
      ELSE BEGIN
        // AML 090103 por si dejan la fecha hasta en blanco.
        IF prHIC."Fecha Hasta" = 0D THEN BEGIN
          RESET;
          INIT;
          Conductor     := prHIC.Conductor;
          Motivo        := prHIC.Motivo;
          Garage        := prHIC.Garaje;
          id            := prHIC.ID;
          Fecha         := prHIC."Fecha Desde";
          INSERT;
        END;
      END;
      }
    END;

    PROCEDURE BorraPeriodo@15(VAR prHIC@1100244000 : Record 7010333);
    VAR
      lrIncDia@1100244001 : Record 7010342;
    BEGIN
      // BorraPeriodo
      // Borra todas las l¡neas relacionadas con la l¡nea de incidencia de conductor pasado como parametro
      // Eso es todas las l¡neas con el mismo conductor y cuya fecha se encuentre entre el periodo de la incidencia

      IF (prHIC."Fecha Desde"<>0D) AND (prHIC."Fecha Hasta"<> 0D) THEN BEGIN
        RESET;
        INIT;
        SETRANGE  (Conductor    , prHIC.Conductor );
        SETFILTER (Fecha , '%1..%2' , prHIC."Fecha Desde" , prHIC."Fecha Hasta" );
        DELETEALL;
      END
      ELSE BEGIN
        // AML buscamos por id ya que se ha modificado para que la fecha hasta no sea obligatoria.
        RESET;
        INIT;
        SETCURRENTKEY(id        ,
                      Conductor);
        SETRANGE(Conductor    , prHIC.Conductor );
        SETRANGE(id           , prHIC.ID);
        DELETEALL;
      END;
    END;

    BEGIN
    END.
  }
}
