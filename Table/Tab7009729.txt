OBJECT Table 7009729 Porcentaje EBB Hotel
{
  OBJECT-PROPERTIES
  {
    Date=26/02/14;
    Time=15:41:10;
    Modified=Yes;
    Version List=AIC2009;
  }
  PROPERTIES
  {
    OnInsert=VAR
               rGar@1103355000 : Record 7009729;
             BEGIN
               rParAge.FINDFIRST;
               IF NOT rParAge."Empresa Delegacion" THEN
                 ERROR(Text001);

               IF rConC.GET(Delegacion, "N§ Contrato") THEN
               BEGIN
                 rConC.Enviar := TRUE;
                 rConC.MODIFY;
               END;

               // Enumeramos la garantia

               rGar.RESET;
               rGar.SETRANGE(Delegacion     , Delegacion);
               rGar.SETRANGE("N§ Contrato"  , "N§ Contrato");
               rGar.SETRANGE("Tipo Garantia", "Tipo Garantia");
               IF rGar.FINDLAST THEN
                 "Num Orden" := rGar."Num Orden" + 1
               ELSE
                 "Num Orden" := 1;

               Activo := cCon.activar_garantia(Rec);

               VALIDATE(Replicado);

               "Fecha creacion"   := CURRENTDATETIME;
               "Usuario creacion" := USERID;
             END;

    OnModify=BEGIN
               rParAge.FINDFIRST;
               IF NOT rParAge."Empresa Delegacion" THEN
                 ERROR(Text002);

               IF rConC.GET(Delegacion, "N§ Contrato") THEN
               BEGIN
                 rConC.Enviar := TRUE;
                 rConC.MODIFY;
               END;

               Activo := cCon.activar_garantia(Rec);

               VALIDATE(Replicado);
             END;

    OnDelete=BEGIN
               rParAge.FINDFIRST;
               IF NOT rParAge."Empresa Delegacion" THEN
                 ERROR(Text003);

               cFunSeg.TienePermiso(Text005, TRUE);

               IF rConC.GET(Delegacion, "N§ Contrato") THEN
               BEGIN
                 rConC.Enviar := TRUE;
                 rConC.MODIFY;
               END;

               rGarDia.RESET;
               rGarDia.SETRANGE(Delegacion          , Delegacion);
               rGarDia.SETRANGE("N§ Contrato compra", "N§ Contrato");
               rGarDia.SETRANGE("Tipo Garantia"     , "Tipo Garantia");
               rGarDia.SETRANGE("N§ Garantia"       , "Num Orden");
               IF rGarDia.FIND('-') THEN
                 rGarDia.DELETEALL;
             END;

    OnRename=BEGIN
               rParAge.FINDFIRST;
               IF NOT rParAge."Empresa Delegacion" THEN
                 ERROR(Text007);

               VALIDATE(Replicado);
             END;

    CaptionML=[ENU=Hotel EBB Percentage;
               ESP=Porcentaje EBB Hotel];
    LookupFormID=Form7009740;
    DrillDownFormID=Form7009740;
  }
  FIELDS
  {
    { 1   ;   ;Delegacion          ;Code10        ;TableRelation=Delegacion.Codigo;
                                                   CaptionML=[ENU=Local Office;
                                                              ESP=Delegacion];
                                                   Description=PK, FK Delegacion;
                                                   Editable=No }
    { 3   ;   ;N§ Contrato         ;Code10        ;CaptionML=[ENU=Contract No.;
                                                              ESP=N§ Contrato];
                                                   Description=PK;
                                                   Editable=No }
    { 5   ;   ;Tipo Garantia       ;Option        ;CaptionML=[ENU=Guarantee type;
                                                              ESP=Tipo Garantia];
                                                   OptionCaptionML=[ENU=Amount,Room;
                                                                    ESP=Importe,Habitacion];
                                                   OptionString=Importe,Habitacion;
                                                   Description=PK;
                                                   Editable=No }
    { 7   ;   ;Num Orden           ;Integer       ;CaptionML=[ENU=Order No.;
                                                              ESP=Num Orden];
                                                   Description=PK;
                                                   Editable=No }
    { 9   ;   ;Fecha venta desde   ;Date          ;OnValidate=BEGIN
                                                                IF "Fecha venta desde" <> xRec."Fecha venta desde" THEN BEGIN
                                                                  IF "Fecha venta hasta" <> 0D THEN BEGIN
                                                                    IF "Fecha venta desde" > "Fecha venta hasta" THEN
                                                                      ERROR(Text008);
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Sale date from;
                                                              ESP=Fecha venta desde];
                                                   NotBlank=Yes }
    { 11  ;   ;Fecha venta hasta   ;Date          ;OnValidate=BEGIN
                                                                IF "Fecha venta hasta" <> xRec."Fecha venta hasta" THEN BEGIN
                                                                  IF "Fecha venta desde" <> 0D THEN BEGIN
                                                                    IF "Fecha venta desde" > "Fecha venta hasta" THEN
                                                                      ERROR(Text010);
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Sale date to;
                                                              ESP=Fecha venta hasta];
                                                   NotBlank=Yes }
    { 13  ;   ;Tipo Aplicacion     ;Option        ;CaptionML=[ENU=Application type;
                                                              ESP=Tipo Aplicacion];
                                                   OptionCaptionML=[ENU=Daily,Period;
                                                                    ESP=Diaria,Periodo];
                                                   OptionString=Diaria,Periodo }
    { 15  ;   ;Habitacion desde    ;Code10        ;OnValidate=BEGIN
                                                                rConHab.RESET;
                                                                rConHab.SETRANGE(Delegacion       , Delegacion);
                                                                rConHab.SETRANGE("N§ Contrato"    , "N§ Contrato");
                                                                rConHab.SETRANGE("Tipo contrato"  , rConHab."Tipo contrato"::Compra);
                                                                rConHab.SETRANGE("Habitacion cupo", "Habitacion desde");
                                                                IF NOT rConHab.FIND('-') THEN
                                                                  ERROR(Text011, "Habitacion desde");
                                                                IF "Habitacion hasta" <> '' THEN
                                                                  IF "Habitacion desde" > "Habitacion hasta" THEN
                                                                    ERROR(Text012);
                                                              END;

                                                   OnLookup=BEGIN
                                                              rConHab.RESET;
                                                              rConHab.SETRANGE(Delegacion     , Delegacion);
                                                              rConHab.SETRANGE("N§ Contrato"  , "N§ Contrato");
                                                              rConHab.SETRANGE("Tipo contrato", rConHab."Tipo contrato"::Compra);
                                                              IF FORM.RUNMODAL(0, rConHab) = ACTION::LookupOK THEN BEGIN
                                                                "Habitacion desde" := rConHab."Habitacion cupo";
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Room from;
                                                              ESP=Habitacion desde] }
    { 17  ;   ;Habitacion hasta    ;Code10        ;OnValidate=BEGIN
                                                                rConHab.RESET;
                                                                rConHab.SETRANGE(Delegacion       , Delegacion);
                                                                rConHab.SETRANGE("N§ Contrato"    , "N§ Contrato");
                                                                rConHab.SETRANGE("Tipo contrato"  , rConHab."Tipo contrato"::Compra);
                                                                rConHab.SETRANGE("Habitacion cupo", "Habitacion hasta");
                                                                IF NOT rConHab.FIND('-') THEN
                                                                  ERROR(Text011, "Habitacion hasta");
                                                                IF "Habitacion desde" <> '' THEN
                                                                  IF "Habitacion desde" > "Habitacion hasta" THEN
                                                                    ERROR(Text012);
                                                              END;

                                                   OnLookup=BEGIN
                                                              rConHab.RESET;
                                                              rConHab.SETRANGE(Delegacion     , Delegacion);
                                                              rConHab.SETRANGE("N§ Contrato"  , "N§ Contrato");
                                                              rConHab.SETRANGE("Tipo contrato", rConHab."Tipo contrato"::Compra);
                                                              IF FORM.RUNMODAL(0, rConHab) = ACTION::LookupOK THEN BEGIN
                                                                "Habitacion hasta" := rConHab."Habitacion cupo";
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Room to;
                                                              ESP=Habitacion hasta] }
    { 19  ;   ;Cantidad Habitaciones;Decimal      ;CaptionML=[ENU=Room quantity;
                                                              ESP=Cantidad Habitaciones] }
    { 21  ;   ;Importe             ;Decimal       ;CaptionML=[ENU=Amount;
                                                              ESP=Importe];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="C¢d. divisa" }
    { 23  ;   ;Hotel               ;Code20        ;TableRelation=Hotel.Hotel;
                                                   CaptionML=[ENU=Hotel;
                                                              ESP=Hotel];
                                                   Description=FK Hotel;
                                                   Editable=No }
    { 25  ;   ;% EBB               ;Decimal       ;CaptionML=[ENU=% EBB;
                                                              ESP=% EBB] }
    { 27  ;   ;Activo              ;Boolean       ;CaptionML=[ENU=Active;
                                                              ESP=Activo];
                                                   Editable=No }
    { 28  ;   ;Replicado           ;Boolean       ;InitValue=No;
                                                   OnValidate=BEGIN
                                                                Replicado:= FALSE;

                                                                IF rConC.GET(Delegacion,"N§ Contrato") THEN BEGIN
                                                                  rConC.Replicado := FALSE;
                                                                  rConC.MODIFY;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Replicated;
                                                              ESP=Replicado];
                                                   Description=Campo usado por el replicador }
    { 30  ;   ;C¢d. divisa         ;Code10        ;TableRelation=Currency.Code;
                                                   CaptionML=[ENU=Currency exchange;
                                                              ESP=C¢d. divisa] }
    { 31  ;   ;Fecha llegada desde ;Date          ;OnValidate=BEGIN
                                                                IF "Fecha llegada desde" <> xRec."Fecha llegada desde" THEN BEGIN
                                                                  IF "Fecha llegada hasta" <> 0D THEN BEGIN
                                                                    IF "Fecha llegada desde" > "Fecha llegada hasta" THEN
                                                                      ERROR(Text008);
                                                                  END;

                                                                  // AJS 04.01.2008
                                                                  // Controlamos que la fecha entre dentro la vigencia del contrato

                                                                  IF rConC.GET(Delegacion, "N§ Contrato") THEN BEGIN
                                                                    IF ("Fecha llegada desde" < rConC."Fecha inicio contrato") OR ("Fecha llegada desde" > rConC."Fecha final contrato") THEN
                                                                      ERROR(Text009);
                                                                  END;

                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Arrival date from;
                                                              ESP=Fecha llegada desde] }
    { 32  ;   ;Fecha llegada hasta ;Date          ;OnValidate=BEGIN
                                                                IF "Fecha llegada hasta" <> xRec."Fecha llegada hasta" THEN BEGIN
                                                                  IF "Fecha llegada desde" <> 0D THEN BEGIN
                                                                    IF "Fecha llegada desde" > "Fecha llegada hasta" THEN
                                                                      ERROR(Text010);
                                                                  END;

                                                                  // AJS 04.01.2008
                                                                  // Controlamos que la fecha entre dentro la vigencia del contrato

                                                                  IF rConC.GET(Delegacion, "N§ Contrato") THEN BEGIN
                                                                    IF ("Fecha llegada hasta" < rConC."Fecha inicio contrato") OR ("Fecha llegada hasta" > rConC."Fecha final contrato") THEN
                                                                      ERROR(Text009);
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Arrival date to;
                                                              ESP=Fecha llegada hasta] }
    { 33  ;   ;Fecha pago          ;Date          ;CaptionML=[ENU=Payment date;
                                                              ESP=Fecha pago] }
    { 34  ;   ;Descripcion         ;Text200       ;CaptionML=[ENU=Description;
                                                              ESP=Descripcion] }
    { 35  ;   ;Fecha creacion      ;DateTime      ;CaptionML=[ENU=Creation Date;
                                                              ESP=Fecha creacion] }
    { 36  ;   ;Usuario creacion    ;Code20        ;TableRelation=User."User ID";
                                                   CaptionML=[ENU=Creation user;
                                                              ESP=Usuario creacion];
                                                   Description=User."User ID" }
    { 37  ;   ;Revisado            ;Boolean       ;OnValidate=BEGIN
                                                                "Fecha revision" := CURRENTDATETIME;
                                                                "Usuario revision" := USERID;
                                                              END;

                                                   CaptionML=[ENU=Reviewed;
                                                              ESP=Revisado];
                                                   Description=GOC-OC-11018 }
    { 38  ;   ;Fecha revision      ;DateTime      ;CaptionML=[ENU=Date review;
                                                              ESP=Fecha revision] }
    { 39  ;   ;Usuario revision    ;Code20        ;CaptionML=[ENU=User review;
                                                              ESP=Usuario revision] }
  }
  KEYS
  {
    {    ;Delegacion,N§ Contrato,Tipo Garantia,Num Orden;
                                                   Clustered=Yes }
    {    ;N§ Contrato                             ;KeyGroups=RENUMERING }
    {    ;Replicado                               ;KeyGroups=RENUMERING }
    {    ;Fecha venta hasta,Revisado              ;KeyGroups=RENUMERING }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1103355008 : TextConst 'ENU=Agency parameters folder does not exist;ESP=No existe el fichero de Parametros de la Agencia.';
      Text001@1103355009 : TextConst 'ENU=Only can enter guarantees in the local offices.;ESP=Solo se pueden dar de alta garantias en las delegaciones.';
      Text002@1103355010 : TextConst 'ENU=Only can modify guarantees in the local offices.;ESP=Solo se pueden modificar garantias en las delegaciones.';
      Text003@1103355011 : TextConst 'ENU=Only can cancel guarantees in the local offices.;ESP=Solo se pueden dar de baja garantias en las delegaciones.';
      Text004@1103355012 : TextConst 'ENU=User %1 does not exist;ESP=No existe el usuario %1.';
      Text005@1103355013 : TextConst 'ENU=FUN-ACT-COC;ESP=FUN-ACT-COC';
      Text007@1103355015 : TextConst 'ENU=Only can rename guarantees in the local offices.;ESP=Solo se pueden renombrar garantias en las delegaciones.';
      Text008@1103355016 : TextConst 'ENU=Date from must be lower than date to;ESP=La fecha desde debe ser anterior a la fecha hasta.';
      Text009@1103355017 : TextConst 'ENU=Indicated date is out of the current contract;ESP=La fecha indicada esta fuera de la vigencia del contrato.';
      Text010@1103355018 : TextConst 'ENU=Date to must be higher than date from.;ESP=La fecha hasta debe ser posterior a la fecha desde.';
      Text011@1103355019 : TextConst 'ENU=Room %1 does not exist in this contract;ESP=No existe la habitacion %1 en este contrato.';
      Text012@1103355020 : TextConst 'ENU=Room type from must be lower than room to.;ESP=El tipo de habitacion desde debe ser anterior a la habitacion hasta.';
      rParAge@1103355002 : Record 7009700;
      rConC@1103355003 : Record 7009723;
      rConHab@1103355004 : Record 7009731;
      rGarDia@1103355005 : Record 7009779;
      cCon@1103355006 : Codeunit 7009701;
      Text013@1103355021 : TextConst 'ENU=Unable to modify the conditions of an issued EBB;ESP=No se pueden modificar las condiciones de un EBB emitido.';
      cFunSeg@1100253000 : Codeunit 7009751;

    PROCEDURE crear_garantias_dia@1();
    VAR
      w_dia@1103355000 : Date;
    BEGIN
      FOR w_dia := "Fecha venta desde" TO "Fecha venta hasta" DO
      BEGIN
        CLEAR(rGarDia);
        rGarDia.Delegacion              := Delegacion;
        rGarDia."N§ Contrato compra"    := "N§ Contrato";
        rGarDia."Tipo Garantia"         := "Tipo Garantia";
        rGarDia."N§ Garantia"           := "Num Orden";
        rGarDia.Fecha                   := w_dia;
        rGarDia."Habitacion desde"      := "Habitacion desde";
        rGarDia."Habitacion hasta"      := "Habitacion hasta";
        rGarDia."Cantidad Habitaciones" := "Cantidad Habitaciones";
        rGarDia.Importe                 := Importe;
        rGarDia.Hotel                   := Hotel;
        rGarDia.INSERT;
      END;
    END;

    BEGIN
    {
      $001 AJS 26022014 Elimino las funciones SincronizaEmisionEBB y BorraEmisionEBB porque son obsoletas
    }
    END.
  }
}
