OBJECT Table 5 Finance Charge Terms
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVW16.00,NAVES4.00;
  }
  PROPERTIES
  {
    DataCaptionFields=Code,Description;
    OnDelete=BEGIN
               FinChrgText.SETRANGE("Fin. Charge Terms Code",Code);
               FinChrgText.DELETEALL;

               CurrForFinChrgTerms.SETRANGE("Fin. Charge Terms Code",Code);
               CurrForFinChrgTerms.DELETEALL;
             END;

    CaptionML=[ENU=Finance Charge Terms;
               ESP=T‚rminos inter‚s];
    LookupFormID=Form6;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code10        ;CaptionML=[ENU=Code;
                                                              ESP=C¢digo];
                                                   NotBlank=Yes }
    { 2   ;   ;Interest Rate       ;Decimal       ;CaptionML=[ENU=Interest Rate;
                                                              ESP=Tipo inter‚s];
                                                   DecimalPlaces=0:6;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 3   ;   ;Minimum Amount (LCY);Decimal       ;CaptionML=[ENU=Minimum Amount (LCY);
                                                              ESP=Importe m¡nimo (DL)];
                                                   MinValue=0;
                                                   AutoFormatType=1 }
    { 5   ;   ;Additional Fee (LCY);Decimal       ;CaptionML=[ENU=Additional Fee (LCY);
                                                              ESP=Recargo fijo (DL)];
                                                   MinValue=0;
                                                   AutoFormatType=1 }
    { 7   ;   ;Description         ;Text30        ;CaptionML=[ENU=Description;
                                                              ESP=Descripci¢n] }
    { 8   ;   ;Interest Calculation Method;Option ;CaptionML=[ENU=Interest Calculation Method;
                                                              ESP=M‚todo c lculo inter‚s];
                                                   OptionCaptionML=[ENU=Average Daily Balance,Balance Due;
                                                                    ESP=D¡as saldo vencido,Saldo vencido];
                                                   OptionString=Average Daily Balance,Balance Due }
    { 9   ;   ;Interest Period (Days);Integer     ;CaptionML=[ENU=Interest Period (Days);
                                                              ESP=Periodo inter‚s (d¡as)] }
    { 10  ;   ;Grace Period        ;DateFormula   ;CaptionML=[ENU=Grace Period;
                                                              ESP=Periodo gracia] }
    { 11  ;   ;Due Date Calculation;DateFormula   ;CaptionML=[ENU=Due Date Calculation;
                                                              ESP=C lculo de fecha de vencimiento] }
    { 12  ;   ;Interest Calculation;Option        ;CaptionML=[ENU=Interest Calculation;
                                                              ESP=Movs. c lculo inter‚s];
                                                   OptionCaptionML=[ENU=Open Entries,Closed Entries,All Entries;
                                                                    ESP=Movs. pendientes,Movs. liquidados,Todos];
                                                   OptionString=Open Entries,Closed Entries,All Entries }
    { 13  ;   ;Post Interest       ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[ENU=Post Interest;
                                                              ESP=Registrar inter‚s] }
    { 14  ;   ;Post Additional Fee ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[ENU=Post Additional Fee;
                                                              ESP=Registrar recargo fijo] }
    { 15  ;   ;Line Description    ;Text50        ;CaptionML=[ENU=Line Description;
                                                              ESP=Descripci¢n l¡nea reg.] }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Code,Description,Interest Rate           }
  }
  CODE
  {
    VAR
      FinChrgText@1000 : Record 301;
      CurrForFinChrgTerms@1001 : Record 328;
      Currency@1100008 : Record 4;
      CurrExchRate@1100009 : Record 330;
      CurrFinChargeTerms@1100010 : Record 328;
      TotalFinChargesAmt@1100011 : Decimal;
      Initialized@1100012 : Boolean;

    PROCEDURE CalcFinChargesAmt@1100013(PostDate@1100000 : Date;Code2@1100001 : Code[10];CurrCode@1100002 : Code[10];Amount@1100003 : Decimal;NoOfDays@1100004 : Integer);
    VAR
      DocFinChargeAmt@1100005 : Decimal;
      CurrMinAmt@1100006 : Decimal;
      CurrAddFee@1100007 : Decimal;
    BEGIN
      IF NOT GET(Code2) THEN
        EXIT;

      IF NoOfDays < 1 THEN
        EXIT;

      IF CurrCode = '' THEN BEGIN
        Currency.InitRoundingPrecision;
        Initialized := TRUE;
        CurrMinAmt := "Minimum Amount (LCY)";
        CurrAddFee := "Additional Fee (LCY)";
      END ELSE BEGIN
        Currency.GET(CurrCode);
        Currency.TESTFIELD(Currency."Amount Rounding Precision");
        CurrFinChargeTerms.SETRANGE("Fin. Charge Terms Code",Code2);
        CurrFinChargeTerms.SETRANGE("Currency Code",CurrCode);
        IF CurrFinChargeTerms.FIND('-') THEN
          CurrAddFee := CurrFinChargeTerms."Additional Fee"
        ELSE
          CurrAddFee := 0;

        CurrMinAmt := CurrExchRate.ExchangeAmtLCYToFCY(
          PostDate,
          CurrCode,
          "Minimum Amount (LCY)",
          CurrExchRate.ExchangeRate(PostDate,CurrCode));
      END;
      DocFinChargeAmt :=
         CurrAddFee +
        Amount * "Interest Rate" * NoOfDays / 36000;
      IF DocFinChargeAmt > CurrMinAmt THEN
        TotalFinChargesAmt := TotalFinChargesAmt + DocFinChargeAmt
      ELSE
        TotalFinChargesAmt := TotalFinChargesAmt + CurrMinAmt;

      TotalFinChargesAmt := ROUND(TotalFinChargesAmt,Currency."Amount Rounding Precision");
    END;

    PROCEDURE GetTotalFinChargesAmt@1100014() : Decimal;
    BEGIN
      EXIT(TotalFinChargesAmt);
    END;

    BEGIN
    END.
  }
}
