OBJECT Table 7009861 Lin Fra Validacion
{
  OBJECT-PROPERTIES
  {
    Date=28/10/14;
    Time=16:48:42;
    Modified=Yes;
    Version List=AIC2009;
  }
  PROPERTIES
  {
    OnInsert=VAR
               lrLinFra@1103355000 : Record 7009861;
               lrFraHot@1103355001 : Record 7010014;
             BEGIN
               lrLinFra.RESET;
               //lrLinFra.SETRANGE(Hotel           , Hotel);
               //lrLinFra.SETRANGE("N§ Factura"    , "N§ Factura");
               lrLinFra.SETRANGE(No              , No);
               IF lrLinFra.FINDLAST THEN
                 "No Linea" := lrLinFra."No Linea" +1
               ELSE
                 "No Linea" := 1;

               Usuario          := USERID;
               "Fecha Creacion" := TODAY;
               "Hora Creacion"  := TIME;

               // Buscamos el codigo de divisa de la cabecera
               IF lrFraHot.GET(No) THEN
                 "C¢d. divisa" := lrFraHot."C¢d. divisa";

               IF lrFraHot.Contabilizada THEN
                 ERROR(Text000,lrFraHot."Num. Factura");
               IF NOT lrFraHot."Pte. Revision" THEN
                 ERROR(Text001,lrFraHot."Num. Factura");

               // JPT 01/02/08 Gestion Documental PDF
               lrFraHot.RefrescarEstadoCtaProveedor;

               lrFraHot.RellenarContrato;
             END;

    OnModify=VAR
               lrFraHot@1103355000 : Record 7010014;
             BEGIN
               lrFraHot.GET(No);
               IF NOT lrFraHot."Pte. Revision" THEN
                 ERROR(Text001,lrFraHot."Num. Factura");
               IF lrFraHot.Contabilizada THEN
                 ERROR(Text000,lrFraHot."Num. Factura");
               // JPT 01/02/08 Gestion Documental PDF

               lrFraHot.RefrescarEstadoCtaProveedor;

               lrFraHot.RellenarContrato;

               Usuario          := USERID;
               "Fecha Creacion" := TODAY;
               "Hora Creacion"  := TIME;
             END;

    OnDelete=VAR
               lrFraHot@1103355000 : Record 7010014;
             BEGIN
               lrFraHot.GET(No);
               IF NOT lrFraHot."Pte. Revision" THEN
                 ERROR(Text002,lrFraHot."Num. Factura");
               IF lrFraHot.Contabilizada THEN
                 ERROR(Text003,lrFraHot."Num. Factura");
               // JPT 01/02/08 Gestion Documental PDF
               lrFraHot.RefrescarEstadoCtaProveedor;
             END;

    CaptionML=[ENU=Validation Inv Line;
               ESP=Lin Fra Validacion];
    LookupFormID=Form7009959;
    DrillDownFormID=Form7009959;
  }
  FIELDS
  {
    { 1   ;   ;Hotel               ;Code20        ;TableRelation=Hotel.Hotel;
                                                   CaptionML=[ENU=Hotel;
                                                              ESP=Hotel];
                                                   NotBlank=Yes;
                                                   Editable=No }
    { 3   ;   ;N§ Factura          ;Code20        ;CaptionML=[ENU=Invoice No.;
                                                              ESP=N§ Factura];
                                                   NotBlank=Yes;
                                                   Editable=No }
    { 5   ;   ;Fecha factura       ;Date          ;CaptionML=[ENU=Invoice date;
                                                              ESP=Fecha factura];
                                                   NotBlank=Yes;
                                                   Editable=No }
    { 6   ;   ;No Linea            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              ESP=No Linea];
                                                   Description=PK;
                                                   Editable=No }
    { 7   ;   ;Usuario             ;Code20        ;TableRelation=User."User ID";
                                                   CaptionML=[ENU=User;
                                                              ESP=Usuario];
                                                   Editable=No }
    { 8   ;   ;Fecha Entrada       ;Date          ;CaptionML=[ENU=Check-in Date;
                                                              ESP=Fecha entrada];
                                                   Editable=No }
    { 9   ;   ;Fecha Salida        ;Date          ;CaptionML=[ENU=Check-out Date;
                                                              ESP=Fecha salida];
                                                   Editable=No }
    { 10  ;   ;Bono                ;Code10        ;OnValidate=VAR
                                                                lrBono@1103355000 : Record 7010013;
                                                                lrFraHot@1103355001 : Record 7010014;
                                                                lrLinFraVal@1103355002 : Record 7009861;
                                                                lwTotal@1103355003 : Integer;
                                                              BEGIN
                                                                ValidaBono;

                                                                lrFraHot.GET(No);

                                                                CompruebaEstado(lrFraHot.MontaFiltroFecha);
                                                              END;

                                                   CaptionML=[ENU=Voucher;
                                                              ESP=Bono] }
    { 11  ;   ;No                  ;Integer       ;CaptionML=[ENU=No;
                                                              ESP=No];
                                                   Description=PK }
    { 29  ;   ;C¢d. divisa         ;Code10        ;TableRelation=Currency.Code;
                                                   CaptionML=[ENU=Currency exchange;
                                                              ESP=C¢d. divisa] }
    { 30  ;   ;Importe Hotel       ;Decimal       ;OnValidate=VAR
                                                                lrFraHot@1103355000 : Record 7010014;
                                                              BEGIN
                                                                lrFraHot.GET(No);
                                                                CompruebaEstado(lrFraHot.MontaFiltroFecha);
                                                              END;

                                                   CaptionML=[ENU=Hotel Amount;
                                                              ESP=Importe Hotel];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="C¢d. divisa" }
    { 31  ;   ;Estado              ;Option        ;CaptionML=[ENU=Status;
                                                              ESP=Estado];
                                                   OptionCaptionML=[ENU=,Ok,Hotel Minor,Hotel Major,No voucher,Remaining to Authorize;
                                                                    ESP=,Ok,Menor Hotel,Mayor Hotel,No Bono,Pendiente Autorizar];
                                                   OptionString=,Ok,Menor Hotel,Mayor Hotel,No Bono,Pendiente Autorizar;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 32  ;   ;Fecha Creacion      ;Date          ;CaptionML=[ENU=Creation Date;
                                                              ESP=Fecha creacion];
                                                   Editable=No }
    { 33  ;   ;Hora Creacion       ;Time          ;CaptionML=[ENU=Creation Time;
                                                              ESP=Hora creacion];
                                                   Editable=No }
    { 34  ;   ;Importe Calculado   ;Decimal       ;CaptionML=[ENU=Calculated amount;
                                                              ESP=Importe Calculado];
                                                   Editable=No }
    { 35  ;   ;Nombre              ;Text50        ;CaptionML=[ENU=Name;
                                                              ESP=Nombre];
                                                   Editable=No }
    { 36  ;   ;Habitacion          ;Code10        ;CaptionML=[ENU=Room;
                                                              ESP=Habitacion];
                                                   Editable=No }
    { 37  ;   ;Delegacion          ;Code10        ;CaptionML=[ENU=Local Office;
                                                              ESP=Delegacion] }
    { 38  ;   ;TourOperador        ;Code10        ;CaptionML=[ENU=TourOperator;
                                                              ESP=TourOperador];
                                                   Editable=No }
    { 39  ;   ;N§ Reserva          ;Integer       ;CaptionML=[ENU=Reservation No.;
                                                              ESP=N§ Reserva] }
    { 40  ;   ;N§ Secuencia        ;Code10        ;CaptionML=[ENU=Sequence No.;
                                                              ESP=N§ Secuencia] }
    { 41  ;   ;Diferencia          ;Decimal       ;CaptionML=[ENU=Difference;
                                                              ESP=Diferencia] }
    { 42  ;   ;Touroperador Compra ;Code10        ;CaptionML=[ENU=TourOperador Compra;
                                                              ESP=TourOperador Compra] }
    { 44  ;   ;Fuera Periodo       ;Boolean       ;CaptionML=[ENU=Out of Period;
                                                              ESP=Fuera Periodo];
                                                   Editable=No }
    { 45  ;   ;Observaciones       ;Text100       ;OnLookup=BEGIN
                                                              rText.RESET;

                                                              CLEAR(fText);
                                                              fText.SETTABLEVIEW(rText);
                                                              fText.LOOKUPMODE(TRUE);
                                                              IF fText.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                                                fText.GETRECORD(rText);

                                                                Observaciones := rText.Description;
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Comments;
                                                              ESP=Observaciones] }
    { 47  ;   ;Importe validado    ;Decimal       ;CaptionML=[ENU=Validated Amount;
                                                              ESP=Importe validado] }
    { 48  ;   ;Pendiente autorizar ;Boolean       ;CaptionML=[ENU=Remaining to authorize;
                                                              ESP=Pendiente autorizar];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;No,No Linea                             ;SumIndexFields=Importe Hotel,Importe Calculado;
                                                   Clustered=Yes }
    {    ;Hotel,N§ Factura                        ;SumIndexFields=Importe Hotel,Importe Calculado;
                                                   KeyGroups=RENUMERING }
    {    ;Delegacion,TourOperador,Bono,N§ Reserva,N§ Secuencia;
                                                   SumIndexFields=Importe Hotel;
                                                   KeyGroups=RENUMERING }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1103355000 : TextConst 'ENU=Invoice %1 cannot be modified because it is not posted;ESP=No puede modificarse la factura %1 ya que ya est  contabilizada';
      Text001@1103355001 : TextConst 'ENU=Invoice %1 cannot be modified because it is not remaining to be reviewed.;ESP=No puede modificarse la factura %1 ya que no esta pendiente de revisi¢n';
      Text002@1103355002 : TextConst 'ENU=Invoice %1 cannot be deleted because it is not remaining to be reviewed.;ESP=No puede borrarse la factura %1 ya que no esta pendiente de revisi¢n';
      Text003@1103355003 : TextConst 'ENU=Invoice %1 cannot be deleted because it is not posted;ESP=No puede borrarse la factura %1 ya que ya est  contabilizada';
      Text004@1103355004 : TextConst 'ENU=Amount is higher than the calculated one (%1);ESP=El Importe es Mayor al calculado (%1)';
      rText@1103355005 : Record 7;
      fText@1103355006 : Form 8;
      Text005@1103355007 : TextConst 'ENU=Voucher %1 has several numbers of different TO Hotel;ESP=El Bono %1 contiene varios numeros de Hotel TO distintos.';
      Text006@1103355008 : TextConst 'ENU=Voucher %1 has a Hotel TO code different than the invoice one;ESP=El Bono %1 contiene algun codigo Hotel TO distinto al de la factura.';

    PROCEDURE CompruebaEstado@1(pwFiltroFecha@1103355000 : Text[100]);
    VAR
      lwImpCalc@1103355001 : Decimal;
      lwFueraPeriodo@1103355002 : Boolean;
    BEGIN
      // CompruebaEstado

      IF Bono = ''  THEN BEGIN
        Estado := 0;
        EXIT;
      END;

      //IF "Pendiente autorizar" THEN
      //  EXIT;

      IF "Importe Hotel" = 0 THEN
        Estado := 0;

      IF CalculaCosteHotel(lwImpCalc, pwFiltroFecha) THEN BEGIN

        IF "Importe Hotel" <> 0 THEN
          IF lwImpCalc = "Importe Hotel" THEN Estado := Estado::Ok
        ELSE BEGIN
          IF lwImpCalc > "Importe Hotel" THEN
            Estado := Estado::"Menor Hotel"
          ELSE
            Estado := Estado::"Mayor Hotel";
        END;

        {
        IF  Estado = Estado::"Mayor Hotel" THEN
          MESSAGE(Text004,lwImpCalc);
        }
      END ELSE
        Estado := Estado::"No Bono";

      "Importe Calculado" := lwImpCalc;
    END;

    PROCEDURE CalculaCosteHotel@4(VAR pwImporte@1103355000 : Decimal;pwFiltroFecha@1103355001 : Text[100]) : Boolean;
    VAR
      lrBono@1103355002 : Record 7010013;
      lwExiste@1103355003 : Boolean;
      lrFraHot@1103355004 : Record 7010014;
      lwFiltroFecha@1103355005 : Text[100];
    BEGIN
      // CalculaCosteHotel
      // Calcula el importe de Coste a Partir del bono

      CLEAR(pwImporte);
      lrFraHot.RESET;
      lrFraHot.GET(No);

      // lwExiste := lrBono.GET(Delegacion,TourOperador,Bono,"N§ Reserva","N§ Secuencia");

      lrBono.RESET;
      lrBono.SETRANGE(Delegacion       , lrFraHot.Delegacion);
      lrBono.SETRANGE(TourOperador     , TourOperador);
      lrBono.SETRANGE(Bono             , Bono);
      lrBono.SETRANGE("N§ Reserva"     , "N§ Reserva");
      lrBono.SETRANGE("N§ Secuencia"   , "N§ Secuencia");

      // AJS 29.11.2007
      // En el caso de DER/MWR el filtro de fechas se tiene que aplicar sobre fecha de salida en
      // lugar de fecha de entrada

      IF NOT lrFraHot."Filtro estancias de salida"  THEN
        lrBono.SETFILTER("Fecha llegada" , pwFiltroFecha)
      ELSE
        lrBono.SETFILTER("Fecha salida" , pwFiltroFecha);

      lwExiste := lrBono.FINDFIRST;

      IF lwExiste THEN BEGIN
        "Fuera Periodo" := FALSE;

        // AJS 04.11.2008
        // Marcar el estado de la conciliacion del bono a la linea de factura

        "Pendiente autorizar" := NOT lrBono."Validacion Autorizada";

        lrBono.CALCFIELDS("Importe coste","Importe ya validado");
        pwImporte := lrBono."Importe coste" - lrBono."Importe ya validado";
      END

      // AJS 31.03.2004
      // Buscar fuera del periodo de fechas incluyendo un nuevo estado
      ELSE BEGIN

        // AJS 04.11.2008
        // En caso de DER/MWR hay que quitar el filtro de fecha salida en lugar de fecha llegada

        IF NOT lrFraHot."Filtro estancias de salida"  THEN
          lrBono.SETRANGE("Fecha llegada")
        ELSE
          lrBono.SETRANGE("Fecha salida");

        lwExiste := lrBono.FINDFIRST;

        IF lwExiste THEN BEGIN
          lrBono.CALCFIELDS("Importe coste","Importe ya validado");
          pwImporte := lrBono."Importe coste" - lrBono."Importe ya validado";
          "Fuera Periodo" := TRUE;

          // AJS 04.11.2008
          // Marcar el estado de la conciliacion del bono a la linea de factura

          "Pendiente autorizar" := NOT lrBono."Validacion Autorizada";
        END
      END;


      EXIT(lwExiste);
    END;

    PROCEDURE BuscaHab@5(VAR prBono@1103355000 : Record 7010013) : Code[10];
    VAR
      lrReserva@1103355001 : Record 7009771;
    BEGIN
      // BuscaHab
      // Devuelve la Habitaci¢n a partir del bono

      lrReserva.RESET;
      lrReserva.SETRANGE(Delegacion       , prBono.Delegacion);
      lrReserva.SETRANGE("N§ Reserva"     , prBono."N§ Reserva");
      lrReserva.SETRANGE("Hotel reservado", prBono."Hotel Reservado");
      IF lrReserva.FINDLAST THEN
        EXIT(lrReserva.Habitacion);
    END;

    PROCEDURE ValidaBono@3();
    VAR
      lrBono@1103355000 : Record 7010013;
      lrFraHot@1103355001 : Record 7010014;
      lrLinFraVal@1103355002 : Record 7009861;
      lwTotal@1103355003 : Integer;
    BEGIN
      // ValidaBono
      //
      CLEAR(Delegacion);
      CLEAR(TourOperador);
      CLEAR("N§ Reserva");
      CLEAR("N§ Secuencia");
      CLEAR(Nombre);
      CLEAR("Fecha Entrada");
      CLEAR("Fecha Salida");
      CLEAR(Habitacion);
      CLEAR("Touroperador Compra");
      CLEAR("N§ Reserva");
      CLEAR("N§ Secuencia");

      lrFraHot.GET(No);

      // Cuando introducimos un Bono miramos cuantas lineas hay con ese numero de bono e insertamos todas las que correspondan

      lrBono.SETRANGE(Delegacion  , lrFraHot.Delegacion);
      lrBono.SETRANGE(Bono        , Bono);
      lrBono.SETRANGE(Hotel       , lrFraHot.Hotel);

      // lrBono.SETRANGE(Validado    , FALSE);
      //lrBono.SETFILTER("Fecha llegada", lrFraHot.MontaFiltroFecha,lrFraHot."Fecha Desde", lrFraHot."Fecha Hasta");

      // AJS 23.02.2006
      // Filtrar en bonos para separar los de validacion especial

      // AJS 02.09.2009
      // La funcionalidad de Validacion HP especial ya no interesa
      //lrBono.SETRANGE("Validacion HP especial", lrFraHot."Validacion HP especial");

      // AJF 04/11/08
      // Quieren varios Hotel TO por factura.
      // AJF 15/10/08
      // Comprobamos que el Hotel TO sea el mismo que en la factura
      //ComprobarHotelTo(lrFraHot, lrBono);

      CLEAR(lwTotal); // Contamos las lineas que tenemos
      IF lrBono.FINDSET THEN BEGIN
        lrLinFraVal.RESET;
        REPEAT
          lrLinFraVal.SETCURRENTKEY(Delegacion,
                                    TourOperador,
                                    Bono,
                                    "N§ Reserva",
                                    "N§ Secuencia");
          lrLinFraVal.SETRANGE(Delegacion    , lrBono.Delegacion);
          lrLinFraVal.SETRANGE(TourOperador  , lrBono.TourOperador);
          lrLinFraVal.SETRANGE(Bono          , lrBono.Bono);
          lrLinFraVal.SETRANGE(Hotel         , lrBono.Hotel);
          lrLinFraVal.SETRANGE("N§ Reserva"  , lrBono."N§ Reserva");
          lrLinFraVal.SETRANGE("N§ Secuencia", lrBono."N§ Secuencia");
          lrLinFraVal.SETRANGE(Hotel         , Hotel);
          lrLinFraVal.SETRANGE("N§ Factura"  , "N§ Factura");
          lrLinFraVal.SETRANGE(No            , No);
          IF NOT lrLinFraVal.FINDFIRST THEN BEGIN
            lwTotal +=1;
            IF (lwTotal = 1) AND ((lrLinFraVal.Hotel <> Hotel) OR (lrLinFraVal."N§ Factura" <> "N§ Factura") OR
               (lrLinFraVal.No <> No) OR (lrLinFraVal."No Linea" <> "No Linea"))THEN BEGIN
              // Que no sea la misma linea
              // La primera linea que encontramos la asignamos a la actual, las siguientes las insertamos
              Delegacion     := lrBono.Delegacion;
              TourOperador   := lrBono.TourOperador;
              "Touroperador Compra" := lrBono."TourOperador Compra";
              "N§ Reserva"   := lrBono."N§ Reserva";
              "N§ Secuencia" := lrBono."N§ Secuencia";
              Nombre         := lrBono."Nombre Responsable";
              "Fecha Entrada":= lrBono."Fecha llegada";
              "Fecha Salida" := lrBono."Fecha salida";
              Habitacion     := BuscaHab(lrBono);
              //IF NOT lrBono."Validacion Autorizada" THEN
              // AJF 27/10/08
              "Pendiente autorizar" := NOT lrBono."Validacion Autorizada";
              //Estado := Estado::"Pendiente Autorizar";
            END
            // Para las otras creamos  lineas nuevas
            ELSE BEGIN
              lrLinFraVal.RESET;
              lrLinFraVal.INIT;
              lrLinFraVal.Hotel          := lrFraHot.Hotel;
              lrLinFraVal."N§ Factura"   := lrFraHot."Num. Factura";
              lrLinFraVal."Fecha factura":= lrFraHot."Fecha factura";
              lrLinFraVal.No             := No;
              lrLinFraVal.Delegacion     := lrBono.Delegacion;
              lrLinFraVal.TourOperador   := lrBono.TourOperador;
              lrLinFraVal."Touroperador Compra" := lrBono."TourOperador Compra";
              lrLinFraVal."N§ Reserva"   := lrBono."N§ Reserva";
              lrLinFraVal."N§ Secuencia" := lrBono."N§ Secuencia";
              lrLinFraVal.Nombre         := lrBono."Nombre Responsable";
              lrLinFraVal."Fecha Entrada":= lrBono."Fecha llegada";
              lrLinFraVal."Fecha Salida" := lrBono."Fecha salida";
              lrLinFraVal.Bono           := lrBono.Bono;
              lrLinFraVal.Hotel          := lrBono.Hotel;
              lrLinFraVal.Habitacion := BuscaHab(lrBono);
              //IF NOT lrBono."Validacion Autorizada" THEN
              // AJF 27/10/08
              "Pendiente autorizar" := NOT lrBono."Validacion Autorizada";
              //lrLinFraVal.Estado := Estado::"Pendiente Autorizar";
              lrLinFraVal.INSERT(TRUE);
            END;

          END;
        UNTIL lrBono.NEXT=0;
      END;
    END;

    PROCEDURE ComprobarHotelTo@1103355001(VAR prFactura@1103355000 : Record 7010014;VAR prBono@1103355001 : Record 7010013);
    VAR
      lrBonoCI@1103355002 : Record 7010018;
      lwHotelTO@1103355003 : Code[20];
      lwFraSinHTO@1103355004 : Boolean;
    BEGIN
      // ComprobarHotelTo

      lwHotelTO := prFactura."Hotel TO";
      lwFraSinHTO := (lwHotelTO = '');
      IF prBono.FINDSET THEN BEGIN
        REPEAT
          lrBonoCI.RESET;
          lrBonoCI.SETCURRENTKEY(Delegacion, TourOperador, Bono,"N§ Reserva", "N§ Secuencia", "N§ Orden");
          lrBonoCI.SETRANGE(Delegacion    , prBono.Delegacion);
          lrBonoCI.SETRANGE(TourOperador  , prBono.TourOperador);
          lrBonoCI.SETRANGE(Bono          , prBono.Bono);
          lrBonoCI.SETRANGE("N§ Reserva"  , prBono."N§ Reserva");
          lrBonoCI.SETRANGE("N§ Secuencia", prBono."N§ Secuencia");
          IF lrBonoCI.FINDFIRST THEN BEGIN
            IF lwHotelTO = '' THEN BEGIN
              lwHotelTO := lrBonoCI."Hotel TO";
              prFactura."Hotel TO" := lwHotelTO;
              prFactura.MODIFY;
            END
            ELSE
              IF lwHotelTO <> lrBonoCI."Hotel TO" THEN
                 IF lwFraSinHTO THEN
                   ERROR(Text005, prBono.Bono)
                 ELSE
                   ERROR(Text006, prBono.Bono);
          END;
        UNTIL prBono.NEXT = 0;
      END;
    END;

    BEGIN
    {
      ## AJF 29/06/09

        .- (09/00319) cambio c¢digos de hotel de code10 a code20.

      $001 AJS 28102014 Amplio el campo Nombre a Text50
    }
    END.
  }
}
