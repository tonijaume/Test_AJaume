OBJECT Table 7009790 Precios venta transfer
{
  OBJECT-PROPERTIES
  {
    Date=19/03/15;
    Time=15:28:40;
    Modified=Yes;
    Version List=AIC2009,COM;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               rPar.FINDFIRST;
               IF NOT rPar."Empresa Delegacion" THEN
                 ERROR(Text001);

               rPre.RESET;
               rPre.SETRANGE(Delegacion     , Delegacion);
               rPre.SETRANGE("N§ Contrato"  , "N§ Contrato");
               rPre.SETRANGE("Codigo precio", "Codigo precio");
               IF rPre.FINDLAST THEN
                 "Orden precio" := rPre."Orden precio" + 1
               ELSE
                 "Orden precio" := 1;

               IF "Fecha desde" = 0D THEN //+$002
               BEGIN
                 IF rConV.GET(Delegacion, "N§ Contrato") THEN
                 BEGIN
                   "Fecha desde" := rConV."Fecha inicio contrato";
                   "Fecha hasta" := rConV."Fecha final contrato";
                 END;
               END;

               //. Para cubrir el caso de copy/paste de precios
               //-$009IF ("Codigo precio" = "Codigo precio"::"Precio zona") AND
               //-$009   ("Tipo Aplicacion" = "Tipo Aplicacion"::Pax) AND
               //-$009   ("Tipo elemento" = '') THEN
               //-$009BEGIN
               //-$009  rParPer.FINDFIRST;
               //-$009  ExistePrecioTipoPersona(Rec, rParPer."Codigo Adulto");
               //-$009  ExistePrecioTipoPersona(Rec, rParPer."Codigo Ni¤o");
               //-$009END;

               rPre.RESET;
               IF ("Tipo elemento" <> '') AND ("Codigo precio" = "Codigo precio"::"Precio Base") THEN
               BEGIN
                 "Tipo Aplicacion":= "Tipo Aplicacion"::Pax;
                 VALIDATE(Activo, cCon.activar_precio_zona_venta(Rec));
               END;

               _SincronizaComercializadora(0); //+$012
             END;

    OnModify=BEGIN
               rPar.FINDFIRST;
               IF NOT rPar."Empresa Delegacion" THEN
                 ERROR(Text002);
               CASE "Codigo precio" OF
                 "Codigo precio"::"Precio Base": VALIDATE(Activo, cCon.activar_precio_zona_venta(Rec));
                 "Codigo precio"::Suplemento: VALIDATE(Activo, cCon.activar_suplemento_venta(Rec));
               END;

               _SincronizaComercializadora(1); //+$012
             END;

    OnDelete=BEGIN
               rPar.FINDFIRST;
               IF NOT rPar."Empresa Delegacion" THEN
                 ERROR(Text003);

               //-$009_BorrarDependientes; //+$002

               cPar.intro_historico_precios_transf(Delegacion, "N§ Contrato", rHisP.Tipo::Venta, "Codigo precio",
                                                   "Orden precio", Text004, Text005, '');

               _SincronizaComercializadora(2); //+$012
             END;

    OnRename=BEGIN
               rPar.FINDFIRST;
               IF NOT rPar."Empresa Delegacion" THEN
                 ERROR(Text006);
             END;

    CaptionML=[ENU=Transfer sale prices;
               ESP=Precios venta transfer];
  }
  FIELDS
  {
    { 1   ;   ;Delegacion          ;Code10        ;TableRelation=Delegacion.Codigo;
                                                   CaptionML=[ENU=Local Office;
                                                              ESP=Delegacion];
                                                   Description=PK, FK Delegacion;
                                                   Editable=No }
    { 3   ;   ;N§ Contrato         ;Code10        ;TableRelation="Contrato venta transfer"."N§ Contrato Venta";
                                                   CaptionML=[ENU=Contract No.;
                                                              ESP=N§ Contrato];
                                                   Description=PK, FK Contrato venta transfer;
                                                   Editable=No }
    { 5   ;   ;Codigo precio       ;Option        ;CaptionML=[ENU=Price code;
                                                              ESP=Codigo Precio];
                                                   OptionCaptionML=[ENU=Base price,Supplement,Route price;
                                                                    ESP=Precio Base,Suplemento,Precio ruta];
                                                   OptionString=Precio Base,Suplemento,Precio ruta;
                                                   Description=PK;
                                                   Editable=No }
    { 7   ;   ;Orden precio        ;Integer       ;CaptionML=[ENU=Price order;
                                                              ESP=Orden Precio];
                                                   Description=PK;
                                                   Editable=No }
    { 9   ;   ;Fecha desde         ;Date          ;OnValidate=BEGIN
                                                                IF "Fecha desde" <> xRec."Fecha desde" THEN
                                                                BEGIN
                                                                  IF "Fecha hasta" <> 0D THEN
                                                                  BEGIN
                                                                    IF "Fecha desde" > "Fecha hasta" THEN
                                                                      ERROR(Text007);
                                                                  END;
                                                                  IF rConV.GET(Delegacion, "N§ Contrato") THEN
                                                                  BEGIN
                                                                    IF ("Fecha desde" < rConV."Fecha inicio contrato") OR ("Fecha desde" > rConV."Fecha final contrato") THEN
                                                                      ERROR(Text008);
                                                                  END;

                                                                  cPar.intro_historico_precios_transf(Delegacion, "N§ Contrato", rHisP.Tipo::Venta, "Codigo precio", "Orden precio",
                                                                                                      FIELDCAPTION("Fecha desde"),
                                                                                                      FORMAT(xRec."Fecha desde"), FORMAT("Fecha desde"));

                                                                  Activo := FALSE;

                                                                  //-$009modifica_rangos_elementos;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Date From;
                                                              ESP=Fecha desde] }
    { 11  ;   ;Fecha hasta         ;Date          ;OnValidate=BEGIN
                                                                IF "Fecha hasta" <> xRec."Fecha hasta" THEN
                                                                BEGIN
                                                                  IF "Fecha desde" <> 0D THEN
                                                                  BEGIN
                                                                    IF "Fecha desde" > "Fecha hasta" THEN
                                                                      ERROR(Text007);
                                                                  END;
                                                                  IF rConV.GET(Delegacion, "N§ Contrato") THEN
                                                                  BEGIN
                                                                    IF ("Fecha hasta" < rConV."Fecha inicio contrato") OR ("Fecha hasta" > rConV."Fecha final contrato") THEN
                                                                      ERROR(Text009);
                                                                  END;

                                                                  cPar.intro_historico_precios_transf(Delegacion, "N§ Contrato", rHisP.Tipo::Venta, "Codigo precio", "Orden precio",
                                                                                                      FIELDCAPTION("Fecha hasta"),
                                                                                                      FORMAT(xRec."Fecha hasta"), FORMAT("Fecha hasta"));

                                                                  Activo := FALSE;

                                                                  //-$009modifica_rangos_elementos;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Date To;
                                                              ESP=Fecha hasta] }
    { 13  ;   ;Destino             ;Code10        ;TableRelation="Zonas transfer".Zona WHERE (Delegacion=FIELD(Delegacion),
                                                                                              Contrato=FIELD(N§ Contrato),
                                                                                              Tipo contrato=CONST(Venta));
                                                   OnValidate=BEGIN
                                                                IF Destino <> xRec.Destino THEN BEGIN
                                                                  cPar.intro_historico_precios_transf(Delegacion, "N§ Contrato", rHisP.Tipo::Venta, "Codigo precio", "Orden precio",
                                                                                                      FIELDCAPTION(Destino),
                                                                                                      xRec.Destino, Destino);

                                                                  Activo := FALSE;

                                                                  //-$009modifica_rangos_elementos;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Destination;
                                                              ESP=Destino];
                                                   NotBlank=Yes;
                                                   Description="Zonas transfer".Zona WHERE (Delegacion=FIELD(Delegacion),Contrato=FIELD(N§ Contrato),Tipo contrato=CONST(Venta)) }
    { 15  ;   ;Precio              ;Decimal       ;OnValidate=BEGIN
                                                                IF Precio <> xRec.Precio THEN
                                                                BEGIN
                                                                  cPar.intro_historico_precios_transf(Delegacion, "N§ Contrato", rHisP.Tipo::Venta, "Codigo precio", "Orden precio",
                                                                                                      FIELDCAPTION(Precio),
                                                                                                      FORMAT(xRec.Precio), FORMAT(Precio));

                                                                  //-$009IF "Tipo elemento" = '' THEN
                                                                  //-$009BEGIN
                                                                  //-$009  rPre.RESET;
                                                                  //-$009  rPre.SETRANGE (Delegacion         , Delegacion);
                                                                  //-$009  rPre.SETRANGE ("N§ Contrato"      , "N§ Contrato");
                                                                  //-$009  rPre.SETRANGE ("Codigo precio"    , "Codigo precio");
                                                                  //-$009  rPre.SETRANGE ("old_Orden dependiente", "Orden precio");
                                                                  //-$009  rPre.SETFILTER("Tipo elemento"    , '<>%1', '');
                                                                  //-$009  IF rPre.FINDSET(TRUE) THEN
                                                                  //-$009    rPre.MODIFYALL(Precio, Precio);
                                                                  //-$009END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Price;
                                                              ESP=Precio];
                                                   AutoFormatType=2 }
    { 17  ;   ;Tipo Aplicacion     ;Option        ;OnValidate=BEGIN
                                                                IF "Tipo Aplicacion" <> xRec."Tipo Aplicacion" THEN
                                                                BEGIN
                                                                  //+$003 <
                                                                  //-$009rParPer.FINDFIRST;
                                                                  //-$009IF "Codigo precio" = "Codigo precio"::"Precio zona" THEN
                                                                  //-$009BEGIN
                                                                  //-$009  IF "Tipo Aplicacion" = "Tipo Aplicacion"::Pax THEN
                                                                  //-$009  BEGIN
                                                                  //-$009    ExistePrecioTipoPersona(Rec, rParPer."Codigo Adulto");
                                                                  //-$009    ExistePrecioTipoPersona(Rec, rParPer."Codigo Ni¤o");
                                                                  //-$009  END
                                                                  //-$009  ELSE
                                                                  //-$009    _BorrarDependientes;
                                                                  //-$009END;
                                                                  //+$003 >

                                                                  cPar.intro_historico_precios_transf(Delegacion, "N§ Contrato", rHisP.Tipo::Venta, "Codigo precio", "Orden precio",
                                                                                                      FIELDCAPTION("Tipo Aplicacion"),
                                                                                                      FORMAT(xRec."Tipo Aplicacion"), FORMAT("Tipo Aplicacion"));
                                                                  Activo := FALSE;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Application type;
                                                              ESP=Tipo Aplicacion];
                                                   OptionCaptionML=[ENU=,Pax,Vehicle;
                                                                    ESP=,Pax,Vehiculo];
                                                   OptionString=,Pax,Vehiculo }
    { 18  ;   ;Tipo Traslado       ;Option        ;OnValidate=BEGIN
                                                                IF "Tipo Traslado" <> xRec."Tipo Traslado" THEN BEGIN
                                                                  cPar.intro_historico_precios_transf(Delegacion, "N§ Contrato", rHisP.Tipo::Venta, "Codigo precio", "Orden precio",
                                                                                                      FIELDCAPTION("Tipo Traslado"),
                                                                                                      FORMAT(xRec."Tipo Traslado"), FORMAT("Tipo Traslado"));

                                                                  Activo := FALSE;

                                                                  //-$009modifica_rangos_elementos;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Transfer type;
                                                              ESP=Tipo Traslado];
                                                   OptionCaptionML=[ENU=Shared,Private,Deluxe;
                                                                    ESP=Compartido,Privado,Deluxe];
                                                   OptionString=Compartido,Privado,Deluxe }
    { 21  ;   ;Tipo vehiculo       ;Code10        ;TableRelation="Tipo transporte".Codigo;
                                                   OnValidate=BEGIN
                                                                IF "Tipo vehiculo" <> xRec."Tipo vehiculo" THEN BEGIN
                                                                  cPar.intro_historico_precios_transf(Delegacion, "N§ Contrato", rHisP.Tipo::Venta, "Codigo precio", "Orden precio",
                                                                                                      FIELDCAPTION("Tipo vehiculo"),
                                                                                                      xRec."Tipo vehiculo", "Tipo vehiculo");

                                                                  Activo := FALSE;

                                                                  //-$009modifica_rangos_elementos;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Vehicle type;
                                                              ESP=Tipo vehiculo];
                                                   Description=FK Tipo transporte }
    { 23  ;   ;Rango desde         ;Integer       ;OnValidate=BEGIN
                                                                IF "Rango desde" <> xRec."Rango desde" THEN BEGIN
                                                                  IF "Rango hasta" <> 0 THEN BEGIN
                                                                     IF "Rango desde" > "Rango hasta" THEN
                                                                       ERROR(Text010);
                                                                  END;

                                                                  cPar.intro_historico_precios_transf(Delegacion, "N§ Contrato", rHisP.Tipo::Venta, "Codigo precio", "Orden precio",
                                                                                                      FIELDCAPTION("Rango desde"),
                                                                                                      FORMAT(xRec."Rango desde"), FORMAT("Rango desde"));

                                                                  Activo := FALSE;

                                                                  //-$009modifica_rangos_elementos;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Range From;
                                                              ESP=Rango desde] }
    { 25  ;   ;Rango hasta         ;Integer       ;OnValidate=BEGIN
                                                                IF "Rango hasta" <> xRec."Rango hasta" THEN BEGIN
                                                                  IF "Rango desde" <> 0 THEN BEGIN
                                                                     IF "Rango desde" > "Rango hasta" THEN
                                                                       ERROR(Text010);
                                                                  END;

                                                                  cPar.intro_historico_precios_transf(Delegacion, "N§ Contrato", rHisP.Tipo::Venta, "Codigo precio", "Orden precio",
                                                                                                      FIELDCAPTION("Rango hasta"),
                                                                                                      FORMAT(xRec."Rango hasta"), FORMAT("Rango hasta"));

                                                                  Activo := FALSE;

                                                                  //-$009modifica_rangos_elementos;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Range To;
                                                              ESP=Rango hasta] }
    { 27  ;   ;Tipo elemento       ;Code10        ;TableRelation=IF (Codigo precio=CONST(Precio Base)) "Tipo elemento"."Tipo elemento" WHERE (Humano=CONST(Yes))
                                                                 ELSE IF (Codigo precio=CONST(Precio ruta)) "Tipo elemento"."Tipo elemento" WHERE (Humano=CONST(Yes))
                                                                 ELSE IF (Codigo precio=CONST(Suplemento)) "Tipo elemento"."Tipo elemento" WHERE (Humano=CONST(No));
                                                   OnValidate=BEGIN
                                                                IF "Tipo elemento" <> xRec."Tipo elemento" THEN
                                                                BEGIN
                                                                  IF "Tipo elemento" <> '' THEN
                                                                  BEGIN
                                                                    rTipoElem.RESET;
                                                                    rTipoElem.SETRANGE("Tipo elemento", "Tipo elemento");
                                                                    IF "Codigo precio" = "Codigo precio"::Suplemento THEN
                                                                    BEGIN
                                                                      rTipoElem.SETRANGE(Humano, FALSE);
                                                                    END
                                                                    ELSE
                                                                    BEGIN
                                                                      rTipoElem.SETRANGE(Humano, TRUE);
                                                                    END;
                                                                    IF NOT rTipoElem.FINDFIRST THEN
                                                                      ERROR(Text011);
                                                                    rTipoElem.RESET;
                                                                  END;

                                                                  cPar.intro_historico_precios_transf(Delegacion, "N§ Contrato", rHisP.Tipo::Venta, "Codigo precio", "Orden precio",
                                                                                                      FIELDCAPTION("Tipo elemento"),
                                                                                                      xRec."Tipo elemento", "Tipo elemento");

                                                                  Activo := FALSE;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Element Code;
                                                              ESP=Cod. elemento];
                                                   Description=FK Tipo elemento }
    { 29  ;   ;old_Zona 1          ;Code10        ;CaptionML=[ENU=Zone 1;
                                                              ESP=Zona 1] }
    { 31  ;   ;old_Zona 2          ;Code10        ;CaptionML=[ENU=Zone 2;
                                                              ESP=Zona 2] }
    { 33  ;   ;OLD_Transportista   ;Code10        ;TableRelation="Transportista transfer".Codigo;
                                                   CaptionML=[ENU=OLD_Carrier;
                                                              ESP=OLD_Transportista];
                                                   Description=FK Transportista }
    { 35  ;   ;Activo              ;Boolean       ;OnValidate=BEGIN
                                                                IF Activo <> xRec.Activo THEN
                                                                BEGIN
                                                                  //-$009rPre.RESET;
                                                                  //-$009rPre.SETRANGE (Delegacion         , Delegacion);
                                                                  //-$009rPre.SETRANGE ("N§ Contrato"      , "N§ Contrato");
                                                                  //-$009rPre.SETRANGE ("Codigo precio"    , "Codigo precio");
                                                                  //-$009rPre.SETRANGE ("old_Orden dependiente", "Orden precio");
                                                                  //-$009rPre.SETFILTER("Tipo elemento"    , '<>%1', '');
                                                                  //-$009IF rPre.FINDSET(TRUE) THEN
                                                                  //-$009  rPre.MODIFYALL(Activo, Activo);

                                                                  cPar.intro_historico_precios_transf(Delegacion, "N§ Contrato", rHisP.Tipo::Venta, "Codigo precio", "Orden precio",
                                                                                                      FIELDCAPTION(Activo),
                                                                                                      FORMAT(xRec.Activo), FORMAT(Activo));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Active;
                                                              ESP=Activo];
                                                   Editable=No }
    { 37  ;   ;old_Orden dependiente;Integer      ;CaptionML=[ENU=Depending ID;
                                                              ESP=Orden dependiente];
                                                   Description=Enlace entre el precio basico y los precios por adulto/ni¤o }
    { 38  ;   ;Tipo operacion      ;Option        ;OnValidate=BEGIN
                                                                IF "Tipo operacion" <> xRec."Tipo operacion" THEN
                                                                BEGIN
                                                                  cPar.intro_historico_precios_transf(Delegacion, "N§ Contrato", rHisP.Tipo::Venta, "Codigo precio", "Orden precio",
                                                                                                      FIELDCAPTION("Tipo operacion"),
                                                                                                      FORMAT(xRec."Tipo operacion"), FORMAT("Tipo operacion"));

                                                                  Activo := FALSE;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Operation Type;
                                                              ESP=Tipo operacion];
                                                   OptionCaptionML=[ENU=Both,Charter,Regular;
                                                                    ESP=Ambos,Charter,Regular];
                                                   OptionString=Ambos,Charter,Regular }
    { 39  ;   ;Precio Adulto       ;Decimal       ;OnValidate=BEGIN
                                                                IF "Precio Adulto" <> xRec."Precio Adulto" THEN
                                                                BEGIN
                                                                  cPar.intro_historico_precios_transf(Delegacion, "N§ Contrato", rHisP.Tipo::Venta, "Codigo precio", "Orden precio",
                                                                                                      FIELDCAPTION("Precio Adulto"),
                                                                                                      FORMAT(xRec."Precio Adulto"), FORMAT("Precio Adulto"));

                                                                  IF ("Precio Ni¤o" = 0) OR ("Precio Ni¤o" = xRec."Precio Adulto") THEN
                                                                    VALIDATE("Precio Ni¤o", "Precio Adulto");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Adult Price;
                                                              ESP=Precio Adulto];
                                                   AutoFormatType=2 }
    { 41  ;   ;Precio Ni¤o         ;Decimal       ;OnValidate=BEGIN
                                                                IF "Precio Ni¤o" <> xRec."Precio Ni¤o" THEN
                                                                  cPar.intro_historico_precios_transf(Delegacion, "N§ Contrato", rHisP.Tipo::Venta, "Codigo precio", "Orden precio",
                                                                                                      FIELDCAPTION("Precio Ni¤o"),
                                                                                                      FORMAT(xRec."Precio Ni¤o"), FORMAT("Precio Ni¤o"));
                                                              END;

                                                   CaptionML=[ENU=Child Price;
                                                              ESP=Precio Ni¤o];
                                                   AutoFormatType=2 }
    { 43  ;   ;Origen              ;Code10        ;TableRelation="Zonas transfer".Zona WHERE (Delegacion=FIELD(Delegacion),
                                                                                              Contrato=FIELD(N§ Contrato),
                                                                                              Tipo contrato=CONST(Venta));
                                                   OnValidate=BEGIN
                                                                IF Origen <> xRec.Origen THEN
                                                                  cPar.intro_historico_precios_transf(Delegacion, "N§ Contrato", rHisP.Tipo::Venta, "Codigo precio", "Orden precio",
                                                                                                      FIELDCAPTION(Origen),
                                                                                                      FORMAT(xRec.Origen), FORMAT(Origen));
                                                              END;

                                                   CaptionML=[ENU=Origin;
                                                              ESP=Origen];
                                                   NotBlank=Yes;
                                                   Description="Zonas transfer".Zona WHERE (Delegacion=FIELD(Delegacion),Contrato=FIELD(N§ Contrato),Tipo contrato=CONST(Venta)) }
    { 45  ;   ;Release             ;Integer       ;OnValidate=BEGIN
                                                                IF Release <> xRec.Release THEN
                                                                BEGIN
                                                                  cPar.intro_historico_precios_transf(Delegacion, "N§ Contrato", rHisP.Tipo::Venta, "Codigo precio", "Orden precio",
                                                                                                      FIELDCAPTION(Release),
                                                                                                      FORMAT(xRec.Release), FORMAT(Release));

                                                                  Activo := FALSE;
                                                                END;
                                                              END;

                                                   MinValue=0 }
  }
  KEYS
  {
    {    ;Delegacion,N§ Contrato,Codigo precio,Orden precio;
                                                   Clustered=Yes }
    {    ;Delegacion,N§ Contrato,Codigo precio,Destino,Tipo vehiculo,Fecha desde,Fecha hasta;
                                                   KeyGroups=RENUMERING }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1103355009 : TextConst 'ENU=Database parameters folder does not exist;ESP=No existe el fichero de parametros de la B. D.';
      Text001@1103355010 : TextConst 'ENU=To sign up sale prices of transfer is only available in the local offices.;ESP=Solo es posible dar de alta precios de venta de transfer en las Delegaciones.';
      Text002@1103355011 : TextConst 'ENU=To modify sale prices of transfer is only available in the local offices.;ESP=Solo es posible modificar precios de venta de transfer en las Delegaciones.';
      Text003@1103355012 : TextConst 'ENU=To cancel sale prices of transfer is only available in the local offices.;ESP=Solo es posible dar de baja precios de venta de transfer en las Delegaciones.';
      Text004@1103355013 : TextConst 'ENU=Deleted;ESP=Borrado';
      Text005@1103355014 : TextConst 'ENU=Deleted register;ESP=Borrado registro';
      Text006@1103355015 : TextConst 'ENU=To rename sale prices of transfer is only available in the local offices.;ESP=Solo es posible renombrar precios de venta de transfer en las Delegaciones.';
      Text007@1103355016 : TextConst 'ENU=Date from cannot be higher than date to;ESP=La fecha desde no puede ser posterior a la fecha hasta.';
      Text008@1103355017 : TextConst 'ENU=The indicated date from is out of the contract margins;ESP=La fecha desde indicada esta fuera de los margenes del contrato.';
      Text009@1103355018 : TextConst 'ENU=The indicated date to is out of the contract margins;ESP=La fecha hasta indicada esta fuera de los margenes del contrato.';
      Text010@1103355019 : TextConst 'ENU=Range from cannot be higher than range to;ESP=El rango desde no puede ser mayor que el rango hasta.';
      Text011@1103355020 : TextConst 'ENU="Indicated element does not exist or is not suitable for the current type of price ";ESP=El tipo de elemento indicado no existe o no es adecuado para el tipo de precio actual.';
      cCon@1103355000 : Codeunit 7009718;
      cPar@1103355001 : Codeunit 7009700;
      rHisP@1103355003 : Record 7009803;
      rPre@1103355004 : Record 7009790;
      rPar@1103355005 : Record 7009700;
      rParPer@1100217000 : Record 7009701;
      rTipoElem@1103355006 : Record 7009715;
      rConV@1103355007 : Record 7009788;
      Text012@1100217001 : TextConst 'ENU=There are prices created, this function cannot be used.;ESP=Ya existen precios, esta funcion no se utilizar.';
      Text013@1100217002 : TextConst 'ESP=Deben existir zonas en el contrato.';
      Text014@1100217003 : TextConst 'ENU=Indicate the number of passenger ranges of the contract #1;ESP=Introduzca el numero de rangos de pasajeros del contrato #1';

    LOCAL PROCEDURE _SincronizaComercializadora@1000000003(pwOperacion@1000000003 : Integer);
    VAR
      lrContrato@1000000004 : Record 7009788;
      lrTO@1000000005 : Record 7009717;
      lrRecRef@1000000001 : RecordRef;
      lrxRecRef@1000000000 : RecordRef;
      lcSincroCOM@1000000002 : Codeunit 7009793;
    BEGIN
      // _SincronizaComercializadora

      //+$012 <
      lrContrato.GET(Delegacion, "N§ Contrato");
      IF lrContrato.Comercializadora THEN
      BEGIN
        lrTO.GET(lrContrato.TourOperador);

        lrRecRef.GETTABLE(Rec);
        lrxRecRef.GETTABLE(xRec);
        CASE pwOperacion OF
          0: lcSincroCOM.SincronizaTabla(lrRecRef, lrxRecRef, lcSincroCOM.OpInsert, lrTO."Empresa comercializadora");
          1: lcSincroCOM.SincronizaTabla(lrRecRef, lrxRecRef, lcSincroCOM.OpModify, lrTO."Empresa comercializadora");
          2: lcSincroCOM.SincronizaTabla(lrRecRef, lrxRecRef, lcSincroCOM.OpDelete, lrTO."Empresa comercializadora");
        END;
      END;
      //+$012 >
    END;

    BEGIN
    {
      $001 AJS 02042014 Elimino las funciones PrecioDL y CodDivisa porque son obsoletas

      $002 AJS 28042014 Nueva funcion _BorrarDependientes para borrar los precios adulto/ni¤o

      $003 AJS 28042014 Los precios dependientes se crean o borran a partir de Tipo precio

      $004 AJS 29042014 Crear los precios adulto/ni¤o cuando hay copy/paste

      $007 AJS 07052014 Inhabilito que se pueda hacer copy/paste de esta tabla para evitar problemas con los elementos

      $008 AJS 03062014 Corrijo un error en la insercion de precios

      $009 AJS 09062014 CNT-OC-14046

                        - Nuevo campo Tipo operacion

                        - Nuevos campos Precio adulto y Precio ni¤o

                        - Nuevo campo Zona desde

                        - Desaparecen los precios relacionados para Adultos y Ni¤os

      $010 ARM 29092014 CNT-CAR-14063 Nueva opcion deluxe en el campo Tipo Traslado

      $011 AJS 27102014 Error en el option de Tipo Traslado

      $012 AJS 13032015 CNT-CAR-14096, Sincronizacion de contratos de comercializadora

      $013 AJS 19032015 Elimino codigo obsoleto que hacia referencia a las precios por tipo persona en registros diferentes
    }
    END.
  }
}
