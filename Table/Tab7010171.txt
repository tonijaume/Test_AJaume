OBJECT Table 7010171 Suplemento Compra Servicio
{
  OBJECT-PROPERTIES
  {
    Date=13/05/14;
    Time=17:44:26;
    Modified=Yes;
    Version List=AIC2009;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               _CheckCosteTicket; //$003

               IF rSer.GET(Delegacion, "N§ Servicio") THEN
               BEGIN
                 IF rSer.Estado = rSer.Estado::Anulada THEN
                   ERROR(Text000);

                 IF rSer.Estado = rSer.Estado::Confirmada THEN
                   _RecalcularServicio(FALSE); //+$004

                 //-$004  MESSAGE(Text001);
                 //-$004rSer."Pendiente Recalcular" := TRUE;
                 //-$004rSer.MODIFY;
               END;
             END;

    OnModify=BEGIN
               IF rSer.GET(Delegacion, "N§ Servicio") THEN
               BEGIN
                 IF rSer.Estado = rSer.Estado::Anulada THEN
                   ERROR(Text000);
                 IF rSer.Estado = rSer.Estado::Confirmada THEN
                   _RecalcularServicio(FALSE); //+$004

                 //-$004  MESSAGE(Text001);
                 //-$004rSer."Pendiente Recalcular" := TRUE;
                 //-$004rSer.MODIFY;
               END;
             END;

    OnDelete=BEGIN
               IF rSer.GET(Delegacion, "N§ Servicio") THEN BEGIN
                 IF rSer.Estado = rSer.Estado::Anulada THEN
                   ERROR(Text000);
                 IF rSer.Estado = rSer.Estado::Confirmada THEN
                   _RecalcularServicio(TRUE); //+$004

                 //-$004  MESSAGE(Text001);
                 //-$004rSer."Pendiente Recalcular" := TRUE;
                 //-$004rSer.MODIFY;
               END;
             END;

    CaptionML=[ENU=Service purchase supplement;
               ESP=Suplemento Compra Servicio];
  }
  FIELDS
  {
    { 1   ;   ;Delegacion          ;Code10        ;TableRelation=Delegacion.Codigo;
                                                   CaptionML=[ENU=Local Office;
                                                              ESP=Delegacion];
                                                   Description=PK, FK Delegacion;
                                                   Editable=No }
    { 3   ;   ;N§ Servicio         ;Integer       ;TableRelation="Servicio Excursion"."N§ Servicio";
                                                   CaptionML=[ENU=Service No.;
                                                              ESP=N§ Servicio];
                                                   Description=PK, FK Servicio Excursion }
    { 4   ;   ;Codigo Suplemento   ;Code10        ;TableRelation="Suplemento Compra"."Codigo Suplemento";
                                                   OnLookup=VAR
                                                              lrPrecioExc@1100217001 : Record 7010151;
                                                              lrPrecioTra@1100217002 : Record 7010150;
                                                              lrSupl@1100217000 : Record 7010144;
                                                            BEGIN
                                                              //+$001

                                                              //. Limpiamos las marcas sobre la variable de codigos de suplemento
                                                              lrSupl.CLEARMARKS;

                                                              //. Buscamos el servicio para obtener la fecha de aplicacion
                                                              rSer.GET(Delegacion, "N§ Servicio");

                                                              CASE "Tipo contrato" OF
                                                                "Tipo contrato"::Excursion:
                                                                BEGIN
                                                                  //. Recorremos los precios de suplementos para marcar los codigos
                                                                  lrPrecioExc.RESET;
                                                                  lrPrecioExc.SETRANGE (Delegacion     , Delegacion);
                                                                  lrPrecioExc.SETRANGE ("N§ Contrato"  , "Contrato Compra");
                                                                  lrPrecioExc.SETRANGE ("Tipo precio", lrPrecioExc."Tipo precio"::Suplemento);
                                                                  lrPrecioExc.SETFILTER("Fecha desde"  , '<=%1', rSer.Fecha);
                                                                  lrPrecioExc.SETFILTER("Fecha hasta"  , '>=%1', rSer.Fecha);
                                                                  IF lrPrecioExc.FINDSET THEN
                                                                  BEGIN
                                                                    REPEAT
                                                                      IF lrSupl.GET(lrPrecioExc."Codigo Suplemento") THEN
                                                                        lrSupl.MARK(TRUE);
                                                                    UNTIL lrPrecioExc.NEXT = 0;
                                                                  END;
                                                                END;

                                                                "Tipo contrato"::Transportista:
                                                                BEGIN
                                                                  //. Recorremos los precios de suplementos para marcar los codigos
                                                                  lrPrecioTra.RESET;
                                                                  lrPrecioTra.SETRANGE (Delegacion   , Delegacion);
                                                                  lrPrecioTra.SETRANGE ("N§ Contrato", "Contrato Compra");
                                                                  lrPrecioTra.SETRANGE ("Tipo precio", lrPrecioTra."Tipo precio"::Suplemento);
                                                                  lrPrecioTra.SETFILTER("Fecha desde", '<=%1', rSer.Fecha);
                                                                  lrPrecioTra.SETFILTER("Fecha hasta", '>=%1', rSer.Fecha);
                                                                  IF lrPrecioTra.FINDSET THEN
                                                                  BEGIN
                                                                    REPEAT
                                                                      IF lrSupl.GET(lrPrecioTra."Codigo suplemento") THEN
                                                                        lrSupl.MARK(TRUE);
                                                                    UNTIL lrPrecioTra.NEXT = 0;
                                                                  END;
                                                                END;
                                                              END;

                                                              lrSupl.MARKEDONLY(TRUE);
                                                              IF FORM.RUNMODAL(0, lrSupl) = ACTION::LookupOK THEN
                                                                "Codigo Suplemento" := lrSupl."Codigo Suplemento";
                                                            END;

                                                   CaptionML=[ENU=Supplement code;
                                                              ESP=Codigo Suplemento];
                                                   NotBlank=Yes;
                                                   Description=PK, FK Suplemento Excursion }
    { 5   ;   ;N§ Personas         ;Integer       ;CaptionML=[ENU=People No.;
                                                              ESP=N§ Personas] }
    { 7   ;   ;Contrato Compra     ;Code10        ;OnValidate=BEGIN
                                                                CLEAR(rCont);
                                                                rCont.SETRANGE(Delegacion          , Delegacion);
                                                                rCont.SETRANGE("N§ Contrato compra", "Contrato Compra");
                                                                rCont.SETFILTER("Tipo Contrato", '%1|%2', "Tipo contrato"::Excursion, "Tipo contrato"::Transportista);
                                                                IF rCont.FINDFIRST THEN
                                                                  "Tipo contrato"   := rCont."Tipo Contrato"
                                                                ELSE
                                                                  ERROR(Text002, rCont."N§ Contrato compra");
                                                              END;

                                                   OnLookup=VAR
                                                              lrSer@1100217000 : Record 7010163;
                                                            BEGIN
                                                              lrSer.GET(Delegacion, "N§ Servicio");

                                                              CLEAR(rCont);
                                                              rCont.SETFILTER("Tipo Contrato"        , '%1|%2', "Tipo contrato"::Excursion, "Tipo contrato"::Transportista);
                                                              rCont.SETFILTER("Fecha inicio contrato", '<=%1', lrSer.Fecha);
                                                              rCont.SETFILTER("Fecha final contrato" , '>=%1', lrSer.Fecha);
                                                              IF FORM.RUNMODAL(7010163, rCont) = ACTION::LookupOK THEN BEGIN
                                                                "Contrato Compra" := rCont."N§ Contrato compra";
                                                                "Tipo contrato"   := rCont."Tipo Contrato";
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Purchate contract;
                                                              ESP=Contrato compra];
                                                   NotBlank=Yes;
                                                   Description=FK Contrato Compra Excursion }
    { 9   ;   ;N§ Adultos          ;Integer       ;CaptionML=[ENU=Adults No.;
                                                              ESP=N§ Adultos] }
    { 11  ;   ;N§ Ni¤os            ;Integer       ;CaptionML=[ENU=Children No.;
                                                              ESP=N§ Ni¤os] }
    { 13  ;   ;Tipo contrato       ;Option        ;CaptionML=[ENU=Contract type;
                                                              ESP=Tipo contrato];
                                                   OptionCaptionML=[ENU=Excursion,Carrier,Sale Guide,Offical Guide,TourOperator;
                                                                    ESP=Excursion,Transportista,Guia Venta,Guia Oficial,TourOperador];
                                                   OptionString=Excursion,Transportista,Guia Venta,Guia Oficial,TourOperador;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Delegacion,N§ Servicio,Codigo Suplemento;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1103355002 : TextConst 'ENU=Supplements of the cancelled excursions cannot be modified;ESP=No se pueden modificar suplementos de excursiones anuladas.';
      Text001@1103355003 : TextConst 'ENU=You just modify supplements of a confirmed excursion, remember you must calculate the service again;ESP=Acaba de modificar suplementos de una excursion confirmada, recuerde que tiene que recalcular el servicio.';
      Text002@1103355004 : TextConst 'ENU=Contract %1 of excursion or carrier type does not exist;ESP=No existe el contrato %1 de tipo excursion o transportista.';
      rCont@1103355000 : Record 7010142;
      rSer@1103355001 : Record 7010163;
      Text003@1100217000 : TextConst 'ENU=Supplements cannot be made by service if the calculation is per ticket.;ESP=No se pueden introducir suplementos por servicio si el calculo es por ticket.';
      cFunExc@1100217001 : Codeunit 7010141;

    LOCAL PROCEDURE _CheckCosteTicket@1100217007();
    VAR
      lrSer@1100217000 : Record 7010163;
      lrExc@1100217001 : Record 7009710;
    BEGIN
      lrSer.GET(Delegacion, "N§ Servicio");

      lrExc.GET(lrSer.Excursion);

      IF lrExc."Coste x ticket" THEN
        ERROR(Text003);
    END;

    LOCAL PROCEDURE _RecalcularServicio@1100217001(pwBorrado@1100217000 : Boolean);
    BEGIN
      IF NOT pwBorrado THEN
      BEGIN
        IF ("Codigo Suplemento" = '') OR
           ("Contrato Compra" = '') OR
           (("N§ Adultos" = 0) AND ("N§ Ni¤os" = 0)) THEN
          EXIT;
      END;
      cFunExc.Recalculo_Costes(rSer, TRUE); //+$005
    END;

    BEGIN
    {
      $001 AJS 12092012 Mostrar solo los codigos de suplemento que tienen precio en el contrato

      $002 AJS 13022013 Hacer que los campos Contrato Compra y Codigo suplemento no se puedan dejar en blanco

      $003 AJS 17062013 Nueva funcion _CheckCosteTicket para controlar que no se puedan meter costes por servicio
                        en las excursiones que se calculan por ticket

      $004 AJS 17062013 Si se introduce sobre un servicio confirmado hay que recalcular

      $005 AJS 13052014 Nuevo parametro en funcion de calcular servicios
    }
    END.
  }
}
