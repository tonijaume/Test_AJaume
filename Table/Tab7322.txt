OBJECT Table 7322 Posted Whse. Shipment Header
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=NAVW16.00.01;
  }
  PROPERTIES
  {
    Permissions=TableData 7323=rd;
    OnInsert=BEGIN
               WhseSetup.GET;
               IF "No." = '' THEN BEGIN
                 WhseSetup.TESTFIELD("Posted Whse. Shipment Nos.");
                 NoSeriesMgt.InitSeries(
                   WhseSetup."Posted Whse. Shipment Nos.",xRec."No. Series","Posting Date","No.","No. Series");
               END;
             END;

    OnDelete=VAR
               PostedWhseShptLine@1001 : Record 7323;
               WhseCommentLine@1000 : Record 5770;
             BEGIN
               PostedWhseShptLine.SETRANGE("No.","No.");
               PostedWhseShptLine.DELETEALL;

               WhseCommentLine.SETRANGE("Table Name",WhseCommentLine."Table Name"::"Posted Whse. Shipment");
               WhseCommentLine.SETRANGE(Type,WhseCommentLine.Type::" ");
               WhseCommentLine.SETRANGE("No.","No.");
               WhseCommentLine.DELETEALL;
             END;

    CaptionML=[ENU=Posted Whse. Shipment Header;
               ESP=Cabecera env¡o alm. regis.];
    LookupFormID=Form7340;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;CaptionML=[ENU=No.;
                                                              ESP=N§] }
    { 2   ;   ;Location Code       ;Code10        ;TableRelation=Location WHERE (Use As In-Transit=CONST(No));
                                                   CaptionML=[ENU=Location Code;
                                                              ESP=C¢d. almac‚n] }
    { 3   ;   ;Assigned User ID    ;Code20        ;TableRelation="Warehouse Employee" WHERE (Location Code=FIELD(Location Code));
                                                   CaptionML=[ENU=Assigned User ID;
                                                              ESP=Id. usuario asignado] }
    { 4   ;   ;Assignment Date     ;Date          ;CaptionML=[ENU=Assignment Date;
                                                              ESP=Fecha asignaci¢n];
                                                   Editable=No }
    { 5   ;   ;Assignment Time     ;Time          ;CaptionML=[ENU=Assignment Time;
                                                              ESP=Hora asignaci¢n];
                                                   Editable=No }
    { 7   ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              ESP=Nos. serie] }
    { 11  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Warehouse Comment Line" WHERE (Table Name=CONST(Posted Whse. Shipment),
                                                                                                     Type=CONST(" "),
                                                                                                     No.=FIELD(No.)));
                                                   CaptionML=[ENU=Comment;
                                                              ESP=Comentario];
                                                   Editable=No }
    { 12  ;   ;Bin Code            ;Code20        ;TableRelation=IF (Zone Code=FILTER('')) Bin.Code WHERE (Location Code=FIELD(Location Code))
                                                                 ELSE IF (Zone Code=FILTER(<>'')) Bin.Code WHERE (Location Code=FIELD(Location Code),
                                                                                                                  Zone Code=FIELD(Zone Code));
                                                   CaptionML=[ENU=Bin Code;
                                                              ESP=C¢d. ubicaci¢n] }
    { 13  ;   ;Zone Code           ;Code10        ;TableRelation=Zone.Code WHERE (Location Code=FIELD(Location Code));
                                                   CaptionML=[ENU=Zone Code;
                                                              ESP=C¢d. zona] }
    { 39  ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              ESP=Fecha registro] }
    { 40  ;   ;Shipment Date       ;Date          ;CaptionML=[ENU=Shipment Date;
                                                              ESP=Fecha env¡o] }
    { 41  ;   ;Shipping Agent Code ;Code10        ;TableRelation="Shipping Agent";
                                                   CaptionML=[ENU=Shipping Agent Code;
                                                              ESP=C¢d. transportista] }
    { 42  ;   ;Shipping Agent Service Code;Code10 ;TableRelation="Shipping Agent Services".Code WHERE (Shipping Agent Code=FIELD(Shipping Agent Code));
                                                   CaptionML=[ENU=Shipping Agent Service Code;
                                                              ESP=C¢d. servicio transportista] }
    { 43  ;   ;Shipment Method Code;Code10        ;TableRelation="Shipment Method";
                                                   CaptionML=[ENU=Shipment Method Code;
                                                              ESP=C¢d. condiciones env¡o] }
    { 45  ;   ;Whse. Shipment No.  ;Code20        ;CaptionML=[ENU=Whse. Shipment No.;
                                                              ESP=N§ env¡o almac‚n] }
    { 48  ;   ;External Document No.;Code20       ;CaptionML=[ENU=External Document No.;
                                                              ESP=N§ documento externo] }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Location Code                            }
    {    ;Whse. Shipment No.                       }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;No.,Location Code,Posting Date           }
  }
  CODE
  {
    VAR
      WhseSetup@1000 : Record 5769;
      NoSeriesMgt@1001 : Codeunit 396;
      Text000@1002 : TextConst 'ENU=You must first set up user %1 as a warehouse employee.;ESP=Primero debe configurar usuario %1 como empleado almac‚n.';

    PROCEDURE LookupPostedWhseShptHeader@3(VAR PostedWhseShptHeader@1001 : Record 7322) : Boolean;
    BEGIN
      COMMIT;
      IF USERID <> '' THEN BEGIN
        PostedWhseShptHeader.FILTERGROUP := 2;
        PostedWhseShptHeader.SETRANGE("Location Code");
      END;
      IF FORM.RUNMODAL(0,PostedWhseShptHeader) = ACTION::LookupOK THEN;
      IF USERID <> '' THEN BEGIN
        PostedWhseShptHeader.FILTERGROUP := 2;
        PostedWhseShptHeader.SETRANGE("Location Code",PostedWhseShptHeader."Location Code");
        PostedWhseShptHeader.FILTERGROUP := 0;
      END;
    END;

    PROCEDURE FindFirstAllowedRec@1(Which@1000 : Text[1024]) : Boolean;
    VAR
      PostedWhseShptHeader@1001 : Record 7322;
      WMSManagement@1002 : Codeunit 7302;
    BEGIN
      IF FIND(Which) THEN BEGIN
        PostedWhseShptHeader := Rec;
        WHILE TRUE DO BEGIN
          IF WMSManagement.LocationIsAllowedToView("Location Code") THEN
            EXIT(TRUE);

          IF NEXT(1) = 0 THEN BEGIN
            Rec := PostedWhseShptHeader;
            IF FIND(Which) THEN
              WHILE TRUE DO BEGIN
                IF WMSManagement.LocationIsAllowedToView("Location Code") THEN
                  EXIT(TRUE);

                IF NEXT(-1) = 0 THEN
                  EXIT(FALSE);
              END;
          END;
        END;
      END;
      EXIT(FALSE);
    END;

    PROCEDURE FindNextAllowedRec@2(Steps@1000 : Integer) : Integer;
    VAR
      PostedWhseShptHeader@1002 : Record 7322;
      WMSManagement@1001 : Codeunit 7302;
      RealSteps@1003 : Integer;
      NextSteps@1004 : Integer;
    BEGIN
      RealSteps := 0;
      IF Steps <> 0 THEN BEGIN
        PostedWhseShptHeader := Rec;
        REPEAT
          NextSteps := NEXT(Steps / ABS(Steps));
          IF WMSManagement.LocationIsAllowedToView("Location Code") THEN BEGIN
            RealSteps := RealSteps + NextSteps;
            PostedWhseShptHeader := Rec;
          END;
        UNTIL (NextSteps = 0) OR (RealSteps = Steps);
        Rec := PostedWhseShptHeader;
        IF NOT FIND THEN;
      END;
      EXIT(RealSteps);
    END;

    PROCEDURE ErrorIfUserIsNotWhseEmployee@4();
    VAR
      WhseEmployee@1000 : Record 7301;
    BEGIN
      IF USERID <> '' THEN BEGIN
        WhseEmployee.SETRANGE("User ID",USERID);
        IF NOT WhseEmployee.FIND('-') THEN
          ERROR(Text000,USERID);
      END;
    END;

    BEGIN
    END.
  }
}
