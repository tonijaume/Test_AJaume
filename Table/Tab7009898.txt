OBJECT Table 7009898 Tarifa concepto hotel
{
  OBJECT-PROPERTIES
  {
    Date=22/07/14;
    Time=14:03:05;
    Modified=Yes;
    Version List=AIC2009,CNT;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               "ID Tarifa"        := NextID;
               "Fecha Creacion"   := CURRENTDATETIME;
               "Usuario Creacion" := USERID;

               rPar.FINDFIRST;
               Delegacion := rPar.Delegacion;

               _CheckDuplicado;

               //+$004
               //-$005rSalesSetup.FINDFIRST;
               //-$005"Serie Facturas" := rSalesSetup."Posted Invoice Nos.";
               //-$005"Serie Abonos"   := rSalesSetup."Posted Credit Memo Nos.";

               IntroHist(Text004,'','');
             END;

    OnModify=BEGIN

               // Comprobamos que los campos est‚n rellenados
               IF Touroperador=''                  THEN ERROR(Text002, FIELDCAPTION(Touroperador));
               IF "Fecha Inicial"=0D               THEN ERROR(Text002, FIELDCAPTION("Fecha Inicial"));
               IF "Fecha Final"=0D                 THEN ERROR(Text002, FIELDCAPTION("Fecha Final"));
               IF "Grupo Registro IVA Producto"='' THEN ERROR(Text002, FIELDCAPTION("Grupo Registro IVA Producto"));
               //-$005IF "Serie Facturas"=''              THEN ERROR(Text002, FIELDCAPTION("Serie Facturas"));
               //-$005IF "Serie Abonos"=''                THEN ERROR(Text002, FIELDCAPTION("Serie Abonos"));

               _CheckDuplicado;

               ModIntroHist;
             END;

    OnDelete=BEGIN
               //. Eliminamos el detalle de la tarifa
               rPre.RESET;
               rPre.SETRANGE("ID Tarifa", "ID Tarifa");
               IF rPre.FINDSET THEN
                 rPre.DELETEALL(TRUE);

               //. Historico
               IntroHist(Text005,'','');
             END;

    CaptionML=[ENU=Hotel concept rate;
               ESP=Tarifa concepto hotel];
    LookupFormID=Form7009788;
  }
  FIELDS
  {
    { 1   ;   ;ID Tarifa           ;Code10        ;CaptionML=[ENU=Rate ID;
                                                              ESP=ID Tarifa];
                                                   Editable=No }
    { 3   ;   ;Concepto            ;Code10        ;TableRelation="Concepto C/I".Concepto WHERE (Modulo=CONST(Hotel),
                                                                                                Coste/Ingreso=CONST(Ingreso));
                                                   OnValidate=BEGIN
                                                                IF xRec.Concepto <> Concepto THEN
                                                                BEGIN
                                                                  IF (xRec.Concepto <> '') AND ("Fecha Inicial" <> 0D) THEN
                                                                    ERROR(Text006);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Concept;
                                                              ESP=Concepto];
                                                   Description="Concepto C/I".Concepto WHERE (Modulo=CONST(Hotel),Coste/Ingreso=CONST(Ingreso)) }
    { 5   ;   ;Delegacion          ;Code10        ;TableRelation=Delegacion.Codigo;
                                                   CaptionML=[ENU=Delegation;
                                                              ESP=Delegacion];
                                                   NotBlank=Yes;
                                                   Description=Delegacion.Delegacion;
                                                   Editable=No }
    { 10  ;   ;Touroperador        ;Code10        ;TableRelation=TourOperador.TourOperador;
                                                   OnValidate=BEGIN
                                                                //$006-
                                                                rTTOO.RESET;
                                                                rTTOO.GET(Touroperador);
                                                                rTTOO.TESTFIELD(Bloqueado, FALSE);
                                                                //$006+

                                                                IF xRec.Touroperador <> Touroperador THEN
                                                                BEGIN
                                                                  IF (xRec.Touroperador <> '') AND ("Fecha Inicial" <> 0D) THEN
                                                                    ERROR(Text006);
                                                                END;

                                                                _BuscarCliente; //+$001
                                                              END;

                                                   CaptionML=[ENU=Touroperator;
                                                              ESP=Touroperador];
                                                   NotBlank=Yes;
                                                   Description=TourOperador.TourOperador }
    { 20  ;   ;Cliente             ;Code20        ;TableRelation=Customer.No.;
                                                   OnValidate=VAR
                                                                lrCli@1100253000 : Record 18;
                                                              BEGIN
                                                                IF xRec.Cliente <> Cliente THEN
                                                                BEGIN
                                                                  IF (xRec.Cliente <> '') AND ("Fecha Inicial" <> 0D) THEN
                                                                    ERROR(Text006);
                                                                END;

                                                                CLEAR(lrCli);
                                                                IF lrCli.GET(Cliente) THEN
                                                                  VALIDATE("Cod. Divisa", lrCli."Currency Code");
                                                              END;

                                                   CaptionML=[ENU=Customer;
                                                              ESP=Cliente];
                                                   NotBlank=Yes;
                                                   Description=Customer.No. }
    { 30  ;   ;Fecha Inicial       ;Date          ;OnValidate=BEGIN
                                                                _CheckFechas;
                                                              END;

                                                   CaptionML=[ENU=Fron Date;
                                                              ESP=Fecha Inicial];
                                                   NotBlank=Yes }
    { 40  ;   ;Fecha Final         ;Date          ;OnValidate=BEGIN
                                                                _CheckFechas;
                                                              END;

                                                   CaptionML=[ENU=To Date;
                                                              ESP=Fecha Final];
                                                   NotBlank=Yes }
    { 50  ;   ;Maximo edad ni¤os   ;Integer       ;CaptionML=[ENU=Childs maximum age;
                                                              ESP=Maximo edad ni¤os] }
    { 80  ;   ;Cod. Divisa         ;Code10        ;TableRelation=Currency.Code;
                                                   CaptionML=[ENU=Currency Code;
                                                              ESP=Cod. Divisa];
                                                   Description=Currency.Code;
                                                   Editable=No }
    { 90  ;   ;Grupo Registro IVA Producto;Code10 ;TableRelation="VAT Product Posting Group".Code;
                                                   CaptionML=[ENU=VAT Product Posting Group;
                                                              ESP=Grupo Registro IVA Producto];
                                                   NotBlank=Yes;
                                                   Description="VAT Product Posting Group".Code }
    { 100 ;   ;o_Serie Facturas    ;Code10        ;TableRelation="No. Series".Code;
                                                   CaptionML=[ENU=Invoices No. Series;
                                                              ESP=Serie Facturas];
                                                   NotBlank=Yes;
                                                   Description="No. Series".Code }
    { 110 ;   ;o_Serie Abonos      ;Code10        ;TableRelation="No. Series".Code;
                                                   CaptionML=[ENU=Cr. Memo No. Series;
                                                              ESP=Serie Abonos];
                                                   NotBlank=Yes;
                                                   Description="No. Series".Code }
    { 120 ;   ;Precios IVA incluido;Boolean       ;CaptionML=[ENU=Prices Including VAT;
                                                              ESP=Precios IVA incluido] }
    { 130 ;   ;Fecha Creacion      ;DateTime      ;CaptionML=[ENU=Creation Date;
                                                              ESP=Fecha Creaci¢n];
                                                   Editable=No }
    { 140 ;   ;Usuario Creacion    ;Code20        ;TableRelation=User."User ID";
                                                   CaptionML=[ENU=Creation User;
                                                              ESP=Usuario Creaci¢n];
                                                   Description=User."User ID";
                                                   Editable=No }
  }
  KEYS
  {
    {    ;ID Tarifa                               ;Clustered=Yes }
    {    ;Touroperador,Fecha Inicial,Fecha Final   }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1100253000 : TextConst 'ENU=%1 can not be later than%2;ESP=%1 No puede ser posterior a %2';
      Text002@1100253001 : TextConst 'ENU=The Field %1 Must be completed;ESP=El campo %1 debe de estar rellenado';
      Text003@1100253002 : TextConst 'ENU=There is already a record (%1) for the Touroperator %2 that overlaps in time.;ESP=Ya existe un registro (%1) para el TTOO %2 que se solapa en el tiempo.';
      Text004@1100253003 : TextConst 'ENU=New;ESP=Nuevo';
      Text005@1100253004 : TextConst 'ENU=Deleted;ESP=Borrado';
      rPar@1100253005 : Record 7009700;
      rPre@1100253006 : Record 7010091;
      Text006@1100253007 : TextConst 'ENU=You can modify the fields that identify the rate. Delete it and create a new;ESP=No se pueden modificar los campos identificativos de la tarifa. Eliminela y cree una nueva';
      Text031@1100217000 : TextConst 'ENU=You must configure the accounts of the touroperator %1.;ESP=Debe configurar las cuentas del touroperador %1.';
      rTTOO@1000000000 : Record 7009717;

    LOCAL PROCEDURE _CheckFechas@1100253001();
    BEGIN
      // _CheckFechas

      IF ("Fecha Inicial" > "Fecha Final")  AND ("Fecha Final" <> 0D) THEN
        ERROR(Text001, FIELDCAPTION("Fecha Inicial"), FIELDCAPTION("Fecha Final"));
    END;

    LOCAL PROCEDURE _CheckDuplicado@1100253000();
    VAR
      lrTar@1100253000 : Record 7009898;
    BEGIN
      // _CheckDuplicado
      // Comprueba que no existan dos tarifas para e mismo TTOO y fechas

      CLEAR(lrTar);
      lrTar.SETCURRENTKEY(Touroperador, "Fecha Inicial", "Fecha Final");
      lrTar.SETRANGE(Concepto        , Concepto);
      lrTar.SETRANGE(Touroperador    , Touroperador);
      lrTar.SETFILTER("Fecha Inicial", '<=%1', "Fecha Final");
      lrTar.SETFILTER("Fecha Final"  , '>=%1', "Fecha Inicial");
      lrTar.SETFILTER("ID Tarifa"    , '<>%1',  "ID Tarifa");
      IF lrTar.FINDFIRST THEN
        ERROR(Text003, lrTar."ID Tarifa", lrTar.Touroperador);
    END;

    PROCEDURE NextID@1100253005() : Code[10];
    VAR
      lrTar@1100253000 : Record 7009898;
      lwID@1100253001 : Code[10];
    BEGIN
      // NextID

      CLEAR(lwID);
      CLEAR(lrTar);
      IF lrTar.FINDLAST THEN
        lwID := INCSTR(lrTar."ID Tarifa")
      ELSE
        lwID := '00001';

      EXIT(lwID);
    END;

    PROCEDURE IntroHist@1100253002(pwCampo@1100253000 : Text[30];pwValorAnterior@1100253001 : Text[30];pwNuevoValor@1100253002 : Text[30]);
    VAR
      cPar@1100253003 : Codeunit 7009700;
    BEGIN
      // IntroHist

      TESTFIELD("ID Tarifa");
      TESTFIELD(Delegacion);
      cPar.intro_historico_contrato(Delegacion, "ID Tarifa", 12, pwCampo, pwValorAnterior, pwNuevoValor);
    END;

    PROCEDURE ModIntroHist@1100253006();
    VAR
      lwRec@1100253000 : RecordRef;
      lwXRec@1100253001 : RecordRef;
      lwField@1100253002 : FieldRef;
      lwXField@1100253003 : FieldRef;
      lwCnt@1100253004 : Integer;
    BEGIN
      // ModIntroHist

      lwRec.GETTABLE(Rec);
      lwXRec.GETTABLE(xRec);

      FOR lwCnt := 1 TO lwRec.FIELDCOUNT DO BEGIN
        lwField  := lwRec.FIELDINDEX(lwCnt);
        lwXField := lwXRec.FIELDINDEX(lwCnt);
        IF lwXField.VALUE <> lwField.VALUE THEN
          IntroHist(lwField.CAPTION, FORMAT(lwXField.VALUE), FORMAT(lwField.VALUE));
      END;
    END;

    PROCEDURE ShowLog@1100253003();
    VAR
      lrHist@1100253000 : Record 7009764;
    BEGIN
      // ShowLog

      CLEAR(lrHist);
      lrHist.FILTERGROUP(2);
      lrHist.SETRANGE(Delegacion       , Delegacion );
      lrHist.SETRANGE("N§ Contrato"    , "ID Tarifa");
      lrHist.SETRANGE(Tipo             , lrHist.Tipo::"Concepto hotel");
      lrHist.FILTERGROUP(0);
      FORM.RUN(0, lrHist);
    END;

    LOCAL PROCEDURE _BuscarCliente@1100217000();
    VAR
      lrCtaTO@1100217000 : Record 7009705;
    BEGIN
      // _BuscarCliente

      IF Delegacion = '' THEN
      BEGIN
        rPar.FINDFIRST;
        Delegacion := rPar.Delegacion;
      END;

      lrCtaTO.RESET;
      IF NOT lrCtaTO.GET(Delegacion, Touroperador) THEN
      BEGIN
        IF NOT lrCtaTO.GET('', Touroperador) THEN
        BEGIN
          IF NOT lrCtaTO.GET(Delegacion, '') THEN
            ERROR(Text031);
        END;
      END;

      IF lrCtaTO."Cliente Hotel" <> '' THEN
        VALIDATE(Cliente, lrCtaTO."Cliente Hotel");
    END;

    BEGIN
    {
      JPT 23/04/12 CNT-CAR-12004 HOT-18

      $001 AJS 29082012 Obtener el cliente de la tabla de Cuentas TO-Delegacion

      $002 AJS 12092012 En la funcion _BuscarCliente si la delegacion esta en blanco la buscamos
                        de parametros agencia.

      $003 AJS 20092012 Amplio el filtro en el TableRelation de concepto para ver solo los de ingreso

      $004 AJS 02042014 Al crear la tarifa relleno las series con las definidas en gestion financiera

      $005 AJS 23062014 Los campos de serie de facturacion son obsoletos

      $006 MNC 22072014 CNT-LP-14054 No se pueden usar TTOO bloqueados
    }
    END.
  }
}
