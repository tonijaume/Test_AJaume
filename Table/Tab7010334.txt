OBJECT Table 7010334 Tipo Acuerdo Conductor
{
  OBJECT-PROPERTIES
  {
    Date=16/10/09;
    Time=12:30:41;
    Version List=TRANSFER;
  }
  PROPERTIES
  {
    OnDelete=VAR
               rcondVar@1100244000 : Record 7010330;
               ERROR1@1100244001 : TextConst 'ESP=Hay condiciones variables vinculadas con este convenio';
               ERROR2@1100244002 : TextConst 'ESP=Hay contratos vinculados con este contrato';
               rHist@1100244003 : Record 7010331;
               rDietas@1100244004 : Record 7010337;
             BEGIN
               //Comprobaremos que no exista este tipo de contrato ni en las condiciones variables ni en
               //historico de contratos.
               rcondVar.RESET;
               rcondVar.SETFILTER(Valor,"Tipo Acuerdo");
               IF rcondVar.FINDFIRST THEN
                  ERROR(ERROR1);

               rHist.RESET;
               rHist.SETRANGE("Tipo Acuerdo","Tipo Acuerdo");
               IF rHist.FINDFIRST THEN
                  ERROR(ERROR2);

               //Borraremos las dietas que tuviera asociadas.
               rDietas.RESET;
               rDietas.SETRANGE("Tipo Acuerdo","Tipo Acuerdo");
               rDietas.DELETEALL(TRUE);
             END;

    CaptionML=ESP=Tipo Acuerdo Conductor;
    LookupFormID=Form7010355;
    DrillDownFormID=Form7010355;
  }
  FIELDS
  {
    { 1   ;   ;Tipo Acuerdo        ;Code10        ;CaptionML=ESP=Tipo Acuerdo;
                                                   NotBlank=Yes;
                                                   Description=PK }
    { 2   ;   ;Descripci¢n         ;Text60        ;CaptionML=ESP=Descripci¢n }
    { 3   ;   ;Hora Extra Desde    ;Decimal       ;CaptionML=ESP=Hora Extra Desde }
    { 4   ;   ;Maximo Horas Periodo;Decimal       ;CaptionML=ESP=Maximo Horas Periodo }
    { 5   ;   ;Horas Jornada Prolongada;Decimal   ;CaptionML=ESP=Horas Jornada Prolongada;
                                                   MinValue=0 }
    { 20  ;   ;Ruptura Actividad Desde (Mins);Integer;
                                                   OnValidate=BEGIN
                                                                IF ("Ruptura Actividad Hasta (Mins)" <> 0) AND ("Ruptura Actividad Desde (Mins)">"Ruptura Actividad Hasta (Mins)") THEN
                                                                  ERROR(Text00001,FIELDCAPTION("Ruptura Actividad Desde (Mins)"),FIELDCAPTION("Ruptura Actividad Hasta (Mins)"));
                                                              END;

                                                   CaptionML=ESP=Ruptura Actividad Desde (Mins);
                                                   MinValue=0;
                                                   BlankZero=Yes }
    { 21  ;   ;Ruptura Actividad Hasta (Mins);Integer;
                                                   OnValidate=BEGIN
                                                                IF ("Ruptura Actividad Hasta (Mins)" <> 0) AND ("Ruptura Actividad Desde (Mins)">"Ruptura Actividad Hasta (Mins)") THEN
                                                                  ERROR(Text00001,FIELDCAPTION("Ruptura Actividad Desde (Mins)"),FIELDCAPTION("Ruptura Actividad Hasta (Mins)"));
                                                              END;

                                                   CaptionML=ESP=Ruptura Actividad Hasta (Mins);
                                                   MinValue=0;
                                                   BlankZero=Yes }
  }
  KEYS
  {
    {    ;Tipo Acuerdo                            ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text50000@1103355000 : TextConst 'ESP=%1 .. %2 Horas';
      Text00001@1103350000 : TextConst 'ESP=%1 No puede ser superior a %2';

    PROCEDURE TextoRupturaHoras@1103350000() : Text[30];
    VAR
      lwText@1103350000 : Text[30];
    BEGIN
      // TextoRupturaHoras

      CLEAR(lwText);
      lwText:= STRSUBSTNO(Text50000,MinHoras("Ruptura Actividad Desde (Mins)"),MinHoras("Ruptura Actividad Hasta (Mins)"));
      EXIT(lwText);
    END;

    PROCEDURE MinHoras@1103350001(pwMin@1103350001 : Integer) : Text[30];
    VAR
      lwHora@1103350000 : Text[30];
    BEGIN
      // MinHoras
      // Pasa de minutos a Horas
      IF pwMin <> 0 THEN BEGIN
        CLEAR(lwHora);
        lwHora := STRSUBSTNO('%1:%2',pwMin DIV 60, pwMin MOD 60);
        EXIT(lwHora)
      END;
    END;

    BEGIN
    END.
  }
}
