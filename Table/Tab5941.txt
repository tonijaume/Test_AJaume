OBJECT Table 5941 Service Item Component
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVW16.00;
  }
  PROPERTIES
  {
    OnModify=BEGIN
               IF Active AND (Type <> xRec.Type) THEN BEGIN
                 ServItemComponent.RESET;
                 ServItemComponent.SETCURRENTKEY(Active,"Parent Service Item No.","Line No.");
                 ServItemComponent.SETRANGE(Active,FALSE);
                 ServItemComponent.SETRANGE("Parent Service Item No.","Parent Service Item No.");
                 IF ServItemComponent.FIND('+') THEN
                   NextNo := ServItemComponent."Line No." + 1
                 ELSE
                   NextNo := 1;
                 ServItemComponent := xRec;
                 ServItemComponent.Active := FALSE;
                 ServItemComponent."Line No." := NextNo;
                 ServItemComponent."From Line No." := "Line No.";
                 ServItemComponent."Last Date Modified" := TODAY;
                 ServItemComponent.INSERT;
               END;
             END;

    OnDelete=BEGIN
               IF Active THEN BEGIN
                 ServItemComponent.RESET;
                 ServItemComponent.SETCURRENTKEY(Active,"Parent Service Item No.","From Line No.");
                 ServItemComponent.SETRANGE(Active,FALSE);
                 ServItemComponent.SETRANGE("Parent Service Item No.","Parent Service Item No.");
                 ServItemComponent.SETRANGE("From Line No.","Line No.");
                 IF ServItemComponent.FIND('-') THEN
                   IF NOT CONFIRM(Text002,FALSE,"No.") THEN
                     ERROR('');
                 ServItemComponent.DELETEALL;
               END;
             END;

    CaptionML=[ENU=Service Item Component;
               ESP=Componente prod. servicio];
    LookupFormID=Form5986;
    DrillDownFormID=Form5986;
  }
  FIELDS
  {
    { 1   ;   ;Parent Service Item No.;Code20     ;TableRelation="Service Item";
                                                   CaptionML=[ENU=Parent Service Item No.;
                                                              ESP=N§ prod. serv. principal] }
    { 3   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              ESP=N§ l¡nea] }
    { 4   ;   ;Active              ;Boolean       ;CaptionML=[ENU=Active;
                                                              ESP=Activo] }
    { 5   ;   ;Type                ;Option        ;OnValidate=BEGIN
                                                                IF Type <> xRec.Type THEN
                                                                  VALIDATE("No.",'');
                                                              END;

                                                   CaptionML=[ENU=Type;
                                                              ESP=Tipo];
                                                   OptionCaptionML=[ENU=Service Item,Item;
                                                                    ESP=Prod. servicio,Producto];
                                                   OptionString=Service Item,Item }
    { 6   ;   ;No.                 ;Code20        ;TableRelation=IF (Type=CONST(Service Item)) "Service Item"
                                                                 ELSE IF (Type=CONST(Item)) Item;
                                                   OnValidate=BEGIN
                                                                IF "No." <> '' THEN BEGIN
                                                                  IF Type = Type::"Service Item" THEN BEGIN
                                                                    IF "No." = "Parent Service Item No." THEN
                                                                      ERROR(
                                                                        Text000,
                                                                        Type,"No.",TABLECAPTION,ServItem.TABLECAPTION,"Parent Service Item No.");
                                                                    ServItem.GET("No.");
                                                                    "Serial No." := ServItem."Serial No.";
                                                                    "Variant Code" := ServItem."Variant Code";
                                                                    Description := ServItem.Description;
                                                                    "Description 2" := ServItem."Description 2";
                                                                  END ELSE BEGIN
                                                                    Item.GET("No.");
                                                                    "Serial No." := '';
                                                                    Description := Item.Description;
                                                                    "Description 2" := Item."Description 2";
                                                                  END;
                                                                  "Date Installed" := WORKDATE;
                                                                END ELSE BEGIN
                                                                  "No." := '';
                                                                  "Date Installed" := 0D;
                                                                  "Serial No." := '';
                                                                  Description := '';
                                                                  "Description 2" := '';
                                                                END;

                                                                VALIDATE("Serial No.");
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF Type = Type::Item THEN BEGIN
                                                                Item."No." := xRec."No.";
                                                                IF FORM.RUNMODAL(0,Item) = ACTION::LookupOK THEN
                                                                  VALIDATE("No.",Item."No.");
                                                              END ELSE BEGIN
                                                                ServItem.GET("Parent Service Item No.");
                                                                ServItem2.RESET;
                                                                ServItem2.SETCURRENTKEY("Customer No.","Ship-to Code");
                                                                ServItem2.SETRANGE("Customer No.",ServItem."Customer No.");
                                                                ServItem2.SETRANGE("Ship-to Code",ServItem."Ship-to Code");
                                                                ServItem2."No." := "No.";
                                                                IF FORM.RUNMODAL(0,ServItem2) = ACTION::LookupOK THEN
                                                                  VALIDATE("No.",ServItem2."No.");
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=No.;
                                                              ESP=N§] }
    { 7   ;   ;Date Installed      ;Date          ;CaptionML=[ENU=Date Installed;
                                                              ESP=Fecha instalaci¢n] }
    { 8   ;   ;Variant Code        ;Code10        ;TableRelation="Item Variant".Code WHERE (Item No.=FIELD(No.));
                                                   OnValidate=BEGIN
                                                                IF Type = Type::"Service Item" THEN
                                                                  IF "No." <> '' THEN BEGIN
                                                                    ServItem.GET("No.");
                                                                    TESTFIELD("Variant Code",ServItem."Variant Code");
                                                                  END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              CASE Type OF
                                                                Type::Item:
                                                                  BEGIN
                                                                    ItemVariant.RESET;
                                                                    ItemVariant.SETRANGE("Item No.","No.");
                                                                    IF FORM.RUNMODAL(FORM::"Item Variants",ItemVariant) = ACTION::LookupOK THEN
                                                                      "Variant Code" := ItemVariant.Code;
                                                                  END;
                                                                Type::"Service Item":
                                                                  BEGIN
                                                                    IF "No." <> '' THEN BEGIN
                                                                      ServItem.GET("No.");
                                                                      ItemVariant.RESET;
                                                                      ItemVariant.SETRANGE("Item No.",ServItem."Item No.");
                                                                    END ELSE
                                                                      ItemVariant.SETRANGE("Item No.",'');
                                                                    IF FORM.RUNMODAL(FORM::"Item Variants",ItemVariant) = ACTION::LookupOK THEN
                                                                      VALIDATE("Variant Code",ItemVariant.Code);
                                                                  END;
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Variant Code;
                                                              ESP=C¢d. variante] }
    { 11  ;   ;Serial No.          ;Code20        ;OnValidate=BEGIN
                                                                IF (Type = Type::"Service Item") AND
                                                                  ("No." <> '')
                                                                THEN BEGIN
                                                                  ServItem.GET("No.");
                                                                  IF "Serial No." <> ServItem."Serial No." THEN
                                                                    ERROR(Text001,FIELDCAPTION("Serial No."),Type,"No.");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Serial No.;
                                                              ESP=N§ serie] }
    { 12  ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              ESP=Descripci¢n] }
    { 13  ;   ;Description 2       ;Text50        ;CaptionML=[ENU=Description 2;
                                                              ESP=Descripci¢n 2] }
    { 15  ;   ;Service Order No.   ;Code20        ;OnLookup=BEGIN
                                                              ServOrderMgt.ServHeaderLookup(1,"Service Order No.");
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Service Order No.;
                                                              ESP=N§ ped. servicio] }
    { 16  ;   ;From Line No.       ;Integer       ;CaptionML=[ENU=From Line No.;
                                                              ESP=Desde n§ l¡nea] }
    { 17  ;   ;Last Date Modified  ;Date          ;CaptionML=[ENU=Last Date Modified;
                                                              ESP=Fecha £lt. modificaci¢n] }
  }
  KEYS
  {
    {    ;Active,Parent Service Item No.,Line No. ;Clustered=Yes }
    {    ;Active,Parent Service Item No.,From Line No. }
    {    ;Type,No.,Active                          }
    {    ;Active,Parent Service Item No.,Type,No.  }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=%1 %2 can not be a component in %3 for %4 %5;ESP=%1 %2 no puede ser un componente en %3 para %4 %5';
      Text001@1001 : TextConst 'ENU=%1 must be the same as in %2 %3.;ESP=%1 debe ser igual que en %2 %3.';
      ServItemComponent@1002 : Record 5941;
      ServItem@1003 : Record 5940;
      ServItem2@1004 : Record 5940;
      Item@1005 : Record 27;
      ItemVariant@1006 : Record 5401;
      ServOrderMgt@1007 : Codeunit 5900;
      NextNo@1008 : Integer;
      Text002@1009 : TextConst 'ENU=Component %1 has replacements\Do you want to delete this Component?;ESP=Componente %1 tiene reposici¢nes\¨Quiere borrar este componente?';

    PROCEDURE AssistEditSerialNo@1();
    VAR
      ItemLedgEntry@1000 : Record 32;
    BEGIN
      TESTFIELD(Type,Type::Item);
      CLEAR(ItemLedgEntry);
      ItemLedgEntry.SETCURRENTKEY("Item No.",Open);
      ItemLedgEntry.SETRANGE("Item No.","No.");
      ItemLedgEntry.SETRANGE(Open,TRUE);
      IF "Variant Code" <> '' THEN
        ItemLedgEntry.SETRANGE("Variant Code","Variant Code");
      ItemLedgEntry.SETFILTER("Serial No.",'<>%1','');
      IF FORM.RUNMODAL(0,ItemLedgEntry) = ACTION::LookupOK THEN
        "Serial No." := ItemLedgEntry."Serial No.";
    END;

    BEGIN
    END.
  }
}
