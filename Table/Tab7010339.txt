OBJECT Table 7010339 Ingresos Conductor x Periodo
{
  OBJECT-PROPERTIES
  {
    Date=16/10/09;
    Time=12:30:41;
    Version List=TRANSFER;
  }
  PROPERTIES
  {
    OnInsert=VAR
               rIng@1100244000 : Record 7010339;
             BEGIN
               "N§ Linea" := 1;
               rIng.RESET;
               rIng.SETCURRENTKEY(Conductor,"N§ Linea");
               rIng.SETRANGE(Conductor,Conductor);
               IF rIng.FINDLAST THEN
                 "N§ Linea" := rIng."N§ Linea" + 1;
             END;

    OnDelete=VAR
               rIngDia@1100244000 : Record 7010336;
               rIxP@1100244001 : Record 7010339;
               rErr@1100244002 : Record 7010344;
               rRxC@1100244003 : Record 7035336;
             BEGIN
               rIngDia.RESET;
               rIngDia.SETCURRENTKEY(Conductor,Fecha);
               rIngDia.SETRANGE(Conductor,Conductor);
               rIngDia.SETRANGE(Fecha,"Fecha Inicio","Fecha Fin");
               rIngDia.DELETEALL;

               //Borramos los errores asociados, si ya no hay otro registro de ingresos.
               rIxP.RESET;
               rIxP.SETCURRENTKEY(Conductor,"Fecha Inicio");
               rIxP.SETRANGE(Conductor,Conductor);
               rIxP.SETFILTER("Fecha Inicio",'>=%1',"Fecha Inicio");
               rIxP.SETFILTER("Fecha Fin",'<=%1',"Fecha Fin");
               rIxP.SETFILTER("N§ Linea",'<>%1',"N§ Linea");
               IF NOT rIxP.FINDFIRST THEN BEGIN
                 rErr.RESET;
                 rErr.SETCURRENTKEY("Cod Conductor",Fecha);
                 rErr.SETRANGE("Cod Conductor",Conductor);
                 rErr.SETRANGE(Fecha,"Fecha Inicio","Fecha Fin");
                 rErr.DELETEALL;
               END;

               //Desmarcamos del registro de actividad por parte la anotaci¢n de que cantidad se ha
               //considerado en el c lculo.
               rRxC.RESET;
               rRxC.SETCURRENTKEY(Conductor,Fecha,"N§ Parte","N§ Linea");
               rRxC.SETRANGE(Conductor,Conductor);
               rRxC.SETRANGE(Fecha,"Fecha Inicio","Fecha Fin");
               rRxC.SETRANGE(Concepto,"Concepto Variable");
               IF rRxC.FINDSET(TRUE) THEN REPEAT
                 rRxC."Cantidad (C. Ingresos)" := 0;
                 rRxC.MODIFY;
               UNTIL rRxC.NEXT=0;
             END;

    CaptionML=ESP=Ingresos Conductor x Periodo;
    LookupFormID=Form7010357;
    DrillDownFormID=Form7010357;
  }
  FIELDS
  {
    { 1   ;   ;Conductor           ;Code10        ;TableRelation=Conductor.Conductor;
                                                   ValidateTableRelation=Yes;
                                                   CaptionML=ESP=Conductor;
                                                   NotBlank=Yes;
                                                   Description=PK;
                                                   Editable=Yes }
    { 2   ;   ;Fecha Inicio        ;Date          ;CaptionML=ESP=Fecha Inicio;
                                                   NotBlank=Yes;
                                                   Description=PK;
                                                   Editable=No }
    { 3   ;   ;Fecha Fin           ;Date          ;CaptionML=ESP=Fecha Fin;
                                                   Description=PK;
                                                   Editable=No }
    { 4   ;   ;Concepto Variable   ;Code10        ;TableRelation="Concepto variable".Concepto;
                                                   CaptionML=ESP=Concepto Variable;
                                                   NotBlank=Yes;
                                                   Description=PK;
                                                   Editable=No }
    { 6   ;   ;Garaje              ;Code10        ;TableRelation=Garaje;
                                                   ValidateTableRelation=No;
                                                   CaptionML=ESP=Garaje;
                                                   NotBlank=Yes;
                                                   Description=PK;
                                                   Editable=No }
    { 7   ;   ;Precio              ;Decimal       ;OnValidate=BEGIN
                                                                //BRM 02/06/04 Redondeo con precisi¢n definida en par metros
                                                                //Importe := Cantidad * Precio;
                                                                //"Importe DL" := Cantidad * ObtenerPrecioDL;
                                                                rPar.FINDFIRST;
                                                                Precio := ROUND(Precio,POWER(10,(-1*rPar."Precision Decimales")));
                                                                VALIDATE(Importe,(Cantidad * Precio));
                                                              END;

                                                   CaptionML=ESP=Precio;
                                                   Description=PK }
    { 8   ;   ;Cantidad            ;Decimal       ;OnValidate=BEGIN
                                                                //BRM 02/06/04 Redondeo con precisi¢n definida en par metros
                                                                //Importe      := Cantidad * Precio;
                                                                //"Importe DL" := Cantidad * ObtenerPrecioDL;
                                                                VALIDATE(Importe,(Cantidad * Precio));
                                                              END;

                                                   CaptionML=ESP=Cantidad }
    { 9   ;   ;Importe             ;Decimal       ;OnValidate=BEGIN
                                                                //BRM 02/06/04 Redondeo con precisi¢n definida en par metros
                                                                rPar.FINDFIRST;
                                                                Importe := ROUND(Importe,POWER(10,(-1*rPar."Precision Decimales")));
                                                                IF ("C¢d. Divisa"<>'') THEN
                                                                  "Importe DL" := cFunBas.CambiarDEaDL(Importe,"C¢d. Divisa",TODAY)
                                                                ELSE
                                                                  "Importe DL" := Importe;
                                                              END;

                                                   CaptionML=ESP=Importe;
                                                   Editable=No }
    { 10  ;   ;Tipo Acuerdo        ;Code10        ;TableRelation="Tipo Acuerdo Conductor"."Tipo Acuerdo";
                                                   CaptionML=ESP=Tipo Acuerdo;
                                                   Description=PK;
                                                   Editable=No }
    { 11  ;   ;Filtro Fecha        ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=ESP=Filtro Fecha }
    { 12  ;   ;Filtro Tipo Acuerdo ;Code10        ;FieldClass=FlowFilter;
                                                   TableRelation="Tipo Acuerdo Conductor"."Tipo Acuerdo";
                                                   ValidateTableRelation=No;
                                                   CaptionML=ESP=Filtro Tipo Acuerdo }
    { 13  ;   ;Filtro Conductor    ;Code20        ;FieldClass=FlowFilter;
                                                   TableRelation=Conductor.Conductor;
                                                   ValidateTableRelation=Yes;
                                                   CaptionML=ESP=Filtro Conductor }
    { 14  ;   ;Filtro Garaje       ;Code10        ;FieldClass=FlowFilter;
                                                   TableRelation=Garaje;
                                                   ValidateTableRelation=Yes;
                                                   CaptionML=ESP=Filtro Garaje }
    { 15  ;   ;Cantidad Inicial    ;Decimal       ;CaptionML=ESP=Cantidad Inicial;
                                                   Editable=No }
    { 16  ;   ;Fecha               ;Date          ;CaptionML=ESP=Fecha;
                                                   Editable=No }
    { 17  ;   ;Hora                ;Time          ;CaptionML=ESP=Hora;
                                                   Editable=No }
    { 18  ;   ;Usuario             ;Code20        ;CaptionML=ESP=Usuario;
                                                   Editable=No }
    { 19  ;   ;Precio Inicial      ;Decimal       ;CaptionML=ESP=Precio Inicial;
                                                   AutoFormatType=2 }
    { 20  ;   ;Nombre Abreviado    ;Code20        ;CaptionML=ESP=Nombre Abreviado;
                                                   Description=Se usa para poder ordenar por este campo. }
    { 21  ;   ;N§ Linea            ;Integer       ;CaptionML=ESP=N§ Linea;
                                                   Description=Se usa para la clave primaria }
    { 22  ;   ;C¢d. Divisa         ;Code10        ;TableRelation=Currency.Code;
                                                   CaptionML=ESP=C¢d. Divisa;
                                                   Description=FK;
                                                   Editable=No }
    { 23  ;   ;Importe DL          ;Decimal       ;CaptionML=ESP=Importe DL;
                                                   Editable=No }
    { 24  ;   ;N§ Condicion        ;Code10        ;TableRelation="Condicion variable".N§;
                                                   CaptionML=ESP=N§ Condicion;
                                                   Editable=No }
    { 30  ;   ;Tipo Vehiculo       ;Code10        ;TableRelation="Tipo Vehiculo".Codigo;
                                                   CaptionML=ESP=Tipo Vehiculo;
                                                   Editable=No }
    { 31  ;   ;Tipo Servicio       ;Code10        ;CaptionML=ESP=Tipo Servicio;
                                                   Editable=No }
    { 32  ;   ;C¢digo Servicio     ;Code10        ;CaptionML=ESP=C¢digo Servicio;
                                                   Editable=No }
    { 33  ;   ;Zona Fisica         ;Code10        ;CaptionML=ESP=Zona Fisica;
                                                   Editable=No }
    { 34  ;   ;Cantidad m¡nima     ;Decimal       ;CaptionML=ESP=Cantidad m¡nima;
                                                   Description=OBSOLETO. }
  }
  KEYS
  {
    {    ;Conductor,N§ Linea                      ;Clustered=Yes }
    { No ;Garaje,Nombre Abreviado,Fecha Inicio,Concepto Variable,N§ Condicion }
    {    ;Garaje,Fecha Inicio,Nombre Abreviado,Concepto Variable,N§ Condicion }
    {    ;Conductor,Fecha Inicio,Garaje,Concepto Variable;
                                                   SumIndexFields=Importe DL,Cantidad }
    {    ;Garaje,Conductor,Tipo Acuerdo,Concepto Variable,Fecha Inicio,Fecha Fin }
    {    ;Usuario,Fecha,Hora                       }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      rPar@1100244000 : Record 7010311;
      cFunBas@1100244001 : Codeunit 7010310;

    PROCEDURE ObtenerPrecioDL@1() : Decimal;
    VAR
      vPrecioDL@1100244000 : Decimal;
      rTipo@1100244001 : Record 330;
    BEGIN
      IF "C¢d. Divisa" <> '' THEN BEGIN
        IF "Fecha Inicio" = 0D THEN
          vPrecioDL := 0
        ELSE
          //BRM 02/06/04 Redondeamos con precisi¢n definida en par metros
          //vPrecioDL := rTipo.ExchangeAmtFCYToLCY("Fecha Inicio", "C¢d. Divisa",
          //                                      Precio, rTipo.ExchangeRate("Fecha Inicio",
          //                                                               "C¢d. Divisa"));
          vPrecioDL := cFunBas.CambiarDEaDL(Precio,"C¢d. Divisa",TODAY);
      END
      ELSE
        vPrecioDL:= Precio;
      EXIT(vPrecioDL);
    END;

    BEGIN
    END.
  }
}
