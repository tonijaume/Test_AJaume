OBJECT Table 5996 Standard Service Code
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVW16.00;
  }
  PROPERTIES
  {
    DataCaptionFields=Code,Description;
    OnInsert=BEGIN
               IF NOT StdServItemGroup.GET('',Code) THEN BEGIN
                 StdServItemGroup.INIT;
                 StdServItemGroup.Code := Code;
                 StdServItemGroup.INSERT;
               END;
             END;

    OnDelete=BEGIN
               StdServiceLine.RESET;
               StdServiceLine.SETRANGE("Standard Service Code",Code);
               StdServiceLine.DELETEALL(TRUE);

               StdServItemGroup.RESET;
               StdServItemGroup.SETRANGE(Code,Code);
               StdServItemGroup.DELETEALL;
             END;

    OnRename=VAR
               DimDoc@1000 : Record 357;
               DimDoc2@1001 : Record 357;
             BEGIN
               DimDoc.SETRANGE("Table ID",DATABASE::"Standard Service Line");
               DimDoc.SETRANGE("Document Type",DimDoc."Document Type"::" ");
               DimDoc.SETRANGE("Document No.",xRec.Code);
               IF DimDoc.FIND('-') THEN
                 REPEAT
                   DimDoc2 := DimDoc;
                   DimDoc2."Document No." := Code;
                   IF DimDoc2.INSERT THEN;
                 UNTIL DimDoc.NEXT = 0;
               DimDoc.DELETEALL;
             END;

    CaptionML=[ENU=Standard Service Code;
               ESP=C¢digo servicio est ndar];
    PasteIsValid=No;
    LookupFormID=Form5958;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code10        ;CaptionML=[ENU=Code;
                                                              ESP=C¢digo];
                                                   NotBlank=Yes }
    { 2   ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              ESP=Descripci¢n] }
    { 3   ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   OnValidate=VAR
                                                                Currency@1000 : Record 4;
                                                                Currency2@1001 : Record 4;
                                                              BEGIN
                                                                IF NOT Currency.GET("Currency Code") THEN
                                                                  Currency.InitRoundingPrecision;
                                                                IF NOT Currency2.GET(xRec."Currency Code") THEN
                                                                  Currency2.InitRoundingPrecision;

                                                                IF Currency."Amount Rounding Precision" <> Currency2."Amount Rounding Precision" THEN BEGIN
                                                                  StdServiceLine.RESET;
                                                                  StdServiceLine.SETRANGE("Standard Service Code",Code);
                                                                  StdServiceLine.SETRANGE(Type,StdServiceLine.Type::"G/L Account");
                                                                  StdServiceLine.SETFILTER("Amount Excl. VAT",'<>%1',0);
                                                                  IF StdServiceLine.FIND('-') THEN BEGIN
                                                                    IF NOT CONFIRM(
                                                                      STRSUBSTNO(
                                                                        Text001,FIELDCAPTION("Currency Code"),StdServiceLine.FIELDCAPTION("Amount Excl. VAT"),
                                                                        FIELDCAPTION("Currency Code")),TRUE)
                                                                    THEN
                                                                      ERROR(Text002);
                                                                    REPEAT
                                                                      StdServiceLine."Amount Excl. VAT" :=
                                                                        ROUND(StdServiceLine."Amount Excl. VAT",Currency."Amount Rounding Precision");
                                                                      StdServiceLine.MODIFY;
                                                                    UNTIL StdServiceLine.NEXT = 0;
                                                                  END;
                                                                END;
                                                                MODIFY;
                                                              END;

                                                   CaptionML=[ENU=Currency Code;
                                                              ESP=C¢d. divisa] }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      StdServItemGroup@1001 : Record 5998;
      StdServiceLine@1000 : Record 5997;
      Text001@1002 : TextConst 'ENU=If you change the %1, the %2 will be rounded according to the new %3.;ESP=Si cambia el %1, el %2 ser  redondeado con el nuevo %3.';
      Text002@1003 : TextConst 'ENU=The update has been interrupted to respect the warning.;ESP=Se ha interrumpido la actualizaci¢n para respetar la advertencia.';
      Text003@1004 : TextConst 'ENU=%1 of the standard service code must be equal to %2 on the %3.;ESP=%1 del c¢digo servicio est ndar debe ser igual a %2 en %3.';

    PROCEDURE InsertServiceLines@1(ServiceHeader@1000 : Record 5900);
    VAR
      Currency@1001 : Record 4;
      DimDoc@1002 : Record 357;
      ServHeader@1003 : Record 5900;
      ServLine@1004 : Record 5902;
      StdServCode@1005 : Record 5996;
      StdServLine@1006 : Record 5997;
      StdServItemGrCode@1009 : Record 5998;
      StdServItemGrCodesForm@1007 : Form 5959;
      Factor@1008 : Integer;
    BEGIN
      ServiceHeader.TESTFIELD("No.");
      ServiceHeader.TESTFIELD("Document Type");

      CLEAR(StdServItemGrCodesForm);
      StdServItemGrCode.RESET;
      StdServItemGrCodesForm.SETRECORD(StdServItemGrCode);
      StdServItemGrCodesForm.SETTABLEVIEW(StdServItemGrCode);
      StdServItemGrCodesForm.LOOKUPMODE := TRUE;

      IF NOT (StdServItemGrCodesForm.RUNMODAL = ACTION::LookupOK) THEN
        EXIT;
      StdServItemGrCodesForm.GETRECORD(StdServItemGrCode);

      IF StdServCode.GET(StdServItemGrCode.Code) THEN BEGIN
        StdServCode.TESTFIELD(Code);
        IF StdServCode."Currency Code" <> ServiceHeader."Currency Code" THEN
          ERROR(
            Text003,
            StdServCode.FIELDCAPTION("Currency Code"),
            ServiceHeader.FIELDCAPTION("Currency Code"),ServiceHeader.TABLECAPTION);
        StdServLine.SETRANGE("Standard Service Code",StdServCode.Code);
        ServLine."Document Type" := ServiceHeader."Document Type";
        ServLine."Document No." := ServiceHeader."No.";
        ServLine.SETRANGE("Document Type",ServiceHeader."Document Type");
        ServLine.SETRANGE("Document No.",ServiceHeader."No.");
        IF ServHeader."Prices Including VAT" THEN
          Factor := 1
        ELSE
          Factor := 0;
        DimDoc.LOCKTABLE;
        ServLine.LOCKTABLE;
        StdServLine.LOCKTABLE;
        IF StdServLine.FIND('-') THEN
          REPEAT
            ServLine.INIT;
            ServLine."Line No." := 0;
            ServLine.VALIDATE(Type,StdServLine.Type);
            IF StdServLine.Type = StdServLine.Type::" " THEN BEGIN
              ServLine.VALIDATE("No.",StdServLine."No.");
              ServLine.Description := StdServLine.Description
            END ELSE BEGIN
              IF NOT StdServLine.EmptyLine THEN BEGIN
                StdServLine.TESTFIELD("No.");
                ServLine.VALIDATE("No.",StdServLine."No.");
                IF StdServLine."Variant Code" <> '' THEN
                  ServLine.VALIDATE("Variant Code",StdServLine."Variant Code");
                ServLine.VALIDATE(Quantity,StdServLine.Quantity);
                IF StdServLine."Unit of Measure Code" <> '' THEN
                  ServLine.VALIDATE("Unit of Measure Code",StdServLine."Unit of Measure Code");
                ServLine.Description := StdServLine.Description;
                IF StdServLine.Type = StdServLine.Type::"G/L Account" THEN
                  ServLine.VALIDATE(
                    "Unit Price",
                    ROUND(
                      StdServLine."Amount Excl. VAT" *
                      (ServLine."VAT %" / 100 * Factor + 1),Currency."Unit-Amount Rounding Precision"));
              END;
            END;
            IF StdServLine.InsertLine THEN BEGIN
              ServLine."Line No." := GetNextLineNo(ServLine);
              ServLine.INSERT(TRUE);
              UpDateDim(ServLine,StdServLine);
              InsertExtendedText(ServLine);
            END;
          UNTIL StdServLine.NEXT = 0;
      END;
    END;

    PROCEDURE GetNextLineNo@2(ServLine@1001 : Record 5902) : Integer;
    BEGIN
      ServLine.SETRANGE("Document Type",ServLine."Document Type");
      ServLine.SETRANGE("Document No.",ServLine."Document No.");
      IF ServLine.FIND('+') THEN
        EXIT(ServLine."Line No." + 10000);
      EXIT(10000);
    END;

    LOCAL PROCEDURE UpDateDim@3(ServLine@1000 : Record 5902;StdServLine@1001 : Record 5997);
    VAR
      DimDoc@1002 : Record 357;
      DimDoc2@1003 : Record 357;
    BEGIN
      DimDoc."Table ID" := DATABASE::"Service Line";
      DimDoc."Document Type" := ServLine."Document Type";
      DimDoc."Document No." := ServLine."Document No.";
      DimDoc."Line No." := ServLine."Line No.";
      DimDoc2."Table ID" := DATABASE::"Standard Service Line";
      DimDoc2."Document Type" := DimDoc2."Document Type"::" ";
      DimDoc2."Document No." := StdServLine."Standard Service Code";
      DimDoc2."Line No." := StdServLine."Line No.";

      DimDoc.SETRANGE("Table ID",DATABASE::"Service Line");
      DimDoc.SETRANGE("Document Type",ServLine."Document Type");
      DimDoc.SETRANGE("Document No.",ServLine."Document No.");
      DimDoc.SETRANGE("Line No.",ServLine."Line No.");
      DimDoc2.SETRANGE("Table ID",DATABASE::"Standard Service Line");
      DimDoc2.SETRANGE("Document Type",DimDoc2."Document Type"::" ");
      DimDoc2.SETRANGE("Document No.",StdServLine."Standard Service Code");
      DimDoc2.SETRANGE("Line No.",StdServLine."Line No.");

      IF DimDoc2.FIND('-') THEN
        REPEAT
          DimDoc."Dimension Code" := DimDoc2."Dimension Code";
          DimDoc."Dimension Value Code" := '';
          IF DimDoc.FIND THEN BEGIN
            IF DimDoc."Dimension Value Code" <> DimDoc2."Dimension Value Code" THEN BEGIN
              DimDoc."Dimension Value Code" := DimDoc2."Dimension Value Code";
              DimDoc.MODIFY(TRUE);
            END;
          END ELSE BEGIN
            DimDoc."Dimension Value Code" := DimDoc2."Dimension Value Code";
            DimDoc.INSERT(TRUE);
          END;
        UNTIL DimDoc2.NEXT = 0;
    END;

    PROCEDURE InsertExtendedText@4(ServLine@1000 : Record 5902);
    VAR
      TransferExtendedText@1001 : Codeunit 378;
    BEGIN
      IF TransferExtendedText.ServCheckIfAnyExtText(ServLine,FALSE) THEN
        TransferExtendedText.InsertServExtText(ServLine);
    END;

    BEGIN
    END.
  }
}
