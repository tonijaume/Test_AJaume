OBJECT Table 7009789 Precios compra transfer
{
  OBJECT-PROPERTIES
  {
    Date=19/03/15;
    Time=15:26:13;
    Modified=Yes;
    Version List=AIC2009;
  }
  PROPERTIES
  {
    OnInsert=VAR
               lrPre@1100217000 : Record 7009789;
             BEGIN
               rPar.FINDFIRST;
               IF NOT rPar."Empresa Delegacion" THEN
                 ERROR(Text001);

               //+$002
               rConC.RESET;
               rConC.GET(Delegacion, "N§ Contrato");
               IF rConC."Buscar precios por" = rConC."Buscar precios por"::"Capacidad solicitada" THEN
                 "Tipo aplicacion" := "Tipo aplicacion"::Vehiculo;
               //+$002

               lrPre.RESET;
               lrPre.SETRANGE(Delegacion     , Delegacion);
               lrPre.SETRANGE("N§ Contrato"  , "N§ Contrato");
               lrPre.SETRANGE("Codigo precio", "Codigo precio");
               IF lrPre.FINDLAST THEN
                 "Orden precio" := lrPre."Orden precio" + 1
               ELSE
                 "Orden precio" := 1;

               //. Para cubrir el caso de copy/paste de precios
               //-$009IF ( ("Codigo precio" = "Codigo precio"::"Precio base") OR ("Codigo precio" = "Codigo precio"::Soporte)) AND
               //-$009   ("Tipo precio" = "Tipo precio"::Pax) AND
               //-$009   ("Tipo elemento" = '') THEN
               //-$009BEGIN
               //-$009  rParPer.FINDFIRST;
               //-$009  ExistePrecioTipoPersona(Rec, rParPer."Codigo Adulto");
               //-$009  ExistePrecioTipoPersona(Rec, rParPer."Codigo Ni¤o");
               //-$009END;

               CASE "Codigo precio" OF
                 "Codigo precio"::"Precio base",
                 "Codigo precio"::Soporte:
                   IF "Tipo elemento" <> '' THEN
                   BEGIN
                     "Tipo aplicacion" := "Tipo aplicacion"::Pax;
                     VALIDATE(Activo, cCon.activar_precio_zona_compra(Rec));
                   END;
                 "Codigo precio"::Suplemento   :
                   BEGIN
                     "Tipo aplicacion" := "Tipo aplicacion"::Pax;
                     VALIDATE(Activo, cCon.activar_suplemento_compra(Rec));
                   END;
               END;
             END;

    OnModify=BEGIN
               rPar.FINDFIRST;
               IF NOT rPar."Empresa Delegacion" THEN
                 ERROR(Text002);

               IF ("Fecha desde" <> 0D) OR ("Fecha hasta" <> 0D) THEN BEGIN
                 CASE "Codigo precio" OF
                   "Codigo precio"::"Precio base",
                   "Codigo precio"::Soporte: VALIDATE(Activo, cCon.activar_precio_zona_compra(Rec));
                   "Codigo precio"::Suplemento: VALIDATE(Activo, cCon.activar_suplemento_compra(Rec));
                 END;
               END;
             END;

    OnDelete=BEGIN
               rPar.FINDFIRST;
               IF NOT rPar."Empresa Delegacion" THEN
                 ERROR(Text003);

               //-$009_BorraDependientes; //+$004

               cPar.intro_historico_precios_transf(Delegacion, "N§ Contrato", rHisP.Tipo::Compra, "Codigo precio",
                                                   "Orden precio", Text004, Text005, '');
             END;

    OnRename=BEGIN
               ERROR(Text006);
             END;

    CaptionML=[ENU=Transfer purchase prices;
               ESP=Precios compra transfer];
    PasteIsValid=No;
  }
  FIELDS
  {
    { 1   ;   ;Delegacion          ;Code10        ;TableRelation=Delegacion.Codigo;
                                                   CaptionML=[ENU=Local Office;
                                                              ESP=Delegacion];
                                                   Description=PK, FK Delegacion;
                                                   Editable=No }
    { 3   ;   ;N§ Contrato         ;Code10        ;TableRelation="Contrato compra transfer"."N§ Contrato compra";
                                                   CaptionML=[ENU=Contract No.;
                                                              ESP=N§ Contrato];
                                                   Description=PK, FK Contrato compra transfer;
                                                   Editable=No }
    { 5   ;   ;Codigo precio       ;Option        ;CaptionML=[ENU=Price code;
                                                              ESP=Codigo Precio];
                                                   OptionCaptionML=[ENU=Base price,Supplement,Route price,Extra,Support;
                                                                    ESP=Precio base,Suplemento,Precio ruta,Extra,Soporte];
                                                   OptionString=Precio base,Suplemento,Precio ruta,Extra,Soporte;
                                                   Description=PK;
                                                   Editable=No }
    { 7   ;   ;Orden precio        ;Integer       ;CaptionML=[ENU=Price order;
                                                              ESP=Orden Precio];
                                                   Description=PK;
                                                   Editable=No }
    { 9   ;   ;Fecha desde         ;Date          ;OnValidate=BEGIN
                                                                IF "Fecha desde" <> xRec."Fecha desde" THEN
                                                                BEGIN
                                                                  IF "Fecha hasta" <> 0D THEN
                                                                  BEGIN
                                                                    IF "Fecha desde" > "Fecha hasta" THEN
                                                                      ERROR(Text007);
                                                                  END;
                                                                  IF rConC.GET(Delegacion, "N§ Contrato") THEN
                                                                  BEGIN
                                                                    IF ("Fecha desde" < rConC."Fecha inicio contrato") OR ("Fecha desde" > rConC."Fecha final contrato") THEN
                                                                      ERROR(Text008);
                                                                  END;

                                                                  cPar.intro_historico_precios_transf(Delegacion, "N§ Contrato", rHisP.Tipo::Compra, "Codigo precio", "Orden precio",
                                                                                                      FIELDCAPTION("Fecha desde"),
                                                                                                      FORMAT(xRec."Fecha desde"), FORMAT("Fecha desde"));

                                                                  Activo := FALSE;

                                                                  //-$009modifica_rangos_elementos;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Date From;
                                                              ESP=Fecha desde] }
    { 11  ;   ;Fecha hasta         ;Date          ;OnValidate=BEGIN
                                                                IF "Fecha hasta" <> xRec."Fecha hasta" THEN
                                                                BEGIN
                                                                  IF "Fecha desde" <> 0D THEN
                                                                  BEGIN
                                                                    IF "Fecha desde" > "Fecha hasta" THEN
                                                                      ERROR(Text007);
                                                                  END;
                                                                  IF rConC.GET(Delegacion, "N§ Contrato") THEN
                                                                  BEGIN
                                                                    IF ("Fecha hasta" < rConC."Fecha inicio contrato") OR ("Fecha hasta" > rConC."Fecha final contrato") THEN
                                                                      ERROR(Text009);
                                                                  END;

                                                                  cPar.intro_historico_precios_transf(Delegacion, "N§ Contrato", rHisP.Tipo::Compra, "Codigo precio", "Orden precio",
                                                                                                      FIELDCAPTION("Fecha hasta"),
                                                                                                      FORMAT(xRec."Fecha hasta"), FORMAT("Fecha hasta"));

                                                                  Activo := FALSE;
                                                                  //-$009modifica_rangos_elementos;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Date To;
                                                              ESP=Fecha hasta] }
    { 13  ;   ;Destino             ;Code10        ;TableRelation=IF (Codigo precio=FILTER(Precio base|Suplemento|Soporte)) "Zonas transfer".Zona WHERE (Delegacion=FIELD(Delegacion),
                                                                                                                                                        Contrato=FIELD(N§ Contrato),
                                                                                                                                                        Tipo contrato=CONST(Compra))
                                                                                                                                                        ELSE IF (Codigo precio=CONST(Extra)) "Suplemento agrupacion"."Num Agrupacion";
                                                   OnValidate=BEGIN
                                                                IF Destino <> xRec.Destino THEN
                                                                BEGIN
                                                                  cPar.intro_historico_precios_transf(Delegacion, "N§ Contrato", rHisP.Tipo::Compra, "Codigo precio", "Orden precio",
                                                                                                      FIELDCAPTION(Destino),
                                                                                                      xRec.Destino, Destino);

                                                                  Activo := FALSE;
                                                                  //-$009modifica_rangos_elementos;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Destination;
                                                              ESP=Destino];
                                                   Description=IF (Codigo precio=FILTER(Precio base|Suplemento|Soporte)) "Zonas transfer".Zona WHERE (Delegacion=FIELD(Delegacion),Contrato=FIELD(N§ Contrato),Tipo contrato=CONST(Compra)) ELSE IF (Codigo precio=CONST(Extra)) "Suplemento agrupacion"."Num Agrupacion" }
    { 15  ;   ;Precio              ;Decimal       ;OnValidate=VAR
                                                                lrPre@1100217000 : Record 7009789;
                                                              BEGIN
                                                                IF Precio <> xRec.Precio THEN BEGIN
                                                                  cPar.intro_historico_precios_transf(Delegacion, "N§ Contrato", rHisP.Tipo::Compra, "Codigo precio", "Orden precio",
                                                                                                      FIELDCAPTION(Precio),
                                                                                                      FORMAT(xRec.Precio), FORMAT(Precio));

                                                                  //-$009IF "Tipo elemento" = '' THEN
                                                                  //-$009BEGIN
                                                                  //-$009  lrPre.RESET;
                                                                  //-$009  lrPre.SETRANGE (Delegacion         , Delegacion);
                                                                  //-$009  lrPre.SETRANGE ("N§ Contrato"      , "N§ Contrato");
                                                                  //-$009  lrPre.SETRANGE ("Codigo precio"    , "Codigo precio");
                                                                  //-$009  lrPre.SETRANGE ("Orden dependiente", "Orden precio");
                                                                  //-$009  lrPre.SETFILTER("Tipo elemento"    , '<>%1', '');
                                                                  //-$009  IF lrPre.FINDSET(TRUE) THEN
                                                                  //-$009    lrPre.MODIFYALL(Precio, Precio);
                                                                  //-$009END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Price;
                                                              ESP=Precio];
                                                   AutoFormatType=2;
                                                   AutoFormatExpr="C¢d. divisa" }
    { 17  ;   ;Tipo aplicacion     ;Option        ;OnValidate=BEGIN
                                                                IF "Tipo aplicacion" <> xRec."Tipo aplicacion" THEN
                                                                BEGIN
                                                                  //+$002
                                                                  IF ("Codigo precio" = "Codigo precio"::"Precio base") OR
                                                                     ("Codigo precio" = "Codigo precio"::Soporte) THEN
                                                                  BEGIN
                                                                    //+$005 <
                                                                    //-$009rParPer.FINDFIRST;
                                                                    IF "Tipo aplicacion" = "Tipo aplicacion"::Pax THEN
                                                                    BEGIN
                                                                      rConC.RESET;
                                                                      rConC.GET(Delegacion, "N§ Contrato");
                                                                      IF rConC."Buscar precios por" = rConC."Buscar precios por"::"Capacidad solicitada" THEN
                                                                        ERROR(Text012);

                                                                      //-$009ExistePrecioTipoPersona(Rec, rParPer."Codigo Adulto");
                                                                      //-$009ExistePrecioTipoPersona(Rec, rParPer."Codigo Ni¤o");
                                                                    END
                                                                    //-$009ELSE
                                                                      //-$009_BorraDependientes
                                                                    //+$005 >
                                                                  END;
                                                                  //+$002

                                                                  cPar.intro_historico_precios_transf(Delegacion, "N§ Contrato", rHisP.Tipo::Compra, "Codigo precio", "Orden precio",
                                                                                                      FIELDCAPTION("Tipo aplicacion"),
                                                                                                      FORMAT(xRec."Tipo aplicacion"), FORMAT("Tipo aplicacion"));
                                                                  Activo := FALSE;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Application type;
                                                              ESP=Tipo aplicacion];
                                                   OptionCaptionML=[ENU=,Pax,Vehicle;
                                                                    ESP=,Pax,Vehiculo];
                                                   OptionString=,Pax,Vehiculo }
    { 19  ;   ;C¢d. divisa         ;Code10        ;TableRelation=Currency.Code;
                                                   OnValidate=BEGIN
                                                                IF "C¢d. divisa" <> xRec."C¢d. divisa" THEN BEGIN
                                                                  cPar.intro_historico_precios_transf(Delegacion, "N§ Contrato", rHisP.Tipo::Compra, "Codigo precio", "Orden precio",
                                                                                                      FIELDCAPTION("C¢d. divisa"), xRec."C¢d. divisa", "C¢d. divisa");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Currency exchange;
                                                              ESP=C¢d. divisa];
                                                   Description=FK Divisa }
    { 21  ;   ;Tipo vehiculo       ;Code10        ;TableRelation="Tipo transporte".Codigo;
                                                   OnValidate=BEGIN
                                                                IF "Tipo vehiculo" <> xRec."Tipo vehiculo" THEN BEGIN
                                                                  cPar.intro_historico_precios_transf(Delegacion, "N§ Contrato", rHisP.Tipo::Compra, "Codigo precio", "Orden precio",
                                                                                                      FIELDCAPTION("Tipo vehiculo"),
                                                                                                      xRec."Tipo vehiculo", "Tipo vehiculo");

                                                                  Activo := FALSE;
                                                                  //-$009modifica_rangos_elementos;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Vehicle type;
                                                              ESP=Tipo vehiculo];
                                                   Description=FK Tipo transporte }
    { 23  ;   ;Rango desde         ;Integer       ;OnValidate=BEGIN
                                                                IF "Rango desde" <> xRec."Rango desde" THEN BEGIN
                                                                  IF "Rango hasta" <> 0 THEN BEGIN
                                                                     IF "Rango desde" > "Rango hasta" THEN
                                                                       ERROR(Text010);
                                                                  END;

                                                                  cPar.intro_historico_precios_transf(Delegacion, "N§ Contrato", rHisP.Tipo::Compra, "Codigo precio", "Orden precio",
                                                                                                      FIELDCAPTION("Rango desde"),
                                                                                                      FORMAT(xRec."Rango desde"), FORMAT("Rango desde"));

                                                                  Activo := FALSE;
                                                                  //-$009modifica_rangos_elementos;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Range From;
                                                              ESP=Rango desde] }
    { 25  ;   ;Rango hasta         ;Integer       ;OnValidate=BEGIN
                                                                IF "Rango hasta" <> xRec."Rango hasta" THEN BEGIN
                                                                  IF "Rango desde" <> 0 THEN BEGIN
                                                                     IF "Rango desde" > "Rango hasta" THEN
                                                                       ERROR(Text010);
                                                                  END;

                                                                  cPar.intro_historico_precios_transf(Delegacion, "N§ Contrato", rHisP.Tipo::Compra, "Codigo precio", "Orden precio",
                                                                                                      FIELDCAPTION("Rango hasta"),
                                                                                                      FORMAT(xRec."Rango hasta"), FORMAT("Rango hasta"));

                                                                  Activo := FALSE;

                                                                  //-$009modifica_rangos_elementos;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Range To;
                                                              ESP=Rango hasta] }
    { 27  ;   ;Tipo elemento       ;Code10        ;TableRelation=IF (Codigo precio=FILTER(Precio base|Soporte)) "Tipo elemento"."Tipo elemento" WHERE (Humano=CONST(Yes))
                                                                 ELSE IF (Codigo precio=CONST(Suplemento)) "Tipo elemento"."Tipo elemento" WHERE (Humano=CONST(No));
                                                   OnValidate=BEGIN
                                                                IF "Tipo elemento" <> xRec."Tipo elemento" THEN
                                                                BEGIN
                                                                  IF "Tipo elemento" <> '' THEN
                                                                  BEGIN
                                                                    rTipoElem.RESET;
                                                                    rTipoElem.SETRANGE("Tipo elemento", "Tipo elemento");
                                                                    IF "Codigo precio" = "Codigo precio"::Suplemento THEN
                                                                    BEGIN
                                                                      rTipoElem.SETRANGE(Humano, FALSE);
                                                                    END
                                                                    ELSE
                                                                    BEGIN
                                                                      rTipoElem.SETRANGE(Humano, TRUE);
                                                                    END;
                                                                    IF NOT rTipoElem.FINDFIRST THEN
                                                                      ERROR(Text011);
                                                                    rTipoElem.RESET;
                                                                  END;

                                                                  cPar.intro_historico_precios_transf(Delegacion, "N§ Contrato", rHisP.Tipo::Compra, "Codigo precio", "Orden precio",
                                                                                                      FIELDCAPTION("Tipo elemento"),
                                                                                                      xRec."Tipo elemento", "Tipo elemento");

                                                                  Activo := FALSE;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Element Type;
                                                              ESP=Tipo elemento];
                                                   Description=FK Tipo elemento }
    { 29  ;   ;old_Zona 1          ;Code10        ;OnValidate=BEGIN
                                                                IF "old_Zona 1" <> xRec."old_Zona 1" THEN BEGIN
                                                                  cPar.intro_historico_precios_transf(Delegacion, "N§ Contrato", rHisP.Tipo::Compra, "Codigo precio", "Orden precio",
                                                                                                      FIELDCAPTION("old_Zona 1"),
                                                                                                      xRec."old_Zona 1", "old_Zona 1");

                                                                  Activo := FALSE;

                                                                  //-$009modifica_rangos_elementos;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Zone 1;
                                                              ESP=Zona 1] }
    { 31  ;   ;old_Zona 2          ;Code10        ;CaptionML=[ENU=Zone 2;
                                                              ESP=Zona 2] }
    { 33  ;   ;old_Transportista   ;Code10        ;TableRelation="Transportista transfer".Codigo;
                                                   CaptionML=[ENU=Carrier;
                                                              ESP=Transportista];
                                                   Description=FK Transportista }
    { 35  ;   ;Activo              ;Boolean       ;OnValidate=VAR
                                                                lrPre@1100217000 : Record 7009789;
                                                              BEGIN
                                                                IF Activo <> xRec.Activo THEN
                                                                BEGIN
                                                                  //-$009lrPre.RESET;
                                                                  //-$009lrPre.SETRANGE (Delegacion         , Delegacion);
                                                                  //-$009lrPre.SETRANGE ("N§ Contrato"      , "N§ Contrato");
                                                                  //-$009lrPre.SETRANGE ("Codigo precio"    , "Codigo precio");
                                                                  //-$009lrPre.SETRANGE ("Orden dependiente", "Orden precio");
                                                                  //-$009IF lrPre.FINDSET(TRUE) THEN
                                                                  //-$009  lrPre.MODIFYALL(Activo, Activo);

                                                                  cPar.intro_historico_precios_transf(Delegacion, "N§ Contrato", rHisP.Tipo::Compra, "Codigo precio", "Orden precio",
                                                                                                      FIELDCAPTION(Activo),
                                                                                                      FORMAT(xRec.Activo), FORMAT(Activo));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Active;
                                                              ESP=Activo];
                                                   Editable=No }
    { 37  ;   ;old_Orden dependiente;Integer      ;CaptionML=[ENU=Depending ID;
                                                              ESP=Orden dependiente];
                                                   Description=Enlace entre el precio basico y los precios por adulto/ni¤o }
    { 38  ;   ;Tipo servicio       ;Option        ;OnValidate=BEGIN
                                                                IF "Tipo servicio" <> xRec."Tipo servicio" THEN
                                                                BEGIN
                                                                  cPar.intro_historico_precios_transf(Delegacion, "N§ Contrato", rHisP.Tipo::Compra, "Codigo precio", "Orden precio",
                                                                                                      FIELDCAPTION("Tipo servicio"),
                                                                                                      FORMAT(xRec."Tipo servicio"), FORMAT("Tipo servicio"));

                                                                  Activo := FALSE;

                                                                  //-$009modifica_rangos_elementos;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Service Type;
                                                              ESP=Tipo servicio];
                                                   OptionCaptionML=[ENU=One way,Roundtrip;
                                                                    ESP=Una via,Doble via];
                                                   OptionString=Una via,Doble via }
    { 39  ;   ;Precio Adulto       ;Decimal       ;OnValidate=BEGIN
                                                                IF "Precio Adulto" <> xRec."Precio Adulto" THEN
                                                                BEGIN
                                                                  cPar.intro_historico_precios_transf(Delegacion, "N§ Contrato", rHisP.Tipo::Compra, "Codigo precio", "Orden precio",
                                                                                                      FIELDCAPTION("Precio Adulto"),
                                                                                                      FORMAT(xRec."Precio Adulto"), FORMAT("Precio Adulto"));

                                                                  IF ("Precio Ni¤o" = 0) OR ("Precio Ni¤o" = xRec."Precio Adulto") THEN
                                                                    VALIDATE("Precio Ni¤o", "Precio Adulto");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Adult Price;
                                                              ESP=Precio Adulto];
                                                   AutoFormatType=2 }
    { 41  ;   ;Precio Ni¤o         ;Decimal       ;OnValidate=BEGIN
                                                                IF "Precio Ni¤o" <> xRec."Precio Ni¤o" THEN
                                                                  cPar.intro_historico_precios_transf(Delegacion, "N§ Contrato", rHisP.Tipo::Compra, "Codigo precio", "Orden precio",
                                                                                                      FIELDCAPTION("Precio Ni¤o"),
                                                                                                      FORMAT(xRec."Precio Ni¤o"), FORMAT("Precio Ni¤o"));
                                                              END;

                                                   CaptionML=[ENU=Child Price;
                                                              ESP=Precio Ni¤o];
                                                   AutoFormatType=2 }
    { 43  ;   ;Origen              ;Code10        ;TableRelation="Zonas transfer".Zona WHERE (Delegacion=FIELD(Delegacion),
                                                                                              Contrato=FIELD(N§ Contrato),
                                                                                              Tipo contrato=CONST(Compra));
                                                   OnValidate=BEGIN
                                                                IF Origen <> xRec.Origen THEN
                                                                  cPar.intro_historico_precios_transf(Delegacion, "N§ Contrato", rHisP.Tipo::Compra, "Codigo precio", "Orden precio",
                                                                                                      FIELDCAPTION(Origen),
                                                                                                      FORMAT(xRec.Origen), FORMAT(Origen));
                                                              END;

                                                   CaptionML=[ENU=Origin;
                                                              ESP=Origen];
                                                   NotBlank=Yes;
                                                   Description="Zonas transfer".Zona WHERE (Delegacion=FIELD(Delegacion),Contrato=FIELD(N§ Contrato),Tipo contrato=CONST(Compra)) }
  }
  KEYS
  {
    {    ;Delegacion,N§ Contrato,Codigo precio,Orden precio;
                                                   Clustered=Yes }
    {    ;Delegacion,N§ Contrato,Codigo precio,Destino,Tipo vehiculo,Fecha desde,Fecha hasta;
                                                   KeyGroups=RENUMERING }
    {    ;Delegacion,N§ Contrato,Codigo precio,old_Zona 1,old_Zona 2,Tipo vehiculo,Fecha desde,Fecha hasta;
                                                   KeyGroups=RENUMERING }
    {    ;Delegacion,N§ Contrato,Codigo precio,Destino,Fecha desde,Rango desde }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1103355007 : TextConst 'ENU=Database parameters folder does not exist;ESP=No existe el fichero de parametros de la B. D.';
      Text001@1103355008 : TextConst 'ENU=To sign up purchase prices of transfer is only available  in the local offices;ESP=Solo es posible dar de alta precios de compra de transfer en las Delegaciones.';
      Text002@1103355009 : TextConst 'ENU=To modify purchase prices of transfer is only available  in the local offices;ESP=Solo es posible modificar precios de compra de transfer en las Delegaciones.';
      Text003@1103355010 : TextConst 'ENU=To cancel purchase prices of transfer is only available  in the local offices;ESP=Solo es posible dar de baja precios de compra de transfer en las Delegaciones.';
      Text004@1103355011 : TextConst 'ENU=Deleted;ESP=Borrado';
      Text005@1103355012 : TextConst 'ENU=Deleted register;ESP=Borrado registro';
      Text006@1103355013 : TextConst 'ENU=Unable to rename purchase prices of transfer;ESP=No es posible renombrar precios de compra de transfer.';
      Text007@1103355014 : TextConst 'ENU=Date from cannot be higher than date to;ESP=La fecha desde no puede ser posterior a la fecha hasta.';
      Text008@1103355015 : TextConst 'ENU=The indicated date from is out of the contract margins;ESP=La fecha desde indicada esta fuera de los margenes del contrato.';
      Text009@1103355016 : TextConst 'ENU=The indicated date to is out of the contract margins;ESP=La fecha hasta indicada esta fuera de los margenes del contrato.';
      Text010@1103355017 : TextConst 'ENU=Range from cannot be higher than range to;ESP=El rango desde no puede ser mayor que el rango hasta.';
      Text011@1103355018 : TextConst 'ENU="Indicated element does not exist or is not suitable for the current type of price ";ESP=El tipo de elemento indicado no existe o no es adecuado para el tipo de precio actual.';
      rPar@1103355000 : Record 7009700;
      rTipoElem@1103355002 : Record 7009715;
      rHisP@1103355003 : Record 7009803;
      rConC@1103355004 : Record 7009787;
      cPar@1103355005 : Codeunit 7009700;
      cCon@1103355006 : Codeunit 7009718;
      Text012@1100217000 : TextConst 'ENU=Prices per pax cannot be used in the contracts defined by capacity.;ESP=No se pueden indicar precios por pax en los contratos por capacidad.';

    BEGIN
    {
      $001 AJS 10092012 Nuevo campo "Tipo servicio" para el tratamiento de los precios de un viaje y doble via
                        en un mismo contrato de transportista

      $002 Si el contrato indica que hay que buscar precios por capacidad no vamos a permitir que se inserten precios por pax

      $003 AJS 26112013 Nuevo valor Soporte en el campo "Codigo precio"

      $004 AJS 28042014 Nueva funcion _BorraDependientes para borrar precios adulto/ni¤o

      $005 AJS 28042014 Crear/borrar los precios adulto/ni¤o a partir del campo Tipo precio

      $006 AJS 29042014 Crear los precios adulto/ni¤o cuando hay un copy/paste

      $007 AJS 07052014 Inhabilito que se pueda hacer copy/paste de esta tabla para evitar problemas con los elementos

      $009 AJS 10062014 CNT-OC-14046

                        - Nuevos campos Precio adulto y Precio ni¤o

                        - Nuevo campo Zona desde

                        - Desaparecen los precios relacionados para Adultos y Ni¤os

      $010 AJS 19032015 Elimino las funciones que hacen referencia a los precios por tipo persona en registros diferentes
    }
    END.
  }
}
