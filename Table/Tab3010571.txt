OBJECT Table 3010571 Cost Budget Entry
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=CACEM5.00,NAVES6.00.01;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF "Line No." = 0 THEN
                 "Line No." := GetNextEntryNo;

               CheckEntries;
               "Last Modified By User" := USERID;
             END;

    OnModify=BEGIN
               CheckEntries;
               "Last Date Modified" := TODAY;
               "Last Modified By User" := USERID;
             END;

    CaptionML=[ENU=Cost Budget Entry;
               ESP=Mov. ppto. costes];
    LookupFormID=Form3010571;
    DrillDownFormID=Form3010571;
  }
  FIELDS
  {
    { 1   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              ESP=N§ l¡nea];
                                                   Editable=No }
    { 2   ;   ;Budget Name         ;Code10        ;TableRelation="Cost Budget Name";
                                                   CaptionML=[ENU=Budget Name;
                                                              ESP=Nombre ppto.] }
    { 3   ;   ;Cost Type No.       ;Text20        ;TableRelation="Cost Type";
                                                   CaptionML=[ENU=Cost Type No.;
                                                              ESP=N§ tipo coste] }
    { 4   ;   ;Date                ;Date          ;CaptionML=[ENU=Date;
                                                              ESP=Fecha];
                                                   ClosingDates=Yes }
    { 5   ;   ;Cost Center Code    ;Code20        ;TableRelation="Cost Center";
                                                   CaptionML=[ENU=Cost Center Code;
                                                              ESP=C¢d. centro coste] }
    { 6   ;   ;Cost Object Code    ;Code20        ;TableRelation="Cost Object";
                                                   CaptionML=[ENU=Cost Object Code;
                                                              ESP=C¢d. objeto coste] }
    { 7   ;   ;Amount              ;Decimal       ;CaptionML=[ENU=Amount;
                                                              ESP=Importe] }
    { 9   ;   ;Text                ;Text80        ;CaptionML=[ENU=Text;
                                                              ESP=Texto] }
    { 20  ;   ;Document No.        ;Code20        ;CaptionML=[ENU=Document No.;
                                                              ESP=N§ documento] }
    { 30  ;   ;Source Code         ;Code10        ;TableRelation="Source Code";
                                                   CaptionML=[ENU=Source Code;
                                                              ESP=C¢d. origen] }
    { 31  ;   ;System-Created Entry;Boolean       ;CaptionML=[ENU=System-Created Entry;
                                                              ESP=Asiento autom tico];
                                                   Editable=No }
    { 32  ;   ;Allocated           ;Boolean       ;CaptionML=[ENU=Allocated;
                                                              ESP=Asignado] }
    { 40  ;   ;Last Modified By User;Code20       ;TableRelation=User;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Last Modified By User;
                                                              ESP=élt. modificaci¢n por usuario];
                                                   Editable=No }
    { 42  ;   ;Last Date Modified  ;Date          ;CaptionML=[ENU=Last Date Modified;
                                                              ESP=Fecha £lt. modificaci¢n];
                                                   Editable=No }
    { 50  ;   ;Allocation Ratio    ;Text80        ;CaptionML=[ENU=Allocation Ratio;
                                                              ESP=Ratio asignaci¢n] }
    { 51  ;   ;Allocation ID       ;Code10        ;TableRelation="Cost Allocation Source";
                                                   CaptionML=[ENU=Allocation ID;
                                                              ESP=Id. asignaci¢n] }
  }
  KEYS
  {
    {    ;Line No.                                ;Clustered=Yes }
    {    ;Budget Name,Cost Type No.,Date          ;SumIndexFields=Amount }
    {    ;Budget Name,Cost Type No.,Cost Center Code,Cost Object Code,Date;
                                                   SumIndexFields=Amount }
    {    ;Budget Name,Cost Center Code,Cost Type No.,Allocated,Date;
                                                   SumIndexFields=Amount }
    {    ;Budget Name,Cost Object Code,Cost Type No.,Allocated,Date;
                                                   SumIndexFields=Amount }
    {    ;Budget Name,Allocation ID,Date           }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1150002 : TextConst 'ENU=This function must be started with a budget name.;ESP=La funci¢n debe iniciarse con un nombre ppto.';
      Text001@1150003 : TextConst 'ENU=The entries in budget %1 will be compressed. Entries with identical cost type, cost center, cost object and date will be combined.\\;ESP=Los movimientos del presupuesto %1 se comprimir n. Se agrupar n los movimientos que tengan el mismo tipo coste, centro coste, objeto coste y fecha.\\';
      Text002@1150005 : TextConst 'ENU=The first entry of each group remains intact and the amounts of all further entries will be added to the first entry.\\;ESP=El primer movimiento de cada grupo permanece intacto y los importes del resto de movimientos se agregar n al primero.\\';
      Text003@1150006 : TextConst 'ENU=Additional information like text and allocation information of the other entries will be deleted.\\;ESP=Se eliminar  la informaci¢n adicional, como la informaci¢n de texto y asignaci¢n del resto de los movimientos.\\';
      Text004@1150008 : TextConst 'ENU=Start job?;ESP=¨Iniciar tarea?';
      Text005@1150009 : TextConst 'ENU=Job cancelled.;ESP=Tarea cancelada.';
      Text008@1150010 : TextConst 'ENU=Compress budget entries\;ESP=Comprimir movs. ppto\';
      Text009@1150011 : TextConst 'ENU=Entry       #1#######\;ESP=Mov.        #1#######\';
      Text010@1150012 : TextConst 'ENU=Processed   #2#######\;ESP=Procesados  #2#######\';
      Text011@1150013 : TextConst 'ENU=Compressed  #3#######;ESP=Comprimidos #3#######';
      Text012@1150014 : TextConst 'ENU=%1 entries in budget %2 processed. %3 entries compressed.;ESP=Se han procesado %1 movimientos del presupuesto %2. Se han comprimido %3 movimientos.';
      Text013@1150015 : TextConst 'ENU=Cost center or cost object is missing. Define i.e. a corresponding filter in the budget window.;ESP=Falta el centro coste o el objeto coste. Defina, por ejemplo, un filtro correspondiente en la ventana de presupuesto.';
      Text014@1150017 : TextConst 'ENU=You can not define both a cost center and a cost object.;ESP=No se puede definir un centro coste y un objeto coste.';

    PROCEDURE CompressBudgetEntries@1(_BudName@1150000 : Code[20]);
    VAR
      Source@1150002 : Record 3010571;
      Target@1150003 : Record 3010571;
      d@1150001 : Dialog;
      NoProcessed@1150004 : Integer;
      QtyPerGrp@1150005 : Integer;
      NoCompressed@1150006 : Integer;
    BEGIN
      IF _BudName = '' THEN
        ERROR(Text000);

      IF NOT CONFIRM(Text001 + Text002 + Text003 + Text004,TRUE,_BudName) THEN
        ERROR(Text005);

      Source.SETCURRENTKEY("Budget Name","Cost Type No.","Cost Center Code","Cost Object Code",Date);
      Source.SETRANGE("Budget Name",_BudName);

      d.OPEN(
        Text008 + // Compress entries
        Text009 + // Entries #1
        Text010 + // Processed #2
        Text011); // Compressed #3

      d.UPDATE(1,COUNT);

      IF Source.FIND('-') THEN
        REPEAT
          IF (Source."Cost Type No." = Target."Cost Type No.") AND
             (Source."Cost Center Code" = Target."Cost Center Code") AND
             (Source."Cost Object Code" = Target."Cost Object Code") AND
             (Source.Date = Target.Date)
          THEN BEGIN
            Target.Amount := Target.Amount + Source.Amount;
            Source.DELETE;
            NoCompressed := NoCompressed + 1;
            QtyPerGrp := QtyPerGrp + 1;
          END ELSE BEGIN

            // Write total
            IF QtyPerGrp > 1 THEN BEGIN
              IF Target.Amount = 0 THEN
                Target.DELETE
              ELSE
                Target.MODIFY;
              QtyPerGrp := 0;
            END;

            // Save new rec.
            Target := Source;
            QtyPerGrp := QtyPerGrp + 1;
          END;

          NoProcessed := NoProcessed + 1;
          IF (NoProcessed < 50) OR ((NoProcessed MOD 100) = 0) THEN BEGIN
            d.UPDATE(2,NoProcessed);
            d.UPDATE(3,NoCompressed);
          END;

        UNTIL Source.NEXT = 0;

      IF Target.Amount <> 0 THEN
        Target.MODIFY;

      d.CLOSE;
      MESSAGE(Text012,NoProcessed,_BudName,NoCompressed);
    END;

    PROCEDURE CheckEntries@2();
    BEGIN
      TESTFIELD(Date);
      TESTFIELD("Budget Name");
      TESTFIELD("Cost Type No.");

      // CC and CO missing
      IF ("Cost Center Code" = '') AND ("Cost Object Code" = '') THEN
        ERROR(Text013);

      // Both CC and CO defined
      IF ("Cost Center Code" <> '') AND ("Cost Object Code" <> '') THEN
        ERROR(Text014);

      "Last Modified By User" := USERID;
      "Last Date Modified" := TODAY;
    END;

    LOCAL PROCEDURE GetNextEntryNo@4() : Integer;
    VAR
      CostBudgetEntry@1000 : Record 3010571;
    BEGIN
      CostBudgetEntry.SETCURRENTKEY("Line No.");
      IF CostBudgetEntry.FIND('+') THEN
        EXIT(CostBudgetEntry."Line No." + 1)
      ELSE
        EXIT(1);
    END;

    BEGIN
    END.
  }
}
