OBJECT Table 7010188 Pax TO-Circuito
{
  OBJECT-PROPERTIES
  {
    Date=02/03/15;
    Time=12:24:17;
    Modified=Yes;
    Version List=AIC2009;
  }
  PROPERTIES
  {
    OnInsert=VAR
               rPaxTO@1103355000 : Record 7010188;
             BEGIN
               rParCir.GET;

               IF "N§ Linea" = 0 THEN
               BEGIN
                 rPaxTO.RESET;
                 rPaxTO.SETRANGE(Delegacion, Delegacion);
                 rPaxTO.SETRANGE(Circuito  , Circuito);
                 rPaxTO.SETRANGE(Orden     , Orden);
                 IF rPaxTO.FINDLAST THEN
                   "N§ Linea" := rPaxTO."N§ Linea" + 1
                 ELSE
                   "N§ Linea" := 1;
               END;

               IF rCir.GET(Delegacion, Circuito, Orden) THEN
               BEGIN
                 Fecha := rCir.Fecha;
                 rCir."Pendiente calcular" := TRUE;
                 rCir.MODIFY;
               END;

               Buscar_Tarifa_Venta;
               IF NOT Gestion_Cabecera THEN
                 Crear_Hoteles(Rec);
             END;

    OnDelete=VAR
               rResCir@1103355000 : Record 7010186;
               rHotCir@1103355001 : Record 7010189;
             BEGIN
               rResCir.RESET;
               rResCir.SETCURRENTKEY(Delegacion, Circuito, Orden, "N§ linea");
               rResCir.SETRANGE(Delegacion, Delegacion);
               rResCir.SETRANGE(Circuito  , Circuito);
               rResCir.SETRANGE(Orden     , Orden);
               rResCir.SETRANGE("N§ linea", "N§ Linea");
               IF rResCir.FINDSET(TRUE) THEN
                 rResCir.DELETEALL;

               rHotCir.RESET;
               rHotCir.SETRANGE(Delegacion, Delegacion);
               rHotCir.SETRANGE(Circuito    , Circuito);
               rHotCir.SETRANGE(Orden       , Orden);
               rHotCir.SETRANGE("N§ linea"  , "N§ Linea");
               IF rHotCir.FINDSET(TRUE) THEN
                 rHotCir.DELETEALL;

               IF "N§ Interno" <> 0 THEN
               BEGIN
                 rCab.RESET;
                 IF rCab.GET(Delegacion, "N§ Interno") THEN
                 BEGIN
                   rCab.Gestion_Cuadrante_Circuito(TRUE);
                   rCab.DELETE(TRUE);
                   rCab.Gestion_Cuadrante_Circuito(FALSE);
                 END;
               END;

               IF rCir.GET(Delegacion, Circuito, Orden) THEN BEGIN
                 rCir."Pendiente calcular" := TRUE;
                 rCir.MODIFY;
               END;
             END;

    CaptionML=[ENU=Roundtrip-TO Pax;
               ESP=Pax TO-Circuito];
    LookupFormID=Form7010257;
    DrillDownFormID=Form7010257;
  }
  FIELDS
  {
    { 1   ;   ;Delegacion          ;Code10        ;TableRelation=Delegacion.Codigo;
                                                   CaptionML=[ENU=Local Office;
                                                              ESP=Delegacion];
                                                   NotBlank=Yes;
                                                   Description=PK, FK Delegacion;
                                                   Editable=No }
    { 3   ;   ;Circuito            ;Code10        ;TableRelation="Maestro circuitos".Circuito;
                                                   CaptionML=[ENU=Roundtrip;
                                                              ESP=Circuito];
                                                   NotBlank=Yes;
                                                   Description=PK, FK Maestro Circuitos;
                                                   Editable=No }
    { 5   ;   ;Orden               ;Integer       ;CaptionML=[ENU=Order;
                                                              ESP=Orden];
                                                   Description=PK;
                                                   Editable=No }
    { 7   ;   ;N§ Linea            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              ESP=N§ Linea];
                                                   Description=PK;
                                                   Editable=No }
    { 8   ;   ;Fecha               ;Date          ;OnValidate=BEGIN
                                                                Buscar_Tarifa_Venta;
                                                                Crear_Hoteles(Rec);

                                                                IF NOT Gestion_Cabecera THEN
                                                                  IF rCab.GET(Delegacion, "N§ Interno") THEN
                                                                  BEGIN
                                                                    rCab.Gestion_Cuadrante_Circuito(TRUE);
                                                                    rCab.VALIDATE("Fecha Inicio Circuito", Fecha);
                                                                    rCab."Contrato Venta Circuito" := Tarifa;
                                                                    rCab.MODIFY;
                                                                    rCab.Gestion_Cuadrante_Circuito(FALSE);
                                                                  END;
                                                              END;

                                                   CaptionML=[ENU=Date;
                                                              ESP=Fecha] }
    { 9   ;   ;TourOperador        ;Code10        ;TableRelation=TourOperador.TourOperador;
                                                   OnValidate=BEGIN
                                                                //$001-
                                                                rTTOO.RESET;
                                                                rTTOO.GET(TourOperador);
                                                                rTTOO.TESTFIELD(Bloqueado, FALSE);
                                                                //$001+

                                                                Buscar_Tarifa_Venta;
                                                                Crear_Hoteles(Rec);

                                                                CLEAR(rResCir);
                                                                rResCir.RESET;
                                                                rResCir.Establecer_Gestion_Cabecera(TRUE);
                                                                rResCir.SETCURRENTKEY(Delegacion, Circuito, Orden, "N§ linea");
                                                                rResCir.SETRANGE(Delegacion, Delegacion);
                                                                rResCir.SETRANGE(Circuito  , Circuito);
                                                                rResCir.SETRANGE(Orden     , Orden);
                                                                rResCir.SETRANGE("N§ linea", "N§ Linea");
                                                                IF rResCir.FINDSET(TRUE) THEN
                                                                  REPEAT
                                                                    rResCir.VALIDATE(TourOperador, TourOperador);
                                                                    rResCir.MODIFY;
                                                                  UNTIL rResCir.NEXT = 0;
                                                                rResCir.Establecer_Gestion_Cabecera(FALSE);

                                                                IF NOT Gestion_Cabecera THEN
                                                                  IF rCab.GET(Delegacion, "N§ Interno") THEN
                                                                  BEGIN
                                                                    rCab.Gestion_Cuadrante_Circuito(TRUE);
                                                                    rCab.VALIDATE("TourOperador Venta", TourOperador);
                                                                    rCab."Contrato Venta Circuito" := Tarifa;
                                                                    rCab.MODIFY;
                                                                    rCab.Gestion_Cuadrante_Circuito(FALSE);
                                                                  END;

                                                                IF rCir.GET(Delegacion, Circuito, Orden) THEN
                                                                BEGIN
                                                                  rCir."Pendiente calcular" := TRUE;
                                                                  rCir.MODIFY;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=TourOperator;
                                                              ESP=TourOperador];
                                                   Description=FK TourOperador }
    { 11  ;   ;Paxes               ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Reserva Circuito" WHERE (Delegacion=FIELD(Delegacion),
                                                                                               Circuito=FIELD(Circuito),
                                                                                               Orden=FIELD(Orden),
                                                                                               N§ linea=FIELD(N§ Linea)));
                                                   CaptionML=[ENU=Paxes;
                                                              ESP=Paxes];
                                                   Description=Calculado;
                                                   Editable=No }
    { 12  ;   ;Paxes Reales        ;Integer       ;CaptionML=[ENU=Real paxes;
                                                              ESP=Paxes Reales] }
    { 13  ;   ;Tipo Habitacion     ;Code10        ;TableRelation="Conversion Habitacion"."Habitacion cupo" WHERE (Delegacion=FIELD(Delegacion),
                                                                                                                  N§ Contrato=FIELD(Tarifa),
                                                                                                                  Tipo contrato=CONST(Circuito));
                                                   OnValidate=BEGIN
                                                                CLEAR(rResCir);
                                                                rResCir.RESET;
                                                                rResCir.Establecer_Gestion_Cabecera(TRUE);
                                                                rResCir.SETCURRENTKEY(Delegacion, Circuito, Orden, "N§ linea");
                                                                rResCir.SETRANGE(Delegacion, Delegacion);
                                                                rResCir.SETRANGE(Circuito  , Circuito);
                                                                rResCir.SETRANGE(Orden     , Orden);
                                                                rResCir.SETRANGE("N§ linea", "N§ Linea");
                                                                IF rResCir.FINDSET THEN
                                                                  REPEAT
                                                                    rResCir.VALIDATE("Tipo habitaci¢n", "Tipo Habitacion");
                                                                    rResCir.MODIFY;
                                                                  UNTIL rResCir.NEXT = 0;
                                                                rResCir.Establecer_Gestion_Cabecera(FALSE);

                                                                IF NOT Gestion_Cabecera THEN
                                                                  IF rCab.GET(Delegacion, "N§ Interno") THEN
                                                                  BEGIN
                                                                    rCab.Gestion_Cuadrante_Circuito(TRUE);
                                                                    rCab.VALIDATE("Habitacion Circuito", "Tipo Habitacion");
                                                                    rCab.MODIFY;
                                                                    rCab.Gestion_Cuadrante_Circuito(FALSE);
                                                                  END;

                                                                IF rCir.GET(Delegacion, Circuito, Orden) THEN
                                                                BEGIN
                                                                  rCir."Pendiente calcular" := TRUE;
                                                                  rCir.MODIFY;
                                                                END;

                                                                Crear_Hoteles(Rec);
                                                              END;

                                                   CaptionML=[ENU=Room type;
                                                              ESP=Tipo Habitacion];
                                                   Description=FK Conversion habitacion }
    { 14  ;   ;Cod. Categoria      ;Code10        ;TableRelation="Codigo Circuito".Codigo WHERE (Tipo Codigo=CONST(Categoria));
                                                   OnValidate=BEGIN
                                                                CLEAR(rResCir);
                                                                rResCir.RESET;
                                                                rResCir.Establecer_Gestion_Cabecera(TRUE);
                                                                rResCir.SETCURRENTKEY(Delegacion, Circuito, Orden, "N§ linea");
                                                                rResCir.SETRANGE(Delegacion, Delegacion);
                                                                rResCir.SETRANGE(Circuito  , Circuito);
                                                                rResCir.SETRANGE(Orden     , Orden);
                                                                rResCir.SETRANGE("N§ linea", "N§ Linea");
                                                                IF rResCir.FINDSET(TRUE) THEN
                                                                  REPEAT
                                                                    rResCir.VALIDATE("C¢d. categor¡a", "Cod. Categoria");
                                                                    rResCir.MODIFY;
                                                                  UNTIL rResCir.NEXT = 0;
                                                                rResCir.Establecer_Gestion_Cabecera(FALSE);

                                                                IF NOT Gestion_Cabecera THEN
                                                                  IF rCab.GET(Delegacion, "N§ Interno") THEN
                                                                  BEGIN
                                                                    rCab.Gestion_Cuadrante_Circuito(TRUE);
                                                                    rCab.VALIDATE("Categoria Circuito", "Cod. Categoria");
                                                                    rCab.MODIFY;
                                                                    rCab.Gestion_Cuadrante_Circuito(FALSE);
                                                                  END;

                                                                IF rCir.GET(Delegacion, Circuito, Orden) THEN
                                                                BEGIN
                                                                  rCir."Pendiente calcular" := TRUE;
                                                                  rCir.MODIFY;
                                                                END;

                                                                Crear_Hoteles(Rec);
                                                              END;

                                                   CaptionML=[ENU=Category code;
                                                              ESP=Cod. Categoria];
                                                   Description=FK Codigo circuito }
    { 15  ;   ;Tarifa              ;Code10        ;OnValidate=BEGIN
                                                                Buscar_Tarifa_Venta;
                                                              END;

                                                   CaptionML=[ENU=Tariff;
                                                              ESP=Tarifa];
                                                   Editable=No }
    { 17  ;   ;Precio              ;Decimal       ;FieldClass=Normal;
                                                   CaptionML=[ENU=Price;
                                                              ESP=Precio];
                                                   Editable=No;
                                                   AutoFormatType=2;
                                                   AutoFormatExpr="C¢d. divisa" }
    { 19  ;   ;Importe             ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("C/I Circuito".Importe WHERE (Delegacion=FIELD(Delegacion),
                                                                                                 Circuito=FIELD(Circuito),
                                                                                                 Orden=FIELD(Orden),
                                                                                                 Coste/Ingreso=CONST(Ingreso),
                                                                                                 N§ linea Auxiliar=FIELD(N§ Linea)));
                                                   CaptionML=[ENU=Amount;
                                                              ESP=Importe];
                                                   Description=Calculado sobre C/I Circuito;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="C¢d. divisa" }
    { 21  ;   ;Impuestos incluidos ;Boolean       ;CaptionML=[ENU=Included Taxes;
                                                              ESP=Impuestos incluidos] }
    { 23  ;   ;N§ Serie Factura    ;Code10        ;TableRelation="No. Series".Code;
                                                   CaptionML=[ENU=Invoice serial No.;
                                                              ESP=N§ Serie Factura];
                                                   Description=FK N§ Serie Factura }
    { 25  ;   ;Gupo Registro IVA Prod.;Code10     ;TableRelation="VAT Product Posting Group".Code;
                                                   CaptionML=[ENU=VAT Prod. posting group;
                                                              ESP=Gupo Registro IVA Prod.];
                                                   Description=FK Grupo Regirstro IVA Prod. }
    { 27  ;   ;Importe Con Impuestos;Decimal      ;FieldClass=FlowField;
                                                   CalcFormula=Sum("C/I Circuito"."Importe Con Impuesto" WHERE (Delegacion=FIELD(Delegacion),
                                                                                                                Circuito=FIELD(Circuito),
                                                                                                                Orden=FIELD(Orden),
                                                                                                                Coste/Ingreso=CONST(Ingreso),
                                                                                                                N§ linea Auxiliar=FIELD(N§ Linea)));
                                                   CaptionML=[ENU="Amount with taxes ";
                                                              ESP=Importe con impuestos];
                                                   Description=Calculado sobre C/I Circuito;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="C¢d. divisa" }
    { 29  ;   ;Importe Sin Impuestos;Decimal      ;FieldClass=FlowField;
                                                   CalcFormula=Sum("C/I Circuito"."Importe Sin Impuesto" WHERE (Delegacion=FIELD(Delegacion),
                                                                                                                Circuito=FIELD(Circuito),
                                                                                                                Orden=FIELD(Orden),
                                                                                                                Coste/Ingreso=CONST(Ingreso),
                                                                                                                N§ linea Auxiliar=FIELD(N§ Linea)));
                                                   CaptionML=[ENU=Amount without taxes;
                                                              ESP=Importe sin impuestos];
                                                   Description=Calculado sobre C/I Circuito;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="C¢d. divisa" }
    { 30  ;   ;N§ Prefactura       ;Code10        ;CaptionML=[ENU=Pro-forma invoice No.;
                                                              ESP=N§ Prefactura] }
    { 31  ;   ;N§ Factura          ;Code20        ;CaptionML=[ENU=Invoice No.;
                                                              ESP=N§ Factura] }
    { 33  ;   ;N§ Interno          ;Integer       ;TableRelation="Cabecera reserva"."N§ Interno" WHERE (Delegacion=FIELD(Delegacion));
                                                   CaptionML=[ENU=Internal No.;
                                                              ESP=N§ Interno];
                                                   Description=FK Cabecera Reserva }
    { 35  ;   ;Precio Manual venta ;Decimal       ;CaptionML=[ENU=Manual sale price;
                                                              ESP=Precio manual venta];
                                                   AutoFormatType=2;
                                                   AutoFormatExpr="C¢d. divisa" }
    { 37  ;   ;Tipo Precio Manual Venta;Option    ;CaptionML=[ENU=Sale Manual Price Type;
                                                              ESP=Tipo Precio Manual Venta];
                                                   OptionCaptionML=[ENU=Do not apply,Per pax;
                                                                    ESP=No aplicar,Por Pax];
                                                   OptionString=No aplicar,Por Pax }
    { 39  ;   ;Coste Hoteles       ;Decimal       ;FieldClass=Normal;
                                                   CaptionML=[ENU=Hotels cost;
                                                              ESP=Coste Hoteles];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="C¢d. divisa" }
    { 41  ;   ;Coste Transfer      ;Decimal       ;CaptionML=[ENU=Transfer code;
                                                              ESP=Coste Transfer];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="C¢d. divisa" }
    { 43  ;   ;C¢d. divisa         ;Code10        ;TableRelation=Currency;
                                                   CaptionML=[ENU=Currency exchange;
                                                              ESP=C¢d. divisa];
                                                   Description=FK Divisa }
  }
  KEYS
  {
    {    ;Delegacion,Circuito,Orden,N§ Linea      ;SumIndexFields=Coste Hoteles,Coste Transfer;
                                                   Clustered=Yes }
    {    ;TourOperador                            ;SumIndexFields=Coste Hoteles,Coste Transfer;
                                                   KeyGroups=RENUMERING }
    {    ;N§ Interno                              ;KeyGroups=RENUMERING }
    {    ;N§ Prefactura                           ;KeyGroups=RENUMERING }
    {    ;N§ Factura                              ;KeyGroups=RENUMERING }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1103355005 : TextConst 'ENU=TourOperator cannot be in blank;ESP=TourOperador no puede ser blanco.';
      Text001@1103355006 : TextConst 'ENU=Room cannot be in blank;ESP=Habitaci¢n no puede ser blanco.';
      Text002@1103355007 : TextConst 'ENU=+%1D-1D;ESP=+%1D-1D';
      Text003@1103355008 : TextConst 'ENU=+%1D-%2D;ESP=+%1D-%2D';
      Text004@1103355009 : TextConst 'ENU=+%1D-1D+%2D-%3D;ESP=+%1D-1D+%2D-%3D';
      Text005@1103355010 : TextConst 'ENU=+%1D;ESP=+%1D';
      rParCir@1103355000 : Record 7010185;
      rCab@1103355001 : Record 7009741;
      rResCir@1103355002 : Record 7010186;
      rCir@1103355003 : Record 7010187;
      rTTOO@1000000000 : Record 7009717;
      Gestion_Cabecera@1103355004 : Boolean;

    PROCEDURE Buscar_Tarifa_Venta@1();
    VAR
      rTarVta@1103355000 : Record 7010191;
    BEGIN
      rTarVta.RESET;
      rTarVta.SETRANGE (Delegacion    , Delegacion);
      rTarVta.SETFILTER("Fecha inicio", '<=%1', Fecha);
      rTarVta.SETFILTER("Fecha final" , '>=%1', Fecha);
      rTarVta.SETRANGE (TourOperador  , TourOperador);
      rTarVta.SETRANGE (Confirmado    , TRUE);
      IF rTarVta.FINDFIRST THEN
        Tarifa := rTarVta."N§ Tarifa"
      ELSE
        Tarifa := '';
    END;

    PROCEDURE Crear@2(par_rCir@1103355000 : Record 7010187;par_TTOO@1103355001 : Code[10];par_Hab@1103355002 : Code[10];par_Cat@1103355003 : Code[10]);
    VAR
      rPaxTO@1103355004 : Record 7010188;
    BEGIN
      IF par_TTOO = '' THEN
        ERROR(Text000);

      IF par_Hab = '' THEN
        ERROR(Text001);

      rParCir.GET;
      rParCir.TESTFIELD("C¢d. Media Pensi¢n");
      rParCir.TESTFIELD("C¢d. Pensi¢n Completa");

      rPaxTO.RESET;
      rPaxTO.SETRANGE(Delegacion       , par_rCir.Delegacion);
      rPaxTO.SETRANGE(Circuito         , par_rCir.Circuito);
      rPaxTO.SETRANGE(Orden            , par_rCir.Orden);
      rPaxTO.SETRANGE(TourOperador     , par_TTOO);
      rPaxTO.SETRANGE("Tipo Habitacion", par_Hab);
      rPaxTO.SETRANGE("Cod. Categoria" , par_Cat);
      IF NOT rPaxTO.FINDFIRST THEN
      BEGIN
        CLEAR(rPaxTO);
        rPaxTO.Delegacion        := par_rCir.Delegacion;
        rPaxTO.Circuito          := par_rCir.Circuito;
        rPaxTO.Orden             := par_rCir.Orden;
        rPaxTO.TourOperador      := par_TTOO;
        rPaxTO."Tipo Habitacion" := par_Hab;
        rPaxTO."Cod. Categoria"  := par_Cat;
        rPaxTO.INSERT(TRUE);

        // Creamos los hoteles circuito
        Crear_Hoteles(rPaxTO);
      END;
      Rec := rPaxTO;
    END;

    PROCEDURE Establecer_Gestion_Cabecera@3(par_Gestion_Cabecera@1103355000 : Boolean);
    BEGIN
      // Establecer_Gestion_Cabecera

      Gestion_Cabecera := par_Gestion_Cabecera;
    END;

    PROCEDURE Crear_Hoteles@5(par_PaxTO@1103355000 : Record 7010188);
    VAR
      rHotCir@1103355001 : Record 7010189;
      rHotTOCir@1103355002 : Record 7010193;
      nPeriodo@1103355003 : Integer;
    BEGIN
      IF (par_PaxTO."Tipo Habitacion" = '') OR (par_PaxTO."Cod. Categoria" = '') THEN
        EXIT;

      rHotCir.RESET;
      rHotCir.SETRANGE(Delegacion, par_PaxTO.Delegacion);
      rHotCir.SETRANGE(Circuito  , par_PaxTO.Circuito);
      rHotCir.SETRANGE(Orden     , par_PaxTO.Orden);
      rHotCir.SETRANGE("N§ linea", par_PaxTO."N§ Linea");
      IF rHotCir.FINDFIRST THEN
        EXIT;

      rHotTOCir.Buscar_Hoteles_Tarifa(par_PaxTO.Delegacion, par_PaxTO.Tarifa, par_PaxTO.Circuito,
                                      par_PaxTO."Cod. Categoria", par_PaxTO.Fecha, TRUE);
      nPeriodo := 0;
      REPEAT
        IF rHotTOCir."Dias PC" < rHotTOCir.Estancia THEN
        BEGIN
          CLEAR(rHotCir);
          rHotCir.Delegacion      := par_PaxTO.Delegacion;
          rHotCir.Circuito        := par_PaxTO.Circuito;
          rHotCir.Orden           := par_PaxTO.Orden;
          rHotCir."N§ linea"      := par_PaxTO."N§ Linea";
          nPeriodo := nPeriodo + 10000;
          rHotCir.Periodo         := nPeriodo;
          rHotCir.VALIDATE("N§ interno"   , par_PaxTO."N§ Interno");
          rHotCir.VALIDATE(Hotel          , rHotTOCir.Hotel);
          rHotCir.VALIDATE(TourOperador   , par_PaxTO.TourOperador);
          rHotCir.VALIDATE("Fecha Entrada", CALCDATE(STRSUBSTNO(Text002 , rHotTOCir."Dia inicio"), par_PaxTO.Fecha));
          rHotCir.VALIDATE("Fecha Salida" , CALCDATE(STRSUBSTNO(Text003, rHotTOCir.Estancia, rHotTOCir."Dias PC")
                                                       , rHotCir."Fecha Entrada"));
          rHotCir.VALIDATE(Regimen        , rParCir."C¢d. Media Pensi¢n");
          rHotCir.INSERT(TRUE);
        END;
        IF rHotTOCir."Dias PC" > 0 THEN
        BEGIN
          CLEAR(rHotCir);
          rHotCir.Delegacion      := par_PaxTO.Delegacion;
          rHotCir.Circuito        := par_PaxTO.Circuito;
          rHotCir.Orden           := par_PaxTO.Orden;
          rHotCir."N§ linea"      := par_PaxTO."N§ Linea";
          nPeriodo := nPeriodo + 10000;
          rHotCir.Periodo         := nPeriodo;
          rHotCir.VALIDATE("N§ interno"   , par_PaxTO."N§ Interno");
          rHotCir.VALIDATE(Hotel          , rHotTOCir.Hotel);
          rHotCir.VALIDATE(TourOperador   , par_PaxTO.TourOperador);
          rHotCir.VALIDATE("Fecha Entrada", CALCDATE(STRSUBSTNO(Text004,
                                                     rHotTOCir."Dia inicio", rHotTOCir.Estancia, rHotTOCir."Dias PC"), par_PaxTO.Fecha));
          rHotCir.VALIDATE("Fecha Salida" , CALCDATE(STRSUBSTNO(Text005, rHotTOCir."Dias PC"), rHotCir."Fecha Entrada"));
          rHotCir.VALIDATE(Regimen        , rParCir."C¢d. Pensi¢n Completa");
          rHotCir.INSERT(TRUE);
        END;
      UNTIL rHotTOCir.NEXT = 0;
    END;

    BEGIN
    {
      $001 MNC 22072014 CNT-LP-14054 No se pueden usar TTOO bloqueados

      $002 AJS 02032015 Cambiar algunas instrucciones para poner FINDSET, FINDFIRST o FINDLAST
    }
    END.
  }
}
