OBJECT Table 7009739 Cupos contrato compra
{
  OBJECT-PROPERTIES
  {
    Date=27/06/14;
    Time=12:20:09;
    Modified=Yes;
    Version List=AIC2009;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               rParAge.FINDFIRST;
               IF NOT rParAge."Empresa Delegacion" THEN
                 ERROR(Text001);

               // AJS 04.04.2005
               // Tratar el campo numero de linea, el autosplitkey no va muy fino

               rCupos.RESET;
               rCupos.SETCURRENTKEY(Delegacion,
                                    "N§ Contrato compra",
                                    "Num Linea");
               rCupos.SETRANGE (Delegacion          , Delegacion);
               rCupos.SETRANGE ("N§ Contrato compra", "N§ Contrato compra");
               IF rCupos.FINDLAST THEN
                 "Num Linea" := rCupos."Num Linea" + 10000
               ELSE
                 "Num Linea" := 10000;

               rConC.RESET;
               IF rConC.GET(Delegacion, "N§ Contrato compra") THEN
                 Activo := cCon.activar_cupo_compra(Rec, rConC);
               VALIDATE(Replicado);
             END;

    OnModify=BEGIN
               rParAge.FINDFIRST;
               IF NOT rParAge."Empresa Delegacion" THEN
                 ERROR(Text002);

               rConC.RESET;
               IF rConC.GET(Delegacion, "N§ Contrato compra") THEN BEGIN

                 // Borrar registros de booking

                 rCupoDia.RESET;
                 rCupoDia.SETRANGE(Delegacion       , rConC.Delegacion);
                 rCupoDia.SETRANGE("Contrato compra", rConC."N§ Contrato compra");
                 rCupoDia.SETRANGE("Num Linea"      , "Num Linea");
                 IF rCupoDia.FINDSET(TRUE) THEN
                   rCupoDia.DELETEALL(TRUE);
               END;
               Activo := cCon.activar_cupo_compra(Rec, rConC);
               VALIDATE(Replicado);
             END;

    OnDelete=BEGIN
               rParAge.FIND('-');
               IF NOT rParAge."Empresa Delegacion" THEN
                 ERROR(Text003);

               cFunSeg.TienePermiso(Text005, TRUE);

               rConC.RESET;
               IF rConC.GET(Delegacion, "N§ Contrato compra") THEN BEGIN

                 // Borrar registros de booking

                 rCupoDia.RESET;
                 rCupoDia.SETRANGE(Delegacion       , rConC.Delegacion);
                 rCupoDia.SETRANGE("Contrato compra", rConC."N§ Contrato compra");
                 rCupoDia.SETRANGE("Num Linea"      , "Num Linea");
                 IF rCupoDia.FINDSET(TRUE) THEN
                   rCupoDia.DELETEALL(TRUE);
               END;
             END;

    OnRename=BEGIN
               rParAge.FIND('-');
               IF NOT rParAge."Empresa Delegacion" THEN
                 ERROR(Text007);

               cFunSeg.TienePermiso(Text005, TRUE);

               rConC.RESET;
               IF rConC.GET(Delegacion, "N§ Contrato compra") THEN BEGIN

                 // Borrar registros de booking

                 rCupoDia.RESET;
                 rCupoDia.SETRANGE(Delegacion       , rConC.Delegacion);
                 rCupoDia.SETRANGE("Contrato compra", rConC."N§ Contrato compra");
                 rCupoDia.SETRANGE("Num Linea"      , "Num Linea");
                 IF rCupoDia.FINDSET(TRUE) THEN
                   rCupoDia.DELETEALL(TRUE);
               END;
               Activo := cCon.activar_cupo_compra(Rec, rConC);

               VALIDATE(Replicado);
             END;

    CaptionML=[ENU=Purchase contract allotments;
               ESP=Cupos contrato compra];
    LookupFormID=Form7009759;
    DrillDownFormID=Form7009759;
  }
  FIELDS
  {
    { 1   ;   ;Delegacion          ;Code10        ;TableRelation=Delegacion.Codigo;
                                                   CaptionML=[ENU=Local Office;
                                                              ESP=Delegacion];
                                                   Description=PK, FK Delegacion;
                                                   Editable=No }
    { 3   ;   ;N§ Contrato compra  ;Code10        ;TableRelation="Contrato compra hotel"."N§ Contrato compra";
                                                   CaptionML=[ENU=Purchase contract No.;
                                                              ESP=N§ Contrato compra];
                                                   Description=PK, FK Contrato compra hotel;
                                                   Editable=No }
    { 5   ;   ;Habitacion cupo     ;Code10        ;OnValidate=BEGIN
                                                                rConHab.RESET;
                                                                rConHab.SETRANGE(Delegacion       , Delegacion);
                                                                rConHab.SETRANGE("Tipo contrato"  , rConHab."Tipo contrato"::Compra);
                                                                rConHab.SETRANGE("N§ Contrato"    , "N§ Contrato compra");
                                                                rConHab.SETRANGE("Habitacion cupo", "Habitacion cupo");
                                                                IF rConHab.FIND('-') THEN BEGIN
                                                                  "Habitacion basica" := rConHab."Habitacion basica";
                                                                  "Pax ocupacion"     := rConHab."Ocupacion Maxima";
                                                                END
                                                                ELSE
                                                                  ERROR(Text008);

                                                                switch(Rec);
                                                              END;

                                                   OnLookup=BEGIN
                                                              rConHab.RESET;
                                                              rConHab.SETRANGE(Delegacion     , Delegacion);
                                                              rConHab.SETRANGE("N§ Contrato"  , "N§ Contrato compra");
                                                              rConHab.SETRANGE("Tipo contrato", rConHab."Tipo contrato"::Compra);
                                                              IF FORM.RUNMODAL(7009741, rConHab) = ACTION::LookupOK THEN
                                                                VALIDATE("Habitacion cupo", rConHab."Habitacion cupo");
                                                            END;

                                                   CaptionML=[ENU=Allotment room;
                                                              ESP=Habitacion cupo];
                                                   NotBlank=Yes }
    { 7   ;   ;Fecha desde         ;Date          ;OnValidate=BEGIN
                                                                IF "Fecha hasta" <> 0D THEN
                                                                  IF "Fecha desde" > "Fecha hasta" THEN
                                                                    ERROR(Text009);
                                                                IF rConC.GET(Delegacion, "N§ Contrato compra") THEN BEGIN
                                                                  IF ("Fecha desde" < rConC."Fecha inicio contrato") OR ("Fecha desde" > rConC."Fecha final contrato") THEN
                                                                    ERROR(Text010);
                                                                END;
                                                                switch(Rec);
                                                              END;

                                                   CaptionML=[ENU=Date From;
                                                              ESP=Fecha desde];
                                                   NotBlank=Yes }
    { 9   ;   ;Fecha hasta         ;Date          ;OnValidate=BEGIN
                                                                IF "Fecha desde" <> 0D THEN
                                                                  IF "Fecha desde" > "Fecha hasta" THEN
                                                                    ERROR(Text009);
                                                                IF rConC.GET(Delegacion, "N§ Contrato compra") THEN BEGIN
                                                                  IF ("Fecha hasta" < rConC."Fecha inicio contrato") OR ("Fecha hasta" > rConC."Fecha final contrato") THEN
                                                                    ERROR(Text010);
                                                                END;
                                                                switch(Rec);
                                                              END;

                                                   CaptionML=[ENU=Date To;
                                                              ESP=Fecha hasta];
                                                   NotBlank=Yes }
    { 10  ;   ;Num Linea           ;Integer       ;CaptionML=[ENU=Line No.;
                                                              ESP=Num Linea];
                                                   Description=PK }
    { 11  ;   ;Cupo                ;Integer       ;OnValidate=BEGIN
                                                                switch(Rec);
                                                              END;

                                                   CaptionML=[ENU=Allotment;
                                                              ESP=Cupo];
                                                   Description=Cantidad de habitacion }
    { 13  ;   ;Release             ;Integer       ;OnValidate=BEGIN
                                                                IF Activo THEN BEGIN
                                                                  IF rConC.GET(Delegacion, "N§ Contrato compra") THEN BEGIN
                                                                    rRsv.SETCURRENTKEY("Hotel booking",
                                                                                       "Fecha entrada");
                                                                    rRsv.SETRANGE ("Hotel booking", rConC.Hotel);
                                                                    rRsv.SETFILTER("Fecha entrada", '%1..%2', "Fecha desde", "Fecha hasta");
                                                                    rRsv.SETRANGE (TourOperador   , rConC.TourOperador);
                                                                    rRsv.SETRANGE (Habitacion     , "Habitacion cupo");
                                                                    IF rRsv.FIND('-') THEN BEGIN
                                                                      REPEAT
                                                                        rRsv2.SETCURRENTKEY(Delegacion,
                                                                                            "N§ Responsable");
                                                                        rRsv2.SETRANGE(Delegacion      , rRsv.Delegacion);
                                                                        rRsv2.SETRANGE("N§ Responsable", rRsv."N§ Reserva");
                                                                        IF rRsv2.FIND('-') THEN
                                                                          rRsv2.MODIFYALL("Ultimo dia release", (rRsv."Fecha entrada" - Release));
                                                                      UNTIL rRsv.NEXT = 0;
                                                                    END;
                                                                  END;
                                                                END;
                                                                switch(Rec);
                                                              END;

                                                   CaptionML=[ENU=Release;
                                                              ESP=Release] }
    { 15  ;   ;Pax Legal           ;Integer       ;OnValidate=BEGIN
                                                                switch(Rec);
                                                              END;

                                                   CaptionML=[ENU=Legal pax;
                                                              ESP=Pax Legal] }
    { 17  ;   ;Habitacion basica   ;Code10        ;TableRelation="Habitacion basica"."Codigo Habitacion";
                                                   CaptionML=[ENU=Basic Room;
                                                              ESP=Habitacion basica];
                                                   Description=FK Habitacion basica }
    { 19  ;   ;Activo              ;Boolean       ;InitValue=No;
                                                   CaptionML=[ENU=Active;
                                                              ESP=Activo];
                                                   Editable=No }
    { 20  ;   ;Replicado           ;Boolean       ;InitValue=No;
                                                   OnValidate=BEGIN
                                                                Replicado:= FALSE;
                                                                IF rConC.GET(Delegacion,"N§ Contrato compra") THEN BEGIN
                                                                  rConC.Replicado := FALSE;
                                                                  rConC.MODIFY;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Replicated;
                                                              ESP=Replicado] }
    { 21  ;   ;Pax ocupacion       ;Integer       ;CaptionML=[ENU=Occupancy pax;
                                                              ESP=Pax ocupacion];
                                                   Editable=No }
    { 50  ;   ;Touroperador Venta  ;Code10        ;TableRelation=TourOperador.TourOperador;
                                                   OnValidate=BEGIN
                                                                switch(Rec);
                                                                rPar.FIND('-');

                                                                IF rPar."Crear Cupos Venta desde compra" THEN
                                                                  IF "Touroperador Venta" <> '' THEN
                                                                    rPar.TESTFIELD("Crear Cupos Venta desde compra");
                                                              END;

                                                   CaptionML=[ENU=Sale touroperator;
                                                              ESP=Touroperador venta];
                                                   Description=Para crear cupo de venta a partir del de compra }
  }
  KEYS
  {
    {    ;Delegacion,N§ Contrato compra,Num Linea ;Clustered=Yes }
    {    ;Delegacion,N§ Contrato compra,Habitacion cupo,Fecha desde,Fecha hasta,Touroperador Venta;
                                                   KeyGroups=RENUMERING }
    {    ;Delegacion,N§ Contrato compra,Fecha desde,Fecha hasta,Habitacion cupo;
                                                   KeyGroups=RENUMERING }
    { No ;Replicado                                }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1103355013 : TextConst 'ENU=Agency parameters folder does not exist;ESP=No existe el fichero de Parametros de la Agencia.';
      Text001@1103355014 : TextConst 'ENU=Only to enter allotments in local offices is possible;ESP=Solo es posible dar de alta cupos en las delegaciones.';
      Text002@1103355015 : TextConst 'ENU=Only to modify allotments in local offices is possible;ESP=Solo es posible modificar cupos en las delegaciones.';
      Text003@1103355016 : TextConst 'ENU=Only to cancel allotments in local offices is possible;ESP=Solo es posible dar de baja cupos en las delegaciones.';
      Text004@1103355017 : TextConst 'ENU=User %1 does not exist;ESP=No existe el usuario %1.';
      Text005@1103355018 : TextConst 'ENU=FUN-ACT-COC;ESP=FUN-ACT-COC';
      Text007@1103355020 : TextConst 'ENU=Only to rename allotments in local offices is possible;ESP=Solo es posible renombrar cupos en las delegaciones.';
      Text008@1103355021 : TextConst 'ENU=This room in this contract does not exist;ESP=No existe esta habitacion en este contrato.';
      Text009@1103355022 : TextConst 'ENU=Date from must be lower than date to;ESP=La fecha desde debe ser anterior a la fecha hasta.';
      Text010@1103355023 : TextConst 'ENU=Date from is out of the range of the contract;ESP=La fecha desde esta fuera de los rangos del contrato.';
      cCon@1103355000 : Codeunit 7009701;
      cFunSeg@1100253000 : Codeunit 7009751;
      rConHab@1103355001 : Record 7009731;
      rParAge@1103355002 : Record 7009700;
      rConC@1103355003 : Record 7009723;
      rRsv@1103355004 : Record 7009743;
      rRsv2@1103355005 : Record 7009743;
      rCupoDia@1103355006 : Record 7009757;
      rPar@1103355010 : Record 7009700;
      rCupos@1103355012 : Record 7009739;

    PROCEDURE switch@1(rec@1103355000 : Record 7009739);
    BEGIN
      Activo := FALSE;
    END;

    PROCEDURE GetPosicion@2() : Text[250];
    BEGIN
      // GetPosicion
      // Emula la funci¢n de la 3.70

      CLEAR(rCupos);
      rCupos:= Rec;
      rCupos.SETRECFILTER;
      EXIT(rCupos.GETFILTERS);
    END;

    BEGIN
    {
      // AJS 10.10.2007
         Cambiar la clave primaria para sea unicamente Delegacion, Contrato, Linea

      $001 AJS 27062014 Elimino la variable Booking compra
    }
    END.
  }
}
