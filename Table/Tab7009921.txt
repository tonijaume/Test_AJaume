OBJECT Table 7009921 Serie facturacion x modulo
{
  OBJECT-PROPERTIES
  {
    Date=13/03/15;
    Time=[ 9:30:38];
    Modified=Yes;
    Version List=AIC2009,COM;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Billing series x module;
               ESP=Serie facturacion x modulo];
  }
  FIELDS
  {
    { 1   ;   ;Modulo              ;Option        ;CaptionML=[ENU=Module;
                                                              ESP=Modulo];
                                                   OptionCaptionML=ESP=Hotel,Transfer,Excursion,Circuitos;
                                                   OptionString=Hotel,Transfer,Excursion,Circuitos }
    { 3   ;   ;Serie facturas      ;Code10        ;TableRelation="No. Series".Code;
                                                   CaptionML=[ENU=Invoices Series;
                                                              ESP=Serie facturas];
                                                   NotBlank=Yes;
                                                   Description="No. Series".Code }
    { 5   ;   ;Serie abonos        ;Code10        ;TableRelation="No. Series".Code;
                                                   CaptionML=[ENU=Credit memo series;
                                                              ESP=Serie abonos];
                                                   NotBlank=Yes;
                                                   Description="No. Series".Code }
  }
  KEYS
  {
    {    ;Modulo                                  ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE CrearSeries@1100217000();
    VAR
      lrSer@1100217000 : Record 7009921;
      lrSalesSetup@1100217001 : Record 311;
    BEGIN
      // CrearSeries

      lrSalesSetup.FINDFIRST;

      IF NOT lrSer.GET(lrSer.Modulo::Hotel) THEN
      BEGIN
        CLEAR(lrSer);
        lrSer.Modulo           := lrSer.Modulo::Hotel;
        lrSer."Serie facturas" := lrSalesSetup."Invoice Nos.";
        lrSer."Serie abonos"   := lrSalesSetup."Credit Memo Nos.";
        lrSer.INSERT;
      END;

      IF NOT lrSer.GET(lrSer.Modulo::Transfer) THEN
      BEGIN
        CLEAR(lrSer);
        lrSer.Modulo           := lrSer.Modulo::Transfer;
        lrSer."Serie facturas" := lrSalesSetup."Invoice Nos.";
        lrSer."Serie abonos"   := lrSalesSetup."Credit Memo Nos.";
        lrSer.INSERT;
      END;

      IF NOT lrSer.GET(lrSer.Modulo::Excursion) THEN
      BEGIN
        CLEAR(lrSer);
        lrSer.Modulo           := lrSer.Modulo::Excursion;
        lrSer."Serie facturas" := lrSalesSetup."Invoice Nos.";
        lrSer."Serie abonos"   := lrSalesSetup."Credit Memo Nos.";
        lrSer.INSERT;
      END;

      IF NOT lrSer.GET(lrSer.Modulo::Circuitos) THEN
      BEGIN
        CLEAR(lrSer);
        lrSer.Modulo           := lrSer.Modulo::Circuitos;
        lrSer."Serie facturas" := lrSalesSetup."Invoice Nos.";
        lrSer."Serie abonos"   := lrSalesSetup."Credit Memo Nos.";
        lrSer.INSERT;
      END;
    END;

    PROCEDURE CheckSeries@1100217001();
    BEGIN
      // CheckSeries

      TESTFIELD("Serie facturas");
      TESTFIELD("Serie abonos");
    END;

    BEGIN
    {
      $000 AJS 23062014 Creada para simplificar la introduccion de tarifas y contratos
    }
    END.
  }
}
