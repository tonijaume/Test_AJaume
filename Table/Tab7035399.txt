OBJECT Table 7035399 Subtrayectos x Parte
{
  OBJECT-PROPERTIES
  {
    Date=16/10/09;
    Time=12:30:50;
    Version List=TRANSFER;
  }
  PROPERTIES
  {
    OnInsert=VAR
               lrSubtrayectos@1103355000 : Record 7035399;
             BEGIN
               // Solo se puede insertar un subtrayecto por parte.

               IF lrSubtrayectos.GET("N§ Parte") THEN
                 ERROR(Error004, "N§ Parte");

               // AJF 03/10/08
               // Hay que comprobar si existe un registro para esta excursion/zona en
               // informacion x excursion, y en caso contrario insertarla.

               ActualizarInfoxExcursion;
             END;

    OnDelete=VAR
               lrParte@1103355000 : Record 7010360;
               lrRecogida@1103355001 : Record 7010360;
             BEGIN
               // AJF 28/05/08
               // Al eliminar el subtrayecto hay que comprobar si existe el parte de recogida y preguntar si quiere eliminarse.

               lrParte.GET("N§ Parte");

               IF lrParte."Recogida Generada" <> '' THEN BEGIN
                 IF lrRecogida.GET(lrParte."Recogida Generada") THEN
                   IF CONFIRM(Mess001, FALSE, "N§ Parte") THEN BEGIN
                     lrRecogida.DELETE(TRUE);
                     lrParte.VALIDATE("Recogida Generada", '');
                     lrParte.MODIFY(TRUE);
                   END
                   ELSE
                     IF NOT CONFIRM(Mess002, FALSE, "N§ Parte") THEN
                       ERROR(Error003);
               END;
             END;

    CaptionML=ESP=Subtrayectos x Parte;
    LookupFormID=Form7035407;
    DrillDownFormID=Form7035407;
  }
  FIELDS
  {
    { 1   ;   ;N§ Parte            ;Code20        ;TableRelation=Parte."N§ Parte";
                                                   CaptionML=ESP=N§ Parte;
                                                   Description=PK, FK Parte }
    { 6   ;   ;Hora Inicio         ;Time          ;CaptionML=ESP=Hora Inicio }
    { 7   ;   ;Hora Fin            ;Time          ;CaptionML=ESP=Hora Fin }
    { 8   ;   ;Kilometros          ;Decimal       ;CaptionML=ESP=Kilometros }
    { 9   ;   ;Vehiculo a disposicion;Boolean     ;CaptionML=ESP=Vehiculo a disposicion }
    { 10  ;   ;Mismo vehiculo      ;Boolean       ;CaptionML=ESP=Mismo vehiculo }
    { 11  ;   ;Punto Desde Subtrayecto;Code10     ;TableRelation="Punto de recogida".Codigo;
                                                   CaptionML=ESP=Punto Desde Subtrayecto;
                                                   Description=FK Punto de Recogida }
    { 12  ;   ;Hora Desde Subtrayecto;Time        ;OnValidate=BEGIN
                                                                IF "Hora Fin" <> 0T THEN
                                                                  IF ("Hora Desde Subtrayecto" < "Hora Inicio") OR ("Hora Desde Subtrayecto" > "Hora Fin") THEN
                                                                    ERROR(Error001, FIELDCAPTION("Hora Desde Subtrayecto"), "Hora Inicio", "Hora Fin");
                                                              END;

                                                   CaptionML=ESP=Hora Desde Subtrayecto;
                                                   Description=entre Hora Inicio y Hora Fin }
    { 13  ;   ;Punto Hasta Subtrayecto;Code10     ;TableRelation="Punto de recogida".Codigo;
                                                   CaptionML=ESP=Punto Hasta Subtrayecto;
                                                   Description=FK Punto de Recogida }
    { 14  ;   ;Hora Hasta Subtrayecto;Time        ;OnValidate=BEGIN
                                                                IF "Hora Fin" <> 0T THEN
                                                                  IF ("Hora Hasta Subtrayecto" < "Hora Inicio") OR ("Hora Hasta Subtrayecto" > "Hora Fin") THEN
                                                                    ERROR(Error001, FIELDCAPTION("Hora Hasta Subtrayecto"), "Hora Inicio", "Hora Fin");

                                                                // AJF 06/10/08
                                                                // Quito el control entre Hora desde/ Hora hasta, el subtrayecto puede ocurrir entre dias.
                                                                //IF ("Hora Hasta Subtrayecto" <= "Hora Desde Subtrayecto") THEN
                                                                //  ERROR(Error002, "Hora Desde Subtrayecto");
                                                              END;

                                                   CaptionML=ESP=Hora Hasta Subtrayecto;
                                                   Description=entre Hora Inicio y Hora Fin y posterior a Hora Desde }
  }
  KEYS
  {
    {    ;N§ Parte                                ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Error001@1103355000 : TextConst 'ESP=La %1 debe estar entre La Hora Inicio (%2) y Hora Fin (%3).';
      Error002@1103355001 : TextConst 'ESP=La Hora Hasta Subtrayecto debe ser posterior a la Hora Desde Subtrayecto (%1).';
      Error003@1103355004 : TextConst 'ESP=Operacion detenida.';
      Error004@1103355005 : TextConst 'ESP=Ya existe un Subtrayecto para el parte %1.';
      Mess001@1103355002 : TextConst 'ESP=El parte %1 tiene un parte de recogida asociado. ¨Desea Eliminar el parte de recogida?';
      Mess002@1103355003 : TextConst 'ESP=¨Desea eliminar el subtrayecto dejando el parte de recogida asociado al parte %1?';
      Text001@1103355006 : TextConst 'ESP=No existe informaci¢n x excursion para la excursion, zona y fecha del parte. ¨Desea introducir un nuevo registro con los datos del subtrayecto?';

    PROCEDURE ActualizarInfoxExcursion@1103355001();
    VAR
      lrInfoxExcursion@1103355001 : Record 7035371;
      lrParte@1103355000 : Record 7010360;
      lrCond@1103355005 : Record 7010420;
      lfSelFechas@1103355002 : Form 7010457;
      lwFechaDesde@1103355003 : Date;
      lwFechaHasta@1103355004 : Date;
    BEGIN
      // ActualizarInfoxExcursion

      lrParte.GET("N§ Parte");

      lrInfoxExcursion.SETCURRENTKEY( "Codigo Servicio", "Zona fisica", "Fecha Desde");
      lrInfoxExcursion.SETRANGE("Codigo Servicio"     , lrParte."Codigo Servicio");
      lrInfoxExcursion.SETRANGE("Zona fisica"         , lrParte."Zona parte");
      lrInfoxExcursion.SETFILTER("Fecha Desde", '<=%1', lrParte.Fecha);
      lrInfoxExcursion.SETFILTER("Fecha Hasta", '>=%1', lrParte.Fecha);

      IF lrInfoxExcursion.ISEMPTY THEN BEGIN

        IF NOT CONFIRM(Text001) THEN
          EXIT;
        // definimos el rango de fechas libres que hay para elegir

        lrInfoxExcursion.RESET;
        lrInfoxExcursion.SETCURRENTKEY( "Codigo Servicio", "Zona fisica", "Fecha Desde");
        lrInfoxExcursion.SETRANGE("Codigo Servicio"     , lrParte."Codigo Servicio");
        lrInfoxExcursion.SETRANGE("Zona fisica"         , lrParte."Zona parte");
        lrInfoxExcursion.SETFILTER("Fecha Desde", '<%1', lrParte.Fecha);
        IF lrInfoxExcursion.FINDLAST THEN
          lwFechaDesde := lrInfoxExcursion."Fecha Hasta" + 1;

        lrInfoxExcursion.SETFILTER("Fecha Desde", '>%1', lrParte.Fecha);
        IF lrInfoxExcursion.FINDLAST THEN
          lwFechaHasta := lrInfoxExcursion."Fecha Desde" - 1;

        // AJF 07/01/09
        // Evito borrar el registro, ya que ahora tiene datos permanentes.
        IF lrCond.GET(USERID) THEN
          lrCond.LimpiaRegistro
        ELSE BEGIN
          lrCond.INIT;
          lrCond.Usuario := USERID;
          lrCond.INSERT;
        END;

        lrCond."Fecha desde" := lwFechaDesde;
        lrCond."Fecha hasta" := lwFechaDesde;
        lrCond.MODIFY;

        lrCond.SETRECFILTER;

        COMMIT;

        lfSelFechas.SETRECORD   (lrCond);
        lfSelFechas.SETTABLEVIEW(lrCond);
        lfSelFechas.ActivaModoRango(lwFechaDesde, lwFechaHasta, lrParte.Fecha);
        lfSelFechas.RUNMODAL;

        lfSelFechas.GETRECORD(lrCond);

        // LLamamos el form de seleccion de fechas.

        lrInfoxExcursion.RESET;
        lrInfoxExcursion.TRANSFERFIELDS(Rec, FALSE);
        lrInfoxExcursion."Codigo Servicio" := lrParte."Codigo Servicio";
        lrInfoxExcursion."Zona fisica"     := lrParte."Zona parte";
        lrInfoxExcursion."Fecha Desde"     := lrCond."Fecha desde";
        lrInfoxExcursion."Fecha Hasta"     := lrCond."Fecha hasta";

        lrInfoxExcursion.INSERT(TRUE);

      END;
    END;

    BEGIN
    END.
  }
}
