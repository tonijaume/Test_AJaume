OBJECT Table 7009742 Periodo reserva
{
  OBJECT-PROPERTIES
  {
    Date=07/07/15;
    Time=12:01:06;
    Modified=Yes;
    Version List=AIC2009,CNT-OC-14035;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               rPar.FINDFIRST;
               IF NOT rPar."Empresa Delegacion" THEN
                 ERROR(Text001);

               IF rCab.GET(Delegacion, "N§ Interno") THEN
               BEGIN
                 IF NOT rCab.Mantenimiento THEN
                   ERROR(Text002);

                 _GetDatosCabecera; //+$035
               END;

               "Fecha creacion" := CURRENTDATETIME; //+$005
               "Usuario creacion" := USERID; //+$010

               CheckEnvioConfirmacion(FALSE); //+$007 //+$012
               _MarkCabeceraGenerada; //+$011

               // AJS 14.01.2010, Insertamos historico

               cPar.intro_historic(Delegacion, "N§ Interno", 0, 0, 0, Text035, Text036, '');
             END;

    OnModify=BEGIN
               rPar.GET;
               IF NOT rPar."Empresa Delegacion" THEN
                 ERROR(Text003);

               CheckEnvioConfirmacion(FALSE); //+$007 //+$012

               {
               IF lookupentrada THEN
               BEGIN
                 lookupentrada := FALSE;
                 sw_entrada := TRUE;

                 validate_entrada;
               END;

               IF lookupsalida THEN
               BEGIN
                 lookupsalida := FALSE;
                 sw_salida := TRUE;

                 validate_salida;
               END;
               }

               Replicado:= FALSE;

               _MarkCabeceraGenerada; //+$011
             END;

    OnDelete=VAR
               rBack@1103355000 : Record 7009846;
               rPaxTOcir@1103355001 : Record 7010188;
             BEGIN

               rPar.FINDFIRST;
               IF NOT rPar."Empresa Delegacion" THEN
                 ERROR(Text005);

               // Borrar reservas hotel

               rRsvHot.RESET;
               rRsvHot.SETCURRENTKEY(Delegacion,
                                     "N§ Interno",
                                     "N§ Periodo");
               rRsvHot.SETRANGE(Delegacion  , Delegacion);
               rRsvHot.SETRANGE("N§ Interno", "N§ Interno");
               rRsvHot.SETRANGE("N§ Periodo", "N§ Periodo");
               IF rRsvHot.FINDSET(TRUE) THEN
                 rRsvHot.DELETEALL(TRUE);

               // Borrar reserva transfer

               rRsvTra.RESET;
               rRsvTra.SETCURRENTKEY(Delegacion,
                                     "N§ Interno",
                                     "N§ Periodo");
               rRsvTra.SETRANGE(Delegacion  , Delegacion);
               rRsvTra.SETRANGE("N§ Interno", "N§ Interno");
               rRsvTra.SETRANGE("N§ Periodo", "N§ Periodo");
               IF rRsvTra.FINDSET(TRUE) THEN
                 rRsvTra.DELETEALL(TRUE);

               // Si no hay mas periodos generados y es reserva de circuito, borrar reservas circuito

               rCab.GET(Delegacion, "N§ Interno");

               rPar.FINDFIRST;
               IF (rCab.Circuito <> '') AND (rCab."Fecha Inicio Circuito" <> 0D) AND
                  (NOT GesCuaCircuito) AND (rPar."Activar m¢dulo circuitos") THEN
               BEGIN
                 rPer.RESET;
                 rPer.SETRANGE (Delegacion  , Delegacion);
                 rPer.SETRANGE ("N§ Interno", "N§ Interno");
                 rPer.SETFILTER("N§ Periodo", '<>%1', "N§ Periodo");
                 rPer.SETRANGE (Generada    , TRUE);
                 IF NOT rPer.FINDFIRST THEN
                 BEGIN
                   rPaxTOcir.SETCURRENTKEY("N§ Interno");
                   rPaxTOcir.SETRANGE("N§ Interno", "N§ Interno");
                   IF rPaxTOcir.FINDSET(TRUE) THEN
                     rPaxTOcir.DELETEALL; //+$032
                 END;
               END;

               rCom.RESET;
               rCom.SETRANGE(Delegacion    , Delegacion);
               rCom.SETRANGE("N§ Interno"  , "N§ Interno");
               rCom.SETRANGE("N§ Periodo"  , "N§ Periodo");
               rCom.SETRANGE("Tipo Reserva", rCom."Tipo Reserva"::Periodo);
               IF rCom.FINDSET(TRUE) THEN
                 rCom.DELETEALL(TRUE);

               //. Gestion Backup
               IF rPar."Tipo Anulacion reserva" = rPar."Tipo Anulacion reserva"::Backup THEN
               BEGIN
                 rBack.TRANSFERFIELDS(Rec);
                 IF NOT rBack.INSERT THEN
                   rBack.MODIFY;
               END;

               //. Mantenimiento del campo Generada del Fichero Cabecera Reserva
               rPer.RESET;
               rPer.SETRANGE (Delegacion       , Delegacion);
               rPer.SETRANGE ("N§ Interno"     , "N§ Interno");
               rPer.SETFILTER("N§ Periodo"     , '<>%1', "N§ Periodo");
               rPer.SETFILTER("Hotel reservado", '<>%1', ''); //+$006
               rPer.SETFILTER("Fecha entrada"  , '<>%1', 0D); //+$006
               rPer.SETRANGE (Generada         , FALSE);
               IF NOT rPer.FINDFIRST THEN
               BEGIN
                 rPer.SETRANGE(Generada, TRUE);
                 IF rPer.FINDFIRST THEN
                 BEGIN
                   IF rCab.GET(Delegacion, "N§ Interno") THEN
                   BEGIN
                     rCab.Generada := TRUE;
                     rCab.MODIFY;
                   END;
                 END
                 ELSE
                 BEGIN
                   IF rCab.GET(Delegacion, "N§ Interno") THEN
                   BEGIN
                     rCab.Generada := FALSE;
                     rCab.MODIFY;
                   END;
                 END;
               END;

               CheckEnvioConfirmacion(TRUE); //+$007 //+$012

               cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", 0, 1, Text007, Text008, '');
             END;

    OnRename=BEGIN
               ERROR(Text009);
             END;

    CaptionML=[ENU=Booking Period;
               ESP=Periodo reserva];
    LookupFormID=Form7009791;
    DrillDownFormID=Form7009791;
  }
  FIELDS
  {
    { 1   ;   ;N§ Interno          ;Integer       ;TableRelation="Cabecera reserva"."N§ Interno";
                                                   CaptionML=[ENU=Internal No.;
                                                              ESP=N§ Interno];
                                                   Description=PK, FK Cabecera;
                                                   Editable=No }
    { 3   ;   ;N§ Periodo          ;Integer       ;CaptionML=[ENU=Period No.;
                                                              ESP=N§ Periodo];
                                                   Description=PK;
                                                   Editable=No }
    { 5   ;   ;Compa¤ia entrada    ;Code10        ;TableRelation="Compa¤ia aerea".Codigo;
                                                   OnValidate=BEGIN
                                                                // Bajar a reserva hotel

                                                                rRsvHot.RESET;
                                                                rRsvHot.SETCURRENTKEY(Delegacion,
                                                                                      "N§ Interno",
                                                                                      "N§ Periodo");
                                                                rRsvHot.SETRANGE(Delegacion  , Delegacion);
                                                                rRsvHot.SETRANGE("N§ Interno", "N§ Interno");
                                                                rRsvHot.SETRANGE("N§ Periodo", "N§ Periodo");
                                                                IF rRsvHot.FINDSET(TRUE) THEN
                                                                  rRsvHot.MODIFYALL("Compa¤ia entrada", "Compa¤ia entrada", TRUE);

                                                                // Bajar a reserva transfer

                                                                rRsvTra.RESET;
                                                                rRsvTra.SETCURRENTKEY(Delegacion,
                                                                                      "N§ Interno",
                                                                                      "N§ Periodo");
                                                                rRsvTra.SETRANGE(Delegacion  , Delegacion);
                                                                rRsvTra.SETRANGE("N§ Interno", "N§ Interno");
                                                                rRsvTra.SETRANGE("N§ Periodo", "N§ Periodo");
                                                                IF rRsvTra.FINDSET(TRUE) THEN BEGIN
                                                                  REPEAT
                                                                    rRsvTra.VALIDATE("Compa¤ia entrada", "Compa¤ia entrada");
                                                                    rRsvTra.MODIFY;
                                                                  UNTIL rRsvTra.NEXT = 0;
                                                                END;

                                                                // Bajar a los acompa¤antes de la reserva

                                                                rAco.RESET;
                                                                rAco.SETRANGE(Delegacion  , Delegacion);
                                                                rAco.SETRANGE("N§ Interno", "N§ Interno");
                                                                IF rAco.FINDSET(TRUE) THEN
                                                                  rAco.MODIFYALL("Compa¤ia entrada", "Compa¤ia entrada");

                                                                //: Historico

                                                                cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", 0, 1, FIELDCAPTION("Compa¤ia entrada"),
                                                                                    xRec."Compa¤ia entrada", "Compa¤ia entrada");
                                                              END;

                                                   CaptionML=[ENU=Arrival company;
                                                              ESP=Compa¤ia entrada];
                                                   Description=FK Compa¤ia;
                                                   Editable=No }
    { 7   ;   ;Vuelo entrada       ;Code10        ;OnValidate=BEGIN
                                                                // Bajar a reserva hotel

                                                                rRsvHot.RESET;
                                                                rRsvHot.SETCURRENTKEY(Delegacion,
                                                                                      "N§ Interno",
                                                                                      "N§ Periodo");
                                                                rRsvHot.SETRANGE(Delegacion  , Delegacion);
                                                                rRsvHot.SETRANGE("N§ Interno", "N§ Interno");
                                                                rRsvHot.SETRANGE("N§ Periodo", "N§ Periodo");
                                                                IF rRsvHot.FINDSET(TRUE) THEN
                                                                  rRsvHot.MODIFYALL("Vuelo entrada", "Vuelo entrada", TRUE);

                                                                // Bajar a reserva transfer

                                                                rRsvTra.RESET;
                                                                rRsvTra.SETCURRENTKEY(Delegacion,
                                                                                      "N§ Interno",
                                                                                      "N§ Periodo");
                                                                rRsvTra.SETRANGE(Delegacion  , Delegacion);
                                                                rRsvTra.SETRANGE("N§ Interno", "N§ Interno");
                                                                rRsvTra.SETRANGE("N§ Periodo", "N§ Periodo");
                                                                IF rRsvTra.FINDSET(TRUE) THEN
                                                                  REPEAT
                                                                    rRsvTra.VALIDATE("Vuelo entrada", "Vuelo entrada");
                                                                    rRsvTra.MODIFY;
                                                                  UNTIL rRsvTra.NEXT = 0;

                                                                // Bajar a los acompa¤antes

                                                                rAco.RESET;
                                                                rAco.SETRANGE(Delegacion  , Delegacion);
                                                                rAco.SETRANGE("N§ Interno", "N§ Interno");
                                                                IF rAco.FINDSET(TRUE) THEN
                                                                  rAco.MODIFYALL("Vuelo entrada", "Vuelo entrada");

                                                                //: Historico

                                                                cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", 0, 1, FIELDCAPTION("Vuelo entrada"),
                                                                                    xRec."Vuelo entrada", "Vuelo entrada");
                                                              END;

                                                   CaptionML=[ENU=Arrival flight;
                                                              ESP=Vuelo entrada];
                                                   Editable=No }
    { 9   ;   ;Fecha entrada       ;Date          ;OnValidate=BEGIN
                                                                IF "Fecha entrada" <> xRec."Fecha entrada" THEN
                                                                  CheckContratoTransfer;

                                                                validate_entrada;
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF "Fecha entrada" = 0D THEN
                                                                ERROR (Text010);

                                                              rPlan.RESET;
                                                              rPlan.SETRANGE("Entrada/Salida", rPlan."Entrada/Salida"::Entrada);
                                                              rPlan.SETFILTER(Fecha, '=%1', "Fecha entrada");
                                                              sw_entrada := FALSE;
                                                              IF FORM.RUNMODAL(7009799, rPlan) = ACTION::LookupOK THEN
                                                              BEGIN

                                                                //+$001
                                                                IF NOT CheckProductoTransfer THEN
                                                                  ERROR(Text037);
                                                                //-$001

                                                                "Fecha entrada" := rPlan.Fecha;

                                                                VALIDATE("Compa¤ia entrada"    , rPlan.Compa¤ia);
                                                                VALIDATE("Vuelo entrada"       , rPlan.Vuelo);
                                                                VALIDATE("Terminal entrada"    , rPlan.Terminal);
                                                                VALIDATE("Hora entrada"        , rPlan."Hora Entrada");
                                                                VALIDATE("IATA origen entrada" , rPlan.Origen);
                                                                VALIDATE("IATA destino entrada", rPlan.Destino);

                                                                VALIDATE("Fecha entrada");
                                                              END;

                                                              {*
                                                              // Bajar a Hotel circuito

                                                              rPar.FINDFIRST;
                                                              IF (NOT GesCuaCircuito) AND (rPar."Activar m¢dulo circuitos") THEN
                                                              BEGIN
                                                                rHotCir.SETCURRENTKEY(Delegacion, "N§ interno", Periodo);
                                                                rHotCir.SETRANGE(Delegacion  , Delegacion);
                                                                rHotCir.SETRANGE("N§ interno", "N§ Interno");
                                                                rHotCir.SETRANGE(Periodo     , "N§ Periodo");
                                                                IF rHotCir.FINDFIRST THEN BEGIN
                                                                  rHotCir.Establecer_Gestion_Cabecera(TRUE);
                                                                  rHotCir.VALIDATE("Fecha Entrada", "Fecha entrada");
                                                                  rHotCir.MODIFY;
                                                                  rHotCir.Establecer_Gestion_Cabecera(FALSE);
                                                                END;
                                                              END;
                                                              *}
                                                            END;

                                                   CaptionML=[ENU=Arrival Date;
                                                              ESP=Fecha entrada];
                                                   NotBlank=Yes }
    { 11  ;   ;Terminal entrada    ;Code1         ;OnValidate=BEGIN
                                                                // Bajar a reserva hotel

                                                                rRsvHot.RESET;
                                                                rRsvHot.SETCURRENTKEY(Delegacion,
                                                                                      "N§ Interno",
                                                                                      "N§ Periodo");
                                                                rRsvHot.SETRANGE(Delegacion  , Delegacion);
                                                                rRsvHot.SETRANGE("N§ Interno", "N§ Interno");
                                                                rRsvHot.SETRANGE("N§ Periodo", "N§ Periodo");
                                                                IF rRsvHot.FINDSET(TRUE) THEN
                                                                  rRsvHot.MODIFYALL("Terminal entrada", "Terminal entrada");

                                                                // Bajar a reserva transfer

                                                                rRsvTra.RESET;
                                                                rRsvTra.SETCURRENTKEY(Delegacion,
                                                                                      "N§ Interno",
                                                                                      "N§ Periodo");
                                                                rRsvTra.SETRANGE(Delegacion  , Delegacion);
                                                                rRsvTra.SETRANGE("N§ Interno", "N§ Interno");
                                                                rRsvTra.SETRANGE("N§ Periodo", "N§ Periodo");
                                                                IF rRsvTra.FINDSET(TRUE) THEN
                                                                  rRsvTra.MODIFYALL("Terminal entrada", "Terminal entrada", TRUE);

                                                                // Bajar a los acompa¤antes

                                                                rAco.RESET;
                                                                rAco.SETRANGE(Delegacion  , Delegacion);
                                                                rAco.SETRANGE("N§ Interno", "N§ Interno");
                                                                IF rAco.FINDSET(TRUE) THEN
                                                                  rAco.MODIFYALL("Terminal entrada", "Terminal entrada");

                                                                // Historico

                                                                cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", 0, 1, FIELDCAPTION("Terminal entrada"),
                                                                                    xRec."Terminal entrada", "Terminal entrada");
                                                              END;

                                                   CaptionML=[ENU=Arrival terminal;
                                                              ESP=Terminal entrada];
                                                   Editable=No }
    { 13  ;   ;Hora entrada        ;Time          ;OnValidate=BEGIN
                                                                // Bajar a reserva hotel

                                                                rRsvHot.RESET;
                                                                rRsvHot.SETCURRENTKEY(Delegacion,
                                                                                      "N§ Interno",
                                                                                      "N§ Periodo");
                                                                rRsvHot.SETRANGE(Delegacion  , Delegacion);
                                                                rRsvHot.SETRANGE("N§ Interno", "N§ Interno");
                                                                rRsvHot.SETRANGE("N§ Periodo", "N§ Periodo");
                                                                IF rRsvHot.FINDSET(TRUE) THEN
                                                                  rRsvHot.MODIFYALL("Hora entrada", "Hora entrada", TRUE);

                                                                // Bajar a reserva transfer

                                                                rRsvTra.RESET;
                                                                rRsvTra.SETCURRENTKEY(Delegacion,
                                                                                      "N§ Interno",
                                                                                      "N§ Periodo");
                                                                rRsvTra.SETRANGE(Delegacion  , Delegacion);
                                                                rRsvTra.SETRANGE("N§ Interno", "N§ Interno");
                                                                rRsvTra.SETRANGE("N§ Periodo", "N§ Periodo");
                                                                IF rRsvTra.FINDSET(TRUE) THEN
                                                                  rRsvTra.MODIFYALL("Hora entrada", "Hora entrada", TRUE);

                                                                // Bajar a los acompa¤antes

                                                                rAco.RESET;
                                                                rAco.SETRANGE(Delegacion  , Delegacion);
                                                                rAco.SETRANGE("N§ Interno", "N§ Interno");
                                                                IF rAco.FINDSET(TRUE) THEN
                                                                  rAco.MODIFYALL("Hora entrada", "Hora entrada");

                                                                // Historico

                                                                cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", 0, 1, FIELDCAPTION("Hora entrada"),
                                                                                    STRSUBSTNO('%1', xRec."Hora entrada"), STRSUBSTNO('%1', "Hora entrada"));
                                                              END;

                                                   CaptionML=[ENU=Arrival time;
                                                              ESP=Hora entrada];
                                                   Editable=No }
    { 15  ;   ;IATA origen entrada ;Code10        ;TableRelation=Aeropuerto.Aeropuerto;
                                                   OnValidate=BEGIN
                                                                // Bajar a reserva hotel

                                                                IF "IATA origen entrada" <> xRec."IATA origen entrada" THEN
                                                                BEGIN
                                                                  rRsvHot.RESET;
                                                                  rRsvHot.SETCURRENTKEY(Delegacion,
                                                                                        "N§ Interno",
                                                                                        "N§ Periodo");
                                                                  rRsvHot.SETRANGE(Delegacion  , Delegacion);
                                                                  rRsvHot.SETRANGE("N§ Interno", "N§ Interno");
                                                                  rRsvHot.SETRANGE("N§ Periodo", "N§ Periodo");
                                                                  IF rRsvHot.FINDSET(TRUE) THEN
                                                                    rRsvHot.MODIFYALL("IATA origen entrada", "IATA origen entrada", TRUE);

                                                                  // Bajar a reserva transfer

                                                                  rRsvTra.RESET;
                                                                  rRsvTra.SETCURRENTKEY(Delegacion,
                                                                                        "N§ Interno",
                                                                                        "N§ Periodo");
                                                                  rRsvTra.SETRANGE(Delegacion  , Delegacion);
                                                                  rRsvTra.SETRANGE("N§ Interno", "N§ Interno");
                                                                  rRsvTra.SETRANGE("N§ Periodo", "N§ Periodo");
                                                                  IF rRsvTra.FINDSET(TRUE) THEN
                                                                    rRsvTra.MODIFYALL("IATA origen entrada", "IATA origen entrada", TRUE);

                                                                  // Bajar a los acompa¤antes

                                                                  rAco.RESET;
                                                                  rAco.SETRANGE(Delegacion  , Delegacion);
                                                                  rAco.SETRANGE("N§ Interno", "N§ Interno");
                                                                  IF rAco.FINDSET(TRUE) THEN
                                                                    rAco.MODIFYALL("IATA origen entrada", "IATA origen entrada");

                                                                  // Historico

                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", 0, 1, FIELDCAPTION("IATA origen entrada"),
                                                                                      xRec."IATA origen entrada", "IATA origen entrada");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Arrival origin IATA;
                                                              ESP=IATA origen entrada];
                                                   Description=FK Aeropuerto;
                                                   Editable=No }
    { 17  ;   ;IATA destino entrada;Code10        ;TableRelation=Aeropuerto.Aeropuerto WHERE (Aeropuerto Local=CONST(Yes));
                                                   OnValidate=BEGIN
                                                                // Bajar a reserva hotel

                                                                CheckContratoTransfer;

                                                                rRsvHot.RESET;
                                                                rRsvHot.SETCURRENTKEY(Delegacion,
                                                                                      "N§ Interno",
                                                                                      "N§ Periodo");
                                                                rRsvHot.SETRANGE(Delegacion  , Delegacion);
                                                                rRsvHot.SETRANGE("N§ Interno", "N§ Interno");
                                                                rRsvHot.SETRANGE("N§ Periodo", "N§ Periodo");
                                                                IF rRsvHot.FINDSET(TRUE) THEN
                                                                  rRsvHot.MODIFYALL("IATA destino entrada", "IATA destino entrada", TRUE);

                                                                // Bajar a reserva transfer

                                                                rRsvTra.RESET;
                                                                rRsvTra.SETCURRENTKEY(Delegacion,
                                                                                      "N§ Interno",
                                                                                      "N§ Periodo");
                                                                rRsvTra.SETRANGE(Delegacion  , Delegacion);
                                                                rRsvTra.SETRANGE("N§ Interno", "N§ Interno");
                                                                rRsvTra.SETRANGE("N§ Periodo", "N§ Periodo");
                                                                IF rRsvTra.FINDSET(TRUE) THEN
                                                                  rRsvTra.MODIFYALL("IATA destino entrada", "IATA destino entrada", TRUE);

                                                                // Bajar a los acompa¤antes

                                                                rAco.RESET;
                                                                rAco.SETRANGE(Delegacion  , Delegacion);
                                                                rAco.SETRANGE("N§ Interno", "N§ Interno");
                                                                IF rAco.FINDSET(TRUE) THEN
                                                                  rAco.MODIFYALL("IATA destino entrada", "IATA destino entrada");

                                                                // Historico

                                                                cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", 0, 1, FIELDCAPTION("IATA destino entrada"),
                                                                                    xRec."IATA destino entrada", "IATA destino entrada");
                                                              END;

                                                   CaptionML=[ENU=Arrival destination IATA;
                                                              ESP=IATA destino entrada];
                                                   Description=Aeropuerto.Aeropuerto WHERE (Aeropuerto Local=CONST(Yes)) }
    { 19  ;   ;Compa¤ia salida     ;Code10        ;TableRelation="Compa¤ia aerea".Codigo;
                                                   OnValidate=BEGIN
                                                                // Bajar a reserva hotel

                                                                rRsvHot.RESET;
                                                                rRsvHot.SETCURRENTKEY(Delegacion,
                                                                                      "N§ Interno",
                                                                                      "N§ Periodo");
                                                                rRsvHot.SETRANGE(Delegacion  , Delegacion);
                                                                rRsvHot.SETRANGE("N§ Interno", "N§ Interno");
                                                                rRsvHot.SETRANGE("N§ Periodo", "N§ Periodo");
                                                                IF rRsvHot.FINDSET(TRUE) THEN
                                                                  rRsvHot.MODIFYALL("Compa¤ia salida", "Compa¤ia salida", TRUE);

                                                                // Bajar a reserva transfer

                                                                rRsvTra.RESET;
                                                                rRsvTra.SETCURRENTKEY(Delegacion,
                                                                                      "N§ Interno",
                                                                                      "N§ Periodo");
                                                                rRsvTra.SETRANGE(Delegacion  , Delegacion);
                                                                rRsvTra.SETRANGE("N§ Interno", "N§ Interno");
                                                                rRsvTra.SETRANGE("N§ Periodo", "N§ Periodo");
                                                                IF rRsvTra.FINDSET(TRUE) THEN BEGIN
                                                                  REPEAT
                                                                    rRsvTra.VALIDATE("Compa¤ia salida", "Compa¤ia salida");
                                                                    rRsvTra.MODIFY;
                                                                  UNTIL rRsvTra.NEXT = 0;
                                                                END;

                                                                // Bajar a los acompa¤antes

                                                                rAco.RESET;
                                                                rAco.SETRANGE(Delegacion  , Delegacion);
                                                                rAco.SETRANGE("N§ Interno", "N§ Interno");
                                                                IF rAco.FINDSET(TRUE) THEN
                                                                  rAco.MODIFYALL("Compa¤ia salida", "Compa¤ia salida");

                                                                // Historico

                                                                cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", 0, 1, FIELDCAPTION("Compa¤ia salida"),
                                                                                    xRec."Compa¤ia salida", "Compa¤ia salida");
                                                              END;

                                                   CaptionML=[ENU=Departure company;
                                                              ESP=Compa¤ia salida];
                                                   Description=FK Compa¤ia;
                                                   Editable=No }
    { 21  ;   ;Vuelo salida        ;Code10        ;OnValidate=BEGIN
                                                                // Bajar a reserva hotel

                                                                rRsvHot.RESET;
                                                                rRsvHot.SETCURRENTKEY(Delegacion,
                                                                                      "N§ Interno",
                                                                                      "N§ Periodo");
                                                                rRsvHot.SETRANGE(Delegacion  , Delegacion);
                                                                rRsvHot.SETRANGE("N§ Interno", "N§ Interno");
                                                                rRsvHot.SETRANGE("N§ Periodo", "N§ Periodo");
                                                                IF rRsvHot.FINDSET(TRUE) THEN
                                                                  rRsvHot.MODIFYALL("Vuelo salida", "Vuelo salida", TRUE);

                                                                // Bajar a reserva transfer

                                                                rRsvTra.RESET;
                                                                rRsvTra.SETCURRENTKEY(Delegacion,
                                                                                      "N§ Interno",
                                                                                      "N§ Periodo");
                                                                rRsvTra.SETRANGE(Delegacion  , Delegacion);
                                                                rRsvTra.SETRANGE("N§ Interno", "N§ Interno");
                                                                rRsvTra.SETRANGE("N§ Periodo", "N§ Periodo");
                                                                IF rRsvTra.FINDSET(TRUE) THEN
                                                                  REPEAT
                                                                    rRsvTra."Vuelo salida" := "Vuelo salida";
                                                                    rRsvTra.MODIFY;
                                                                  UNTIL rRsvTra.NEXT = 0;

                                                                // Bajar a los acompa¤antes

                                                                rAco.RESET;
                                                                rAco.SETRANGE(Delegacion  , Delegacion);
                                                                rAco.SETRANGE("N§ Interno", "N§ Interno");
                                                                IF rAco.FINDSET(TRUE) THEN
                                                                  rAco.MODIFYALL("Vuelo salida", "Vuelo salida");

                                                                // Historico

                                                                cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", 0, 1, FIELDCAPTION("Vuelo salida"),
                                                                                    xRec."Vuelo salida", "Vuelo salida");
                                                              END;

                                                   CaptionML=[ENU=Departure flight;
                                                              ESP=Vuelo salida];
                                                   Editable=No }
    { 23  ;   ;Fecha salida        ;Date          ;OnValidate=BEGIN
                                                                validate_salida;
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF "Fecha salida" = 0D THEN
                                                                ERROR(Text011);

                                                              rPlan.RESET;
                                                              rPlan.SETRANGE("Entrada/Salida", rPlan."Entrada/Salida"::Salida);
                                                              rPlan.SETFILTER(Fecha, '=%1', "Fecha salida");
                                                              sw_salida := TRUE;
                                                              IF FORM.RUNMODAL(7009799, rPlan) = ACTION::LookupOK THEN
                                                              BEGIN

                                                                //+$001
                                                                IF NOT CheckProductoTransfer THEN
                                                                  ERROR(Text037);
                                                                //-$001

                                                                "Fecha salida" := rPlan.Fecha;

                                                                VALIDATE("Compa¤ia salida"    , rPlan.Compa¤ia);
                                                                VALIDATE("Vuelo salida"       , rPlan.Vuelo);
                                                                VALIDATE("Terminal salida"    , rPlan.Terminal);
                                                                VALIDATE("Hora salida"        , rPlan."Hora Salida");
                                                                VALIDATE("IATA origen salida" , rPlan.Origen);
                                                                VALIDATE("IATA destino salida", rPlan.Destino);

                                                                VALIDATE("Fecha salida");
                                                              END;

                                                              {
                                                              // Bajar a Hotel circuito

                                                              rPar.FINDFIRST;
                                                              IF (NOT GesCuaCircuito) AND (rPar."Activar m¢dulo circuitos") THEN BEGIN
                                                                rHotCir.SETCURRENTKEY(Delegacion, "N§ interno", Periodo);
                                                                rHotCir.SETRANGE(Delegacion  , Delegacion);
                                                                rHotCir.SETRANGE("N§ interno", "N§ Interno");
                                                                rHotCir.SETRANGE(Periodo     , "N§ Periodo");
                                                                IF rHotCir.FINDFIRST THEN BEGIN
                                                                  rHotCir.Establecer_Gestion_Cabecera(TRUE);
                                                                  rHotCir.VALIDATE("Fecha Salida", "Fecha salida");
                                                                  rHotCir.MODIFY;
                                                                  rHotCir.Establecer_Gestion_Cabecera(FALSE);
                                                                END;
                                                              END;
                                                              }
                                                            END;

                                                   CaptionML=[ENU=Departure Date;
                                                              ESP=Fecha salida];
                                                   NotBlank=Yes }
    { 25  ;   ;Terminal salida     ;Code1         ;OnValidate=BEGIN
                                                                // Bajar a reserva hotel

                                                                rRsvHot.RESET;
                                                                rRsvHot.SETCURRENTKEY(Delegacion,
                                                                                      "N§ Interno",
                                                                                      "N§ Periodo");
                                                                rRsvHot.SETRANGE(Delegacion  , Delegacion);
                                                                rRsvHot.SETRANGE("N§ Interno", "N§ Interno");
                                                                rRsvHot.SETRANGE("N§ Periodo", "N§ Periodo");
                                                                IF rRsvHot.FINDSET(TRUE) THEN
                                                                  rRsvHot.MODIFYALL("Terminal salida", "Terminal salida");

                                                                // Bajar a reserva transfer

                                                                rRsvTra.RESET;
                                                                rRsvTra.SETCURRENTKEY(Delegacion,
                                                                                      "N§ Interno",
                                                                                      "N§ Periodo");
                                                                rRsvTra.SETRANGE(Delegacion  , Delegacion);
                                                                rRsvTra.SETRANGE("N§ Interno", "N§ Interno");
                                                                rRsvTra.SETRANGE("N§ Periodo", "N§ Periodo");
                                                                IF rRsvTra.FINDSET(TRUE) THEN
                                                                  rRsvTra.MODIFYALL("Terminal salida", "Terminal salida", TRUE);

                                                                // Bajar a los acompa¤antes

                                                                rAco.RESET;
                                                                rAco.SETRANGE(Delegacion  , Delegacion);
                                                                rAco.SETRANGE("N§ Interno", "N§ Interno");
                                                                IF rAco.FINDSET(TRUE) THEN
                                                                  rAco.MODIFYALL("Terminal salida", "Terminal salida");

                                                                // Historico

                                                                cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", 0, 1, FIELDCAPTION("Terminal salida"),
                                                                                    xRec."Terminal salida", "Terminal salida");
                                                              END;

                                                   CaptionML=[ENU=Departure terminal;
                                                              ESP=Terminal salida];
                                                   Editable=No }
    { 27  ;   ;Hora salida         ;Time          ;OnValidate=BEGIN
                                                                // Bajar a reserva hotel

                                                                rRsvHot.RESET;
                                                                rRsvHot.SETCURRENTKEY(Delegacion,
                                                                                      "N§ Interno",
                                                                                      "N§ Periodo");
                                                                rRsvHot.SETRANGE(Delegacion  , Delegacion);
                                                                rRsvHot.SETRANGE("N§ Interno", "N§ Interno");
                                                                rRsvHot.SETRANGE("N§ Periodo", "N§ Periodo");
                                                                IF rRsvHot.FINDSET(TRUE) THEN
                                                                  rRsvHot.MODIFYALL("Hora salida", "Hora salida", TRUE);

                                                                // Bajar a reserva transfer

                                                                rRsvTra.RESET;
                                                                rRsvTra.SETCURRENTKEY(Delegacion,
                                                                                      "N§ Interno",
                                                                                      "N§ Periodo");
                                                                rRsvTra.SETRANGE(Delegacion  , Delegacion);
                                                                rRsvTra.SETRANGE("N§ Interno", "N§ Interno");
                                                                rRsvTra.SETRANGE("N§ Periodo", "N§ Periodo");
                                                                IF rRsvTra.FINDSET(TRUE) THEN
                                                                  rRsvTra.MODIFYALL("Hora salida", "Hora salida", TRUE);

                                                                // Bajar a los acompa¤antes

                                                                rAco.RESET;
                                                                rAco.SETRANGE(Delegacion  , Delegacion);
                                                                rAco.SETRANGE("N§ Interno", "N§ Interno");
                                                                IF rAco.FINDSET(TRUE) THEN
                                                                  rAco.MODIFYALL("Hora salida", "Hora salida");

                                                                // Historico

                                                                cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", 0, 1, FIELDCAPTION("Hora salida"),
                                                                                    STRSUBSTNO('%1', xRec."Hora salida"), STRSUBSTNO('%1', "Hora salida"));
                                                              END;

                                                   CaptionML=[ENU=Departure time;
                                                              ESP=Hora salida];
                                                   Editable=No }
    { 29  ;   ;IATA origen salida  ;Code10        ;TableRelation=Aeropuerto.Aeropuerto WHERE (Aeropuerto Local=CONST(Yes));
                                                   OnValidate=BEGIN
                                                                // Bajar a reserva hotel

                                                                CheckContratoTransfer;

                                                                rRsvHot.RESET;
                                                                rRsvHot.SETCURRENTKEY(Delegacion,
                                                                                      "N§ Interno",
                                                                                      "N§ Periodo");
                                                                rRsvHot.SETRANGE(Delegacion  , Delegacion);
                                                                rRsvHot.SETRANGE("N§ Interno", "N§ Interno");
                                                                rRsvHot.SETRANGE("N§ Periodo", "N§ Periodo");
                                                                IF rRsvHot.FINDSET(TRUE) THEN
                                                                  rRsvHot.MODIFYALL("IATA origen salida", "IATA origen salida", TRUE);

                                                                // Bajar a reserva transfer

                                                                rRsvTra.RESET;
                                                                rRsvTra.SETCURRENTKEY(Delegacion,
                                                                                      "N§ Interno",
                                                                                      "N§ Periodo");
                                                                rRsvTra.SETRANGE(Delegacion  , Delegacion);
                                                                rRsvTra.SETRANGE("N§ Interno", "N§ Interno");
                                                                rRsvTra.SETRANGE("N§ Periodo", "N§ Periodo");
                                                                IF rRsvTra.FINDSET(TRUE) THEN
                                                                  rRsvTra.MODIFYALL("IATA origen salida", "IATA origen salida", TRUE);

                                                                // Bajar a los acompa¤antes

                                                                rAco.RESET;
                                                                rAco.SETRANGE(Delegacion  , Delegacion);
                                                                rAco.SETRANGE("N§ Interno", "N§ Interno");
                                                                IF rAco.FINDSET(TRUE) THEN
                                                                  rAco.MODIFYALL("IATA origen salida", "IATA origen salida");

                                                                // Historico

                                                                cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", 0, 1, FIELDCAPTION("IATA origen salida"),
                                                                                    xRec."IATA origen salida", "IATA origen salida");
                                                              END;

                                                   CaptionML=[ENU=Departure origin IATA;
                                                              ESP=IATA origen salida];
                                                   Description=Aeropuerto.Aeropuerto WHERE (Aeropuerto Local=CONST(Yes)) }
    { 31  ;   ;IATA destino salida ;Code10        ;TableRelation=Aeropuerto.Aeropuerto;
                                                   OnValidate=BEGIN
                                                                // Bajar a reserva hotel

                                                                rRsvHot.RESET;
                                                                rRsvHot.SETCURRENTKEY(Delegacion,
                                                                                      "N§ Interno",
                                                                                      "N§ Periodo");
                                                                rRsvHot.SETRANGE(Delegacion  , Delegacion);
                                                                rRsvHot.SETRANGE("N§ Interno", "N§ Interno");
                                                                rRsvHot.SETRANGE("N§ Periodo", "N§ Periodo");
                                                                IF rRsvHot.FINDSET(TRUE) THEN
                                                                  rRsvHot.MODIFYALL("IATA destino salida", "IATA destino salida", TRUE);

                                                                // Bajar a reserva transfer

                                                                rRsvTra.RESET;
                                                                rRsvTra.SETCURRENTKEY(Delegacion,
                                                                                      "N§ Interno",
                                                                                      "N§ Periodo");
                                                                rRsvTra.SETRANGE(Delegacion  , Delegacion);
                                                                rRsvTra.SETRANGE("N§ Interno", "N§ Interno");
                                                                rRsvTra.SETRANGE("N§ Periodo", "N§ Periodo");
                                                                IF rRsvTra.FINDSET(TRUE) THEN
                                                                  rRsvTra.MODIFYALL("IATA destino salida", "IATA destino salida", TRUE);

                                                                // Bajar a los acompa¤antes

                                                                rAco.RESET;
                                                                rAco.SETRANGE(Delegacion  , Delegacion);
                                                                rAco.SETRANGE("N§ Interno", "N§ Interno");
                                                                IF rAco.FINDSET(TRUE) THEN
                                                                  rAco.MODIFYALL("IATA destino salida", "IATA destino salida");

                                                                // Historico

                                                                cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", 0, 1, FIELDCAPTION("IATA destino salida"),
                                                                                    xRec."IATA destino salida", "IATA destino salida");
                                                              END;

                                                   CaptionML=[ENU=Departure destination IATA;
                                                              ESP=IATA destino salida];
                                                   Description=FK Aeropuerto;
                                                   Editable=No }
    { 33  ;   ;Paquete             ;Code10        ;TableRelation=Paquete.Codigo;
                                                   OnValidate=BEGIN
                                                                IF Generada THEN
                                                                  ERROR(Text012);

                                                                IF xRec.Paquete <> Paquete THEN
                                                                BEGIN
                                                                  CheckContratoTransfer;

                                                                  //. Historico
                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", 0, 1, FIELDCAPTION(Paquete),
                                                                                      xRec.Paquete, Paquete);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Package;
                                                              ESP=Paquete];
                                                   NotBlank=Yes;
                                                   Description=FK Paquete }
    { 35  ;   ;N§ Habitaciones     ;Integer       ;InitValue=1;
                                                   OnValidate=BEGIN
                                                                IF xRec."N§ Habitaciones" <> "N§ Habitaciones" THEN BEGIN
                                                                  CLEAR(rCab);
                                                                  comprobar_habitacion(rCab, Rec, 2);

                                                                  // Bajar a reserva hotel

                                                                  rRsvHot.RESET;
                                                                  rRsvHot.SETCURRENTKEY(Delegacion,
                                                                                        "N§ Interno",
                                                                                        "N§ Periodo");
                                                                  rRsvHot.SETRANGE(Delegacion  , Delegacion);
                                                                  rRsvHot.SETRANGE("N§ Interno", "N§ Interno");
                                                                  rRsvHot.SETRANGE("N§ Periodo", "N§ Periodo");
                                                                  IF rRsvHot.FINDSET(TRUE) THEN BEGIN
                                                                    REPEAT
                                                                      rRsvHot."N§ Habitaciones" := "N§ Habitaciones";
                                                                      rRsvHot."Modificacion critica" := TRUE;
                                                                      rRsvHot."Cambiar booking" := TRUE;
                                                                      rRsvHot.MODIFY(TRUE);
                                                                    UNTIL rRsvHot.NEXT = 0;
                                                                  END;

                                                                  // Historico
                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", 0, 1, FIELDCAPTION("N§ Habitaciones"),
                                                                                      STRSUBSTNO('%1', xRec."N§ Habitaciones"), STRSUBSTNO('%1', "N§ Habitaciones"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Rooms No.;
                                                              ESP=N§ Habitaciones];
                                                   NotBlank=Yes }
    { 37  ;   ;Habitacion          ;Code10        ;TableRelation="Conversion Habitacion"."Habitacion cupo" WHERE (Delegacion=FIELD(Delegacion),
                                                                                                                  N§ Contrato=FIELD(Contrato compra),
                                                                                                                  Tipo contrato=CONST(Compra));
                                                   OnValidate=BEGIN
                                                                {
                                                                IF NOT GesCuaCircuito THEN BEGIN
                                                                  rCab.GET(Delegacion, "N§ Interno");
                                                                  IF rCab."Habitacion Circuito" <> '' THEN
                                                                    ERROR(Text013, FIELDCAPTION(Habitacion), rCab.FIELDCAPTION("Habitacion Circuito"), rCab.TABLECAPTION);
                                                                END;
                                                                }

                                                                "Habitacion TO" := '';

                                                                rHab.RESET;
                                                                rHab.SETRANGE(Delegacion       , Delegacion);
                                                                rHab.SETRANGE("N§ Contrato"    , "Contrato compra");
                                                                rHab.SETRANGE("Tipo contrato"  , rHab."Tipo contrato"::Compra);
                                                                rHab.SETRANGE("Habitacion cupo", Habitacion);
                                                                IF NOT rHab.FINDFIRST THEN
                                                                  ERROR(Text014, Habitacion, "Contrato compra");

                                                                buscar_habitacion('', '', TRUE);
                                                                comprobar_paro_ventas("Hotel origen precios");

                                                                "Habitacion TO"     := rHab."Habitacion TO";
                                                                "Habitacion basica" := rHab."Habitacion basica";

                                                                // Bajar a reserva hotel

                                                                rRsvHot.RESET;
                                                                rRsvHot.SETCURRENTKEY(Delegacion,
                                                                                      "N§ Interno",
                                                                                      "N§ Periodo");
                                                                rRsvHot.SETRANGE(Delegacion  , Delegacion);
                                                                rRsvHot.SETRANGE("N§ Interno", "N§ Interno");
                                                                rRsvHot.SETRANGE("N§ Periodo", "N§ Periodo");
                                                                rRsvHot.SETRANGE(Responsable , TRUE);
                                                                IF rRsvHot.FINDSET(TRUE) THEN BEGIN
                                                                  REPEAT
                                                                    rRsvHot.Habitacion             := Habitacion;
                                                                    rRsvHot."Habitacion basica"    := "Habitacion basica";
                                                                    rRsvHot."Habitacion TO"        := '';
                                                                    rRsvHot."Cambiar booking"      := TRUE;
                                                                    rRsvHot."Modificacion critica" := TRUE;
                                                                    rRsvHot.MODIFY(TRUE);
                                                                  UNTIL rRsvHot.NEXT = 0;
                                                                END;

                                                                // Historico

                                                                cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", 0, 1, FIELDCAPTION(Habitacion),
                                                                                    xRec.Habitacion, Habitacion);
                                                              END;

                                                   CaptionML=[ENU=Room;
                                                              ESP=Habitacion];
                                                   NotBlank=Yes }
    { 39  ;   ;Habitacion TO       ;Code10        ;TableRelation="Conversion Habitacion"."Habitacion TO" WHERE (Delegacion=FIELD(Delegacion),
                                                                                                                N§ Contrato=FIELD(Contrato compra),
                                                                                                                Tipo contrato=CONST(Compra));
                                                   OnValidate=BEGIN
                                                                IF xRec."Habitacion TO" <> "Habitacion TO" THEN BEGIN
                                                                  rHab.RESET;
                                                                  rHab.SETRANGE(Delegacion     , Delegacion);
                                                                  rHab.SETRANGE("N§ Contrato"  , "Contrato compra");
                                                                  rHab.SETRANGE("Tipo contrato", rHab."Tipo contrato"::Compra);
                                                                  rHab.SETRANGE("Habitacion TO", "Habitacion TO");
                                                                  IF rHab.FINDFIRST THEN BEGIN
                                                                    Habitacion := rHab."Habitacion cupo";

                                                                    buscar_habitacion('', '', TRUE);
                                                                    comprobar_paro_ventas("Hotel origen precios");

                                                                    "Habitacion basica" := rHab."Habitacion basica";
                                                                    "Habitacion TO" := rHab."Habitacion TO";
                                                                  END
                                                                  ELSE
                                                                    ERROR(Text015);

                                                                  // Bajar a reserva hotel

                                                                  rRsvHot.RESET;
                                                                  rRsvHot.SETCURRENTKEY(Delegacion,
                                                                                        "N§ Interno",
                                                                                        "N§ Periodo");
                                                                  rRsvHot.SETRANGE(Delegacion  , Delegacion);
                                                                  rRsvHot.SETRANGE("N§ Interno", "N§ Interno");
                                                                  rRsvHot.SETRANGE("N§ Periodo", "N§ Periodo");
                                                                  rRsvHot.SETRANGE(Responsable , TRUE);
                                                                  IF rRsvHot.FINDSET(TRUE) THEN BEGIN
                                                                    REPEAT
                                                                      rRsvHot.Habitacion := Habitacion;
                                                                      rRsvHot."Habitacion basica" := "Habitacion basica";
                                                                      rRsvHot."Habitacion TO" := "Habitacion TO";
                                                                      rRsvHot."Cambiar booking" := TRUE;
                                                                      rRsvHot."Modificacion critica" := TRUE;
                                                                      rRsvHot.MODIFY(TRUE);
                                                                    UNTIL rRsvHot.NEXT = 0;
                                                                  END;

                                                                  // Historico

                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", 0, 1, FIELDCAPTION("Habitacion TO"),
                                                                                      xRec."Habitacion TO", "Habitacion TO");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=TO room;
                                                              ESP=Habitacion TO] }
    { 41  ;   ;Regimen             ;Code10        ;TableRelation=Regimen.Regimen;
                                                   OnValidate=BEGIN
                                                                "Regimen TO" := '';
                                                                buscar_regimen('', '');

                                                                // Bajar a reserva hotel

                                                                rRsvHot.RESET;
                                                                rRsvHot.SETCURRENTKEY(Delegacion,
                                                                                      "N§ Interno",
                                                                                      "N§ Periodo");
                                                                rRsvHot.SETRANGE(Delegacion  , Delegacion);
                                                                rRsvHot.SETRANGE("N§ Interno", "N§ Interno");
                                                                rRsvHot.SETRANGE("N§ Periodo", "N§ Periodo");
                                                                IF rRsvHot.FINDSET(TRUE) THEN BEGIN
                                                                  REPEAT
                                                                    rRsvHot.Regimen := Regimen;
                                                                    rRsvHot."Cambiar booking" := TRUE;
                                                                    rRsvHot."Modificacion critica" := TRUE;
                                                                    rRsvHot.MODIFY(TRUE);
                                                                  UNTIL rRsvHot.NEXT = 0;
                                                                END;

                                                                // Bajar a los acompa¤antes

                                                                rAco.RESET;
                                                                rAco.SETRANGE(Delegacion  , Delegacion);
                                                                rAco.SETRANGE("N§ Interno", "N§ Interno");
                                                                IF rAco.FINDSET(TRUE) THEN
                                                                  rAco.MODIFYALL(Regimen, Regimen);

                                                                // Bajar a Hotel circuito

                                                                rPar.FINDFIRST;
                                                                IF (NOT GesCuaCircuito) AND (rPar."Activar m¢dulo circuitos") THEN BEGIN
                                                                  rHotCir.SETCURRENTKEY(Delegacion, "N§ interno", Periodo);
                                                                  rHotCir.SETRANGE(Delegacion  , Delegacion);
                                                                  rHotCir.SETRANGE("N§ interno", "N§ Interno");
                                                                  rHotCir.SETRANGE(Periodo     , "N§ Periodo");
                                                                  IF rHotCir.FINDFIRST THEN BEGIN
                                                                    rHotCir.Establecer_Gestion_Cabecera(TRUE);
                                                                    rHotCir.VALIDATE(Regimen, Regimen);
                                                                    rHotCir.MODIFY;
                                                                    rHotCir.Establecer_Gestion_Cabecera(FALSE);
                                                                  END;
                                                                END;

                                                                // Historico

                                                                cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", 0, 1, FIELDCAPTION(Regimen),
                                                                                    xRec.Regimen, Regimen);
                                                              END;

                                                   CaptionML=[ENU=Board;
                                                              ESP=Regimen];
                                                   NotBlank=Yes;
                                                   Description=FK Regimen }
    { 43  ;   ;Regimen TO          ;Code10        ;OnValidate=BEGIN
                                                                IF xRec."Regimen TO" <> "Regimen TO" THEN BEGIN
                                                                  rCab.RESET;
                                                                  IF rCab.GET(Delegacion, "N§ Interno") THEN BEGIN
                                                                    IF rRegTO.GET(rCab.TourOperador, "Regimen TO") THEN BEGIN
                                                                      VALIDATE(Regimen, rRegTO.Regimen);
                                                                      "Regimen TO" := rRegTO."Regimen TO";
                                                                    END
                                                                    ELSE
                                                                      ERROR(Text016, "Regimen TO", "TourOperador Venta");
                                                                  END;

                                                                  // Bajar a reserva hotel

                                                                  rRsvHot.RESET;
                                                                  rRsvHot.SETCURRENTKEY(Delegacion,
                                                                                        "N§ Interno",
                                                                                        "N§ Periodo");
                                                                  rRsvHot.SETRANGE(Delegacion  , Delegacion);
                                                                  rRsvHot.SETRANGE("N§ Interno", "N§ Interno");
                                                                  rRsvHot.SETRANGE("N§ Periodo", "N§ Periodo");
                                                                  IF rRsvHot.FINDSET(TRUE) THEN
                                                                    rRsvHot.MODIFYALL("Regimen TO", "Regimen TO", TRUE);

                                                                  // Bajar a los acompa¤antes

                                                                  rAco.RESET;
                                                                  rAco.SETRANGE(Delegacion  , Delegacion);
                                                                  rAco.SETRANGE("N§ Interno", "N§ Interno");
                                                                  IF rAco.FINDSET(TRUE) THEN
                                                                    rAco.MODIFYALL("Regimen TO", "Regimen TO");

                                                                  // Historico

                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", 0, 1, FIELDCAPTION("Regimen TO"),
                                                                                      xRec."Regimen TO", "Regimen TO");
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              rCab.RESET;
                                                              IF rCab.GET(Delegacion, "N§ Interno") THEN BEGIN
                                                                rRegTO.RESET;
                                                                rRegTO.SETRANGE(TourOperador, rCab.TourOperador);
                                                                IF FORM.RUNMODAL(7009725, rRegTO) = ACTION::LookupOK THEN BEGIN
                                                                  Regimen := rRegTO.Regimen;
                                                                  "Regimen TO" := rRegTO."Regimen TO";

                                                                  buscar_regimen('', '');
                                                                END;
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=TO Board;
                                                              ESP=Regimen TO] }
    { 45  ;   ;Origen reserva      ;Option        ;CaptionML=[ENU=Booking origin;
                                                              ESP=Origen reserva];
                                                   OptionCaptionML=[ENU=Automatic,Manual,Division;
                                                                    ESP=Automatica,Manual,Division];
                                                   OptionString=Automatica,Manual,Division;
                                                   Editable=No }
    { 47  ;   ;Hotel reservado     ;Code20        ;TableRelation=Hotel.Hotel;
                                                   OnValidate=BEGIN
                                                                IF xRec."Hotel reservado" <> "Hotel reservado" THEN BEGIN
                                                                  // Bajar a reserva hotel

                                                                  rRsvHot.RESET;
                                                                  rRsvHot.SETCURRENTKEY(Delegacion,
                                                                                        "N§ Interno",
                                                                                        "N§ Periodo");
                                                                  rRsvHot.SETRANGE(Delegacion  , Delegacion);
                                                                  rRsvHot.SETRANGE("N§ Interno", "N§ Interno");
                                                                  rRsvHot.SETRANGE("N§ Periodo", "N§ Periodo");
                                                                  IF rRsvHot.FINDSET(TRUE) THEN BEGIN
                                                                    rRsvHot.MODIFYALL("Hotel reservado", "Hotel reservado", TRUE);
                                                                  END;

                                                                  // Pasar el Hotel reservado a los demas hoteles

                                                                  Rec.VALIDATE("Hotel Booking", "Hotel reservado");

                                                                  // ----  AJS 07.05.2003 Se ha incluido un nuevo campo en la conversion del hotel para indicar a que precios se  ----
                                                                  // ----  tiene que valorar la reserva, esto permite tener un unico codigo de hotel para booking y transfer con  ----
                                                                  // ----  con multiples hoteles de ofertas para precios distintos                                                ----

                                                                  rCab.RESET;
                                                                  IF rCab.GET(Delegacion, "N§ Interno") THEN BEGIN
                                                                    rConHotel.SETRANGE(TourOperador        , rCab.TourOperador);
                                                                    rConHotel.SETRANGE("Touroperador venta", "TourOperador Venta");
                                                                    rConHotel.SETRANGE("Hotel TO"          , "Hotel TO");
                                                                    IF NOT rConHotel.FINDFIRST THEN BEGIN
                                                                      rConHotel.SETRANGE("Touroperador venta", '');
                                                                      IF NOT rConHotel.FINDFIRST THEN
                                                                        CLEAR(rConHotel);
                                                                    END;

                                                                    IF rConHotel."Hotel estancia" <> '' THEN BEGIN
                                                                      IF rConHotel."Hotel precios" <> '' THEN BEGIN
                                                                        Rec.VALIDATE("Hotel venta"         , rConHotel."Hotel precios");
                                                                        Rec.VALIDATE("Hotel origen precios", rConHotel."Hotel precios");
                                                                      END
                                                                      ELSE BEGIN
                                                                        Rec.VALIDATE("Hotel venta"         , "Hotel reservado");
                                                                        Rec.VALIDATE("Hotel origen precios", "Hotel reservado");
                                                                      END;
                                                                    END
                                                                    ELSE BEGIN
                                                                      Rec.VALIDATE("Hotel venta"         , "Hotel reservado");
                                                                      Rec.VALIDATE("Hotel origen precios", "Hotel reservado");
                                                                    END;
                                                                  END;

                                                                  Rec.VALIDATE("Hotel Factura", "Hotel reservado");

                                                                  // Bajar a Hotel circuito

                                                                  rPar.FINDFIRST;
                                                                  IF (NOT GesCuaCircuito) AND (rPar."Activar m¢dulo circuitos") THEN BEGIN
                                                                    rHotCir.SETCURRENTKEY(Delegacion, "N§ interno", Periodo);
                                                                    rHotCir.SETRANGE(Delegacion  , Delegacion);
                                                                    rHotCir.SETRANGE("N§ interno", "N§ Interno");
                                                                    rHotCir.SETRANGE(Periodo     , "N§ Periodo");
                                                                    IF rHotCir.FINDFIRST THEN BEGIN
                                                                      rHotCir.Establecer_Gestion_Cabecera(TRUE);
                                                                      rHotCir.Hotel := "Hotel reservado";
                                                                      rHotCir.MODIFY;
                                                                      rHotCir.Establecer_Gestion_Cabecera(FALSE);
                                                                    END;
                                                                  END;

                                                                  // ----  Historico  -----

                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", 0, 1, FIELDCAPTION("Hotel reservado"),
                                                                                      xRec."Hotel reservado", "Hotel reservado");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Booked hotel;
                                                              ESP=Hotel Reservado];
                                                   Description=FK Hotel }
    { 49  ;   ;Hotel TO            ;Code20        ;OnValidate=BEGIN
                                                                IF xRec."Hotel TO" <> "Hotel TO" THEN BEGIN
                                                                  rCab.RESET;
                                                                  IF rCab.GET(Delegacion, "N§ Interno") THEN BEGIN
                                                                    rConHotel.SETRANGE(TourOperador        , rCab.TourOperador);
                                                                    rConHotel.SETRANGE("Touroperador venta", "TourOperador Venta");
                                                                    rConHotel.SETRANGE("Hotel TO"          , "Hotel TO");
                                                                    IF NOT rConHotel.FINDFIRST THEN BEGIN
                                                                      rConHotel.SETRANGE("Touroperador venta", '');
                                                                      IF NOT rConHotel.FINDFIRST THEN
                                                                        CLEAR(rConHotel);
                                                                    END;

                                                                    IF rConHotel."Hotel estancia" <> '' THEN BEGIN
                                                                      VALIDATE("Hotel reservado", rConHotel."Hotel estancia");
                                                                      "Hotel TO" := rConHotel."Hotel TO";
                                                                      IF (rConHotel."Hotel precios" <> '') AND (rConHotel."Hotel precios" <> rConHotel."Hotel estancia") THEN BEGIN
                                                                        "Hotel origen precios" := rConHotel."Hotel precios";
                                                                        "Hotel Factura"        := rConHotel."Hotel precios";
                                                                      END;
                                                                    END
                                                                    ELSE
                                                                      ERROR(Text017, rCab.TourOperador, "Hotel TO");
                                                                  END;

                                                                  // Bajar a reserva hotel

                                                                  rRsvHot.RESET;
                                                                  rRsvHot.SETCURRENTKEY(Delegacion,
                                                                                        "N§ Interno",
                                                                                        "N§ Periodo");
                                                                  rRsvHot.SETRANGE(Delegacion  , Delegacion);
                                                                  rRsvHot.SETRANGE("N§ Interno", "N§ Interno");
                                                                  rRsvHot.SETRANGE("N§ Periodo", "N§ Periodo");
                                                                  IF rRsvHot.FINDSET(TRUE) THEN BEGIN
                                                                    rRsvHot.MODIFYALL("Hotel TO", "Hotel TO", TRUE);
                                                                    IF (rConHotel."Hotel precios" <> '') AND (rConHotel."Hotel precios" <> rConHotel."Hotel estancia") THEN BEGIN
                                                                      rRsvHot.MODIFYALL("Hotel origen precios", rConHotel."Hotel precios");
                                                                      rRsvHot.MODIFYALL("Hotel Factura"       , rConHotel."Hotel precios");
                                                                    END;
                                                                  END;

                                                                  // Historico

                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", 0, 1, FIELDCAPTION("Hotel TO"),
                                                                                      xRec."Hotel TO", "Hotel TO");
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF rCab.GET(Delegacion, "N§ Interno") THEN BEGIN
                                                                rConHotel.SETRANGE(TourOperador, rCab.TourOperador);
                                                                IF FORM.RUNMODAL(7009733, rConHotel) = ACTION::LookupOK THEN
                                                                  VALIDATE("Hotel TO", rConHotel."Hotel TO");
                                                                rConHotel.SETRANGE(TourOperador);
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=TO Hotel;
                                                              ESP=Hotel TO] }
    { 51  ;   ;Estancia            ;Integer       ;OnValidate=BEGIN
                                                                // Bajar a reserva hotel

                                                                rRsvHot.RESET;
                                                                rRsvHot.SETCURRENTKEY(Delegacion,
                                                                                      "N§ Interno",
                                                                                      "N§ Periodo");
                                                                rRsvHot.SETRANGE(Delegacion  , Delegacion);
                                                                rRsvHot.SETRANGE("N§ Interno", "N§ Interno");
                                                                rRsvHot.SETRANGE("N§ Periodo", "N§ Periodo");
                                                                IF rRsvHot.FINDSET(TRUE) THEN
                                                                  rRsvHot.MODIFYALL(Estancia, Estancia);
                                                              END;

                                                   CaptionML=[ENU=Stay;
                                                              ESP=Estancia];
                                                   Editable=No }
    { 53  ;   ;Comentarios         ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist(Comentarios WHERE (Delegacion=FIELD(Delegacion),
                                                                                        N§ Interno=FIELD(N§ Interno)));
                                                   CaptionML=[ENU=Comments;
                                                              ESP=Comentarios];
                                                   Description=Calculado sobre comentarios;
                                                   Editable=No }
    { 55  ;   ;Precio manual       ;Decimal       ;OnValidate=BEGIN
                                                                IF "Precio manual" <> xRec."Precio manual" THEN
                                                                  // Historico

                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", 0, 1, FIELDCAPTION("Precio manual"),
                                                                                      FORMAT(xRec."Precio manual"), FORMAT("Precio manual"));
                                                              END;

                                                   CaptionML=[ENU=Manual price;
                                                              ESP=Precio manual];
                                                   AutoFormatType=2;
                                                   AutoFormatExpr="C¢d. divisa" }
    { 57  ;   ;Tipo precio manual  ;Option        ;OnValidate=BEGIN
                                                                IF "Tipo precio manual" <> xRec."Tipo precio manual" THEN
                                                                  // Historico

                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", 0, 1, FIELDCAPTION("Tipo precio manual"),
                                                                                      FORMAT(xRec."Tipo precio manual"), FORMAT("Tipo precio manual"));
                                                              END;

                                                   CaptionML=[ENU=Manual price type;
                                                              ESP=Tipo precio manual];
                                                   OptionCaptionML=[ENU=,Per pax,Per room;
                                                                    ESP=,Por Pax,Por Habitacion];
                                                   OptionString=,Por Pax,Por Habitacion }
    { 59  ;   ;Precio manual venta ;Decimal       ;OnValidate=BEGIN
                                                                IF "Precio manual venta" <> xRec."Precio manual venta" THEN
                                                                  // Historico

                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", 0, 1, FIELDCAPTION("Precio manual venta"),
                                                                                      FORMAT(xRec."Precio manual venta"), FORMAT("Precio manual venta"));
                                                              END;

                                                   CaptionML=[ENU=Manual sale price;
                                                              ESP=Precio manual venta];
                                                   AutoFormatType=2;
                                                   AutoFormatExpr="C¢d. divisa" }
    { 61  ;   ;Generada            ;Boolean       ;CaptionML=[ENU=Generated;
                                                              ESP=Generada];
                                                   Editable=No }
    { 63  ;   ;Hotel origen precios;Code20        ;TableRelation=Hotel.Hotel;
                                                   OnValidate=BEGIN
                                                                IF xRec."Hotel origen precios" <> "Hotel origen precios" THEN BEGIN
                                                                  //. Cuando modificamos desde el interface puede haber casos de cambio conjunto
                                                                  //. de hotel y codigo de habitacion, por eso no llamamos a las funciones
                                                                  IF NOT "Modificacion importacion" THEN
                                                                  BEGIN
                                                                    comprobar_paro_ventas("Hotel origen precios"); // Comprobamos si existe un paro de ventas
                                                                                                                   // para el hotel de precios de compra
                                                                    buscar_contrato('', '');         // Comprobamos la existencia de contrato de compra
                                                                                                          // para el hotel de Origen Precios
                                                                    buscar_habitacion('', '', TRUE); // Comprobamos el tipo de habitacion comprobando
                                                                                                          // la existencia de precios.
                                                                    buscar_regimen('', '');
                                                                  END;

                                                                  // Bajar a reserva hotel

                                                                  rRsvHot.RESET;
                                                                  rRsvHot.SETCURRENTKEY(Delegacion,
                                                                                        "N§ Interno",
                                                                                        "N§ Periodo");
                                                                  rRsvHot.SETRANGE(Delegacion  , Delegacion);
                                                                  rRsvHot.SETRANGE("N§ Interno", "N§ Interno");
                                                                  rRsvHot.SETRANGE("N§ Periodo", "N§ Periodo");
                                                                  IF rRsvHot.FINDSET(TRUE) THEN BEGIN
                                                                    REPEAT
                                                                      rRsvHot."Hotel origen precios" := "Hotel origen precios";
                                                                      rRsvHot.MODIFY(TRUE);
                                                                    UNTIL rRsvHot.NEXT = 0;
                                                                  END;

                                                                  //. Historico

                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", 0, 1, FIELDCAPTION("Hotel origen precios"),
                                                                                      xRec."Hotel origen precios", "Hotel origen precios");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Hotel origin prices;
                                                              ESP=Hotel origen precios];
                                                   Description=FK Hotel }
    { 65  ;   ;Hotel Booking       ;Code20        ;TableRelation=Hotel.Hotel;
                                                   OnValidate=BEGIN
                                                                //. Si estamos modificando desde el interface podemos encontrarnos con casos de cambio
                                                                //. de hotel y habitacion al mismo tiempo, por eso no llamamos a la funcion
                                                                IF NOT "Modificacion importacion" THEN
                                                                  buscar_habitacion('', '', FALSE);   // Comprobamos el tipo de habitacion sin comprobar
                                                                                                           // la existencia de precios.

                                                                "Hotel Factura" := "Hotel Booking";      // Ponemos el hotel Booking en el Hotel Factura
                                                                IF rHot.GET("Hotel Booking") THEN        // Buscamos la Zona Fisica del hotel Booking
                                                                BEGIN
                                                                  rHot.TESTFIELD("Zona Fisica"); //+$013
                                                                  "Zona hotel" := rHot."Zona Fisica";
                                                                END;

                                                                //. Bajar a reserva hotel

                                                                rRsvHot.RESET;
                                                                rRsvHot.SETCURRENTKEY(Delegacion,
                                                                                      "N§ Interno",
                                                                                      "N§ Periodo");
                                                                rRsvHot.SETRANGE(Delegacion  , Delegacion);
                                                                rRsvHot.SETRANGE("N§ Interno", "N§ Interno");
                                                                rRsvHot.SETRANGE("N§ Periodo", "N§ Periodo");
                                                                IF rRsvHot.FINDSET(TRUE) THEN BEGIN
                                                                  REPEAT
                                                                    IF rHot.GET("Hotel Booking") THEN BEGIN
                                                                      IF rHot.NoName THEN
                                                                        rRsvHot."Pendiente asignar" := TRUE
                                                                      ELSE
                                                                        rRsvHot."Pendiente asignar" := FALSE;
                                                                      rRsvHot."Zona hotel" := rHot."Zona Fisica";
                                                                      rRsvHot."Hotel booking" := "Hotel Booking";
                                                                      rRsvHot."Hotel Factura" := "Hotel Booking";
                                                                    END;

                                                                    IF NOT "Modificacion importacion" THEN BEGIN
                                                                      IF (rRsvHot.Responsable) AND GUIALLOWED THEN BEGIN
                                                                        IF CONFIRM(Text018, TRUE) THEN
                                                                          rRsvHot."Cambiar booking" := TRUE;
                                                                      END
                                                                      ELSE
                                                                        rRsvHot."Cambiar booking" := TRUE;
                                                                    END
                                                                    ELSE
                                                                      rRsvHot."Cambiar booking" := TRUE;

                                                                    rRsvHot."Modificacion critica" := TRUE;
                                                                    //IF rRsvHot."Comunicado hotel" THEN
                                                                    //  rRsvHot.PasarBuzon(rRsvHot);
                                                                    rRsvHot.MODIFY(TRUE);
                                                                  UNTIL rRsvHot.NEXT = 0;
                                                                END;

                                                                //. Bajar a reserva transfer

                                                                rRsvTra.RESET;
                                                                rRsvTra.SETCURRENTKEY(Delegacion,
                                                                                      "N§ Interno",
                                                                                      "N§ Periodo");
                                                                rRsvTra.SETRANGE(Delegacion  , Delegacion);
                                                                rRsvTra.SETRANGE("N§ Interno", "N§ Interno");
                                                                rRsvTra.SETRANGE("N§ Periodo", "N§ Periodo");
                                                                IF rRsvTra.FINDSET(TRUE) THEN BEGIN
                                                                  REPEAT
                                                                    rRsvTra.VALIDATE("Hotel entrada", "Hotel Booking");
                                                                    rRsvTra.VALIDATE("Hotel salida", "Hotel Booking");
                                                                    rRsvTra.MODIFY;
                                                                  UNTIL rRsvTra.NEXT = 0;
                                                                END;

                                                                //. Historico
                                                                IF "Hotel Booking" <> xRec."Hotel Booking" THEN
                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", 0, 1, FIELDCAPTION("Hotel Booking"),
                                                                                      xRec."Hotel Booking", "Hotel Booking");
                                                              END;

                                                   CaptionML=[ENU=Booking Hotel;
                                                              ESP=Hotel booking];
                                                   Description=FK Hotel }
    { 67  ;   ;Hotel Factura       ;Code20        ;TableRelation=Hotel.Hotel;
                                                   OnValidate=BEGIN
                                                                IF xRec."Hotel Factura" <> "Hotel Factura" THEN BEGIN
                                                                  IF (rHot.GET("Hotel Factura")) AND (CurrFieldNo = FIELDNO("Hotel Factura")) THEN
                                                                    IF rHot.NoName THEN
                                                                      ERROR(Text019);

                                                                  // Bajar a reserva hotel

                                                                  rRsvHot.RESET;
                                                                  rRsvHot.SETCURRENTKEY(Delegacion,
                                                                                        "N§ Interno",
                                                                                        "N§ Periodo");
                                                                  rRsvHot.SETRANGE(Delegacion  , Delegacion);
                                                                  rRsvHot.SETRANGE("N§ Interno", "N§ Interno");
                                                                  rRsvHot.SETRANGE("N§ Periodo", "N§ Periodo");
                                                                  IF rRsvHot.FINDSET(TRUE) THEN
                                                                    rRsvHot.MODIFYALL("Hotel Factura", "Hotel Factura", TRUE);

                                                                  // Historico

                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", 0, 1, FIELDCAPTION("Hotel Factura"),
                                                                                      xRec."Hotel Factura", "Hotel Factura");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Invoice Hotel;
                                                              ESP=Hotel Factura];
                                                   Description=FK Hotel }
    { 69  ;   ;C¢d. divisa         ;Code10        ;TableRelation=Currency.Code;
                                                   CaptionML=[ENU=Currency exchange;
                                                              ESP=C¢d. divisa];
                                                   Description=FK Divisa }
    { 71  ;   ;Hotel venta         ;Code20        ;TableRelation=Hotel.Hotel;
                                                   OnValidate=BEGIN
                                                                IF xRec."Hotel venta" <> "Hotel venta" THEN BEGIN
                                                                  IF CurrFieldNo = FIELDNO("Hotel venta") THEN BEGIN
                                                                    buscar_contrato('', '');
                                                                    buscar_habitacion('', '', TRUE);
                                                                    buscar_regimen('', '');
                                                                  END;

                                                                  // Bajar a reserva hotel

                                                                  rRsvHot.RESET;
                                                                  rRsvHot.SETCURRENTKEY(Delegacion,
                                                                                        "N§ Interno",
                                                                                        "N§ Periodo");
                                                                  rRsvHot.SETRANGE(Delegacion  , Delegacion);
                                                                  rRsvHot.SETRANGE("N§ Interno", "N§ Interno");
                                                                  rRsvHot.SETRANGE("N§ Periodo", "N§ Periodo");
                                                                  IF rRsvHot.FINDSET(TRUE) THEN
                                                                    rRsvHot.MODIFYALL("Hotel venta", "Hotel venta", TRUE);

                                                                  // Historico

                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", 0, 1, FIELDCAPTION("Hotel venta"),
                                                                                      xRec."Hotel venta", "Hotel venta");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Sale hotel;
                                                              ESP=Hotel venta];
                                                   Description=FK Hotel }
    { 73  ;   ;Delegacion          ;Code10        ;TableRelation=Delegacion.Codigo;
                                                   CaptionML=[ENU=Local Office;
                                                              ESP=Delegacion];
                                                   Description=FK Delegacion }
    { 75  ;   ;Mantenimiento       ;Boolean       ;InitValue=Yes;
                                                   OnValidate=BEGIN
                                                                IF xRec.Mantenimiento <> Mantenimiento THEN BEGIN
                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", 0, 1, FIELDCAPTION(Mantenimiento),
                                                                                      STRSUBSTNO('%1', xRec.Mantenimiento), STRSUBSTNO('%1', Mantenimiento));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Maintenance;
                                                              ESP=Mantenimiento];
                                                   Editable=No }
    { 77  ;   ;Editable            ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[ENU=Editable;
                                                              ESP=Editable];
                                                   Editable=No }
    { 79  ;   ;Contrato compra     ;Code10        ;TableRelation="Contrato compra hotel"."N§ Contrato compra" WHERE (Delegacion=FIELD(Delegacion));
                                                   OnValidate=BEGIN
                                                                // Bajar a reserva hotel

                                                                rRsvHot.RESET;
                                                                rRsvHot.SETCURRENTKEY(Delegacion,
                                                                                      "N§ Interno",
                                                                                      "N§ Periodo");
                                                                rRsvHot.SETRANGE(Delegacion  , Delegacion);
                                                                rRsvHot.SETRANGE("N§ Interno", "N§ Interno");
                                                                rRsvHot.SETRANGE("N§ Periodo", "N§ Periodo");
                                                                IF rRsvHot.FINDSET(TRUE) THEN BEGIN
                                                                  IF rConC.GET(Delegacion, "Contrato compra") THEN BEGIN
                                                                    rRsvHot.MODIFYALL("Contrato compra", "Contrato compra", TRUE);
                                                                    rRsvHot.MODIFYALL("Tipo contrato"  , rConC."Tipo de Contrato" + 1, TRUE);
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Purchate contract;
                                                              ESP=Contrato compra];
                                                   Editable=No }
    { 81  ;   ;Contrato venta      ;Code10        ;TableRelation="Contrato venta hotel"."N§ Contrato venta" WHERE (Delegacion=FIELD(Delegacion));
                                                   OnValidate=BEGIN
                                                                // Bajar a reserva hotel

                                                                rRsvHot.RESET;
                                                                rRsvHot.SETCURRENTKEY(Delegacion,
                                                                                      "N§ Interno",
                                                                                      "N§ Periodo");
                                                                rRsvHot.SETRANGE(Delegacion  , Delegacion);
                                                                rRsvHot.SETRANGE("N§ Interno", "N§ Interno");
                                                                rRsvHot.SETRANGE("N§ Periodo", "N§ Periodo");
                                                                IF rRsvHot.FINDSET(TRUE) THEN BEGIN
                                                                  rRsvHot.MODIFYALL("Contrato venta", "Contrato venta", TRUE);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU="Sale contract ";
                                                              ESP=Contrato venta];
                                                   Editable=No }
    { 83  ;   ;Reservas hotel      ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Reserva Hotel" WHERE (Delegacion=FIELD(Delegacion),
                                                                                            N§ Interno=FIELD(N§ Interno),
                                                                                            N§ Periodo=FIELD(N§ Periodo)));
                                                   CaptionML=[ENU=Hotel Reservations;
                                                              ESP=Reservas hotel];
                                                   Description=Count("Reserva Hotel" WHERE (Delegacion=FIELD(Delegacion),N§ Interno=FIELD(N§ Interno),N§ Periodo=FIELD(N§ Periodo)));
                                                   Editable=No }
    { 85  ;   ;Habitacion basica   ;Code10        ;TableRelation="Habitacion basica"."Codigo Habitacion";
                                                   CaptionML=[ENU=Basic Room;
                                                              ESP=Habitacion basica];
                                                   Description=FK Habitacion basica }
    { 87  ;   ;Calculo unico       ;Boolean       ;OnValidate=BEGIN
                                                                // Bajar a reserva hotel

                                                                rRsvHot.RESET;
                                                                rRsvHot.SETCURRENTKEY(Delegacion,
                                                                                      "N§ Interno",
                                                                                      "N§ Periodo");
                                                                rRsvHot.SETRANGE(Delegacion  , Delegacion);
                                                                rRsvHot.SETRANGE("N§ Interno", "N§ Interno");
                                                                rRsvHot.SETRANGE("N§ Periodo", "N§ Periodo");
                                                                IF rRsvHot.FINDSET(TRUE) THEN BEGIN
                                                                  rRsvHot.MODIFYALL("Calculo unico", "Calculo unico");
                                                                END;

                                                                // Historico

                                                                IF "Calculo unico" <> xRec."Calculo unico" THEN
                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", 0, 1, FIELDCAPTION("Calculo unico"),
                                                                                      FORMAT(xRec."Calculo unico"), FORMAT("Calculo unico"));
                                                              END;

                                                   CaptionML=[ENU=Unique calculation;
                                                              ESP=Calculo unico];
                                                   Editable=No }
    { 89  ;   ;Reservas transfer   ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Reserva Transfer" WHERE (Delegacion=FIELD(Delegacion),
                                                                                               N§ Interno=FIELD(N§ Interno),
                                                                                               N§ Periodo=FIELD(N§ Periodo),
                                                                                               Traslado en destino=CONST(No)));
                                                   CaptionML=[ENU=Transfer Reservations;
                                                              ESP=Reservas transfer];
                                                   Description=Count("Reserva Transfer" WHERE (Delegacion=FIELD(Delegacion),N§ Interno=FIELD(N§ Interno),N§ Periodo=FIELD(N§ Periodo),Traslado en destino=CONST(No)));
                                                   Editable=No }
    { 91  ;   ;TourOperador Venta  ;Code10        ;TableRelation=TourOperador.TourOperador;
                                                   OnValidate=BEGIN
                                                                //$001-
                                                                rTTOO.RESET;
                                                                rTTOO.GET("TourOperador Venta");
                                                                rTTOO.TESTFIELD(Bloqueado, FALSE);
                                                                //$001+

                                                                IF "TourOperador Venta" <> xRec."TourOperador Venta" THEN
                                                                  CheckContratoTransfer;
                                                              END;

                                                   CaptionML=[ENU=Sale TourOperator;
                                                              ESP=TourOperador Venta];
                                                   Description=FK Touroperador;
                                                   Editable=No }
    { 93  ;   ;Bono                ;Code10        ;CaptionML=[ENU=Voucher;
                                                              ESP=Bono];
                                                   Editable=No }
    { 95  ;   ;Nombre              ;Text50        ;CaptionML=[ENU=Name;
                                                              ESP=Nombre];
                                                   Editable=No }
    { 97  ;   ;o_Tipo Persona      ;Code10        ;CaptionML=[ENU=Person type;
                                                              ESP=Tipo Persona];
                                                   Description=$004;
                                                   Editable=No }
    { 99  ;   ;Calculo anulado     ;Boolean       ;OnValidate=BEGIN
                                                                //. Bajar a reserva hotel
                                                                rRsvHot.RESET;
                                                                rRsvHot.SETCURRENTKEY(Delegacion,
                                                                                      "N§ Interno",
                                                                                      "N§ Periodo");
                                                                rRsvHot.SETRANGE(Delegacion  , Delegacion);
                                                                rRsvHot.SETRANGE("N§ Interno", "N§ Interno");
                                                                rRsvHot.SETRANGE("N§ Periodo", "N§ Periodo");
                                                                IF rRsvHot.FINDSET(TRUE) THEN
                                                                  rRsvHot.MODIFYALL("Calculo anulado", "Calculo anulado");

                                                                //. Historico
                                                                IF "Calculo anulado" <> xRec."Calculo anulado" THEN
                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", 0, 1, FIELDCAPTION("Calculo anulado"),
                                                                                      FORMAT(xRec."Calculo anulado"), FORMAT("Calculo anulado"));
                                                              END;

                                                   CaptionML=[ENU=Cancelled calculation;
                                                              ESP=Calculo anulado] }
    { 101 ;   ;Modificacion importacion;Boolean   ;OnValidate=BEGIN
                                                                // Bajar a reserva hotel

                                                                rRsvHot.RESET;
                                                                rRsvHot.SETCURRENTKEY(Delegacion,
                                                                                      "N§ Interno",
                                                                                      "N§ Periodo");
                                                                rRsvHot.SETRANGE(Delegacion  , Delegacion);
                                                                rRsvHot.SETRANGE("N§ Interno", "N§ Interno");
                                                                rRsvHot.SETRANGE("N§ Periodo", "N§ Periodo");
                                                                IF rRsvHot.FINDSET(TRUE) THEN
                                                                  rRsvHot.MODIFYALL("Modificacion importacion", "Modificacion importacion");

                                                                // Bajar a reserva transfer

                                                                rRsvTra.RESET;
                                                                rRsvTra.SETCURRENTKEY(Delegacion,
                                                                                      "N§ Interno",
                                                                                      "N§ Periodo");
                                                                rRsvTra.SETRANGE(Delegacion  , Delegacion);
                                                                rRsvTra.SETRANGE("N§ Interno", "N§ Interno");
                                                                rRsvTra.SETRANGE("N§ Periodo", "N§ Periodo");
                                                                IF rRsvTra.FINDSET(TRUE) THEN
                                                                  rRsvTra.MODIFYALL("Modificacion importacion", "Modificacion importacion");
                                                              END;

                                                   CaptionML=[ENU=Importation modification;
                                                              ESP=Modificacion importacion];
                                                   Editable=No }
    { 102 ;   ;Replicado           ;Boolean       ;InitValue=No;
                                                   CaptionML=[ENU=Replicated;
                                                              ESP=Replicado];
                                                   Description=Campo usado por el replicador }
    { 103 ;   ;lookupentrada       ;Boolean       ;CaptionML=[ENU=lookupentrada;
                                                              ESP=lookupentrada] }
    { 105 ;   ;lookupsalida        ;Boolean       ;CaptionML=[ENU=lookupsalida;
                                                              ESP=lookupsalida] }
    { 107 ;   ;Tipo Reserva        ;Option        ;CaptionML=[ENU=Booking type;
                                                              ESP=Tipo Reserva];
                                                   OptionCaptionML=[ENU=Ok,Request,Cancelacion,Error;
                                                                    ESP=Ok,Request,Cancelacion,Error];
                                                   OptionString=Ok,Request,Cancelacion,Error;
                                                   Editable=No }
    { 108 ;   ;Temporada           ;Code10        ;CaptionML=[ENU=Season;
                                                              ESP=Temporada];
                                                   Editable=No }
    { 109 ;   ;N§ Servicio hotel   ;Integer       ;CaptionML=[ENU=Hotel Service No.;
                                                              ESP=N§ Servicio hotel];
                                                   Editable=No }
    { 111 ;   ;N§ Servicio vuelo entrada;Integer  ;CaptionML=[ENU=Arrival flight service No.;
                                                              ESP=N§ Servicio vuelo entrada];
                                                   Editable=No }
    { 113 ;   ;N§ Servicio vuelo salida;Integer   ;CaptionML=[ENU=Departure flight service No.;
                                                              ESP=N§ Servicio vuelo salida] }
    { 115 ;   ;Zona hotel          ;Code10        ;TableRelation="Zona fisica"."Zona Fisica";
                                                   CaptionML=[ENU=Hotel zone;
                                                              ESP=Zona hotel];
                                                   Description=FK Zona Fisica;
                                                   Editable=No }
    { 116 ;   ;N§ Fichero          ;Integer       ;CaptionML=[ENU=File No.;
                                                              ESP=N§ Fichero] }
    { 117 ;   ;Tipo transfer entrada;Option       ;OnValidate=BEGIN
                                                                // Bajar a reserva transfer

                                                                rRsvTra.RESET;
                                                                rRsvTra.SETCURRENTKEY(Delegacion,
                                                                                      "N§ Interno",
                                                                                      "N§ Periodo");
                                                                rRsvTra.SETRANGE(Delegacion  , Delegacion);
                                                                rRsvTra.SETRANGE("N§ Interno", "N§ Interno");
                                                                rRsvTra.SETRANGE("N§ Periodo", "N§ Periodo");
                                                                IF rRsvTra.FINDSET(TRUE) THEN
                                                                  rRsvTra.MODIFYALL("Tipo transfer entrada", "Tipo transfer entrada");

                                                                // Historico

                                                                IF "Tipo transfer entrada" <> xRec."Tipo transfer entrada" THEN
                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", 0, 1, FIELDCAPTION("Tipo transfer entrada"),
                                                                                      FORMAT(xRec."Tipo transfer entrada"), FORMAT("Tipo transfer entrada"));
                                                              END;

                                                   CaptionML=[ENU=Arrival transfer type;
                                                              ESP=Tipo transfer entrada];
                                                   OptionCaptionML=[ENU=Terrestrial,Aerial;
                                                                    ESP=Terrestre,Aereo];
                                                   OptionString=Terrestre,Aereo }
    { 119 ;   ;Tipo transfer salida;Option        ;OnValidate=BEGIN
                                                                // Bajar a reserva transfer

                                                                rRsvTra.RESET;
                                                                rRsvTra.SETCURRENTKEY(Delegacion,
                                                                                      "N§ Interno",
                                                                                      "N§ Periodo");
                                                                rRsvTra.SETRANGE(Delegacion  , Delegacion);
                                                                rRsvTra.SETRANGE("N§ Interno", "N§ Interno");
                                                                rRsvTra.SETRANGE("N§ Periodo", "N§ Periodo");
                                                                IF rRsvTra.FINDSET(TRUE) THEN
                                                                  rRsvTra.MODIFYALL("Tipo transfer salida", "Tipo transfer salida");

                                                                // Historico

                                                                IF "Tipo transfer salida" <> xRec."Tipo transfer salida" THEN
                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", 0, 1, FIELDCAPTION("Tipo transfer salida"),
                                                                                      FORMAT(xRec."Tipo transfer salida"), FORMAT("Tipo transfer salida"));
                                                              END;

                                                   CaptionML=[ENU=Departure transfer type;
                                                              ESP=Tipo transfer salida];
                                                   OptionCaptionML=[ENU=Terrestrial,Aerial;
                                                                    ESP=Terrestre,Aereo];
                                                   OptionString=Terrestre,Aereo }
    { 120 ;   ;EBB libre           ;Boolean       ;OnValidate=BEGIN

                                                                // Lo pasamos a nivel reserva hotel

                                                                rRsvHot.RESET;
                                                                rRsvHot.SETCURRENTKEY(Delegacion,
                                                                                      "N§ Interno",
                                                                                      "N§ Periodo");
                                                                rRsvHot.SETRANGE(Delegacion  , Delegacion);
                                                                rRsvHot.SETRANGE("N§ Interno", "N§ Interno");
                                                                rRsvHot.SETRANGE("N§ Periodo", "N§ Periodo");
                                                                rRsvHot.SETRANGE(Responsable , TRUE);
                                                                IF rRsvHot.FINDSET(TRUE) THEN
                                                                  rRsvHot.MODIFYALL("EBB libre","EBB libre");

                                                                // Historico

                                                                IF "EBB libre" <> xRec."EBB libre" THEN
                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", 0, 1, FIELDCAPTION("EBB libre"),
                                                                                      FORMAT(xRec."EBB libre"), FORMAT("EBB libre"));
                                                              END;

                                                   CaptionML=[ENU=EBB free;
                                                              ESP=EBB libre];
                                                   Description=Early Booking }
    { 121 ;   ;Fecha venta         ;Date          ;OnValidate=BEGIN
                                                                IF xRec."Fecha venta" <> "Fecha venta" THEN BEGIN

                                                                  // Bajar a Reserva hotel

                                                                  rRsvHot.RESET;
                                                                  rRsvHot.SETCURRENTKEY(Delegacion,
                                                                                        "N§ Interno");
                                                                  rRsvHot.SETRANGE(Delegacion      , Delegacion);
                                                                  rRsvHot.SETRANGE("N§ Interno"    , "N§ Interno");
                                                                  rRsvHot.SETRANGE("N§ Periodo"    , "N§ Periodo");
                                                                  IF rRsvHot.FINDSET(TRUE) THEN BEGIN
                                                                    REPEAT
                                                                      rRsvHot."Fecha venta" := "Fecha venta";
                                                                      rRsvHot."Modificacion critica" := TRUE;
                                                                      rRsvHot.MODIFY(TRUE);
                                                                    UNTIL rRsvHot.NEXT = 0;
                                                                  END;

                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", 0, 1, FIELDCAPTION("Fecha venta"),
                                                                                      STRSUBSTNO('%1', xRec."Fecha venta"), STRSUBSTNO('%1', "Fecha venta"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Sale date;
                                                              ESP=Fecha venta] }
    { 150 ;   ;Transfer Privado    ;Option        ;OnValidate=VAR
                                                                lwOk@1103355001 : Boolean;
                                                                lwModRsv@1100217000 : Boolean;
                                                              BEGIN
                                                                IF "Transfer Privado" <> xRec."Transfer Privado" THEN
                                                                BEGIN

                                                                  //+$009
                                                                  //. Pedimos confirmaci¢n al usuario

                                                                  //IF GUIALLOWED AND (NOT "Modificacion importacion") THEN
                                                                  //BEGIN
                                                                  //  IF "Transfer Privado" <> "Transfer Privado"::Ninguno THEN
                                                                  //  BEGIN
                                                                  //    IF NOT CONFIRM(Text038) THEN
                                                                  //      EXIT;
                                                                  //  END
                                                                  //  ELSE
                                                                  //  BEGIN
                                                                  //    IF NOT CONFIRM(Text039) THEN
                                                                  //      EXIT;
                                                                  //  END;
                                                                  //END;
                                                                  //+$009

                                                                  //. Miramos primero si la conversi¢n tiene la marca Tranfer privado

                                                                  CLEAR(rConHotel);
                                                                  IF "Transfer Privado" <> "Transfer Privado"::Ambos THEN
                                                                  BEGIN
                                                                    CLEAR(rCab);
                                                                    IF rCab.GET(Delegacion, "N§ Interno") THEN
                                                                    BEGIN
                                                                      rConHotel.SETRANGE(TourOperador        , rCab.TourOperador);
                                                                      rConHotel.SETRANGE("Touroperador venta", "TourOperador Venta");
                                                                      rConHotel.SETRANGE("Hotel TO"          , "Hotel TO");
                                                                      IF NOT rConHotel.FINDFIRST THEN
                                                                      BEGIN
                                                                        rConHotel.SETRANGE("Touroperador venta", '');
                                                                        IF NOT rConHotel.FINDFIRST THEN
                                                                          CLEAR(rConHotel);
                                                                      END;
                                                                    END;
                                                                  END;

                                                                  CLEAR(rRsvTra);
                                                                  rRsvTra.SETCURRENTKEY(Delegacion,
                                                                                        "N§ Interno",
                                                                                        "N§ Periodo");
                                                                  rRsvTra.SETRANGE(Delegacion  , Delegacion);
                                                                  rRsvTra.SETRANGE("N§ Interno", "N§ Interno");
                                                                  rRsvTra.SETRANGE("N§ Periodo", "N§ Periodo");
                                                                  IF rRsvTra.FINDSET THEN
                                                                  BEGIN
                                                                    REPEAT
                                                                      //+$014
                                                                      lwModRsv := FALSE;

                                                                      CASE "Transfer Privado" OF
                                                                        "Transfer Privado"::Ambos:
                                                                        BEGIN
                                                                          IF (NOT rRsvTra."Transfer Privado Llegada") AND (rRsvTra."Agrupacion entrada" = 0) THEN
                                                                          BEGIN
                                                                            rRsvTra."Transfer Privado Llegada" := TRUE;
                                                                            lwModRsv := TRUE;
                                                                          END;

                                                                          IF (NOT rRsvTra."Transfer Privado Salida") AND (rRsvTra."Agrupacion salida" = 0) THEN
                                                                          BEGIN
                                                                            rRsvTra."Transfer Privado Salida" := TRUE;
                                                                            lwModRsv := TRUE;
                                                                          END;
                                                                        END;

                                                                        "Transfer Privado"::Entrada:
                                                                        BEGIN
                                                                          IF (NOT rRsvTra."Transfer Privado Llegada") AND (rRsvTra."Agrupacion entrada" = 0) THEN
                                                                          BEGIN
                                                                            rRsvTra."Transfer Privado Llegada" := TRUE;
                                                                            lwModRsv := TRUE;
                                                                          END;

                                                                          IF (rRsvTra."Transfer Privado Salida") AND (rRsvTra."Agrupacion salida" = 0) THEN
                                                                          BEGIN
                                                                            rRsvTra."Transfer Privado Salida" := FALSE;
                                                                            lwModRsv := TRUE;
                                                                          END;
                                                                        END;

                                                                        "Transfer Privado"::Salida:
                                                                        BEGIN
                                                                          IF (rRsvTra."Transfer Privado Llegada") AND (rRsvTra."Agrupacion entrada" = 0) THEN
                                                                          BEGIN
                                                                            rRsvTra."Transfer Privado Llegada" := FALSE;
                                                                            lwModRsv := TRUE;
                                                                          END;

                                                                          IF (NOT rRsvTra."Transfer Privado Salida") AND (rRsvTra."Agrupacion salida" = 0) THEN
                                                                          BEGIN
                                                                            rRsvTra."Transfer Privado Salida" := TRUE;
                                                                            lwModRsv := TRUE;
                                                                          END;
                                                                        END;

                                                                        "Transfer Privado"::Ninguno:
                                                                        BEGIN
                                                                          IF rRsvTra."Transfer Privado Llegada" THEN
                                                                          BEGIN
                                                                            rRsvTra."Transfer Privado Llegada" := FALSE;
                                                                            lwModRsv := TRUE;
                                                                          END;

                                                                          IF NOT rRsvTra."Transfer Privado Salida" THEN
                                                                          BEGIN
                                                                            rRsvTra."Transfer Privado Salida" := FALSE;
                                                                            lwModRsv := TRUE;
                                                                          END;
                                                                        END;
                                                                      END;

                                                                      IF lwModRsv THEN
                                                                        rRsvTra.MODIFY;
                                                                      //+$014


                                                                      //-$014lwOk := rRsvTra.EsTransferPrivado(Rec);
                                                                      //-$014lwOk := lwOk OR rConHotel."Transfer Privado";
                                                                      //-$014IF lwOk <> rRsvTra."Transfer Privado Llegada" THEN
                                                                      //-$014BEGIN
                                                                        //. Quito el validate para evitar un confirm que hay en transfer cuando se hace directamente desde all¡
                                                                        //-$019rRsvTra.VALIDATE("Transfer Privado", lwOk);

                                                                      //-$014  rRsvTra."Transfer Privado Llegada" := lwOk;
                                                                      //-$014  rRsvTra.MODIFY;
                                                                      //-$014END;

                                                                    UNTIL rRsvTra.NEXT = 0;
                                                                  END;

                                                                  // Historico

                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", 0, 1, FIELDCAPTION("Transfer Privado"),
                                                                                      FORMAT(xRec."Transfer Privado"), FORMAT("Transfer Privado"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Private transfer;
                                                              ESP=Transfer Privado];
                                                   OptionCaptionML=[ENU=Any,Arrival,Departure,Both;
                                                                    ESP=Ninguno,Entrada,Salida,Ambos];
                                                   OptionString=Ninguno,Entrada,Salida,Ambos;
                                                   Description=OBSOLETO CNT-CAR-14063 29/09/2014 }
    { 151 ;   ;Proforma Generada   ;Boolean       ;CaptionML=[ENU=Generated Pro-forma invoice;
                                                              ESP=Proforma Generada] }
    { 152 ;   ;Num. Proforma       ;Code20        ;TableRelation="Cabecera Proforma"."Num. Proforma";
                                                   CaptionML=[ENU=Pro-forma invoice No.;
                                                              ESP=Num. Proforma];
                                                   Description=FK Cabecera Proforma }
    { 153 ;   ;Circuito            ;Boolean       ;CaptionML=[ENU=Circuit;
                                                              ESP=Circuito];
                                                   Description=Indica si el periodo forma parte de un circuito }
    { 160 ;   ;ID Producto TO      ;Integer       ;CaptionML=[ENU=Product ID TO;
                                                              ESP=ID Producto TO];
                                                   Description=$003 Identificado importacion TTOO }
    { 162 ;   ;Fecha creacion      ;DateTime      ;CaptionML=[ENU=Creation date;
                                                              ESP=Fecha creacion] }
    { 164 ;   ;Usuario creacion    ;Text20        ;TableRelation=User."User ID";
                                                   CaptionML=[ENU=Creation user;
                                                              ESP=Usuario creacion];
                                                   Description=$010 }
    { 166 ;   ;Tipo vehiculo solicitado;Code10    ;TableRelation="Tipo transporte".Codigo;
                                                   OnValidate=BEGIN
                                                                IF "Tipo vehiculo solicitado" <> xRec."Tipo vehiculo solicitado" THEN
                                                                BEGIN
                                                                  //. Pasamos este campo a la reserva de transfer

                                                                  CLEAR(rRsvTra);
                                                                  rRsvTra.SETCURRENTKEY(Delegacion,
                                                                                        "N§ Interno",
                                                                                        "N§ Periodo");
                                                                  rRsvTra.SETRANGE(Delegacion  , Delegacion);
                                                                  rRsvTra.SETRANGE("N§ Interno", "N§ Interno");
                                                                  rRsvTra.SETRANGE("N§ Periodo", "N§ Periodo");
                                                                  IF rRsvTra.FINDSET THEN
                                                                  BEGIN
                                                                    REPEAT
                                                                      rRsvTra.VALIDATE("Tipo vehiculo solicitado", "Tipo vehiculo solicitado");
                                                                      rRsvTra.MODIFY(TRUE);
                                                                    UNTIL rRsvTra.NEXT = 0;
                                                                  END;
                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", 0, 1, FIELDCAPTION("Tipo vehiculo solicitado"),
                                                                                      xRec."Tipo vehiculo solicitado", "Tipo vehiculo solicitado");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Vehicle type requested;
                                                              ESP=Tipo vehiculo solicitado];
                                                   Description=$018 }
    { 168 ;   ;Tipo operacion      ;Option        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Cabecera reserva"."Tipo Operacion" WHERE (N§ Interno=FIELD(N§ Interno),
                                                                                                                 Delegacion=FIELD(Delegacion)));
                                                   CaptionML=[ENU=Operation Type;
                                                              ESP=Tipo operacion];
                                                   OptionCaptionML=[ENU=Charter,Regular;
                                                                    ESP=Charter,Regular];
                                                   OptionString=Charter,Regular;
                                                   Editable=No }
    { 170 ;   ;Servicio transfer entrada;Option   ;InitValue=Ninguno;
                                                   OnValidate=VAR
                                                                lwOk@1103355001 : Boolean;
                                                              BEGIN
                                                                IF "Servicio transfer entrada" <> xRec."Servicio transfer entrada" THEN
                                                                BEGIN
                                                                  CheckContratoTransfer;

                                                                  //+$009
                                                                  //. Pedimos confirmaci¢n al usuario
                                                                  //IF GUIALLOWED AND (NOT "Modificacion importacion") THEN
                                                                  //BEGIN
                                                                  //  IF "Servicio transfer entrada" IN ["Servicio transfer entrada"::Privado, "Servicio transfer entrada"::Deluxe] THEN
                                                                  //  BEGIN
                                                                  //    IF NOT CONFIRM(Text038) THEN
                                                                  //      EXIT;
                                                                  //  END
                                                                  //  ELSE
                                                                  //  BEGIN
                                                                  //    IF NOT CONFIRM(Text039) THEN
                                                                  //      EXIT;
                                                                  //  END;
                                                                  //END;
                                                                  //+$009

                                                                  //. Miramos primero si la conversi¢n tiene la marca Tranfer privado

                                                                  CLEAR(rConHotel);
                                                                  IF "Transfer Privado" <> "Transfer Privado"::Ninguno THEN
                                                                  BEGIN
                                                                    CLEAR(rCab);
                                                                    IF rCab.GET(Delegacion, "N§ Interno") THEN
                                                                    BEGIN
                                                                      rConHotel.SETRANGE(TourOperador        , rCab.TourOperador);
                                                                      rConHotel.SETRANGE("Touroperador venta", "TourOperador Venta");
                                                                      rConHotel.SETRANGE("Hotel TO"          , "Hotel TO");
                                                                      IF NOT rConHotel.FINDFIRST THEN
                                                                      BEGIN
                                                                        rConHotel.SETRANGE("Touroperador venta", '');
                                                                        IF NOT rConHotel.FINDFIRST THEN
                                                                          CLEAR(rConHotel);
                                                                      END;
                                                                    END;
                                                                  END;

                                                                  //. Pasamos la informaci¢n a las reservas transfer
                                                                  CLEAR(rRsvTra);
                                                                  rRsvTra.SETCURRENTKEY(Delegacion,
                                                                                        "N§ Interno",
                                                                                        "N§ Periodo");
                                                                  rRsvTra.SETRANGE(Delegacion  , Delegacion);
                                                                  rRsvTra.SETRANGE("N§ Interno", "N§ Interno");
                                                                  rRsvTra.SETRANGE("N§ Periodo", "N§ Periodo");
                                                                  IF rRsvTra.FINDSET THEN
                                                                  BEGIN
                                                                    REPEAT
                                                                      rRsvTra.VALIDATE("Servicio transfer entrada", "Servicio transfer entrada");
                                                                      rRsvTra.MODIFY;
                                                                    UNTIL rRsvTra.NEXT = 0;
                                                                  END;

                                                                  //. Historico
                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", 0, 1, FIELDCAPTION("Servicio transfer entrada"),
                                                                                      FORMAT(xRec."Servicio transfer entrada"), FORMAT("Servicio transfer entrada"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Arrival transfer service;
                                                              ESP=Servicio transfer entrada];
                                                   OptionCaptionML=[ENU=Shared,Private,Deluxe,None;
                                                                    ESP=Compartido,Privado,Deluxe,Ninguno];
                                                   OptionString=Compartido,Privado,Deluxe,Ninguno }
    { 172 ;   ;Servicio transfer salida;Option    ;InitValue=Ninguno;
                                                   OnValidate=VAR
                                                                lwOk@1103355001 : Boolean;
                                                              BEGIN
                                                                IF "Servicio transfer salida" <> xRec."Servicio transfer salida" THEN
                                                                BEGIN
                                                                  CheckContratoTransfer;

                                                                  //+$009
                                                                  //. Pedimos confirmaci¢n al usuario
                                                                  //IF (GUIALLOWED) AND (NOT "Modificacion importacion") THEN
                                                                  //BEGIN
                                                                  //  IF "Servicio transfer salida" IN ["Servicio transfer salida"::Privado, "Servicio transfer salida"::Deluxe] THEN
                                                                  //  BEGIN
                                                                  //    IF NOT CONFIRM(Text038) THEN
                                                                  //      EXIT;
                                                                  //  END
                                                                  //  ELSE
                                                                  //  BEGIN
                                                                  //    IF NOT CONFIRM(Text039) THEN
                                                                  //      EXIT;
                                                                  //  END;
                                                                  //END;
                                                                  //+$009

                                                                  //. Miramos primero si la conversi¢n tiene la marca Tranfer privado

                                                                  CLEAR(rConHotel);
                                                                  IF "Transfer Privado" <> "Transfer Privado"::Ninguno THEN
                                                                  BEGIN
                                                                    CLEAR(rCab);
                                                                    IF rCab.GET(Delegacion, "N§ Interno") THEN
                                                                    BEGIN
                                                                      rConHotel.SETRANGE(TourOperador        , rCab.TourOperador);
                                                                      rConHotel.SETRANGE("Touroperador venta", "TourOperador Venta");
                                                                      rConHotel.SETRANGE("Hotel TO"          , "Hotel TO");
                                                                      IF NOT rConHotel.FINDFIRST THEN
                                                                      BEGIN
                                                                        rConHotel.SETRANGE("Touroperador venta", '');
                                                                        IF NOT rConHotel.FINDFIRST THEN
                                                                          CLEAR(rConHotel);
                                                                      END;
                                                                    END;
                                                                  END;

                                                                  //. Pasamos la informaci¢n a las reservas transfer
                                                                  CLEAR(rRsvTra);
                                                                  rRsvTra.SETCURRENTKEY(Delegacion,
                                                                                        "N§ Interno",
                                                                                        "N§ Periodo");
                                                                  rRsvTra.SETRANGE(Delegacion  , Delegacion);
                                                                  rRsvTra.SETRANGE("N§ Interno", "N§ Interno");
                                                                  rRsvTra.SETRANGE("N§ Periodo", "N§ Periodo");
                                                                  IF rRsvTra.FINDSET THEN
                                                                  BEGIN
                                                                    REPEAT
                                                                      rRsvTra.VALIDATE("Servicio transfer salida", "Servicio transfer salida");
                                                                      rRsvTra.MODIFY;
                                                                    UNTIL rRsvTra.NEXT = 0;
                                                                  END;

                                                                  //. Historico
                                                                  cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", 0, 1, FIELDCAPTION("Servicio transfer salida"),
                                                                                      FORMAT(xRec."Servicio transfer salida"), FORMAT("Servicio transfer salida"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Departure transfer service;
                                                              ESP=Servicio transfer salida];
                                                   OptionCaptionML=[ENU=Shared,Private,Deluxe,None;
                                                                    ESP=Compartido,Privado,Deluxe,Ninguno];
                                                   OptionString=Compartido,Privado,Deluxe,Ninguno }
  }
  KEYS
  {
    {    ;Delegacion,N§ Interno,N§ Periodo        ;Clustered=Yes }
    {    ;Hotel Booking,Fecha entrada,Delegacion,N§ Interno,N§ Periodo;
                                                   KeyGroups=RENUMERING }
    {    ;TourOperador Venta,Bono,Nombre,Hotel TO ;KeyGroups=RENUMERING }
    {    ;TourOperador Venta,Fecha entrada,Compa¤ia entrada,Vuelo entrada,N§ Interno;
                                                   KeyGroups=RENUMERING }
    {    ;TourOperador Venta,Bono,Temporada,N§ Servicio hotel;
                                                   KeyGroups=RENUMERING }
    {    ;Delegacion,TourOperador Venta,Zona hotel,Hotel Booking,Fecha entrada;
                                                   KeyGroups=RENUMERING }
    {    ;Delegacion,Zona hotel,Hotel Booking,Fecha entrada;
                                                   KeyGroups=RENUMERING }
    {    ;Fecha entrada                           ;KeyGroups=RENUMERING }
    {    ;TourOperador Venta,Bono,Temporada,Fecha entrada,Fecha salida;
                                                   KeyGroups=RENUMERING }
    {    ;Hotel Booking,Bono                      ;KeyGroups=RENUMERING }
    {    ;N§ Fichero                               }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1103355028 : TextConst 'ENU=Only terms in local offices can be entered;ESP=Solo se pueden dar de alta periodos en las delegaciones.';
      Text002@1103355029 : TextConst 'ENU=This header cannot be at this level, mark the maintenance field;ESP=Esta cabecera no se puede mantener a este nivel, marque el campo Mantenimiento.';
      Text003@1103355030 : TextConst 'ENU=Only terms in local offices can be modified;ESP=Solo se pueden modificar periodos en las delegaciones.';
      Text004@1103355031 : TextConst 'ENU=Unable to modify this booking because it is being calculated;ESP=No se puede modificar esta reserva porque se esta calculando.';
      Text005@1103355032 : TextConst 'ENU=Only terms in local offices can be cancelled;ESP=Solo se pueden dar de baja periodos en las delegaciones.';
      Text006@1103355033 : TextConst 'ENU=Unable to delete this booking because it is being calculated;ESP=No se puede borrar esta reserva porque se esta calculando.';
      Text007@1103355034 : TextConst 'ENU=Deleted;ESP=Borrado';
      Text008@1103355035 : TextConst 'ENU=Deleted register;ESP=Borrado registro';
      Text009@1103355036 : TextConst 'ENU=Terms cannot be renamed;ESP=No se pueden renombrar periodos.';
      Text010@1103355037 : TextConst 'ENU=Enter check-in date;ESP=Introduzca la fecha de entrada.';
      Text011@1103355038 : TextConst 'ENU=Enter check-out date;ESP=Introduzca la fecha de salida.';
      Text012@1103355039 : TextConst 'ENU=This term is already generated, unable to modify the package;ESP=Este periodo ya esta generado, no se puede modificar el paquete';
      Text013@1103355040 : TextConst 'ENU=%1 must be modified per %2 in %3;ESP=%1 se debe modificar por %2 en %3.';
      Text014@1103355041 : TextConst 'ENU=Room type %1 does notexist in the contract %2;ESP=No existe el tipo de habitacion %1 en el contrato %2.';
      Text015@1103355042 : TextConst 'ENU=This conversion is not cleared;ESP=Esta conversion no esta definida.';
      Text016@1103355043 : TextConst 'ENU=Board %1 does not exist for touroperator %2;ESP=No existe el regimen %1 para el touroperador %2.';
      Text017@1103355044 : TextConst 'ENU=Conversion does not exist for this touroperator-hotel %1-%2;ESP=No existe conversion para este Touroperador-hotel %1-%2.';
      Text018@1103355045 : TextConst 'ENU=Would you like to change bookings from this booking;ESP=Desea cambiar las reservas booking de esta reserva.';
      Text019@1103355046 : TextConst 'ENU=Invoice destination cannot be an offer hotel;ESP=El destino de la factura no puede ser un hotel oferta.';
      Text020@1103355047 : TextConst 'ENU=Check-out date cannot be previous or equal to the check-in date;ESP=La fecha de salida no puede ser anterior o igual a la fecha de entrada.';
      Text021@1103355048 : TextConst 'ENU=This check-in date overlaps with some period of this booking (%1-%2);ESP=Esta fecha de entrada se solapa con algun periodo de esta reserva (%1-%2).';
      Text022@1103355049 : TextConst 'ENU=This check-out date overlaps with some period of this booking (%1-%2).;ESP=Esta fecha de salida se solapa con algun periodo de esta reserva (%1-%2).';
      Text023@1103355050 : TextConst 'ENU=Some period of this booking  (%1-%2) is included in the new one;ESP=Algun periodo de esta reserva  (%1-%2) esta incluido en el nuevo.';
      Text024@1103355051 : TextConst 'ENU=Touroperator %1 does not exist;ESP=No existe el Touroperador %1.';
      Text025@1103355052 : TextConst 'ENU=Hotel %1 has a stop sales for day %2, would you like to respect it?;ESP=El hotel %1 esta en paro de ventas el dia %2, desea respetarlo.';
      Text026@1103355053 : TextConst 'ENU=Hotel %1 is stopped on sales  day %2;ESP=El hotel %1 esta en paro de ventas el dia %2.';
      Text027@1103355054 : TextConst 'ENU=DB parameters folder does not exist;ESP=No existe el Fichero de Parametros de B. D.';
      Text028@1103355055 : TextConst 'ENU=Booking header for this period does not exist;ESP=No existe la cabecera de reserva para este periodo.';
      Text029@1103355056 : TextConst 'ENU=Person parameters folder does not exist;ESP=NO existe el fichero de Parametros de personas.';
      Text030@1103355057 : TextConst 'ENU=The booking;ESP=La reserva';
      Text031@1103355058 : TextConst 'ENU=" has as room";ESP=" tiene como habitacion"';
      Text032@1103355059 : TextConst 'ENU=" would you like to change to";ESP=" desea cambiar a"';
      Text033@1103355060 : TextConst 'ENU=Delete arrival flight for the new date;ESP=Borrar el plan de vuelo de entrada para la nueva fecha.';
      Text034@1103355061 : TextConst 'ENU=Delete departure flight for the new date;ESP=Borrar el plan de vuelo de salida para la nueva fecha.';
      rPar@1103355000 : Record 7009700;
      rParPer@1103355001 : Record 7009701;
      rCab@1103355002 : Record 7009741;
      rConHotel@1103355003 : Record 7009725;
      rPer@1103355004 : Record 7009742;
      rConC@1103355005 : Record 7009723;
      rHab@1103355007 : Record 7009731;
      rRegTO@1103355008 : Record 7009719;
      rReg@1103355009 : Record 7009712;
      rRsvHot@1103355010 : Record 7009743;
      rRsvTra@1103355011 : Record 7009744;
      rHot@1103355012 : Record 7009724;
      rPlan@1103355013 : Record 7009754;
      rCom@1103355014 : Record 7009762;
      rAco@1103355016 : Record 7009748;
      rTTOO@1000000000 : Record 7009717;
      cPar@1103355017 : Codeunit 7009700;
      cCon@1103355018 : Codeunit 7009701;
      cRes@1103355019 : Codeunit 7009703;
      fTabVuelo@1103355020 : Form 7009799;
      sw_entrada@1103355022 : Boolean;
      sw_salida@1103355023 : Boolean;
      GesCuaCircuito@1103355024 : Boolean;
      rHotCir@1103355025 : Record 7010189;
      Text035@1103355063 : TextConst 'ENU=Created;ESP=Creada';
      Text036@1103355062 : TextConst 'ENU=New Booking;ESP=Nueva Reserva';
      Text037@1100253000 : TextConst 'ENU=Unable to specify flight information if there is no transfer booking;ESP=No se puede especificar informacion de vuelo si no hay reserva de transfer.';
      Text038@1100217000 : TextConst 'ENU=Do you want to assign the private transfer service to this reservation;ESP=Desea asignar un transfer privado a esta reserva.';
      Text039@1100217001 : TextConst 'ENU=Do you want to remove the private transfer service from this reservation;ESP=Desea quitar el transfer privado a esta reserva.';

    PROCEDURE comp_fechas@1();
    VAR
      rPaqProd@1103355000 : Record 7009752;
    BEGIN
      // comp_fechas

      //+$023 <
      IF ("Fecha entrada" <> 0D) AND ("Fecha salida" <> 0D) THEN
      BEGIN
        IF "Fecha entrada" > "Fecha salida" THEN
          ERROR(Text020);
      END;
      //+$023 >

      rPaqProd.RESET;
      rPaqProd.SETRANGE(Paquete        , Paquete);
      rPaqProd.SETRANGE("Tipo Producto", rPaqProd."Tipo Producto"::Hotel);
      IF rPaqProd.ISEMPTY THEN
        EXIT;

      IF ("Fecha entrada" <> 0D) AND ("Fecha salida" <> 0D) THEN BEGIN
        IF "Fecha entrada" = "Fecha salida" THEN
          ERROR(Text020);
      END;

      IF "Fecha entrada" <> 0D THEN BEGIN
        rPer.RESET;
        rPer.SETRANGE(Delegacion           , Delegacion);
        rPer.SETRANGE ("N§ Interno"        , "N§ Interno");
        rPer.SETFILTER("N§ Periodo"        , '<>%1', "N§ Periodo");
        rPer.SETFILTER(rPer."Fecha entrada", '<=%1', "Fecha entrada");
        rPer.SETFILTER(rPer."Fecha salida" , '>%1', "Fecha entrada");

        // ----  El error solo tiene que darse si el paquete del periodo solapado tiene hotel  ----

        IF rPer.FINDSET THEN BEGIN
          REPEAT
            rPaqProd.SETRANGE(Paquete        , rPer.Paquete);
            rPaqProd.SETRANGE("Tipo Producto", rPaqProd."Tipo Producto"::Hotel);
            IF rPaqProd.FINDFIRST THEN
              ERROR(Text021, "TourOperador Venta", Bono);
          UNTIL rPer.NEXT = 0;
        END
      END;

      IF "Fecha salida" <> 0D THEN BEGIN
        rPer.RESET;
        rPer.SETRANGE(Delegacion           , Delegacion);
        rPer.SETRANGE ("N§ Interno"        , "N§ Interno");
        rPer.SETFILTER("N§ Periodo"        , '<>%1', "N§ Periodo");
        rPer.SETFILTER(rPer."Fecha entrada", '<%1', "Fecha salida");
        rPer.SETFILTER(rPer."Fecha salida" , '>=%1', "Fecha salida");
        IF rPer.FINDSET THEN BEGIN
          REPEAT
            rPaqProd.SETRANGE(Paquete        , rPer.Paquete);
            rPaqProd.SETRANGE("Tipo Producto", rPaqProd."Tipo Producto"::Hotel);
            IF rPaqProd.FINDFIRST THEN
              ERROR(Text022, "TourOperador Venta", Bono);
          UNTIL rPer.NEXT = 0;
        END;
      END;

      IF ("Fecha entrada" <> 0D) AND ("Fecha salida" <> 0D) THEN BEGIN
        rPer.RESET;
        rPer.SETRANGE(Delegacion           , Delegacion);
        rPer.SETRANGE ("N§ Interno"        , "N§ Interno");
        rPer.SETFILTER("N§ Periodo"        , '<>%1', "N§ Periodo");
        rPer.SETFILTER(rPer."Fecha entrada", '>=%1', "Fecha entrada");
        rPer.SETFILTER(rPer."Fecha salida" , '<=%1', "Fecha salida");
        IF rPer.FINDSET THEN BEGIN
          REPEAT
            rPaqProd.SETRANGE(Paquete        , rPer.Paquete);
            rPaqProd.SETRANGE("Tipo Producto", rPaqProd."Tipo Producto"::Hotel);
            IF rPaqProd.FINDFIRST THEN
              ERROR(Text023, "TourOperador Venta", Bono);
          UNTIL rPer.NEXT = 0;
        END;
      END;
    END;

    PROCEDURE buscar_contrato@2(par_touroperador@1103355000 : Code[10];par_touroperador_venta@1103355002 : Code[10]);
    VAR
      rTo@1103355003 : Record 7009717;
      rPaqProd@1103355004 : Record 7009752;
      w_to@1103355005 : Code[10];
    BEGIN
      // buscar_contrato

      IF par_touroperador = '' THEN BEGIN
        IF NOT rCab.GET(Delegacion, "N§ Interno") THEN
          EXIT;
        rCab.CALCFIELDS(Paxes);
        par_touroperador := rCab.TourOperador;
        par_touroperador_venta := rCab."TourOperador Venta"
      END;

      IF (par_touroperador = '') OR
         (Delegacion = '') OR
         ("Hotel origen precios" = '') OR
         ("Fecha entrada" = 0D) OR
         ("Fecha salida" = 0D) THEN
        EXIT;

      rPaqProd.RESET;
      rPaqProd.SETRANGE(Paquete        , Paquete);
      rPaqProd.SETRANGE("Tipo Producto", rPaqProd."Tipo Producto"::Hotel);
      IF rPaqProd.ISEMPTY THEN
        EXIT;

      VALIDATE("Contrato compra", cCon.busca_contrato_compra(par_touroperador,
                                                             Delegacion,
                                                             "Hotel origen precios",
                                                             "Fecha entrada",
                                                             "Fecha salida"));
      IF rConC.GET(Delegacion, "Contrato compra") THEN
      BEGIN
        IF (rConC."Tipo de Contrato" = rConC."Tipo de Contrato"::"En nombre propio") AND
           (rCab.Circuito = '') THEN
        BEGIN
          IF NOT rTo.GET("TourOperador Venta") THEN
            ERROR(Text024, "TourOperador Venta");

          //-$002IF rTo."Grupo Touroperador" = '' THEN
          //-$002  w_to := TourOperador
          //-$002ELSE

          w_to := "TourOperador Venta";
          VALIDATE("Contrato venta", cCon.busca_contrato_venta(w_to,
                                                               Delegacion,
                                                               "Hotel venta",
                                                               "Fecha entrada",
                                                               "Fecha salida"));
        END
        ELSE
        BEGIN
          VALIDATE("Contrato venta", '');
        END;
      END;

      comprobar_habitacion(rCab, Rec, 2);

      //periodo.MODIFY(TRUE);
    END;

    PROCEDURE buscar_habitacion@3(par_touroperador@1103355000 : Code[10];par_touroperador_venta@1103355002 : Code[10];buscar_precio@1103355003 : Boolean);
    VAR
      rPaqProd@1103355004 : Record 7009752;
    BEGIN
      // buscar_habitacion

      IF par_touroperador = '' THEN
      BEGIN
        IF NOT rCab.GET(Delegacion, "N§ Interno") THEN
          EXIT;
        par_touroperador := rCab.TourOperador;
        par_touroperador_venta := rCab."TourOperador Venta";
      END;

      IF "Hotel origen precios" = '' THEN
        EXIT;

      IF (par_touroperador = '') OR
         (Delegacion = '') OR
         ("Hotel Booking" = '') OR
         ("Fecha entrada" = 0D) OR
         ("Fecha salida" = 0D) OR
         (Habitacion = '') THEN
         EXIT;

      rPaqProd.RESET;
      rPaqProd.SETRANGE(Paquete        , Paquete);
      rPaqProd.SETRANGE("Tipo Producto", rPaqProd."Tipo Producto"::Hotel);
      IF rPaqProd.ISEMPTY THEN
        EXIT;

      IF "Contrato compra" = '' THEN
        buscar_contrato('', '');

      cCon.busca_cupo_habitacion(par_touroperador, Delegacion, "Hotel Booking",
                                 "Fecha entrada", "Fecha salida", Habitacion,
                                 "Hotel origen precios", buscar_precio);
      IF "Contrato venta" <> '' THEN
        cCon.busca_cupo_habitacion_venta(par_touroperador_venta, Delegacion, "Hotel Booking",
                                         "Fecha entrada", "Fecha salida", Habitacion,
                                         "Hotel venta", buscar_precio);
    END;

    PROCEDURE buscar_regimen@4(par_touroperador@1103355000 : Code[10];par_touroperador_venta@1103355002 : Code[10]);
    VAR
      rPaqProd@1103355003 : Record 7009752;
    BEGIN
      // buscar_regimen

      IF par_touroperador = '' THEN
      BEGIN
        IF NOT rCab.GET(Delegacion, "N§ Interno") THEN
          EXIT;
        par_touroperador := rCab.TourOperador;
        par_touroperador_venta := rCab."TourOperador Venta";
      END;

      IF (par_touroperador = '') OR
         (Delegacion = '') OR
         ("Hotel Booking" = '') OR
         ("Fecha entrada" = 0D) OR
         ("Fecha salida" = 0D) OR
         (Regimen = '') THEN
        EXIT;

      rPaqProd.RESET;
      rPaqProd.SETRANGE(Paquete        , Paquete);
      rPaqProd.SETRANGE("Tipo Producto", rPaqProd."Tipo Producto"::Hotel);
      IF rPaqProd.ISEMPTY THEN
        EXIT;

      IF "Contrato compra" = '' THEN
        buscar_contrato('', '');

      cCon.busca_precio_regimen(par_touroperador, Delegacion, "Hotel origen precios",
                                 "Fecha entrada", "Fecha salida", Regimen);
      IF "Contrato venta" <> '' THEN
        cCon.busca_precio_regimen_venta(par_touroperador_venta, Delegacion, "Hotel venta",
                                        "Fecha entrada", "Fecha salida", Regimen);
    END;

    PROCEDURE comprobar_paro_ventas@5(hotel_paro@1103355000 : Code[20]);
    VAR
      rPaqProd@1100217000 : Record 7009752;
      rParo@1103355001 : Record 7009781;
      w_dia@1103355002 : Date;
      texto_confirm@1103355003 : Text[250];
    BEGIN
      // comprobar_paro_ventas

      IF ("Fecha entrada" = 0D) OR ("Fecha salida" = 0D) THEN
        EXIT;

      rPaqProd.RESET;
      rPaqProd.SETRANGE(Paquete        , Paquete);
      rPaqProd.SETRANGE("Tipo Producto", rPaqProd."Tipo Producto"::Hotel);
      IF rPaqProd.ISEMPTY THEN
        EXIT;

      rParo.RESET;
      rParo.SETRANGE(Hotel, hotel_paro);
      FOR w_dia := "Fecha entrada" TO "Fecha salida" - 1 DO BEGIN
        rParo.SETFILTER("Fecha desde"    , '<=%1', w_dia);
        rParo.SETFILTER("Fecha hasta"    , '>=%1', w_dia);
        rParo.SETRANGE ("Tipo habitacion", Habitacion);
        IF NOT rParo.FINDFIRST THEN
        BEGIN
          rParo.SETRANGE ("Tipo habitacion");
          IF NOT rParo.FINDFIRST THEN
            EXIT;
        END;

        IF (NOT "Modificacion importacion") AND GUIALLOWED THEN
        BEGIN
          texto_confirm := STRSUBSTNO(Text025, hotel_paro, w_dia);
          IF CONFIRM(texto_confirm) THEN
            ERROR(Text026, hotel_paro, w_dia);
        END;
      END;
    END;

    PROCEDURE comprobar_habitacion@6(par_cab@1103355000 : Record 7009741;VAR par_per@1103355001 : Record 7009742;operacion@1103355002 : 'alta,baja,modificacion');
    VAR
      paxes@1103355003 : Integer;
      texto_confirm@1103355004 : Text[90];
      rCupoCom@1103355005 : Record 7009739;
      rCupoVen@1103355006 : Record 7009730;
    BEGIN
      // comprobar_habitacion

      IF "Modificacion importacion" THEN
        EXIT;

      IF par_per."Hotel origen precios" = '' THEN
        EXIT;

      rPar.FINDFIRST;
      IF NOT rPar."Comprobar habitacion" THEN
        EXIT;

      IF "Contrato compra" = '' THEN
        buscar_contrato('', '');

      IF par_cab."N§ Interno" = 0 THEN
      BEGIN
        IF NOT par_cab.GET(Delegacion, "N§ Interno") THEN
          ERROR(Text028);
      END;

      paxes := 0;
      rParPer.FINDFIRST;

      rAco.RESET;
      rAco.SETRANGE(Delegacion  , Delegacion);
      rAco.SETRANGE("N§ Interno", "N§ Interno");
      IF rAco.FINDSET THEN
      BEGIN
        REPEAT
          IF rAco."Tipo Persona" <> rParPer."Codigo Infant" THEN
            paxes := paxes + 1;
        UNTIL rAco.NEXT = 0;
      END;

      CASE operacion OF
        operacion::alta:
        BEGIN
          paxes := paxes + 1;
        END;
        operacion::baja:
        BEGIN
          paxes := paxes - 1;
        END;
      END;
      rAco.RESET;

      IF "Contrato venta" <> '' THEN BEGIN
        rCupoVen.SETRANGE (Delegacion         , Delegacion);
        rCupoVen.SETRANGE ("N§ Contrato venta", "Contrato compra");
        rCupoVen.SETFILTER("Fecha desde"      , '<=%1', "Fecha entrada");
        rCupoVen.SETFILTER("Fecha hasta"      , '>=%1', "Fecha entrada");
        IF "N§ Habitaciones" <> 0 THEN
          rCupoVen.SETFILTER("Pax ocupacion", '>=%1', ROUND(paxes / "N§ Habitaciones", 1))
        ELSE
          rCupoVen.SETFILTER("Pax ocupacion", '>=%1', paxes);
        IF rCupoVen.FINDFIRST THEN BEGIN
          IF Habitacion = rCupoVen."Habitacion cupo" THEN
            EXIT;
          IF (Habitacion <> '') AND (GUIALLOWED) THEN BEGIN
            texto_confirm := Text030 +  ' ' + Bono + ' ' + Text031 + ' ' + Habitacion + ' ' +
                             Text032 + ' ' + rCupoVen."Habitacion cupo" + '?';

            IF NOT CONFIRM(texto_confirm) THEN
              EXIT;
          END;
          IF (NOT "Modificacion importacion") THEN
            VALIDATE(Habitacion, rCupoVen."Habitacion cupo");
        END;
      END
      ELSE
      BEGIN
        rCupoCom.SETRANGE (Delegacion          , Delegacion);
        rCupoCom.SETRANGE ("N§ Contrato compra", "Contrato compra");
        rCupoCom.SETFILTER("Fecha desde"       , '<=%1', "Fecha entrada");
        rCupoCom.SETFILTER("Fecha hasta"       , '>=%1', "Fecha entrada");
        IF "N§ Habitaciones" <> 0 THEN
          rCupoCom.SETFILTER("Pax ocupacion", '>=%1', ROUND(paxes / "N§ Habitaciones", 1))
        ELSE
          rCupoCom.SETFILTER("Pax ocupacion", '>=%1', paxes);
        IF rCupoCom.FINDFIRST THEN BEGIN
          IF Habitacion = rCupoCom."Habitacion cupo" THEN
            EXIT;
          IF (Habitacion <> '') AND (GUIALLOWED) THEN BEGIN
            texto_confirm := Text030 + ' ' + Bono + ' ' + Text031 + Habitacion + ' ' +
                             Text032 + ' ' + rCupoCom."Habitacion cupo" + '?';

            IF NOT CONFIRM(texto_confirm) THEN
              EXIT;
          END;
          IF NOT "Modificacion importacion" THEN
            VALIDATE(Habitacion, rCupoCom."Habitacion cupo");
        END;
      END;

      Rec.MODIFY;
    END;

    PROCEDURE validate_entrada@8();
    BEGIN
      // validate_entrada

      IF "Fecha salida" <> 0D THEN
        Estancia := "Fecha salida" - "Fecha entrada"
      ELSE
      BEGIN
        "Fecha salida" := "Fecha entrada" + 7;

        //. Ponemos esta fecha de salida en los acompa¤antes

        rPer.RESET;
        rPer.SETRANGE (Delegacion    , Delegacion);
        rPer.SETRANGE ("N§ Interno"  , "N§ Interno");
        rPer.SETFILTER("N§ Periodo"  , '<>%1', "N§ Periodo");
        rPer.SETFILTER("Fecha salida", '>%1', "Fecha salida");
        IF NOT rPer.FINDFIRST THEN BEGIN
          rAco.RESET;
          rAco.SETRANGE(Delegacion  , Delegacion);
          rAco.SETRANGE("N§ Interno", "N§ Interno");
          IF rAco.FINDSET(TRUE) THEN
            rAco.MODIFYALL("Fecha salida", "Fecha salida");
        END;

        Estancia := 1;
      END;

      IF NOT "Modificacion importacion" THEN
        comp_fechas;

      comprobar_paro_ventas("Hotel origen precios");
      buscar_contrato('', '');
      buscar_habitacion('', '', TRUE);
      buscar_regimen('', '');

      // Bajar a reserva hotel

      //IF "Fecha entrada" <> xRec."Fecha entrada" THEN BEGIN
        rRsvHot.RESET;
        rRsvHot.SETCURRENTKEY(Delegacion,
                              "N§ Interno",
                              "N§ Periodo");
        rRsvHot.SETRANGE(Delegacion  , Delegacion);
        rRsvHot.SETRANGE("N§ Interno", "N§ Interno");
        rRsvHot.SETRANGE("N§ Periodo", "N§ Periodo");
        IF rRsvHot.FINDSET(TRUE) THEN BEGIN
          REPEAT

            IF rRsvHot."Fecha entrada" <> "Fecha entrada" THEN BEGIN
              //IF rRsvHot."Comunicado hotel" THEN
              //  rRsvHot.PasarBuzon(rRsvHot);
              rRsvHot."Fecha entrada"        := "Fecha entrada";
              rRsvHot.Estancia               := Estancia;
              rRsvHot."Cambiar booking"      := TRUE;
              rRsvHot."Modificacion critica" := TRUE;
              rRsvHot.MODIFY(TRUE);
            END;
          UNTIL rRsvHot.NEXT = 0;
        END;

        // Bajar a reserva transfer
        //
        rRsvTra.RESET;
        rRsvTra.SETCURRENTKEY(Delegacion,
                              "N§ Interno",
                              "N§ Periodo");
        rRsvTra.SETRANGE(Delegacion  , Delegacion);
        rRsvTra.SETRANGE("N§ Interno", "N§ Interno");
        rRsvTra.SETRANGE("N§ Periodo", "N§ Periodo");
        IF rRsvTra.FINDSET(TRUE) THEN BEGIN
          REPEAT
            rRsvTra.VALIDATE("Fecha entrada", "Fecha entrada");
            //. Eliminamos la marca de No Show
            rRsvTra.VALIDATE("No Show"      , FALSE);
            rRsvTra.MODIFY;
          UNTIL rRsvTra.NEXT = 0;
        END;
      //END;

      // Bajar a los acompa¤antes si es la menor fecha de entrada

      rPer.RESET;
      rPer.SETRANGE (Delegacion     , Delegacion);
      rPer.SETRANGE ("N§ Interno"   , "N§ Interno");
      rPer.SETFILTER("N§ Periodo"   , '<>%1', "N§ Periodo");
      rPer.SETFILTER("Fecha entrada", '<%1', "Fecha entrada");
      IF NOT rPer.FINDFIRST THEN
      BEGIN
        rAco.RESET;
        rAco.SETRANGE(Delegacion  , Delegacion);
        rAco.SETRANGE("N§ Interno", "N§ Interno");
        IF rAco.FINDSET(TRUE) THEN
        BEGIN
          rAco.MODIFYALL("Fecha entrada", "Fecha entrada");
          //. Eliminamos la marca de No Show
          rAco.MODIFYALL("No show", FALSE);
        END;
      END;

      //. Resto de campos del Plan de Vuelo
      VALIDATE("Modificacion importacion", FALSE);
      VALIDATE("Compa¤ia entrada");
      VALIDATE("Vuelo entrada");
      VALIDATE("Terminal entrada");
      VALIDATE("Hora entrada");
      VALIDATE("IATA origen entrada");
      VALIDATE("IATA destino entrada");

      // Bajar a Hotel circuito

      rPar.FINDFIRST;
      IF (NOT GesCuaCircuito) AND (rPar."Activar m¢dulo circuitos") THEN
      BEGIN
        rHotCir.SETCURRENTKEY(Delegacion, "N§ interno", Periodo);
        rHotCir.SETRANGE(Delegacion  , Delegacion);
        rHotCir.SETRANGE("N§ interno", "N§ Interno");
        rHotCir.SETRANGE(Periodo     , "N§ Periodo");
        IF rHotCir.FINDFIRST THEN
        BEGIN
          rHotCir."Fecha Entrada" := "Fecha entrada";
          rHotCir.Estancia        := Estancia;
          rHotCir.MODIFY;
        END;
      END;

      // Historico

      cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", 0, 1, FIELDCAPTION("Fecha entrada"),
                          STRSUBSTNO('%1', xRec."Fecha entrada"), STRSUBSTNO('%1', "Fecha entrada"));
    END;

    PROCEDURE validate_salida@9();
    BEGIN
      // validate_salida

      IF NOT "Modificacion importacion" THEN
        comp_fechas;

      IF ("Fecha entrada" <> 0D) AND ("Fecha salida" <> 0D) THEN
        Estancia := "Fecha salida" - "Fecha entrada";

      comprobar_paro_ventas("Hotel origen precios");
      buscar_contrato('', '');
      buscar_habitacion('', '', TRUE);
      buscar_regimen('', '');

      CheckContratoTransfer;

      //IF "Fecha salida" <> xRec."Fecha salida" THEN BEGIN
        // Bajar a reserva hotel
        //
        rRsvHot.RESET;
        rRsvHot.SETCURRENTKEY(Delegacion,
                              "N§ Interno",
                              "N§ Periodo");
        rRsvHot.SETRANGE(Delegacion  , Delegacion);
        rRsvHot.SETRANGE("N§ Interno", "N§ Interno");
        rRsvHot.SETRANGE("N§ Periodo", "N§ Periodo");
        IF rRsvHot.FINDSET(TRUE) THEN BEGIN
          REPEAT
            IF rRsvHot."Fecha salida" <> "Fecha salida" THEN BEGIN
              //IF rRsvHot."Comunicado hotel" THEN
              //  rRsvHot.PasarBuzon(rRsvHot);
              rRsvHot."Fecha salida" := "Fecha salida";
              rRsvHot.Estancia := Estancia;
              rRsvHot."Cambiar booking" := TRUE;
              rRsvHot."Modificacion critica" := TRUE;
              rRsvHot.MODIFY(TRUE);
            END;
          UNTIL rRsvHot.NEXT = 0;
        END;

        // Bajar a reserva transfer

        rRsvTra.RESET;
        rRsvTra.SETCURRENTKEY(Delegacion,
                              "N§ Interno",
                              "N§ Periodo");
        rRsvTra.SETRANGE(Delegacion  , Delegacion);
        rRsvTra.SETRANGE("N§ Interno", "N§ Interno");
        rRsvTra.SETRANGE("N§ Periodo", "N§ Periodo");
        IF rRsvTra.FINDSET(TRUE) THEN BEGIN
          REPEAT
            rRsvTra.VALIDATE("Fecha salida", "Fecha salida");
            rRsvTra.MODIFY;
          UNTIL rRsvTra.NEXT = 0;
        END;
      //END;

      // Bajar a los acompa¤antes si es la mayor fecha de salida

      rPer.RESET;
      rPer.SETRANGE (Delegacion    , Delegacion);
      rPer.SETRANGE ("N§ Interno"  , "N§ Interno");
      rPer.SETFILTER("N§ Periodo"  , '<>%1', "N§ Periodo");
      rPer.SETFILTER("Fecha salida", '>%1', "Fecha salida");
      IF NOT rPer.FINDFIRST THEN BEGIN
        rAco.RESET;
        rAco.SETRANGE(Delegacion  , Delegacion);
        rAco.SETRANGE("N§ Interno", "N§ Interno");
        IF rAco.FINDSET(TRUE) THEN
          rAco.MODIFYALL("Fecha salida", "Fecha salida");
        rAco.RESET;
      END;

      // Bajar a Hotel circuito

      rPar.FINDFIRST;
      IF (NOT GesCuaCircuito) AND (rPar."Activar m¢dulo circuitos") THEN
      BEGIN
        rHotCir.SETCURRENTKEY(Delegacion, "N§ interno", Periodo);
        rHotCir.SETRANGE(Delegacion  , Delegacion);
        rHotCir.SETRANGE("N§ interno", "N§ Interno");
        rHotCir.SETRANGE(Periodo     , "N§ Periodo");
        IF rHotCir.FINDFIRST THEN BEGIN
          rHotCir."Fecha Salida" := "Fecha salida";
          rHotCir.Estancia       := Estancia;
          rHotCir.MODIFY;
        END;
      END;

      // Historico

      cPar.intro_historic(Delegacion, "N§ Interno", "N§ Periodo", 0, 1, FIELDCAPTION("Fecha salida"),
                          STRSUBSTNO('%1', xRec."Fecha salida"), STRSUBSTNO('%1', "Fecha salida"));
    END;

    PROCEDURE Gestion_Cuadrante_Circuito@7(par_GesCuaCircuito@1103355000 : Boolean);
    BEGIN
      GesCuaCircuito := par_GesCuaCircuito;
    END;

    PROCEDURE Cambiasw_entrada@10(pwvalor@1103355000 : Boolean);
    BEGIN
      sw_entrada := pwvalor;
    END;

    PROCEDURE Cambiasw_salida@11(pwvalor@1103355000 : Boolean);
    BEGIN
      sw_salida := pwvalor;
    END;

    PROCEDURE CheckEnvioConfirmacion@1100217000(pwBorrado@1100217001 : Boolean);
    VAR
      lrTTOO@1100217000 : Record 7009717;
    BEGIN
      // _CheckEnvioConfirmacion

      IF NOT Generada THEN
        EXIT;

      IF "Fecha entrada" = 0D THEN
        EXIT;

      //+$035 <
      IF "TourOperador Venta" = '' THEN
        _GetDatosCabecera;
      //+$035 >

      IF NOT lrTTOO.GET("TourOperador Venta") THEN
        EXIT;

      IF NOT lrTTOO."Requiere confirmaci¢n por rsv" THEN
        EXIT;

      //. Si ya esta marcada como pendiente de enviar no la volvemos a marcar
      rCab.GET(Delegacion, "N§ Interno");
      IF NOT rCab."Confirmacion servicios enviada" THEN
        EXIT;

      IF ("Compa¤ia entrada" <> xRec."Compa¤ia entrada") OR
         ("Vuelo entrada" <> xRec."Vuelo entrada") OR
         ("Fecha entrada" <> xRec."Fecha entrada") OR
         ("Compa¤ia salida" <> xRec."Compa¤ia salida") OR
         ("Vuelo salida" <> xRec."Vuelo salida") OR
         ("Fecha salida" <> xRec."Fecha salida") OR
         (Paquete <> xRec.Paquete) OR
         ("N§ Habitaciones" <> xRec."N§ Habitaciones") OR
         (Habitacion <> xRec.Habitacion) OR
         (Regimen <> xRec.Regimen) OR
         ("Hotel reservado" <> xRec."Hotel reservado") OR
         ("Hotel Booking" <> xRec."Hotel Booking") OR
         ("Transfer Privado" <> xRec."Transfer Privado") OR
         ("IATA destino entrada" <> xRec."IATA destino entrada") OR //+$016
         ("IATA origen salida" <> xRec."IATA origen salida") OR     //+$016
         (pwBorrado) OR //+$012
         ("Tipo vehiculo solicitado" <> xRec."Tipo vehiculo solicitado") OR //+$018
         ("Servicio transfer entrada" <> xRec."Servicio transfer entrada") OR // +$025
         ("Servicio transfer salida" <> xRec."Servicio transfer salida") THEN // +$025
      BEGIN
        rCab.VALIDATE("Confirmacion servicios enviada", FALSE);
        rCab.MODIFY;
      END;
    END;

    PROCEDURE CheckContratoTransfer@1100217001();
    VAR
      lrRsv@1100217001 : Record 7009744;
      lrContrato@1000000000 : Record 7009788;
      lrAco@1000000004 : Record 7009748;
      lrParPer@1000000006 : Record 7009701;
      lrCab@1000000007 : Record 7009741;
      lwShowError@1000000001 : Boolean;
      lwTransferPrivado@1000000003 : Boolean;
      lwPersonas@1000000005 : Integer;
    BEGIN
      // CheckContratoTransfer

      IF (Paquete = '') OR
         ("Fecha entrada" = 0D) OR
         ("Hotel Booking" = '') THEN
        EXIT;

      //+$035 <
      IF "TourOperador Venta" = '' THEN
        _GetDatosCabecera;
      //+$035 >

      IF NOT CheckProductoTransfer THEN
        EXIT;

      lwShowError := (NOT "Modificacion importacion") AND GUIALLOWED;

      lrParPer.FINDFIRST;

      lrAco.RESET;
      lrAco.SETRANGE (Delegacion    , Delegacion);
      lrAco.SETRANGE ("N§ Interno"  , "N§ Interno");
      lrAco.SETFILTER("Tipo Persona", '<>%1', lrParPer."Codigo Infant");
      IF lrAco.FINDSET THEN
        lwPersonas := lrAco.COUNT;

      lrCab.GET(Delegacion, "N§ Interno");

      //. Buscamos las condiciones de entrada
      IF "Servicio transfer entrada" <> "Servicio transfer entrada"::Ninguno THEN
      BEGIN
        IF lrRsv.CheckContratoVenta(lrContrato, "TourOperador Venta", "Fecha entrada", '', lwShowError) THEN
        BEGIN
          IF "IATA destino entrada" <> '' THEN
            lrRsv.CheckPrecioVenta(lrContrato, lwShowError, "IATA destino entrada", "Hotel Booking", "Fecha entrada",
                                   lwPersonas, "Servicio transfer entrada", "Tipo vehiculo solicitado", lrCab."Tipo Operacion");
        END;
      END;

      //. Buscamos las condiciones de salida
      IF "Servicio transfer salida" <> "Servicio transfer salida"::Ninguno THEN
      BEGIN
        IF lrRsv.CheckContratoVenta(lrContrato, "TourOperador Venta", "Fecha salida", '', lwShowError) THEN
        BEGIN
          IF "IATA origen salida" <> '' THEN
            lrRsv.CheckPrecioVenta(lrContrato, lwShowError, "IATA origen salida", "Hotel Booking", "Fecha salida",
                                   lwPersonas, "Servicio transfer salida", "Tipo vehiculo solicitado", lrCab."Tipo Operacion");
        END;
      END;
    END;

    PROCEDURE CheckProductoTransfer@1100217002() : Boolean;
    VAR
      lrProd@1100217000 : Record 7009752;
    BEGIN
      // CheckProductoTransfer

      lrProd.RESET;
      lrProd.SETRANGE(Paquete        , Paquete);
      lrProd.SETRANGE("Tipo Producto", lrProd."Tipo Producto"::Transfer);
      IF lrProd.ISEMPTY THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    LOCAL PROCEDURE _MarkCabeceraGenerada@1100217003();
    BEGIN
      // _MarkCabeceraGenerada

      //+$006 <
      IF NOT Generada THEN
      BEGIN
        IF ("Hotel reservado" <> '') AND ("Fecha entrada" <> 0D) THEN
        BEGIN
          IF rCab.GET(Delegacion, "N§ Interno") THEN
          BEGIN
            IF rCab.Generada THEN //+$019
            BEGIN
              rCab.Generada := FALSE;
              rCab.MODIFY;
            END;
          END;
        END;
      END;
      //+$006 >
    END;

    LOCAL PROCEDURE _GetDatosCabecera@1000000000();
    VAR
      lrCab@1000000000 : Record 7009741;
    BEGIN
      // _GetDatosCabecera

      IF lrCab.GET(Delegacion, "N§ Interno") THEN
      BEGIN
        IF (Delegacion = '') AND (lrCab.Delegacion <> '') THEN
          Delegacion := lrCab.Delegacion;

        IF ("TourOperador Venta" = '') AND (lrCab."TourOperador Venta" <> '') THEN
          "TourOperador Venta" := lrCab."TourOperador Venta";

        IF (Bono = '') AND (lrCab.Bono <> '') THEN
          Bono := rCab.Bono;

        IF (Nombre = '') AND (lrCab.Nombre <> '') THEN
          Nombre := rCab.Nombre;

        IF (Temporada = '') AND (lrCab.Temporada <> '') THEN
          Temporada := lrCab.Temporada;

        IF ("Fecha venta" = 0D) AND (rCab."Fecha venta" <> 0D) THEN
          VALIDATE("Fecha venta", rCab."Fecha venta");
      END;
    END;

    BEGIN
    {
      $001 AJS 21012011 En los lookup de Fecha entrada y Fecha salida control para que no se asigne informacion de vuelo
                        si no hay reserva de transfer.

      $002 AJS 25102011 En la funcion buscar_contrato se busca siempre el contrato de venta para el Touroperador de venta
                        no empleando el touroperador de grupo.

      $003 JPT 17/10/12 A¤ado nuevo campo "Id Prod TO" para identificar el codigo ID del producto para el TTOO

      $004 AJS 20062013 El campo Tipo Persona es obsoleto

      $005 AJS 15022014 Nuevo campo "Fecha creacion"

      $006 AJS 13032014 No marcamos la cabecera como no generada hasta que no se introduce el hotel y las fechas

      $007 AJS 17032014 Si se modifican datos hay que marcar la reserva para volverla enviar al touroperador

      $008 AJS 21032014 Si se cambia el Touroperador, el Paquete, la Fecha de entrada o el aeropuerto de entrada se comprueba
                        el contrato de venta de transfer

      $009 AJS 28032014 Hago editable el campo Transfer privado para poder hacer esta asignacion directamente sin tener en cuenta la
                        conversion de hotel

      $010 AJS 29042014 Nuevo campo Usuario creacion

      $011 AJS 29042014 Cuando creo un periodo nuevo tambien verifico la marca de generada de la cabecera

      $012 AJS 29042014 Nuevo parametro en funcion CheckEnvioConfirmacion para trabajar con los borrados

      $013 AJS 14052014 Comprobar que el hotel booking tiene asignada Zona fisica

      $014 AJS 29052014 Cambio el manejo de los transfers privados para poder trabajar con llegada/salida en las reservas transfer

      $015 AJS 03062014 Hago que los campos "IATA destino entrada" y "IATA origen salida" sean editables para poder indicar sin necesidad
                        de vuelo, de esta manera se marca la ruta del transfer y se puede buscar el contrato y el precio

      $016 AJS 03062014 Modifico la funcion CheckEnvioConfirmacion para que los cambios de aeropuerto local vuelvan a lanzar
                        la confirmacion

      $017 AJS 09062014 Modifico el nombre del campo a Touroperador Venta para mayor claridad

      $018 AJS 09062014 CNT-OC-14046, Nuevo campo "Tipo vehiculo solicitado" para poder indicar un tipo de vehiculo en los transfer

      $019 AJS 21072014 Modifico la funcion _MarkCabeceraGenerada para tratar de evitar error al actualizar una cabecera

      $020 AJS 22072014 Modifico la funcion CheckContratoTransfer para que tambien compruebe precios

      $021 MNC 22072014 CNT-LP-14054 No se pueden usar TTOO bloqueados

      $022 AJS 23092014 No pedir confirmacion al marcar Transfer privado desde la importacion de reservas

      $023 AJS 23092014 Modifico la funcion comp_fechas para comprobar siempre si la fecha de llegada es anterior a la de salida

      $024 AJS 24092014 Corrijo error en las marcas de transfer privado de la reservas de transfer

      $025 ARM 29092014 CNT-CAR-14063 Nuevos campos de Servicio transfer entrada y salida

      $026 AJS 06102014 Traducciones

      $027 AJS 06102014 La opcion Regular de los campos Tipo servicio transfer, la pongo como Compartido

      $028 AJS 13102014 El campo Reservas transfer no tiene que contar los traslados en destino

      $029 AJS 21102014 Cambio como se pasan los campos Servicio transfer a la reserva de transfer

      $030 AJS 22102014 Modifico la Table relation de "IATA destino entrada" y "IATA origen salida" para que
                        tengan que ser aeropuertos locales

      $031 AJS 28102014 Amplio el campo Nombre a Text50

      $032 AJS 02032015 Cambio el modo de borrar la informaci¢n de circuitos para prevenir un error de aplicacion

      $033 AJS 14052015 Cambio en el cambio de Fecha entrada y Fecha salida

      $034 AJS 23060215 Modificar el validate de los campos de servicios transfer para mejorar el mensaje

      $035 AJS 24062015 Nueva funcion _GetDatosCabecera para rellenar los datos que vienen de cabecera reserva, porque
                        en ocasiones lo necesitamos antes de hacer el insert

      $036 AJS 01072015 Elimino la confirmaci¢n al cambiar el servicio transfer contratado

      $037 AJS 07072015 Elimino esa misma confirmacion del campo Transfer privado
    }
    END.
  }
}
