OBJECT Table 7302 Bin Content
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=NAVW16.00.01;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF Default THEN
                 IF WMSManagement.CheckDefaultBin(
                   "Item No.","Variant Code","Location Code","Bin Code")
                 THEN
                   ERROR(Text010,"Location Code","Item No.","Variant Code");

               GetLocation("Location Code");
               IF Location."Directed Put-away and Pick" THEN
                 TESTFIELD("Zone Code")
               ELSE
                 TESTFIELD("Zone Code",'');

               IF "Min. Qty." > "Max. Qty." THEN
                 ERROR(
                   Text005,
                   FIELDCAPTION("Max. Qty."),"Max. Qty.",
                   FIELDCAPTION("Min. Qty."),"Min. Qty.");
             END;

    OnModify=BEGIN
               IF Default THEN
                 IF WMSManagement.CheckDefaultBin(
                   "Item No.","Variant Code","Location Code","Bin Code")
                 THEN
                   ERROR(Text010,"Location Code","Item No.","Variant Code");

               GetLocation("Location Code");
               IF Location."Directed Put-away and Pick" THEN
                 TESTFIELD("Zone Code")
               ELSE
                 TESTFIELD("Zone Code",'');

               IF "Min. Qty." > "Max. Qty." THEN
                 ERROR(
                   Text005,
                   FIELDCAPTION("Max. Qty."),"Max. Qty.",
                   FIELDCAPTION("Min. Qty."),"Min. Qty.");
             END;

    OnDelete=BEGIN
               CALCFIELDS(
                 "Quantity (Base)","Pick Quantity (Base)","Negative Adjmt. Qty. (Base)",
                 "Put-away Quantity (Base)","Positive Adjmt. Qty. (Base)");
               IF "Quantity (Base)" <> 0 THEN
                 ERROR(Text000,TABLECAPTION);

               IF ("Pick Quantity (Base)" <> 0) OR ("Negative Adjmt. Qty. (Base)" <> 0) OR
                  ("Put-away Quantity (Base)" <> 0) OR ("Positive Adjmt. Qty. (Base)" <> 0)
               THEN
                 ERROR(Text001,TABLECAPTION);
             END;

    CaptionML=[ENU=Bin Content;
               ESP=Contenido ubicaci¢n];
    LookupFormID=Form7305;
    DrillDownFormID=Form7305;
  }
  FIELDS
  {
    { 1   ;   ;Location Code       ;Code10        ;TableRelation=Location;
                                                   OnValidate=BEGIN
                                                                IF (CurrFieldNo <> 0) AND ("Location Code" <> xRec."Location Code") THEN BEGIN
                                                                  CheckManualChange(FIELDCAPTION("Location Code"));
                                                                  "Bin Code" := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Location Code;
                                                              ESP=C¢d. almac‚n];
                                                   NotBlank=Yes }
    { 2   ;   ;Zone Code           ;Code10        ;TableRelation=Zone.Code WHERE (Location Code=FIELD(Location Code));
                                                   OnValidate=BEGIN
                                                                IF (CurrFieldNo <> 0) AND ("Zone Code" <> xRec."Zone Code") THEN
                                                                  CheckManualChange(FIELDCAPTION("Zone Code"));
                                                              END;

                                                   CaptionML=[ENU=Zone Code;
                                                              ESP=C¢d. zona];
                                                   NotBlank=Yes;
                                                   Editable=No }
    { 3   ;   ;Bin Code            ;Code20        ;TableRelation=IF (Zone Code=FILTER('')) Bin.Code WHERE (Location Code=FIELD(Location Code))
                                                                 ELSE IF (Zone Code=FILTER(<>'')) Bin.Code WHERE (Location Code=FIELD(Location Code),
                                                                                                                  Zone Code=FIELD(Zone Code));
                                                   OnValidate=BEGIN
                                                                IF (CurrFieldNo <> 0) AND ("Bin Code" <> xRec."Bin Code") THEN BEGIN
                                                                  CheckManualChange(FIELDCAPTION("Bin Code"));
                                                                  GetBin("Location Code","Bin Code");
                                                                  "Bin Type Code" := Bin."Bin Type Code";
                                                                  "Warehouse Class Code" := Bin."Warehouse Class Code";
                                                                  "Bin Ranking" := Bin."Bin Ranking";
                                                                  "Block Movement" := Bin."Block Movement";
                                                                  "Zone Code" := Bin."Zone Code";
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Bin Code;
                                                              ESP=C¢d. ubicaci¢n];
                                                   NotBlank=Yes }
    { 4   ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   OnValidate=BEGIN
                                                                IF (CurrFieldNo <> 0) AND ("Item No." <> xRec."Item No.") THEN BEGIN
                                                                  CheckManualChange(FIELDCAPTION("Item No."));
                                                                  "Variant Code" := '';
                                                                END;

                                                                IF ("Item No." <> xRec."Item No.") AND ("Item No." <> '') THEN BEGIN
                                                                  GetItem("Item No.");
                                                                  VALIDATE("Unit of Measure Code",Item."Base Unit of Measure");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Item No.;
                                                              ESP=N§ producto];
                                                   NotBlank=Yes }
    { 10  ;   ;Bin Type Code       ;Code10        ;TableRelation="Bin Type";
                                                   CaptionML=[ENU=Bin Type Code;
                                                              ESP=C¢d. tipo ubicaci¢n];
                                                   Editable=No }
    { 11  ;   ;Warehouse Class Code;Code10        ;TableRelation="Warehouse Class";
                                                   CaptionML=[ENU=Warehouse Class Code;
                                                              ESP=C¢d. clase almac‚n];
                                                   Editable=No }
    { 12  ;   ;Block Movement      ;Option        ;CaptionML=[ENU=Block Movement;
                                                              ESP=Movimiento bloqueado];
                                                   OptionCaptionML=[ENU=" ,Inbound,Outbound,All";
                                                                    ESP=" ,Entrada,Salida,Todos"];
                                                   OptionString=[ ,Inbound,Outbound,All] }
    { 15  ;   ;Min. Qty.           ;Decimal       ;CaptionML=[ENU=Min. Qty.;
                                                              ESP=Cantidad m¡n.];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 16  ;   ;Max. Qty.           ;Decimal       ;OnValidate=BEGIN
                                                                IF "Max. Qty." <> xRec."Max. Qty." THEN
                                                                  CheckBinMaxCubageAndWeight;
                                                              END;

                                                   CaptionML=[ENU=Max. Qty.;
                                                              ESP=Cantidad m x.];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 21  ;   ;Bin Ranking         ;Integer       ;CaptionML=[ENU=Bin Ranking;
                                                              ESP=Ranking ubicaci¢n];
                                                   Editable=No }
    { 26  ;   ;Quantity            ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Warehouse Entry".Quantity WHERE (Location Code=FIELD(Location Code),
                                                                                                     Bin Code=FIELD(Bin Code),
                                                                                                     Item No.=FIELD(Item No.),
                                                                                                     Variant Code=FIELD(Variant Code),
                                                                                                     Unit of Measure Code=FIELD(Unit of Measure Code),
                                                                                                     Lot No.=FIELD(Lot No. Filter),
                                                                                                     Serial No.=FIELD(Serial No. Filter)));
                                                   CaptionML=[ENU=Quantity;
                                                              ESP=Cantidad];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 29  ;   ;Pick Qty.           ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Warehouse Activity Line"."Qty. Outstanding" WHERE (Location Code=FIELD(Location Code),
                                                                                                                       Bin Code=FIELD(Bin Code),
                                                                                                                       Item No.=FIELD(Item No.),
                                                                                                                       Variant Code=FIELD(Variant Code),
                                                                                                                       Unit of Measure Code=FIELD(Unit of Measure Code),
                                                                                                                       Action Type=CONST(Take),
                                                                                                                       Lot No.=FIELD(Lot No. Filter),
                                                                                                                       Serial No.=FIELD(Serial No. Filter)));
                                                   CaptionML=[ENU=Pick Qty.;
                                                              ESP=Cdad. picking];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 30  ;   ;Neg. Adjmt. Qty.    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Warehouse Journal Line"."Qty. (Absolute)" WHERE (Location Code=FIELD(Location Code),
                                                                                                                     From Bin Code=FIELD(Bin Code),
                                                                                                                     Item No.=FIELD(Item No.),
                                                                                                                     Variant Code=FIELD(Variant Code),
                                                                                                                     Unit of Measure Code=FIELD(Unit of Measure Code),
                                                                                                                     Lot No.=FIELD(Lot No. Filter),
                                                                                                                     Serial No.=FIELD(Serial No. Filter)));
                                                   CaptionML=[ENU=Neg. Adjmt. Qty.;
                                                              ESP=Cdad. ajuste neg.];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 31  ;   ;Put-away Qty.       ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Warehouse Activity Line"."Qty. Outstanding" WHERE (Location Code=FIELD(Location Code),
                                                                                                                       Bin Code=FIELD(Bin Code),
                                                                                                                       Item No.=FIELD(Item No.),
                                                                                                                       Variant Code=FIELD(Variant Code),
                                                                                                                       Unit of Measure Code=FIELD(Unit of Measure Code),
                                                                                                                       Action Type=CONST(Place),
                                                                                                                       Lot No.=FIELD(Lot No. Filter),
                                                                                                                       Serial No.=FIELD(Serial No. Filter)));
                                                   CaptionML=[ENU=Put-away Qty.;
                                                              ESP=Cdad. ubicaci¢n];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 32  ;   ;Pos. Adjmt. Qty.    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Warehouse Journal Line"."Qty. (Absolute)" WHERE (Location Code=FIELD(Location Code),
                                                                                                                     To Bin Code=FIELD(Bin Code),
                                                                                                                     Item No.=FIELD(Item No.),
                                                                                                                     Variant Code=FIELD(Variant Code),
                                                                                                                     Unit of Measure Code=FIELD(Unit of Measure Code),
                                                                                                                     Lot No.=FIELD(Lot No. Filter),
                                                                                                                     Serial No.=FIELD(Serial No. Filter)));
                                                   CaptionML=[ENU=Pos. Adjmt. Qty.;
                                                              ESP=Cdad. ajuste pos.];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 37  ;   ;Fixed               ;Boolean       ;CaptionML=[ENU=Fixed;
                                                              ESP=Fijo] }
    { 40  ;   ;Cross-Dock Bin      ;Boolean       ;CaptionML=[ENU=Cross-Dock Bin;
                                                              ESP=Ubicaci¢n tr nsito directo] }
    { 41  ;   ;Default             ;Boolean       ;OnValidate=BEGIN
                                                                IF (xRec.Default <> Default) AND Default THEN
                                                                  IF WMSManagement.CheckDefaultBin(
                                                                    "Item No.","Variant Code","Location Code","Bin Code")
                                                                  THEN
                                                                    ERROR(Text010,"Location Code","Item No.","Variant Code");
                                                              END;

                                                   CaptionML=[ENU=Default;
                                                              ESP=Gen‚rico] }
    { 50  ;   ;Quantity (Base)     ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Warehouse Entry"."Qty. (Base)" WHERE (Location Code=FIELD(Location Code),
                                                                                                          Bin Code=FIELD(Bin Code),
                                                                                                          Item No.=FIELD(Item No.),
                                                                                                          Variant Code=FIELD(Variant Code),
                                                                                                          Unit of Measure Code=FIELD(Unit of Measure Code),
                                                                                                          Lot No.=FIELD(Lot No. Filter),
                                                                                                          Serial No.=FIELD(Serial No. Filter)));
                                                   CaptionML=[ENU=Quantity (Base);
                                                              ESP=Cantidad (base)];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 51  ;   ;Pick Quantity (Base);Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Warehouse Activity Line"."Qty. Outstanding (Base)" WHERE (Location Code=FIELD(Location Code),
                                                                                                                              Bin Code=FIELD(Bin Code),
                                                                                                                              Item No.=FIELD(Item No.),
                                                                                                                              Variant Code=FIELD(Variant Code),
                                                                                                                              Unit of Measure Code=FIELD(Unit of Measure Code),
                                                                                                                              Action Type=CONST(Take),
                                                                                                                              Lot No.=FIELD(Lot No. Filter),
                                                                                                                              Serial No.=FIELD(Serial No. Filter)));
                                                   CaptionML=[ENU=Pick Quantity (Base);
                                                              ESP=Cantidad picking (base)];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 52  ;   ;Negative Adjmt. Qty. (Base);Decimal;FieldClass=FlowField;
                                                   CalcFormula=Sum("Warehouse Journal Line"."Qty. (Absolute, Base)" WHERE (Location Code=FIELD(Location Code),
                                                                                                                           From Bin Code=FIELD(Bin Code),
                                                                                                                           Item No.=FIELD(Item No.),
                                                                                                                           Variant Code=FIELD(Variant Code),
                                                                                                                           Unit of Measure Code=FIELD(Unit of Measure Code),
                                                                                                                           Lot No.=FIELD(Lot No. Filter),
                                                                                                                           Serial No.=FIELD(Serial No. Filter)));
                                                   CaptionML=[ENU=Negative Adjmt. Qty. (Base);
                                                              ESP=Cantidad ajuste negativo (base)];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 53  ;   ;Put-away Quantity (Base);Decimal   ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Warehouse Activity Line"."Qty. Outstanding (Base)" WHERE (Location Code=FIELD(Location Code),
                                                                                                                              Bin Code=FIELD(Bin Code),
                                                                                                                              Item No.=FIELD(Item No.),
                                                                                                                              Variant Code=FIELD(Variant Code),
                                                                                                                              Unit of Measure Code=FIELD(Unit of Measure Code),
                                                                                                                              Action Type=CONST(Place),
                                                                                                                              Lot No.=FIELD(Lot No. Filter),
                                                                                                                              Serial No.=FIELD(Serial No. Filter)));
                                                   CaptionML=[ENU=Put-away Quantity (Base);
                                                              ESP=Cantidad ubicaci¢n (base)];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 54  ;   ;Positive Adjmt. Qty. (Base);Decimal;FieldClass=FlowField;
                                                   CalcFormula=Sum("Warehouse Journal Line"."Qty. (Absolute, Base)" WHERE (Location Code=FIELD(Location Code),
                                                                                                                           To Bin Code=FIELD(Bin Code),
                                                                                                                           Item No.=FIELD(Item No.),
                                                                                                                           Variant Code=FIELD(Variant Code),
                                                                                                                           Unit of Measure Code=FIELD(Unit of Measure Code),
                                                                                                                           Lot No.=FIELD(Lot No. Filter),
                                                                                                                           Serial No.=FIELD(Serial No. Filter)));
                                                   CaptionML=[ENU=Positive Adjmt. Qty. (Base);
                                                              ESP=Cantidad ajuste positivo (base)];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 5402;   ;Variant Code        ;Code10        ;TableRelation="Item Variant".Code WHERE (Item No.=FIELD(Item No.));
                                                   OnValidate=BEGIN
                                                                IF (CurrFieldNo <> 0) AND ("Variant Code" <> xRec."Variant Code") THEN
                                                                  CheckManualChange(FIELDCAPTION("Variant Code"));
                                                              END;

                                                   CaptionML=[ENU=Variant Code;
                                                              ESP=C¢d. variante] }
    { 5404;   ;Qty. per Unit of Measure;Decimal   ;InitValue=1;
                                                   CaptionML=[ENU=Qty. per Unit of Measure;
                                                              ESP=Cdad. por unidad medida];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 5407;   ;Unit of Measure Code;Code10        ;TableRelation="Item Unit of Measure".Code WHERE (Item No.=FIELD(Item No.));
                                                   OnValidate=BEGIN
                                                                IF (CurrFieldNo <> 0) AND ("Unit of Measure Code" <> xRec."Unit of Measure Code") THEN
                                                                  CheckManualChange(FIELDCAPTION("Unit of Measure Code"));

                                                                GetItem("Item No.");
                                                                "Qty. per Unit of Measure" :=
                                                                  UOMMgt.GetQtyPerUnitOfMeasure(Item,"Unit of Measure Code");
                                                              END;

                                                   CaptionML=[ENU=Unit of Measure Code;
                                                              ESP=C¢d. unidad medida];
                                                   NotBlank=Yes }
    { 6500;   ;Lot No. Filter      ;Code20        ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Lot No. Filter;
                                                              ESP=Filtro n§ lote] }
    { 6501;   ;Serial No. Filter   ;Code20        ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Serial No. Filter;
                                                              ESP=Filtro n§ serie] }
  }
  KEYS
  {
    {    ;Location Code,Bin Code,Item No.,Variant Code,Unit of Measure Code;
                                                   Clustered=Yes }
    {    ;Bin Type Code                            }
    {    ;Location Code,Item No.,Variant Code,Cross-Dock Bin,Qty. per Unit of Measure,Bin Ranking }
    {    ;Location Code,Warehouse Class Code,Fixed,Bin Ranking }
    {    ;Location Code,Item No.,Variant Code,Warehouse Class Code,Fixed,Bin Ranking }
    {    ;Item No.                                 }
    {    ;Default,Location Code,Item No.,Variant Code,Bin Code }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Item@1007 : Record 27;
      Location@1006 : Record 14;
      Bin@1000 : Record 7354;
      Text000@1001 : TextConst 'ENU=You cannot delete this %1, because the %1 contains items.;ESP=No puede eliminar este %1, porque el %1 contiene productos.';
      Text001@1002 : TextConst 'ENU=You cannot delete this %1, because warehouse document lines have items allocated to this %1.;ESP=No puede eliminar este %1, porque l¡ns. documento alm. tienen productos asignados a este %1.';
      Text002@1003 : TextConst 'ENU=The total cubage %1 of the %2 for the %5 exceeds the %3 %4 of the %5.\Do you still want enter this %2?;ESP=El cubicaje total %1 del %2 para el %5 excede el %3 %4 del %5.\¨Desea introducir este %2?';
      Text003@1005 : TextConst 'ENU=The total weight %1 of the %2 for the %5 exceeds the %3 %4 of the %5.\Do you still want enter this %2?;ESP=El peso total %1 del %2 para el %5 excede el %3 %4 del %5.\¨Desea introducir este %2?';
      Text004@1004 : TextConst 'ENU=Cancelled.;ESP=Cancelado.';
      Text005@1008 : TextConst 'ENU=The %1 %2 must not be less than the %3 %4.;ESP=El %1 %2 no debe ser menor que el %3 %4.';
      Text006@1009 : TextConst 'ENU=available must not be less than %1;ESP=disponible no debe ser menor que %1';
      UOMMgt@1010 : Codeunit 5402;
      Text007@1012 : TextConst 'ENU=You cannot modify the %1, because the %2 contains items.;ESP=No puede modificar el %1, porque el %2 contiene productos.';
      Text008@1011 : TextConst 'ENU=You cannot modify the %1, because warehouse document lines have items allocated to this %2.;ESP=No puede modificar el %1, porque l¡ns. documento alm. tienen productos asignados a este %2.';
      Text009@1013 : TextConst 'ENU=You must first set up user %1 as a warehouse employee.;ESP=Primero debe configurar usuario %1 como empleado almac‚n.';
      Text010@1014 : TextConst 'ENU=There is already a default bin content for location code %1, item no. %2 and variant code %3.;ESP=Hay ya un contenido de ubic. gen‚rica para el c¢d. de alm. %1, n§ prod. %2 y c¢d. variante %3.';
      WMSManagement@1015 : Codeunit 7302;

    PROCEDURE SetUpNewLine@8();
    BEGIN
      GetBin("Location Code","Bin Code");
      "Bin Type Code" := Bin."Bin Type Code";
      "Warehouse Class Code" := Bin."Warehouse Class Code";
      "Bin Ranking" := Bin."Bin Ranking";
      "Block Movement" := Bin."Block Movement";
      "Zone Code" := Bin."Zone Code";
      "Cross-Dock Bin" := Bin."Cross-Dock Bin";
    END;

    PROCEDURE CheckManualChange@6(CaptionField@1000 : Text[80]);
    BEGIN
      xRec.CALCFIELDS(
        "Quantity (Base)","Positive Adjmt. Qty. (Base)","Put-away Quantity (Base)",
        "Negative Adjmt. Qty. (Base)","Pick Quantity (Base)");
      IF xRec."Quantity (Base)" <> 0 THEN
        ERROR(Text007,CaptionField,TABLECAPTION);
      IF (xRec."Positive Adjmt. Qty. (Base)" <> 0) OR (xRec."Put-away Quantity (Base)" <> 0) OR
         (xRec."Negative Adjmt. Qty. (Base)" <> 0) OR (xRec."Pick Quantity (Base)" <> 0)
      THEN
        ERROR(Text008,CaptionField,TABLECAPTION);
    END;

    PROCEDURE CalcQtyAvailToPick@2(ExcludeQtyBase@1000 : Decimal) : Decimal;
    BEGIN
      CALCFIELDS("Quantity (Base)","Negative Adjmt. Qty. (Base)","Pick Quantity (Base)");
      EXIT("Quantity (Base)" - ("Pick Quantity (Base)" - ExcludeQtyBase + "Negative Adjmt. Qty. (Base)"));
    END;

    PROCEDURE CalcQtyAvailToPutAway@3(ExcludeQtyBase@1000 : Decimal) : Decimal;
    BEGIN
      CALCFIELDS("Quantity (Base)","Positive Adjmt. Qty. (Base)","Put-away Quantity (Base)");
      EXIT(
        ROUND("Max. Qty." * "Qty. per Unit of Measure",0.00001) -
        ("Quantity (Base)" + "Put-away Quantity (Base)" - ExcludeQtyBase + "Positive Adjmt. Qty. (Base)"));
    END;

    PROCEDURE NeedToReplenish@16(ExcludeQtyBase@1000 : Decimal) : Boolean;
    BEGIN
      CALCFIELDS("Quantity (Base)","Positive Adjmt. Qty. (Base)","Put-away Quantity (Base)");
      EXIT(
        ROUND("Min. Qty." * "Qty. per Unit of Measure",0.00001) >
        "Quantity (Base)" +
        ABS("Put-away Quantity (Base)" - ExcludeQtyBase + "Positive Adjmt. Qty. (Base)"));
    END;

    PROCEDURE CalcQtyToReplenish@24(ExcludeQtyBase@1000 : Decimal) : Decimal;
    BEGIN
      CALCFIELDS("Quantity (Base)","Positive Adjmt. Qty. (Base)","Put-away Quantity (Base)");
      EXIT(
        ROUND("Max. Qty." * "Qty. per Unit of Measure",0.00001) -
        ("Quantity (Base)" + "Put-away Quantity (Base)" - ExcludeQtyBase + "Positive Adjmt. Qty. (Base)"));
    END;

    PROCEDURE CheckBinMaxCubageAndWeight@4();
    VAR
      BinContent@1000 : Record 7302;
      WMSMgt@1001 : Codeunit 7302;
      TotalCubage@1002 : Decimal;
      TotalWeight@1003 : Decimal;
      Cubage@1005 : Decimal;
      Weight@1004 : Decimal;
    BEGIN
      GetBin("Location Code","Bin Code");
      IF (Bin."Maximum Cubage" <> 0) OR (Bin."Maximum Weight" <> 0) THEN BEGIN
        BinContent.SETRANGE("Location Code","Location Code");
        BinContent.SETRANGE("Bin Code","Bin Code");
        IF BinContent.FIND('-') THEN
          REPEAT
            IF (BinContent."Location Code" = "Location Code") AND
               (BinContent."Bin Code" = "Bin Code") AND
               (BinContent."Item No." = "Item No.") AND
               (BinContent."Variant Code" = "Variant Code") AND
               (BinContent."Unit of Measure Code" = "Unit of Measure Code")
            THEN
              WMSMgt.CalcCubageAndWeight(
                "Item No.","Unit of Measure Code","Max. Qty.",Cubage,Weight)
            ELSE
              WMSMgt.CalcCubageAndWeight(
                BinContent."Item No.",BinContent."Unit of Measure Code",
                BinContent."Max. Qty.",Cubage,Weight);
            TotalCubage := TotalCubage + Cubage;
            TotalWeight := TotalWeight + Weight;
          UNTIL BinContent.NEXT = 0;

        IF (Bin."Maximum Cubage" > 0) AND (Bin."Maximum Cubage" - TotalCubage < 0) THEN
          IF NOT CONFIRM(
            Text002,
            FALSE,TotalCubage,FIELDCAPTION("Max. Qty."),
            Bin.FIELDCAPTION("Maximum Cubage"),Bin."Maximum Cubage",Bin.TABLECAPTION)
          THEN
            ERROR(Text004);
        IF (Bin."Maximum Weight" > 0) AND (Bin."Maximum Weight" - TotalWeight < 0) THEN
          IF NOT CONFIRM(
            Text003,
            FALSE,TotalWeight,FIELDCAPTION("Max. Qty."),
            Bin.FIELDCAPTION("Maximum Weight"),Bin."Maximum Weight",Bin.TABLECAPTION)
          THEN
            ERROR(Text004);
      END;
    END;

    PROCEDURE CheckDecreaseBinContent@21(QtyBase@1009 : Decimal;DecreaseQtyBase@1001 : Decimal);
    VAR
      WhseActivLine@1003 : Record 5767;
      QtyAvailToPickBase@1000 : Decimal;
    BEGIN
      IF "Block Movement" IN ["Block Movement"::Outbound,"Block Movement"::All] THEN
        FIELDERROR("Block Movement");

      GetLocation("Location Code");
      IF "Bin Code" = Location."Adjustment Bin Code" THEN
        EXIT;

      WhseActivLine.SETCURRENTKEY(
        "Item No.","Bin Code","Location Code","Action Type",
        "Variant Code","Unit of Measure Code","Breakbulk No.",
        "Activity Type","Lot No.","Serial No.","Original Breakbulk");
      WhseActivLine.SETRANGE("Item No.","Item No.");
      WhseActivLine.SETRANGE("Bin Code","Bin Code");
      WhseActivLine.SETRANGE("Location Code","Location Code");
      WhseActivLine.SETRANGE("Unit of Measure Code","Unit of Measure Code");
      WhseActivLine.SETRANGE("Variant Code","Variant Code");

      IF Location."Allow Breakbulk" THEN BEGIN
        WhseActivLine.SETRANGE("Action Type",WhseActivLine."Action Type"::Take);
        WhseActivLine.SETRANGE("Original Breakbulk",TRUE);
        WhseActivLine.SETRANGE("Breakbulk No.",0);
        WhseActivLine.CALCSUMS("Qty. (Base)");
        DecreaseQtyBase := DecreaseQtyBase + WhseActivLine."Qty. (Base)";
      END;

      QtyAvailToPickBase := CalcQtyAvailToPick(DecreaseQtyBase);
      IF QtyAvailToPickBase < QtyBase THEN
        FIELDERROR("Quantity (Base)",STRSUBSTNO(Text006,ABS(QtyBase)));
    END;

    PROCEDURE CheckIncreaseBinContent@22(QtyBase@1005 : Decimal;DeductQtyBase@1011 : Decimal;DeductCubage@1009 : Decimal;DeductWeight@1008 : Decimal;PutawayCubage@1007 : Decimal;PutawayWeight@1006 : Decimal;CalledbyPosting@1010 : Boolean);
    VAR
      WhseActivLine@1001 : Record 5767;
      WMSMgt@1002 : Codeunit 7302;
      QtyAvailToPutAwayBase@1000 : Decimal;
      AvailableWeight@1003 : Decimal;
      AvailableCubage@1004 : Decimal;
    BEGIN
      IF "Block Movement" IN ["Block Movement"::Inbound,"Block Movement"::All] THEN
        FIELDERROR("Block Movement");

      GetLocation("Location Code");
      IF ("Bin Code" = Location."Adjustment Bin Code") OR
         ("Bin Code" = Location."Open Shop Floor Bin Code") OR
         ("Bin Code" = Location."Inbound Production Bin Code") OR
         ("Bin Code" = Location."Outbound Production Bin Code")
      THEN
        EXIT;

      CheckWhseClass;

      IF QtyBase <> 0 THEN
        IF Location."Bin Capacity Policy" IN
           [Location."Bin Capacity Policy"::"Allow More Than Max. Capacity",
           Location."Bin Capacity Policy"::"Prohibit More Than Max. Cap."]
        THEN BEGIN
          IF "Max. Qty." <> 0 THEN BEGIN
            QtyAvailToPutAwayBase := CalcQtyAvailToPutAway(DeductQtyBase);
            WMSMgt.CheckPutAwayAvailability(
              "Bin Code",WhseActivLine.FIELDCAPTION("Qty. (Base)"),TABLECAPTION,QtyBase,QtyAvailToPutAwayBase,
              (Location."Bin Capacity Policy" =
               Location."Bin Capacity Policy"::"Prohibit More Than Max. Cap.") AND CalledbyPosting);
          END ELSE BEGIN
            GetBin("Location Code","Bin Code");
            IF (Bin."Maximum Cubage" <> 0) OR (Bin."Maximum Weight" <> 0) THEN BEGIN
              Bin.CalcCubageAndWeight(AvailableCubage,AvailableWeight,CalledbyPosting);
              IF NOT CalledbyPosting THEN BEGIN
                AvailableCubage := AvailableCubage + DeductCubage;
                AvailableWeight := AvailableWeight + DeductWeight;
              END;

              IF (Bin."Maximum Cubage" <> 0) AND (PutawayCubage > AvailableCubage) THEN
                WMSMgt.CheckPutAwayAvailability(
                  "Bin Code",WhseActivLine.FIELDCAPTION(Cubage),Bin.TABLECAPTION,PutawayCubage,AvailableCubage,
                  (Location."Bin Capacity Policy" =
                   Location."Bin Capacity Policy"::"Prohibit More Than Max. Cap.") AND CalledbyPosting);

              IF (Bin."Maximum Weight" <> 0) AND (PutawayWeight > AvailableWeight) THEN
                WMSMgt.CheckPutAwayAvailability(
                  "Bin Code",WhseActivLine.FIELDCAPTION(Weight),Bin.TABLECAPTION,PutawayWeight,AvailableWeight,
                  (Location."Bin Capacity Policy" =
                   Location."Bin Capacity Policy"::"Prohibit More Than Max. Cap.") AND CalledbyPosting);
            END;
          END;
        END;
    END;

    PROCEDURE CheckWhseClass@5();
    VAR
      ProductGroup@1002 : Record 5723;
    BEGIN
      GetItem("Item No.");
      IF ProductGroup.GET(Item."Item Category Code",Item."Product Group Code") THEN
        TESTFIELD("Warehouse Class Code",ProductGroup."Warehouse Class Code")
      ELSE
        TESTFIELD("Warehouse Class Code",'');
    END;

    PROCEDURE ShowBinContents@7(LocationCode@1002 : Code[10];ItemNo@1003 : Code[20];VariantCode@1004 : Code[10];BinCode@1005 : Code[20]);
    VAR
      BinContent@1000 : Record 7302;
      BinContentLookup@1001 : Form 7305;
    BEGIN
      IF BinCode <> '' THEN
        BinContent.SETRANGE("Bin Code",BinCode)
      ELSE
        BinContent.SETCURRENTKEY("Location Code","Item No.","Variant Code");
      BinContent.SETRANGE("Item No.",ItemNo);
      BinContent.SETRANGE("Variant Code",VariantCode);
      BinContentLookup.SETTABLEVIEW(BinContent);
      BinContentLookup.Initialize(LocationCode);
      BinContentLookup.RUNMODAL;
      CLEAR(BinContentLookup);
    END;

    LOCAL PROCEDURE GetLocation@10(LocationCode@1000 : Code[10]);
    BEGIN
      IF Location.Code <> LocationCode THEN
        Location.GET(LocationCode);
    END;

    PROCEDURE GetBin@1(LocationCode@1000 : Code[10];BinCode@1002 : Code[20]);
    BEGIN
      IF (LocationCode = '') OR (BinCode = '') THEN
        Bin.INIT
      ELSE
        IF (Bin."Location Code" <> LocationCode) OR
           (Bin.Code <> BinCode)
        THEN
          Bin.GET(LocationCode,BinCode);
    END;

    LOCAL PROCEDURE GetItem@18(ItemNo@1000 : Code[20]);
    BEGIN
      IF Item."No." = ItemNo THEN
        EXIT;

      IF ItemNo = '' THEN
        Item.INIT
      ELSE
        Item.GET(ItemNo);
    END;

    PROCEDURE GetItemDescr@20(ItemNo@1000 : Code[20];VariantCode@1005 : Code[10];VAR ItemDescription@1001 : Text[50]);
    VAR
      Item@1002 : Record 27;
      ItemVariant@1004 : Record 5401;
      OldItemNo@1003 : Code[20];
    BEGIN
      ItemDescription := '';
      IF ItemNo <> OldItemNo THEN BEGIN
        ItemDescription := '';
        IF ItemNo <> '' THEN BEGIN
          IF Item.GET(ItemNo) THEN
            ItemDescription := Item.Description;
          IF VariantCode <> '' THEN
            IF ItemVariant.GET(ItemNo,VariantCode) THEN
              ItemDescription := ItemVariant.Description;
        END;
        OldItemNo := ItemNo;
      END;
    END;

    PROCEDURE GetWhseLocation@9(VAR CurrentLocationCode@1002 : Code[10];VAR CurrentZoneCode@1004 : Code[10]);
    VAR
      Location@1001 : Record 14;
      WhseEmployee@1003 : Record 7301;
      WMSMgt@1000 : Codeunit 7302;
    BEGIN
      IF USERID <> '' THEN BEGIN
        WhseEmployee.SETRANGE("User ID",USERID);
        IF NOT WhseEmployee.FIND('-') THEN
          ERROR(Text009,USERID);
        IF CurrentLocationCode <> '' THEN BEGIN
          IF NOT Location.GET(CurrentLocationCode) THEN BEGIN
            CurrentLocationCode := '';
            CurrentZoneCode := '';
          END ELSE BEGIN
            IF NOT Location."Bin Mandatory" THEN BEGIN
              CurrentLocationCode := '';
              CurrentZoneCode := '';
            END ELSE BEGIN
              WhseEmployee.SETRANGE("Location Code",CurrentLocationCode);
              IF NOT WhseEmployee.FIND('-') THEN BEGIN
                CurrentLocationCode := '';
                CurrentZoneCode := '';
              END;
            END
          END;
          IF CurrentLocationCode = '' THEN BEGIN
            CurrentLocationCode := WMSMgt.GetDefaultLocation;
            IF CurrentLocationCode <> '' THEN BEGIN
              Location.GET(CurrentLocationCode);
              IF NOT Location."Bin Mandatory" THEN
                CurrentLocationCode := '';
            END;
          END;
        END;
      END;
      FILTERGROUP := 2;
      IF CurrentLocationCode <> '' THEN
        SETRANGE("Location Code",CurrentLocationCode)
      ELSE
        SETRANGE("Location Code");
      IF CurrentZoneCode <> '' THEN
        SETRANGE("Zone Code",CurrentZoneCode)
      ELSE
        SETRANGE("Zone Code");
      FILTERGROUP := 0;
    END;

    PROCEDURE CalcQtyonAdjmtBin@11() : Decimal;
    VAR
      WhseEntry@1000 : Record 7312;
    BEGIN
      GetLocation("Location Code");
      WhseEntry.SETCURRENTKEY(
        "Item No.","Bin Code","Location Code","Variant Code","Unit of Measure Code");
      WhseEntry.SETRANGE("Item No.","Item No.");
      WhseEntry.SETRANGE("Bin Code",Location."Adjustment Bin Code");
      WhseEntry.SETRANGE("Location Code","Location Code");
      WhseEntry.SETRANGE("Variant Code","Variant Code");
      WhseEntry.SETRANGE("Unit of Measure Code","Unit of Measure Code");
      WhseEntry.CALCSUMS("Qty. (Base)");
      EXIT(WhseEntry."Qty. (Base)");
    END;

    PROCEDURE CalcQtyBase@49() : Decimal;
    VAR
      WhseEntry@1003 : Record 7312;
      WhseActivLine@1004 : Record 5767;
      WhseJnlLine@1005 : Record 7311;
    BEGIN
      WhseEntry.SETCURRENTKEY(
        "Item No.","Bin Code","Location Code","Variant Code",
        "Unit of Measure Code","Lot No.","Serial No.");
      WhseEntry.SETRANGE("Item No.","Item No.");
      WhseEntry.SETRANGE("Bin Code","Bin Code");
      WhseEntry.SETRANGE("Location Code","Location Code");
      WhseEntry.SETRANGE("Variant Code","Variant Code");
      WhseEntry.SETRANGE("Unit of Measure Code","Unit of Measure Code");
      COPYFILTER("Lot No. Filter",WhseEntry."Lot No.");
      COPYFILTER("Serial No. Filter",WhseEntry."Serial No.");
      WhseEntry.CALCSUMS("Qty. (Base)");

      WhseActivLine.SETCURRENTKEY(
        "Item No.","Bin Code","Location Code",
        "Action Type","Variant Code","Unit of Measure Code",
        "Breakbulk No.","Activity Type","Lot No.","Serial No.");
      WhseActivLine.SETRANGE("Item No.","Item No." );
      WhseActivLine.SETRANGE("Bin Code","Bin Code");
      WhseActivLine.SETRANGE("Location Code","Location Code");
      WhseActivLine.SETRANGE("Variant Code","Variant Code");
      WhseActivLine.SETRANGE("Unit of Measure Code","Unit of Measure Code");
      COPYFILTER("Lot No. Filter",WhseActivLine."Lot No.");
      COPYFILTER("Serial No. Filter",WhseActivLine."Serial No.");
      WhseActivLine.CALCSUMS("Qty. Outstanding (Base)");

      WhseJnlLine.SETCURRENTKEY(
        "Item No.","From Bin Code","Location Code","Entry Type","Variant Code",
        "Unit of Measure Code","Lot No.","Serial No.");
      WhseJnlLine.SETRANGE("Item No.","Item No." );
      WhseJnlLine.SETRANGE("From Bin Code","Bin Code");
      WhseJnlLine.SETRANGE("Location Code","Location Code");
      WhseJnlLine.SETRANGE("Variant Code","Variant Code");
      WhseJnlLine.SETRANGE("Unit of Measure Code","Unit of Measure Code");
      COPYFILTER("Lot No. Filter",WhseJnlLine."Lot No.");
      COPYFILTER("Serial No. Filter",WhseJnlLine."Serial No.");
      WhseJnlLine.CALCSUMS("Qty. (Absolute, Base)");

      EXIT(
        WhseEntry."Qty. (Base)" +
        WhseActivLine."Qty. Outstanding (Base)" +
        WhseJnlLine."Qty. (Absolute, Base)");
    END;

    PROCEDURE CalcQtyUOM@13() : Decimal;
    BEGIN
      GetItem("Item No.");
      CALCFIELDS("Quantity (Base)");
      IF Item."No." <> '' THEN
        EXIT(ROUND("Quantity (Base)" / UOMMgt.GetQtyPerUnitOfMeasure(Item,"Unit of Measure Code"),0.00001));
    END;

    PROCEDURE CalcQtyAvailToPickUOM@14() : Decimal;
    BEGIN
      GetItem("Item No.");
      IF Item."No." <> '' THEN
        EXIT(ROUND(CalcQtyAvailToPick(0) / UOMMgt.GetQtyPerUnitOfMeasure(Item,"Unit of Measure Code"),0.00001));
    END;

    PROCEDURE GetCaption@12() : Text[250];
    VAR
      ObjTransl@1000 : Record 377;
      ReservEntry@1008 : Record 337;
      ItemNo@1003 : Code[20];
      VariantCode@1004 : Code[10];
      BinCode@1001 : Code[20];
      LotNo@1006 : Code[20];
      SerialNo@1007 : Code[20];
      FormCaption@1005 : Text[250];
      SourceTableName@1002 : Text[30];
    BEGIN
      SourceTableName := ObjTransl.TranslateObject(ObjTransl."Object Type"::Table,14);
      FormCaption := STRSUBSTNO('%1 %2',SourceTableName,"Location Code");
      IF GETFILTER("Item No.") <> '' THEN
        IF GETRANGEMIN("Item No.") = GETRANGEMAX("Item No.") THEN BEGIN
          ItemNo := GETRANGEMIN("Item No.");
          IF ItemNo <> '' THEN BEGIN
            SourceTableName := ObjTransl.TranslateObject(ObjTransl."Object Type"::Table,27);
            FormCaption := STRSUBSTNO('%1 %2 %3',FormCaption,SourceTableName,ItemNo)
          END;
        END;

      IF GETFILTER("Variant Code") <> '' THEN
        IF GETRANGEMIN("Variant Code") = GETRANGEMAX("Variant Code") THEN BEGIN
          VariantCode := GETRANGEMIN("Variant Code");
          IF VariantCode <> '' THEN BEGIN
            SourceTableName := ObjTransl.TranslateObject(ObjTransl."Object Type"::Table,5401);
            FormCaption := STRSUBSTNO('%1 %2 %3',FormCaption,SourceTableName,VariantCode)
          END;
        END;

      IF GETFILTER("Bin Code") <> '' THEN
        IF GETRANGEMIN("Bin Code") = GETRANGEMAX("Bin Code") THEN BEGIN
          BinCode := GETRANGEMIN("Bin Code");
          IF BinCode <> '' THEN BEGIN
            SourceTableName := ObjTransl.TranslateObject(ObjTransl."Object Type"::Table,7354);
            FormCaption := STRSUBSTNO('%1 %2 %3',FormCaption,SourceTableName,BinCode);
          END;
        END;

      IF GETFILTER("Lot No. Filter") <> '' THEN
        IF GETRANGEMIN("Lot No. Filter") = GETRANGEMAX("Lot No. Filter") THEN BEGIN
          LotNo := GETRANGEMIN("Lot No. Filter");
          IF LotNo <> '' THEN BEGIN
            FormCaption := STRSUBSTNO('%1 %2 %3',FormCaption,ReservEntry.FIELDCAPTION("Lot No."),LotNo);
          END;
        END;

      IF GETFILTER("Serial No. Filter") <> '' THEN
        IF GETRANGEMIN("Serial No. Filter") = GETRANGEMAX("Serial No. Filter") THEN BEGIN
          SerialNo := GETRANGEMIN("Serial No. Filter");
          IF SerialNo <> '' THEN BEGIN
            FormCaption := STRSUBSTNO('%1 %2 %3',FormCaption,ReservEntry.FIELDCAPTION("Serial No."),SerialNo);
          END;
        END;

      EXIT(FormCaption);
    END;

    BEGIN
    END.
  }
}
