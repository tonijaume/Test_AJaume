OBJECT Table 290 VAT Amount Line
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVW16.00,NAVES6.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=VAT Amount Line;
               ESP=L¡n. importe IVA];
  }
  FIELDS
  {
    { 1   ;   ;VAT %               ;Decimal       ;CaptionML=[ENU=VAT %;
                                                              ESP=% IVA];
                                                   DecimalPlaces=0:6;
                                                   Editable=No }
    { 2   ;   ;VAT+EC Base         ;Decimal       ;CaptionML=[ENU=VAT+EC Base;
                                                              ESP=Base IVA+RE];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 3   ;   ;VAT Amount          ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("VAT %");
                                                                TESTFIELD("VAT+EC Base");
                                                                IF "VAT Amount" / "VAT+EC Base" < 0 THEN
                                                                  ERROR(Text002,FIELDCAPTION("VAT Amount"));
                                                                "VAT Difference" := "VAT Amount" - "Calculated VAT Amount";
                                                              END;

                                                   CaptionML=[ENU=VAT Amount;
                                                              ESP=Importe IVA];
                                                   AutoFormatType=1 }
    { 4   ;   ;Amount Including VAT+EC;Decimal    ;CaptionML=[ENU=Amount Including VAT+EC;
                                                              ESP=Cantidad con IVA+CE];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 5   ;   ;VAT Identifier      ;Code10        ;CaptionML=[ENU=VAT Identifier;
                                                              ESP=Identific. IVA];
                                                   Editable=No }
    { 6   ;   ;Line Amount         ;Decimal       ;CaptionML=[ENU=Line Amount;
                                                              ESP=Importe l¡nea];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 7   ;   ;Inv. Disc. Base Amount;Decimal     ;CaptionML=[ENU=Inv. Disc. Base Amount;
                                                              ESP=Base descuento factura];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 8   ;   ;Invoice Discount Amount;Decimal    ;OnValidate=BEGIN
                                                                TESTFIELD("Inv. Disc. Base Amount");
                                                                IF ("Invoice Discount Amount" / "Inv. Disc. Base Amount" > 1) THEN
                                                                  ERROR(
                                                                    Text003,
                                                                    FIELDCAPTION("Invoice Discount Amount"),FIELDCAPTION("Inv. Disc. Base Amount"));
                                                                "VAT+EC Base" := "Line Amount" - "Invoice Discount Amount" - "Pmt. Disc. Given Amount";
                                                              END;

                                                   CaptionML=[ENU=Invoice Discount Amount;
                                                              ESP=Importe descuento factura];
                                                   AutoFormatType=1 }
    { 9   ;   ;VAT Calculation Type;Option        ;CaptionML=[ENU=VAT Calculation Type;
                                                              ESP=Tipo c lculo IVA];
                                                   OptionCaptionML=[ENU=Normal VAT,Reverse Charge VAT,Full VAT,Sales Tax,No taxable VAT;
                                                                    ESP=Normal,Reversi¢n,Total,Impto. venta,No sujeto];
                                                   OptionString=Normal VAT,Reverse Charge VAT,Full VAT,Sales Tax,No taxable VAT;
                                                   Editable=No }
    { 10  ;   ;Tax Group Code      ;Code10        ;TableRelation="Tax Group";
                                                   CaptionML=[ENU=Tax Group Code;
                                                              ESP=C¢d. grupo impuesto];
                                                   Editable=No }
    { 11  ;   ;Quantity            ;Decimal       ;CaptionML=[ENU=Quantity;
                                                              ESP=Cantidad];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 12  ;   ;Modified            ;Boolean       ;CaptionML=[ENU=Modified;
                                                              ESP=Modificado] }
    { 13  ;   ;Use Tax             ;Boolean       ;CaptionML=[ENU=Use Tax;
                                                              ESP=Utilizar impuesto] }
    { 14  ;   ;Calculated VAT Amount;Decimal      ;CaptionML=[ENU=Calculated VAT Amount;
                                                              ESP=Importe IVA calculado];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 15  ;   ;VAT Difference      ;Decimal       ;CaptionML=[ENU=VAT Difference;
                                                              ESP=Diferencia  IVA];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 16  ;   ;Positive            ;Boolean       ;CaptionML=[ENU=Positive;
                                                              ESP=Positivo] }
    { 17  ;   ;Includes Prepayment ;Boolean       ;CaptionML=[ENU=Includes Prepayment;
                                                              ESP=Incluye prepago] }
    { 10700;  ;EC %                ;Decimal       ;CaptionML=[ENU=EC %;
                                                              ESP=% RE] }
    { 10701;  ;EC Amount           ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("EC %");
                                                                TESTFIELD("VAT+EC Base");
                                                                IF "EC Amount" / "VAT+EC Base" < 0 THEN
                                                                  ERROR(Text002,FIELDCAPTION("EC Amount"));
                                                                "EC Difference" := "EC Amount" - "Calculated EC Amount";
                                                              END;

                                                   CaptionML=[ENU=EC Amount;
                                                              ESP=Importe RE];
                                                   AutoFormatType=1 }
    { 10702;  ;Pmt. Disc. Given Amount;Decimal    ;CaptionML=[ENU=Pmt. Disc. Given Amount;
                                                              ESP=Dto. P.P.] }
    { 10703;  ;Line Discount Amount;Decimal       ;CaptionML=[ENU=Line Discount Amount;
                                                              ESP=Importe dto. l¡nea] }
    { 10704;  ;Calculated EC Amount;Decimal       ;CaptionML=[ENU=Calculated EC Amount;
                                                              ESP=Importe calculado RE] }
    { 10705;  ;EC Difference       ;Decimal       ;CaptionML=[ENU=EC Difference;
                                                              ESP=Diferencia RE];
                                                   Editable=No }
    { 10706;  ;Prices Including VAT;Boolean       ;CaptionML=[ENU=Prices Including VAT;
                                                              ESP=Precios IVA incluido] }
  }
  KEYS
  {
    {    ;VAT Identifier,VAT Calculation Type,Tax Group Code,Use Tax,Positive;
                                                   Clustered=Yes }
    {    ;VAT %,EC %                               }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=%1% VAT;ESP=%1% IVA';
      Text001@1001 : TextConst 'ENU=VAT Amount;ESP=Importe IVA';
      Text002@1002 : TextConst 'ENU=%1 must not be negative.;ESP=%1 no debe ser negativo.';
      Text003@1003 : TextConst 'ENU=%1 must not be greater than %2.;ESP=%1 no debe ser m s grande de %2';
      Text004@1004 : TextConst 'ENU="%1 for %2 must not exceed %3 = %4.";ESP="%1 para %2 no debe exceder %3 = %4."';
      Currency@1005 : Record 4;
      AllowVATDifference@1006 : Boolean;
      PricesIncludingVAT@1007 : Boolean;
      GlobalsInitialized@1008 : Boolean;
      Text005@1009 : TextConst 'ENU="%1 must not exceed %2 = %3.";ESP="%1 no debe exceder %2 = %3."';
      GLSetup@1100002 : Record 98;
      CurrencyCod@1100001 : Code[10];
      RoundingPrec@1100000 : Decimal;
      Text1100000@1100100 : TextConst 'ENU=VAT+EC Amount;ESP=Importe IVA+RE';

    PROCEDURE CheckVATDifference@11(NewCurrencyCode@1000 : Code[10];NewAllowVATDifference@1001 : Boolean;NewPricesIncludingVAT@1002 : Boolean);
    VAR
      GLSetup@1003 : Record 98;
    BEGIN
      InitGlobals(NewCurrencyCode,NewAllowVATDifference,NewPricesIncludingVAT);
      IF NOT AllowVATDifference THEN
      BEGIN
        TESTFIELD("VAT Difference",0);
        TESTFIELD("EC Difference",0);
      END;
      IF ABS("VAT Difference") > Currency."Max. VAT Difference Allowed" THEN
        IF NewCurrencyCode <> '' THEN
          ERROR(
            Text004,FIELDCAPTION("VAT Difference"),Currency.Code,
            Currency.FIELDCAPTION("Max. VAT Difference Allowed"),Currency."Max. VAT Difference Allowed")
        ELSE BEGIN
          IF GLSetup.GET THEN;
          IF ABS("VAT Difference") > GLSetup."Max. VAT Difference Allowed" THEN
            ERROR(
              Text005,FIELDCAPTION("VAT Difference"),
              GLSetup.FIELDCAPTION("Max. VAT Difference Allowed"),GLSetup."Max. VAT Difference Allowed");
        END;
      IF ABS("EC Difference") > Currency."Max. VAT Difference Allowed" THEN
        IF NewCurrencyCode <> '' THEN
          ERROR(
            Text004,FIELDCAPTION("EC Difference"),Currency.Code,
            Currency.FIELDCAPTION("Max. VAT Difference Allowed"),Currency."Max. VAT Difference Allowed")
        ELSE BEGIN
          IF GLSetup.GET THEN;
          IF ABS("EC Difference") > GLSetup."Max. VAT Difference Allowed" THEN
            ERROR(
              Text005,FIELDCAPTION("EC Difference"),
              GLSetup.FIELDCAPTION("Max. VAT Difference Allowed"),GLSetup."Max. VAT Difference Allowed");
        END;
    END;

    LOCAL PROCEDURE InitGlobals@4(NewCurrencyCode@1000 : Code[10];NewAllowVATDifference@1001 : Boolean;NewPricesIncludingVAT@1002 : Boolean);
    BEGIN
      SetCurrency(NewCurrencyCode);
      AllowVATDifference := NewAllowVATDifference;
      PricesIncludingVAT := NewPricesIncludingVAT;
      GlobalsInitialized := TRUE;
    END;

    LOCAL PROCEDURE SetCurrency@15(CurrencyCode@1000 : Code[10]);
    BEGIN
      IF CurrencyCode = '' THEN
        Currency.InitRoundingPrecision
      ELSE
        Currency.GET(CurrencyCode);
    END;

    PROCEDURE InsertLine@1();
    VAR
      VATAmountLine@1000 : Record 290;
    BEGIN
      IF CurrencyCod <> '' THEN BEGIN
        IF Currency.GET(CurrencyCod) THEN;
        RoundingPrec := Currency."Invoice Rounding Precision";
      END ELSE BEGIN
        GLSetup.GET;
        RoundingPrec := GLSetup."Inv. Rounding Precision (LCY)";
      END;

      IF (("VAT+EC Base" <> 0) OR ("Amount Including VAT+EC" <> 0)) THEN BEGIN
        Positive := "Line Amount" >= 0;
        VATAmountLine := Rec;
        IF FIND THEN BEGIN
          "Line Amount" := "Line Amount" + VATAmountLine."Line Amount";
          "Inv. Disc. Base Amount" := "Inv. Disc. Base Amount" + VATAmountLine."Inv. Disc. Base Amount";
          "Pmt. Disc. Given Amount" := "Pmt. Disc. Given Amount" + VATAmountLine."Pmt. Disc. Given Amount";
          "Invoice Discount Amount" := "Invoice Discount Amount" + VATAmountLine."Invoice Discount Amount";
          Quantity := Quantity + VATAmountLine.Quantity;
          "VAT+EC Base" := "VAT+EC Base" + VATAmountLine."VAT+EC Base";
          "Amount Including VAT+EC" := "Amount Including VAT+EC" + VATAmountLine."Amount Including VAT+EC";
          IF ("VAT %" + "EC %" <> 0) THEN BEGIN
            "VAT Amount" := ROUND(("Amount Including VAT+EC" - "VAT+EC Base")/("VAT %" + "EC %") * "VAT %",RoundingPrec);
            "EC Amount" :=  ROUND(("Amount Including VAT+EC" - "VAT+EC Base")/("VAT %" + "EC %") * "EC %",RoundingPrec);
          END;
          "VAT Difference" := "VAT Difference" + VATAmountLine."VAT Difference";
          "EC Difference" := "EC Difference" + VATAmountLine."EC Difference";
          "Calculated VAT Amount" := "Calculated VAT Amount" + VATAmountLine."Calculated VAT Amount";
          "Calculated EC Amount" := "Calculated EC Amount" + VATAmountLine."Calculated EC Amount";
          MODIFY;
        END ELSE BEGIN
          IF ("VAT %" + "EC %") <> 0 THEN BEGIN
            "VAT Amount" := ROUND(("Amount Including VAT+EC" - "VAT+EC Base" - "EC Difference")
              /("VAT %" + "EC %") * "VAT %",RoundingPrec);
            "EC Amount" :=  ROUND(("Amount Including VAT+EC" - "VAT+EC Base" - "VAT Difference")
              /("VAT %" + "EC %") * "EC %",RoundingPrec);
            IF "VAT Difference" <> 0 THEN BEGIN
              IF NOT VATAmountLine."Prices Including VAT" THEN
                "VAT Amount" :=
                  "VAT Difference" +
                    ROUND(
                      "VAT+EC Base" * "VAT %" / 100,
                      Currency."Amount Rounding Precision",Currency.VATRoundingDirection)
              ELSE
                "VAT Amount" :=
                  "VAT Difference" +
                    ROUND(
                      ("Line Amount" - "Invoice Discount Amount" - "Pmt. Disc. Given Amount" -
                      "VAT+EC Base") / ("VAT %" + "EC %") * "VAT %",
                      Currency."Amount Rounding Precision",Currency.VATRoundingDirection);
            END;
            IF "EC Difference" <> 0 THEN BEGIN
              IF NOT VATAmountLine."Prices Including VAT" THEN
                "EC Amount" :=
                  "EC Difference" +
                    ROUND(
                      "VAT+EC Base" * "EC %" / 100,
                      Currency."Amount Rounding Precision",Currency.VATRoundingDirection)
              ELSE
                "EC Amount" :=
                  "EC Difference" +
                    ROUND(
                      ("Line Amount" - "Invoice Discount Amount" - "Pmt. Disc. Given Amount" -
                      "VAT+EC Base") / ("VAT %" + "EC %") * "EC %",
                      Currency."Amount Rounding Precision",Currency.VATRoundingDirection);
            END;
          END;
          INSERT;
        END;
      END;
    END;

    PROCEDURE GetLine@2(Number@1000 : Integer);
    BEGIN
      IF Number = 1 THEN
        FIND('-')
      ELSE
        NEXT;
    END;

    PROCEDURE VATAmountText@3() : Text[30];
    BEGIN
      IF FIND('-') THEN
        IF NEXT = 0 THEN
          IF "VAT %" <> 0 THEN
            EXIT(Text001);
      EXIT(Text1100000);
    END;

    PROCEDURE CopyFrom@8(VAR FromVATAmountLine@1000 : Record 290);
    BEGIN
      DELETEALL;
      IF FromVATAmountLine.FIND('-') THEN
        REPEAT
          Rec := FromVATAmountLine;
          INSERT;
        UNTIL FromVATAmountLine.NEXT = 0;
    END;

    PROCEDURE GetTotalLineAmount@10(SubtractVAT@1000 : Boolean;CurrencyCode@1001 : Code[10]) : Decimal;
    VAR
      LineAmount@1002 : Decimal;
    BEGIN
      IF SubtractVAT THEN
        SetCurrency(CurrencyCode);

      LineAmount := 0;

      IF FIND('-') THEN
        REPEAT
          IF SubtractVAT THEN
            LineAmount :=
              LineAmount + ROUND("Line Amount" / (1 + "VAT %" / 100),Currency."Amount Rounding Precision")
          ELSE
            LineAmount := LineAmount + "Line Amount";
        UNTIL NEXT = 0;

      EXIT(LineAmount);
    END;

    PROCEDURE GetTotalVATAmount@5() : Decimal;
    VAR
      VATAmount@1000 : Decimal;
    BEGIN
      VATAmount := 0;
      IF FIND('-') THEN
        REPEAT
          VATAmount := VATAmount + "VAT Amount" + "EC Amount";
        UNTIL NEXT = 0;
      EXIT(VATAmount);
    END;

    PROCEDURE GetTotalInvDiscAmount@9() : Decimal;
    VAR
      InvDiscAmount@1000 : Decimal;
    BEGIN
      InvDiscAmount := 0;
      IF FIND('-') THEN
        REPEAT
          InvDiscAmount := InvDiscAmount + "Invoice Discount Amount";
        UNTIL NEXT = 0;
      EXIT(InvDiscAmount);
    END;

    PROCEDURE GetTotalInvDiscBaseAmount@6(SubtractVAT@1000 : Boolean;CurrencyCode@1001 : Code[10]) : Decimal;
    VAR
      InvDiscBaseAmount@1002 : Decimal;
    BEGIN
      IF SubtractVAT THEN
        SetCurrency(CurrencyCode);

      InvDiscBaseAmount := 0;

      IF FIND('-') THEN
        REPEAT
          IF SubtractVAT THEN
            InvDiscBaseAmount :=
              InvDiscBaseAmount +
              ROUND("Inv. Disc. Base Amount" / (1 + "VAT %" / 100),Currency."Amount Rounding Precision")
          ELSE
            InvDiscBaseAmount := InvDiscBaseAmount + "Inv. Disc. Base Amount";
        UNTIL NEXT = 0;
      EXIT(InvDiscBaseAmount);
    END;

    PROCEDURE GetTotalVATBase@14() : Decimal;
    VAR
      VATBase@1002 : Decimal;
    BEGIN
      VATBase := 0;

      IF FIND('-') THEN
        REPEAT
          VATBase := VATBase + "VAT+EC Base";
        UNTIL NEXT = 0;
      EXIT(VATBase);
    END;

    PROCEDURE GetTotalAmountInclVAT@17() : Decimal;
    VAR
      AmountInclVAT@1002 : Decimal;
    BEGIN
      AmountInclVAT := 0;

      IF FIND('-') THEN
        REPEAT
          AmountInclVAT := AmountInclVAT + "Amount Including VAT+EC";
        UNTIL NEXT = 0;
      EXIT(AmountInclVAT);
    END;

    PROCEDURE GetTotalVATDiscount@19(CurrencyCode@1001 : Code[10];NewPricesIncludingVAT@1000 : Boolean) : Decimal;
    VAR
      VATDiscount@1002 : Decimal;
    BEGIN
      SetCurrency(CurrencyCode);

      VATDiscount := 0;

      IF FIND('-') THEN
        REPEAT
          IF NewPricesIncludingVAT THEN
            VATDiscount :=
              VATDiscount +
              ROUND(
                ("Line Amount" - "Invoice Discount Amount") * "VAT %" / (100 + "VAT %"),
                Currency."Amount Rounding Precision",Currency.VATRoundingDirection) -
              "VAT Amount" + "VAT Difference"
          ELSE
            VATDiscount :=
              VATDiscount +
              ROUND(
                "VAT+EC Base" * "VAT %" / 100,
                Currency."Amount Rounding Precision",Currency.VATRoundingDirection) -
              "VAT Amount";
        UNTIL NEXT = 0;
      EXIT(VATDiscount);
    END;

    PROCEDURE GetAnyLineModified@7() : Boolean;
    BEGIN
      IF FIND('-') THEN
        REPEAT
          IF Modified THEN
            EXIT(TRUE);
        UNTIL NEXT = 0;
      EXIT(FALSE);
    END;

    PROCEDURE SetInvoiceDiscountAmount@13(NewInvoiceDiscount@1000 : Decimal;NewCurrencyCode@1001 : Code[10];NewPricesIncludingVAT@1002 : Boolean;NewVATBaseDiscPct@1005 : Decimal);
    VAR
      TotalInvDiscBaseAmount@1003 : Decimal;
      NewRemainder@1004 : Decimal;
    BEGIN
      InitGlobals(NewCurrencyCode,FALSE,NewPricesIncludingVAT);
      TotalInvDiscBaseAmount := GetTotalInvDiscBaseAmount(FALSE,Currency.Code);
      IF TotalInvDiscBaseAmount = 0 THEN
        EXIT;
      FIND('-');
      REPEAT
        IF "Inv. Disc. Base Amount" <> 0 THEN BEGIN
          IF TotalInvDiscBaseAmount = 0 THEN
            NewRemainder := 0
          ELSE
            NewRemainder :=
              NewRemainder + NewInvoiceDiscount * "Inv. Disc. Base Amount" / TotalInvDiscBaseAmount;
          IF "Invoice Discount Amount" <> ROUND(NewRemainder,Currency."Amount Rounding Precision") THEN BEGIN
            VALIDATE(
              "Invoice Discount Amount",ROUND(NewRemainder,Currency."Amount Rounding Precision"));
            CalcVATFields(NewCurrencyCode,NewPricesIncludingVAT,NewVATBaseDiscPct);
            Modified := TRUE;
            MODIFY;
          END;
          NewRemainder := NewRemainder - "Invoice Discount Amount";
        END;
      UNTIL NEXT = 0;
    END;

    PROCEDURE SetInvoiceDiscountPercent@16(NewInvoiceDiscountPct@1000 : Decimal;NewCurrencyCode@1001 : Code[10];NewPricesIncludingVAT@1002 : Boolean;CalcInvDiscPerVATID@1003 : Boolean;NewVATBaseDiscPct@1005 : Decimal);
    VAR
      NewRemainder@1004 : Decimal;
    BEGIN
      InitGlobals(NewCurrencyCode,FALSE,NewPricesIncludingVAT);
      GLSetup.GET;
      IF FIND('-') THEN
        REPEAT
          IF "Inv. Disc. Base Amount" <> 0 THEN BEGIN
            CASE GLSetup."Discount Calculation" OF
                   GLSetup."Discount Calculation"::"Line Disc. + Inv. Disc. + Payment Disc.",
                   GLSetup."Discount Calculation"::"Line Disc. + Inv. Disc. * Payment Disc.":
                     NewRemainder :=
                       NewRemainder + NewInvoiceDiscountPct * ("Inv. Disc. Base Amount" + "Line Discount Amount") / 100;
                   GLSetup."Discount Calculation"::"Line Disc. * Inv. Disc. * Payment Disc.",
                   GLSetup."Discount Calculation"::"Line Disc. * Inv. Disc. + Payment Disc.",
                   GLSetup."Discount Calculation"::" ":
                     NewRemainder :=
                       NewRemainder + NewInvoiceDiscountPct * "Inv. Disc. Base Amount" / 100;
            END;
            IF "Invoice Discount Amount" <> ROUND(NewRemainder,Currency."Amount Rounding Precision") THEN BEGIN
              VALIDATE(
                "Invoice Discount Amount",ROUND(NewRemainder,Currency."Amount Rounding Precision"));
              CalcVATFields(NewCurrencyCode,NewPricesIncludingVAT,NewVATBaseDiscPct);
              "VAT Difference" := 0;
              "EC Difference" := 0;
              Modified := TRUE;
              MODIFY;
            END;
            IF CalcInvDiscPerVATID THEN
              NewRemainder := 0
            ELSE
              NewRemainder := NewRemainder - "Invoice Discount Amount";
          END;
        UNTIL NEXT = 0;
    END;

    LOCAL PROCEDURE GetCalculatedVAT@12(NewCurrencyCode@1000 : Code[10];NewPricesIncludingVAT@1001 : Boolean;NewVATBaseDiscPct@1002 : Decimal) : Decimal;
    BEGIN
      IF NOT GlobalsInitialized THEN
        InitGlobals(NewCurrencyCode,FALSE,NewPricesIncludingVAT);

      IF NewPricesIncludingVAT THEN
        EXIT(
          ROUND(
            ("Line Amount" - "Invoice Discount Amount") * "VAT %" / (100 + "VAT %") * (1 - NewVATBaseDiscPct / 100),
            Currency."Amount Rounding Precision",Currency.VATRoundingDirection))
      ELSE
        EXIT(
          ROUND(
            ("Line Amount" - "Invoice Discount Amount") * "VAT %" / 100 * (1 - NewVATBaseDiscPct / 100),
            Currency."Amount Rounding Precision",Currency.VATRoundingDirection));
    END;

    PROCEDURE CalcVATFields@23(NewCurrencyCode@1000 : Code[10];NewPricesIncludingVAT@1001 : Boolean;NewVATBaseDiscPct@1002 : Decimal);
    BEGIN
      IF NOT GlobalsInitialized THEN
        InitGlobals(NewCurrencyCode,FALSE,NewPricesIncludingVAT);

      "VAT Amount" := GetCalculatedVAT(NewCurrencyCode,NewPricesIncludingVAT,NewVATBaseDiscPct);

      IF NewPricesIncludingVAT THEN BEGIN
        IF NewVATBaseDiscPct = 0 THEN BEGIN
          "Amount Including VAT+EC" := "Line Amount" - "Invoice Discount Amount";
          "VAT+EC Base" := "Amount Including VAT+EC" - "VAT Amount";
        END ELSE BEGIN
          "VAT+EC Base" :=
            ROUND(
              ("Line Amount" - "Invoice Discount Amount" - "Pmt. Disc. Given Amount") / (1 + "VAT %" / 100),
              Currency."Amount Rounding Precision");
            "Amount Including VAT+EC" := "VAT+EC Base" + "VAT Amount" + "EC Amount";
        END;
      END ELSE BEGIN
        "VAT+EC Base" := "Line Amount" - "Invoice Discount Amount" - "Pmt. Disc. Given Amount" ;
        "Amount Including VAT+EC" := "VAT+EC Base" + "VAT Amount" + "EC Amount";
      END;
      "Calculated VAT Amount" := "VAT Amount";
      "Calculated EC Amount" := "EC Amount";
      "VAT Difference" := 0;
      "EC Difference" := 0;
      Modified := TRUE;
    END;

    PROCEDURE SetCurrencyCode@1100000(CurrCode@1000 : Code[10]);
    BEGIN
      CurrencyCod := CurrCode;
    END;

    BEGIN
    END.
  }
}
