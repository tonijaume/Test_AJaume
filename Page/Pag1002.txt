OBJECT Page 1002 Job Task Lines
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=NAVW16.00.01;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Job Task Lines;
               ESP=L¡neas tarea proyecto];
    SaveValues=Yes;
    SourceTable=Table1001;
    DelayedInsert=Yes;
    DataCaptionFields=Job No.;
    PageType=List;
    OnOpenPage=BEGIN
                 IF CurrentJobNo3 <> '' THEN
                   CurrentJobNo := CurrentJobNo3;
                 IF NOT Job.GET(CurrentJobNo) THEN
                   Job.FIND('-');
                 CurrentJobNo := Job."No.";
                 JobDescription := Job.Description;
                 FILTERGROUP := 2;
                 SETRANGE("Job No.",CurrentJobNo);
                 FILTERGROUP := 0;
               END;

    OnAfterGetRecord=BEGIN
                       DescriptionIndent := 0;
                       JobNoOnFormat;
                       JobTaskNoOnFormat;
                       DescriptionOnFormat;
                     END;

    OnNewRecord=BEGIN
                  ClearTempDim;
                END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 56      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Job Task;
                                 ESP=&Tarea proyecto] }
      { 18      ;2   ;Action    ;
                      ShortCutKey=May£s+F7;
                      CaptionML=[ENU=Job &Task Card;
                                 ESP=&Ficha tarea proyecto];
                      RunObject=Page 1003;
                      RunFormLink=Job No.=FIELD(Job No.),
                                  Job Task No.=FIELD(Job Task No.) }
      { 6       ;2   ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=[ENU=Job Task Ledger E&ntries;
                                 ESP=&Movs. tareas proyecto];
                      RunObject=Page 92;
                      RunFormView=SORTING(Job No.,Job Task No.);
                      RunFormLink=Job No.=FIELD(Job No.),
                                  Job Task No.=FIELD(Job Task No.) }
      { 20      ;2   ;Action    ;
                      CaptionML=[ENU=Job Task &Planning Lines;
                                 ESP=L¡neas &planif. tareas proyecto];
                      RunObject=Page 1007;
                      RunFormLink=Job No.=FIELD(Job No.),
                                  Job Task No.=FIELD(Job Task No.) }
      { 16      ;2   ;Action    ;
                      ShortCutKey=F7;
                      CaptionML=[ENU=Job Task &Statistics;
                                 ESP=&Estad¡sticas tarea proyecto];
                      RunObject=Page 1024;
                      RunFormLink=Job No.=FIELD(Job No.),
                                  Job Task No.=FIELD(Job Task No.) }
      { 65      ;2   ;Separator ;
                      CaptionML=[ENU=-;
                                 ESP=-] }
      { 66      ;2   ;Action    ;
                      ShortCutKey=May£s+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 ESP=Dimensiones];
                      RunObject=Page 1005;
                      RunFormLink=Job No.=FIELD(Job No.),
                                  Job Task No.=FIELD(Job Task No.);
                      Image=Dimensions }
      { 46      ;1   ;ActionGroup;
                      CaptionML=[ENU=W&IP;
                                 ESP=&WIP] }
      { 48      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Calculate WIP;
                                 ESP=Calcular WIP];
                      Image=CalculateWIP;
                      OnAction=VAR
                                 Job@1002 : Record 167;
                               BEGIN
                                 TESTFIELD("Job No.");
                                 Job.GET("Job No.");
                                 Job.SETRANGE("No.",Job."No.");
                                 REPORT.RUNMODAL(REPORT::"Job Calculate WIP",TRUE,FALSE,Job);
                               END;
                                }
      { 49      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Post WIP to G/L;
                                 ESP=Registrar WIP en C/G];
                      Image=Post;
                      OnAction=VAR
                                 Job@1001 : Record 167;
                               BEGIN
                                 TESTFIELD("Job No.");
                                 Job.GET("Job No.");
                                 Job.SETRANGE("No.",Job."No.");
                                 REPORT.RUNMODAL(REPORT::"Job Post WIP to G/L",TRUE,FALSE,Job);
                               END;
                                }
      { 10      ;2   ;Action    ;
                      CaptionML=[ENU=WIP Entries;
                                 ESP=Movimientos WIP];
                      RunObject=Page 1008;
                      RunFormView=SORTING(Job No.,Job Posting Group,WIP Posting Date);
                      RunFormLink=Job No.=FIELD(Job No.) }
      { 14      ;2   ;Action    ;
                      CaptionML=[ENU=WIP G/L Entries;
                                 ESP=Movs. contabilidad WIP];
                      RunObject=Page 1009;
                      RunFormView=SORTING(Job No.);
                      RunFormLink=Job No.=FIELD(Job No.) }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 4       ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 ESP=Acci&ones] }
      { 5       ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Edit Planning Lines;
                                 ESP=Editar l¡neas planificaci¢n];
                      Promoted=Yes;
                      Image=EditLines;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 JT@1000 : Record 1001;
                               BEGIN
                                 TESTFIELD("Job Task Type","Job Task Type"::Posting);
                                 TESTFIELD("Job No.");
                                 Job.GET("Job No.");
                                 TESTFIELD("Job Task No.");
                                 JT.GET("Job No.","Job Task No.");
                                 JT.FILTERGROUP := 2;
                                 JT.SETRANGE("Job No.","Job No.");
                                 JT.SETRANGE("Job Task Type",JT."Job Task Type"::Posting);
                                 JT.FILTERGROUP := 0;
                                 FORM.RUNMODAL(FORM::"Job Planning Lines",JT);
                               END;
                                }
      { 15      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Create Sales Invoice;
                                 ESP=Crear factura venta];
                      Image=Invoice;
                      OnAction=VAR
                                 Job@1000 : Record 167;
                                 JT@1002 : Record 1001;
                               BEGIN
                                 TESTFIELD("Job No.");
                                 Job.GET("Job No.");
                                 IF Job.Blocked = Job.Blocked::All THEN
                                   Job.TestBlocked;

                                 JT := Rec;
                                 JT.SETRANGE("Job No.",Job."No.");
                                 REPORT.RUNMODAL(REPORT::"Job Create Sales Invoice",TRUE,FALSE,JT);
                               END;
                                }
      { 17      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Split Planning Lines;
                                 ESP=Dividir l¡neas planificaci¢n];
                      Promoted=Yes;
                      Image=Splitlines;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 Job@1000 : Record 167;
                                 JT@1002 : Record 1001;
                               BEGIN
                                 TESTFIELD("Job No.");
                                 TESTFIELD("Job Task No.");
                                 JT := Rec;
                                 Job.GET("Job No.");
                                 IF Job.Blocked = Job.Blocked::All THEN
                                   Job.TestBlocked;
                                 JT.SETRANGE("Job No.",Job."No.");
                                 JT.SETRANGE("Job Task No.","Job Task No.");

                                 REPORT.RUNMODAL(REPORT::"Job Split Planning Line",TRUE,FALSE,JT);
                               END;
                                }
      { 22      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Change &Dates;
                                 ESP=Modificar &fechas];
                      OnAction=VAR
                                 Job@1000 : Record 167;
                                 JT@1002 : Record 1001;
                               BEGIN
                                 TESTFIELD("Job No.");
                                 Job.GET("Job No.");
                                 IF Job.Blocked = Job.Blocked::All THEN
                                   Job.TestBlocked;
                                 JT.SETRANGE("Job No.",Job."No.");
                                 JT.SETRANGE("Job Task No.","Job Task No.");
                                 REPORT.RUNMODAL(REPORT::"Change Job Dates",TRUE,FALSE,JT);
                               END;
                                }
      { 32      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Copy Job Task &From;
                                 ESP=Copiar tarea proyecto &desde];
                      Promoted=Yes;
                      Image=CopyFromTask;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 CopyJobTask@1000 : Report 1083;
                               BEGIN
                                 TESTFIELD("Job Task Type","Job Task Type"::Posting);
                                 CopyJobTask.SetCopyFrom(Rec);
                                 CopyJobTask.RUNMODAL;
                               END;
                                }
      { 33      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Copy Job Task &To;
                                 ESP=Copiar tarea proyecto &hasta];
                      Promoted=Yes;
                      Image=CopyToTask;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 CopyJobTask@1000 : Report 1083;
                               BEGIN
                                 TESTFIELD("Job Task Type","Job Task Type"::Posting);
                                 CopyJobTask.SetCopyTo(Rec);
                                 CopyJobTask.RUNMODAL;
                               END;
                                }
      { 7       ;2   ;Action    ;
                      CaptionML=[ENU=Indent Job Tasks;
                                 ESP=Indentar tareas proyecto];
                      RunObject=Codeunit 1003 }
      { 1900000006;0 ;ActionContainer;
                      ActionContainerType=Reports }
      { 1903776506;1 ;Action    ;
                      CaptionML=[ENU=Job Actual to Budget;
                                 ESP=Proyecto real frente a presupuesto];
                      RunObject=Report 1009;
                      Promoted=Yes;
                      PromotedCategory=Report }
      { 1901542506;1 ;Action    ;
                      CaptionML=[ENU=Job Analysis;
                                 ESP=An lisis proyecto];
                      RunObject=Report 1008;
                      Promoted=Yes;
                      PromotedCategory=Report }
      { 1902943106;1 ;Action    ;
                      CaptionML=[ENU=Job - Planning Lines;
                                 ESP=Proyecto - L¡neas planificaci¢n];
                      RunObject=Report 1006;
                      Promoted=Yes;
                      PromotedCategory=Report }
      { 1903186006;1 ;Action    ;
                      CaptionML=[ENU=Job - Suggested Billing;
                                 ESP=Proyecto - Facturaci¢n propuesta];
                      RunObject=Report 1011;
                      Promoted=Yes;
                      PromotedCategory=Report }
      { 1905285006;1 ;Action    ;
                      CaptionML=[ENU=Jobs - Transaction Detail;
                                 ESP=Proyectos - Movimientos];
                      RunObject=Report 1007;
                      Promoted=No;
                      PromotedCategory=Report }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                IndentationColumnName=DescriptionIndent;
                IndentationControls=Description;
                GroupType=Repeater }

    { 24  ;2   ;Field     ;
                SourceExpr="Job No.";
                Visible=FALSE }

    { 26  ;2   ;Field     ;
                SourceExpr="Job Task No." }

    { 28  ;2   ;Field     ;
                SourceExpr=Description }

    { 30  ;2   ;Field     ;
                SourceExpr="Job Task Type" }

    { 9   ;2   ;Field     ;
                SourceExpr="WIP-Total" }

    { 34  ;2   ;Field     ;
                SourceExpr=Totaling }

    { 36  ;2   ;Field     ;
                SourceExpr="Job Posting Group" }

    { 40  ;2   ;Field     ;
                SourceExpr="Schedule (Total Cost)" }

    { 42  ;2   ;Field     ;
                SourceExpr="Schedule (Total Price)" }

    { 44  ;2   ;Field     ;
                SourceExpr="Usage (Total Cost)" }

    { 8   ;2   ;Field     ;
                SourceExpr="Usage (Total Price)" }

    { 12  ;2   ;Field     ;
                SourceExpr="Contract (Total Cost)" }

    { 47  ;2   ;Field     ;
                SourceExpr="Contract (Total Price)" }

    { 37  ;2   ;Field     ;
                SourceExpr="Contract (Invoiced Cost)" }

    { 51  ;2   ;Field     ;
                SourceExpr="Contract (Invoiced Price)" }

    { 57  ;2   ;Field     ;
                SourceExpr="WIP Amount";
                Visible=FALSE }

    { 59  ;2   ;Field     ;
                SourceExpr="Invoiced Sales Amount";
                Visible=FALSE }

    { 61  ;2   ;Field     ;
                SourceExpr="Cost Completion %";
                Visible=FALSE }

    { 63  ;2   ;Field     ;
                SourceExpr="Invoiced %";
                Visible=FALSE }

    { 67  ;2   ;Field     ;
                SourceExpr="Global Dimension 1 Code";
                Visible=FALSE }

    { 69  ;2   ;Field     ;
                SourceExpr="Global Dimension 2 Code";
                Visible=FALSE }

    { 1000;2   ;Field     ;
                SourceExpr="Outstanding Orders";
                Visible=FALSE;
                Editable=FALSE;
                OnDrillDown=VAR
                              PurchLine@1000 : Record 39;
                            BEGIN
                              PurchLine.SETCURRENTKEY("Document Type","Job No.","Job Task No.");
                              PurchLine.SETRANGE("Document Type",PurchLine."Document Type"::Order);
                              PurchLine.SETRANGE("Job No.","Job No.");
                              PurchLine.SETRANGE("Job Task No.","Job Task No.");
                              PurchLine.SETFILTER("Outstanding Amount (LCY)",'<> 0');
                              FORM.RUNMODAL(FORM::"Purchase Lines",PurchLine);
                            END;
                             }

    { 1002;2   ;Field     ;
                SourceExpr="Amt. Rcd. Not Invoiced";
                Visible=FALSE;
                Editable=FALSE;
                OnDrillDown=VAR
                              PurchLine@1000 : Record 39;
                            BEGIN
                              PurchLine.SETCURRENTKEY("Document Type","Job No.","Job Task No.");
                              PurchLine.SETRANGE("Document Type",PurchLine."Document Type"::Order);
                              PurchLine.SETRANGE("Job No.","Job No.");
                              PurchLine.SETRANGE("Job Task No.","Job Task No.");
                              PurchLine.SETFILTER("Amt. Rcd. Not Invoiced (LCY)",'<> 0');
                              FORM.RUNMODAL(FORM::"Purchase Lines",PurchLine);
                            END;
                             }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      Job@1000 : Record 167;
      CurrentJobNo@1001 : Code[20];
      CurrentJobNo3@1004 : Code[20];
      JobDescription@1002 : Text[50];
      "Job No.Emphasize"@19018743 : Boolean INDATASET;
      "Job Task No.Emphasize"@19071590 : Boolean INDATASET;
      DescriptionEmphasize@19010547 : Boolean INDATASET;
      DescriptionIndent@19057867 : Integer INDATASET;

    PROCEDURE SetJobNo@1(CurrentJobNo2@1000 : Code[20]);
    BEGIN
      CurrentJobNo3 := CurrentJobNo2;
    END;

    LOCAL PROCEDURE CurrentJobNoOnAfterValidate@19044969();
    BEGIN
      CurrPage.SAVERECORD;
      FILTERGROUP := 2;
      SETRANGE("Job No.",CurrentJobNo);
      FILTERGROUP := 0;
      IF FIND('-') THEN;
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE JobNoOnFormat@19024304();
    BEGIN
      "Job No.Emphasize" := "Job Task Type" <> "Job Task Type"::Posting;
    END;

    LOCAL PROCEDURE JobTaskNoOnFormat@19070047();
    BEGIN
      "Job Task No.Emphasize" := "Job Task Type" <> "Job Task Type"::Posting;
    END;

    LOCAL PROCEDURE DescriptionOnFormat@19023855();
    BEGIN
      DescriptionIndent := Indentation;
      DescriptionEmphasize := "Job Task Type" <> "Job Task Type"::Posting;
    END;

    BEGIN
    END.
  }
}
