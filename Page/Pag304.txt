OBJECT Page 304 Item Entry Statistics
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVW16.00;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[ENU=Item Entry Statistics;
               ESP=Estad¡stica docs. producto];
    LinksAllowed=No;
    SourceTable=Table27;
    PageType=Card;
    OnAfterGetRecord=BEGIN
                       CLEARALL;

                       ItemLedgEntry2.SETCURRENTKEY(
                         "Item No.","Entry Type","Variant Code","Drop Shipment","Location Code","Posting Date");

                       ValueEntry2.SETCURRENTKEY(
                         "Item No.","Posting Date","Item Ledger Entry Type","Entry Type","Variance Type",
                         "Item Charge No.","Location Code","Variant Code");

                       ItemLedgEntry2.SETRANGE("Item No.","No.");
                       ValueEntry2.SETRANGE("Item No.","No.");

                       FOR j := 1 TO 4 DO BEGIN
                         ItemLedgEntry2.SETRANGE("Entry Type",j-1); // Purchase,Positive Adjustment,Sale,Negative Adjustment
                         COPYFILTER("Variant Filter",ItemLedgEntry2."Variant Code");
                         COPYFILTER("Drop Shipment Filter",ItemLedgEntry2."Drop Shipment");
                         COPYFILTER("Location Filter",ItemLedgEntry2."Location Code");

                         ValueEntry2.SETRANGE("Item Ledger Entry Type",j-1);
                         ValueEntry2.SETRANGE("Entry Type",ValueEntry2."Entry Type"::"Direct Cost");
                         COPYFILTER("Variant Filter",ValueEntry2."Variant Code");
                         COPYFILTER("Drop Shipment Filter",ValueEntry2."Drop Shipment");
                         COPYFILTER("Location Filter",ValueEntry2."Location Code");

                         IF j IN [1,2] THEN BEGIN // Purchase,Sale
                           ValueEntry2.SETFILTER("Invoiced Quantity",'<>0');
                           FindLastValueEntry(j,ValueEntry2);
                           ValueEntry2.SETRANGE("Invoiced Quantity");

                           FindLastItemEntry(j+4,ItemLedgEntry2); // Receipt,Shipment
                           ValueEntry2.SETRANGE("Item Ledger Entry No.",ItemLedgEntry2."Entry No.");
                           FindLastValueEntry(j+4,ValueEntry2);
                           ValueEntry2.SETRANGE("Item Ledger Entry No.");
                         END ELSE BEGIN
                           FindLastItemEntry(j,ItemLedgEntry2);
                           ValueEntry2.SETRANGE("Item Ledger Entry No.",ItemLedgEntry2."Entry No.");
                           FindLastValueEntry(j,ValueEntry2);
                           ValueEntry2.SETRANGE("Item Ledger Entry No.");
                         END;
                       END;

                       PurchLine2.SETCURRENTKEY(
                         "Document Type",Type,"No.","Variant Code",
                         "Drop Shipment","Location Code","Expected Receipt Date");
                       PurchLine2.SETRANGE("Document Type",PurchLine2."Document Type"::Order);
                       PurchLine2.SETRANGE(Type,PurchLine2.Type::Item);
                       PurchLine2.SETRANGE("No.","No.");
                       PurchLine2.SETFILTER("Outstanding Quantity",'<>0');
                       COPYFILTER("Variant Filter",PurchLine2."Variant Code");
                       COPYFILTER("Drop Shipment Filter",PurchLine2."Drop Shipment");
                       COPYFILTER("Location Filter",PurchLine2."Location Code");
                       IF PurchLine2.FIND('-') THEN BEGIN
                         PurchOrderLine[1] := PurchLine2;
                         REPEAT
                           IF (PurchLine2."Expected Receipt Date" < PurchOrderLine[1]."Expected Receipt Date") OR
                              ((PurchLine2."Expected Receipt Date" = PurchOrderLine[1]."Expected Receipt Date") AND
                              (PurchLine2."Document No." < PurchOrderLine[1]."Document No."))
                           THEN
                             PurchOrderLine[1] := PurchLine2;

                           PurchLine2.SETRANGE("Variant Code",PurchLine2."Variant Code");
                           PurchLine2.SETRANGE("Drop Shipment",PurchLine2."Drop Shipment");
                           PurchLine2.SETRANGE("Location Code",PurchLine2."Location Code");
                           PurchLine2.FIND('+');

                           IF (PurchLine2."Expected Receipt Date" > PurchOrderLine[2]."Expected Receipt Date") OR
                              ((PurchLine2."Expected Receipt Date" = PurchOrderLine[2]."Expected Receipt Date") AND
                              (PurchLine2."Document No." > PurchOrderLine[2]."Document No."))
                           THEN
                             PurchOrderLine[2] := PurchLine2;

                           COPYFILTER("Variant Filter",PurchLine2."Variant Code");
                           COPYFILTER("Location Filter",PurchLine2."Location Code");
                           COPYFILTER("Drop Shipment Filter",PurchLine2."Drop Shipment");
                         UNTIL PurchLine2.NEXT = 0;
                       END;

                       SalesLine2.SETCURRENTKEY(
                         "Document Type",Type,"No.","Variant Code",
                         "Drop Shipment","Location Code","Shipment Date");
                       SalesLine2.SETRANGE("Document Type",SalesLine2."Document Type"::Order);
                       SalesLine2.SETRANGE(Type,SalesLine2.Type::Item);
                       SalesLine2.SETRANGE("No.","No.");
                       COPYFILTER("Variant Filter",SalesLine2."Variant Code");
                       SalesLine2.SETFILTER("Outstanding Quantity",'<>0');
                       COPYFILTER("Drop Shipment Filter",SalesLine2."Drop Shipment");
                       COPYFILTER("Location Filter",SalesLine2."Location Code");
                       IF SalesLine2.FIND('-') THEN BEGIN
                         SalesLine[1] := SalesLine2;
                         REPEAT
                           IF (SalesLine2."Shipment Date" < SalesLine[1]."Shipment Date") OR
                              ((SalesLine2."Shipment Date" = SalesLine[1]."Shipment Date") AND
                              (SalesLine2."Document No." < SalesLine[1]."Document No."))
                           THEN
                             SalesLine[1] := SalesLine2;

                           SalesLine2.SETRANGE("Variant Code",SalesLine2."Variant Code");
                           SalesLine2.SETRANGE("Drop Shipment",SalesLine2."Drop Shipment");
                           SalesLine2.SETRANGE("Location Code",SalesLine2."Location Code");
                           SalesLine2.FIND('+');

                           IF (SalesLine2."Shipment Date" > SalesLine[2]."Shipment Date") OR
                              ((SalesLine2."Shipment Date" = SalesLine[2]."Shipment Date") AND
                              (SalesLine2."Document No." > SalesLine[2]."Document No."))
                           THEN
                             SalesLine[2] := SalesLine2;

                           COPYFILTER("Variant Filter",SalesLine2."Variant Code");
                           COPYFILTER("Location Filter",SalesLine2."Location Code");
                           COPYFILTER("Drop Shipment Filter",SalesLine2."Drop Shipment");
                         UNTIL SalesLine2.NEXT = 0;
                       END;
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=[ENU=Most Recently Posted;
                           ESP=élt. mov. registrado] }

    { 1903895301;2;Group  ;
                GroupType=FixedLayout }

    { 1900724601;3;Group  ;
                CaptionML=[ENU=Date;
                           ESP=Fecha] }

    { 7   ;4   ;Field     ;
                CaptionML=[ENU=Receipt;
                           ESP=Albar n];
                SourceExpr=ItemLedgEntry[5]."Posting Date" }

    { 13  ;4   ;Field     ;
                CaptionML=[ENU=Purchases;
                           ESP=Compras];
                SourceExpr=ValueEntry[1]."Posting Date" }

    { 19  ;4   ;Field     ;
                CaptionML=[ENU=Positive Adjustment;
                           ESP=Ajuste positivo];
                SourceExpr=ItemLedgEntry[3]."Posting Date" }

    { 25  ;4   ;Field     ;
                CaptionML=[ENU=Shipment;
                           ESP=Env¡o];
                SourceExpr=ItemLedgEntry[6]."Posting Date" }

    { 31  ;4   ;Field     ;
                CaptionML=[ENU=Sales;
                           ESP=Ventas];
                SourceExpr=ValueEntry[2]."Posting Date" }

    { 37  ;4   ;Field     ;
                CaptionML=[ENU=Negative Adjustment;
                           ESP=Ajuste negativo];
                SourceExpr=ItemLedgEntry[4]."Posting Date" }

    { 1900724501;3;Group  ;
                CaptionML=[ENU=Document No.;
                           ESP=N§ documento] }

    { 8   ;4   ;Field     ;
                CaptionML=[ENU=Document No.;
                           ESP=N§ documento];
                SourceExpr=ItemLedgEntry[5]."Document No." }

    { 14  ;4   ;Field     ;
                CaptionML=[ENU=Document No.;
                           ESP=N§ documento];
                SourceExpr=ValueEntry[1]."Document No." }

    { 20  ;4   ;Field     ;
                CaptionML=[ENU=Document No.;
                           ESP=N§ documento];
                SourceExpr=ItemLedgEntry[3]."Document No." }

    { 26  ;4   ;Field     ;
                CaptionML=[ENU=Document No.;
                           ESP=N§ documento];
                SourceExpr=ItemLedgEntry[6]."Document No." }

    { 32  ;4   ;Field     ;
                CaptionML=[ENU=Document No.;
                           ESP=N§ documento];
                SourceExpr=ValueEntry[2]."Document No." }

    { 38  ;4   ;Field     ;
                CaptionML=[ENU=Document No.;
                           ESP=N§ documento];
                SourceExpr=ItemLedgEntry[4]."Document No." }

    { 1900724401;3;Group  ;
                CaptionML=[ENU=Quantity;
                           ESP=Cantidad] }

    { 9   ;4   ;Field     ;
                CaptionML=[ENU=Quantity;
                           ESP=Cantidad];
                DecimalPlaces=0:5;
                SourceExpr=ValueEntry[5]."Valued Quantity" }

    { 15  ;4   ;Field     ;
                CaptionML=[ENU=Quantity;
                           ESP=Cantidad];
                DecimalPlaces=0:5;
                SourceExpr=ValueEntry[1]."Invoiced Quantity" }

    { 21  ;4   ;Field     ;
                CaptionML=[ENU=Quantity;
                           ESP=Cantidad];
                DecimalPlaces=0:5;
                SourceExpr=ItemLedgEntry[3].Quantity }

    { 27  ;4   ;Field     ;
                CaptionML=[ENU=Quantity;
                           ESP=Cantidad];
                DecimalPlaces=0:5;
                SourceExpr=-ValueEntry[6]."Valued Quantity" }

    { 33  ;4   ;Field     ;
                CaptionML=[ENU=Quantity;
                           ESP=Cantidad];
                DecimalPlaces=0:5;
                SourceExpr=-ValueEntry[2]."Invoiced Quantity" }

    { 39  ;4   ;Field     ;
                CaptionML=[ENU=Quantity;
                           ESP=Cantidad];
                DecimalPlaces=0:5;
                SourceExpr=-ItemLedgEntry[4].Quantity }

    { 1900724301;3;Group  ;
                CaptionML=[ENU=Unit Amount;
                           ESP=Precio unitario] }

    { 10  ;4   ;Field     ;
                CaptionML=[ENU=Unit Amount;
                           ESP=Precio unitario];
                SourceExpr=UnitAmount[5];
                AutoFormatType=2 }

    { 16  ;4   ;Field     ;
                CaptionML=[ENU=Unit Amount;
                           ESP=Precio unitario];
                SourceExpr=UnitAmount[1];
                AutoFormatType=2 }

    { 22  ;4   ;Field     ;
                CaptionML=[ENU=Unit Amount;
                           ESP=Precio unitario];
                SourceExpr=UnitAmount[3];
                AutoFormatType=2 }

    { 28  ;4   ;Field     ;
                CaptionML=[ENU=Unit Amount;
                           ESP=Precio unitario];
                SourceExpr=UnitAmount[6];
                AutoFormatType=2 }

    { 34  ;4   ;Field     ;
                CaptionML=[ENU=Unit Amount;
                           ESP=Precio unitario];
                SourceExpr=UnitAmount[2];
                AutoFormatType=2 }

    { 40  ;4   ;Field     ;
                CaptionML=[ENU=Unit Amount;
                           ESP=Precio unitario];
                SourceExpr=UnitAmount[4];
                AutoFormatType=2 }

    { 1900205701;3;Group  ;
                CaptionML=[ENU=Discount Amount;
                           ESP=Importe dto.] }

    { 74  ;4   ;Field     ;
                CaptionML=[ENU=Amount;
                           ESP=Importe];
                SourceExpr=ValueEntry[5]."Discount Amount";
                AutoFormatType=1 }

    { 75  ;4   ;Field     ;
                CaptionML=[ENU=Amount;
                           ESP=Importe];
                SourceExpr=ValueEntry[1]."Discount Amount";
                AutoFormatType=1 }

    { 76  ;4   ;Field     ;
                CaptionML=[ENU=Amount;
                           ESP=Importe];
                SourceExpr=ValueEntry[3]."Discount Amount";
                AutoFormatType=1 }

    { 77  ;4   ;Field     ;
                CaptionML=[ENU=Amount;
                           ESP=Importe];
                SourceExpr=- ValueEntry[6]."Discount Amount";
                AutoFormatType=1 }

    { 78  ;4   ;Field     ;
                CaptionML=[ENU=Amount;
                           ESP=Importe];
                SourceExpr=- ValueEntry[2]."Discount Amount";
                AutoFormatType=1 }

    { 79  ;4   ;Field     ;
                CaptionML=[ENU=Amount;
                           ESP=Importe];
                SourceExpr=[ - ValueEntry[4]]."Discount Amount"];
                AutoFormatType=1 }

    { 1900724201;3;Group  ;
                CaptionML=[ENU=Amount;
                           ESP=Importe] }

    { 11  ;4   ;Field     ;
                CaptionML=[ENU=Amount;
                           ESP=Importe];
                SourceExpr=ValueEntry[5]."Cost Amount (Actual)";
                AutoFormatType=1 }

    { 17  ;4   ;Field     ;
                CaptionML=[ENU=Amount;
                           ESP=Importe];
                SourceExpr=ValueEntry[1]."Cost Amount (Actual)";
                AutoFormatType=1 }

    { 23  ;4   ;Field     ;
                CaptionML=[ENU=Amount;
                           ESP=Importe];
                SourceExpr=ValueEntry[3]."Cost Amount (Actual)";
                AutoFormatType=1 }

    { 29  ;4   ;Field     ;
                CaptionML=[ENU=Amount;
                           ESP=Importe];
                SourceExpr=ValueEntry[6]."Sales Amount (Actual)";
                AutoFormatType=1 }

    { 35  ;4   ;Field     ;
                CaptionML=[ENU=Amount;
                           ESP=Importe];
                SourceExpr=ValueEntry[2]."Sales Amount (Actual)";
                AutoFormatType=1 }

    { 41  ;4   ;Field     ;
                CaptionML=[ENU=Amount;
                           ESP=Importe];
                SourceExpr=-ValueEntry[4]."Cost Amount (Actual)";
                AutoFormatType=1 }

    { 1906825601;1;Group  ;
                CaptionML=[ENU=To Be Posted;
                           ESP=Pendiente de registrar] }

    { 1904230801;2;Group  ;
                GroupType=FixedLayout }

    { 1900206001;3;Group  ;
                CaptionML=[ENU=Date;
                           ESP=Fecha] }

    { 48  ;4   ;Field     ;
                CaptionML=[ENU=Next Receipt;
                           ESP=Pr¢ximo albar n compra];
                SourceExpr=PurchOrderLine[1]."Expected Receipt Date" }

    { 54  ;4   ;Field     ;
                CaptionML=[ENU=Last Receipt;
                           ESP=éltimo albar n compra];
                SourceExpr=PurchOrderLine[2]."Expected Receipt Date" }

    { 60  ;4   ;Field     ;
                CaptionML=[ENU=Next Shipment;
                           ESP=Pr¢ximo albar n venta];
                SourceExpr=SalesLine[1]."Shipment Date" }

    { 66  ;4   ;Field     ;
                CaptionML=[ENU=Last Shipment;
                           ESP=Ultimo albar n venta];
                SourceExpr=SalesLine[2]."Shipment Date" }

    { 1901652401;3;Group  ;
                CaptionML=[ENU=Order No.;
                           ESP=N§ pedido] }

    { 49  ;4   ;Field     ;
                CaptionML=[ENU=Order No.;
                           ESP=N§ pedido];
                SourceExpr=PurchOrderLine[1]."Document No." }

    { 55  ;4   ;Field     ;
                CaptionML=[ENU=Order No.;
                           ESP=N§ pedido];
                SourceExpr=PurchOrderLine[2]."Document No." }

    { 61  ;4   ;Field     ;
                CaptionML=[ENU=Order No.;
                           ESP=N§ pedido];
                SourceExpr=SalesLine[1]."Document No." }

    { 67  ;4   ;Field     ;
                CaptionML=[ENU=Order No.;
                           ESP=N§ pedido];
                SourceExpr=SalesLine[2]."Document No." }

    { 1903098801;3;Group  ;
                CaptionML=[ENU=Quantity;
                           ESP=Cantidad] }

    { 50  ;4   ;Field     ;
                CaptionML=[ENU=Quantity;
                           ESP=Cantidad];
                SourceExpr=PurchOrderLine[1].Quantity }

    { 56  ;4   ;Field     ;
                CaptionML=[ENU=Quantity;
                           ESP=Cantidad];
                SourceExpr=PurchOrderLine[2].Quantity }

    { 62  ;4   ;Field     ;
                CaptionML=[ENU=Quantity;
                           ESP=Cantidad];
                SourceExpr=SalesLine[1].Quantity }

    { 68  ;4   ;Field     ;
                CaptionML=[ENU=Quantity;
                           ESP=Cantidad];
                SourceExpr=SalesLine[2].Quantity }

    { 1900545201;3;Group  ;
                CaptionML=[ENU=Unit Amount;
                           ESP=Precio unitario] }

    { 51  ;4   ;Field     ;
                CaptionML=[ENU=Unit Amount;
                           ESP=Precio unitario];
                SourceExpr=PurchOrderLine[1]."Direct Unit Cost";
                AutoFormatType=2 }

    { 57  ;4   ;Field     ;
                CaptionML=[ENU=Unit Amount;
                           ESP=Precio unitario];
                SourceExpr=PurchOrderLine[2]."Direct Unit Cost";
                AutoFormatType=2 }

    { 63  ;4   ;Field     ;
                CaptionML=[ENU=Unit Amount;
                           ESP=Precio unitario];
                SourceExpr=SalesLine[1]."Unit Price";
                AutoFormatType=2 }

    { 69  ;4   ;Field     ;
                CaptionML=[ENU=Unit Amount;
                           ESP=Precio unitario];
                SourceExpr=SalesLine[2]."Unit Price";
                AutoFormatType=2 }

    { 1901991601;3;Group  ;
                CaptionML=[ENU=Qty. on Order;
                           ESP=Cdad. pedida] }

    { 52  ;4   ;Field     ;
                CaptionML=[ENU=Qty. on Order;
                           ESP=Cdad. pedida];
                SourceExpr=PurchOrderLine[1]."Outstanding Quantity" }

    { 58  ;4   ;Field     ;
                CaptionML=[ENU=Qty. on Order;
                           ESP=Cdad. pedida];
                SourceExpr=PurchOrderLine[2]."Outstanding Quantity" }

    { 64  ;4   ;Field     ;
                CaptionML=[ENU=Qty. on Order;
                           ESP=Cdad. pedida];
                SourceExpr=SalesLine[1]."Outstanding Quantity" }

    { 70  ;4   ;Field     ;
                CaptionML=[ENU=Qty. on Order;
                           ESP=Cdad. pedida];
                SourceExpr=SalesLine[2]."Outstanding Quantity" }

  }
  CODE
  {
    VAR
      ItemLedgEntry2@1000 : Record 32;
      ValueEntry2@1001 : Record 5802;
      PurchLine2@1002 : Record 39;
      SalesLine2@1003 : Record 37;
      ItemLedgEntry@1004 : ARRAY [6] OF Record 32;
      ValueEntry@1005 : ARRAY [6] OF Record 5802;
      j@1006 : Integer;
      PurchOrderLine@1007 : ARRAY [2] OF Record 39;
      SalesLine@1008 : ARRAY [2] OF Record 37;
      UnitAmount@1009 : ARRAY [6] OF Decimal;

    LOCAL PROCEDURE FindLastItemEntry@1(k@1000 : Integer;LastItemLedgEntry@1001 : Record 32);
    BEGIN
      WITH LastItemLedgEntry DO BEGIN
        IF ItemLedgEntry2.FIND('-') THEN BEGIN
          REPEAT
            ItemLedgEntry2.SETRANGE("Variant Code",ItemLedgEntry2."Variant Code");
            ItemLedgEntry2.SETRANGE("Drop Shipment",ItemLedgEntry2."Drop Shipment");
            ItemLedgEntry2.SETRANGE("Location Code",ItemLedgEntry2."Location Code");
            ItemLedgEntry2.FIND('+');

            IF (ItemLedgEntry2."Posting Date" > ItemLedgEntry[k]."Posting Date") OR
               ((ItemLedgEntry2."Posting Date" = ItemLedgEntry[k]."Posting Date") AND
               (ItemLedgEntry2."Entry No." > ItemLedgEntry[k]."Entry No."))
            THEN
              ItemLedgEntry[k] := ItemLedgEntry2;

            Rec.COPYFILTER("Variant Filter",ItemLedgEntry2."Variant Code");
            Rec.COPYFILTER("Drop Shipment Filter",ItemLedgEntry2."Drop Shipment");
            Rec.COPYFILTER("Location Filter",ItemLedgEntry2."Location Code");
          UNTIL ItemLedgEntry2.NEXT = 0;
        END;
      END;
    END;

    LOCAL PROCEDURE FindLastValueEntry@6(k@1000 : Integer;LastValueEntry@1001 : Record 5802);
    BEGIN
      WITH LastValueEntry DO BEGIN
        IF ValueEntry2.FIND('-') THEN BEGIN
          REPEAT
            ValueEntry2.SETRANGE("Variant Code",ValueEntry2."Variant Code");
            ValueEntry2.SETRANGE("Drop Shipment",ValueEntry2."Drop Shipment");
            ValueEntry2.SETRANGE("Location Code",ValueEntry2."Location Code");
            ValueEntry2.FIND('+');

            IF (ValueEntry2."Posting Date" > ValueEntry[k]."Posting Date") OR
               ((ValueEntry2."Posting Date" = ValueEntry[k]."Posting Date") AND
               (ValueEntry2."Entry No." > ValueEntry[k]."Entry No."))
            THEN BEGIN
              ValueEntry[k] := ValueEntry2;
              IF ValueEntry2."Valued Quantity" <> 0 THEN BEGIN
                IF ValueEntry2."Item Ledger Entry Type" = ValueEntry2."Item Ledger Entry Type"::Sale THEN
                  UnitAmount[k] :=
                    - (ValueEntry2."Sales Amount (Actual)" - ValueEntry2."Discount Amount") / ValueEntry2."Valued Quantity"
                ELSE
                  UnitAmount[k] :=
                     (ValueEntry2."Cost Amount (Actual)" + ValueEntry2."Discount Amount") / ValueEntry2."Valued Quantity"
              END ELSE
                UnitAmount[k] := 0;
            END;
            Rec.COPYFILTER("Variant Filter",ValueEntry2."Variant Code");
            Rec.COPYFILTER("Drop Shipment Filter",ValueEntry2."Drop Shipment");
            Rec.COPYFILTER("Location Filter",ValueEntry2."Location Code");
          UNTIL ValueEntry2.NEXT = 0;
        END;
      END;
    END;

    BEGIN
    END.
  }
}
