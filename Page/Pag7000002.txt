OBJECT Page 7000002 Payables Cartera Docs
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVES6.00;
  }
  PROPERTIES
  {
    Permissions=TableData 7000002=m;
    CaptionML=[ENU=Payables Cartera Docs;
               ESP=Docs. cartera a pagar];
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table7000002;
    SourceTableView=SORTING(Type,Collection Agent,Bill Gr./Pmt. Order No.,Currency Code,Accepted,Due Date,Place)
                    WHERE(Type=CONST(Payable),
                          Bill Gr./Pmt. Order No.=FILTER(=''));
    PageType=Worksheet;
    OnInit=BEGIN
             CurrTotalAmountVisible := TRUE;
           END;

    OnOpenPage=BEGIN
                 CategoryFilter := GETFILTER("Category Code");
                 UpdateStatistics;
               END;

    OnAfterGetRecord=BEGIN
                       OnAfterGetCurrRecord;
                     END;

    OnNewRecord=BEGIN
                  OnAfterGetCurrRecord;
                END;

    OnModifyRecord=BEGIN
                     CODEUNIT.RUN(CODEUNIT::"Document-Edit",Rec);
                     EXIT(FALSE);
                   END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 46      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Docs.;
                                 ESP=&Docs.] }
      { 44      ;2   ;Action    ;
                      CaptionML=[ENU=Analysis;
                                 ESP=An lisis];
                      OnAction=BEGIN
                                 Doc.COPY(Rec);
                                 FORM.RUN(FORM::"Documents Analysis",Doc);
                               END;
                                }
      { 56      ;2   ;Action    ;
                      CaptionML=[ENU=Maturity;
                                 ESP=Vencimientos];
                      OnAction=BEGIN
                                 Doc.COPY(Rec);
                                 WITH Doc DO BEGIN
                                   SETRANGE(Type,Type::Payable);
                                   SETRANGE("Bill Gr./Pmt. Order No.",'');
                                 END;
                                 FORM.RUNMODAL(FORM::"Documents Maturity",Doc);
                               END;
                                }
      { 55      ;2   ;Separator  }
      { 59      ;2   ;Action    ;
                      ShortCutKey=May£s+Ctrl+D;
                      CaptionML=[ENU=Dime&nsions;
                                 ESP=Dime&nsiones];
                      Image=Dimensions;
                      OnAction=VAR
                                 CarteraDocDim@1100000 : Record 7000025;
                                 PostedDocDim@1100001 : Record 359;
                                 CarteraDimensions@1100003 : Form 7000080;
                                 PostedDocDimensions@1100004 : Form 547;
                               BEGIN
                                 CASE "Document Type" OF
                                   "Document Type"::Bill:
                                     BEGIN
                                       CarteraDocDim.SETCURRENTKEY("Table ID","Document Type",Type,"Document No.","Bill No.","Line No.","Dimension Code");
                                       CarteraDocDim.SETRANGE("Table ID",DATABASE::"Cartera Doc.");
                                       CarteraDocDim.SETRANGE("Document Type",CarteraDocDim."Document Type"::Bill);
                                       CarteraDocDim.SETRANGE("Document No.",Rec."Document No.");
                                       CarteraDocDim.SETRANGE("Bill No.",Rec."No.");
                                       CarteraDocDim.SETRANGE(Type,Rec.Type);
                                       CarteraDimensions.SETTABLEVIEW(CarteraDocDim);
                                       CarteraDimensions.RUN;
                                       CarteraDocDim.RESET;
                                     END;
                                   "Document Type"::Invoice:
                                     BEGIN
                                       CarteraDocDim.SETCURRENTKEY("Table ID","Document Type",Type,"Document No.","Bill No.","Line No.","Dimension Code");
                                       CarteraDocDim.SETRANGE("Table ID",DATABASE::"Cartera Doc.");
                                       CarteraDocDim.SETRANGE("Document Type",CarteraDocDim."Document Type"::Invoice);
                                       CarteraDocDim.SETRANGE("Document No.",Rec."Document No.");
                                       CarteraDocDim.SETRANGE("Bill No.",Rec."No.");
                                       CarteraDocDim.SETRANGE(Type,Rec.Type);
                                       CarteraDimensions.SETTABLEVIEW(CarteraDocDim);
                                       CarteraDimensions.RUN;
                                       CarteraDocDim.RESET;
                                     END;
                                   ELSE BEGIN
                                     PostedDocDim.SETCURRENTKEY("Table ID","Document No.","Line No.","Dimension Code");
                                     IF Rec.Type = Rec.Type::Receivable THEN
                                       PostedDocDim.SETRANGE("Table ID",DATABASE::"Sales Invoice Header")
                                     ELSE
                                       PostedDocDim.SETRANGE("Table ID",DATABASE::"Purch. Inv. Header");
                                     PostedDocDim.SETRANGE("Document No.",Rec."Document No.");
                                     PostedDocDimensions.SETTABLEVIEW(PostedDocDim);
                                     PostedDocDimensions.RUN;
                                     PostedDocDim.RESET;
                                   END;
                                 END;
                               END;
                                }
      { 58      ;2   ;Separator  }
      { 62      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Categorize;
                                 ESP=Clasificar];
                      OnAction=BEGIN
                                 CurrPage.SETSELECTIONFILTER(Doc);
                                 CarteraManagement.CategorizeDocs(Doc);
                               END;
                                }
      { 63      ;2   ;Action    ;
                      CaptionML=[ENU=Decategorize;
                                 ESP=Desclasificar];
                      OnAction=BEGIN
                                 CurrPage.SETSELECTIONFILTER(Doc);
                                 CarteraManagement.DecategorizeDocs(Doc);
                               END;
                                }
      { 37      ;2   ;Separator  }
      { 50      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Reject;
                                 ESP=Rechazar];
                      Image=Reject;
                      OnAction=VAR
                                 Cust@1170000001 : Record 18;
                               BEGIN
                                 IF Doc.Type = Doc.Type::Receivable THEN
                                   IF Cust.GET("Account No.") THEN
                                     Cust.CheckBlockedCustOnJnls(Cust,"Document Type",FALSE);
                                 Reject;
                               END;
                                }
      { 39      ;2   ;Separator  }
      { 40      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Print;
                                 ESP=Imprimir];
                      Image=Print;
                      OnAction=BEGIN
                                 PrintDoc;
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 47      ;1   ;Action    ;
                      CaptionML=[ENU=&Navigate;
                                 ESP=&Navegar];
                      Promoted=Yes;
                      Image=Navigate;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CarteraManagement.NavigateDoc(Rec);
                               END;
                                }
      { 1901375104;1 ;Action    ;
                      CaptionML=[ENU=Documents Maturity;
                                 ESP=Vencimientos documentos];
                      RunObject=Page 7000029;
                      Promoted=Yes;
                      Image=DocumentsMaturity;
                      PromotedCategory=Process }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 38  ;1   ;Group     ;
                CaptionML=[ENU=Options;
                           ESP=Opciones] }

    { 14  ;2   ;Field     ;
                CaptionML=[ENU=Category Filter;
                           ESP=Filtro clasificaci¢n];
                SourceExpr=CategoryFilter;
                TableRelation="Category Code";
                OnValidate=BEGIN
                             CategoryFilterOnAfterValidate;
                           END;
                            }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 36  ;2   ;Field     ;
                SourceExpr="Document Type" }

    { 34  ;2   ;Field     ;
                SourceExpr="Collection Agent" }

    { 28  ;2   ;Field     ;
                SourceExpr=Accepted }

    { 2   ;2   ;Field     ;
                SourceExpr="Posting Date";
                Visible=FALSE;
                Editable=FALSE }

    { 24  ;2   ;Field     ;
                SourceExpr="Due Date" }

    { 12  ;2   ;Field     ;
                SourceExpr="Payment Method Code";
                Editable=FALSE }

    { 8   ;2   ;Field     ;
                SourceExpr="Document No.";
                Editable=FALSE }

    { 18  ;2   ;Field     ;
                SourceExpr="No.";
                Editable=FALSE }

    { 10  ;2   ;Field     ;
                SourceExpr=Description;
                Editable=FALSE }

    { 42  ;2   ;Field     ;
                SourceExpr="Original Amount (LCY)";
                Visible=FALSE;
                Editable=FALSE }

    { 30  ;2   ;Field     ;
                SourceExpr="Original Amount";
                Visible=FALSE;
                Editable=FALSE }

    { 22  ;2   ;Field     ;
                SourceExpr="Remaining Amt. (LCY)";
                Visible=FALSE;
                Editable=FALSE }

    { 26  ;2   ;Field     ;
                SourceExpr="Remaining Amount";
                Editable=FALSE }

    { 20  ;2   ;Field     ;
                SourceExpr="Currency Code";
                Visible=FALSE;
                Editable=FALSE }

    { 32  ;2   ;Field     ;
                SourceExpr=Place;
                Visible=FALSE;
                Editable=FALSE }

    { 4   ;2   ;Field     ;
                SourceExpr="Category Code" }

    { 1100000;2;Field     ;
                SourceExpr="Transfer Type" }

    { 6   ;2   ;Field     ;
                SourceExpr="Account No.";
                Visible=FALSE;
                Editable=FALSE }

    { 51  ;2   ;Field     ;
                SourceExpr="Entry No.";
                Editable=FALSE }

    { 49  ;1   ;Group      }

    { 52  ;2   ;Field     ;
                Name=CurrTotalAmount;
                CaptionML=[ENU=Total Rmg. Amt. (LCY);
                           ESP=Importe pndte. (DL)];
                SourceExpr=CurrTotalAmountLCY;
                AutoFormatType=1;
                Visible=CurrTotalAmountVisible;
                Editable=FALSE }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1901421107;1;Part   ;
                SubFormLink=Type=CONST(Payable),
                            Entry No.=FIELD(Entry No.);
                PagePartID=Page35290;
                Visible=TRUE;
                PartType=Page }

    { 1905767507;1;Part   ;
                Visible=TRUE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      Text1100000@1100008 : TextConst 'ENU=Payable Bills cannot be printed.;ESP=No se pueden imprimir los efectos a pagar.';
      Text1100001@1100009 : TextConst 'ENU=Only Receivable Bills can be rejected.;ESP=S¢lo se pueden impagar efectos a cobrar.';
      Text1100002@1100010 : TextConst 'ENU=Only  Bills can be rejected.;ESP=S¢lo se pueden impagar efectos.';
      Doc@1100000 : Record 7000002;
      CustLedgEntry@1100001 : Record 21;
      SalesInvHeader@1100002 : Record 112;
      PurchInvHeader@1100003 : Record 122;
      CarteraManagement@1100004 : Codeunit 7000000;
      CategoryFilter@1100005 : Code[250];
      CurrTotalAmountLCY@1100006 : Decimal;
      ShowCurrent@1100007 : Boolean;
      CurrTotalAmountVisible@19040984 : Boolean INDATASET;

    PROCEDURE UpdateStatistics@4();
    BEGIN
      Doc.COPY(Rec);
      CarteraManagement.UpdateStatistics(Doc,CurrTotalAmountLCY,ShowCurrent);
      CurrTotalAmountVisible := ShowCurrent;
    END;

    PROCEDURE GetSelected@1(VAR NewDoc@1100000 : Record 7000002);
    BEGIN
      CurrPage.SETSELECTIONFILTER(NewDoc);
    END;

    PROCEDURE PrintDoc@2();
    BEGIN
      CurrPage.SETSELECTIONFILTER(Doc);
      IF NOT Doc.FIND('-') THEN
        EXIT;

      IF (Doc.Type <> Doc.Type::Receivable) AND (Doc."Document Type" = Doc."Document Type"::Bill) THEN
        ERROR(Text1100000);

      IF Doc.Type = Doc.Type::Receivable THEN BEGIN
        IF Doc."Document Type" = Doc."Document Type"::Bill THEN BEGIN
          CustLedgEntry.RESET;
          REPEAT
            CustLedgEntry.GET(Doc."Entry No.");
            CustLedgEntry.MARK(TRUE);
          UNTIL Doc.NEXT = 0;

          CustLedgEntry.MARKEDONLY(TRUE);
          CustLedgEntry.PrintBill(TRUE);
        END ELSE BEGIN
          SalesInvHeader.RESET;
          REPEAT
            SalesInvHeader.GET(Doc."Document No.");
            SalesInvHeader.MARK(TRUE);
          UNTIL Doc.NEXT = 0;

          SalesInvHeader.MARKEDONLY(TRUE);
          SalesInvHeader.PrintRecords(TRUE);
        END;
      END ELSE BEGIN
        PurchInvHeader.RESET;
        REPEAT
          PurchInvHeader.GET(Doc."Document No.");
          PurchInvHeader.MARK(TRUE);
        UNTIL Doc.NEXT = 0;

        PurchInvHeader.MARKEDONLY(TRUE);
        PurchInvHeader.PrintRecords(TRUE);
      END;
    END;

    PROCEDURE Reject@3();
    BEGIN
      IF Doc.Type <> Doc.Type::Receivable THEN
        ERROR(Text1100001);
      IF Doc."Document Type" <> "Document Type"::Bill THEN
        ERROR(Text1100002);

      CurrPage.SETSELECTIONFILTER(Doc);
      IF NOT Doc.FIND('-') THEN
        EXIT;

      CustLedgEntry.RESET;
      REPEAT
        CustLedgEntry.GET(Doc."Entry No.");
        CustLedgEntry.MARK(TRUE);
      UNTIL Doc.NEXT = 0;

      CustLedgEntry.MARKEDONLY(TRUE);
      REPORT.RUNMODAL(REPORT::"Reject Docs.",TRUE,FALSE,CustLedgEntry);
    END;

    LOCAL PROCEDURE CategoryFilterOnAfterValidate@19040013();
    BEGIN
      SETFILTER("Category Code",CategoryFilter);
      CurrPage.UPDATE(FALSE);
      UpdateStatistics;
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;
      UpdateStatistics;
    END;

    LOCAL PROCEDURE OnBeforePutRecord@19001631();
    BEGIN
      UpdateStatistics;
    END;

    BEGIN
    END.
  }
}
