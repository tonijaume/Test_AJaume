OBJECT Page 6000 Dispatch Board
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVW16.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Dispatch Board;
               ESP=Panel despacho];
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    SourceTable=Table5900;
    SourceTableView=SORTING(Status,Response Date,Response Time,Priority);
    DataCaptionFields=Status;
    PageType=Worksheet;
    OnOpenPage=BEGIN
                 IF UserMgt.GetServiceFilter <> '' THEN BEGIN
                   FILTERGROUP(2);
                   SETRANGE("Responsibility Center",UserMgt.GetServiceFilter);
                   FILTERGROUP(0);
                 END;
                 SetAllFilters;

                 IF ISEMPTY THEN BEGIN
                   ServOrderFilter := '';
                   SetServOrderFilter;
                 END;
               END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 59      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Dispatch Board;
                                 ESP=Pa&nel desp.] }
      { 60      ;2   ;Action    ;
                      ShortCutKey=May£s+F7;
                      CaptionML=[ENU=&Show Document;
                                 ESP=&Mostrar documento];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=View;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CASE "Document Type" OF
                                   "Document Type"::Quote:
                                     FORM.RUNMODAL(FORM::"Service Quote",Rec);
                                   "Document Type"::Order:
                                     FORM.RUNMODAL(FORM::"Service Order",Rec);
                                 END;
                               END;
                                }
      { 8       ;1   ;ActionGroup;
                      CaptionML=[ENU=Pla&nning;
                                 ESP=&Planif.] }
      { 9       ;2   ;Action    ;
                      CaptionML=[ENU=Resource &Allocations;
                                 ESP=&Asignaciones recurso];
                      RunObject=Page 6005;
                      RunFormView=SORTING(Status,Document Type,Document No.,Service Item Line No.,Allocation Date,Starting Time,Posted)
                                  WHERE(Status=FILTER(<>Canceled));
                      RunFormLink=Document Type=FIELD(Document Type),
                                  Document No.=FIELD(No.);
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ResourcePlanning;
                      PromotedCategory=Process }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 47      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Print;
                                 ESP=&Imprimir] }
      { 48      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Print &Dispatch Board;
                                 ESP=Impr. panel &despacho];
                      OnAction=BEGIN
                                 REPORT.RUN(REPORT::"Dispatch Board",TRUE,TRUE,Rec);
                               END;
                                }
      { 49      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Print Service &Order;
                                 ESP=Impr. &ped. servicio];
                      Image=Print;
                      OnAction=BEGIN
                                 CLEAR(ServHeader);
                                 ServHeader.SETRANGE("Document Type","Document Type");
                                 ServHeader.SETRANGE("No.","No.");
                                 REPORT.RUN(REPORT::"Service Order",TRUE,TRUE,ServHeader);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 22  ;1   ;Group     ;
                CaptionML=[ENU=General;
                           ESP=General] }

    { 24  ;2   ;Field     ;
                CaptionML=[ENU=Resource Filter;
                           ESP=Filtro recurso];
                SourceExpr=ResourceFilter;
                OnValidate=BEGIN
                             SetResourceFilter;
                               ResourceFilterOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           Res.RESET;
                           IF FORM.RUNMODAL(0,Res) = ACTION::LookupOK THEN BEGIN
                             Text := Res."No.";
                             EXIT(TRUE);
                           END;
                         END;
                          }

    { 39  ;2   ;Field     ;
                CaptionML=[ENU=Resource Group Filter;
                           ESP=Filtro grupo recurso];
                SourceExpr=ResourceGroupFilter;
                OnValidate=BEGIN
                             SetResourceGroupFilter;
                               ResourceGroupFilterOnAfterVali;
                           END;

                OnLookup=BEGIN
                           ResourceGroup.RESET;
                           IF FORM.RUNMODAL(0,ResourceGroup) = ACTION::LookupOK THEN BEGIN
                             Text := ResourceGroup."No.";
                             EXIT(TRUE);
                           END;
                         END;
                          }

    { 42  ;2   ;Field     ;
                CaptionML=[ENU=Response Date Filter;
                           ESP=Filtro fecha respuesta];
                SourceExpr=RespDateFilter;
                OnValidate=BEGIN
                             SetRespDateFilter;
                               RespDateFilterOnAfterValidate;
                           END;
                            }

    { 30  ;2   ;Field     ;
                CaptionML=[ENU=Allocation Filter;
                           ESP=Filtro asignaci¢n];
                OptionCaptionML=[ENU=" ,No or Partial Allocation,Full Allocation,Reallocation Needed";
                                 ESP=" ,Ning. o asign. parcial,Asign. total,Neces. reasignaci¢n"];
                SourceExpr=AllocationFilter;
                OnValidate=BEGIN
                             SetAllocFilter;
                               AllocationFilterOnAfterValidat;
                           END;
                            }

    { 26  ;2   ;Field     ;
                CaptionML=[ENU=Document Filter;
                           ESP=Filtro documento];
                OptionCaptionML=[ENU=Order,Quote,All;
                                 ESP=Pedido,Oferta,Todos];
                SourceExpr=DocFilter;
                OnValidate=BEGIN
                             SetDocFilter;
                               DocFilterOnAfterValidate;
                           END;
                            }

    { 65  ;2   ;Field     ;
                CaptionML=[ENU=No. Filter;
                           ESP=Filtro N§];
                SourceExpr=ServOrderFilter;
                OnValidate=BEGIN
                             SetServOrderFilter;
                               ServOrderFilterOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           ServHeader.RESET;
                           SetDocFilter2(ServHeader);
                           IF FORM.RUNMODAL(0,ServHeader) = ACTION::LookupOK THEN BEGIN
                             Text := ServHeader."No.";
                             EXIT(TRUE);
                           END;
                         END;
                          }

    { 79  ;2   ;Field     ;
                CaptionML=[ENU=Status Filter;
                           ESP=Filtro estado];
                OptionCaptionML=[ENU=" ,Pending,In Process,Finished,On Hold";
                                 ESP=" ,Pendiente,En proceso,Terminado,En espera"];
                SourceExpr=StatusFilter;
                OnValidate=BEGIN
                             SetStatusFilter;
                               StatusFilterOnAfterValidate;
                           END;
                            }

    { 45  ;2   ;Field     ;
                CaptionML=[ENU=Customer Filter;
                           ESP=Filtro cliente];
                SourceExpr=CustomFilter;
                OnValidate=BEGIN
                             SetCustFilter;
                               CustomFilterOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           Cust.RESET;
                           IF FORM.RUNMODAL(0,Cust) = ACTION::LookupOK THEN BEGIN
                             Text := Cust."No.";
                             EXIT(TRUE);
                           END;
                         END;
                          }

    { 43  ;2   ;Field     ;
                CaptionML=[ENU=Contract Filter;
                           ESP=Filtro contrato];
                SourceExpr=ContractFilter;
                OnValidate=BEGIN
                             SetContractFilter;
                               ContractFilterOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           ServiceContract.RESET;
                           ServiceContract.SETRANGE("Contract Type",ServiceContract."Contract Type"::Contract);
                           IF FORM.RUNMODAL(0,ServiceContract) = ACTION::LookupOK THEN BEGIN
                             Text := ServiceContract."Contract No.";
                             EXIT(TRUE);
                           END;
                         END;
                          }

    { 37  ;2   ;Field     ;
                CaptionML=[ENU=Zone Filter;
                           ESP=Filtro zona];
                SourceExpr=ZoneFilter;
                OnValidate=BEGIN
                             SetZoneFilter;
                               ZoneFilterOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           ServiceZones.RESET;
                           IF FORM.RUNMODAL(0,ServiceZones) = ACTION::LookupOK THEN BEGIN
                             Text := ServiceZones.Code;
                             EXIT(TRUE);
                           END;
                         END;
                          }

    { 1   ;1   ;Group     ;
                Editable=FALSE;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                SourceExpr="Response Date" }

    { 4   ;2   ;Field     ;
                SourceExpr="Response Time" }

    { 81  ;2   ;Field     ;
                SourceExpr=Priority }

    { 15  ;2   ;Field     ;
                SourceExpr="Document Type" }

    { 6   ;2   ;Field     ;
                SourceExpr="No." }

    { 12  ;2   ;Field     ;
                SourceExpr=Description;
                Visible=FALSE }

    { 33  ;2   ;Field     ;
                SourceExpr=Status }

    { 53  ;2   ;Field     ;
                SourceExpr="Customer No." }

    { 36  ;2   ;Field     ;
                SourceExpr=Name }

    { 28  ;2   ;Field     ;
                SourceExpr="Contract No.";
                Editable=FALSE }

    { 10  ;2   ;Field     ;
                SourceExpr="Service Zone Code" }

    { 16  ;2   ;Field     ;
                SourceExpr="No. of Allocations" }

    { 18  ;2   ;Field     ;
                SourceExpr="Order Date" }

    { 20  ;2   ;Field     ;
                SourceExpr="Order Time" }

    { 40  ;2   ;Field     ;
                SourceExpr="Reallocation Needed" }

    { 94  ;1   ;Group      }

    { 92  ;2   ;Field     ;
                CaptionML=[ENU=Service Order Description;
                           ESP=Descripci¢n pedido servicio];
                SourceExpr=Description;
                Editable=FALSE }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      ServiceZones@1018 : Record 5957;
      Cust@1017 : Record 18;
      Res@1020 : Record 156;
      ResourceGroup@1023 : Record 152;
      ServHeader@1004 : Record 5900;
      ServiceContract@1019 : Record 5965;
      Date@1021 : Record 2000000007;
      UserMgt@1005 : Codeunit 5700;
      DocFilter@1006 : 'Order,Quote,All';
      StatusFilter@1007 : ' ,Pending,In Process,Finished,On Hold';
      RespDateFilter@1010 : Text[250];
      ServOrderFilter@1009 : Text[250];
      CustomFilter@1013 : Text[250];
      ZoneFilter@1014 : Text[250];
      ContractFilter@1015 : Text[250];
      ResourceFilter@1016 : Text[250];
      ResourceGroupFilter@1022 : Text[250];
      AllocationFilter@1008 : ' ,No or Partial Allocation,Full Allocation,Reallocation Needed';

    PROCEDURE SetAllFilters@3();
    BEGIN
      SetDocFilter;
      SetStatusFilter;
      SetRespDateFilter;
      SetServOrderFilter;
      SetCustFilter;
      SetZoneFilter;
      SetContractFilter;
      SetResourceFilter;
      SetResourceGroupFilter;
      SetAllocFilter;
    END;

    PROCEDURE SetDocFilter@7();
    BEGIN
      FILTERGROUP(2);
      SetDocFilter2(Rec);
      FILTERGROUP(0);
    END;

    PROCEDURE SetDocFilter2@2(VAR ServHeader@1000 : Record 5900);
    BEGIN
      WITH ServHeader DO BEGIN
        FILTERGROUP(2);
        CASE DocFilter OF
          DocFilter::Order:
            SETRANGE("Document Type","Document Type"::Order);
          DocFilter::Quote:
            SETRANGE("Document Type","Document Type"::Quote);
          DocFilter::All:
            SETRANGE("Document Type");
        END;
        FILTERGROUP(0);
      END;
    END;

    PROCEDURE SetStatusFilter@8();
    BEGIN
      FILTERGROUP(2);
      CASE StatusFilter OF
        StatusFilter::" ":
          SETRANGE(Status);
        StatusFilter::Pending:
          SETRANGE(Status,Status::Pending);
        StatusFilter::"In Process":
          SETRANGE(Status,Status::"In Process");
        StatusFilter::Finished:
          SETRANGE(Status,Status::Finished);
        StatusFilter::"On Hold":
          SETRANGE(Status,Status::"On Hold");
      END;
      FILTERGROUP(0);
    END;

    PROCEDURE SetRespDateFilter@9();
    BEGIN
      FILTERGROUP(2);
      SETFILTER("Response Date",RespDateFilter);
      RespDateFilter := GETFILTER("Response Date");
      FILTERGROUP(0);
    END;

    PROCEDURE SetServOrderFilter@10();
    BEGIN
      FILTERGROUP(2);
      SETFILTER("No.",ServOrderFilter);
      ServOrderFilter := GETFILTER("No.");
      FILTERGROUP(0);
    END;

    PROCEDURE SetCustFilter@11();
    BEGIN
      FILTERGROUP(2);
      SETFILTER("Customer No.",CustomFilter);
      CustomFilter := GETFILTER("Customer No.");
      FILTERGROUP(0);
    END;

    PROCEDURE SetZoneFilter@12();
    BEGIN
      FILTERGROUP(2);
      SETFILTER("Service Zone Code",ZoneFilter);
      ZoneFilter := GETFILTER("Service Zone Code");
      FILTERGROUP(0);
    END;

    PROCEDURE SetContractFilter@13();
    BEGIN
      FILTERGROUP(2);
      SETFILTER("Contract No.",ContractFilter);
      ContractFilter := GETFILTER("Contract No.");
      FILTERGROUP(0);
    END;

    PROCEDURE SetResourceFilter@4();
    BEGIN
      FILTERGROUP(2);
      IF ResourceFilter <> '' THEN BEGIN
        SETFILTER("No. of Allocations",'>0');
        SETFILTER("Resource Filter",ResourceFilter);
        ResourceFilter := GETFILTER("Resource Filter");
      END ELSE BEGIN
        IF ResourceGroupFilter = '' THEN
          SETRANGE("No. of Allocations");
        SETRANGE("Resource Filter");
      END;
      FILTERGROUP(0);
    END;

    PROCEDURE SetResourceGroupFilter@6();
    BEGIN
      FILTERGROUP(2);
      IF ResourceGroupFilter <> '' THEN BEGIN
        SETFILTER("No. of Allocations",'>0');
        SETFILTER("Resource Group Filter",ResourceGroupFilter);
        ResourceGroupFilter := GETFILTER("Resource Group Filter");
      END ELSE BEGIN
        IF ResourceFilter = '' THEN
          SETRANGE("No. of Allocations");
        SETRANGE("Resource Group Filter");
      END;
      FILTERGROUP(0);
    END;

    PROCEDURE SetAllocFilter@1();
    BEGIN
      FILTERGROUP(2);
      CASE AllocationFilter OF
        AllocationFilter::" ":
          BEGIN
            SETRANGE("No. of Unallocated Items");
            SETRANGE("Reallocation Needed");
          END;
        AllocationFilter::"No or Partial Allocation":
          BEGIN
            SETFILTER("No. of Unallocated Items",'>0');
            SETRANGE("Reallocation Needed",FALSE);
          END;
        AllocationFilter::"Full Allocation":
          BEGIN
            SETRANGE("No. of Unallocated Items",0);
            SETRANGE("Reallocation Needed",FALSE);
          END;
        AllocationFilter::"Reallocation Needed":
          BEGIN
            SETRANGE("No. of Unallocated Items");
            SETRANGE("Reallocation Needed",TRUE);
          END;
      END;
      FILTERGROUP(0);
    END;

    LOCAL PROCEDURE RespDateFilterOnAfterValidate@19063229();
    BEGIN
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE ServOrderFilterOnAfterValidate@19063213();
    BEGIN
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE StatusFilterOnAfterValidate@19021475();
    BEGIN
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE ZoneFilterOnAfterValidate@19076430();
    BEGIN
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE CustomFilterOnAfterValidate@19018481();
    BEGIN
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE ContractFilterOnAfterValidate@19030304();
    BEGIN
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE ResourceFilterOnAfterValidate@19005532();
    BEGIN
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE DocFilterOnAfterValidate@19004301();
    BEGIN
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE AllocationFilterOnAfterValidat@19066130();
    BEGIN
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE ResourceGroupFilterOnAfterVali@19056724();
    BEGIN
      CurrPage.UPDATE(FALSE);
    END;

    BEGIN
    END.
  }
}
