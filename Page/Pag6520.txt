OBJECT Page 6520 Item Tracing
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVW16.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Item Tracing;
               ESP=Seguimiento productos];
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    SourceTable=Table6520;
    PageType=Worksheet;
    SourceTableTemporary=Yes;
    OnInit=BEGIN
             NavigateEnable := TRUE;
             PrintEnable := TRUE;
             FunctionsEnable := TRUE;
             ItemEnable := TRUE;
             LineEnable := TRUE;
             Functions2Visible := TRUE;
           END;

    OnOpenPage=BEGIN
                 InitButtons;
                 TraceMethod := TraceMethod::"Usage->Origin";
                 ShowComponents := ShowComponents::"Item-tracked Only";
               END;

    OnAfterGetRecord=BEGIN
                       DescriptionIndent := 0;
                       ItemTracingMgt.SetExpansionStatus(Rec,TempTrackEntry,Rec,ActualExpansionStatus);
                       DescriptionOnFormat;
                       SerialNoOnFormat;
                       LotNoOnFormat;
                       ItemNoOnFormat;
                     END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 34      ;1   ;ActionGroup;
                      Name=Line;
                      CaptionML=[ENU=&Line;
                                 ESP=&L¡nea] }
      { 60      ;2   ;Action    ;
                      ShortCutKey=May£s+F7;
                      CaptionML=[ENU=Show Document;
                                 ESP=Muestra documento];
                      Image=View;
                      OnAction=BEGIN
                                 ItemTracingMgt.ShowDocument("Record Identifier");
                               END;
                                }
      { 10      ;1   ;ActionGroup;
                      Name=Item;
                      CaptionML=[ENU=&Item;
                                 ESP=&Producto] }
      { 17      ;2   ;Action    ;
                      ShortCutKey=May£s+F7;
                      CaptionML=[ENU=Card;
                                 ESP=Ficha];
                      RunObject=Page 30;
                      RunFormLink=No.=FIELD(Item No.);
                      Image=EditLines }
      { 19      ;2   ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=[ENU=Ledger E&ntries;
                                 ESP=&Movimientos];
                      RunObject=Page 38;
                      RunFormView=SORTING(Item No.);
                      RunFormLink=Item No.=FIELD(Item No.);
                      Promoted=No;
                      Image=ItemLedger;
                      PromotedCategory=Process }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 30      ;1   ;ActionGroup;
                      Name=Functions2;
                      CaptionML=[ENU=F&unctions;
                                 ESP=Acci&ones];
                      Visible=Functions2Visible }
      { 47      ;2   ;Action    ;
                      CaptionML=[ENU=Next Trace Result;
                                 ESP=Resultado seguimiento siguiente];
                      OnAction=BEGIN
                                 RecallHistory(1);
                               END;
                                }
      { 48      ;2   ;Action    ;
                      CaptionML=[ENU=Previous Trace Result;
                                 ESP=Resultado seguimiento anterior];
                      OnAction=BEGIN
                                 RecallHistory(-1);
                               END;
                                }
      { 36      ;1   ;ActionGroup;
                      Name=Functions;
                      CaptionML=[ENU=F&unctions;
                                 ESP=Acci&ones] }
      { 59      ;2   ;Action    ;
                      CaptionML=[ENU=&Trace Opposite - from Line;
                                 ESP=&Realizar seguimiento opuestos - desde l¡nea];
                      Promoted=Yes;
                      Image=TraceOppositeLine;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 IF TraceMethod = TraceMethod::"Origin->Usage" THEN
                                   TraceMethod := TraceMethod::"Usage->Origin"
                                 ELSE
                                   TraceMethod := TraceMethod::"Origin->Usage";
                                 OppositeTraceFromLine;
                               END;
                                }
      { 26      ;2   ;Action    ;
                      CaptionML=[ENU=Set &Filters with Line Values;
                                 ESP=Establecer &filtros con valores de l¡nea];
                      OnAction=BEGIN
                                 ItemTracingMgt.InitSearchParm(Rec,SerialNoFilter,LotNoFilter,ItemNoFilter,VariantFilter);
                               END;
                                }
      { 37      ;2   ;Action    ;
                      CaptionML=[ENU=Next Trace Result;
                                 ESP=Resultado seguimiento siguiente];
                      OnAction=BEGIN
                                 RecallHistory(1);
                               END;
                                }
      { 38      ;2   ;Action    ;
                      CaptionML=[ENU=Previous Trace Result;
                                 ESP=Resultado seguimiento anterior];
                      OnAction=BEGIN
                                 RecallHistory(-1);
                               END;
                                }
      { 16      ;1   ;Action    ;
                      Name=Print;
                      Ellipsis=Yes;
                      CaptionML=[ENU=&Print;
                                 ESP=&Imprimir];
                      Promoted=Yes;
                      Enabled=PrintEnable;
                      Image=Print;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 xItemTracingBuffer@1002 : Record 6520;
                                 PrintTracking@1000 : Report 6520;
                               BEGIN
                                 CLEAR(PrintTracking);
                                 xItemTracingBuffer.COPY(Rec);
                                 PrintTracking.TransferEntries(Rec);
                                 COPY(xItemTracingBuffer);
                                 PrintTracking.RUN;
                               END;
                                }
      { 11      ;1   ;Action    ;
                      Name=Navigate;
                      CaptionML=[ENU=&Navigate;
                                 ESP=&Navegar];
                      Promoted=Yes;
                      Enabled=NavigateEnable;
                      Image=Navigate;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 Navigate@1000 : Form 344;
                               BEGIN
                                 Navigate.SetTracking("Serial No.","Lot No.");
                                 Navigate.RUN;
                               END;
                                }
      { 20      ;1   ;Action    ;
                      CaptionML=[ENU=&Trace;
                                 ESP=&Realizar seguimiento];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Trace;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 FindRecords;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000001;1;Group  ;
                CaptionML=[ENU=General;
                           ESP=General] }

    { 18  ;2   ;Field     ;
                CaptionML=[ENU=Serial No. Filter;
                           ESP=Filtro n§ serie];
                SourceExpr=SerialNoFilter;
                OnLookup=VAR
                           SerialNoInfo@1003 : Record 6504;
                           SerialNoList@1002 : Form 6509;
                         BEGIN
                           SerialNoInfo.RESET;

                           CLEAR(SerialNoList);
                           SerialNoList.SETTABLEVIEW(SerialNoInfo);
                           IF SerialNoList.RUNMODAL = ACTION::LookupOK THEN
                             SerialNoFilter := SerialNoList.GetSelectionFilter;
                         END;
                          }

    { 13  ;2   ;Field     ;
                CaptionML=[ENU=Lot No. Filter;
                           ESP=Filtro n§ lote];
                SourceExpr=LotNoFilter;
                OnLookup=VAR
                           LotNoInfo@1002 : Record 6505;
                           LotNoList@1003 : Form 6508;
                         BEGIN
                           LotNoInfo.RESET;

                           CLEAR(LotNoList);
                           LotNoList.SETTABLEVIEW(LotNoInfo);
                           IF LotNoList.RUNMODAL = ACTION::LookupOK THEN
                             LotNoFilter := LotNoList.GetSelectionFilter;
                         END;
                          }

    { 1000000013;2;Field  ;
                CaptionML=[ENU=Item Filter;
                           ESP=Filtro producto];
                SourceExpr=ItemNoFilter;
                OnValidate=BEGIN
                             IF ItemNoFilter = '' THEN
                               VariantFilter := '';
                           END;

                OnLookup=VAR
                           Item@1002 : Record 27;
                           ItemList@1003 : Form 31;
                         BEGIN
                           Item.RESET;

                           CLEAR(ItemList);
                           ItemList.SETTABLEVIEW(Item);
                           ItemList.LOOKUPMODE(TRUE);
                           IF ItemList.RUNMODAL = ACTION::LookupOK THEN
                             ItemNoFilter := ItemList.GetSelectionFilter;
                         END;
                          }

    { 4   ;2   ;Field     ;
                CaptionML=[ENU=Variant Filter;
                           ESP=Filtro variante];
                SourceExpr=VariantFilter;
                OnValidate=BEGIN
                             IF ItemNoFilter = '' THEN
                               ERROR(Text001);
                           END;

                OnLookup=VAR
                           ItemVariant@1003 : Record 5401;
                           ItemVariants@1002 : Form 5401;
                         BEGIN
                           IF ItemNoFilter = '' THEN
                             ERROR(Text001);

                           ItemVariant.RESET;

                           CLEAR(ItemVariants);
                           ItemVariant.SETFILTER("Item No.",ItemNoFilter);
                           ItemVariants.SETTABLEVIEW(ItemVariant);
                           ItemVariants.LOOKUPMODE(TRUE);
                           IF ItemVariants.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             ItemVariants.GETRECORD(ItemVariant);
                             VariantFilter := ItemVariant.Code;
                           END;
                         END;
                          }

    { 25  ;2   ;Field     ;
                CaptionML=[ENU=Show Components;
                           ESP=Mostrar componentes];
                OptionCaptionML=[ENU=No,Item-tracked Only,All;
                                 ESP=No,S¢lo producto seguido,Todos];
                SourceExpr=ShowComponents }

    { 21  ;2   ;Field     ;
                CaptionML=[ENU=Trace Method;
                           ESP=Mtodo seguimiento];
                ToolTipML=[ENU=Find latest occurence and investigate where these items came from.;
                           ESP=Busque la £ltima aparici¢n e investigue de d¢nde proceden estos productos.];
                OptionCaptionML=[ENU=Origin -> Usage,Usage -> Origin;
                                 ESP=Origen -> Uso,Uso -> Origen];
                SourceExpr=TraceMethod }

    { 35  ;1   ;Field     ;
                ToolTipML=[ENU=These are the settings that were used to generate the trace result below;
                           ESP=Esta es la configuraci¢n utilizada para generar el siguiente resultado de seguimiento];
                CaptionClass=FORMAT (TraceText);
                Editable=FALSE }

    { 1   ;1   ;Group     ;
                IndentationColumnName=DescriptionIndent;
                IndentationControls=Description;
                ShowAsTree=Yes;
                GroupType=Repeater }

    { 1000000015;2;Field  ;
                SourceExpr=Description }

    { 8   ;2   ;Field     ;
                SourceExpr="Entry Type";
                Visible=FALSE }

    { 1000000034;2;Field  ;
                SourceExpr="Serial No.";
                Editable=FALSE }

    { 27  ;2   ;Field     ;
                SourceExpr="Lot No.";
                Editable=FALSE }

    { 1000000030;2;Field  ;
                SourceExpr="Item No.";
                Editable=FALSE }

    { 32  ;2   ;Field     ;
                SourceExpr="Item Description";
                Editable=FALSE }

    { 2   ;2   ;Field     ;
                SourceExpr="Variant Code";
                Visible=FALSE }

    { 1000000032;2;Field  ;
                SourceExpr="Document No.";
                Visible=FALSE }

    { 1000000043;2;Field  ;
                SourceExpr="Posting Date";
                Visible=FALSE }

    { 1000000017;2;Field  ;
                SourceExpr="Source Type";
                Visible=FALSE }

    { 6   ;2   ;Field     ;
                SourceExpr="Source No.";
                Visible=FALSE;
                Editable=FALSE }

    { 1000000003;2;Field  ;
                SourceExpr="Source Name";
                Visible=FALSE;
                Editable=FALSE }

    { 23  ;2   ;Field     ;
                SourceExpr="Location Code";
                Editable=FALSE }

    { 1000000021;2;Field  ;
                SourceExpr=Quantity;
                OnDrillDown=VAR
                              ItemLedgerEntry@1000000000 : Record 32;
                            BEGIN
                              ItemLedgerEntry.RESET;
                              ItemLedgerEntry.SETRANGE("Entry No.","Item Ledger Entry No.");
                              FORM.RUNMODAL(0,ItemLedgerEntry);
                            END;
                             }

    { 1000000019;2;Field  ;
                SourceExpr="Remaining Quantity" }

    { 1000000023;2;Field  ;
                Lookup=Yes;
                SourceExpr="Created by";
                Visible=FALSE }

    { 1000000025;2;Field  ;
                SourceExpr="Created on";
                Visible=FALSE }

  }
  CODE
  {
    VAR
      TrackFilters@1011 : Record 6520;
      TempTrackEntry@1000 : TEMPORARY Record 6520;
      ItemTracingMgt@1017 : Codeunit 6520;
      TraceMethod@1004 : 'Origin->Usage,Usage->Origin';
      ShowComponents@1000000002 : 'No,Item-tracked Only,All';
      ActualExpansionStatus@1009 : 'Has Children,Expanded,No Children';
      SerialNoFilter@1000000009 : Code[1000];
      LotNoFilter@1006 : Code[1000];
      ItemNoFilter@1000000007 : Code[1000];
      VariantFilter@1001 : Code[1000];
      Text001@1002 : TextConst 'ENU=Item No. Filter required.;ESP=Filtro n§ producto requerido.';
      TraceText@1005 : Text[1000];
      Text002@1007 : TextConst 'ENU=Serial No.: %1, Lot No.: %2, Item: %3, Variant: %4, %5, %6;ESP=N§ serie: %1, N§ lote: %2, Producto: %3, Variante: %4, %5, %6';
      PreviousExists@1010 : Boolean;
      NextExists@1012 : Boolean;
      Text003@1008 : TextConst 'ENU=Filters too large to show.;ESP=Filtros demasiado amplios para mostrar.';
      Text004@1003 : TextConst 'ENU=Origin->Usage,Usage->Origin;ESP=Origen->Uso,Uso->Origen';
      Text005@1013 : TextConst 'ENU=No,Item-tracked Only,All;ESP=No,S¢lo producto seguido,Todos';
      DescriptionIndent@19057867 : Integer INDATASET;
      "Serial No.Emphasize"@19051405 : Boolean INDATASET;
      "Lot No.Emphasize"@19060788 : Boolean INDATASET;
      "Item No.Emphasize"@19054492 : Boolean INDATASET;
      PreviousVisible@19011761 : Boolean INDATASET;
      NextVisible@19017417 : Boolean INDATASET;
      Functions2Visible@19003285 : Boolean INDATASET;
      LineEnable@19075443 : Boolean INDATASET;
      ItemEnable@19075712 : Boolean INDATASET;
      FunctionsEnable@19066687 : Boolean INDATASET;
      PrintEnable@19037407 : Boolean INDATASET;
      NavigateEnable@19005834 : Boolean INDATASET;

    PROCEDURE FindRecords@1000000001();
    BEGIN
      ItemTracingMgt.FindRecords(TempTrackEntry,Rec,
        SerialNoFilter,LotNoFilter,ItemNoFilter,VariantFilter,
        TraceMethod,ShowComponents);
      InitButtons;

      ItemTracingMgt.GetHistoryStatus(PreviousExists,NextExists);

      UpdateTraceText;

      IF ISSERVICETIER THEN BEGIN
        ItemTracingMgt.ExpandAll(TempTrackEntry,Rec);
        CurrPage.UPDATE(FALSE)
      END;
    END;

    PROCEDURE OppositeTraceFromLine@1();
    BEGIN
      ItemTracingMgt.InitSearchParm(Rec,SerialNoFilter,LotNoFilter,ItemNoFilter,VariantFilter);
      FindRecords;
    END;

    PROCEDURE InitButtons@7();
    BEGIN
      IF NOT TempTrackEntry.FIND('-') THEN BEGIN
        LineEnable := FALSE;
        ItemEnable := FALSE;
        FunctionsEnable := FALSE;
        Functions2Visible := TRUE;
        PrintEnable := FALSE;
        NavigateEnable := FALSE;
      END ELSE BEGIN
        LineEnable := TRUE;
        ItemEnable := TRUE;
        FunctionsEnable := TRUE;
        Functions2Visible := FALSE;
        PrintEnable := TRUE;
        NavigateEnable := TRUE;
      END;

      IF ISSERVICETIER THEN BEGIN
        PreviousVisible := FALSE;
        NextVisible := FALSE;
      END;
    END;

    PROCEDURE InitFilters@4(VAR ItemTrackingEntry@1000 : Record 6520);
    BEGIN
      SerialNoFilter := ItemTrackingEntry.GETFILTER("Serial No.");
      LotNoFilter := ItemTrackingEntry.GETFILTER("Lot No.");
      ItemNoFilter := ItemTrackingEntry.GETFILTER("Item No.");
      VariantFilter := ItemTrackingEntry.GETFILTER("Variant Code");
      TraceMethod := TraceMethod::"Usage->Origin";
      ShowComponents := ShowComponents::"Item-tracked Only";
    END;

    PROCEDURE RecallHistory@2(Steps@1000 : Integer);
    BEGIN
      ItemTracingMgt.RecallHistory(Steps,TempTrackEntry,Rec,SerialNoFilter,
                                 LotNoFilter,ItemNoFilter,VariantFilter,TraceMethod,ShowComponents);
      UpdateTraceText;
      InitButtons;
      ItemTracingMgt.GetHistoryStatus(PreviousExists,NextExists);

      IF ISSERVICETIER THEN BEGIN
        ItemTracingMgt.ExpandAll(TempTrackEntry,Rec);
        CurrPage.UPDATE(FALSE);
      END;
    END;

    LOCAL PROCEDURE UpdateTraceText@3();
    VAR
      LengthOfText@1001 : Integer;
      L1@1002 : Integer;
      L2@1003 : Integer;
      Overflow@1000 : Boolean;
    BEGIN
      LengthOfText := (STRLEN(Text002 + SerialNoFilter + LotNoFilter + ItemNoFilter + VariantFilter) +
        STRLEN(FORMAT(TraceMethod)) + STRLEN(FORMAT(ShowComponents)) - 6); // 6 = number of positions in Text002

      Overflow :=  LengthOfText > 512;

      IF Overflow THEN
        TraceText := Text003
      ELSE
        TraceText := STRSUBSTNO(Text002,SerialNoFilter,LotNoFilter,ItemNoFilter,VariantFilter,
          SELECTSTR(TraceMethod+1,Text004) , SELECTSTR(ShowComponents+1,Text005));
    END;

    LOCAL PROCEDURE ActualExpansionStatusOnPush@19057112();
    VAR
      T@1001 : Integer;
      xActualExpansionStatus@1002 : Integer;
    BEGIN
      ItemTracingMgt.ToggleExpandCollapse(Rec,TempTrackEntry,Rec,ActualExpansionStatus);
    END;

    LOCAL PROCEDURE PreviousExistsOnPush@19036989();
    BEGIN
      RecallHistory(-1);
    END;

    LOCAL PROCEDURE NextExistsOnPush@19045290();
    BEGIN
      RecallHistory(1);
    END;

    LOCAL PROCEDURE DescriptionOnFormat@19023855();
    BEGIN
      DescriptionIndent := Level;
    END;

    LOCAL PROCEDURE SerialNoOnFormat@19077228();
    BEGIN
      "Serial No.Emphasize" := "Serial No." = SerialNoFilter;
    END;

    LOCAL PROCEDURE LotNoOnFormat@19010784();
    BEGIN
      "Lot No.Emphasize" := "Lot No." = LotNoFilter;
    END;

    LOCAL PROCEDURE ItemNoOnFormat@19046299();
    BEGIN
      "Item No.Emphasize" := "Item No." = ItemNoFilter;
    END;

    BEGIN
    {
      Button Function2 is hidden behind tablebox - ensure that shortkeys for next and previous are active even though the
      real Function button is disabled.
    }
    END.
  }
}
