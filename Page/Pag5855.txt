OBJECT Page 5855 Posted Purchase Document Lines
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVW16.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Posted Purchase Document Lines;
               ESP=Hist¢rico l¡neas doc. compras];
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    LinksAllowed=No;
    SourceTable=Table23;
    PageType=Document;
    OnInit=BEGIN
             ShowRevLineEnable := TRUE;
             "Posted Credit MemosVisible" := TRUE;
             "Posted Return ShipmentsVisible" := TRUE;
             "Posted InvoicesVisible" := TRUE;
             "Posted ReceiptsVisible" := TRUE;
           END;

    OnOpenPage=BEGIN
                 CurrentMenuType := 1;
                 ChangeSubMenu(CurrentMenuType);
                 CASE CurrentMenuType OF
                   0:
                     BEGIN
                       "Posted ReceiptsVisible" := TRUE;
                       "Posted InvoicesVisible" := FALSE;
                       "Posted Return ShipmentsVisible" := FALSE;
                       "Posted Credit MemosVisible" := FALSE;
                     END;
                   1:
                     BEGIN
                       "Posted ReceiptsVisible" := FALSE;
                       "Posted InvoicesVisible" := TRUE;
                       "Posted Return ShipmentsVisible" := FALSE;
                       "Posted Credit MemosVisible" := FALSE;
                     END;
                   2:
                     BEGIN
                       "Posted ReceiptsVisible" := FALSE;
                       "Posted InvoicesVisible" := FALSE;
                       "Posted Return ShipmentsVisible" := TRUE;
                       "Posted Credit MemosVisible" := FALSE;
                     END;
                   3:
                     BEGIN
                       "Posted ReceiptsVisible" := FALSE;
                       "Posted InvoicesVisible" := FALSE;
                       "Posted Return ShipmentsVisible" := FALSE;
                       "Posted Credit MemosVisible" := TRUE;
                     END;
                 END;
                 SETRANGE("No.","No.");

                 OriginalQuantity := FALSE;
               END;

    OnAfterGetRecord=BEGIN
                       CALCFIELDS(
                         "No. of Pstd. Receipts","No. of Pstd. Invoices",
                         "No. of Pstd. Return Shipments","No. of Pstd. Credit Memos");
                       CurrentMenuTypeOpt := CurrentMenuType;
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 46  ;1   ;Group     ;
                CaptionML=[ENU=Options;
                           ESP=Opciones] }

    { 63  ;2   ;Field     ;
                Name=ShowRevLine;
                CaptionML=[ENU=Show Reversible Lines Only;
                           ESP=Mostrar s¢lo l¡neas reversibles];
                SourceExpr=ShowRevLinesOnly;
                Enabled=ShowRevLineEnable;
                OnValidate=BEGIN
                             CASE CurrentMenuType OF
                               0:
                                 CurrPage.PostedRcpts.FORM.Initialize(
                                   ToPurchHeader,ShowRevLinesOnly,
                                   CopyDocMgt.IsPurchFillExactCostRevLink(
                                     ToPurchHeader,CurrentMenuType,ToPurchHeader."Currency Code"),TRUE);
                               1:
                                 CurrPage.PostedInvoices.FORM.Initialize(
                                   ToPurchHeader,ShowRevLinesOnly,
                                   CopyDocMgt.IsPurchFillExactCostRevLink(
                                     ToPurchHeader,CurrentMenuType,ToPurchHeader."Currency Code"),TRUE);
                             END;
                               ShowRevLinesOnlyOnAfterValidat;
                           END;
                            }

    { 2   ;2   ;Field     ;
                CaptionML=[ENU=Return Original Quantity;
                           ESP=Devolver cantidad original];
                SourceExpr=OriginalQuantity }

    { 19  ;1   ;Group      }

    { 9   ;2   ;Group      }

    { 15  ;3   ;Field     ;
                Name=PostedReceiptsBtn;
                OptionCaptionML=[ENU=Posted Receipts,Posted Invoices,Posted Return Shipments,Posted Cr. Memos;
                                 ESP=Recepciones registradas,Facturas registradas,Env¡os devoluci¢n registrados,Abonos registrados];
                SourceExpr=CurrentMenuTypeOpt;
                CaptionClass=OptionCaptionServiceTier;
                OnValidate=BEGIN
                             IF CurrentMenuTypeOpt = CurrentMenuTypeOpt::x3 THEN
                               x3CurrentMenuTypeOptOnValidate;
                             IF CurrentMenuTypeOpt = CurrentMenuTypeOpt::x2 THEN
                               x2CurrentMenuTypeOptOnValidate;
                             IF CurrentMenuTypeOpt = CurrentMenuTypeOpt::x1 THEN
                               x1CurrentMenuTypeOptOnValidate;
                             IF CurrentMenuTypeOpt = CurrentMenuTypeOpt::x0 THEN
                               x0CurrentMenuTypeOptOnValidate;
                           END;
                            }

    { 16  ;3   ;Field     ;
                CaptionML=[ENU=&Posted Receipts;
                           ESP=&Hist¢rico albaranes];
                SourceExpr=STRSUBSTNO('(%1)',"No. of Pstd. Receipts");
                Editable=FALSE }

    { 14  ;3   ;Field     ;
                CaptionML=[ENU=Posted I&nvoices;
                           ESP=&Facturas contabilizadas];
                SourceExpr=STRSUBSTNO('(%1)',"No. of Pstd. Invoices");
                Editable=FALSE }

    { 41  ;3   ;Field     ;
                CaptionML=[ENU=Posted Ret&urn Shipments;
                           ESP=&Hist¢rico env¡os devoluci¢n];
                SourceExpr=STRSUBSTNO('(%1)',"No. of Pstd. Return Shipments");
                Editable=FALSE }

    { 11  ;3   ;Field     ;
                CaptionML=[ENU=Posted Cr. &Memos;
                           ESP=&Abonos contabilizados];
                SourceExpr=STRSUBSTNO('(%1)',"No. of Pstd. Credit Memos");
                Editable=FALSE }

    { 44  ;3   ;Field     ;
                Name=CurrentMenuTypeValue;
                SourceExpr=CurrentMenuType;
                Visible=FALSE }

    { 18  ;2   ;Group      }

    { 6   ;3   ;Part      ;
                Name=PostedInvoices;
                SubFormView=SORTING(Buy-from Vendor No.);
                SubFormLink=Buy-from Vendor No.=FIELD(No.);
                PagePartID=Page5857;
                Visible=PostedInvoicesVisible }

    { 7   ;3   ;Part      ;
                Name=PostedRcpts;
                SubFormView=SORTING(Buy-from Vendor No.);
                SubFormLink=Buy-from Vendor No.=FIELD(No.);
                PagePartID=Page5856;
                Visible=PostedRcptsVisible }

    { 1   ;3   ;Part      ;
                Name=PostedCrMemos;
                SubFormView=SORTING(Buy-from Vendor No.);
                SubFormLink=Buy-from Vendor No.=FIELD(No.);
                PagePartID=Page5859;
                Visible=PostedCrMemosVisible }

    { 5   ;3   ;Part      ;
                Name=PostedReturnShpts;
                SubFormView=SORTING(Buy-from Vendor No.);
                SubFormLink=Buy-from Vendor No.=FIELD(No.);
                PagePartID=Page5858;
                Visible=PostedReturnShptsVisible }

  }
  CODE
  {
    VAR
      ToPurchHeader@1002 : Record 38;
      CopyDocMgt@1010 : Codeunit 6620;
      OldMenuType@1001 : Integer;
      CurrentMenuType@1000 : Integer;
      LinesNotCopied@1008 : Integer;
      ShowRevLinesOnly@1004 : Boolean;
      MissingExCostRevLink@1006 : Boolean;
      Text000@1009 : TextConst 'ENU=The document line(s) with a G/L account where direct posting is not allowed have not been copied to the new document.;ESP=Las l¡neas del documento con una cuenta donde no est  permitido el registro directo no se han copiado en el nuevo documento.';
      OriginalQuantity@1003 : Boolean;
      Text001@1090 : TextConst 'ENU=&Posted Receipts;ESP=&Hist¢rico albaranes';
      Text002@1091 : TextConst 'ENU=Document Type Filter;ESP=Filtro de tipo de documento';
      "Posted ReceiptsVisible"@19072632 : Boolean INDATASET;
      "Posted InvoicesVisible"@19039346 : Boolean INDATASET;
      "Posted Return ShipmentsVisible"@19054199 : Boolean INDATASET;
      "Posted Credit MemosVisible"@19019796 : Boolean INDATASET;
      PostedRcptsVisible@19051516 : Boolean INDATASET;
      PostedInvoicesVisible@19029596 : Boolean INDATASET;
      PostedReturnShptsVisible@19040725 : Boolean INDATASET;
      PostedCrMemosVisible@19050108 : Boolean INDATASET;
      ShowRevLineEnable@19075015 : Boolean INDATASET;
      CurrentMenuTypeOpt@19019278 : 'x0,x1,x2,x3';

    PROCEDURE CopyLineToDoc@5();
    VAR
      FromPurchRcptLine@1001 : Record 121;
      FromPurchInvLine@1002 : Record 123;
      FromPurchCrMemoLine@1003 : Record 125;
      FromReturnShptLine@1004 : Record 6651;
    BEGIN
      ToPurchHeader.TESTFIELD(Status,ToPurchHeader.Status::Open);
      LinesNotCopied := 0;
      CASE CurrentMenuType OF
        0:
          BEGIN
            CurrPage.PostedRcpts.FORM.GetSelectedLine(FromPurchRcptLine);
            CopyDocMgt.SetProperties(FALSE,TRUE,FALSE,FALSE,TRUE,TRUE,OriginalQuantity);
            CopyDocMgt.CopyPurchRcptLinesToDoc(
              ToPurchHeader,FromPurchRcptLine,LinesNotCopied,MissingExCostRevLink);
          END;
        1:
          BEGIN
            CurrPage.PostedInvoices.FORM.GetSelectedLine(FromPurchInvLine);
            CopyDocMgt.SetProperties(FALSE,FALSE,FALSE,FALSE,TRUE,TRUE,OriginalQuantity);
            CopyDocMgt.CopyPurchInvLinesToDoc(
              ToPurchHeader,FromPurchInvLine,LinesNotCopied,MissingExCostRevLink);
          END;
        2:
          BEGIN
            CurrPage.PostedReturnShpts.FORM.GetSelectedLine(FromReturnShptLine);
            CopyDocMgt.SetProperties(FALSE,TRUE,FALSE,FALSE,TRUE,TRUE,OriginalQuantity);
            CopyDocMgt.CopyPurchReturnShptLinesToDoc(
              ToPurchHeader,FromReturnShptLine,LinesNotCopied,MissingExCostRevLink);
          END;
        3:
          BEGIN
            CurrPage.PostedCrMemos.FORM.GetSelectedLine(FromPurchCrMemoLine);
            CopyDocMgt.SetProperties(FALSE,FALSE,FALSE,FALSE,TRUE,TRUE,OriginalQuantity);
            CopyDocMgt.CopyPurchCrMemoLinesToDoc(
              ToPurchHeader,FromPurchCrMemoLine,LinesNotCopied,MissingExCostRevLink);
          END;
      END;
      CopyDocMgt.ShowMessageReapply(OriginalQuantity);
      CLEAR(CopyDocMgt);

      IF LinesNotCopied <> 0 THEN
        MESSAGE(Text000);
    END;

    LOCAL PROCEDURE ChangeSubMenu@1(NewMenuType@1000 : Integer);
    BEGIN
      IF OldMenuType <> NewMenuType THEN
        SetSubMenu(OldMenuType,FALSE);
      SetSubMenu(NewMenuType,TRUE);
      OldMenuType := NewMenuType;
      CurrentMenuType := NewMenuType;
    END;

    LOCAL PROCEDURE SetSubMenu@2(MenuType@1000 : Integer;Visible@1001 : Boolean);
    BEGIN
      IF ShowRevLinesOnly AND (MenuType IN [0,1]) THEN
        ShowRevLinesOnly :=
          CopyDocMgt.IsPurchFillExactCostRevLink(ToPurchHeader,MenuType,ToPurchHeader."Currency Code");
      ShowRevLineEnable := MenuType IN [0,1];
      CASE MenuType OF
        0:
          BEGIN
            PostedRcptsVisible := Visible;
            CurrPage.PostedRcpts.FORM.Initialize(
              ToPurchHeader,ShowRevLinesOnly,
              CopyDocMgt.IsPurchFillExactCostRevLink(
                ToPurchHeader,MenuType,ToPurchHeader."Currency Code"),Visible);
          END;
        1:
          BEGIN
            PostedInvoicesVisible := Visible;
            CurrPage.PostedInvoices.FORM.Initialize(
              ToPurchHeader,ShowRevLinesOnly,
              CopyDocMgt.IsPurchFillExactCostRevLink(
                ToPurchHeader,MenuType,ToPurchHeader."Currency Code"),Visible);
          END;
        2: PostedReturnShptsVisible := Visible;
        3: PostedCrMemosVisible := Visible;
      END;
    END;

    PROCEDURE SetToPurchHeader@4(NewToPurchHeader@1000 : Record 38);
    BEGIN
      ToPurchHeader := NewToPurchHeader;
    END;

    LOCAL PROCEDURE OptionCaptionServiceTier@1088() : Text[70];
    BEGIN
      IF ISSERVICETIER THEN
        EXIT(Text002);

      EXIT(Text001);
    END;

    LOCAL PROCEDURE ShowRevLinesOnlyOnAfterValidat@19064108();
    BEGIN
      CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE x0CurrentMenuTypeOptOnPush@19052720();
    BEGIN
      ChangeSubMenu(0);
      "Posted ReceiptsVisible" := TRUE;
      "Posted InvoicesVisible" := FALSE;
      "Posted Return ShipmentsVisible" := FALSE;
      "Posted Credit MemosVisible" := FALSE;
    END;

    LOCAL PROCEDURE x0CurrentMenuTypeOptOnValidate@19061499();
    BEGIN
      x0CurrentMenuTypeOptOnPush;
    END;

    LOCAL PROCEDURE x1CurrentMenuTypeOptOnPush@19049100();
    BEGIN
      ChangeSubMenu(1);
      "Posted ReceiptsVisible" := FALSE;
      "Posted InvoicesVisible" := TRUE;
      "Posted Return ShipmentsVisible" := FALSE;
      "Posted Credit MemosVisible" := FALSE;
    END;

    LOCAL PROCEDURE x1CurrentMenuTypeOptOnValidate@19066842();
    BEGIN
      x1CurrentMenuTypeOptOnPush;
    END;

    LOCAL PROCEDURE x2CurrentMenuTypeOptOnPush@19056045();
    BEGIN
      ChangeSubMenu(2);
      "Posted ReceiptsVisible" := FALSE;
      "Posted InvoicesVisible" := FALSE;
      "Posted Return ShipmentsVisible" := TRUE;
      "Posted Credit MemosVisible" := FALSE;
    END;

    LOCAL PROCEDURE x2CurrentMenuTypeOptOnValidate@19009894();
    BEGIN
      x2CurrentMenuTypeOptOnPush;
    END;

    LOCAL PROCEDURE x3CurrentMenuTypeOptOnPush@19036287();
    BEGIN
      ChangeSubMenu(3);
      "Posted ReceiptsVisible" := FALSE;
      "Posted InvoicesVisible" := FALSE;
      "Posted Return ShipmentsVisible" := FALSE;
      "Posted Credit MemosVisible" := TRUE;
    END;

    LOCAL PROCEDURE x3CurrentMenuTypeOptOnValidate@19044768();
    BEGIN
      x3CurrentMenuTypeOptOnPush;
    END;

    BEGIN
    END.
  }
}
