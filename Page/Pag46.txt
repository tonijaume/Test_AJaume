OBJECT Page 46 Sales Order Subform
{
  OBJECT-PROPERTIES
  {
    Date=11/12/10;
    Time=12:00:00;
    Version List=NAVW16.00.10,NAVES6.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Lines;
               ESP=L¡neas];
    MultipleNewLines=Yes;
    LinksAllowed=No;
    SourceTable=Table37;
    DelayedInsert=Yes;
    SourceTableView=WHERE(Document Type=FILTER(Order));
    PageType=ListPart;
    AutoSplitKey=Yes;
    OnAfterGetRecord=BEGIN
                       ShowShortcutDimCode(ShortcutDimCode);
                     END;

    OnNewRecord=BEGIN
                  Type := xRec.Type;
                  CLEAR(ShortcutDimCode);
                END;

    OnDeleteRecord=VAR
                     ReserveSalesLine@1000 : Codeunit 99000832;
                   BEGIN
                     IF (Quantity <> 0) AND ItemExists("No.") THEN BEGIN
                       COMMIT;
                       IF NOT ReserveSalesLine.DeleteLineConfirm(Rec) THEN
                         EXIT(FALSE);
                       ReserveSalesLine.DeleteLine(Rec);
                     END;
                   END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1907935204;1 ;ActionGroup;
                      CaptionML=[ENU=&Line;
                                 ESP=&L¡nea] }
      { 1900580804;2 ;ActionGroup;
                      CaptionML=[ENU=Item Availability by;
                                 ESP=Disponibilidad prod. por] }
      { 1904522204;3 ;Action    ;
                      CaptionML=[ENU=Period;
                                 ESP=Periodo];
                      OnAction=BEGIN
                                 //This functionality was copied from page #42. Unsupported part was commented. Please check it.
                                 {CurrPage.SalesLines.FORM.}
                                 _ItemAvailability(0);
                               END;
                                }
      { 1902056104;3 ;Action    ;
                      CaptionML=[ENU=Variant;
                                 ESP=Variante];
                      OnAction=BEGIN
                                 //This functionality was copied from page #42. Unsupported part was commented. Please check it.
                                 {CurrPage.SalesLines.FORM.}
                                 _ItemAvailability(1);
                               END;
                                }
      { 1900639404;3 ;Action    ;
                      CaptionML=[ENU=Location;
                                 ESP=Almac‚n];
                      OnAction=BEGIN
                                 //This functionality was copied from page #42. Unsupported part was commented. Please check it.
                                 {CurrPage.SalesLines.FORM.}
                                 _ItemAvailability(2);
                               END;
                                }
      { 1900186704;2 ;Action    ;
                      CaptionML=[ENU=Reservation Entries;
                                 ESP=Movs. reserva];
                      Image=ReservationLedger;
                      OnAction=BEGIN
                                 //This functionality was copied from page #42. Unsupported part was commented. Please check it.
                                 {CurrPage.SalesLines.FORM.}
                                 _ShowReservationEntries;
                               END;
                                }
      { 1905987604;2 ;Action    ;
                      ShortCutKey=May£s+Ctrl+I;
                      CaptionML=[ENU=Item &Tracking Lines;
                                 ESP=L¡ns. se&guim. prod.];
                      Image=ItemTrackingLines;
                      OnAction=BEGIN
                                 //This functionality was copied from page #42. Unsupported part was commented. Please check it.
                                 {CurrPage.SalesLines.FORM.}
                                 _OpenItemTrackingLines;
                               END;
                                }
      { 1901633104;2 ;Action    ;
                      CaptionML=[ENU=Select Item Substitution;
                                 ESP=Seleccionar prod. sustitutivo];
                      Image=SelectItemSubstitution;
                      OnAction=BEGIN
                                 //This functionality was copied from page #42. Unsupported part was commented. Please check it.
                                 {CurrPage.SalesLines.FORM.}
                                 _ShowItemSub;
                               END;
                                }
      { 1902085804;2 ;Action    ;
                      ShortCutKey=May£s+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 ESP=Dimensiones];
                      Image=Dimensions;
                      OnAction=BEGIN
                                 //This functionality was copied from page #42. Unsupported part was commented. Please check it.
                                 {CurrPage.SalesLines.FORM.}
                                 _ShowDimensions;
                               END;
                                }
      { 1903418704;2 ;Action    ;
                      CaptionML=[ENU=Co&mments;
                                 ESP=C&omentarios];
                      Image=ViewComments;
                      OnAction=BEGIN
                                 //This functionality was copied from page #42. Unsupported part was commented. Please check it.
                                 {CurrPage.SalesLines.FORM.}
                                 _ShowLineComments;
                               END;
                                }
      { 1907184504;2 ;Action    ;
                      CaptionML=[ENU=Item Charge &Assignment;
                                 ESP=Asi&gnaci¢n cargos prod.];
                      OnAction=BEGIN
                                 //This functionality was copied from page #42. Unsupported part was commented. Please check it.
                                 {CurrPage.SalesLines.FORM.}
                                 ItemChargeAssgnt;
                               END;
                                }
      { 1905403704;2 ;Action    ;
                      CaptionML=[ENU=Order &Promising;
                                 ESP=Comprom&iso entrega];
                      OnAction=BEGIN
                                 //This functionality was copied from page #42. Unsupported part was commented. Please check it.
                                 {CurrPage.SalesLines.FORM.}
                                 _OrderPromisingLine;
                               END;
                                }
      { 1906587504;1 ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 ESP=Acci&ones] }
      { 1905623604;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Get Price;
                                 ESP=Traer precio];
                      OnAction=BEGIN
                                 //This functionality was copied from page #42. Unsupported part was commented. Please check it.
                                 {CurrPage.SalesLines.FORM.}
                                 ShowPrices
                               END;
                                }
      { 1901770504;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Get Li&ne Discount;
                                 ESP=Traer descuento l¡&nea];
                      OnAction=BEGIN
                                 //This functionality was copied from page #42. Unsupported part was commented. Please check it.
                                 {CurrPage.SalesLines.FORM.}
                                 ShowLineDisc
                               END;
                                }
      { 1901741804;2 ;Action    ;
                      CaptionML=[ENU=E&xplode BOM;
                                 ESP=&Desplegar L.M.];
                      Image=ExplodeBOM;
                      OnAction=BEGIN
                                 //This functionality was copied from page #42. Unsupported part was commented. Please check it.
                                 {CurrPage.SalesLines.FORM.}
                                 ExplodeBOM;
                               END;
                                }
      { 1903099004;2 ;Action    ;
                      CaptionML=[ENU=Insert &Ext. Texts;
                                 ESP=Insertar &textos adicionales];
                      OnAction=BEGIN
                                 //This functionality was copied from page #42. Unsupported part was commented. Please check it.
                                 {CurrPage.SalesLines.FORM.}
                                 _InsertExtendedText(TRUE);
                               END;
                                }
      { 1905427504;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=&Reserve;
                                 ESP=&Reserva];
                      OnAction=BEGIN
                                 //This functionality was copied from page #42. Unsupported part was commented. Please check it.
                                 {CurrPage.SalesLines.FORM.}
                                 _ShowReservation;
                               END;
                                }
      { 1903502504;2 ;Action    ;
                      CaptionML=[ENU=Order &Tracking;
                                 ESP=&Seguimiento pedido];
                      OnAction=BEGIN
                                 //This functionality was copied from page #42. Unsupported part was commented. Please check it.
                                 {CurrPage.SalesLines.FORM.}
                                 ShowTracking;
                               END;
                                }
      { 1905968604;2 ;Action    ;
                      CaptionML=[ENU=Nonstoc&k Items;
                                 ESP=Prods. sin stoc&k];
                      OnAction=BEGIN
                                 //This functionality was copied from page #42. Unsupported part was commented. Please check it.
                                 {CurrPage.SalesLines.FORM.}
                                 ShowNonstockItems;
                               END;
                                }
      { 1905926804;1 ;ActionGroup;
                      CaptionML=[ENU=O&rder;
                                 ESP=&Pedido] }
      { 1903645604;2 ;ActionGroup;
                      CaptionML=[ENU=Dr&op Shipment;
                                 ESP=Env¡&o directo] }
      { 1907981104;3 ;Action    ;
                      CaptionML=[ENU=Purchase &Order;
                                 ESP=Pedido de &compra];
                      Image=Document;
                      OnAction=BEGIN
                                 //This functionality was copied from page #42. Unsupported part was commented. Please check it.
                                 {CurrPage.SalesLines.FORM.}
                                 OpenPurchOrderForm;
                               END;
                                }
      { 1903587004;2 ;ActionGroup;
                      CaptionML=[ENU=Speci&al Order;
                                 ESP=&Pedido especial] }
      { 1903192904;3 ;Action    ;
                      CaptionML=[ENU=Purchase &Order;
                                 ESP=Pedido de &compra];
                      Image=Document;
                      OnAction=BEGIN
                                 //This functionality was copied from page #42. Unsupported part was commented. Please check it.
                                 {CurrPage.SalesLines.FORM.}
                                 OpenSpecialPurchOrderForm;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                SourceExpr=Type;
                OnValidate=BEGIN
                             TypeOnAfterValidate;
                           END;
                            }

    { 4   ;2   ;Field     ;
                SourceExpr="No.";
                OnValidate=BEGIN
                             ShowShortcutDimCode(ShortcutDimCode);
                               NoOnAfterValidate;
                           END;
                            }

    { 68  ;2   ;Field     ;
                SourceExpr="Cross-Reference No.";
                Visible=FALSE;
                OnValidate=BEGIN
                             CrossReferenceNoOnAfterValidat;
                           END;

                OnLookup=BEGIN
                           CrossReferenceNoLookUp;
                           InsertExtendedText(FALSE);
                         END;
                          }

    { 1136;2   ;Field     ;
                SourceExpr="IC Partner Code";
                Visible=FALSE }

    { 130 ;2   ;Field     ;
                SourceExpr="IC Partner Ref. Type";
                Visible=FALSE }

    { 132 ;2   ;Field     ;
                SourceExpr="IC Partner Reference";
                Visible=FALSE }

    { 30  ;2   ;Field     ;
                SourceExpr="Variant Code";
                Visible=FALSE }

    { 104 ;2   ;Field     ;
                SourceExpr="Substitution Available";
                Visible=FALSE }

    { 74  ;2   ;Field     ;
                SourceExpr="Purchasing Code";
                Visible=FALSE }

    { 70  ;2   ;Field     ;
                SourceExpr=Nonstock;
                Visible=FALSE }

    { 78  ;2   ;Field     ;
                SourceExpr="VAT Prod. Posting Group";
                Visible=FALSE }

    { 6   ;2   ;Field     ;
                SourceExpr=Description }

    { 26  ;2   ;Field     ;
                SourceExpr="Drop Shipment";
                Visible=FALSE }

    { 106 ;2   ;Field     ;
                SourceExpr="Special Order";
                Visible=FALSE }

    { 110 ;2   ;Field     ;
                SourceExpr="Return Reason Code";
                Visible=FALSE }

    { 42  ;2   ;Field     ;
                SourceExpr="Location Code";
                OnValidate=BEGIN
                             LocationCodeOnAfterValidate;
                           END;
                            }

    { 114 ;2   ;Field     ;
                SourceExpr="Bin Code";
                Visible=FALSE }

    { 50  ;2   ;Field     ;
                SourceExpr=Reserve;
                Visible=FALSE;
                OnValidate=BEGIN
                             ReserveOnAfterValidate;
                           END;
                            }

    { 8   ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr=Quantity;
                OnValidate=BEGIN
                             QuantityOnAfterValidate;
                           END;
                            }

    { 48  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Reserved Quantity" }

    { 44  ;2   ;Field     ;
                SourceExpr="Unit of Measure Code";
                OnValidate=BEGIN
                             UnitofMeasureCodeOnAfterValida;
                           END;
                            }

    { 10  ;2   ;Field     ;
                SourceExpr="Unit of Measure";
                Visible=FALSE }

    { 38  ;2   ;Field     ;
                SourceExpr="Unit Cost (LCY)";
                Visible=FALSE }

    { 112 ;2   ;Field     ;
                Name=SalesPriceExist;
                CaptionML=[ENU=Sales Price Exists;
                           ESP=Existe precio venta];
                SourceExpr=PriceExists;
                Visible=FALSE;
                Editable=FALSE }

    { 12  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Unit Price" }

    { 76  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Line Amount";
                Visible=TRUE }

    { 116 ;2   ;Field     ;
                Name=SalesLineDiscExists;
                CaptionML=[ENU=Sales Line Disc. Exists;
                           ESP=Existe dto. l¡nea venta];
                SourceExpr=LineDiscExists;
                Visible=FALSE;
                Editable=FALSE }

    { 16  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Line Discount %" }

    { 52  ;2   ;Field     ;
                SourceExpr="Line Discount Amount";
                Visible=FALSE }

    { 136 ;2   ;Field     ;
                SourceExpr="Prepayment %";
                Visible=FALSE }

    { 138 ;2   ;Field     ;
                SourceExpr="Prepmt. Line Amount";
                Visible=FALSE }

    { 140 ;2   ;Field     ;
                SourceExpr="Prepmt. Amt. Inv.";
                Visible=FALSE }

    { 54  ;2   ;Field     ;
                SourceExpr="Allow Invoice Disc.";
                Visible=FALSE }

    { 90  ;2   ;Field     ;
                SourceExpr="Inv. Discount Amount";
                Visible=FALSE }

    { 18  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Qty. to Ship" }

    { 20  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Quantity Shipped" }

    { 22  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Qty. to Invoice" }

    { 24  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Quantity Invoiced" }

    { 142 ;2   ;Field     ;
                SourceExpr="Prepmt Amt to Deduct";
                Visible=FALSE }

    { 144 ;2   ;Field     ;
                SourceExpr="Prepmt Amt Deducted";
                Visible=FALSE }

    { 46  ;2   ;Field     ;
                SourceExpr="Allow Item Charge Assignment";
                Visible=FALSE }

    { 5800;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Qty. to Assign";
                OnDrillDown=BEGIN
                              CurrPage.SAVERECORD;
                              ShowItemChargeAssgnt;
                              UpdateForm(FALSE);
                            END;
                             }

    { 102 ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Qty. Assigned";
                OnDrillDown=BEGIN
                              CurrPage.SAVERECORD;
                              ShowItemChargeAssgnt;
                              CurrPage.UPDATE(FALSE);
                            END;
                             }

    { 82  ;2   ;Field     ;
                SourceExpr="Requested Delivery Date";
                Visible=FALSE }

    { 84  ;2   ;Field     ;
                SourceExpr="Promised Delivery Date";
                Visible=FALSE }

    { 86  ;2   ;Field     ;
                SourceExpr="Planned Delivery Date" }

    { 88  ;2   ;Field     ;
                SourceExpr="Planned Shipment Date" }

    { 100 ;2   ;Field     ;
                SourceExpr="Shipment Date";
                OnValidate=BEGIN
                             ShipmentDateOnAfterValidate;
                           END;
                            }

    { 92  ;2   ;Field     ;
                SourceExpr="Shipping Agent Code";
                Visible=FALSE }

    { 94  ;2   ;Field     ;
                SourceExpr="Shipping Agent Service Code";
                Visible=FALSE }

    { 96  ;2   ;Field     ;
                SourceExpr="Shipping Time";
                Visible=FALSE }

    { 134 ;2   ;Field     ;
                SourceExpr="Work Type Code";
                Visible=FALSE }

    { 58  ;2   ;Field     ;
                SourceExpr="Whse. Outstanding Qty. (Base)";
                Visible=FALSE }

    { 98  ;2   ;Field     ;
                SourceExpr="Outbound Whse. Handling Time";
                Visible=FALSE }

    { 62  ;2   ;Field     ;
                SourceExpr="Blanket Order No.";
                Visible=FALSE }

    { 66  ;2   ;Field     ;
                SourceExpr="Blanket Order Line No.";
                Visible=FALSE }

    { 14  ;2   ;Field     ;
                SourceExpr="FA Posting Date";
                Visible=FALSE }

    { 40  ;2   ;Field     ;
                SourceExpr="Depr. until FA Posting Date";
                Visible=FALSE }

    { 36  ;2   ;Field     ;
                SourceExpr="Depreciation Book Code";
                Visible=FALSE }

    { 80  ;2   ;Field     ;
                SourceExpr="Use Duplication List";
                Visible=FALSE }

    { 56  ;2   ;Field     ;
                SourceExpr="Duplicate in Depreciation Book";
                Visible=FALSE }

    { 108 ;2   ;Field     ;
                SourceExpr="Appl.-from Item Entry";
                Visible=FALSE }

    { 60  ;2   ;Field     ;
                SourceExpr="Appl.-to Item Entry";
                Visible=FALSE }

    { 32  ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 1 Code";
                Visible=FALSE }

    { 34  ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 2 Code";
                Visible=FALSE }

    { 300 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[3];
                CaptionClass='1,2,3';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(3,ShortcutDimCode[3]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(3,ShortcutDimCode[3]);
                         END;
                          }

    { 302 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[4];
                CaptionClass='1,2,4';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(4,ShortcutDimCode[4]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(4,ShortcutDimCode[4]);
                         END;
                          }

    { 304 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[5];
                CaptionClass='1,2,5';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(5,ShortcutDimCode[5]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(5,ShortcutDimCode[5]);
                         END;
                          }

    { 306 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[6];
                CaptionClass='1,2,6';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(6,ShortcutDimCode[6]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(6,ShortcutDimCode[6]);
                         END;
                          }

    { 308 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[7];
                CaptionClass='1,2,7';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(7,ShortcutDimCode[7]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(7,ShortcutDimCode[7]);
                         END;
                          }

    { 310 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[8];
                CaptionClass='1,2,8';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(8,ShortcutDimCode[8]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(8,ShortcutDimCode[8]);
                         END;
                          }

    { 146 ;2   ;Field     ;
                SourceExpr="Document No.";
                Visible=FALSE;
                Editable=FALSE }

    { 148 ;2   ;Field     ;
                SourceExpr="Line No.";
                Visible=FALSE;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      SalesHeader@1000 : Record 36;
      SalesPriceCalcMgt@1006 : Codeunit 7000;
      TransferExtendedText@1002 : Codeunit 378;
      SalesInfoPaneMgt@1001 : Codeunit 7171;
      ShortcutDimCode@1003 : ARRAY [8] OF Code[20];
      Text001@1004 : TextConst 'ENU=You can not use the Explode BOM function because a prepayment of the sales order has been invoiced.;ESP=No puede usar la funci¢n Desplegar L.M. puesto que se ha facturado un prepago del pedido de venta.';
      ItemPanelVisible@19014573 : Boolean INDATASET;

    PROCEDURE ApproveCalcInvDisc@1();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Sales-Disc. (Yes/No)",Rec);
    END;

    PROCEDURE CalcInvDisc@6();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Sales-Calc. Discount",Rec);
    END;

    PROCEDURE ExplodeBOM@3();
    BEGIN
      IF "Prepmt. Amt. Inv." <> 0 THEN
        ERROR(Text001);
      CODEUNIT.RUN(CODEUNIT::"Sales-Explode BOM",Rec);
    END;

    PROCEDURE OpenPurchOrderForm@4();
    VAR
      PurchHeader@1000 : Record 38;
      PurchOrder@1001 : Form 50;
    BEGIN
      TESTFIELD("Purchase Order No.");
      PurchHeader.SETRANGE("No.","Purchase Order No.");
      PurchOrder.SETTABLEVIEW(PurchHeader);
      PurchOrder.EDITABLE := FALSE;
      PurchOrder.RUN;
    END;

    PROCEDURE OpenSpecialPurchOrderForm@14();
    VAR
      PurchHeader@1001 : Record 38;
      PurchOrder@1000 : Form 50;
    BEGIN
      TESTFIELD("Special Order Purchase No.");
      PurchHeader.SETRANGE("No.","Special Order Purchase No.");
      PurchOrder.SETTABLEVIEW(PurchHeader);
      PurchOrder.EDITABLE := FALSE;
      PurchOrder.RUN;
    END;

    PROCEDURE _InsertExtendedText@19065029(Unconditionally@1000 : Boolean);
    BEGIN
      IF TransferExtendedText.SalesCheckIfAnyExtText(Rec,Unconditionally) THEN BEGIN
        CurrPage.SAVERECORD;
        TransferExtendedText.InsertSalesExtText(Rec);
      END;
      IF TransferExtendedText.MakeUpdate THEN
        UpdateForm(TRUE);
    END;

    PROCEDURE InsertExtendedText@5(Unconditionally@1000 : Boolean);
    BEGIN
      IF TransferExtendedText.SalesCheckIfAnyExtText(Rec,Unconditionally) THEN BEGIN
        CurrPage.SAVERECORD;
        TransferExtendedText.InsertSalesExtText(Rec);
      END;
      IF TransferExtendedText.MakeUpdate THEN
        UpdateForm(TRUE);
    END;

    PROCEDURE _ShowReservation@19004172();
    BEGIN
      FIND;
      Rec.ShowReservation;
    END;

    PROCEDURE ShowReservation@2();
    BEGIN
      FIND;
      Rec.ShowReservation;
    END;

    PROCEDURE _ItemAvailability@19008035(AvailabilityType@1000 : 'Date,Variant,Location,Bin');
    BEGIN
      Rec.ItemAvailability(AvailabilityType);
    END;

    PROCEDURE ItemAvailability@7(AvailabilityType@1000 : 'Date,Variant,Location,Bin');
    BEGIN
      Rec.ItemAvailability(AvailabilityType);
    END;

    PROCEDURE _ShowReservationEntries@19040018();
    BEGIN
      Rec.ShowReservationEntries(TRUE);
    END;

    PROCEDURE ShowReservationEntries@9();
    BEGIN
      Rec.ShowReservationEntries(TRUE);
    END;

    PROCEDURE _ShowDimensions@19020529();
    BEGIN
      Rec.ShowDimensions;
    END;

    PROCEDURE ShowDimensions@8();
    BEGIN
      Rec.ShowDimensions;
    END;

    PROCEDURE _ShowItemSub@19058753();
    BEGIN
      Rec.ShowItemSub;
    END;

    PROCEDURE ShowItemSub@10();
    BEGIN
      Rec.ShowItemSub;
    END;

    PROCEDURE ShowNonstockItems@11();
    BEGIN
      Rec.ShowNonstock;
    END;

    PROCEDURE _OpenItemTrackingLines@19054693();
    BEGIN
      Rec.OpenItemTrackingLines;
    END;

    PROCEDURE OpenItemTrackingLines@6500();
    BEGIN
      Rec.OpenItemTrackingLines;
    END;

    PROCEDURE ShowTracking@13();
    VAR
      TrackingForm@1000 : Form 99000822;
    BEGIN
      TrackingForm.SetSalesLine(Rec);
      TrackingForm.RUNMODAL;
    END;

    PROCEDURE ItemChargeAssgnt@5800();
    BEGIN
      Rec.ShowItemChargeAssgnt;
    END;

    PROCEDURE UpdateForm@12(SetSaveRecord@1000 : Boolean);
    BEGIN
      CurrPage.UPDATE(SetSaveRecord);
    END;

    PROCEDURE ShowPrices@15();
    BEGIN
      SalesHeader.GET("Document Type","Document No.");
      CLEAR(SalesPriceCalcMgt);
      SalesPriceCalcMgt.GetSalesLinePrice(SalesHeader,Rec);
    END;

    PROCEDURE ShowLineDisc@16();
    BEGIN
      SalesHeader.GET("Document Type","Document No.");
      CLEAR(SalesPriceCalcMgt);
      SalesPriceCalcMgt.GetSalesLineLineDisc(SalesHeader,Rec);
    END;

    PROCEDURE _OrderPromisingLine@19045687();
    VAR
      OrderPromisingLine@1000 : TEMPORARY Record 99000880;
    BEGIN
      OrderPromisingLine.SETRANGE("Source Type","Document Type");
      OrderPromisingLine.SETRANGE("Source ID","Document No.");
      OrderPromisingLine.SETRANGE("Source Line No.","Line No.");
      FORM.RUNMODAL(FORM::"Order Promising Lines",OrderPromisingLine);
    END;

    PROCEDURE OrderPromisingLine@17();
    VAR
      OrderPromisingLine@1000 : TEMPORARY Record 99000880;
    BEGIN
      OrderPromisingLine.SETRANGE("Source Type","Document Type");
      OrderPromisingLine.SETRANGE("Source ID","Document No.");
      OrderPromisingLine.SETRANGE("Source Line No.","Line No.");
      FORM.RUNMODAL(FORM::"Order Promising Lines",OrderPromisingLine);
    END;

    PROCEDURE _ShowLineComments@19074756();
    BEGIN
      Rec.ShowLineComments;
    END;

    PROCEDURE ShowLineComments@18();
    BEGIN
      Rec.ShowLineComments;
    END;

    LOCAL PROCEDURE TypeOnAfterValidate@19069045();
    BEGIN
      ItemPanelVisible := Type = Type::Item;
    END;

    LOCAL PROCEDURE NoOnAfterValidate@19066594();
    BEGIN
      InsertExtendedText(FALSE);
      IF (Type = Type::"Charge (Item)") AND ("No." <> xRec."No.") AND
         (xRec."No." <> '')
      THEN
        CurrPage.SAVERECORD;

      IF (Reserve = Reserve::Always) AND
         ("Outstanding Qty. (Base)" <> 0) AND
         ("No." <> xRec."No.")
      THEN BEGIN
        CurrPage.SAVERECORD;
        AutoReserve;
        CurrPage.UPDATE(FALSE);
      END;
    END;

    LOCAL PROCEDURE CrossReferenceNoOnAfterValidat@19048248();
    BEGIN
      InsertExtendedText(FALSE);
    END;

    LOCAL PROCEDURE LocationCodeOnAfterValidate@19034787();
    BEGIN
      IF (Reserve = Reserve::Always) AND
         ("Outstanding Qty. (Base)" <> 0) AND
         ("Location Code" <> xRec."Location Code")
      THEN BEGIN
        CurrPage.SAVERECORD;
        AutoReserve;
        CurrPage.UPDATE(FALSE);
      END;
    END;

    LOCAL PROCEDURE ReserveOnAfterValidate@19004502();
    BEGIN
      IF (Reserve = Reserve::Always) AND ("Outstanding Qty. (Base)" <> 0) THEN BEGIN
        CurrPage.SAVERECORD;
        AutoReserve;
        CurrPage.UPDATE(FALSE);
      END;
    END;

    LOCAL PROCEDURE QuantityOnAfterValidate@19032465();
    VAR
      UpdateIsDone@1001 : Boolean;
    BEGIN
      IF Type = Type::Item THEN
        CASE Reserve OF
          Reserve::Always:
            BEGIN
              CurrPage.SAVERECORD;
              AutoReserve;
              CurrPage.UPDATE(FALSE);
              UpdateIsDone := TRUE;
            END;
          Reserve::Optional:
            IF (Quantity < xRec.Quantity) AND (xRec.Quantity > 0) THEN BEGIN
              CurrPage.SAVERECORD;
              CurrPage.UPDATE(FALSE);
              UpdateIsDone := TRUE;
            END;
        END;

      IF (Type = Type::Item) AND
         (Quantity <> xRec.Quantity) AND
         NOT UpdateIsDone
      THEN
        CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE UnitofMeasureCodeOnAfterValida@19057939();
    BEGIN
      IF Reserve = Reserve::Always THEN BEGIN
        CurrPage.SAVERECORD;
        AutoReserve;
        CurrPage.UPDATE(FALSE);
      END;
    END;

    LOCAL PROCEDURE ShipmentDateOnAfterValidate@19068710();
    BEGIN
      IF (Reserve = Reserve::Always) AND
         ("Outstanding Qty. (Base)" <> 0) AND
         ("Shipment Date" <> xRec."Shipment Date")
      THEN BEGIN
        CurrPage.SAVERECORD;
        AutoReserve;
        CurrPage.UPDATE(FALSE);
      END;
    END;

    BEGIN
    END.
  }
}
