OBJECT Page 5229 Confidential Info. Overview
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVW16.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Confidential Info. Overview;
               ESP=Panorama info. confidencial];
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    LinksAllowed=No;
    SourceTable=Table5200;
    DataCaptionExpr='';
    PageType=Card;
    OnOpenPage=BEGIN
                 MATRIX_GenerateColumnCaptions(MATRIX_SetWanted::Initial);
               END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 77      ;1   ;Action    ;
                      CaptionML=[ENU=&Show Matrix;
                                 ESP=&Mostrar matriz];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ShowMatrix;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 MatrixForm@1064 : Form 9283;
                               BEGIN
                                 CLEAR(MatrixForm);
                                 MatrixForm.Load(MATRIX_CaptionSet,MatrixRecords,MATRIX_CurrSetLength);
                                 MatrixForm.RUNMODAL;
                               END;
                                }
      { 4       ;1   ;Action    ;
                      CaptionML=[ENU=Next Set;
                                 ESP=Conjunto siguiente];
                      ToolTipML=ENU=Next Set;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextSet;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MATRIX_GenerateColumnCaptions(MATRIX_SetWanted::Next);
                               END;
                                }
      { 3       ;1   ;Action    ;
                      CaptionML=[ENU=Previous Set;
                                 ESP=Conjunto anterior];
                      ToolTipML=ENU=Previous Set;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousSet;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MATRIX_GenerateColumnCaptions(MATRIX_SetWanted::Previous);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=[ENU=Matrix Options;
                           ESP=Opciones matriz] }

    { 2   ;2   ;Field     ;
                CaptionML=[ENU=Column Set;
                           ESP=Conjunto de columnas];
                SourceExpr=MATRIX_CaptionRange;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      MATRIX_MatrixRecord@1003 : Record 5215;
      MatrixRecords@1002 : ARRAY [32] OF Record 5215;
      MATRIX_CaptionSet@1066 : ARRAY [32] OF Text[1024];
      MATRIX_CaptionRange@1067 : Text[1024];
      MATRIX_FirstColumn@1068 : Text[1024];
      MATRIX_LastColumn@1069 : Text[1024];
      MATRIX_CaptionFieldNo@1070 : Integer;
      MATRIX_PrimKeyFirstCaptionInCu@1071 : Text[1024];
      ConfidentialInformation@1000 : Record 5216;
      HasInfo@1001 : Boolean;
      MATRIX_SetWanted@1004 : 'Initial,Previous,Same,Next';
      MATRIX_PKFirstRecInCurrSet@1005 : Text[100];
      MATRIX_CurrSetLength@1006 : Integer;

    PROCEDURE MATRIX_GenerateColumnCaptions@1096(SetWanted@1000 : 'Initial,Previous,Same,Next');
    VAR
      MatrixRecord2@1003 : Record 5215;
      CurrentMatrixRecordOrdinal@1001 : Integer;
      RecRef@1002 : RecordRef;
      MatrixMgt@1004 : Codeunit 9200;
    BEGIN
      CLEAR(MATRIX_CaptionSet);
      CLEAR(MatrixRecords);
      CurrentMatrixRecordOrdinal := 1;

      RecRef.GETTABLE(MATRIX_MatrixRecord);
      RecRef.SETTABLE(MATRIX_MatrixRecord);
      MatrixMgt.GenerateMatrixData(RecRef,SetWanted,ARRAYLEN(MatrixRecords),1,MATRIX_PKFirstRecInCurrSet,MATRIX_CaptionSet,
        MATRIX_CaptionRange,MATRIX_CurrSetLength);

      MATRIX_MatrixRecord.SETPOSITION(MATRIX_PKFirstRecInCurrSet);

      REPEAT
        MatrixRecords[CurrentMatrixRecordOrdinal].COPY(MATRIX_MatrixRecord);
        CurrentMatrixRecordOrdinal := CurrentMatrixRecordOrdinal + 1;
      UNTIL (CurrentMatrixRecordOrdinal > MATRIX_CurrSetLength) OR (MATRIX_MatrixRecord.NEXT <> 1);
    END;

    BEGIN
    END.
  }
}
