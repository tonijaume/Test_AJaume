OBJECT Page 664 Sales Prepayment Percentages
{
  OBJECT-PROPERTIES
  {
    Date=13/02/07;
    Time=12:00:00;
    Version List=NAVW15.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Sales Prepayment Percentages;
               ESP=Porcentajes prepago ventas];
    SourceTable=Table459;
    DataCaptionExpr=Caption;
    DelayedInsert=Yes;
    PageType=Worksheet;
    OnInit=BEGIN
             CodeFilterCtrlEnable := TRUE;
             SalesCodeFilterCtrlEnable := TRUE;
             "Sales CodeEditable" := TRUE;
           END;

    OnOpenPage=BEGIN
                 GetRecFilters;
                 SetRecFilters;
               END;

    OnAfterGetRecord=BEGIN
                       OnAfterGetCurrRecord;
                     END;

    OnNewRecord=BEGIN
                  OnAfterGetCurrRecord;
                END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 17  ;1   ;Group     ;
                CaptionML=[ENU=General;
                           ESP=General] }

    { 18  ;2   ;Field     ;
                CaptionML=[ENU=Sales Type Filter;
                           ESP=Filtro tipo ventas];
                OptionCaptionML=[ENU=Customer,Customer Price Group,All Customers,None;
                                 ESP=Cliente,Grupo precio cliente,Todos clientes,Ninguno];
                SourceExpr=SalesTypeFilter;
                OnValidate=BEGIN
                             SalesTypeFilterOnAfterValidate;
                           END;
                            }

    { 19  ;2   ;Field     ;
                Name=SalesCodeFilterCtrl;
                CaptionML=[ENU=Sales Code Filter;
                           ESP=Filtro c¢d. ventas];
                SourceExpr=SalesCodeFilter;
                Enabled=SalesCodeFilterCtrlEnable;
                OnValidate=BEGIN
                             SalesCodeFilterOnAfterValidate;
                           END;

                OnLookup=VAR
                           CustList@1005 : Form 22;
                           CustPriceGrList@1004 : Form 7;
                         BEGIN
                           IF SalesTypeFilter = SalesTypeFilter::"All Customers" THEN
                             EXIT;

                           CASE SalesTypeFilter OF
                             SalesTypeFilter::Customer:
                               BEGIN
                                 CustList.LOOKUPMODE := TRUE;
                                 IF CustList.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                   Text := CustList.GetSelectionFilter;
                                   EXIT(TRUE);
                                 END;
                               END;
                             SalesTypeFilter::"Customer Price Group":
                               BEGIN
                                 CustPriceGrList.LOOKUPMODE := TRUE;
                                 IF CustPriceGrList.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                   Text := CustPriceGrList.GetSelectionFilter;
                                   EXIT(TRUE);
                                 END;
                               END;
                           END;
                         END;
                          }

    { 24  ;2   ;Field     ;
                Name=CodeFilterCtrl;
                CaptionML=[ENU=Item No. Filter;
                           ESP=Filtro n§ prod.];
                SourceExpr=ItemNoFilter;
                Enabled=CodeFilterCtrlEnable;
                OnValidate=BEGIN
                             ItemNoFilterOnAfterValidate;
                           END;

                OnLookup=VAR
                           ItemList@1000 : Form 31;
                         BEGIN
                           ItemList.LOOKUPMODE := TRUE;
                           IF ItemList.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             Text := ItemList.GetSelectionFilter;
                             EXIT(TRUE);
                           END;
                         END;
                          }

    { 20  ;2   ;Field     ;
                CaptionML=[ENU=Starting Date Filter;
                           ESP=Filtro fecha inicio];
                SourceExpr=StartingDateFilter;
                OnValidate=VAR
                             ApplicationMgt@1000 : Codeunit 1;
                           BEGIN
                             IF ApplicationMgt.MakeDateFilter(StartingDateFilter) = 0 THEN;
                               StartingDateFilterOnAfterValid;
                           END;
                            }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                SourceExpr="Sales Type";
                OnValidate=BEGIN
                             SalesTypeOnAfterValidate;
                           END;
                            }

    { 4   ;2   ;Field     ;
                SourceExpr="Sales Code";
                Editable="Sales CodeEditable" }

    { 6   ;2   ;Field     ;
                SourceExpr="Item No." }

    { 8   ;2   ;Field     ;
                SourceExpr="Starting Date" }

    { 10  ;2   ;Field     ;
                SourceExpr="Ending Date" }

    { 12  ;2   ;Field     ;
                SourceExpr="Prepayment %" }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      SalesTypeFilter@1003 : 'Customer,Customer Price Group,All Customers,None';
      SalesCodeFilter@1002 : Text[250];
      ItemNoFilter@1001 : Text[250];
      StartingDateFilter@1000 : Text[30];
      "Sales CodeEditable"@19031640 : Boolean INDATASET;
      SalesCodeFilterCtrlEnable@19013164 : Boolean INDATASET;
      CodeFilterCtrlEnable@19026169 : Boolean INDATASET;

    LOCAL PROCEDURE SetEditable@3();
    BEGIN
      "Sales CodeEditable" := "Sales Type" <> "Sales Type"::"All Customers";
    END;

    PROCEDURE GetRecFilters@4();
    BEGIN
      IF HASFILTER THEN BEGIN
        IF GETFILTER("Sales Type") <> '' THEN
          SalesTypeFilter := "Sales Type"
        ELSE
          SalesTypeFilter := SalesTypeFilter::None;

        SalesCodeFilter := GETFILTER("Sales Code");
        ItemNoFilter := GETFILTER("Item No.");
        EVALUATE(StartingDateFilter,GETFILTER("Starting Date"));
      END;
    END;

    PROCEDURE SetRecFilters@5();
    BEGIN
      SalesCodeFilterCtrlEnable := TRUE;
      CodeFilterCtrlEnable := TRUE;

      IF SalesTypeFilter <> SalesTypeFilter::None THEN
        SETRANGE("Sales Type",SalesTypeFilter)
      ELSE
        SETRANGE("Sales Type");

      IF SalesTypeFilter IN [SalesTypeFilter::"All Customers",SalesTypeFilter::None] THEN BEGIN
        SalesCodeFilterCtrlEnable := FALSE;
        SalesCodeFilter := '';
      END;

      IF SalesCodeFilter <> '' THEN
        SETFILTER("Sales Code",SalesCodeFilter)
      ELSE
        SETRANGE("Sales Code");

      IF ItemNoFilter <> '' THEN
        SETFILTER("Item No.",ItemNoFilter)
      ELSE
        SETRANGE("Item No.");

      IF StartingDateFilter <> '' THEN
        SETFILTER("Starting Date",StartingDateFilter)
      ELSE
        SETRANGE("Starting Date");

      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE Caption@6() : Text[1024];
    VAR
      Item@1005 : Record 27;
      Cust@1004 : Record 18;
      CustPriceGr@1003 : Record 6;
      ItemNoCaption@1001 : Text[1024];
      SalesCodeCaption@1000 : Text[1024];
    BEGIN
      IF ItemNoFilter <> '' THEN BEGIN
        ItemNoCaption := STRSUBSTNO('%1 %2',Item.TABLECAPTION,ItemNoFilter);
        IF Item.GET(COPYSTR(ItemNoFilter,1,MAXSTRLEN(Item."No."))) THEN
          ItemNoCaption := ItemNoCaption + ' - ' + Item.Description;
      END;

      CASE SalesTypeFilter OF
        SalesTypeFilter::Customer:
          BEGIN
            SalesCodeCaption := STRSUBSTNO('%1 %2',Cust.TABLECAPTION,SalesCodeFilter);
            IF Cust.GET(COPYSTR(SalesCodeFilter,1,MAXSTRLEN(Cust."No."))) THEN
              SalesCodeCaption := SalesCodeCaption + ' - ' + Cust.Name;
          END;
        SalesTypeFilter::"Customer Price Group":
          BEGIN
            SalesCodeCaption := STRSUBSTNO('%1 %2',CustPriceGr.TABLECAPTION,SalesCodeFilter);
            IF CustPriceGr.GET(COPYSTR(SalesCodeFilter,1,MAXSTRLEN(CustPriceGr.Code))) THEN
              SalesCodeCaption := SalesCodeCaption + ' - ' + CustPriceGr.Description;
          END;
        SalesTypeFilter::"All Customers":
          SalesCodeCaption := FORMAT(SalesTypeFilter);
      END;

      EXIT(DELCHR(ItemNoCaption + ' ' + SalesCodeCaption,'<>'))
    END;

    LOCAL PROCEDURE SalesTypeOnAfterValidate@19046339();
    BEGIN
      SetEditable;
    END;

    LOCAL PROCEDURE SalesTypeFilterOnAfterValidate@19024044();
    BEGIN
      CurrPage.SAVERECORD;
      SalesCodeFilter := '';
      SetRecFilters;
    END;

    LOCAL PROCEDURE SalesCodeFilterOnAfterValidate@19067727();
    BEGIN
      CurrPage.SAVERECORD;
      SetRecFilters;
    END;

    LOCAL PROCEDURE StartingDateFilterOnAfterValid@19055286();
    BEGIN
      CurrPage.SAVERECORD;
      SetRecFilters;
    END;

    LOCAL PROCEDURE ItemNoFilterOnAfterValidate@19009808();
    BEGIN
      CurrPage.SAVERECORD;
      SetRecFilters;
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;
      SetEditable;
    END;

    BEGIN
    END.
  }
}
