OBJECT Page 8627 Migration Overview - Advanced
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVW16.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Migration Overview - Advanced;
               ESP=Info. gral. migraci¢n - Avanzada];
    SourceTable=Table8613;
    PageType=List;
    OnOpenPage=BEGIN
                 SETFILTER("Company Filter (Source Table)",COMPANYNAME);
               END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 25      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Migration;
                                 ESP=&Migraci¢n] }
      { 41      ;2   ;Action    ;
                      CaptionML=[ENU=Migration &Records;
                                 ESP=&Registros migraci¢n];
                      OnAction=BEGIN
                                 ShowMigrationRecords;
                               END;
                                }
      { 43      ;2   ;Action    ;
                      CaptionML=[ENU=Migration &Errors;
                                 ESP=&Errores migraci¢n];
                      OnAction=BEGIN
                                 ShowMigrationErrors
                               END;
                                }
      { 42      ;2   ;Action    ;
                      CaptionML=[ENU=&Database Records;
                                 ESP=Registros base de &datos];
                      OnAction=BEGIN
                                 ShowDatabaseRecords
                               END;
                                }
      { 27      ;2   ;Action    ;
                      CaptionML=[ENU=Migration &Fields;
                                 ESP=&Campos migraci¢n];
                      OnAction=BEGIN
                                 ShowMigrationFields;
                               END;
                                }
      { 23      ;2   ;Separator  }
      { 35      ;2   ;Action    ;
                      CaptionML=[ENU=&Apply Migration Data;
                                 ESP=&Aplicar datos migraci¢n];
                      OnAction=VAR
                                 MigrationTable@1006 : Record 8613;
                                 MigrationRecord@1001 : Record 8614;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(MigrationTable);
                                 IF MigrationTable.FIND('-') THEN
                                   REPEAT
                                     MigrationRecord.SETRANGE(TableID,MigrationTable.TableID);
                                     ApplyData(MigrationRecord,MigrationTable.TableID);
                                   UNTIL MigrationTable.NEXT = 0;
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 26      ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 ESP=Acci&ones] }
      { 29      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=E&xport to XML;
                                 ESP=E&xportar a XML];
                      OnAction=VAR
                                 MigrationTable@1006 : Record 8613;
                                 MigrationMgt@1005 : Codeunit 8611;
                                 CommonDialogMgt@1001 : Codeunit 412;
                                 DefaultFileType@1002 : ' ,Text,Excel,Word,Custom';
                                 Action@1003 : 'Open,Save';
                                 XMLDataFile@1004 : Text[1024];
                                 FileName@1007 : Text[1024];
                               BEGIN
                                 IF NOT ISSERVICETIER THEN BEGIN
                                   XMLDataFile := CommonDialogMgt.OpenFile(Text003,FileName,DefaultFileType::Custom,'*.xml|*.xml',Action::Save);
                                   IF XMLDataFile = '' THEN
                                     EXIT;
                                 END;

                                 CurrPage.SETSELECTIONFILTER(MigrationTable);
                                 MigrationTable.COPYFILTERS(Rec);

                                 MigrationMgt.SetAdvanced(TRUE);
                                 IF MigrationMgt.ExportSetupDataXML(XMLDataFile, MigrationTable) THEN
                                   MESSAGE(Text000);
                               END;
                                }
      { 30      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=I&mport from XML;
                                 ESP=I&mportar de XML];
                      OnAction=VAR
                                 MigrationMgt@1005 : Codeunit 8611;
                                 CommonDialogMgt@1001 : Codeunit 412;
                                 DefaultFileType@1004 : ' ,Text,Excel,Word,Custom';
                                 Action@1003 : 'Open,Save';
                                 XMLDataFile@1002 : Text[1024];
                                 FileName@1006 : Text[1024];
                               BEGIN
                                 XMLDataFile := CommonDialogMgt.OpenFile(Text004,FileName,DefaultFileType::Custom,'*.xml|*.xml',Action::Open);
                                 IF XMLDataFile = '' THEN
                                   EXIT;

                                 IF MigrationMgt.ImportSetupDataXML(XMLDataFile,FALSE,'') THEN
                                   MESSAGE(Text001);
                               END;
                                }
      { 8       ;2   ;Separator ;
                      CaptionML=[ENU=d;
                                 ESP=d] }
      { 9       ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Export to Excel;
                                 ESP=Exportar a Excel];
                      OnAction=VAR
                                 MigrationTable@1005 : Record 8613;
                                 MigrationMgt@1004 : Codeunit 8611;
                                 CommonDialogMgt@1003 : Codeunit 412;
                                 DefaultFileType@1002 : ' ,Text,Excel,Word,Custom';
                                 Action@1001 : 'Open,Save';
                                 ExcelFile@1000 : Text[1024];
                                 FileName@1007 : Text[1024];
                               BEGIN
                                 ExcelFile := CommonDialogMgt.OpenFile(Text002,FileName,DefaultFileType::Custom,'*.Xls|*.Xls',Action::Save);
                                 IF ExcelFile = '' THEN
                                   EXIT;

                                 CurrPage.SETSELECTIONFILTER(MigrationTable);
                                 MigrationTable.COPYFILTERS(Rec);

                                 IF MigrationMgt.ExportSetupDataToExcel(ExcelFile, MigrationTable) THEN
                                   MESSAGE(Text000);
                               END;
                                }
      { 12      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Import from Excel;
                                 ESP=Importar desde Excel];
                      OnAction=VAR
                                 MigrationMgt@1004 : Codeunit 8611;
                                 CommonDialogMgt@1003 : Codeunit 412;
                                 DefaultFileType@1002 : ' ,Text,Excel,Word,Custom';
                                 Action@1001 : 'Open,Save';
                                 XLSDataFile@1000 : Text[1024];
                                 FileName@1006 : Text[1024];
                               BEGIN
                                 XLSDataFile := CommonDialogMgt.OpenFile(Text004,FileName,DefaultFileType::Custom,'*.Xls|*.Xls',Action::Open);
                                 IF XLSDataFile = '' THEN
                                   EXIT;

                                 MigrationMgt.ImportFromExcel(XLSDataFile);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                SourceExpr=TableID;
                OnValidate=BEGIN
                             CALCFIELDS("Table Name");
                           END;
                            }

    { 4   ;2   ;Field     ;
                DrillDown=No;
                SourceExpr="Table Name" }

    { 13  ;2   ;Field     ;
                DrillDown=No;
                SourceExpr="Table Caption";
                Visible=FALSE }

    { 6   ;2   ;Field     ;
                DrillDown=Yes;
                SourceExpr="No. of Migration Records";
                Editable=FALSE;
                OnDrillDown=BEGIN
                              ShowMigrationRecords;
                            END;
                             }

    { 31  ;2   ;Field     ;
                DrillDown=Yes;
                SourceExpr="No. of Migration Errors";
                Editable=FALSE;
                OnDrillDown=BEGIN
                              ShowMigrationErrors
                            END;
                             }

    { 10  ;2   ;Field     ;
                DrillDown=Yes;
                SourceExpr="No. of Database Records";
                OnDrillDown=BEGIN
                              ShowDatabaseRecords
                            END;
                             }

    { 37  ;2   ;Field     ;
                SourceExpr=Status }

    { 33  ;2   ;Field     ;
                Lookup=No;
                DrillDown=No;
                SourceExpr="Fields Included";
                Visible=FALSE;
                OnAssistEdit=BEGIN
                               ShowMigrationFields;
                             END;
                              }

    { 39  ;2   ;Field     ;
                SourceExpr="Form ID" }

    { 18  ;2   ;Field     ;
                SourceExpr=Comments }

    { 14  ;2   ;Field     ;
                SourceExpr="Imported Date Time";
                Editable=FALSE }

    { 16  ;2   ;Field     ;
                SourceExpr="Exported Date Time";
                Visible=FALSE;
                Editable=FALSE }

    { 20  ;2   ;Field     ;
                SourceExpr="Company Type";
                Visible=FALSE;
                Editable=FALSE }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Setup Data is successfully exported.;ESP=Los datos de configuraci¢n se exportaron correctamente.';
      Text001@1001 : TextConst 'ENU=Setup Data is successfully imported.;ESP=Los datos de configuraci¢n se importaron correctamente.';
      Text002@1002 : TextConst 'ENU=Save as Excel Workbook;ESP=Guardar como libro de Excel';
      Text003@1003 : TextConst 'ENU=Save as XML;ESP=Guardar como XML';
      Text004@1004 : TextConst 'ENU=Import Setup Data;ESP=Importar datos configuraci¢n';
      MigratedTables@1007 : Integer;
      TotalNoOfTables@1008 : Integer;
      Window@1009 : Dialog;
      Text005@1013 : TextConst 'ENU=Applying Data...\;ESP=Aplicando datos...\';
      Text006@1012 : TextConst 'ENU=Table #1######################\;ESP=Tabla #1######################\';
      Text007@1011 : TextConst 'ENU=@3################################;ESP=@3################################';
      MatrixColumnCaptions@1010 : ARRAY [100] OF Text[100];

    PROCEDURE ApplyData@1(VAR MigrationRecord@1000 : Record 8614;TableNo@1006 : Integer);
    VAR
      MigrationTable@1005 : Record 8613;
      DataTemplateHeader@1004 : Record 8618;
      MigrationMgt@1003 : Codeunit 8611;
      TemplateMgt@1002 : Codeunit 8612;
      RecRef@1001 : RecordRef;
    BEGIN
      MigrationTable.GET(TableNo);
      MigrationTable.CALCFIELDS("Table Name");
      IF MigrationRecord.FIND('-') THEN BEGIN
        RecRef.OPEN(MigrationRecord.TableID);
        InitialiseProgressWindow(MigrationRecord.COUNTAPPROX,Text005);
        REPEAT
          UpdateProgressWindow(MigrationTable."Table Name");
          IF MigrationMgt.RUN(MigrationRecord) THEN BEGIN
            IF "Data Template" <> '' THEN
              IF DataTemplateHeader.GET("Data Template") THEN
                MergeWithTemplate(MigrationRecord,DataTemplateHeader);
            MigrationRecord.DELETE(TRUE);
            COMMIT;
          END ELSE BEGIN
            IF GETLASTERRORTEXT <> '' THEN BEGIN
              MigrationMgt.RecordError(MigrationRecord,MigrationMgt.GetValidationFieldID,COPYSTR(GETLASTERRORTEXT,1,250));
              CLEARLASTERROR;
              COMMIT;
            END;
          END;
        UNTIL MigrationRecord.NEXT = 0;
        Window.CLOSE;
      END;
    END;

    PROCEDURE MergeWithTemplate@2(MigrationRecord@1000 : Record 8614;DataTemplateHeader@1001 : Record 8618);
    VAR
      MigrationData@1006 : Record 8615;
      MigrationMgt@1009 : Codeunit 8611;
      TemplateMgt@1003 : Codeunit 8612;
      RecRef@1002 : RecordRef;
      RecRef1@1008 : RecordRef;
      KeyRef@1004 : KeyRef;
      FieldRef@1007 : FieldRef;
      KeyFieldCount@1005 : Integer;
    BEGIN
      RecRef.OPEN(MigrationRecord.TableID);

      KeyRef := RecRef.KEYINDEX(1);
      FOR KeyFieldCount := 1 TO KeyRef.FIELDCOUNT DO BEGIN
        FieldRef := KeyRef.FIELDINDEX(KeyFieldCount);
        MigrationData.GET(MigrationRecord.TableID,MigrationRecord."No.",FieldRef.NUMBER);
        MigrationMgt.EvaluateValue(FieldRef,MigrationData.Value);
      END;

      RecRef1 := RecRef.DUPLICATE;

      IF RecRef1.FIND('=') THEN BEGIN
        RecRef := RecRef1;
        TemplateMgt.UpdateRecord(DataTemplateHeader,RecRef);
      END;
    END;

    LOCAL PROCEDURE InitialiseProgressWindow@21(Count@1000 : Integer;MigrationText@1001 : Text[1024]);
    BEGIN
      MigratedTables := 0;
      TotalNoOfTables := Count;

      Window.OPEN(MigrationText + Text006 + Text007);
    END;

    LOCAL PROCEDURE UpdateProgressWindow@19(TableCaption@1000 : Text[250]);
    BEGIN
      MigratedTables := MigratedTables + 1;

      Window.UPDATE(1,TableCaption);
      Window.UPDATE(3,ROUND(MigratedTables / TotalNoOfTables * 10000,1));
    END;

    PROCEDURE ShowMigrationRecords@5();
    VAR
      MigrationRecord@1003 : Record 8614;
      MigrationRecords@1002 : Form 8626;
      MigrationTableField@1001 : Record 8616;
      i@1000 : Integer;
    BEGIN
      MigrationTableField.SETRANGE(TableID,TableID);
      MigrationTableField.SETRANGE(Include,TRUE);
      i := 1;
      CLEAR(MatrixColumnCaptions);
      IF MigrationTableField.FIND('-') THEN
        REPEAT
          MigrationTableField.CALCFIELDS("Field Name");
          MatrixColumnCaptions[i] := MigrationTableField."Field Name";
          i := i + 1;
        UNTIL MigrationTableField.NEXT = 0;

      CALCFIELDS("Table Caption");
      CLEAR(MigrationRecords);
      MigrationRecord.SETRANGE(TableID,TableID);
      MigrationRecord.SETRANGE(Invalid,FALSE);
      MigrationRecords.SETTABLEVIEW(MigrationRecord);
      MigrationRecords.LOOKUPMODE(TRUE);
      MigrationRecords.Load(MatrixColumnCaptions,"Table Caption",TableID);
      MigrationRecords.RUN;
    END;

    PROCEDURE ShowMigrationErrors@6();
    VAR
      MigrationRecord@1003 : Record 8614;
      MigrationRecords@1002 : Form 8626;
      MigrationTableField@1001 : Record 8616;
      i@1000 : Integer;
    BEGIN
      MigrationTableField.SETRANGE(TableID,TableID);
      MigrationTableField.SETRANGE(Include,TRUE);
      i := 1;
      CLEAR(MatrixColumnCaptions);
      IF MigrationTableField.FIND('-') THEN
        REPEAT
          MigrationTableField.CALCFIELDS("Field Name");
          MatrixColumnCaptions[i] := MigrationTableField."Field Name";
          i := i + 1;
        UNTIL MigrationTableField.NEXT = 0;

      CALCFIELDS("Table Caption");
      CLEAR(MigrationRecords);
      MigrationRecord.SETRANGE(TableID,TableID);
      MigrationRecord.SETRANGE(Invalid,TRUE);
      MigrationRecords.SETTABLEVIEW(MigrationRecord);
      MigrationRecords.LOOKUPMODE(TRUE);
      MigrationRecords.Load(MatrixColumnCaptions,"Table Caption",TableID);
      MigrationRecords.RUN;
    END;

    PROCEDURE ShowDatabaseRecords@4();
    BEGIN
      FORM.RUN("Form ID");
    END;

    PROCEDURE ShowMigrationFields@3();
    VAR
      MigrationFields@1001 : Form 8624;
      MigrationTableField@1000 : Record 8616;
    BEGIN
      MigrationTableField.SETRANGE(TableID,TableID);
      MigrationFields.SETTABLEVIEW(MigrationTableField);
      MigrationFields.LOOKUPMODE := TRUE;
      MigrationFields.RUNMODAL;
      CALCFIELDS("Fields Included");
    END;

    BEGIN
    END.
  }
}
