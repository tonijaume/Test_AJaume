OBJECT Page 5759 Posted Transfer Receipt Lines
{
  OBJECT-PROPERTIES
  {
    Date=26/07/02;
    Time=12:00:00;
    Version List=NAVW13.60;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[ENU=Posted Transfer Receipt Lines;
               ESP=L¡ns. hist. recep. transfer.];
    SourceTable=Table5747;
    PageType=List;
    OnAfterGetRecord=BEGIN
                       "Document No.HideValue" := FALSE;
                       DocumentNoOnFormat;
                     END;

    OnQueryClosePage=BEGIN
                       IF CloseAction = ACTION::LookupOK THEN
                           LookupOKOnPush;
                     END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 17      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Line;
                                 ESP=&L¡nea] }
      { 19      ;2   ;Action    ;
                      ShortCutKey=May£s+F7;
                      CaptionML=[ENU=Show Document;
                                 ESP=Muestra documento];
                      Image=View;
                      OnAction=VAR
                                 TransRcptHeader@1001 : Record 5746;
                               BEGIN
                                 TransRcptHeader.GET("Document No.");
                                 FORM.RUN(FORM::"Posted Transfer Receipt",TransRcptHeader);
                               END;
                                }
      { 20      ;2   ;Action    ;
                      ShortCutKey=May£s+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 ESP=Dimensiones];
                      RunObject=Page 547;
                      RunFormLink=Table ID=CONST(5747),
                                  Document No.=FIELD(Document No.),
                                  Line No.=FIELD(Line No.);
                      Image=Dimensions }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                SourceExpr="Document No.";
                HideValue="Document No.HideValue" }

    { 4   ;2   ;Field     ;
                SourceExpr="Item No." }

    { 6   ;2   ;Field     ;
                SourceExpr=Description }

    { 8   ;2   ;Field     ;
                SourceExpr=Quantity }

    { 10  ;2   ;Field     ;
                SourceExpr="Unit of Measure" }

    { 12  ;2   ;Field     ;
                SourceExpr="Receipt Date" }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      FromTransRcptLine@1000 : Record 5747;
      TempTransRcptLine@1001 : TEMPORARY Record 5747;
      ItemChargeAssgntPurch@1002 : Record 5805;
      AssignItemChargePurch@1003 : Codeunit 5805;
      UnitCost@1004 : Decimal;
      CreateCostDistrib@1005 : Boolean;
      "Document No.HideValue"@19020538 : Boolean INDATASET;
      "Document No.Emphasize"@19037394 : Boolean INDATASET;

    PROCEDURE Initialize@1(NewItemChargeAssgntPurch@1000 : Record 5805;NewUnitCost@1001 : Decimal);
    BEGIN
      ItemChargeAssgntPurch := NewItemChargeAssgntPurch;
      UnitCost := NewUnitCost;
      CreateCostDistrib := TRUE;
    END;

    LOCAL PROCEDURE IsFirstLine@2(DocNo@1000 : Code[20];LineNo@1001 : Integer) : Boolean;
    VAR
      TransRcptLine@1002 : Record 5747;
    BEGIN
      TempTransRcptLine.RESET;
      TempTransRcptLine.COPYFILTERS(Rec);
      TempTransRcptLine.SETRANGE("Document No.",DocNo);
      IF NOT TempTransRcptLine.FIND('-') THEN BEGIN
        TransRcptLine.COPYFILTERS(Rec);
        TransRcptLine.SETRANGE("Document No.",DocNo);
        TransRcptLine.FIND('-');
        TempTransRcptLine := TransRcptLine;
        TempTransRcptLine.INSERT;
      END;
      IF TempTransRcptLine."Line No." = LineNo THEN
        EXIT(TRUE);
    END;

    LOCAL PROCEDURE LookupOKOnPush@19031339();
    BEGIN
      IF CreateCostDistrib THEN BEGIN
        FromTransRcptLine.COPY(Rec);
        CurrPage.SETSELECTIONFILTER(FromTransRcptLine);
        IF FromTransRcptLine.FIND('-') THEN BEGIN
          ItemChargeAssgntPurch."Unit Cost" := UnitCost;
          AssignItemChargePurch.CreateTransferRcptChargeAssgnt(FromTransRcptLine,ItemChargeAssgntPurch);
        END;
      END;
    END;

    LOCAL PROCEDURE DocumentNoOnFormat@19001080();
    BEGIN
      IF IsFirstLine("Document No.","Line No.") THEN
        "Document No.Emphasize" := TRUE
      ELSE
        "Document No.HideValue" := TRUE;
    END;

    BEGIN
    END.
  }
}
