OBJECT Page 5146 Assign Activity
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVW16.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Assign Activity;
               ESP=Asignar actividad];
    InsertAllowed=No;
    DeleteAllowed=No;
    LinksAllowed=No;
    SourceTable=Table5080;
    DataCaptionExpr=Caption;
    PageType=NavigatePage;
    OnInit=BEGIN
             NextEnable := TRUE;
             "Team CodeEditable" := TRUE;
             "Salesperson CodeEditable" := TRUE;
             WizardCampaignDescriptionEdita := TRUE;
             "Wizard Contact NameEditable" := TRUE;
             "Team Meeting OrganizerEditable" := TRUE;
           END;

    OnOpenPage=BEGIN
                 FormWidth := CancelXPos + CancelWidth + 220;
                 FrmXPos := ROUND((FrmWidth - FormWidth) / 2,1) + FrmXPos;
                 FrmYPos := 3000;
                 FrmHeight := CancelYPos + CancelHeight + 220;
                 FrmWidth := FormWidth;

                 "Wizard Contact NameEditable" := FALSE;
                 WizardCampaignDescriptionEdita := FALSE;

                 IF SalesPurchPerson.GET(GETFILTER("Salesperson Code")) OR
                    Team.GET(GETFILTER("Team Code"))
                 THEN BEGIN
                   "Salesperson CodeEditable" := FALSE;
                   "Team CodeEditable" := FALSE;
                 END;

                 IF SalesPurchPerson.GET(GETFILTER("Salesperson Code")) OR
                    ("Salesperson Code" <> '') OR
                    ("Activity Code" = '')
                 THEN
                   "Team Meeting OrganizerEditable" := FALSE;

                 IF Campaign.GET(GETFILTER("Campaign No.")) THEN
                   "Campaign Description" := Campaign.Description;


                 IF SegHeader.GET(GETFILTER("Segment No.")) THEN
                   "Segment Description" := SegHeader.Description;

                 ShowStep(TRUE);
               END;

    OnAfterGetRecord=BEGIN
                       WizardContactNameOnFormat(FORMAT("Wizard Contact Name"));
                     END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 3       ;1   ;Action    ;
                      Name=Back;
                      CaptionML=[ENU=< &Back;
                                 ESP=< At&r s];
                      Enabled=BackEnable;
                      InFooterBar=Yes;
                      OnAction=BEGIN
                                 ShowStep(FALSE);
                                 PerformPrevWizardStatus2;
                                 ShowStep(TRUE);
                                 CurrPage.UPDATE(TRUE);
                               END;
                                }
      { 4       ;1   ;Action    ;
                      Name=Next;
                      CaptionML=[ENU=&Next >;
                                 ESP=&Siguiente >];
                      Enabled=NextEnable;
                      InFooterBar=Yes;
                      OnAction=BEGIN
                                 CheckStatus2;
                                 ShowStep(FALSE);
                                 PerformNextWizardStatus2;
                                 ShowStep(TRUE);
                                 CurrPage.UPDATE(TRUE);
                               END;
                                }
      { 10      ;1   ;Action    ;
                      Name=Finish;
                      CaptionML=[ENU=&Finish;
                                 ESP=&Terminar];
                      Enabled=FinishEnable;
                      InFooterBar=Yes;
                      OnAction=BEGIN
                                 CheckStatus2;
                                 FinishWizard2;
                                 CurrPage.CLOSE;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=Step1;
                Visible=Step1Visible;
                InstructionalTextML=[ENU=This wizard helps you to assign activities. The Meeting Organizer field should be filled in if this activity is assigned to a team and contains a To-do of type Meeting.;
                                     ESP=Este asistente le ayuda a asignar actividades. Complete el campo Organizador de la reuni¢n si la actividad se asign¢ a un grupo y contiene una tarea de tipo Reuni¢n.] }

    { 23  ;2   ;Field     ;
                CaptionML=[ENU=What is the activity code?;
                           ESP="¨Cu l es el c¢d. actividad? "];
                SourceExpr="Activity Code";
                TableRelation=Activity.Code;
                OnValidate=BEGIN
                             IF NOT Activity.IncludesMeeting("Activity Code") THEN BEGIN
                               "Team Meeting OrganizerEditable" := FALSE;
                               "Team Meeting Organizer" := ''
                             END ELSE IF "Team Code" <> '' THEN BEGIN
                                 "Team Meeting OrganizerEditable" := TRUE;
                                 "Team Meeting Organizer" := ''
                               END;
                           END;
                            }

    { 9   ;2   ;Field     ;
                CaptionML=[ENU=What is the activity start date?;
                           ESP=¨Cu l es la fecha de inicio de la actividad?];
                SourceExpr=Date }

    { 15  ;2   ;Field     ;
                Lookup=No;
                CaptionML=[ENU=Which contact is involved in this activity?;
                           ESP=¨Qu‚ contactos est n involucrados en esta actividad?];
                SourceExpr="Wizard Contact Name";
                TableRelation=Contact;
                Editable="Wizard Contact NameEditable";
                OnAssistEdit=VAR
                               Cont@1102601001 : Record 5050;
                             BEGIN
                               IF ("Wizard Contact Name" = '') AND NOT SegHeader.GET(GETFILTER("Segment No.")) THEN BEGIN
                                 IF Cont.GET("Contact No.") THEN ;
                                 IF FORM.RUNMODAL(0,Cont) = ACTION::LookupOK THEN BEGIN
                                   VALIDATE("Contact No.",Cont."No.");
                                   "Wizard Contact Name" := Cont.Name;
                                 END;
                               END;
                             END;
                              }

    { 16  ;2   ;Field     ;
                CaptionML=[ENU=Who is the salesperson responsible?;
                           ESP=¨Qui‚n es el vendedor responsable?];
                SourceExpr="Salesperson Code";
                Editable="Salesperson CodeEditable";
                OnValidate=BEGIN
                             IF SalesPurchPerson.GET("Salesperson Code") THEN BEGIN
                               "Team Meeting OrganizerEditable" := FALSE;
                               "Team Meeting Organizer" := '';
                               "Team Code" := ''
                             END ELSE
                               IF Activity.IncludesMeeting("Activity Code") OR
                                  ("Activity Code" = '') AND
                                  ("Team Code" <> '')
                               THEN
                                 "Team Meeting OrganizerEditable" := TRUE
                           END;
                            }

    { 18  ;2   ;Field     ;
                CaptionML=[ENU=Which team is involved in this activity?;
                           ESP=¨Qu‚ equipo est  involucrado en esta actividad?];
                SourceExpr="Team Code";
                Editable="Team CodeEditable";
                OnValidate=BEGIN
                             IF Team.GET("Team Code") THEN BEGIN
                               IF Activity.IncludesMeeting("Activity Code") THEN
                                 "Team Meeting OrganizerEditable" := TRUE;
                               "Salesperson Code" := '';
                             END;
                             IF "Team Code" = '' THEN BEGIN
                               "Team Meeting OrganizerEditable" := FALSE;
                               "Team Meeting Organizer" := ''
                             END;
                           END;
                            }

    { 26  ;2   ;Field     ;
                CaptionML=[ENU=Who is the meeting organizer?;
                           ESP=¨Qui‚n organiza la reuni¢n?];
                SourceExpr="Team Meeting Organizer";
                Editable="Team Meeting OrganizerEditable";
                OnValidate=VAR
                             SalesPurchPerson@1000 : Record 13;
                           BEGIN
                             SalesPurchPerson.GET("Team Meeting Organizer");
                           END;

                OnLookup=VAR
                           Salesperson@1000 : Record 13;
                           SalesPurchPerson@1001 : Form 14;
                         BEGIN
                           SalesPurchPerson.LOOKUPMODE := TRUE;
                           IF SalesPurchPerson.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             SalesPurchPerson.GETRECORD(Salesperson);
                             IF "Team Meeting OrganizerEditable" THEN
                               "Team Meeting Organizer" := Salesperson.Code
                           END;
                         END;
                          }

    { 5   ;1   ;Group     ;
                Name=Step2;
                Visible=Step2Visible;
                InstructionalTextML=[ENU=You can now specify optional detailed information regarding the To-dos.;
                                     ESP=Ahora puede especificar informaci¢n detallada adicional relativa a las tareas.] }

    { 13  ;2   ;Field     ;
                Lookup=No;
                CaptionML=[ENU=Specify a campaign here;
                           ESP=Especifique aqu¡ una campa¤a:];
                SourceExpr="Wizard Campaign Description";
                TableRelation=Campaign;
                Editable=WizardCampaignDescriptionEdita;
                OnAssistEdit=VAR
                               Campaign@1102601001 : Record 5071;
                             BEGIN
                               IF NOT Campaign.GET(GETFILTER("Campaign No.")) THEN BEGIN
                                 IF Campaign.GET("Campaign No.") THEN ;
                                 IF FORM.RUNMODAL(0,Campaign) = ACTION::LookupOK THEN BEGIN
                                   VALIDATE("Campaign No.",Campaign."No.");
                                   "Wizard Campaign Description" := Campaign.Description;
                                 END;
                               END;
                             END;
                              }

    { 21  ;2   ;Field     ;
                Lookup=No;
                CaptionML=[ENU=Create to-dos for segment;
                           ESP=Crear tareas para el segmento];
                SourceExpr="Segment Description";
                TableRelation="Segment Header";
                Editable=FALSE;
                OnAssistEdit=VAR
                               Segment@1102601000 : Record 5076;
                             BEGIN
                               IF Segment.GET("Segment No.") THEN ;
                               IF FORM.RUNMODAL(0,Segment) = ACTION::LookupOK THEN BEGIN
                                 IF "Segment DescriptionEditable" THEN BEGIN
                                   VALIDATE("Segment No.",Segment."No.");
                                   "Segment Description" := Segment.Description;
                                 END;
                               END;
                             END;
                              }

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=untitled;ESP=SinTitulo';
      Cont@1005 : Record 5050;
      SalesPurchPerson@1006 : Record 13;
      Team@1007 : Record 5083;
      Campaign@1008 : Record 5071;
      SegHeader@1009 : Record 5076;
      Activity@1001 : Record 5081;
      FormWidth@1012 : Integer;
      Text005@1013 : TextConst 'ENU=(Multiple);ESP=(Multiple)';
      "Segment DescriptionEditable"@19059431 : Boolean INDATASET;
      "Team Meeting OrganizerEditable"@19012630 : Boolean INDATASET;
      "Wizard Contact NameEditable"@19024232 : Boolean INDATASET;
      WizardCampaignDescriptionEdita@19073396 : Boolean INDATASET;
      "Salesperson CodeEditable"@19071610 : Boolean INDATASET;
      "Team CodeEditable"@19004084 : Boolean INDATASET;
      CancelXPos@19007686 : Integer;
      CancelYPos@19003745 : Integer;
      CancelHeight@19054177 : Integer;
      CancelWidth@19035161 : Integer;
      FrmXPos@19006598 : Integer;
      FrmYPos@19016646 : Integer;
      FrmHeight@19058551 : Integer;
      FrmWidth@19057698 : Integer;
      Step1Visible@19067551 : Boolean INDATASET;
      Step2Visible@19067406 : Boolean INDATASET;
      FinishEnable@19079943 : Boolean INDATASET;
      BackEnable@19029006 : Boolean INDATASET;
      NextEnable@19007695 : Boolean INDATASET;

    LOCAL PROCEDURE ShowStep@2(Visible@1001 : Boolean);
    BEGIN
      CASE "Wizard Step" OF
        "Wizard Step"::"1":
          BEGIN
            Step1Visible := Visible;
            IF Visible THEN BEGIN
              FinishEnable := FALSE;
              BackEnable := FALSE;
              NextEnable := TRUE;
            END;
          END;
        "Wizard Step"::"2":
          BEGIN
            Step2Visible := Visible;
            IF Visible THEN BEGIN
              FinishEnable := TRUE;
              BackEnable := TRUE;
              NextEnable := FALSE;
            END;
          END;
      END;
    END;

    PROCEDURE Caption@1() : Text[260];
    VAR
      CaptionStr@1000 : Text[260];
    BEGIN
      IF Cont.GET(GETFILTER("Contact Company No.")) THEN
        CaptionStr := COPYSTR(Cont."No." + ' ' + Cont.Name,1,MAXSTRLEN(CaptionStr));
      IF Cont.GET(GETFILTER("Contact No.")) THEN
        CaptionStr := COPYSTR(CaptionStr + ' ' + Cont."No." + ' ' + Cont.Name,1,MAXSTRLEN(CaptionStr));
      IF SalesPurchPerson.GET(GETFILTER("Salesperson Code")) THEN
        CaptionStr := COPYSTR(CaptionStr + ' ' + SalesPurchPerson.Code + ' ' + SalesPurchPerson.Name,1,MAXSTRLEN(CaptionStr));
      IF Team.GET(GETFILTER("Team Code")) THEN
        CaptionStr := COPYSTR(CaptionStr + ' ' + Team.Code + ' ' + Team.Name,1,MAXSTRLEN(CaptionStr));
      IF Campaign.GET(GETFILTER("Campaign No.")) THEN
        CaptionStr := COPYSTR(CaptionStr + ' ' + Campaign."No." + ' ' + Campaign.Description,1,MAXSTRLEN(CaptionStr));
      IF SegHeader.GET(GETFILTER("Segment No.")) THEN
        CaptionStr := COPYSTR(CaptionStr + ' ' + SegHeader."No." + ' ' + SegHeader.Description,1,MAXSTRLEN(CaptionStr));
      IF CaptionStr = '' THEN
        CaptionStr := Text000;

      EXIT(CaptionStr);
    END;

    LOCAL PROCEDURE WizardContactNameOnFormat@19031225(Text@19070643 : Text[1024]);
    BEGIN
      IF SegHeader.GET(GETFILTER("Segment No.")) THEN
        Text := Text005;
    END;

    BEGIN
    END.
  }
}
