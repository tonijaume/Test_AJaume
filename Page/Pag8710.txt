OBJECT Page 8710 Mobile Document Schemas
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVW16.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Mobile Document Schemas;
               ESP=Esquemas de documentos m¢viles];
    SourceTable=Table8710;
    PageType=List;
    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 9       ;1   ;ActionGroup;
                      CaptionML=[ENU=&Schema;
                                 ESP=&Esquema] }
      { 10      ;2   ;Action    ;
                      CaptionML=[ENU=I&mport;
                                 ESP=I&mportar];
                      OnAction=VAR
                                 MobDocSchema@1006 : Record 8710;
                                 XMLInStream@1004 : InStream;
                                 XMLDoc@1003 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60";
                                 XMLNode@1005 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
                                 Filename@1001 : Text[250];
                                 SchemaExists@1008 : Boolean;
                                 DestinationFile@1102601001 : Variant;
                                 retVal@1102601002 : Boolean;
                               BEGIN
                                 SchemaExists := Schema.HASVALUE;
                                 IF ISCLEAR(XMLDoc) THEN
                                   CREATE(XMLDoc);

                                 IF NOT ISSERVICETIER THEN BEGIN
                                   Filename := CommonDialogMgt.OpenFile(Text003,Filename,4,Text004,0);
                                   IF Filename = '' THEN
                                     EXIT;
                                   XMLDoc.load(Filename);
                                 END ELSE BEGIN
                                     retVal := UPLOAD(Text003,'',Text025,Filename,DestinationFile);
                                     IF retVal THEN XMLDoc.load(DestinationFile);
                                     Filename := DestinationFile;
                                 END;

                                 XMLNode := XMLDoc.documentElement;
                                 IF ISCLEAR(XMLNode) THEN
                                   ERROR(Text008);
                                 IF NOT MobXMLMgt.GetAttribute(XMLNode,'targetNamespace',Namespace) THEN
                                   ERROR(Text006);

                                 MobDocSchema.RESET;
                                 MobDocSchema.SETFILTER(Code,'<>%1',Code);
                                 MobDocSchema.SETRANGE(Namespace,Namespace);
                                 IF MobDocSchema.FINDFIRST THEN
                                   ERROR(Text007,TABLECAPTION,MobDocSchema.Code,Namespace);

                                 Schema.IMPORT(Filename);

                                 IF SchemaExists THEN
                                   IF NOT CONFIRM(Text001,FALSE,TABLECAPTION,Code) THEN
                                     EXIT;
                                 CurrPage.SAVERECORD;
                               END;
                                }
      { 12      ;2   ;Action    ;
                      CaptionML=[ENU=E&xport;
                                 ESP=E&xportar];
                      OnAction=VAR
                                 Filename@1001 : Text[250];
                                 StartFileName@1002 : Text[250];
                                 RBAutoMgt@1102601001 : Codeunit 419;
                                 BlobRef@1102601002 : Record 99008535;
                               BEGIN
                                 CALCFIELDS(Schema);
                                 IF NOT Schema.HASVALUE THEN
                                   EXIT;
                                 StartFileName := Code + '.xsd';
                                 BlobRef.Blob := Schema;
                                 RBAutoMgt.BLOBExport(BlobRef,StartFileName,TRUE);
                               END;
                                }
      { 11      ;2   ;Action    ;
                      CaptionML=[ENU=V&iew;
                                 ESP=V&ista];
                      OnAction=VAR
                                 RBAutoMgt@1005 : Codeunit 419;
                                 IE@1002 : Automation "{EAB22AC0-30C1-11CF-A7EB-0000C05BAE0B} 1.1:{0002DF01-0000-0000-C000-000000000046}:'Microsoft Internet Controls'.InternetExplorer";
                                 TempFile@1003 : File;
                                 TempFileName@1004 : Text[250];
                                 ToFileName@1001 : Text[250];
                               BEGIN
                                 CALCFIELDS(Schema);
                                 IF NOT Schema.HASVALUE THEN
                                   EXIT;

                                 IF ISSERVICETIER THEN BEGIN
                                   ToFileName := Text026 + '.xml';
                                   TempFileName := RBAutoMgt.EnvironFileName('','xml');
                                   Schema.EXPORT(TempFileName);
                                   DOWNLOAD(TempFileName,Text024,'',Text025,ToFileName);
                                 END ELSE BEGIN
                                   TempFile.CREATETEMPFILE;
                                   TempFileName := TempFile.NAME + '.xml';
                                   TempFile.CLOSE;
                                   Schema.EXPORT(TempFileName);
                                   IF ISCLEAR(IE) THEN
                                     CREATE(IE);
                                   IE.Navigate(TempFileName);
                                   IE.Visible := TRUE;
                                 END;
                               END;
                                }
      { 13      ;2   ;Action    ;
                      CaptionML=[ENU=&Delete;
                                 ESP=&Eliminar];
                      OnAction=BEGIN
                                 CALCFIELDS(Schema);
                                 IF Schema.HASVALUE THEN
                                   IF CONFIRM(Text002,FALSE,TABLECAPTION,Code) THEN BEGIN
                                     CLEAR(Schema);
                                     Namespace := '';
                                     CurrPage.SAVERECORD;
                                   END;
                               END;
                                }
      { 14      ;2   ;Separator  }
      { 15      ;2   ;Action    ;
                      CaptionML=[ENU=Document &Types;
                                 ESP=&Tipos de documentos];
                      RunObject=Page 8712;
                      RunFormLink=Document Schema Code=FIELD(Code) }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                SourceExpr=Code }

    { 4   ;2   ;Field     ;
                SourceExpr=Namespace }

  }
  CODE
  {
    VAR
      Text001@1001 : TextConst 'ENU=Do you want to replace the existing schema in %1 %2?;ESP=¨Desea reemplazar el esquema existente en %1 %2?';
      Text002@1000 : TextConst 'ENU=Do you want to delete the schema in %1 %2?;ESP=¨Desea eliminar el esquema en %1 %2?';
      CommonDialogMgt@1002 : Codeunit 412;
      Text003@1003 : TextConst 'ENU=Import Schema;ESP=Importar esquema';
      Text004@1004 : TextConst 'ENU=XML Schema (*.xsd)|*.xsd|All files (*.*)|*.*;ESP=Esquema XML (*.xsd)|*.xsd|Todos los archivos (*.*)|*.*';
      Text005@1005 : TextConst 'ENU=Export Schema;ESP=Exportar esquema';
      Text006@1006 : TextConst 'ENU=Invalid namespace.;ESP=Espacio de nombres no v lido.';
      MobXMLMgt@1007 : Codeunit 8704;
      Text007@1008 : TextConst 'ENU=%1 %2 is already imported for namespace\%3.;ESP=%1 %2 ya est  importado para el espacio de nombres\%3.';
      Text008@1009 : TextConst 'ENU=Invalid XML Schema.;ESP=Esquema XML no v lido.';
      Text024@1012 : TextConst 'ENU=Download;ESP=Descargar';
      Text025@1011 : TextConst 'ENU=*.xml|*.*;ESP=*.xml|*.*';
      Text026@1010 : TextConst 'ENU=Default;ESP=Gen‚rico';

    BEGIN
    END.
  }
}
