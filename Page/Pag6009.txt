OBJECT Page 6009 Res. Gr. Alloc. per Serv Order
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVW16.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Resource Group Allocated per Service Order;
               ESP=Familia recurso asignada por orden servicio];
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    LinksAllowed=No;
    SourceTable=Table5900;
    DataCaptionExpr='';
    PageType=Card;
    OnOpenPage=BEGIN
                 ArrayLength := 32;
                 SetColumns(SetWanted::Initial);
                 IF HASFILTER THEN
                   ResourceGrFilter := GETFILTER("Resource Group Filter");
               END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 13      ;1   ;Action    ;
                      CaptionML=[ENU=Show Matrix;
                                 ESP=Mostrar matriz];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ShowMatrix;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 HorizontalRecord@1003 : Record 5950;
                                 ResPerServiceOrderMatrix@1000 : Form 9217;
                                 i@1004 : Integer;
                               BEGIN
                                 HorizontalRecord.SETRANGE(HorizontalRecord."Resource Group No.",ResourceGrFilter);
                                 ServiceHeader.SETFILTER("Resource Group Filter",ResourceGrFilter);
                                 ResPerServiceOrderMatrix.Load(ServiceHeader,HorizontalRecord,MatrixColumnCaptions,MatrixRecords,CurrSetLength);
                                 ResPerServiceOrderMatrix.RUNMODAL;
                               END;
                                }
      { 14      ;1   ;Action    ;
                      CaptionML=[ENU=Next Set;
                                 ESP=Conjunto siguiente];
                      ToolTipML=ENU=Next Set;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextSet;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SetColumns(SetWanted::Next);
                               END;
                                }
      { 10      ;1   ;Action    ;
                      CaptionML=[ENU=Previous Set;
                                 ESP=Conjunto anterior];
                      ToolTipML=ENU=Previous Set;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousSet;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SetColumns(SetWanted::Previous);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 12  ;1   ;Group     ;
                CaptionML=[ENU=General;
                           ESP=General] }

    { 1   ;2   ;Field     ;
                Name=Resource Gr. Filter;
                Lookup=Yes;
                SourceExpr=ResourceGrFilter;
                TableRelation="Resource Group";
                LookupFormID=Resource Groups }

    { 1906098301;1;Group  ;
                CaptionML=[ENU=Matrix Options;
                           ESP=Opciones matriz] }

    { 3   ;2   ;Field     ;
                CaptionML=[ENU=View by;
                           ESP=Ver por];
                OptionCaptionML=[ENU=Day,Week,Month,Quarter,Year,Accounting Period;
                                 ESP=D¡a,Semana,Mes,Trimestre,A¤o,Periodo contable];
                SourceExpr=PeriodType;
                OnValidate=BEGIN
                             DateControl;
                             SetColumns(SetWanted::Initial);
                           END;
                            }

    { 4   ;2   ;Field     ;
                CaptionML=[ENU=Date Filter;
                           ESP=Filtro fecha];
                SourceExpr=DateFilter;
                OnValidate=BEGIN
                             DateControl;
                             SetColumns(SetWanted::Initial);
                           END;
                            }

    { 9   ;2   ;Field     ;
                CaptionML=[ENU=Column set;
                           ESP=Conjunto de columnas];
                SourceExpr=ColumnsSet }

  }
  CODE
  {
    VAR
      MatrixRecords@1001 : ARRAY [32] OF Record 2000000007;
      ResRec2@1028 : Record 156;
      ServiceHeader@1020 : Record 5900;
      Calendar@1016 : Record 2000000007;
      ApplicationManagement@1027 : Codeunit 1;
      PeriodMgt@1004 : Codeunit 359;
      DateFilter@1000 : Text[300];
      MatrixDateFilters@1014 : ARRAY [32] OF Code[30];
      ResourceGrFilter@1018 : Code[300];
      ColumnText@1017 : Text[300];
      PeriodType@1005 : 'Day,Week,Month,Quarter,Year,Accounting Period';
      ArrayLength@1022 : Integer;
      InternalDateFilter@1021 : Text[30];
      SetWanted@1034 : 'Initial,Previous,Same,Next';
      PKFirstRecInCurrSet@1033 : Text[1024];
      MatrixColumnCaptions@1032 : ARRAY [32] OF Text[100];
      ColumnsSet@1031 : Text[1024];
      CurrSetLength@1030 : Integer;

    PROCEDURE DateControl@6();
    BEGIN
      IF ApplicationManagement.MakeDateFilter(DateFilter) = 0 THEN;
      ResRec2.SETFILTER("Date Filter",DateFilter);
      DateFilter := ResRec2.GETFILTER("Date Filter");
      InternalDateFilter := DateFilter;
    END;

    PROCEDURE SetColumns@7(SetWanted@1001 : 'Initial,Previous,Same,Next');
    VAR
      MatrixMgt@1000 : Codeunit 9200;
    BEGIN
      MatrixMgt.GeneratePeriodMatrixData(SetWanted,32,FALSE,PeriodType,DateFilter,
        PKFirstRecInCurrSet,MatrixColumnCaptions,ColumnsSet,CurrSetLength,MatrixRecords);
    END;

    BEGIN
    END.
  }
}
