OBJECT Page 3010576 Cost Budget/Movement
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=CACEM6.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Cost Budget/Movement;
               ESP=Ppto. costes/Movimiento];
    SaveValues=Yes;
    SourceTable=Table3010551;
    PageType=List;
    OnOpenPage=BEGIN
                 GetPeriod('');
               END;

    OnAfterGetRecord=BEGIN
                       NameIndent := 0;
                       CalcFormField;
                       NoOnFormat;
                       NameOnFormat;
                       DebitAmountOnFormat;
                       CreditAmountOnFormat;
                       NetChangeOnFormat;
                       BudgetAmountOnFormat;
                     END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 20      ;1   ;Action    ;
                      CaptionML=[ENU=Last Period;
                                 ESP=Periodo anterior];
                      ToolTipML=ENU=Last Period;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 GetPeriod('<=');
                               END;
                                }
      { 21      ;1   ;Action    ;
                      CaptionML=[ENU=Next Period;
                                 ESP=Periodo siguiente];
                      ToolTipML=ENU=Next Period;
                      Promoted=Yes;
                      Image=NextRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 GetPeriod('>=');
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 50  ;1   ;Group     ;
                CaptionML=[ENU=Options;
                           ESP=Opciones] }

    { 3   ;2   ;Field     ;
                SourceExpr="Date Filter" }

    { 59  ;2   ;Field     ;
                SourceExpr="Budget Filter" }

    { 51  ;2   ;Field     ;
                SourceExpr="Cost Center Filter" }

    { 53  ;2   ;Field     ;
                SourceExpr="Cost Object Filter" }

    { 14  ;2   ;Field     ;
                CaptionML=[ENU=View by;
                           ESP=Ver por];
                ToolTipML=[ENU=Day;
                           ESP=D¡a];
                OptionCaptionML=[ENU=Day,Week,Month,Quarter,Year,Period;
                                 ESP=D¡a,Semana,Mes,Trimestre,A¤o,Periodo];
                SourceExpr=PeriodType;
                OnValidate=BEGIN
                             IF PeriodType = PeriodType::Period THEN
                               PeriodPeriodTypeOnValidate;
                             IF PeriodType = PeriodType::Year THEN
                               YearPeriodTypeOnValidate;
                             IF PeriodType = PeriodType::Quarter THEN
                               QuarterPeriodTypeOnValidate;
                             IF PeriodType = PeriodType::Month THEN
                               MonthPeriodTypeOnValidate;
                             IF PeriodType = PeriodType::Week THEN
                               WeekPeriodTypeOnValidate;
                             IF PeriodType = PeriodType::Day THEN
                               DayPeriodTypeOnValidate;
                           END;
                            }

    { 22  ;2   ;Field     ;
                CaptionML=[ENU=View as;
                           ESP=Ver como];
                ToolTipML=[ENU=Net Change;
                           ESP=Saldo periodo];
                OptionCaptionML=[ENU=Net Change,Balance at Date;
                                 ESP=Saldo periodo,Saldo a la fecha];
                SourceExpr=AmountType;
                OnValidate=BEGIN
                             IF AmountType = AmountType::"Balance at Date" THEN
                               BalanceatDateAmountTypeOnValid;
                             IF AmountType = AmountType::"Net Change" THEN
                               NetChangeAmountTypeOnValidate;
                           END;
                            }

    { 5   ;1   ;Group     ;
                IndentationColumnName=NameIndent;
                IndentationControls=Name;
                GroupType=Repeater }

    { 6   ;2   ;Field     ;
                Name=Number;
                SourceExpr="No." }

    { 8   ;2   ;Field     ;
                Name=Name;
                SourceExpr=Name }

    { 10  ;2   ;Field     ;
                BlankNumbers=BlankNegAndZero;
                SourceExpr="Debit Amount";
                Visible=FALSE }

    { 12  ;2   ;Field     ;
                BlankNumbers=BlankNegAndZero;
                SourceExpr="Credit Amount";
                Visible=FALSE }

    { 35  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Net Change";
                Visible=TRUE }

    { 37  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Budget Amount";
                OnValidate=BEGIN
                             CalcFormField;
                           END;
                            }

    { 26  ;2   ;Field     ;
                CaptionML=[ENU=%;
                           ESP=%];
                DecimalPlaces=1:1;
                BlankZero=Yes;
                SourceExpr=BudPct;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      PeriodType@1150000 : 'Day,Week,Month,Quarter,Year,Period';
      AmountType@1150001 : 'Net Change,Balance at Date';
      ClosingEntryFilter@1150002 : 'Inclusive,Exclusive';
      BudPct@1150003 : Decimal;
      NumberEmphasize@19022874 : Boolean INDATASET;
      NameEmphasize@19018670 : Boolean INDATASET;
      NameIndent@19079073 : Integer INDATASET;
      "Debit AmountEmphasize"@19070960 : Boolean INDATASET;
      "Credit AmountEmphasize"@19071010 : Boolean INDATASET;
      "Net ChangeEmphasize"@19025187 : Boolean INDATASET;
      "Budget AmountEmphasize"@19068651 : Boolean INDATASET;

    LOCAL PROCEDURE GetPeriod@1(FindTxt@1150000 : Code[10]);
    VAR
      Calender@1150001 : Record 2000000007;
      AccPeriod@1150002 : Record 50;
      PeriodMgt@1150003 : Codeunit 359;
    BEGIN
      IF GETFILTER("Date Filter") <> '' THEN BEGIN
        Calender.SETFILTER("Period Start",GETFILTER("Date Filter"));
        IF NOT PeriodMgt.FindDate('+',Calender,PeriodType) THEN
          PeriodMgt.FindDate('+',Calender,PeriodType::Day);
        Calender.SETRANGE("Period Start");
      END;
      PeriodMgt.FindDate(FindTxt,Calender,PeriodType);
      IF AmountType = AmountType::"Net Change" THEN BEGIN
        SETRANGE("Date Filter",Calender."Period Start",Calender."Period End");
        IF GETRANGEMIN("Date Filter") = GETRANGEMAX("Date Filter") THEN
          SETRANGE("Date Filter",GETRANGEMIN("Date Filter"));
      END ELSE
        SETRANGE("Date Filter",0D,Calender."Period End");
      IF ClosingEntryFilter = ClosingEntryFilter::Exclusive THEN BEGIN
        AccPeriod.SETCURRENTKEY("New Fiscal Year");
        AccPeriod.SETRANGE("New Fiscal Year",TRUE);
        IF GETRANGEMIN("Date Filter") = 0D THEN
          AccPeriod.SETRANGE("Starting Date",0D,GETRANGEMAX("Date Filter"))
        ELSE
          AccPeriod.SETRANGE("Starting Date",GETRANGEMIN("Date Filter") + 1,GETRANGEMAX("Date Filter"));
        IF AccPeriod.FIND('-') THEN
          REPEAT
            SETFILTER(
              "Date Filter",GETFILTER("Date Filter") + '&<>%1',
              CLOSINGDATE(AccPeriod."Starting Date" - 1));
          UNTIL AccPeriod.NEXT = 0;
      END;
    END;

    PROCEDURE CalcFormField@2();
    BEGIN
      CALCFIELDS("Net Change","Budget Amount");
      "Debit Amount" := "Net Change";
      "Credit Amount" := -"Net Change";
      IF "Budget Amount" = 0 THEN
        BudPct := 0
      ELSE
        BudPct := "Net Change" / "Budget Amount" * 100;
    END;

    LOCAL PROCEDURE DayPeriodTypeOnPush@19008851();
    BEGIN
      GetPeriod('');
    END;

    LOCAL PROCEDURE WeekPeriodTypeOnPush@19046063();
    BEGIN
      GetPeriod('');
    END;

    LOCAL PROCEDURE MonthPeriodTypeOnPush@19047374();
    BEGIN
      GetPeriod('');
    END;

    LOCAL PROCEDURE QuarterPeriodTypeOnPush@19018850();
    BEGIN
      GetPeriod('');
    END;

    LOCAL PROCEDURE YearPeriodTypeOnPush@19051042();
    BEGIN
      GetPeriod('');
    END;

    LOCAL PROCEDURE PeriodPeriodTypeOnPush@19032639();
    BEGIN
      GetPeriod('');
    END;

    LOCAL PROCEDURE NetChangeAmountTypeOnPush@19074855();
    BEGIN
      GetPeriod('');
    END;

    LOCAL PROCEDURE BalanceatDateAmountTypeOnPush@19049003();
    BEGIN
      GetPeriod('');
    END;

    LOCAL PROCEDURE NoOnFormat@19031395();
    BEGIN
      NumberEmphasize := "Line Type" <> "Line Type"::"Cost Type";
    END;

    LOCAL PROCEDURE NameOnFormat@19039177();
    BEGIN
      NameIndent := Indentation;
      NameEmphasize := "Line Type" <> "Line Type"::"Cost Type";
    END;

    LOCAL PROCEDURE DebitAmountOnFormat@19036667();
    BEGIN
      "Debit AmountEmphasize" := "Line Type" <> "Line Type"::"Cost Type";
    END;

    LOCAL PROCEDURE CreditAmountOnFormat@19075481();
    BEGIN
      "Credit AmountEmphasize" := "Line Type" <> "Line Type"::"Cost Type";
    END;

    LOCAL PROCEDURE NetChangeOnFormat@19074173();
    BEGIN
      "Net ChangeEmphasize" := "Line Type" <> "Line Type"::"Cost Type";
    END;

    LOCAL PROCEDURE BudgetAmountOnFormat@19036822();
    BEGIN
      "Budget AmountEmphasize" := "Line Type" <> "Line Type"::"Cost Type";
    END;

    LOCAL PROCEDURE DayPeriodTypeOnValidate@19012979();
    BEGIN
      DayPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE WeekPeriodTypeOnValidate@19058475();
    BEGIN
      WeekPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE MonthPeriodTypeOnValidate@19021027();
    BEGIN
      MonthPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE QuarterPeriodTypeOnValidate@19015346();
    BEGIN
      QuarterPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE YearPeriodTypeOnValidate@19064743();
    BEGIN
      YearPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE PeriodPeriodTypeOnValidate@19066307();
    BEGIN
      PeriodPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE NetChangeAmountTypeOnValidate@19062218();
    BEGIN
      NetChangeAmountTypeOnPush;
    END;

    LOCAL PROCEDURE BalanceatDateAmountTypeOnValid@19007073();
    BEGIN
      BalanceatDateAmountTypeOnPush;
    END;

    BEGIN
    END.
  }
}
