OBJECT Page 5847 Average Cost Calc. Overview
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVW16.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Average Cost Calc. Overview;
               ESP=Inf. general c lculo cte. medio];
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    SourceTable=Table5847;
    DataCaptionExpr=ItemName;
    SourceTableView=SORTING(Attached to Valuation Date,Attached to Entry No.,Type);
    PageType=List;
    SourceTableTemporary=Yes;
    TimerUpdate=1000;
    OnOpenPage=BEGIN
                 InitTempTable;
                 IF ISSERVICETIER THEN
                   ExpandAll(AvgCostCalcOverview);

                 SetRecFilters;
                 CurrPage.UPDATE(FALSE);

                 ItemName := STRSUBSTNO('%1  %2',Item."No.",Item.Description);
               END;

    OnAfterGetRecord=BEGIN
                       "Document Line No.HideValue" := FALSE;
                       "Entry TypeHideValue" := FALSE;
                       "Item Ledger Entry No.HideValue" := FALSE;
                       TypeIndent := 0;
                       SetExpansionStatus;
                       IF Type = Type::"Closing Entry" THEN BEGIN
                         Quantity := CalculateRemainingQty;
                         "Cost Amount (Expected)" := CalculateCostAmt(FALSE);
                         "Cost Amount (Actual)" := CalculateCostAmt(TRUE);
                       END;
                       TypeOnFormat;
                       ValuationDateOnFormat;
                       CalculateAverageCostOnFormat;
                       ItemLedgerEntryNoOnFormat;
                       EntryTypeOnFormat;
                       DocumentLineNoOnFormat;
                       QuantityOnFormat;
                       CostAmountExpectedOnFormat;
                       CostAmountActualOnFormat;
                     END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 41      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Line;
                                 ESP=&L¡nea] }
      { 54      ;2   ;Action    ;
                      ShortCutKey=May£s+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 ESP=Dimensiones];
                      RunObject=Page 544;
                      RunFormLink=Table ID=CONST(32),
                                  Entry No.=FIELD(Item Ledger Entry No.);
                      Image=Dimensions }
      { 55      ;2   ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=[ENU=&Value Entries;
                                 ESP=Movs. &valor];
                      RunObject=Page 5802;
                      RunFormView=SORTING(Item Ledger Entry No.);
                      RunFormLink=Item Ledger Entry No.=FIELD(Item Ledger Entry No.),
                                  Valuation Date=FIELD(Valuation Date);
                      Image=ValueLedger }
      { 45      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Application;
                                 ESP=Li&quidaci¢n] }
      { 56      ;2   ;Action    ;
                      CaptionML=[ENU=Applied E&ntries;
                                 ESP=&Movs. conciliados];
                      OnAction=VAR
                                 ItemLedgEntry@1000 : Record 32;
                               BEGIN
                                 IF ItemLedgEntry.GET("Item Ledger Entry No.") THEN
                                   CODEUNIT.RUN(CODEUNIT::"Show Applied Entries",ItemLedgEntry);
                               END;
                                }
      { 57      ;2   ;Action    ;
                      CaptionML=[ENU=Reservation Entries;
                                 ESP=Movs. reserva];
                      Image=ReservationLedger;
                      OnAction=VAR
                                 ItemLedgEntry@1000 : Record 32;
                               BEGIN
                                 ItemLedgEntry.GET("Item Ledger Entry No.");
                                 ItemLedgEntry.ShowReservationEntries(TRUE);
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 53      ;1   ;Action    ;
                      CaptionML=[ENU=&Navigate;
                                 ESP=&Navegar];
                      Promoted=Yes;
                      Image=Navigate;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 Navigate.SetDoc("Posting Date","Document No.");
                                 Navigate.RUN;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                IndentationColumnName=TypeIndent;
                IndentationControls=Type;
                ShowAsTree=Yes;
                GroupType=Repeater }

    { 19  ;2   ;Field     ;
                SourceExpr=Type;
                Editable=FALSE }

    { 34  ;2   ;Field     ;
                SourceExpr="Valuation Date";
                Editable=FALSE }

    { 4   ;2   ;Field     ;
                SourceExpr="Item No.";
                Editable=FALSE }

    { 15  ;2   ;Field     ;
                SourceExpr="Location Code";
                Visible=FALSE;
                Editable=FALSE }

    { 47  ;2   ;Field     ;
                SourceExpr="Variant Code";
                Visible=FALSE;
                Editable=FALSE }

    { 49  ;2   ;Field     ;
                Name=AverageCostCntrl;
                CaptionML=[ENU=Unit Cost;
                           ESP=Coste unitario];
                SourceExpr=CalculateAverageCost;
                AutoFormatType=2;
                Editable=FALSE }

    { 28  ;2   ;Field     ;
                SourceExpr="Cost is Adjusted";
                Editable=FALSE }

    { 2   ;2   ;Field     ;
                SourceExpr="Item Ledger Entry No.";
                Visible=FALSE;
                Editable=FALSE;
                HideValue="Item Ledger Entry No.HideValue" }

    { 6   ;2   ;Field     ;
                SourceExpr="Posting Date";
                Visible=FALSE;
                Editable=FALSE }

    { 8   ;2   ;Field     ;
                SourceExpr="Entry Type";
                Editable=FALSE;
                HideValue="Entry TypeHideValue" }

    { 23  ;2   ;Field     ;
                SourceExpr="Document Type";
                Visible=FALSE;
                Editable=FALSE }

    { 10  ;2   ;Field     ;
                SourceExpr="Document No.";
                Visible=FALSE;
                Editable=FALSE }

    { 25  ;2   ;Field     ;
                SourceExpr="Document Line No.";
                Visible=FALSE;
                Editable=FALSE;
                HideValue="Document Line No.HideValue" }

    { 21  ;2   ;Field     ;
                SourceExpr=Quantity;
                Editable=FALSE }

    { 17  ;2   ;Field     ;
                SourceExpr="Cost Amount (Expected)";
                Editable=FALSE }

    { 51  ;2   ;Field     ;
                SourceExpr="Cost Amount (Actual)";
                Editable=FALSE }

  }
  CODE
  {
    VAR
      Item@1003 : Record 27;
      AvgCostCalcOverview@1002 : TEMPORARY Record 5847;
      Navigate@1005 : Form 344;
      GetAvgCostCalcOverview@1004 : Codeunit 5847;
      ActualExpansionStatus@1000 : Integer;
      ItemName@1006 : Text[250];
      TypeEmphasize@19012868 : Boolean INDATASET;
      TypeIndent@19015277 : Integer INDATASET;
      "Valuation DateEmphasize"@19073009 : Boolean INDATASET;
      AverageCostCntrlEmphasize@19078329 : Boolean INDATASET;
      "Item Ledger Entry No.HideValue"@19024839 : Boolean INDATASET;
      "Entry TypeHideValue"@19058570 : Boolean INDATASET;
      "Document Line No.HideValue"@19051570 : Boolean INDATASET;
      QuantityEmphasize@19029508 : Boolean INDATASET;
      CostAmountExpectedEmphasize@19006606 : Boolean INDATASET;
      "Cost Amount (Actual)Emphasize"@19004194 : Boolean INDATASET;

    PROCEDURE SetExpansionStatus@16();
    BEGIN
      CASE TRUE OF
        IsExpanded(Rec):
          ActualExpansionStatus := 1;
        HasChildren(Rec):
          ActualExpansionStatus := 0
        ELSE
          ActualExpansionStatus := 2;
      END;
    END;

    PROCEDURE InitTempTable@1();
    VAR
      AvgCostCalcOverviewFilters@1000 : Record 5847;
    BEGIN
      AvgCostCalcOverview."Item No." := Item."No.";
      AvgCostCalcOverview.SETFILTER("Valuation Date",Item.GETFILTER("Date Filter"));
      AvgCostCalcOverview.SETFILTER("Location Code",Item.GETFILTER("Location Filter"));
      AvgCostCalcOverview.SETFILTER("Variant Code",Item.GETFILTER("Variant Filter"));

      GetAvgCostCalcOverview.RUN(AvgCostCalcOverview);
      AvgCostCalcOverview.RESET;
      AvgCostCalcOverviewFilters.COPYFILTERS(Rec);
      RESET;
      DELETEALL;
      IF AvgCostCalcOverview.FIND('-') THEN
        REPEAT
          IF AvgCostCalcOverview.Level = 0 THEN BEGIN
            Rec := AvgCostCalcOverview;
            INSERT;
          END;
        UNTIL AvgCostCalcOverview.NEXT = 0;
      COPYFILTERS(AvgCostCalcOverviewFilters);
    END;

    LOCAL PROCEDURE ExpandAll@12(VAR AvgCostCalcOverview@1000 : Record 5847);
    VAR
      AvgCostCalcOverviewFilters@1001 : Record 5847;
    BEGIN
      GetAvgCostCalcOverview.RUN(AvgCostCalcOverview);
      AvgCostCalcOverviewFilters.COPYFILTERS(Rec);
      RESET;
      DELETEALL;

      IF AvgCostCalcOverview.FIND('+') THEN
        REPEAT
          Rec := AvgCostCalcOverview;
          GetAvgCostCalcOverview.Calculate(AvgCostCalcOverview);
          AvgCostCalcOverview.RESET;
          AvgCostCalcOverview := Rec;
        UNTIL AvgCostCalcOverview.NEXT(-1) = 0;

      IF AvgCostCalcOverview.FIND('-') THEN
        REPEAT
          Rec := AvgCostCalcOverview;
          INSERT;
        UNTIL AvgCostCalcOverview.NEXT = 0;

      COPYFILTERS(AvgCostCalcOverviewFilters);
    END;

    LOCAL PROCEDURE IsExpanded@20(ActualAvgCostCalcOverview@1000 : Record 5847) : Boolean;
    VAR
      xAvgCostCalcOverview@1002 : TEMPORARY Record 5847;
      Direction@1001 : Integer;
      Found@1003 : Boolean;
    BEGIN
      xAvgCostCalcOverview := Rec;
      SETCURRENTKEY("Attached to Valuation Date","Attached to Entry No.",Type);
      Rec := ActualAvgCostCalcOverview;
      Found := (NEXT(GetDirection) <> 0);
      IF Found THEN
        Found := (Level > ActualAvgCostCalcOverview.Level);
      Rec := xAvgCostCalcOverview;
      EXIT(Found);
    END;

    LOCAL PROCEDURE HasChildren@19(VAR ActualAvgCostCalcOverview@1000 : Record 5847) : Boolean;
    BEGIN
      AvgCostCalcOverview := ActualAvgCostCalcOverview;
      IF Type = Type::"Closing Entry" THEN
        EXIT(GetAvgCostCalcOverview.EntriesExist(AvgCostCalcOverview));
      EXIT(FALSE);
    END;

    PROCEDURE RefreshTempTable@14(VAR TempAvgCostCalcOverview2@1001 : Record 5847;VAR AvgCostCalcOverview@1000 : Record 5847);
    BEGIN
      TempAvgCostCalcOverview2.COPY(Rec);

      WITH Rec DO BEGIN
        RESET;
        IF FIND('-') THEN
          REPEAT
            AvgCostCalcOverview := Rec;
            IF NOT AvgCostCalcOverview.FIND OR
               ((Level = 0) AND ((AvgCostCalcOverview.NEXT = 0) OR (AvgCostCalcOverview.Level = 0)))
            THEN BEGIN
              IF Level = 0 THEN BEGIN
                AvgCostCalcOverview := Rec;
                AvgCostCalcOverview.FIND;
                AvgCostCalcOverview.DELETE(TRUE);
              END;
              DELETE;
            END;
          UNTIL NEXT = 0;
      END;

      COPY(TempAvgCostCalcOverview2);
    END;

    LOCAL PROCEDURE ToggleExpandCollapse@4(VAR AvgCostCalcOverview@1000 : Record 5847);
    VAR
      CopyOfAvgCostCalcOverview@1001 : Record 5847;
      xAvgCostCalcOverview@1002 : TEMPORARY Record 5847;
    BEGIN
      xAvgCostCalcOverview := Rec;
      CopyOfAvgCostCalcOverview.COPY(AvgCostCalcOverview);
      IF ActualExpansionStatus = 0 THEN BEGIN // Has children, but not expanded
        AvgCostCalcOverview := Rec;
        GetAvgCostCalcOverview.Calculate(AvgCostCalcOverview);
        AvgCostCalcOverview.SETFILTER("Entry No.",'<>%1',"Entry No.");
        AvgCostCalcOverview.SETRANGE(Level,Level,Level + 1);
        REPEAT
          IF AvgCostCalcOverview.Level > xAvgCostCalcOverview.Level THEN BEGIN
            Rec := AvgCostCalcOverview;
            IF INSERT THEN;
          END;
        UNTIL (AvgCostCalcOverview.NEXT = 0) OR (AvgCostCalcOverview.Level = xAvgCostCalcOverview.Level);
      END ELSE
        IF ActualExpansionStatus = 1 THEN BEGIN // Has children and is already expanded
          WHILE (NEXT(GetDirection) <> 0) AND (Level > xAvgCostCalcOverview.Level) DO
            DELETE;
        END;
      AvgCostCalcOverview.COPY(CopyOfAvgCostCalcOverview);
      Rec := xAvgCostCalcOverview;
      CurrPage.UPDATE;
    END;

    PROCEDURE GetDirection@3() : Integer;
    BEGIN
      IF ASCENDING THEN
        EXIT(1);
      EXIT(-1);
    END;

    PROCEDURE SetRecFilters@5();
    BEGIN
      RESET;
      SETCURRENTKEY("Attached to Valuation Date","Attached to Entry No.",Type);
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE SetItem@2(VAR Item2@1000 : Record 27);
    BEGIN
      Item.COPY(Item2);
    END;

    LOCAL PROCEDURE ActualExpansionStatusOnPush@19057112();
    BEGIN
      ToggleExpandCollapse(AvgCostCalcOverview);
    END;

    LOCAL PROCEDURE TypeOnFormat@19025827();
    BEGIN
      IF Type = Type::"Closing Entry" THEN
        TypeEmphasize := TRUE
      ELSE
        TypeIndent := 1;
    END;

    LOCAL PROCEDURE ValuationDateOnFormat@19008308();
    BEGIN
      IF Type = Type::"Closing Entry" THEN
        "Valuation DateEmphasize" := TRUE;
    END;

    LOCAL PROCEDURE CalculateAverageCostOnFormat@19033758();
    BEGIN
      IF Type = Type::"Closing Entry" THEN
        AverageCostCntrlEmphasize := TRUE;
    END;

    LOCAL PROCEDURE ItemLedgerEntryNoOnFormat@19009322();
    BEGIN
      IF Type = Type::"Closing Entry" THEN
        "Item Ledger Entry No.HideValue" := TRUE;
    END;

    LOCAL PROCEDURE EntryTypeOnFormat@19043113();
    BEGIN
      IF Type = Type::"Closing Entry" THEN
        "Entry TypeHideValue" := TRUE;
    END;

    LOCAL PROCEDURE DocumentLineNoOnFormat@19065899();
    BEGIN
      IF Type = Type::"Closing Entry" THEN
        "Document Line No.HideValue" := TRUE;
    END;

    LOCAL PROCEDURE QuantityOnFormat@19071269();
    BEGIN
      IF Type = Type::"Closing Entry" THEN
        QuantityEmphasize := TRUE;
    END;

    LOCAL PROCEDURE CostAmountExpectedOnFormat@19026594();
    BEGIN
      IF Type = Type::"Closing Entry" THEN
        CostAmountExpectedEmphasize := TRUE;
    END;

    LOCAL PROCEDURE CostAmountActualOnFormat@19019850();
    BEGIN
      IF Type = Type::"Closing Entry" THEN
        "Cost Amount (Actual)Emphasize" := TRUE;
    END;

    BEGIN
    END.
  }
}
