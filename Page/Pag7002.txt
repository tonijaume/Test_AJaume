OBJECT Page 7002 Sales Prices
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVW16.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Sales Prices;
               ESP=Precios ventas];
    SaveValues=Yes;
    SourceTable=Table7002;
    DataCaptionExpr=GetCaption;
    DelayedInsert=Yes;
    PageType=Worksheet;
    OnInit=BEGIN
             SalesCodeFilterCtrlEnable := TRUE;
             "Sales CodeEditable" := TRUE;
           END;

    OnOpenPage=BEGIN
                 GetRecFilters;
                 SetRecFilters;
               END;

    OnAfterGetRecord=BEGIN
                       OnAfterGetCurrRecord;
                     END;

    OnNewRecord=BEGIN
                  OnAfterGetCurrRecord;
                END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 20  ;1   ;Group     ;
                CaptionML=[ENU=General;
                           ESP=General] }

    { 28  ;2   ;Field     ;
                CaptionML=[ENU=Sales Type Filter;
                           ESP=Filtro tipo ventas];
                OptionCaptionML=[ENU=Customer,Customer Price Group,All Customers,Campaign,None;
                                 ESP=Cliente,Grupo precio cliente,Todos los clientes,Campa¤a,Ninguno];
                SourceExpr=SalesTypeFilter;
                OnValidate=BEGIN
                             SalesTypeFilterOnAfterValidate;
                           END;
                            }

    { 26  ;2   ;Field     ;
                Name=SalesCodeFilterCtrl;
                CaptionML=[ENU=Sales Code Filter;
                           ESP=Filtro c¢d. ventas];
                SourceExpr=SalesCodeFilter;
                Enabled=SalesCodeFilterCtrlEnable;
                OnValidate=BEGIN
                             SalesCodeFilterOnAfterValidate;
                           END;

                OnLookup=VAR
                           CustList@1005 : Form 22;
                           CustPriceGrList@1004 : Form 7;
                           CampaignList@1002 : Form 5087;
                         BEGIN
                           IF SalesTypeFilter = SalesTypeFilter::"All Customers" THEN EXIT;

                           CASE SalesTypeFilter OF
                             SalesTypeFilter::Customer:
                               BEGIN
                                 CustList.LOOKUPMODE := TRUE;
                                 IF CustList.RUNMODAL = ACTION::LookupOK THEN
                                   Text := CustList.GetSelectionFilter
                                 ELSE
                                   EXIT(FALSE);
                               END;
                             SalesTypeFilter::"Customer Price Group":
                               BEGIN
                                 CustPriceGrList.LOOKUPMODE := TRUE;
                                 IF CustPriceGrList.RUNMODAL = ACTION::LookupOK THEN
                                   Text := CustPriceGrList.GetSelectionFilter
                                 ELSE
                                   EXIT(FALSE);
                               END;
                             SalesTypeFilter::Campaign:
                               BEGIN
                                 CampaignList.LOOKUPMODE := TRUE;
                                 IF CampaignList.RUNMODAL = ACTION::LookupOK THEN
                                   Text := CampaignList.GetSelectionFilter
                                 ELSE
                                   EXIT(FALSE);
                               END;
                           END;

                           EXIT(TRUE);
                         END;
                          }

    { 10  ;2   ;Field     ;
                Name=ItemNoFilterCtrl;
                CaptionML=[ENU=Item No. Filter;
                           ESP=Filtro n§ prod.];
                SourceExpr=ItemNoFilter;
                OnValidate=BEGIN
                             ItemNoFilterOnAfterValidate;
                           END;

                OnLookup=VAR
                           ItemList@1002 : Form 31;
                         BEGIN
                           ItemList.LOOKUPMODE := TRUE;
                           IF ItemList.RUNMODAL = ACTION::LookupOK THEN
                             Text := ItemList.GetSelectionFilter
                           ELSE
                             EXIT(FALSE);

                           EXIT(TRUE);
                         END;
                          }

    { 34  ;2   ;Field     ;
                CaptionML=[ENU=Starting Date Filter;
                           ESP=Filtro fecha inicio];
                SourceExpr=StartingDateFilter;
                OnValidate=BEGIN
                             StartingDateFilterOnAfterValid;
                           END;
                            }

    { 38  ;2   ;Field     ;
                Name=SalesCodeFilterCtrl;
                CaptionML=[ENU=Currency Code Filter;
                           ESP=Filtro c¢d. divisa];
                SourceExpr=CurrencyCodeFilter;
                OnValidate=BEGIN
                             CurrencyCodeFilterOnAfterValid;
                           END;

                OnLookup=VAR
                           CurrencyList@1000 : Form 5;
                         BEGIN
                           CurrencyList.LOOKUPMODE := TRUE;
                           IF CurrencyList.RUNMODAL = ACTION::LookupOK THEN
                             Text := CurrencyList.GetSelectionFilter
                           ELSE
                             EXIT(FALSE);

                           EXIT(TRUE);
                         END;
                          }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 32  ;2   ;Field     ;
                SourceExpr="Sales Type" }

    { 18  ;2   ;Field     ;
                SourceExpr="Sales Code";
                Editable="Sales CodeEditable" }

    { 4   ;2   ;Field     ;
                SourceExpr="Item No." }

    { 30  ;2   ;Field     ;
                SourceExpr="Variant Code";
                Visible=FALSE }

    { 14  ;2   ;Field     ;
                SourceExpr="Currency Code";
                Visible=FALSE }

    { 8   ;2   ;Field     ;
                SourceExpr="Unit of Measure Code" }

    { 12  ;2   ;Field     ;
                SourceExpr="Minimum Quantity" }

    { 6   ;2   ;Field     ;
                SourceExpr="Unit Price" }

    { 36  ;2   ;Field     ;
                SourceExpr="Starting Date" }

    { 2   ;2   ;Field     ;
                SourceExpr="Ending Date" }

    { 16  ;2   ;Field     ;
                SourceExpr="Price Includes VAT";
                Visible=FALSE }

    { 25  ;2   ;Field     ;
                SourceExpr="Allow Line Disc.";
                Visible=FALSE }

    { 42  ;2   ;Field     ;
                SourceExpr="Allow Invoice Disc.";
                Visible=FALSE }

    { 46  ;2   ;Field     ;
                SourceExpr="VAT Bus. Posting Gr. (Price)";
                Visible=FALSE }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      Cust@1001 : Record 18;
      CustPriceGr@1005 : Record 6;
      Campaign@1008 : Record 5071;
      Item@1004 : Record 27;
      SalesTypeFilter@1000 : 'Customer,Customer Price Group,All Customers,Campaign,None';
      SalesCodeFilter@1003 : Text[250];
      ItemNoFilter@1011 : Text[250];
      StartingDateFilter@1006 : Text[30];
      CurrencyCodeFilter@1002 : Text[250];
      Text000@1007 : TextConst 'ENU=All Customers;ESP=Todos clientes';
      "Sales CodeEditable"@19031640 : Boolean INDATASET;
      SalesCodeFilterCtrlEnable@19013164 : Boolean INDATASET;

    PROCEDURE GetRecFilters@2();
    BEGIN
      IF GETFILTERS <> '' THEN BEGIN
        IF GETFILTER("Sales Type") <> '' THEN
          SalesTypeFilter := "Sales Type"
        ELSE
          SalesTypeFilter := SalesTypeFilter::None;

        SalesCodeFilter := GETFILTER("Sales Code");
        ItemNoFilter := GETFILTER("Item No.");
        CurrencyCodeFilter := GETFILTER("Currency Code");
      END;

      EVALUATE(StartingDateFilter,GETFILTER("Starting Date"));
    END;

    PROCEDURE SetRecFilters@1();
    BEGIN
      SalesCodeFilterCtrlEnable := TRUE;

      IF SalesTypeFilter <> SalesTypeFilter::None THEN
        SETRANGE("Sales Type",SalesTypeFilter)
      ELSE
        SETRANGE("Sales Type");

      IF SalesTypeFilter IN [SalesTypeFilter::"All Customers",SalesTypeFilter::None] THEN BEGIN
        SalesCodeFilterCtrlEnable := FALSE;
        SalesCodeFilter := '';
      END;

      IF SalesCodeFilter <> '' THEN
        SETFILTER("Sales Code",SalesCodeFilter)
      ELSE
        SETRANGE("Sales Code");

      IF StartingDateFilter <> '' THEN
        SETFILTER("Starting Date",StartingDateFilter)
      ELSE
        SETRANGE("Starting Date");

      IF ItemNoFilter <> '' THEN BEGIN
        SETFILTER("Item No.",ItemNoFilter);
      END ELSE
        SETRANGE("Item No.");

      IF CurrencyCodeFilter <> '' THEN BEGIN
        SETFILTER("Currency Code",CurrencyCodeFilter);
      END ELSE
        SETRANGE("Currency Code");

      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE GetCaption@3() : Text[250];
    VAR
      ObjTransl@1000 : Record 377;
      SourceTableName@1002 : Text[100];
      SalesSrcTableName@1003 : Text[100];
      Description@1001 : Text[250];
    BEGIN
      GetRecFilters;
      "Sales CodeEditable" := "Sales Type" <> "Sales Type"::"All Customers";

      SourceTableName := '';
      IF ItemNoFilter <> '' THEN
        SourceTableName := ObjTransl.TranslateObject(ObjTransl."Object Type"::Table,27);

      SalesSrcTableName := '';
      CASE SalesTypeFilter OF
        SalesTypeFilter::Customer:
          BEGIN
            SalesSrcTableName := ObjTransl.TranslateObject(ObjTransl."Object Type"::Table,18);
            Cust."No." := SalesCodeFilter;
            IF Cust.FIND THEN
              Description := Cust.Name;
          END;
        SalesTypeFilter::"Customer Price Group":
          BEGIN
            SalesSrcTableName := ObjTransl.TranslateObject(ObjTransl."Object Type"::Table,6);
            CustPriceGr.Code := SalesCodeFilter;
            IF CustPriceGr.FIND THEN
              Description := CustPriceGr.Description;
          END;
        SalesTypeFilter::Campaign:
          BEGIN
            SalesSrcTableName := ObjTransl.TranslateObject(ObjTransl."Object Type"::Table,5071);
            Campaign."No." := SalesCodeFilter;
            IF Campaign.FIND THEN
              Description := Campaign.Description;
          END;
        SalesTypeFilter::"All Customers":
          BEGIN
            SalesSrcTableName := Text000;
            Description := '';
          END;
      END;

      IF SalesSrcTableName = Text000 THEN
        EXIT(STRSUBSTNO('%1 %2 %3',SalesSrcTableName,SourceTableName,ItemNoFilter));
      EXIT(STRSUBSTNO('%1 %2 %3 %4 %5',SalesSrcTableName,SalesCodeFilter,Description,SourceTableName,ItemNoFilter));
    END;

    LOCAL PROCEDURE SalesCodeFilterOnAfterValidate@19067727();
    BEGIN
      CurrPage.SAVERECORD;
      SetRecFilters;
    END;

    LOCAL PROCEDURE SalesTypeFilterOnAfterValidate@19024044();
    BEGIN
      CurrPage.SAVERECORD;
      SalesCodeFilter := '';
      SetRecFilters;
    END;

    LOCAL PROCEDURE StartingDateFilterOnAfterValid@19055286();
    BEGIN
      CurrPage.SAVERECORD;
      SetRecFilters;
    END;

    LOCAL PROCEDURE ItemNoFilterOnAfterValidate@19009808();
    BEGIN
      CurrPage.SAVERECORD;
      SetRecFilters;
    END;

    LOCAL PROCEDURE CurrencyCodeFilterOnAfterValid@19015290();
    BEGIN
      CurrPage.SAVERECORD;
      SetRecFilters;
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;
      "Sales CodeEditable" := "Sales Type" <> "Sales Type"::"All Customers"
    END;

    BEGIN
    END.
  }
}
