OBJECT Page 5907 Service Item Worksheet Subform
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=NAVW16.00.01;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Lines;
               ESP=L¡neas];
    LinksAllowed=No;
    SourceTable=Table5902;
    DelayedInsert=Yes;
    PageType=ListPart;
    AutoSplitKey=Yes;
    OnAfterGetRecord=BEGIN
                       ShowShortcutDimCode(ShortcutDimCode);
                     END;

    OnNewRecord=BEGIN
                  Type := xRec.Type;
                  CLEAR(ShortcutDimCode);
                  VALIDATE("Service Item Line No.",ServItemLineNo);
                END;

    OnInsertRecord=BEGIN
                     "Line No." := GetNextLineNo(xRec,BelowxRec);
                     EXIT(TRUE);
                   END;

    OnDeleteRecord=VAR
                     ReserveServLine@1000 : Codeunit 99000842;
                   BEGIN
                     IF (Quantity <> 0) AND ItemExists("No.") THEN BEGIN
                       COMMIT;
                       IF NOT ReserveServLine.DeleteLineConfirm(Rec) THEN
                         EXIT(FALSE);
                       ReserveServLine.DeleteLine(Rec);
                     END;
                   END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1906587504;1 ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 ESP=Acci&ones] }
      { 1903098804;2 ;Action    ;
                      CaptionML=[ENU=Insert &Ext. Texts;
                                 ESP=Insertar t&extos adicionales];
                      OnAction=BEGIN
                                 //This functionality was copied from page #5906. Unsupported part was commented. Please check it.
                                 {CurrPage.ServInvLines.FORM.}
                                 _InsertExtendedText(TRUE);
                               END;
                                }
      { 1900545204;2 ;Action    ;
                      CaptionML=[ENU=Insert &Starting Fee;
                                 ESP=Insertar &gto. inicio];
                      Image=InsertStartingFee;
                      OnAction=BEGIN
                                 //This functionality was copied from page #5906. Unsupported part was commented. Please check it.
                                 {CurrPage.ServInvLines.FORM.}
                                 InsertStartFee;
                               END;
                                }
      { 1902085804;2 ;Action    ;
                      CaptionML=[ENU=Insert &Travel Fee;
                                 ESP=Insertar gto. &viaje];
                      Image=InsertTravelFee;
                      OnAction=BEGIN
                                 //This functionality was copied from page #5906. Unsupported part was commented. Please check it.
                                 {CurrPage.ServInvLines.FORM.}
                                 InsertTravelFee;
                               END;
                                }
      { 1901742204;2 ;Action    ;
                      CaptionML=[ENU=&Nonstock Items;
                                 ESP=Prods. sin stoc&k];
                      OnAction=BEGIN
                                 //This functionality was copied from page #5906. Unsupported part was commented. Please check it.
                                 {CurrPage.ServInvLines.FORM.}
                                 ShowNonstocksItems;
                               END;
                                }
      { 1907935204;1 ;ActionGroup;
                      CaptionML=[ENU=&Line;
                                 ESP=&L¡nea] }
      { 1901652104;2 ;ActionGroup;
                      CaptionML=[ENU=Item Availability by;
                                 ESP=Disponibilidad prod. por] }
      { 1903099904;3 ;Action    ;
                      CaptionML=[ENU=Period;
                                 ESP=Periodo];
                      OnAction=BEGIN
                                 //This functionality was copied from page #5906. Unsupported part was commented. Please check it.
                                 {CurrPage.ServInvLines.FORM.}
                                 _ItemAvailability(0);
                               END;
                                }
      { 1900546304;3 ;Action    ;
                      CaptionML=[ENU=Variant;
                                 ESP=Variante];
                      OnAction=BEGIN
                                 //This functionality was copied from page #5906. Unsupported part was commented. Please check it.
                                 {CurrPage.ServInvLines.FORM.}
                                 _ItemAvailability(1);
                               END;
                                }
      { 1900296704;3 ;Action    ;
                      CaptionML=[ENU=Location;
                                 ESP=Almac‚n];
                      OnAction=BEGIN
                                 //This functionality was copied from page #5906. Unsupported part was commented. Please check it.
                                 {CurrPage.ServInvLines.FORM.}
                                 _ItemAvailability(2);
                               END;
                                }
      { 1907981204;2 ;Action    ;
                      ShortCutKey=May£s+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 ESP=Dimensiones];
                      Image=Dimensions;
                      OnAction=BEGIN
                                 //This functionality was copied from page #5906. Unsupported part was commented. Please check it.
                                 {CurrPage.ServInvLines.FORM.}
                                 _ShowDimensions;
                               END;
                                }
      { 1900545004;2 ;Action    ;
                      CaptionML=[ENU=Select Item Substitution;
                                 ESP=Seleccionar prod. sustitutivo];
                      Image=SelectItemSubstitution;
                      OnAction=BEGIN
                                 //This functionality was copied from page #5906. Unsupported part was commented. Please check it.
                                 {CurrPage.ServInvLines.FORM.}
                                 SelectItemSubstitution;
                               END;
                                }
      { 1903098604;2 ;Action    ;
                      CaptionML=[ENU=&Fault/Resol. Codes Relationships;
                                 ESP=Relaci¢n c¢ds. de&fecto/resol.];
                      OnAction=BEGIN
                                 //This functionality was copied from page #5906. Unsupported part was commented. Please check it.
                                 {CurrPage.ServInvLines.FORM.}
                                 SelectFaultResolutionCode;
                               END;
                                }
      { 1907838004;2 ;Action    ;
                      ShortCutKey=May£s+Ctrl+I;
                      CaptionML=[ENU=Item &Tracking Lines;
                                 ESP=L¡ns. se&guim. prod.];
                      Image=ItemTrackingLines;
                      OnAction=BEGIN
                                 //This functionality was copied from page #5906. Unsupported part was commented. Please check it.
                                 {CurrPage.ServInvLines.FORM.}
                                 _OpenItemTrackingLines;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 8   ;2   ;Field     ;
                SourceExpr=Type;
                OnValidate=BEGIN
                             TypeOnAfterValidate;
                           END;
                            }

    { 10  ;2   ;Field     ;
                SourceExpr="No.";
                OnValidate=BEGIN
                             NoOnAfterValidate;
                           END;
                            }

    { 44  ;2   ;Field     ;
                SourceExpr="Variant Code";
                Visible=FALSE }

    { 2   ;2   ;Field     ;
                SourceExpr=Nonstock;
                Visible=FALSE }

    { 20  ;2   ;Field     ;
                SourceExpr=Description }

    { 46  ;2   ;Field     ;
                SourceExpr="Work Type Code";
                Visible=FALSE }

    { 86  ;2   ;Field     ;
                SourceExpr=Reserve;
                Visible=FALSE }

    { 56  ;2   ;Field     ;
                SourceExpr="Location Code";
                OnValidate=BEGIN
                             LocationCodeOnAfterValidate;
                           END;
                            }

    { 24  ;2   ;Field     ;
                SourceExpr="Bin Code";
                Visible=FALSE }

    { 4   ;2   ;Field     ;
                SourceExpr="Unit of Measure Code" }

    { 90  ;2   ;Field     ;
                SourceExpr="Unit of Measure";
                Visible=FALSE }

    { 36  ;2   ;Field     ;
                SourceExpr=Quantity;
                OnValidate=BEGIN
                             QuantityOnAfterValidate;
                           END;
                            }

    { 88  ;2   ;Field     ;
                SourceExpr="Reserved Quantity";
                Visible=FALSE }

    { 52  ;2   ;Field     ;
                SourceExpr="Fault Reason Code" }

    { 48  ;2   ;Field     ;
                SourceExpr="Fault Area Code" }

    { 50  ;2   ;Field     ;
                SourceExpr="Symptom Code" }

    { 54  ;2   ;Field     ;
                SourceExpr="Fault Code" }

    { 34  ;2   ;Field     ;
                SourceExpr="Resolution Code" }

    { 74  ;2   ;Field     ;
                SourceExpr="Serv. Price Adjmt. Gr. Code";
                Visible=FALSE }

    { 38  ;2   ;Field     ;
                SourceExpr="Unit Price" }

    { 6   ;2   ;Field     ;
                SourceExpr="Line Discount %" }

    { 12  ;2   ;Field     ;
                SourceExpr="Line Discount Amount" }

    { 42  ;2   ;Field     ;
                SourceExpr="Line Discount Type" }

    { 40  ;2   ;Field     ;
                SourceExpr="Line Amount" }

    { 14  ;2   ;Field     ;
                SourceExpr="Exclude Warranty" }

    { 58  ;2   ;Field     ;
                SourceExpr="Exclude Contract Discount" }

    { 16  ;2   ;Field     ;
                SourceExpr=Warranty }

    { 18  ;2   ;Field     ;
                SourceExpr="Warranty Disc. %";
                Visible=FALSE }

    { 22  ;2   ;Field     ;
                SourceExpr="Contract No." }

    { 62  ;2   ;Field     ;
                SourceExpr="Contract Disc. %";
                Visible=FALSE }

    { 68  ;2   ;Field     ;
                SourceExpr="VAT %";
                Visible=FALSE }

    { 70  ;2   ;Field     ;
                SourceExpr="VAT Base Amount";
                Visible=FALSE }

    { 72  ;2   ;Field     ;
                SourceExpr="Amount Including VAT";
                Visible=FALSE }

    { 78  ;2   ;Field     ;
                SourceExpr="Gen. Bus. Posting Group";
                Visible=FALSE }

    { 80  ;2   ;Field     ;
                SourceExpr="Gen. Prod. Posting Group";
                Visible=FALSE }

    { 82  ;2   ;Field     ;
                SourceExpr="VAT Bus. Posting Group";
                Visible=FALSE }

    { 84  ;2   ;Field     ;
                SourceExpr="VAT Prod. Posting Group";
                Visible=FALSE }

    { 26  ;2   ;Field     ;
                SourceExpr="Posting Date";
                Visible=FALSE;
                OnValidate=BEGIN
                             PostingDateOnAfterValidate;
                           END;
                            }

    { 100 ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 1 Code";
                Visible=FALSE }

    { 102 ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 2 Code";
                Visible=FALSE }

    { 104 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[3];
                CaptionClass='1,2,3';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(3,ShortcutDimCode[3]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(3,ShortcutDimCode[3]);
                         END;
                          }

    { 106 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[4];
                CaptionClass='1,2,4';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(4,ShortcutDimCode[4]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(4,ShortcutDimCode[4]);
                         END;
                          }

    { 108 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[5];
                CaptionClass='1,2,5';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(5,ShortcutDimCode[5]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(5,ShortcutDimCode[5]);
                         END;
                          }

    { 110 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[6];
                CaptionClass='1,2,6';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(6,ShortcutDimCode[6]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(6,ShortcutDimCode[6]);
                         END;
                          }

    { 112 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[7];
                CaptionClass='1,2,7';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(7,ShortcutDimCode[7]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(7,ShortcutDimCode[7]);
                         END;
                          }

    { 28  ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[8];
                CaptionClass='1,2,8';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(8,ShortcutDimCode[8]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(8,ShortcutDimCode[8]);
                         END;
                          }

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=You cannot open the window because %1 is %2 in the %3 table.;ESP=No puede abrir la ventana porque %1 es %2 en la tabla %3.';
      ServMgtSetup@1001 : Record 5911;
      ServHeader@1003 : Record 5900;
      ServInfoPaneMgt@1002 : Codeunit 5972;
      SalesPriceCalcMgt@1006 : Codeunit 7000;
      ServItemLineNo@1005 : Integer;
      ShortcutDimCode@1007 : ARRAY [8] OF Code[20];
      IPItemEnable@19021021 : Boolean INDATASET;
      IPItemButtonEnable@19028307 : Boolean INDATASET;
      IPItemCommentPBEnable@19070585 : Boolean INDATASET;
      IPAvailabilityEnable@19035006 : Boolean INDATASET;
      IPAvailabilityTextboxEnable@19022658 : Boolean INDATASET;
      IPSubstitEnable@19047943 : Boolean INDATASET;
      IPSubstitTextboxEnable@19002061 : Boolean INDATASET;
      IPSalesPriceEnable@19076262 : Boolean INDATASET;
      IPSalesPriceTextboxEnable@19033238 : Boolean INDATASET;
      IPSalesLineDiscEnable@19032437 : Boolean INDATASET;
      IPSalesLineDiscTextboxEnable@19057438 : Boolean INDATASET;

    PROCEDURE SetValues@1(TempServItemLineNo@1000 : Integer);
    BEGIN
      ServItemLineNo := TempServItemLineNo;
      SETFILTER("Service Item Line No.",'=%1|=%2',0,ServItemLineNo);
    END;

    PROCEDURE InsertStartFee@8();
    VAR
      ServOrderMgt@1000 : Codeunit 5900;
    BEGIN
      CLEAR(ServOrderMgt);
      IF ServOrderMgt.InsertServCost(Rec,1,TRUE) THEN
        CurrPage.UPDATE;
    END;

    PROCEDURE InsertTravelFee@6();
    VAR
      ServOrderMgt@1000 : Codeunit 5900;
    BEGIN
      CLEAR(ServOrderMgt);
      IF ServOrderMgt.InsertServCost(Rec,0,TRUE) THEN
        CurrPage.UPDATE;
    END;

    PROCEDURE _InsertExtendedText@19065029(Unconditionally@1000 : Boolean);
    VAR
      TransferExtendedText@1001 : Codeunit 378;
    BEGIN
      IF TransferExtendedText.ServCheckIfAnyExtText(Rec,Unconditionally) THEN BEGIN
        CurrPage.SAVERECORD;
        TransferExtendedText.InsertServExtText(Rec);
      END;
      IF TransferExtendedText.MakeUpdate THEN
        CurrPage.UPDATE;
    END;

    PROCEDURE InsertExtendedText@7(Unconditionally@1000 : Boolean);
    VAR
      TransferExtendedText@1001 : Codeunit 378;
    BEGIN
      IF TransferExtendedText.ServCheckIfAnyExtText(Rec,Unconditionally) THEN BEGIN
        CurrPage.SAVERECORD;
        TransferExtendedText.InsertServExtText(Rec);
      END;
      IF TransferExtendedText.MakeUpdate THEN
        CurrPage.UPDATE;
    END;

    PROCEDURE _ItemAvailability@19008035(AvailabilityType@1000 : 'Date,Variant,Location,Bin');
    BEGIN
      Rec.ItemAvailability(AvailabilityType);
      CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE ItemAvailability@9(AvailabilityType@1000 : 'Date,Variant,Location,Bin');
    BEGIN
      Rec.ItemAvailability(AvailabilityType);
      CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE ShowReservation@12();
    BEGIN
      FIND;
      Rec.ShowReservation;
    END;

    PROCEDURE ShowReservationEntries@10();
    BEGIN
      Rec.ShowReservationEntries(TRUE);
    END;

    PROCEDURE _ShowDimensions@19020529();
    BEGIN
      Rec.ShowDimensions;
    END;

    PROCEDURE ShowDimensions@11();
    BEGIN
      Rec.ShowDimensions;
    END;

    PROCEDURE ShowNonstocksItems@2();
    BEGIN
      Rec.ShowNonstock;
    END;

    PROCEDURE ShowPrices@4();
    BEGIN
      ServHeader.GET("Document Type","Document No.");
      CLEAR(SalesPriceCalcMgt);
      SalesPriceCalcMgt.GetServLinePrice(ServHeader,Rec);
    END;

    PROCEDURE ShowLineDisc@16();
    BEGIN
      ServHeader.GET("Document Type","Document No.");
      CLEAR(SalesPriceCalcMgt);
      SalesPriceCalcMgt.GetServLineLineDisc(ServHeader,Rec);
    END;

    PROCEDURE SelectFaultResolutionCode@15();
    VAR
      ServItemLine@1000 : Record 5901;
      FaultResolutionRelation@1001 : Form 5930;
    BEGIN
      ServMgtSetup.GET;
      CASE ServMgtSetup."Fault Reporting Level" OF
        ServMgtSetup."Fault Reporting Level"::None:
          BEGIN
            ERROR(
              Text000,
              ServMgtSetup.FIELDCAPTION("Fault Reporting Level"),ServMgtSetup."Fault Reporting Level",ServMgtSetup.TABLECAPTION);
          END;
      END;
      ServItemLine.GET("Document Type","Document No.","Service Item Line No.");
      CLEAR(FaultResolutionRelation);
      FaultResolutionRelation.SetDocument(DATABASE::"Service Line","Document Type","Document No.","Line No.");
      FaultResolutionRelation.SetFilters("Symptom Code","Fault Code","Fault Area Code",ServItemLine."Service Item Group Code");
      FaultResolutionRelation.RUNMODAL;
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE _OpenItemTrackingLines@19054693();
    BEGIN
      Rec.OpenItemTrackingLines;
    END;

    PROCEDURE OpenItemTrackingLines@6500();
    BEGIN
      Rec.OpenItemTrackingLines;
    END;

    PROCEDURE InfopaneEnable@5(Value@1000 : Boolean);
    BEGIN
      IPItemEnable := Value;
      IPItemButtonEnable := Value;
      IPItemCommentPBEnable := Value;
      IPAvailabilityEnable := Value;
      IPAvailabilityTextboxEnable := Value;
      IPSubstitEnable := Value;
      IPSubstitTextboxEnable := Value;
      IPSalesPriceEnable := Value;
      IPSalesPriceTextboxEnable := Value;
      IPSalesLineDiscEnable := Value;
      IPSalesLineDiscTextboxEnable := Value;
    END;

    PROCEDURE SelectItemSubstitution@13();
    BEGIN
      ShowItemSub;
      MODIFY;
    END;

    LOCAL PROCEDURE TypeOnAfterValidate@19069045();
    BEGIN
      InfopaneEnable((Type = Type::Item)AND("No." <> ''));
    END;

    LOCAL PROCEDURE NoOnAfterValidate@19066594();
    BEGIN
      InsertExtendedText(FALSE);
      InfopaneEnable((Type = Type::Item)AND("No." <> ''));

      IF (Reserve = Reserve::Always) AND
         ("Outstanding Qty. (Base)" <> 0) AND
         ("No." <> xRec."No.")
      THEN BEGIN
        CurrPage.SAVERECORD;
        AutoReserve;
        CurrPage.UPDATE(FALSE);
      END;
    END;

    LOCAL PROCEDURE LocationCodeOnAfterValidate@19034787();
    BEGIN
      IF (Reserve = Reserve::Always) AND
         ("Outstanding Qty. (Base)" <> 0) AND
         ("Location Code" <> xRec."Location Code")
      THEN BEGIN
        CurrPage.SAVERECORD;
        AutoReserve;
        CurrPage.UPDATE(FALSE);
      END;
    END;

    LOCAL PROCEDURE QuantityOnAfterValidate@19032465();
    VAR
      UpdateIsDone@1000 : Boolean;
    BEGIN
      IF Type = Type::Item THEN
        CASE Reserve OF
          Reserve::Always:
            BEGIN
              CurrPage.SAVERECORD;
              AutoReserve;
              CurrPage.UPDATE(FALSE);
              UpdateIsDone := TRUE;
            END;
          Reserve::Optional:
            IF (Quantity < xRec.Quantity) AND (xRec.Quantity > 0) THEN BEGIN
              CurrPage.SAVERECORD;
              CurrPage.UPDATE(FALSE);
              UpdateIsDone := TRUE;
            END;
        END;

      IF (Type = Type::Item) AND
         ((Quantity <> xRec.Quantity) OR ("Line No." = 0)) AND
         NOT UpdateIsDone
      THEN
        CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE PostingDateOnAfterValidate@19003005();
    BEGIN
      IF (Reserve = Reserve::Always) AND
         ("Outstanding Qty. (Base)" <> 0) AND
         ("Posting Date" <> xRec."Posting Date")
      THEN BEGIN
        CurrPage.SAVERECORD;
        AutoReserve;
        CurrPage.UPDATE(FALSE);
      END;
    END;

    BEGIN
    END.
  }
}
