OBJECT Page 5934 Service Invoice Subform
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVW16.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Lines;
               ESP=L¡neas];
    MultipleNewLines=Yes;
    LinksAllowed=No;
    SourceTable=Table5902;
    DelayedInsert=Yes;
    SourceTableView=WHERE(Document Type=FILTER(Invoice));
    PageType=ListPart;
    AutoSplitKey=Yes;
    OnAfterGetRecord=BEGIN
                       ShowShortcutDimCode(ShortcutDimCode);
                     END;

    OnNewRecord=BEGIN
                  Type := xRec.Type;
                  CLEAR(ShortcutDimCode);
                END;

    OnDeleteRecord=VAR
                     ReserveServLine@1000 : Codeunit 99000842;
                   BEGIN
                     IF (Quantity <> 0) AND ItemExists("No.") THEN BEGIN
                       COMMIT;
                       IF NOT ReserveServLine.DeleteLineConfirm(Rec) THEN
                         EXIT(FALSE);
                       ReserveServLine.DeleteLine(Rec);
                     END;
                   END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1906587504;1 ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 ESP=Acci&ones] }
      { 1903079504;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Get &Price;
                                 ESP=Traer &precio];
                      OnAction=BEGIN
                                 //This functionality was copied from page #5933. Unsupported part was commented. Please check it.
                                 {CurrPage.ServLines.FORM.}
                                 ShowPrices
                               END;
                                }
      { 1907415004;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Get Li&ne Discount;
                                 ESP=Traer descuento l¡&nea];
                      OnAction=BEGIN
                                 //This functionality was copied from page #5933. Unsupported part was commented. Please check it.
                                 {CurrPage.ServLines.FORM.}
                                 ShowLineDisc
                               END;
                                }
      { 1900206204;2 ;Action    ;
                      CaptionML=[ENU=Insert &Ext. Texts;
                                 ESP=Insertar t&extos adicionales];
                      OnAction=BEGIN
                                 //This functionality was copied from page #5933. Unsupported part was commented. Please check it.
                                 {CurrPage.ServLines.FORM.}
                                 _InsertExtendedText(TRUE);
                               END;
                                }
      { 1900545004;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Get &Shipment Lines;
                                 ESP=&Traer l¡neas alb. venta];
                      OnAction=BEGIN
                                 //This functionality was copied from page #5933. Unsupported part was commented. Please check it.
                                 {CurrPage.ServLines.FORM.}
                                 GetShipment;
                               END;
                                }
      { 1907935204;1 ;ActionGroup;
                      CaptionML=[ENU=&Line;
                                 ESP=&L¡nea] }
      { 1905427604;2 ;ActionGroup;
                      CaptionML=[ENU=Item Availability by;
                                 ESP=Disponibilidad prod. por] }
      { 1900639404;3 ;Action    ;
                      CaptionML=[ENU=Period;
                                 ESP=Periodo];
                      OnAction=BEGIN
                                 //This functionality was copied from page #5933. Unsupported part was commented. Please check it.
                                 {CurrPage.ServLines.FORM.}
                                 _ItemAvailability(0);
                               END;
                                }
      { 1904974904;3 ;Action    ;
                      CaptionML=[ENU=Variant;
                                 ESP=Variante];
                      OnAction=BEGIN
                                 //This functionality was copied from page #5933. Unsupported part was commented. Please check it.
                                 {CurrPage.ServLines.FORM.}
                                 _ItemAvailability(1);
                               END;
                                }
      { 1904945204;3 ;Action    ;
                      CaptionML=[ENU=Location;
                                 ESP=Almac‚n];
                      OnAction=BEGIN
                                 //This functionality was copied from page #5933. Unsupported part was commented. Please check it.
                                 {CurrPage.ServLines.FORM.}
                                 _ItemAvailability(2);
                               END;
                                }
      { 1904522204;2 ;Action    ;
                      ShortCutKey=May£s+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 ESP=Dimensiones];
                      Image=Dimensions;
                      OnAction=BEGIN
                                 //This functionality was copied from page #5933. Unsupported part was commented. Please check it.
                                 {CurrPage.ServLines.FORM.}
                                 _ShowDimensions;
                               END;
                                }
      { 1905987604;2 ;Action    ;
                      ShortCutKey=May£s+Ctrl+I;
                      CaptionML=[ENU=Item &Tracking Lines;
                                 ESP=L¡ns. se&guim. prod.];
                      Image=ItemTrackingLines;
                      OnAction=BEGIN
                                 //This functionality was copied from page #5933. Unsupported part was commented. Please check it.
                                 {CurrPage.ServLines.FORM.}
                                 _OpenItemTrackingLines;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                SourceExpr=Type;
                OnValidate=BEGIN
                             TypeOnAfterValidate;
                           END;
                            }

    { 4   ;2   ;Field     ;
                SourceExpr="No.";
                OnValidate=BEGIN
                             ShowShortcutDimCode(ShortcutDimCode);
                               NoOnAfterValidate;
                           END;
                            }

    { 30  ;2   ;Field     ;
                SourceExpr="Variant Code";
                Visible=FALSE }

    { 62  ;2   ;Field     ;
                SourceExpr=Nonstock;
                Visible=FALSE }

    { 14  ;2   ;Field     ;
                SourceExpr="VAT Prod. Posting Group";
                Visible=FALSE }

    { 6   ;2   ;Field     ;
                SourceExpr=Description }

    { 50  ;2   ;Field     ;
                SourceExpr="Return Reason Code";
                Visible=FALSE }

    { 32  ;2   ;Field     ;
                SourceExpr="Location Code" }

    { 76  ;2   ;Field     ;
                SourceExpr="Bin Code";
                Visible=FALSE }

    { 8   ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr=Quantity;
                OnValidate=BEGIN
                             QuantityOnAfterValidate;
                           END;
                            }

    { 34  ;2   ;Field     ;
                SourceExpr="Unit of Measure Code";
                OnValidate=BEGIN
                             UnitofMeasureCodeOnAfterValida;
                           END;
                            }

    { 10  ;2   ;Field     ;
                SourceExpr="Unit of Measure";
                Visible=FALSE }

    { 26  ;2   ;Field     ;
                SourceExpr="Unit Cost (LCY)";
                Visible=FALSE }

    { 12  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Unit Price" }

    { 64  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Line Amount" }

    { 16  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Line Discount %" }

    { 40  ;2   ;Field     ;
                SourceExpr="Line Discount Amount";
                Visible=FALSE }

    { 42  ;2   ;Field     ;
                SourceExpr="Allow Invoice Disc.";
                Visible=FALSE }

    { 80  ;2   ;Field     ;
                SourceExpr="Inv. Discount Amount";
                Visible=FALSE }

    { 74  ;2   ;Field     ;
                SourceExpr="Serv. Price Adjmt. Gr. Code";
                Visible=FALSE }

    { 18  ;2   ;Field     ;
                SourceExpr="Contract No." }

    { 72  ;2   ;Field     ;
                SourceExpr="Service Item No.";
                Visible=FALSE }

    { 78  ;2   ;Field     ;
                SourceExpr="Appl.-to Service Entry";
                Visible=TRUE }

    { 102 ;2   ;Field     ;
                SourceExpr="Work Type Code";
                Visible=FALSE }

    { 48  ;2   ;Field     ;
                SourceExpr="Appl.-to Item Entry";
                Visible=FALSE }

    { 20  ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 1 Code";
                Visible=FALSE }

    { 22  ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 2 Code";
                Visible=FALSE }

    { 300 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[3];
                CaptionClass='1,2,3';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(3,ShortcutDimCode[3]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(3,ShortcutDimCode[3]);
                         END;
                          }

    { 302 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[4];
                CaptionClass='1,2,4';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(4,ShortcutDimCode[4]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(4,ShortcutDimCode[4]);
                         END;
                          }

    { 304 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[5];
                CaptionClass='1,2,5';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(5,ShortcutDimCode[5]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(5,ShortcutDimCode[5]);
                         END;
                          }

    { 306 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[6];
                CaptionClass='1,2,6';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(6,ShortcutDimCode[6]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(6,ShortcutDimCode[6]);
                         END;
                          }

    { 308 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[7];
                CaptionClass='1,2,7';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(7,ShortcutDimCode[7]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(7,ShortcutDimCode[7]);
                         END;
                          }

    { 310 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[8];
                CaptionClass='1,2,8';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(8,ShortcutDimCode[8]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(8,ShortcutDimCode[8]);
                         END;
                          }

  }
  CODE
  {
    VAR
      ServHeader@1000 : Record 5900;
      TransferExtendedText@1003 : Codeunit 378;
      SalesPriceCalcMgt@1005 : Codeunit 7000;
      ServInfoPaneMgt@1001 : Codeunit 5972;
      ShortcutDimCode@1004 : ARRAY [8] OF Code[20];
      Text000@1002 : TextConst 'ENU=This service invoice was created from the service contract. If you want to get shipment lines, you must create another service invoice.;ESP=Esta factura de servicio se cre¢ desde el contrato de servicio. Si desea obtener l¡neas de env¡o, debe crear otra factura de servicio.';
      IPItemEnable@19021021 : Boolean INDATASET;
      IPItemButtonEnable@19028307 : Boolean INDATASET;
      IPItemCommentPBEnable@19070585 : Boolean INDATASET;
      IPAvailabilityEnable@19035006 : Boolean INDATASET;
      IPAvailabilityTextboxEnable@19022658 : Boolean INDATASET;
      IPSubstitEnable@19047943 : Boolean INDATASET;
      IPSubstitTextboxEnable@19002061 : Boolean INDATASET;
      IPSalesPriceEnable@19076262 : Boolean INDATASET;
      IPSalesPriceTextboxEnable@19033238 : Boolean INDATASET;
      IPSalesLineDiscEnable@19032437 : Boolean INDATASET;
      IPSalesLineDiscTextboxEnable@19057438 : Boolean INDATASET;

    PROCEDURE ApproveCalcInvDisc@1();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Service-Disc. (Yes/No)",Rec);
    END;

    PROCEDURE CalcInvDisc@8();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Service-Calc. Discount",Rec);
    END;

    PROCEDURE GetShipment@4();
    BEGIN
      ServHeader.GET("Document Type","Document No.");
      IF ServHeader."Contract No." <> '' THEN
        ERROR(Text000);
      CODEUNIT.RUN(CODEUNIT::"Service-Get Shipment",Rec);
    END;

    PROCEDURE _InsertExtendedText@19065029(Unconditionally@1000 : Boolean);
    BEGIN
      IF TransferExtendedText.ServCheckIfAnyExtText(Rec,Unconditionally) THEN BEGIN
        CurrPage.SAVERECORD;
        TransferExtendedText.InsertServExtText(Rec);
      END;
      IF TransferExtendedText.MakeUpdate THEN
        UpdateForm(TRUE);
    END;

    PROCEDURE InsertExtendedText@7(Unconditionally@1000 : Boolean);
    BEGIN
      IF TransferExtendedText.ServCheckIfAnyExtText(Rec,Unconditionally) THEN BEGIN
        CurrPage.SAVERECORD;
        TransferExtendedText.InsertServExtText(Rec);
      END;
      IF TransferExtendedText.MakeUpdate THEN
        UpdateForm(TRUE);
    END;

    PROCEDURE _ItemAvailability@19008035(AvailabilityType@1000 : 'Date,Variant,Location,Bin');
    BEGIN
      Rec.ItemAvailability(AvailabilityType);
    END;

    PROCEDURE ItemAvailability@9(AvailabilityType@1000 : 'Date,Variant,Location,Bin');
    BEGIN
      Rec.ItemAvailability(AvailabilityType);
    END;

    PROCEDURE _ShowDimensions@19020529();
    BEGIN
      Rec.ShowDimensions;
    END;

    PROCEDURE ShowDimensions@11();
    BEGIN
      Rec.ShowDimensions;
    END;

    PROCEDURE _OpenItemTrackingLines@19054693();
    BEGIN
      Rec.OpenItemTrackingLines;
    END;

    PROCEDURE OpenItemTrackingLines@6500();
    BEGIN
      Rec.OpenItemTrackingLines;
    END;

    PROCEDURE UpdateForm@12(SetSaveRecord@1000 : Boolean);
    BEGIN
      CurrPage.UPDATE(SetSaveRecord);
    END;

    PROCEDURE ShowPrices@15();
    BEGIN
      ServHeader.GET("Document Type","Document No.");
      CLEAR(SalesPriceCalcMgt);
      SalesPriceCalcMgt.GetServLinePrice(ServHeader,Rec);
    END;

    PROCEDURE ShowLineDisc@16();
    BEGIN
      ServHeader.GET("Document Type","Document No.");
      CLEAR(SalesPriceCalcMgt);
      SalesPriceCalcMgt.GetServLineLineDisc(ServHeader,Rec);
    END;

    PROCEDURE InfopaneEnable@5(Value@1000 : Boolean);
    BEGIN
      IPItemEnable := Value;
      IPItemButtonEnable := Value;
      IPItemCommentPBEnable := Value;
      IPAvailabilityEnable := Value;
      IPAvailabilityTextboxEnable := Value;
      IPSubstitEnable := Value;
      IPSubstitTextboxEnable := Value;
      IPSalesPriceEnable := Value;
      IPSalesPriceTextboxEnable := Value;
      IPSalesLineDiscEnable := Value;
      IPSalesLineDiscTextboxEnable := Value;
    END;

    LOCAL PROCEDURE TypeOnAfterValidate@19069045();
    BEGIN
      InfopaneEnable((Type = Type::Item)AND("No." <> ''));
    END;

    LOCAL PROCEDURE NoOnAfterValidate@19066594();
    BEGIN
      InsertExtendedText(FALSE);
      InfopaneEnable((Type = Type::Item)AND("No." <> ''));
    END;

    LOCAL PROCEDURE QuantityOnAfterValidate@19032465();
    BEGIN
      IF Reserve = Reserve::Always THEN BEGIN
        CurrPage.SAVERECORD;
        AutoReserve;
      END;
    END;

    LOCAL PROCEDURE UnitofMeasureCodeOnAfterValida@19057939();
    BEGIN
      IF Reserve = Reserve::Always THEN BEGIN
        CurrPage.SAVERECORD;
        AutoReserve;
      END;
    END;

    BEGIN
    END.
  }
}
