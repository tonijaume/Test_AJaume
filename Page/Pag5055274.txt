OBJECT Page 5055274 Liq. Account Schedule Overview
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=LIQEM6.00.01;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Liq. Acc. Schedule Overview;
               ESP=Panorama esquema ctas. liq.];
    InsertAllowed=No;
    DeleteAllowed=No;
    LinksAllowed=No;
    SourceTable=Table5055262;
    DataCaptionExpr=CurrentSchedName + ' - ' + CurrentColumnName;
    PageType=Card;
    OnOpenPage=BEGIN
                 GLSetup.GET;
                 IF NewCurrentSchedName <> '' THEN
                   CurrentSchedName := NewCurrentSchedName;
                 IF CurrentSchedName = '' THEN
                   CurrentSchedName := Text1140000;
                 IF NewCurrentColumnName <> '' THEN
                   CurrentColumnName := NewCurrentColumnName;
                 IF CurrentColumnName = '' THEN
                   CurrentColumnName := Text1140000;

                 IF LiqAccSchedName.GET(CurrentSchedName) THEN
                   IF LiqAccSchedName."Liq. Analysis View Name" <> '' THEN
                     LiquidityAnalysisView.GET(LiqAccSchedName."Liq. Analysis View Name")
                   ELSE BEGIN
                     CLEAR(LiquidityAnalysisView);
                     LiquidityAnalysisView."Dimension 1 Code" := GLSetup."Global Dimension 1 Code";
                     LiquidityAnalysisView."Dimension 2 Code" := GLSetup."Global Dimension 2 Code";
                   END;

                 FindPeriod('');

                 MATRIX_CaptionFieldNo := 4;
                 MATRIX_GenerateColumnCaptions(MATRIX_SetWanted::Initial);
               END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1140000 ;1   ;Action    ;
                      CaptionML=[ENU=&Show Matrix;
                                 ESP=&Mostrar matriz];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ShowMatrix;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 MatrixForm@1080 : Form 36841;
                               BEGIN
                                 CLEAR(MatrixForm);

                                 MatrixForm.SETTABLEVIEW(Rec);
                                 MatrixForm.Load(MATRIX_CaptionSet,MATRIX_MatrixRecords,ARRAYLEN(MATRIX_CaptionSet),
                                                       LiqAccSchedManagement,LiqAccSchedName,CurrentSchedName
                                   ,CurrentColumnName,ShowError);
                                 MatrixForm.SETTABLEVIEW(Rec);
                                 MatrixForm.RUNMODAL;
                               END;
                                }
      { 1140016 ;1   ;Action    ;
                      CaptionML=[ENU=Next Set;
                                 ESP=Conjunto siguiente];
                      ToolTipML=ENU=Next Set;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextSet;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MATRIX_GenerateColumnCaptions(MATRIX_SetWanted::Next);
                               END;
                                }
      { 1140017 ;1   ;Action    ;
                      CaptionML=[ENU=Previous Set;
                                 ESP=Conjunto anterior];
                      ToolTipML=ENU=Previous Set;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousSet;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MATRIX_GenerateColumnCaptions(MATRIX_SetWanted::Previus);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1140007;1;Group     ;
                CaptionML=[ENU=General;
                           ESP=General] }

    { 1140008;2;Field     ;
                Lookup=Yes;
                CaptionML=[ENU=Liq. Account Schedule Name;
                           ESP=Nombre esq. cuentas liq.];
                SourceExpr=CurrentSchedName;
                LookupFormID=Liq. Account Schedule Names;
                OnValidate=BEGIN
                             LiqAccSchedManagement.CheckName(CurrentSchedName);
                               CurrentSchedNameOnAfterValidat;
                           END;

                OnLookup=BEGIN
                           EXIT(LiqAccSchedManagement.LookupName(CurrentSchedName,Text));
                         END;
                          }

    { 1140010;2;Field     ;
                Lookup=Yes;
                CaptionML=[ENU=Column Layout Name;
                           ESP=Nombre plantilla columna];
                SourceExpr=CurrentColumnName;
                TableRelation="Liq. Acc. Schedule Layout Name".Name;
                OnValidate=BEGIN
                             LiqAccSchedManagement.CheckColumnName(CurrentColumnName);
                             MATRIX_GenerateColumnCaptions(MATRIX_SetWanted::Initial);
                           END;

                OnLookup=BEGIN
                           EXIT(LiqAccSchedManagement.LookupColumnName(CurrentColumnName,Text));
                         END;
                          }

    { 1903121901;1;Group  ;
                CaptionML=[ENU=Options;
                           ESP=Opciones] }

    { 1140013;2;Field     ;
                Name=Dim1Filter;
                SourceExpr=Dim1Filter;
                CaptionClass=FormGetCaptionClass(1);
                OnValidate=BEGIN
                             Dim1FilterOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           EXIT(FormLookUpDimFilter(LiquidityAnalysisView."Dimension 1 Code",Text));
                         END;
                          }

    { 1140020;2;Field     ;
                Name=Dim2Filter;
                SourceExpr=Dim2Filter;
                CaptionClass=FormGetCaptionClass(2);
                OnValidate=BEGIN
                             Dim2FilterOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           EXIT(FormLookUpDimFilter(LiquidityAnalysisView."Dimension 2 Code",Text));
                         END;
                          }

    { 1140015;2;Field     ;
                Name=Dim3Filter;
                SourceExpr=Dim3Filter;
                CaptionClass=FormGetCaptionClass(3);
                OnValidate=BEGIN
                             Dim3FilterOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           EXIT(FormLookUpDimFilter(LiquidityAnalysisView."Dimension 3 Code",Text));
                         END;
                          }

    { 1140014;2;Field     ;
                Name=Dim4Filter;
                SourceExpr=Dim4Filter;
                CaptionClass=FormGetCaptionClass(4);
                OnValidate=BEGIN
                             Dim4FilterOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           EXIT(FormLookUpDimFilter(LiquidityAnalysisView."Dimension 4 Code",Text));
                         END;
                          }

    { 1140030;2;Field     ;
                SourceExpr=DateFilter;
                CaptionClass=FormGetCaptionClass(5);
                OnValidate=BEGIN
                             DateFilterOnAfterValidate;
                           END;
                            }

    { 1140029;2;Field     ;
                SourceExpr=LiqFilter;
                CaptionClass=FormGetCaptionClass(6);
                TableRelation=Liquidity;
                OnValidate=BEGIN
                             LiqFilterOnAfterValidate;
                           END;
                            }

    { 1140001;2;Field     ;
                CaptionML=[ENU=Show Error;
                           ESP=Mostrar error];
                OptionCaptionML=[ENU=None,Division by Zero,Period Error,Both;
                                 ESP=Ninguno,Divisi¢n entre cero,Error Periodo,Ambos];
                SourceExpr=ShowError }

    { 1906098301;1;Group  ;
                CaptionML=[ENU=Matrix Options;
                           ESP=Opciones matriz] }

    { 1140004;2;Field     ;
                CaptionML=[ENU=View by;
                           ESP=Ver por];
                OptionCaptionML=[ENU=Day,Week,Month,Quarter,Year,Accounting Period;
                                 ESP=D¡a,Semana,Mes,Trimestre,A¤o,Periodo contable];
                SourceExpr=PeriodType;
                OnValidate=BEGIN
                             FindPeriod('');
                           END;
                            }

    { 1140006;2;Field     ;
                CaptionML=[ENU=Column Set;
                           ESP=Conjunto de columnas];
                SourceExpr=MATRIX_CaptionRange;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      Text1140000@1140000 : TextConst 'ENU=DEFAULT;ESP=GENERICO';
      Text1140005@1140005 : TextConst 'ENU=1,6,,Dimension %1 Filter;ESP=1,6,,Filtro dimensi¢n %1';
      LiqAccSchedName@1140007 : Record 5055261;
      LiquidityAnalysisView@1140008 : Record 5055269;
      GLSetup@1140009 : Record 98;
      MATRIX_MatrixRecords@1140018 : ARRAY [32] OF Record 5055264;
      MATRIX_MatrixRecord@1140019 : TEMPORARY Record 5055264;
      LiqAccSchedManagement@1140010 : Codeunit 5055260;
      CurrentSchedName@1140011 : Code[10];
      CurrentColumnName@1140012 : Code[10];
      NewCurrentSchedName@1140013 : Code[10];
      NewCurrentColumnName@1140014 : Code[10];
      Dim1Filter@1140001 : Code[20];
      Dim2Filter@1140002 : Code[20];
      Dim3Filter@1140003 : Code[20];
      Dim4Filter@1140004 : Code[20];
      LiqFilter@1140026 : Code[20];
      ShowError@1140015 : 'None,Division by Zero,Period Error,Both';
      PeriodType@1140016 : 'Day,Week,Month,Quarter,Year,Accounting Period';
      MATRIX_SetWanted@1140020 : 'Initial,Previus,Same,Next';
      MATRIX_CaptionSet@1140021 : ARRAY [32] OF Text[1024];
      MATRIX_CaptionRange@1140022 : Text[1024];
      MATRIX_PrimKeyFirstCaptionInCu@1140023 : Text[1024];
      ColumnValue@1140017 : Decimal;
      MATRIX_CaptionFieldNo@1140024 : Integer;
      MATRIX_CurrSetLength@1140025 : Integer;
      DateFilter@1140006 : Date;

    PROCEDURE MATRIX_GenerateColumnCaptions@1096(SetWanted@1000 : 'Initial,Previus,Same,Next');
    VAR
      MatrixMgt@1001 : Codeunit 9200;
      RecRef@1002 : RecordRef;
      MatrixRecord2@1003 : Record 334;
      CurrentMatrixRecordOrdinal@1004 : Integer;
    BEGIN
      CLEAR(MATRIX_CaptionSet);
      CurrentMatrixRecordOrdinal := 1;
      CLEAR(MATRIX_MatrixRecords);

      LiqAccSchedManagement.CopyColumnsToTemp(CurrentColumnName,MATRIX_MatrixRecord);
      LiqAccSchedManagement.OpenSchedule(CurrentSchedName,Rec);
      LiqAccSchedManagement.OpenColumns(CurrentColumnName,MATRIX_MatrixRecord);
      LiqAccSchedManagement.CheckAnalysisView(CurrentSchedName,CurrentColumnName,TRUE);

      RecRef.GETTABLE(MATRIX_MatrixRecord);
      RecRef.SETTABLE(MATRIX_MatrixRecord);

      MatrixMgt.GenerateMatrixData(RecRef,SetWanted,ARRAYLEN(MATRIX_CaptionSet),MATRIX_CaptionFieldNo,MATRIX_PrimKeyFirstCaptionInCu,
                                     MATRIX_CaptionSet,MATRIX_CaptionRange,MATRIX_CurrSetLength);
      REPEAT
        MATRIX_MatrixRecords[CurrentMatrixRecordOrdinal].COPY(MATRIX_MatrixRecord);
        MATRIX_CaptionSet[CurrentMatrixRecordOrdinal] := MATRIX_MatrixRecord."Column Header";
        CurrentMatrixRecordOrdinal := CurrentMatrixRecordOrdinal + 1;
      UNTIL (CurrentMatrixRecordOrdinal = ARRAYLEN(MATRIX_MatrixRecords)) OR (MATRIX_MatrixRecord.NEXT <> 1);
    END;

    PROCEDURE SetAccSchedName@1140000(NewAccSchedName@1140000 : Code[10]);
    VAR
      LiqAccSchedName@1140001 : Record 5055261;
    BEGIN
      NewCurrentSchedName := NewAccSchedName;
      IF LiqAccSchedName.GET(NewCurrentSchedName) THEN
        IF LiqAccSchedName."Default Column Layout" <> '' THEN
          NewCurrentColumnName := LiqAccSchedName."Default Column Layout";
    END;

    LOCAL PROCEDURE FindPeriod@1140001(SearchText@1140000 : Code[10]);
    VAR
      Calendar@1140001 : Record 2000000007;
      PeriodFormMgt@1002 : Codeunit 359;
    BEGIN
      IF GETFILTER("Date Filter") <> '' THEN BEGIN

        Calendar.SETFILTER("Period Start",GETFILTER("Date Filter"));
        IF NOT PeriodFormMgt.FindDate('+',Calendar,PeriodType) THEN
          PeriodFormMgt.FindDate('+',Calendar,PeriodType::Day);
        Calendar.SETRANGE("Period Start");
      END;
      PeriodFormMgt.FindDate(SearchText,Calendar,PeriodType);
      SETRANGE("Date Filter",Calendar."Period Start",Calendar."Period End");
      IF GETRANGEMIN("Date Filter") = GETRANGEMAX("Date Filter") THEN
        SETRANGE("Date Filter",GETRANGEMIN("Date Filter"));
    END;

    LOCAL PROCEDURE FormLookUpDimFilter@1140002(Dim@1140000 : Code[20];VAR Text@1140001 : Text[1024]) : Boolean;
    VAR
      DimVal@1140002 : Record 349;
      DimValList@1140003 : Form 560;
    BEGIN
      IF Dim = '' THEN
        EXIT(FALSE);
      DimValList.LOOKUPMODE(TRUE);
      DimVal.SETRANGE("Dimension Code",Dim);
      DimValList.SETTABLEVIEW(DimVal);
      IF DimValList.RUNMODAL = ACTION::LookupOK THEN BEGIN
        DimValList.GETRECORD(DimVal);
        Text := DimValList.GetSelectionFilter;
        EXIT(TRUE);
      END ELSE
        EXIT(FALSE)
    END;

    LOCAL PROCEDURE FormGetCaptionClass@1140003(DimNo@1140000 : Integer) : Text[250];
    BEGIN
      CASE DimNo OF
        1:
          BEGIN
            IF LiquidityAnalysisView."Dimension 1 Code" <> '' THEN
              EXIT('1,6,' + LiquidityAnalysisView."Dimension 1 Code")
            ELSE
              EXIT(STRSUBSTNO(Text1140005,DimNo));
          END;
        2:
          BEGIN
            IF LiquidityAnalysisView."Dimension 2 Code" <> '' THEN
              EXIT('1,6,' + LiquidityAnalysisView."Dimension 2 Code")
            ELSE
              EXIT(STRSUBSTNO(Text1140005,DimNo));
          END;
        3:
          BEGIN
            IF LiquidityAnalysisView."Dimension 3 Code" <> '' THEN
              EXIT('1,6,' + LiquidityAnalysisView."Dimension 3 Code")
            ELSE
              EXIT(STRSUBSTNO(Text1140005,DimNo));
          END;
        4:
          BEGIN
            IF LiquidityAnalysisView."Dimension 4 Code" <> '' THEN
              EXIT('1,6,' + LiquidityAnalysisView."Dimension 4 Code")
            ELSE
              EXIT(STRSUBSTNO(Text1140005,DimNo));
          END;
        5:
          EXIT(FIELDCAPTION("Date Filter"));
        6:
          EXIT(FIELDCAPTION("Liquidity Filter"));
      END;
    END;

    LOCAL PROCEDURE CurrentSchedNameOnAfterValidat@19053875();
    VAR
      LiqAccSchedName@1140000 : Record 5055261;
      PrevAnalysisView@1140001 : Record 5055269;
    BEGIN
      CurrPage.SAVERECORD;
      LiqAccSchedManagement.SetName(CurrentSchedName,Rec);

      IF LiqAccSchedName.GET(CurrentSchedName) THEN
        IF (LiqAccSchedName."Default Column Layout" <> '') AND
           (CurrentColumnName <> LiqAccSchedName."Default Column Layout")
        THEN BEGIN
          CurrentColumnName := LiqAccSchedName."Default Column Layout";
          LiqAccSchedManagement.CopyColumnsToTemp(CurrentColumnName,MATRIX_MatrixRecord);
          LiqAccSchedManagement.SetColumnName(CurrentColumnName,MATRIX_MatrixRecord);
        END;
      MATRIX_GenerateColumnCaptions(MATRIX_SetWanted::Initial);
      LiqAccSchedManagement.CheckAnalysisView(CurrentSchedName,CurrentColumnName,TRUE);

      IF LiqAccSchedName."Liq. Analysis View Name" <> LiquidityAnalysisView.Code THEN BEGIN
        PrevAnalysisView := LiquidityAnalysisView;
        IF LiqAccSchedName."Liq. Analysis View Name" <> '' THEN
          LiquidityAnalysisView.GET(LiqAccSchedName."Liq. Analysis View Name")
        ELSE BEGIN
          CLEAR(LiquidityAnalysisView);
          LiquidityAnalysisView."Dimension 1 Code" := GLSetup."Global Dimension 1 Code";
          LiquidityAnalysisView."Dimension 2 Code" := GLSetup."Global Dimension 2 Code";
        END;
        IF PrevAnalysisView."Dimension 1 Code" <> LiquidityAnalysisView."Dimension 1 Code" THEN
          SETRANGE("Dimension 1 Filter");
        IF PrevAnalysisView."Dimension 2 Code" <> LiquidityAnalysisView."Dimension 2 Code" THEN
          SETRANGE("Dimension 2 Filter");
        IF PrevAnalysisView."Dimension 3 Code" <> LiquidityAnalysisView."Dimension 3 Code" THEN
          SETRANGE("Dimension 3 Filter");
        IF PrevAnalysisView."Dimension 4 Code" <> LiquidityAnalysisView."Dimension 4 Code" THEN
          SETRANGE("Dimension 4 Filter");
      END;

      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE Dim1FilterOnAfterValidate@19005240();
    BEGIN
      CurrPage.UPDATE;
      SETFILTER("Dimension 1 Filter",Dim1Filter);
    END;

    LOCAL PROCEDURE Dim4FilterOnAfterValidate@19067462();
    BEGIN
      CurrPage.UPDATE;
      SETFILTER("Dimension 4 Filter",Dim4Filter);
    END;

    LOCAL PROCEDURE Dim3FilterOnAfterValidate@19064950();
    BEGIN
      CurrPage.UPDATE;
      SETFILTER("Dimension 3 Filter",Dim3Filter);
    END;

    LOCAL PROCEDURE Dim2FilterOnAfterValidate@19005475();
    BEGIN
      CurrPage.UPDATE;
      SETFILTER("Dimension 2 Filter",Dim2Filter);
    END;

    LOCAL PROCEDURE DateFilterOnAfterValidate@19006009();
    BEGIN
      CurrPage.UPDATE;
      SETFILTER("Date Filter",'%1',DateFilter);
    END;

    LOCAL PROCEDURE LiqFilterOnAfterValidate@19035036();
    BEGIN
      CurrPage.UPDATE;
      SETFILTER("Liquidity Filter",LiqFilter);
    END;

    BEGIN
    END.
  }
}
