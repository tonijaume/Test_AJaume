OBJECT Page 5510 Production Journal
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=NAVW16.00.01;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Production Journal;
               ESP=Diario de producci¢n];
    InsertAllowed=No;
    SourceTable=Table83;
    DataCaptionExpr=GetCaption;
    PageType=Worksheet;
    OnInit=BEGIN
             "Applies-from EntryEditable" := TRUE;
             QuantityEditable := TRUE;
             "Output QuantityEditable" := TRUE;
             "Scrap QuantityEditable" := TRUE;
             "Scrap CodeEditable" := TRUE;
             FinishedEditable := TRUE;
             "Work Shift CodeEditable" := TRUE;
             "Run TimeEditable" := TRUE;
             "Setup TimeEditable" := TRUE;
             CapUnitofMeasureCodeEditable := TRUE;
             "Concurrent CapacityEditable" := TRUE;
             "Ending TimeEditable" := TRUE;
             "Starting TimeEditable" := TRUE;
           END;

    OnOpenPage=BEGIN
                 SetFilterGroup;

                 IF ProdOrderLineNo <> 0 THEN
                   ProdOrderLine.GET(ProdOrder.Status,ProdOrder."No.",ProdOrderLineNo);
               END;

    OnAfterGetRecord=BEGIN
                       ActualScrapQtyHideValue := FALSE;
                       ActualOutputQtyHideValue := FALSE;
                       ActualRunTimeHideValue := FALSE;
                       ActualSetupTimeHideValue := FALSE;
                       ActualConsumpQtyHideValue := FALSE;
                       "Scrap QuantityHideValue" := FALSE;
                       "Output QuantityHideValue" := FALSE;
                       "Run TimeHideValue" := FALSE;
                       "Setup TimeHideValue" := FALSE;
                       QuantityHideValue := FALSE;
                       DescriptionIndent := 0;
                       ShowShortcutDimCode(ShortcutDimCode);
                       OnAfterGetCurrRecord;
                       DescriptionOnFormat;
                       QuantityOnFormat;
                       SetupTimeOnFormat;
                       RunTimeOnFormat;
                       OutputQuantityOnFormat;
                       ScrapQuantityOnFormat;
                       ActualConsumpQtyOnFormat;
                       ActualSetupTimeOnFormat;
                       ActualRunTimeOnFormat;
                       ActualOutputQtyOnFormat;
                       ActualScrapQtyOnFormat;
                     END;

    OnNewRecord=BEGIN
                  OnAfterGetCurrRecord;
                END;

    OnModifyRecord=BEGIN
                     "Changed by User" := TRUE;
                   END;

    OnDeleteRecord=VAR
                     ReserveItemJnlLine@1000 : Codeunit 99000835;
                   BEGIN
                     COMMIT;
                     IF NOT ReserveItemJnlLine.DeleteLineConfirm(Rec) THEN
                       EXIT(FALSE);
                     ReserveItemJnlLine.DeleteLine(Rec);
                   END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 35      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Line;
                                 ESP=&L¡nea] }
      { 44      ;2   ;Action    ;
                      ShortCutKey=May£s+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 ESP=Dimensiones];
                      RunObject=Page 545;
                      RunFormLink=Table ID=CONST(83),
                                  Journal Template Name=FIELD(Journal Template Name),
                                  Journal Batch Name=FIELD(Journal Batch Name),
                                  Journal Line No.=FIELD(Line No.);
                      Image=Dimensions }
      { 45      ;2   ;Action    ;
                      ShortCutKey=May£s+Ctrl+I;
                      CaptionML=[ENU=Item &Tracking Lines;
                                 ESP=L¡ns. &seguim. prod.];
                      Image=ItemTrackingLines;
                      OnAction=BEGIN
                                 OpenItemTrackingLines(FALSE);
                               END;
                                }
      { 46      ;2   ;Action    ;
                      CaptionML=[ENU=Bin Contents;
                                 ESP=Contenido ubicaci¢n];
                      RunObject=Page 7305;
                      RunFormView=SORTING(Location Code,Bin Code,Item No.,Variant Code);
                      RunFormLink=Location Code=FIELD(Location Code),
                                  Item No.=FIELD(Item No.),
                                  Variant Code=FIELD(Variant Code);
                      Image=BinContent }
      { 18      ;1   ;ActionGroup;
                      CaptionML=[ENU=Pro&d. Order;
                                 ESP=Or&d. prod.] }
      { 19      ;2   ;Action    ;
                      ShortCutKey=May£s+F7;
                      CaptionML=[ENU=Card;
                                 ESP=Ficha];
                      RunObject=Page 99000831;
                      RunFormLink=No.=FIELD(Prod. Order No.);
                      Image=EditLines }
      { 20      ;2   ;ActionGroup;
                      CaptionML=[ENU=Ledger E&ntries;
                                 ESP=&Movimientos] }
      { 21      ;3   ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=[ENU=Item Ledger E&ntries;
                                 ESP=Movs. &producto];
                      RunObject=Page 38;
                      RunFormView=SORTING(Prod. Order No.);
                      RunFormLink=Prod. Order No.=FIELD(Prod. Order No.);
                      Image=ItemLedger }
      { 22      ;3   ;Action    ;
                      CaptionML=[ENU=Capacity Ledger Entries;
                                 ESP=Movs. capacidad];
                      RunObject=Page 5832;
                      RunFormView=SORTING(Prod. Order No.);
                      RunFormLink=Prod. Order No.=FIELD(Prod. Order No.) }
      { 25      ;3   ;Action    ;
                      CaptionML=[ENU=Value Entries;
                                 ESP=Movs. valor];
                      RunObject=Page 5802;
                      RunFormView=SORTING(Prod. Order No.);
                      RunFormLink=Prod. Order No.=FIELD(Prod. Order No.);
                      Image=ValueLedger }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 29      ;1   ;ActionGroup;
                      CaptionML=[ENU=P&osting;
                                 ESP=&Registro] }
      { 41      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Test Report;
                                 ESP=Test];
                      Image=TestReport;
                      OnAction=BEGIN
                                 ReportPrint.PrintItemJnlLine(Rec);
                               END;
                                }
      { 56      ;2   ;Action    ;
                      ShortCutKey=F9;
                      CaptionML=[ENU=P&ost;
                                 ESP=&Registrar];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Post;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 DeleteRecTemp;

                                 CODEUNIT.RUN(CODEUNIT::"Item Jnl.-Post",Rec);

                                 InsertTempRec;

                                 SetFilterGroup;
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 57      ;2   ;Action    ;
                      ShortCutKey=May£s+F9;
                      CaptionML=[ENU=Post and &Print;
                                 ESP=Registrar e &imprimir];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostPrint;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 DeleteRecTemp;

                                 CODEUNIT.RUN(CODEUNIT::"Item Jnl.-Post+Print",Rec);

                                 InsertTempRec;

                                 SetFilterGroup;
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 31      ;1   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=&Print;
                                 ESP=&Imprimir];
                      Promoted=Yes;
                      Image=Print;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ItemJnlLine@1001 : Record 83;
                               BEGIN
                                 ItemJnlLine.COPY(Rec);
                                 ItemJnlLine.SETRANGE("Journal Template Name","Journal Template Name");
                                 ItemJnlLine.SETRANGE("Journal Batch Name","Journal Batch Name");
                                 REPORT.RUNMODAL(REPORT::"Inventory Movement",TRUE,TRUE,ItemJnlLine);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 61  ;1   ;Group     ;
                CaptionML=[ENU=General;
                           ESP=General] }

    { 48  ;2   ;Field     ;
                CaptionML=[ENU=Posting Date;
                           ESP=Fecha registro];
                SourceExpr=PostingDate;
                OnValidate=BEGIN
                             PostingDateOnAfterValidate;
                           END;
                            }

    { 60  ;2   ;Field     ;
                CaptionML=[ENU=Flushing Method Filter;
                           ESP=Filtrar por m‚todo de baja];
                OptionCaptionML=[ENU=Manual,Forward,Backward,Pick + Forward,Pick + Backward,All Methods;
                                 ESP=Manual,Adelante,Atr s,Seleccionar y adelante,Seleccionar y atr s,Todos];
                SourceExpr=FlushingFilter;
                OnValidate=BEGIN
                             FlushingFilterOnAfterValidate;
                           END;
                            }

    { 1   ;1   ;Group     ;
                IndentationColumnName=DescriptionIndent;
                IndentationControls=Description;
                GroupType=Repeater }

    { 43  ;2   ;Field     ;
                SourceExpr="Entry Type";
                Editable=FALSE }

    { 38  ;2   ;Field     ;
                SourceExpr="Posting Date";
                Visible=FALSE }

    { 16  ;2   ;Field     ;
                SourceExpr="Prod. Order Line No.";
                Visible=FALSE;
                Editable=FALSE }

    { 2   ;2   ;Field     ;
                SourceExpr="Document No.";
                Visible=FALSE;
                Editable=FALSE }

    { 14  ;2   ;Field     ;
                SourceExpr="Item No.";
                Editable=FALSE;
                OnLookup=BEGIN
                           IF Item.GET("Item No.") THEN
                             FORM.RUNMODAL(FORM::"Item List",Item);
                         END;
                          }

    { 64  ;2   ;Field     ;
                SourceExpr="Operation No.";
                Editable=FALSE }

    { 80  ;2   ;Field     ;
                SourceExpr=Type;
                Visible=TRUE }

    { 39  ;2   ;Field     ;
                SourceExpr="Flushing Method";
                Visible=FALSE }

    { 82  ;2   ;Field     ;
                SourceExpr="No." }

    { 5   ;2   ;Field     ;
                SourceExpr="Variant Code";
                Visible=FALSE }

    { 84  ;2   ;Field     ;
                SourceExpr=Description;
                Editable=FALSE }

    { 23  ;2   ;Field     ;
                CaptionML=[ENU=Consumption Quantity;
                           ESP=Consumo (cantidad)];
                SourceExpr=Quantity;
                Editable=QuantityEditable;
                HideValue=QuantityHideValue }

    { 26  ;2   ;Field     ;
                SourceExpr="Unit of Measure Code";
                Visible=FALSE }

    { 100 ;2   ;Field     ;
                SourceExpr="Location Code";
                Visible=FALSE }

    { 28  ;2   ;Field     ;
                SourceExpr="Bin Code";
                Visible=FALSE }

    { 114 ;2   ;Field     ;
                SourceExpr="Work Shift Code";
                Visible=FALSE;
                Editable="Work Shift CodeEditable" }

    { 118 ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 1 Code";
                Visible=FALSE }

    { 10  ;2   ;Field     ;
                SourceExpr="Gen. Bus. Posting Group";
                Visible=FALSE }

    { 12  ;2   ;Field     ;
                SourceExpr="Gen. Prod. Posting Group";
                Visible=FALSE }

    { 120 ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 2 Code";
                Visible=FALSE }

    { 300 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[3];
                CaptionClass='1,2,3';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(3,ShortcutDimCode[3]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(3,ShortcutDimCode[3]);
                         END;
                          }

    { 302 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[4];
                CaptionClass='1,2,4';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(4,ShortcutDimCode[4]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(4,ShortcutDimCode[4]);
                         END;
                          }

    { 304 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[5];
                CaptionClass='1,2,5';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(5,ShortcutDimCode[5]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(5,ShortcutDimCode[5]);
                         END;
                          }

    { 306 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[6];
                CaptionClass='1,2,6';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(6,ShortcutDimCode[6]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(6,ShortcutDimCode[6]);
                         END;
                          }

    { 308 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[7];
                CaptionClass='1,2,7';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(7,ShortcutDimCode[7]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(7,ShortcutDimCode[7]);
                         END;
                          }

    { 310 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[8];
                CaptionClass='1,2,8';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(8,ShortcutDimCode[8]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(8,ShortcutDimCode[8]);
                         END;
                          }

    { 94  ;2   ;Field     ;
                SourceExpr="Starting Time";
                Visible=FALSE;
                Editable="Starting TimeEditable" }

    { 96  ;2   ;Field     ;
                SourceExpr="Ending Time";
                Visible=FALSE;
                Editable="Ending TimeEditable" }

    { 98  ;2   ;Field     ;
                SourceExpr="Concurrent Capacity";
                Visible=FALSE;
                Editable="Concurrent CapacityEditable" }

    { 8   ;2   ;Field     ;
                SourceExpr="Setup Time";
                Editable="Setup TimeEditable";
                HideValue="Setup TimeHideValue" }

    { 86  ;2   ;Field     ;
                SourceExpr="Run Time";
                Editable="Run TimeEditable";
                HideValue="Run TimeHideValue" }

    { 3   ;2   ;Field     ;
                SourceExpr="Cap. Unit of Measure Code";
                Visible=FALSE;
                Editable=CapUnitofMeasureCodeEditable }

    { 112 ;2   ;Field     ;
                SourceExpr="Scrap Code";
                Visible=FALSE;
                Editable="Scrap CodeEditable" }

    { 126 ;2   ;Field     ;
                SourceExpr="Output Quantity";
                Editable="Output QuantityEditable";
                HideValue="Output QuantityHideValue" }

    { 128 ;2   ;Field     ;
                SourceExpr="Scrap Quantity";
                Editable="Scrap QuantityEditable";
                HideValue="Scrap QuantityHideValue" }

    { 122 ;2   ;Field     ;
                SourceExpr=Finished;
                Editable=FinishedEditable }

    { 33  ;2   ;Field     ;
                SourceExpr="Applies-to Entry";
                Visible=FALSE }

    { 32  ;2   ;Field     ;
                SourceExpr="Applies-from Entry";
                Visible=FALSE;
                Editable="Applies-from EntryEditable" }

    { 134 ;2   ;Field     ;
                SourceExpr="Document Date";
                Visible=FALSE;
                Editable=FALSE }

    { 136 ;2   ;Field     ;
                SourceExpr="External Document No.";
                Visible=FALSE }

    { 73  ;1   ;Group     ;
                CaptionML=[ENU=Actual;
                           ESP=Real] }

    { 1902114901;2;Group  ;
                GroupType=FixedLayout }

    { 1901742001;3;Group  ;
                CaptionML=[ENU=Consump. Qty.;
                           ESP=Cant. consumo] }

    { 55  ;4   ;Field     ;
                DecimalPlaces=0:5;
                SourceExpr=ActualConsumpQty;
                Editable=FALSE;
                HideValue=ActualConsumpQtyHideValue }

    { 1901741901;3;Group  ;
                CaptionML=[ENU=Setup Time;
                           ESP=Tiempo preparaci¢n] }

    { 50  ;4   ;Field     ;
                CaptionML=[ENU=Setup Time;
                           ESP=Tiempo preparaci¢n];
                DecimalPlaces=0:5;
                SourceExpr=ActualSetupTime;
                Editable=FALSE;
                HideValue=ActualSetupTimeHideValue }

    { 1902759401;3;Group  ;
                CaptionML=[ENU=Run Time;
                           ESP=Tiempo ejecuci¢n] }

    { 52  ;4   ;Field     ;
                CaptionML=[ENU=Run Time;
                           ESP=Tiempo ejecuci¢n];
                DecimalPlaces=0:5;
                SourceExpr=ActualRunTime;
                Editable=FALSE;
                HideValue=ActualRunTimeHideValue }

    { 1900205801;3;Group  ;
                CaptionML=[ENU=Output Qty.;
                           ESP=Cant. resultado] }

    { 54  ;4   ;Field     ;
                CaptionML=[ENU=Output Qty.;
                           ESP=Cant. resultado];
                DecimalPlaces=0:5;
                SourceExpr=ActualOutputQty;
                Editable=FALSE;
                HideValue=ActualOutputQtyHideValue }

    { 1900205901;3;Group  ;
                CaptionML=[ENU=Scrap Qty.;
                           ESP=Cant. rechazada] }

    { 58  ;4   ;Field     ;
                CaptionML=[ENU=Scrap Qty.;
                           ESP=Cant. rechazada];
                DecimalPlaces=0:5;
                SourceExpr=ActualScrapQty;
                Editable=FALSE;
                HideValue=ActualScrapQtyHideValue }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      Item@1019 : Record 27;
      ProdOrder@1009 : Record 5405;
      ProdOrderLine@1012 : Record 5406;
      ProdOrderComp@1017 : Record 5407;
      TempItemJrnlLine@1002 : TEMPORARY Record 83;
      CostCalcMgt@1021 : Codeunit 5836;
      ReportPrint@1001 : Codeunit 228;
      PostingDate@1008 : Date;
      xPostingDate@1007 : Date;
      ProdOrderLineNo@1006 : Integer;
      ShortcutDimCode@1005 : ARRAY [8] OF Code[20];
      ToTemplateName@1011 : Code[10];
      ToBatchName@1010 : Code[10];
      ActualRunTime@1013 : Decimal;
      ActualSetupTime@1014 : Decimal;
      ActualOutputQty@1015 : Decimal;
      ActualScrapQty@1020 : Decimal;
      ActualConsumpQty@1016 : Decimal;
      FlushingFilter@1003 : 'Manual,Forward,Backward,Pick + Forward,Pick + Backward,All Methods';
      DescriptionEmphasize@19010547 : Boolean INDATASET;
      DescriptionIndent@19057867 : Integer INDATASET;
      QuantityHideValue@19060207 : Boolean INDATASET;
      "Setup TimeHideValue"@19037416 : Boolean INDATASET;
      "Run TimeHideValue"@19073369 : Boolean INDATASET;
      "Output QuantityHideValue"@19005396 : Boolean INDATASET;
      "Scrap QuantityHideValue"@19076632 : Boolean INDATASET;
      ActualConsumpQtyHideValue@19061616 : Boolean INDATASET;
      ActualSetupTimeHideValue@19068503 : Boolean INDATASET;
      ActualRunTimeHideValue@19010265 : Boolean INDATASET;
      ActualOutputQtyHideValue@19030556 : Boolean INDATASET;
      ActualScrapQtyHideValue@19001037 : Boolean INDATASET;
      "Starting TimeEditable"@19033885 : Boolean INDATASET;
      "Ending TimeEditable"@19072097 : Boolean INDATASET;
      "Concurrent CapacityEditable"@19033053 : Boolean INDATASET;
      CapUnitofMeasureCodeEditable@19008712 : Boolean INDATASET;
      "Setup TimeEditable"@19005706 : Boolean INDATASET;
      "Run TimeEditable"@19034139 : Boolean INDATASET;
      "Work Shift CodeEditable"@19055238 : Boolean INDATASET;
      FinishedEditable@19037742 : Boolean INDATASET;
      "Scrap CodeEditable"@19021735 : Boolean INDATASET;
      "Scrap QuantityEditable"@19061944 : Boolean INDATASET;
      "Output QuantityEditable"@19056726 : Boolean INDATASET;
      QuantityEditable@19013162 : Boolean INDATASET;
      "Applies-from EntryEditable"@19013746 : Boolean INDATASET;

    PROCEDURE Setup@2(TemplateName@1003 : Code[10];BatchName@1002 : Code[10];ProductionOrder@1001 : Record 5405;ProdLineNo@1000 : Integer;PostDate@1004 : Date);
    BEGIN
      ToTemplateName := TemplateName;
      ToBatchName := BatchName;
      ProdOrder := ProductionOrder;
      ProdOrderLineNo := ProdLineNo;
      PostingDate := PostDate;
      xPostingDate := PostingDate;

      FlushingFilter := FlushingFilter::Manual;
    END;

    PROCEDURE GetActTimeAndQtyBase@4();
    BEGIN
      ActualSetupTime := 0; ActualRunTime := 0;
      ActualOutputQty := 0; ActualScrapQty := 0;
      ActualConsumpQty := 0;

      IF "Qty. per Unit of Measure" = 0 THEN
        "Qty. per Unit of Measure" := 1;
      IF "Qty. per Cap. Unit of Measure" = 0 THEN
        "Qty. per Cap. Unit of Measure" := 1;

      IF Item.GET("Item No.") THEN
        CASE "Entry Type" OF
          "Entry Type"::Consumption:
            IF ProdOrderComp.GET(
                 ProdOrder.Status,
                 "Prod. Order No.",
                 "Prod. Order Line No.",
                 "Prod. Order Comp. Line No.")
            THEN BEGIN
              ProdOrderComp.CALCFIELDS("Act. Consumption (Qty)"); // Base Unit
              ActualConsumpQty :=
                ProdOrderComp."Act. Consumption (Qty)" / "Qty. per Unit of Measure";
              IF Item."Rounding Precision" > 0 THEN
                ActualConsumpQty := ROUND(ActualConsumpQty,Item."Rounding Precision",'>')
              ELSE
                ActualConsumpQty := ROUND(ActualConsumpQty,0.00001);
            END;
          "Entry Type"::Output:
            BEGIN
              IF ProdOrderLineNo = 0 THEN
                IF NOT ProdOrderLine.GET(ProdOrder.Status,ProdOrder."No.","Prod. Order Line No.") THEN
                  CLEAR(ProdOrderLine);
              IF ProdOrderLine."Prod. Order No." <> '' THEN BEGIN
                CostCalcMgt.CalcActTimeAndQtyBase(
                  ProdOrderLine,"Operation No.",ActualRunTime,ActualSetupTime,ActualOutputQty,ActualScrapQty);
                ActualSetupTime :=
                  ROUND(ActualSetupTime / "Qty. per Cap. Unit of Measure",0.00001);
                ActualRunTime :=
                  ROUND(ActualRunTime / "Qty. per Cap. Unit of Measure",0.00001);

                ActualOutputQty := ActualOutputQty / "Qty. per Unit of Measure";
                ActualScrapQty := ActualScrapQty / "Qty. per Unit of Measure";
                IF Item."Rounding Precision" > 0 THEN BEGIN
                  ActualOutputQty := ROUND(ActualOutputQty,Item."Rounding Precision",'>');
                  ActualScrapQty := ROUND(ActualScrapQty,Item."Rounding Precision",'>');
                END ELSE BEGIN
                  ActualOutputQty := ROUND(ActualOutputQty,0.00001);
                  ActualScrapQty := ROUND(ActualScrapQty,0.00001);
                END;
              END;
            END;
        END;
    END;

    LOCAL PROCEDURE ControlsMngt@1();
    VAR
      OperationExist@1000 : Boolean;
    BEGIN
      IF ("Entry Type" = "Entry Type"::Output) AND
         ("Operation No." <> '') THEN
        OperationExist := TRUE
      ELSE
        OperationExist := FALSE;

      "Starting TimeEditable" := OperationExist;
      "Ending TimeEditable" := OperationExist;
      "Concurrent CapacityEditable" := OperationExist;
      CapUnitofMeasureCodeEditable := OperationExist;
      "Setup TimeEditable" := OperationExist;
      "Run TimeEditable" := OperationExist;
      "Work Shift CodeEditable" := OperationExist;

      FinishedEditable := "Entry Type" = "Entry Type"::Output;
      "Scrap CodeEditable" := "Entry Type" = "Entry Type"::Output;
      "Scrap QuantityEditable" := "Entry Type" = "Entry Type"::Output;
      "Output QuantityEditable" := "Entry Type" = "Entry Type"::Output;

      QuantityEditable := "Entry Type" = "Entry Type"::Consumption;
      "Applies-from EntryEditable" := "Entry Type" = "Entry Type"::Consumption;
    END;

    PROCEDURE DeleteRecTemp@6();
    BEGIN
      TempItemJrnlLine.DELETEALL;

      IF FIND('-') THEN
        REPEAT
          CASE "Entry Type" OF
            "Entry Type"::Consumption:
              IF "Quantity (Base)" = 0 THEN BEGIN
                TempItemJrnlLine := Rec;
                TempItemJrnlLine.INSERT;

                DELETE;
              END;
            "Entry Type"::Output:
              IF TimeIsEmpty AND
                 ("Output Quantity (Base)" = 0) AND ("Scrap Quantity (Base)" = 0) THEN BEGIN
                TempItemJrnlLine := Rec;
                TempItemJrnlLine.INSERT;

                DELETE;
              END;
          END;
        UNTIL NEXT = 0;
    END;

    PROCEDURE InsertTempRec@7();
    BEGIN
      IF TempItemJrnlLine.FIND('-') THEN
        REPEAT
          Rec := TempItemJrnlLine;
          "Changed by User" := FALSE;
          INSERT;
        UNTIL TempItemJrnlLine.NEXT = 0;
      TempItemJrnlLine.DELETEALL;
    END;

    PROCEDURE SetFilterGroup@5();
    BEGIN
      FILTERGROUP(2);
      SETRANGE("Journal Template Name",ToTemplateName);
      SETRANGE("Journal Batch Name",ToBatchName);
      SETRANGE("Prod. Order No.",ProdOrder."No.");
      IF ProdOrderLineNo <> 0 THEN
        SETRANGE("Prod. Order Line No.",ProdOrderLineNo);
      SetFlushingFilter;
      FILTERGROUP(0);
    END;

    PROCEDURE SetFlushingFilter@8();
    BEGIN
      IF FlushingFilter <> FlushingFilter::"All Methods" THEN
        SETRANGE("Flushing Method",FlushingFilter)
      ELSE
        SETRANGE("Flushing Method");
    END;

    PROCEDURE GetCaption@3() : Text[250];
    VAR
      ObjTransl@1000 : Record 377;
      SourceTableName@1002 : Text[100];
      Descrip@1001 : Text[100];
    BEGIN
      SourceTableName := ObjTransl.TranslateObject(ObjTransl."Object Type"::Table,5405);
      IF ProdOrderLineNo <> 0 THEN
        Descrip := ProdOrderLine.Description
      ELSE
        Descrip := ProdOrder.Description;

      EXIT(STRSUBSTNO('%1 %2 %3',SourceTableName,ProdOrder."No.",Descrip));
    END;

    LOCAL PROCEDURE PostingDateOnAfterValidate@19003005();
    BEGIN
      IF PostingDate = 0D THEN
        PostingDate := xPostingDate;

      IF PostingDate <> xPostingDate THEN BEGIN
        MODIFYALL("Posting Date",PostingDate);
        xPostingDate := PostingDate;
        CurrPage.UPDATE(FALSE);
      END;
    END;

    LOCAL PROCEDURE FlushingFilterOnAfterValidate@19064520();
    BEGIN
      SetFilterGroup;
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;
      GetActTimeAndQtyBase;

      ControlsMngt;
    END;

    LOCAL PROCEDURE DescriptionOnFormat@19023855();
    BEGIN
      DescriptionIndent := Level;

      DescriptionEmphasize := "Entry Type" = "Entry Type"::Output;
    END;

    LOCAL PROCEDURE QuantityOnFormat@19071269();
    BEGIN
      IF "Entry Type" = "Entry Type"::Output THEN
        QuantityHideValue := TRUE;
    END;

    LOCAL PROCEDURE SetupTimeOnFormat@19007490();
    BEGIN
      IF ("Entry Type" = "Entry Type"::Consumption) OR
         ("Operation No." = '')
      THEN
        "Setup TimeHideValue" := TRUE;
    END;

    LOCAL PROCEDURE RunTimeOnFormat@19059514();
    BEGIN
      IF ("Entry Type" = "Entry Type"::Consumption) OR
         ("Operation No." = '')
      THEN
        "Run TimeHideValue" := TRUE;
    END;

    LOCAL PROCEDURE OutputQuantityOnFormat@19003029();
    BEGIN
      IF "Entry Type" = "Entry Type"::Consumption THEN
        "Output QuantityHideValue" := TRUE;
    END;

    LOCAL PROCEDURE ScrapQuantityOnFormat@19017313();
    BEGIN
      IF "Entry Type" = "Entry Type"::Consumption THEN
        "Scrap QuantityHideValue" := TRUE;
    END;

    LOCAL PROCEDURE ActualConsumpQtyOnFormat@19012702();
    BEGIN
      IF "Entry Type" = "Entry Type"::Output THEN
        ActualConsumpQtyHideValue := TRUE;
    END;

    LOCAL PROCEDURE ActualSetupTimeOnFormat@19031665();
    BEGIN
      IF ("Entry Type" = "Entry Type"::Consumption) OR
         ("Operation No." = '')
      THEN
        ActualSetupTimeHideValue := TRUE;
    END;

    LOCAL PROCEDURE ActualRunTimeOnFormat@19024131();
    BEGIN
      IF ("Entry Type" = "Entry Type"::Consumption) OR
         ("Operation No." = '')
      THEN
        ActualRunTimeHideValue := TRUE;
    END;

    LOCAL PROCEDURE ActualOutputQtyOnFormat@19059076();
    BEGIN
      IF "Entry Type" = "Entry Type"::Consumption THEN
        ActualOutputQtyHideValue := TRUE;
    END;

    LOCAL PROCEDURE ActualScrapQtyOnFormat@19036240();
    BEGIN
      IF "Entry Type" = "Entry Type"::Consumption THEN
        ActualScrapQtyHideValue := TRUE;
    END;

    BEGIN
    END.
  }
}
