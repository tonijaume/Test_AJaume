OBJECT Page 5198 Attendee Wizard Subform
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVW16.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Lines;
               ESP=L¡neas];
    LinksAllowed=No;
    SourceTable=Table5199;
    DelayedInsert=Yes;
    PageType=ListPart;
    SourceTableTemporary=Yes;
    AutoSplitKey=Yes;
    OnInit=BEGIN
             "Send InvitationEditable" := TRUE;
           END;

    OnAfterGetRecord=BEGIN
                       "Attendance TypeIndent" := 0;
                       AttendanceTypeOnFormat;
                       AttendeeTypeOnFormat;
                       AttendeeNoOnFormat;
                       AttendeeNameOnFormat;
                     END;

    OnInsertRecord=VAR
                     xAttendee@1001 : Record 5199;
                     SplitResult@1003 : Integer;
                   BEGIN
                     xAttendee.COPY(Rec);
                     ValidateAttendee(Rec,Rec);
                     RESET;
                     Rec := xAttendee;
                     IF GET("To-do No.","Line No.") THEN BEGIN
                       REPEAT
                       UNTIL (NEXT = 0) OR ("Line No." = xRec."Line No.");
                       NEXT(-1);
                       SplitResult:=ROUND(((xRec."Line No." - "Line No.") / 2),1,'=');
                     END;
                     COPY(xAttendee);
                     "Line No." := "Line No." + SplitResult;
                     INSERT;
                     EXIT(FALSE);
                   END;

    OnModifyRecord=VAR
                     xAttendee@1000 : Record 5199;
                   BEGIN
                     xAttendee.COPY(Rec);
                     GET("To-do No.","Line No.");
                     IF ("Attendee No." IN [SalespersonFilter,ContactFilter]) AND
                        (("Attendee Type" <> "Attendee Type") OR
                         ("Attendee No." <> "Attendee No.") OR
                         (("Attendance Type" = "Attendance Type"::"To-do Organizer") AND
                          ("Attendance Type" <> "Attendance Type"::"To-do Organizer")))
                     THEN
                       ERROR(Text001,Rec.TABLECAPTION);
                     ValidateAttendee(xAttendee,Rec);
                     COPY(xAttendee);
                     MODIFY;
                     EXIT(FALSE);
                   END;

    OnDeleteRecord=BEGIN
                     GET("To-do No.","Line No.");
                     IF "Attendee No." IN [SalespersonFilter,ContactFilter] THEN
                       ERROR(Text001,Rec.TABLECAPTION);
                     DELETE;
                     EXIT(FALSE);
                   END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                IndentationColumnName="Attendance TypeIndent";
                IndentationControls=Attendance Type;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                SourceExpr="Attendance Type" }

    { 4   ;2   ;Field     ;
                SourceExpr="Attendee Type" }

    { 6   ;2   ;Field     ;
                SourceExpr="Attendee No." }

    { 8   ;2   ;Field     ;
                SourceExpr="Attendee Name" }

    { 10  ;2   ;Field     ;
                SourceExpr="Send Invitation";
                Editable="Send InvitationEditable" }

  }
  CODE
  {
    VAR
      SalespersonFilter@1001 : Code[10];
      Text001@1002 : TextConst 'ENU=You cannot delete or change this %1.;ESP=No puede eliminar o cambiar este %1.';
      ContactFilter@1003 : Code[20];
      "Send InvitationEditable"@19041147 : Boolean INDATASET;
      "Attendance TypeEmphasize"@19053799 : Boolean INDATASET;
      "Attendance TypeIndent"@19018618 : Integer INDATASET;
      "Attendee TypeEmphasize"@19028539 : Boolean INDATASET;
      "Attendee No.Emphasize"@19069190 : Boolean INDATASET;
      "Attendee NameEmphasize"@19067564 : Boolean INDATASET;

    PROCEDURE SetAttendee@2(VAR Attendee@1000 : Record 5199);
    BEGIN
      DELETEALL;

      IF Attendee.FINDSET THEN
        REPEAT
          Rec := Attendee;
          INSERT;
        UNTIL Attendee.NEXT = 0;
    END;

    PROCEDURE GetAttendee@3(VAR Attendee@1000 : Record 5199);
    BEGIN
      Attendee.DELETEALL;

      IF FINDSET THEN
        REPEAT
          Attendee := Rec;
          Attendee.INSERT;
        UNTIL NEXT = 0;
    END;

    PROCEDURE UpdateForm@1();
    BEGIN
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE SetTodoFilter@4(NewSalespersonFilter@1000 : Code[10];NewContactFilter@1001 : Code[20]);
    BEGIN
      SalespersonFilter := NewSalespersonFilter;
      ContactFilter := NewContactFilter;
    END;

    LOCAL PROCEDURE AttendanceTypeOnFormat@19064443();
    BEGIN
      "Send InvitationEditable" := TRUE;

      IF "Attendance Type" = "Attendance Type"::"To-do Organizer" THEN BEGIN
        "Attendance TypeEmphasize" := TRUE;
        "Send InvitationEditable" := FALSE;
        "Send Invitation" := TRUE;
      END ELSE
        "Attendance TypeIndent" := 1;
    END;

    LOCAL PROCEDURE AttendeeTypeOnFormat@19059697();
    BEGIN
      IF "Attendance Type" = "Attendance Type"::"To-do Organizer" THEN
        "Attendee TypeEmphasize" := TRUE;
    END;

    LOCAL PROCEDURE AttendeeNoOnFormat@19034633();
    BEGIN
      IF "Attendance Type" = "Attendance Type"::"To-do Organizer" THEN
        "Attendee No.Emphasize" := TRUE;
    END;

    LOCAL PROCEDURE AttendeeNameOnFormat@19039845();
    BEGIN
      IF "Attendance Type" = "Attendance Type"::"To-do Organizer" THEN
        "Attendee NameEmphasize" := TRUE;
    END;

    BEGIN
    END.
  }
}
