OBJECT Page 7138 Purchase Budget Overview
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=NAVW16.00.01;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Purchase Budget Overview;
               ESP=Inf. general de presupuesto de compras];
    InsertAllowed=No;
    DeleteAllowed=No;
    LinksAllowed=No;
    PageType=ListPlus;
    OnInit=BEGIN
             BudgetDim3FilterEnable := TRUE;
             BudgetDim2FilterEnable := TRUE;
             BudgetDim1FilterEnable := TRUE;
           END;

    OnOpenPage=BEGIN
                 IF ValueType = 0 THEN
                   ValueType := ValueType::"Cost Amount";
                 CurrentAnalysisArea := CurrentAnalysisArea::Purchase;
                 ItemBudgetManagement.BudgetNameSelection(
                   CurrentAnalysisArea,CurrentBudgetName,ItemBudgetName,ItemStatisticsBuffer,
                   BudgetDim1Filter,BudgetDim2Filter,BudgetDim3Filter);

                 IF (NewBudgetName <> '') AND (CurrentBudgetName <> NewBudgetName) THEN BEGIN
                   CurrentBudgetName := NewBudgetName;
                   ItemBudgetManagement.CheckBudgetName(CurrentAnalysisArea,CurrentBudgetName,ItemBudgetName);
                   ItemBudgetManagement.SetItemBudgetName(
                     CurrentBudgetName,ItemBudgetName,ItemStatisticsBuffer,
                     BudgetDim1Filter,BudgetDim2Filter,BudgetDim3Filter);
                 END;

                 ItemBudgetManagement.SetLineAndColDim(
                   ItemBudgetName,LineDimCode,LineDimOption,ColumnDimCode,ColumnDimOption);

                 GLSetup.GET;
                 NormalFormatString := Text001 + GLSetup."Amount Decimal Places" + Text002;
                 SourceTypeFilter := SourceTypeFilter::Vendor;

                 UpdateDimCtrls;

                 FindPeriod('');
                 MATRIX_GenerateColumnCaptions(MATRIX_Step::Initial);
                 UpdateMatrixSubForm;
               END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 40      ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 ESP=Acci&ones] }
      { 41      ;2   ;Action    ;
                      CaptionML=[ENU=Reverse Lines and Columns;
                                 ESP=Invertir l¡neas y columnas];
                      OnAction=VAR
                                 TempDimCode@1001 : Text[30];
                               BEGIN
                                 TempDimCode := ColumnDimCode;
                                 ColumnDimCode := LineDimCode;
                                 LineDimCode := TempDimCode;
                                 ItemBudgetManagement.ValidateLineDimCode(
                                   ItemBudgetName,LineDimCode,LineDimOption,ColumnDimOption,
                                   InternalDateFilter,DateFilter,ItemStatisticsBuffer,PeriodInitialized);
                                 ItemBudgetManagement.ValidateColumnDimCode(
                                   ItemBudgetName,ColumnDimCode,ColumnDimOption,LineDimOption,
                                   InternalDateFilter,DateFilter,ItemStatisticsBuffer,PeriodInitialized);
                                 MATRIX_GenerateColumnCaptions(MATRIX_Step::Initial);
                                 UpdateMatrixSubForm;
                               END;
                                }
      { 53      ;2   ;Separator  }
      { 54      ;2   ;Action    ;
                      CaptionML=[ENU=Delete Budget;
                                 ESP=Borrar presupuesto];
                      OnAction=BEGIN
                                 ItemBudgetManagement.DeleteBudget(
                                   CurrentAnalysisArea,CurrentBudgetName,
                                   ItemFilter,DateFilter,
                                   SourceTypeFilter,SourceNoFilter,
                                   GlobalDim1Filter,GlobalDim2Filter,
                                   BudgetDim1Filter,BudgetDim2Filter,BudgetDim3Filter);
                               END;
                                }
      { 55      ;2   ;Separator  }
      { 42      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Export to Excel;
                                 ESP=Exportar a Excel];
                      OnAction=VAR
                                 ExportToXl@1000 : Report 7132;
                               BEGIN
                                 ExportToXl.SetOptions(
                                   CurrentAnalysisArea,
                                   CurrentBudgetName,
                                   ValueType,
                                   GlobalDim1Filter,GlobalDim2Filter,
                                   BudgetDim1Filter,BudgetDim2Filter,BudgetDim3Filter,
                                   DateFilter,
                                   SourceTypeFilter,SourceNoFilter,
                                   ItemFilter,
                                   InternalDateFilter,PeriodInitialized,PeriodType,
                                   LineDimOption,ColumnDimOption,LineDimCode,ColumnDimCode);
                                 ExportToXl.RUN;
                               END;
                                }
      { 56      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Import from Excel;
                                 ESP=Importar desde Excel];
                      OnAction=VAR
                                 ImportItemBudgetFromExcel@1000 : Report 7131;
                               BEGIN
                                 ImportItemBudgetFromExcel.SetProperties(CurrentBudgetName,CurrentAnalysisArea,ValueType);
                                 ImportItemBudgetFromExcel.RUNMODAL;
                               END;
                                }
      { 13      ;1   ;Action    ;
                      CaptionML=[ENU=Next Period;
                                 ESP=Periodo siguiente];
                      Promoted=Yes;
                      Image=NextRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 IF (LineDimOption = LineDimOption::Period) OR (ColumnDimOption = ColumnDimOption::Period) THEN
                                   EXIT;
                                 FindPeriod('>');
                                 CurrPage.UPDATE;
                                 UpdateMatrixSubForm;
                               END;
                                }
      { 10      ;1   ;Action    ;
                      CaptionML=[ENU=Previous Period;
                                 ESP=Periodo anterior];
                      Promoted=Yes;
                      Image=PreviousRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 IF (LineDimOption = LineDimOption::Period) OR (ColumnDimOption = ColumnDimOption::Period) THEN
                                   EXIT;
                                 FindPeriod('<');
                                 CurrPage.UPDATE;
                                 UpdateMatrixSubForm;
                               END;
                                }
      { 23      ;1   ;Action    ;
                      CaptionML=[ENU=Previous Set;
                                 ESP=Conjunto anterior];
                      ToolTipML=ENU=Previous Set;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousSet;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 MATRIX_Step@1001 : 'Initial,Previous,Same,Next';
                               BEGIN
                                 MATRIX_GenerateColumnCaptions(MATRIX_Step::Previous);
                                 UpdateMatrixSubForm;
                               END;
                                }
      { 9       ;1   ;Action    ;
                      CaptionML=[ENU=Previous Column;
                                 ESP=Columna anterior];
                      ToolTipML=ENU=Previous Set;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MATRIX_GenerateColumnCaptions(MATRIX_Step::PreviousColumn);
                                 UpdateMatrixSubForm;
                               END;
                                }
      { 11      ;1   ;Action    ;
                      CaptionML=[ENU=Next Column;
                                 ESP=Columna siguiente];
                      ToolTipML=ENU=Next Set;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MATRIX_GenerateColumnCaptions(MATRIX_Step::NextColumn);
                                 UpdateMatrixSubForm;
                               END;
                                }
      { 24      ;1   ;Action    ;
                      CaptionML=[ENU=Next Set;
                                 ESP=Conjunto siguiente];
                      ToolTipML=ENU=Next Set;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextSet;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 MATRIX_Step@1001 : 'Initial,Previous,Same,Next';
                               BEGIN
                                 MATRIX_GenerateColumnCaptions(MATRIX_Step::Next);
                                 UpdateMatrixSubForm;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=[ENU=General;
                           ESP=General] }

    { 3   ;2   ;Field     ;
                CaptionML=[ENU=Item Budget Name;
                           ESP=Nombre ppto. producto];
                SourceExpr=CurrentBudgetName;
                OnValidate=BEGIN
                             ItemBudgetManagement.CheckBudgetName(CurrentAnalysisArea,CurrentBudgetName,ItemBudgetName);
                               CurrentBudgetNameOnAfterValida;
                           END;

                OnLookup=BEGIN
                           ItemBudgetManagement.LookupItemBudgetName(
                             CurrentBudgetName,ItemBudgetName,ItemStatisticsBuffer,
                             BudgetDim1Filter,BudgetDim2Filter,BudgetDim3Filter);
                           ItemBudgetManagement.ValidateLineDimCode(
                             ItemBudgetName,LineDimCode,LineDimOption,ColumnDimOption,
                             InternalDateFilter,DateFilter,ItemStatisticsBuffer,PeriodInitialized);
                           ItemBudgetManagement.ValidateColumnDimCode(
                             ItemBudgetName,ColumnDimCode,ColumnDimOption,LineDimOption,
                             InternalDateFilter,DateFilter,ItemStatisticsBuffer,PeriodInitialized);
                           UpdateDimCtrls;
                           CurrPage.UPDATE(FALSE);
                         END;
                          }

    { 5   ;2   ;Field     ;
                CaptionML=[ENU=Show as Lines;
                           ESP=Muestra como l¡neas];
                SourceExpr=LineDimCode;
                OnValidate=BEGIN
                             IF (UPPERCASE(LineDimCode) = UPPERCASE(ColumnDimCode)) AND (LineDimCode <> '') THEN BEGIN
                               ColumnDimCode := '';
                               ItemBudgetManagement.ValidateColumnDimCode(
                                 ItemBudgetName,ColumnDimCode,ColumnDimOption,LineDimOption,
                                 InternalDateFilter,DateFilter,ItemStatisticsBuffer,PeriodInitialized);
                             END;
                             ItemBudgetManagement.ValidateLineDimCode(
                               ItemBudgetName,LineDimCode,LineDimOption,ColumnDimOption,
                               InternalDateFilter,DateFilter,ItemStatisticsBuffer,PeriodInitialized);
                               LineDimCodeOnAfterValidate;
                           END;

                OnLookup=VAR
                           NewCode@1000 : Text[30];
                         BEGIN
                           NewCode := ItemBudgetManagement.GetDimSelection(LineDimCode,ItemBudgetName);
                           IF NewCode <> LineDimCode THEN BEGIN
                             Text := NewCode;
                             EXIT(TRUE);
                           END;
                         END;
                          }

    { 7   ;2   ;Field     ;
                CaptionML=[ENU=Show as Columns;
                           ESP=Muestra como columnas];
                SourceExpr=ColumnDimCode;
                OnValidate=VAR
                             MATRIX_SetWanted@1001 : 'First,Previous,Same,Next';
                           BEGIN
                             IF (UPPERCASE(LineDimCode) = UPPERCASE(ColumnDimCode)) AND (LineDimCode <> '') THEN BEGIN
                               LineDimCode := '';
                               ItemBudgetManagement.ValidateLineDimCode(
                                 ItemBudgetName,LineDimCode,LineDimOption,ColumnDimOption,
                                 InternalDateFilter,DateFilter,ItemStatisticsBuffer,PeriodInitialized);
                             END;
                             ItemBudgetManagement.ValidateColumnDimCode(
                               ItemBudgetName,ColumnDimCode,ColumnDimOption,LineDimOption,
                               InternalDateFilter,DateFilter,ItemStatisticsBuffer,PeriodInitialized);

                             MATRIX_GenerateColumnCaptions(MATRIX_SetWanted::First);
                               ColumnDimCodeOnAfterValidate;
                           END;

                OnLookup=VAR
                           NewCode@1000 : Text[30];
                         BEGIN
                           NewCode := ItemBudgetManagement.GetDimSelection(ColumnDimCode,ItemBudgetName);
                           IF NewCode <> ColumnDimCode THEN BEGIN
                             Text := NewCode;
                             EXIT(TRUE);
                           END;
                         END;
                          }

    { 14  ;2   ;Field     ;
                CaptionML=[ENU=Show Value as;
                           ESP=Mostrar valor como];
                OptionCaptionML=[ENU=,Cost Amount,Quantity;
                                 ESP=,Importe coste,Cantidad];
                SourceExpr=ValueType;
                OnValidate=BEGIN
                             ValueTypeOnAfterValidate;
                           END;
                            }

    { 21  ;2   ;Field     ;
                CaptionML=[ENU=View by;
                           ESP=Ver por];
                OptionCaptionML=[ENU=Day,Week,Month,Quarter,Year,Accounting Period;
                                 ESP=D¡a,Semana,Mes,Trimestre,A¤o,Periodo contable];
                SourceExpr=PeriodType;
                OnValidate=BEGIN
                             FindPeriod('');
                               PeriodTypeOnAfterValidate;
                           END;
                            }

    { 27  ;2   ;Field     ;
                CaptionML=[ENU=Rounding Factor;
                           ESP=Factor redondeo];
                OptionCaptionML=[ENU=None,1,1000,1000000;
                                 ESP=No,1,1000,1000000];
                SourceExpr=RoundingFactor;
                OnValidate=BEGIN
                             RoundingFactorOnAfterValidate;
                           END;
                            }

    { 26  ;2   ;Field     ;
                CaptionML=[ENU=Show Column Name;
                           ESP=Muestra nombre columna];
                SourceExpr=ShowColumnName;
                OnValidate=BEGIN
                             ShowColumnNameOnAfterValidate;
                           END;
                            }

    { 17  ;1   ;Part      ;
                Name=MATRIX;
                PagePartID=Page9219 }

    { 1907524401;1;Group  ;
                CaptionML=[ENU=Filters;
                           ESP=Filtros] }

    { 33  ;2   ;Field     ;
                CaptionML=[ENU=Date Filter;
                           ESP=Filtro fecha];
                SourceExpr=DateFilter;
                OnValidate=VAR
                             ApplicationManagement@1001 : Codeunit 1;
                           BEGIN
                             IF ApplicationManagement.MakeDateFilter(DateFilter) = 0 THEN;
                             ItemStatisticsBuffer.SETFILTER("Date Filter",DateFilter);
                             DateFilter := ItemStatisticsBuffer.GETFILTER("Date Filter");
                             InternalDateFilter := DateFilter;
                               DateFilterOnAfterValidate;
                           END;
                            }

    { 31  ;2   ;Field     ;
                Name=SalesCodeFilterCtrl;
                CaptionML=[ENU=Vendor Filter;
                           ESP=Filtro proveedor];
                SourceExpr=SourceNoFilter;
                OnValidate=BEGIN
                             SourceNoFilterOnAfterValidate;
                           END;

                OnLookup=VAR
                           CustList@1005 : Form 22;
                           VendList@1004 : Form 27;
                         BEGIN
                           CASE SourceTypeFilter OF
                             SourceTypeFilter::Customer:
                               BEGIN
                                 CustList.LOOKUPMODE := TRUE;
                                 IF CustList.RUNMODAL = ACTION::LookupOK THEN
                                   Text := CustList.GetSelectionFilter
                                 ELSE
                                   EXIT(FALSE);
                               END;
                             SourceTypeFilter::Vendor:
                               BEGIN
                                 VendList.LOOKUPMODE := TRUE;
                                 IF VendList.RUNMODAL = ACTION::LookupOK THEN
                                   Text := VendList.GetSelectionFilter
                                 ELSE
                                   EXIT(FALSE);
                               END;
                           END;

                           EXIT(TRUE);
                         END;
                          }

    { 32  ;2   ;Field     ;
                CaptionML=[ENU=Item Filter;
                           ESP=Filtro producto];
                SourceExpr=ItemFilter;
                OnValidate=BEGIN
                             ItemFilterOnAfterValidate;
                           END;

                OnLookup=VAR
                           ItemList@1002 : Form 31;
                         BEGIN
                           ItemList.LOOKUPMODE(TRUE);
                           IF ItemList.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             Text := ItemList.GetSelectionFilter;
                             EXIT(TRUE);
                           END;
                         END;
                          }

    { 47  ;2   ;Field     ;
                Name=BudgetDim1Filter;
                CaptionML=[ENU=Budget Dimension 1 Filter;
                           ESP=Filtro dim. presupuesto 1];
                SourceExpr=BudgetDim1Filter;
                CaptionClass=GetCaptionClass(1);
                Enabled=BudgetDim1FilterEnable;
                OnValidate=BEGIN
                             BudgetDim1FilterOnAfterValidat;
                           END;

                OnLookup=BEGIN
                           EXIT(LookUpDimFilter(ItemBudgetName."Budget Dimension 1 Code",Text));
                         END;
                          }

    { 44  ;2   ;Field     ;
                Name=BudgetDim2Filter;
                CaptionML=[ENU=Budget Dimension 2 Filter;
                           ESP=Filtro dim. presupuesto 2];
                SourceExpr=BudgetDim2Filter;
                CaptionClass=GetCaptionClass(2);
                Enabled=BudgetDim2FilterEnable;
                OnValidate=BEGIN
                             BudgetDim2FilterOnAfterValidat;
                           END;

                OnLookup=BEGIN
                           EXIT(LookUpDimFilter(ItemBudgetName."Budget Dimension 2 Code",Text));
                         END;
                          }

    { 43  ;2   ;Field     ;
                Name=BudgetDim3Filter;
                CaptionML=[ENU=Budget Dimension 3 Filter;
                           ESP=Filtro dim. presupuesto 3];
                SourceExpr=BudgetDim3Filter;
                CaptionClass=GetCaptionClass(3);
                Enabled=BudgetDim3FilterEnable;
                OnValidate=BEGIN
                             BudgetDim3FilterOnAfterValidat;
                           END;

                OnLookup=BEGIN
                           EXIT(LookUpDimFilter(ItemBudgetName."Budget Dimension 3 Code",Text));
                         END;
                          }

    { 50  ;2   ;Field     ;
                Name=GlobalDim1Filter;
                CaptionML=[ENU=Global Dimension 1 Filter;
                           ESP=Filtro dimensi¢n global 1];
                SourceExpr=GlobalDim1Filter;
                CaptionClass='1,3,1';
                OnValidate=BEGIN
                             GlobalDim1FilterOnAfterValidat;
                           END;

                OnLookup=BEGIN
                           EXIT(LookUpDimFilter(GLSetup."Global Dimension 1 Code",Text));
                         END;
                          }

    { 49  ;2   ;Field     ;
                Name=GlobalDim2Filter;
                CaptionML=[ENU=Global Dimension 2 Filter;
                           ESP=Filtro dimensi¢n global  2];
                SourceExpr=GlobalDim2Filter;
                CaptionClass='1,3,2';
                OnValidate=BEGIN
                             GlobalDim2FilterOnAfterValidat;
                           END;

                OnLookup=BEGIN
                           EXIT(LookUpDimFilter(GLSetup."Global Dimension 2 Code",Text));
                         END;
                          }

  }
  CODE
  {
    VAR
      MATRIX_MatrixRecords@1137 : ARRAY [32] OF Record 367;
      MATRIX_CaptionSet@1138 : ARRAY [32] OF Text[80];
      MATRIX_CaptionRange@1139 : Text[250];
      FirstColumn@1140 : Text[80];
      LastColumn@1141 : Text[80];
      MATRIX_CaptionFieldNo@1142 : Integer;
      MATRIX_PrimKeyFirstCaptionInCu@1143 : Text[80];
      MATRIX_CurrentNoOfColumns@1144 : Integer;
      GLSetup@1035 : Record 98;
      ItemBudgetName@1006 : Record 7132;
      ItemStatisticsBuffer@1010 : Record 5821;
      ItemBudgetManagement@1003 : Codeunit 7130;
      CurrentAnalysisArea@1005 : 'Sales,Purchase,Inventory';
      CurrentBudgetName@1002 : Code[10];
      SourceTypeFilter@1017 : ' ,Customer,Vendor,Item';
      SourceNoFilter@1016 : Code[250];
      ItemFilter@1019 : Code[250];
      ValueType@1018 : ',Cost Amount,Quantity';
      RoundingFactor@1028 : 'None,1,1000,1000000';
      LineDimOption@1001 : 'Item,Customer,Vendor,Period,Location,Global Dimension 1,Global Dimension 2,Budget Dimension 1,Budget Dimension 2,Budget Dimension 3';
      ColumnDimOption@1000 : 'Item,Customer,Vendor,Period,Location,Global Dimension 1,Global Dimension 2,Budget Dimension 1,Budget Dimension 2,Budget Dimension 3';
      PeriodType@1022 : 'Day,Week,Month,Quarter,Year,Accounting Period';
      GlobalDim1Filter@1024 : Code[250];
      GlobalDim2Filter@1023 : Code[250];
      BudgetDim1Filter@1009 : Code[250];
      BudgetDim2Filter@1008 : Code[250];
      BudgetDim3Filter@1007 : Code[250];
      LineDimCode@1012 : Text[30];
      ColumnDimCode@1011 : Text[30];
      DateFilter@1014 : Text[30];
      InternalDateFilter@1013 : Text[30];
      PeriodInitialized@1015 : Boolean;
      BudgetedAmount@1020 : Decimal;
      MatrixHeader@1021 : Text[50];
      ShowColumnName@1025 : Boolean;
      InputError@1026 : Boolean;
      InputErrorText@1027 : Text[250];
      NormalFormatString@1030 : Text[80];
      Text001@1032 : TextConst 'ENU=<Precision,;ESP=<Precision,';
      Text002@1031 : TextConst 'ENU=><Standard Format,0>;ESP=><Standard Format,0>';
      Text003@1034 : TextConst 'ENU=1,6,,Budget Dimension 1 Filter;ESP=1,6,,Filtro dimensi¢n presupuesto 1';
      Text004@1033 : TextConst 'ENU=1,6,,Budget Dimension 2 Filter;ESP=1,6,,Filtro dimensi¢n presupuesto 2';
      Text005@1004 : TextConst 'ENU=1,6,,Budget Dimension 3 Filter;ESP=1,6,,Filtro dimensi¢n presupuesto 3';
      Text100@1036 : TextConst 'ENU=Period;ESP=Periodo';
      NewBudgetName@1037 : Code[10];
      MATRIX_Step@1029 : 'Initial,Previous,Same,Next,PreviousColumn,NextColumn';
      BudgetDim1FilterEnable@19060021 : Boolean INDATASET;
      BudgetDim2FilterEnable@19020249 : Boolean INDATASET;
      BudgetDim3FilterEnable@19077914 : Boolean INDATASET;

    PROCEDURE MATRIX_GenerateColumnCaptions@1152(MATRIX_SetWanted@1000 : 'Initial,Previous,Same,Next,PreviousColumn,NextColumn');
    VAR
      CurrentMatrixRecordOrdinal@1001 : Integer;
      MatrixMgt@1002 : Codeunit 9200;
      MATRIX_PeriodRecords@1003 : ARRAY [32] OF Record 2000000007;
      i@1004 : Integer;
      Location@1005 : Record 14;
      RecRef@1006 : RecordRef;
      Item@1007 : Record 27;
      Customer@1008 : Record 18;
      Vendor@1009 : Record 23;
      FieldRef@1010 : FieldRef;
    BEGIN
      CLEAR(MATRIX_CaptionSet);
      CurrentMatrixRecordOrdinal := 1;
      CLEAR(MATRIX_MatrixRecords);
      FirstColumn := '';
      LastColumn := '';
      MATRIX_CurrentNoOfColumns := 12;

      IF ColumnDimCode = '' THEN
        EXIT;

      CASE ColumnDimCode OF
        Text100:  // Period
          BEGIN
            MatrixMgt.GeneratePeriodMatrixData(
              MATRIX_SetWanted,12,ShowColumnName,
              PeriodType,DateFilter,MATRIX_PrimKeyFirstCaptionInCu,
              MATRIX_CaptionSet,MATRIX_CaptionRange,MATRIX_CurrentNoOfColumns,MATRIX_PeriodRecords);
            FOR i := 1 TO 12 DO BEGIN
              MATRIX_MatrixRecords[i]."Period Start" := MATRIX_PeriodRecords[i]."Period Start";
              MATRIX_MatrixRecords[i]."Period End" := MATRIX_PeriodRecords[i]."Period End";
            END;
            FirstColumn := FORMAT(MATRIX_PeriodRecords[1]."Period Start");
            LastColumn := FORMAT(MATRIX_PeriodRecords[MATRIX_CurrentNoOfColumns]."Period End");
          END;

        Location.TABLECAPTION:
          BEGIN
            CLEAR(MATRIX_CaptionSet);
            RecRef.GETTABLE(Location);
            RecRef.SETTABLE(Location);
            MatrixMgt.GenerateMatrixData(
              RecRef,MATRIX_SetWanted,12,1,
              MATRIX_PrimKeyFirstCaptionInCu,MATRIX_CaptionSet,MATRIX_CaptionRange,MATRIX_CurrentNoOfColumns);
            FOR i := 1 TO MATRIX_CurrentNoOfColumns DO
              MATRIX_MatrixRecords[i].Code := MATRIX_CaptionSet[i];
            IF ShowColumnName THEN
              MatrixMgt.GenerateMatrixData(
                RecRef,MATRIX_SetWanted::Same,12,2,
                MATRIX_PrimKeyFirstCaptionInCu,MATRIX_CaptionSet,MATRIX_CaptionRange,MATRIX_CurrentNoOfColumns);
          END;
        Item.TABLECAPTION:
          BEGIN
            CLEAR(MATRIX_CaptionSet);
            RecRef.GETTABLE(Item);
            RecRef.SETTABLE(Item);
            IF ItemFilter <> '' THEN BEGIN
              FieldRef := RecRef.FIELDINDEX(1);
              FieldRef.SETFILTER(ItemFilter);
            END;
            MatrixMgt.GenerateMatrixData(
              RecRef,MATRIX_SetWanted,12,1,
              MATRIX_PrimKeyFirstCaptionInCu,MATRIX_CaptionSet,MATRIX_CaptionRange,MATRIX_CurrentNoOfColumns);
            FOR i := 1 TO MATRIX_CurrentNoOfColumns DO
              MATRIX_MatrixRecords[i].Code := MATRIX_CaptionSet[i];
            IF ShowColumnName THEN
              MatrixMgt.GenerateMatrixData(
                RecRef,MATRIX_SetWanted::Same,12,3,
                MATRIX_PrimKeyFirstCaptionInCu,MATRIX_CaptionSet,MATRIX_CaptionRange,MATRIX_CurrentNoOfColumns);
          END;
        Customer.TABLECAPTION:
          BEGIN
            CLEAR(MATRIX_CaptionSet);
            RecRef.GETTABLE(Customer);
            RecRef.SETTABLE(Customer);
            MatrixMgt.GenerateMatrixData(
              RecRef,MATRIX_SetWanted,12,1,
              MATRIX_PrimKeyFirstCaptionInCu,MATRIX_CaptionSet,MATRIX_CaptionRange,MATRIX_CurrentNoOfColumns);
            FOR i := 1 TO MATRIX_CurrentNoOfColumns DO
              MATRIX_MatrixRecords[i].Code := MATRIX_CaptionSet[i];
            IF ShowColumnName THEN
              MatrixMgt.GenerateMatrixData(
                RecRef,MATRIX_SetWanted::Same,12,2,
                MATRIX_PrimKeyFirstCaptionInCu,MATRIX_CaptionSet,MATRIX_CaptionRange,MATRIX_CurrentNoOfColumns);
          END;
        Vendor.TABLECAPTION:
          BEGIN
            CLEAR(MATRIX_CaptionSet);
            RecRef.GETTABLE(Vendor);
            RecRef.SETTABLE(Vendor);
            IF SourceNoFilter <> '' THEN BEGIN
              FieldRef := RecRef.FIELDINDEX(1);
              FieldRef.SETFILTER(SourceNoFilter);
            END;
            MatrixMgt.GenerateMatrixData(
              RecRef,MATRIX_SetWanted,12,1,
              MATRIX_PrimKeyFirstCaptionInCu,MATRIX_CaptionSet,MATRIX_CaptionRange,MATRIX_CurrentNoOfColumns);
            FOR i := 1 TO MATRIX_CurrentNoOfColumns DO
              MATRIX_MatrixRecords[i].Code := MATRIX_CaptionSet[i];
            IF ShowColumnName THEN
              MatrixMgt.GenerateMatrixData(
                RecRef,MATRIX_SetWanted::Same,12,2,
                MATRIX_PrimKeyFirstCaptionInCu,MATRIX_CaptionSet,MATRIX_CaptionRange,MATRIX_CurrentNoOfColumns);

          END;
        GLSetup."Global Dimension 1 Code":
          BEGIN
            MatrixMgt.SetDimColumnSet(
              GLSetup."Global Dimension 1 Code",
              GlobalDim1Filter,MATRIX_SetWanted,MATRIX_PrimKeyFirstCaptionInCu,FirstColumn,LastColumn,MATRIX_CurrentNoOfColumns);
            MatrixMgt.DimToCaptions(
              MATRIX_CaptionSet,MATRIX_MatrixRecords,ColumnDimCode,
              FirstColumn,LastColumn,MATRIX_CurrentNoOfColumns,ShowColumnName,MATRIX_CaptionRange);
          END;
        GLSetup."Global Dimension 2 Code":
          BEGIN
            MatrixMgt.SetDimColumnSet(
              GLSetup."Global Dimension 2 Code",
              GlobalDim2Filter,MATRIX_SetWanted,MATRIX_PrimKeyFirstCaptionInCu,FirstColumn,LastColumn,MATRIX_CurrentNoOfColumns);
            MatrixMgt.DimToCaptions(
              MATRIX_CaptionSet,MATRIX_MatrixRecords,ColumnDimCode,
              FirstColumn,LastColumn,MATRIX_CurrentNoOfColumns,ShowColumnName,MATRIX_CaptionRange);
          END;
        ItemBudgetName."Budget Dimension 1 Code":
          BEGIN
            MatrixMgt.SetDimColumnSet(
              ItemBudgetName."Budget Dimension 1 Code",
              BudgetDim1Filter,MATRIX_SetWanted,MATRIX_PrimKeyFirstCaptionInCu,FirstColumn,LastColumn,MATRIX_CurrentNoOfColumns);
            MatrixMgt.DimToCaptions(
              MATRIX_CaptionSet,MATRIX_MatrixRecords,ColumnDimCode,
              FirstColumn,LastColumn,MATRIX_CurrentNoOfColumns,ShowColumnName,MATRIX_CaptionRange);
          END;
        ItemBudgetName."Budget Dimension 2 Code":
          BEGIN
            MatrixMgt.SetDimColumnSet(
              ItemBudgetName."Budget Dimension 2 Code",
              BudgetDim2Filter,MATRIX_SetWanted,MATRIX_PrimKeyFirstCaptionInCu,FirstColumn,LastColumn,MATRIX_CurrentNoOfColumns);
            MatrixMgt.DimToCaptions(
              MATRIX_CaptionSet,MATRIX_MatrixRecords,ColumnDimCode,
              FirstColumn,LastColumn,MATRIX_CurrentNoOfColumns,ShowColumnName,MATRIX_CaptionRange);
          END;
        ItemBudgetName."Budget Dimension 3 Code":
          BEGIN
            MatrixMgt.SetDimColumnSet(
              ItemBudgetName."Budget Dimension 3 Code",
              BudgetDim3Filter,MATRIX_SetWanted,MATRIX_PrimKeyFirstCaptionInCu,FirstColumn,LastColumn,MATRIX_CurrentNoOfColumns);
            MatrixMgt.DimToCaptions(
              MATRIX_CaptionSet,MATRIX_MatrixRecords,ColumnDimCode,
              FirstColumn,LastColumn,MATRIX_CurrentNoOfColumns,ShowColumnName,MATRIX_CaptionRange);
          END;
      END;
      FOR i := 1 TO 12 DO
        IF MATRIX_CaptionSet[i] = '' THEN
          MATRIX_CaptionSet[i] := ' ';
    END;

    LOCAL PROCEDURE FindPeriod@2(SearchText@1000 : Code[10]);
    VAR
      Item@1001 : Record 27;
      Calendar@1002 : Record 2000000007;
      PeriodFormMgt@1003 : Codeunit 359;
    BEGIN
      IF DateFilter <> '' THEN BEGIN
        Calendar.SETFILTER("Period Start",DateFilter);
        IF NOT PeriodFormMgt.FindDate('+',Calendar,PeriodType) THEN
          PeriodFormMgt.FindDate('+',Calendar,PeriodType::Day);
        Calendar.SETRANGE("Period Start");
      END;
      PeriodFormMgt.FindDate(SearchText,Calendar,PeriodType);
      Item.SETRANGE("Date Filter",Calendar."Period Start",Calendar."Period End");
      IF Item.GETRANGEMIN("Date Filter") = Item.GETRANGEMAX("Date Filter") THEN
        Item.SETRANGE("Date Filter",Item.GETRANGEMIN("Date Filter"));
      InternalDateFilter := Item.GETFILTER("Date Filter");
      IF (LineDimOption <> LineDimOption::Period) AND (ColumnDimOption <> ColumnDimOption::Period) THEN
        DateFilter := InternalDateFilter;
    END;

    LOCAL PROCEDURE GetCaptionClass@13(BudgetDimType@1000 : Integer) : Text[250];
    BEGIN
      IF ItemBudgetName.Name <> CurrentBudgetName THEN
        ItemBudgetName.GET(CurrentAnalysisArea,CurrentBudgetName);
      CASE BudgetDimType OF
        1:
          BEGIN
            IF ItemBudgetName."Budget Dimension 1 Code" <> '' THEN
              EXIT('1,6,' + ItemBudgetName."Budget Dimension 1 Code");
            EXIT(Text003);
          END;
        2:
          BEGIN
            IF ItemBudgetName."Budget Dimension 2 Code" <> '' THEN
              EXIT('1,6,' + ItemBudgetName."Budget Dimension 2 Code");
            EXIT(Text004);
          END;
        3:
          BEGIN
            IF ItemBudgetName."Budget Dimension 3 Code" <> '' THEN
              EXIT('1,6,' + ItemBudgetName."Budget Dimension 3 Code");
            EXIT(Text005);
          END;
      END;
    END;

    LOCAL PROCEDURE LookUpDimFilter@57(Dim@1000 : Code[20];VAR Text@1001 : Text[250]) : Boolean;
    VAR
      DimVal@1002 : Record 349;
      DimValList@1003 : Form 560;
    BEGIN
      IF Dim = '' THEN
        EXIT(FALSE);
      DimVal.SETRANGE("Dimension Code",Dim);
      DimValList.SETTABLEVIEW(DimVal);
      DimValList.LOOKUPMODE(TRUE);
      IF DimValList.RUNMODAL = ACTION::LookupOK THEN BEGIN
        DimValList.GETRECORD(DimVal);
        Text := DimValList.GetSelectionFilter;
      END;
      EXIT(TRUE);
    END;

    LOCAL PROCEDURE UpdateDimCtrls@1();
    BEGIN
      BudgetDim1FilterEnable := ItemBudgetName."Budget Dimension 1 Code" <> '';
      BudgetDim2FilterEnable := ItemBudgetName."Budget Dimension 2 Code" <> '';
      BudgetDim3FilterEnable := ItemBudgetName."Budget Dimension 3 Code" <> '';
    END;

    PROCEDURE SetNewBudgetName@5(NewPurchBudgetName@1000 : Code[10]);
    BEGIN
      NewBudgetName := NewPurchBudgetName;
    END;

    LOCAL PROCEDURE UpdateMatrixSubForm@7();
    BEGIN
      CurrPage.MATRIX.FORM.SetFilters(
        DateFilter,ItemFilter,SourceNoFilter,
        GlobalDim1Filter,GlobalDim2Filter,
        BudgetDim1Filter,BudgetDim2Filter,BudgetDim3Filter);
      CurrPage.MATRIX.FORM.Load(
        MATRIX_CaptionSet,MATRIX_MatrixRecords,MATRIX_CurrentNoOfColumns,
        CurrentBudgetName,LineDimOption,ColumnDimOption,RoundingFactor,ValueType);
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE CurrentBudgetNameOnAfterValida@19022925();
    BEGIN
      ItemBudgetManagement.SetItemBudgetName(
        CurrentBudgetName,ItemBudgetName,ItemStatisticsBuffer,
        BudgetDim1Filter,BudgetDim2Filter,BudgetDim3Filter);
      ItemBudgetManagement.ValidateLineDimCode(
        ItemBudgetName,LineDimCode,LineDimOption,ColumnDimOption,
        InternalDateFilter,DateFilter,ItemStatisticsBuffer,PeriodInitialized);
      ItemBudgetManagement.ValidateColumnDimCode(
        ItemBudgetName,ColumnDimCode,ColumnDimOption,LineDimOption,
        InternalDateFilter,DateFilter,ItemStatisticsBuffer,PeriodInitialized);
      UpdateDimCtrls;
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE ColumnDimCodeOnAfterValidate@19023109();
    BEGIN
      FindPeriod('');
      MATRIX_GenerateColumnCaptions(MATRIX_Step::Initial);
      UpdateMatrixSubForm;
    END;

    LOCAL PROCEDURE LineDimCodeOnAfterValidate@19031201();
    BEGIN
      FindPeriod('');
      MATRIX_GenerateColumnCaptions(MATRIX_Step::Initial);
      UpdateMatrixSubForm;
    END;

    LOCAL PROCEDURE ValueTypeOnAfterValidate@19028630();
    BEGIN
      FindPeriod('');
      MATRIX_GenerateColumnCaptions(MATRIX_Step::Initial);
      UpdateMatrixSubForm;
    END;

    LOCAL PROCEDURE PeriodTypeOnAfterValidate@19015506();
    VAR
      MATRIX_Step@1001 : 'First,Previous,Next';
    BEGIN
      IF ColumnDimOption = ColumnDimOption::Period THEN
        MATRIX_GenerateColumnCaptions(MATRIX_Step::First);
      UpdateMatrixSubForm;
    END;

    LOCAL PROCEDURE ShowColumnNameOnAfterValidate@19074585();
    VAR
      MATRIX_SetWanted@1000 : 'First,Previous,Same,Next';
    BEGIN
      MATRIX_GenerateColumnCaptions(MATRIX_SetWanted::Same);
      UpdateMatrixSubForm;
    END;

    LOCAL PROCEDURE RoundingFactorOnAfterValidate@19029817();
    BEGIN
      UpdateMatrixSubForm;
    END;

    LOCAL PROCEDURE BudgetDim3FilterOnAfterValidat@19015715();
    BEGIN
      IF ColumnDimOption = ColumnDimOption::"Budget Dimension 3" THEN
        MATRIX_GenerateColumnCaptions(MATRIX_Step::Initial);
      UpdateMatrixSubForm;
    END;

    LOCAL PROCEDURE BudgetDim2FilterOnAfterValidat@19061952();
    BEGIN
      IF ColumnDimOption = ColumnDimOption::"Budget Dimension 2" THEN
        MATRIX_GenerateColumnCaptions(MATRIX_Step::Initial);
      UpdateMatrixSubForm;
    END;

    LOCAL PROCEDURE BudgetDim1FilterOnAfterValidat@19002351();
    BEGIN
      IF ColumnDimOption = ColumnDimOption::"Budget Dimension 1" THEN
        MATRIX_GenerateColumnCaptions(MATRIX_Step::Initial);
      UpdateMatrixSubForm;
    END;

    LOCAL PROCEDURE GlobalDim2FilterOnAfterValidat@19025957();
    BEGIN
      IF ColumnDimOption = ColumnDimOption::"Global Dimension 2" THEN
        MATRIX_GenerateColumnCaptions(MATRIX_Step::Initial);
      UpdateMatrixSubForm;
    END;

    LOCAL PROCEDURE GlobalDim1FilterOnAfterValidat@19037628();
    BEGIN
      IF ColumnDimOption = ColumnDimOption::"Global Dimension 1" THEN
        MATRIX_GenerateColumnCaptions(MATRIX_Step::Initial);
      UpdateMatrixSubForm;
    END;

    LOCAL PROCEDURE SourceNoFilterOnAfterValidate@19003103();
    BEGIN
      IF ColumnDimOption = ColumnDimOption::Vendor THEN
        MATRIX_GenerateColumnCaptions(MATRIX_Step::Initial);
      UpdateMatrixSubForm;
    END;

    LOCAL PROCEDURE ItemFilterOnAfterValidate@19051257();
    BEGIN
      IF ColumnDimOption = ColumnDimOption::Item THEN
        MATRIX_GenerateColumnCaptions(MATRIX_Step::Initial);
      UpdateMatrixSubForm;
    END;

    LOCAL PROCEDURE DateFilterOnAfterValidate@19006009();
    BEGIN
      IF ColumnDimOption = ColumnDimOption::Period THEN
        MATRIX_GenerateColumnCaptions(MATRIX_Step::Initial);
      UpdateMatrixSubForm;
    END;

    BEGIN
    END.
  }
}
