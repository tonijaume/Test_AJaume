OBJECT Page 414 G/L Balance
{
  OBJECT-PROPERTIES
  {
    Date=21/05/03;
    Time=12:00:00;
    Version List=NAVW13.70;
  }
  PROPERTIES
  {
    CaptionML=[ENU=G/L Balance;
               ESP=Saldo C/G];
    SaveValues=Yes;
    SourceTable=Table15;
    PageType=List;
    OnOpenPage=BEGIN
                 FindPeriod('');
               END;

    OnAfterGetRecord=BEGIN
                       NameIndent := 0;
                       IF DebitCreditTotals THEN
                         CALCFIELDS("Net Change", "Debit Amount", "Credit Amount")
                       ELSE BEGIN
                         CALCFIELDS("Net Change");
                         IF "Net Change" > 0 THEN BEGIN
                           "Debit Amount" := "Net Change";
                           "Credit Amount" := 0
                         END ELSE BEGIN
                           "Debit Amount" := 0;
                           "Credit Amount" := -"Net Change"
                         END
                       END;
                       NoOnFormat;
                       NameOnFormat;
                       IncomeBalanceOnFormat;
                       DebitAmountOnFormat;
                       CreditAmountOnFormat;
                       NetChangeOnFormat;
                     END;

    OnNewRecord=BEGIN
                  SetupNewGLAcc(xRec,BelowxRec);
                END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 24      ;1   ;ActionGroup;
                      CaptionML=[ENU=A&ccount;
                                 ESP=&Cuenta] }
      { 33      ;2   ;Action    ;
                      ShortCutKey=May£s+F7;
                      CaptionML=[ENU=Card;
                                 ESP=Ficha];
                      RunObject=Page 17;
                      RunFormLink=No.=FIELD(No.),
                                  Date Filter=FIELD(Date Filter),
                                  Global Dimension 1 Filter=FIELD(Global Dimension 1 Filter),
                                  Global Dimension 2 Filter=FIELD(Global Dimension 2 Filter),
                                  Budget Filter=FIELD(Budget Filter),
                                  Business Unit Filter=FIELD(Business Unit Filter);
                      Image=EditLines }
      { 34      ;2   ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=[ENU=Ledger E&ntries;
                                 ESP=&Movimientos];
                      RunObject=Page 20;
                      RunFormView=SORTING(G/L Account No.);
                      RunFormLink=G/L Account No.=FIELD(No.);
                      Promoted=No;
                      Image=GLRegisters;
                      PromotedCategory=Process }
      { 37      ;2   ;Action    ;
                      CaptionML=[ENU=Co&mments;
                                 ESP=C&omentarios];
                      RunObject=Page 124;
                      RunFormLink=Table Name=CONST(G/L Account),
                                  No.=FIELD(No.);
                      Image=ViewComments }
      { 184     ;2   ;Action    ;
                      ShortCutKey=May£s+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 ESP=Dimensiones];
                      RunObject=Page 540;
                      RunFormLink=Table ID=CONST(15),
                                  No.=FIELD(No.);
                      Image=Dimensions }
      { 38      ;2   ;Action    ;
                      CaptionML=[ENU=E&xtended Texts;
                                 ESP=Te&xtos adicionales];
                      RunObject=Page 391;
                      RunFormView=SORTING(Table Name,No.,Language Code,All Language Codes,Starting Date,Ending Date);
                      RunFormLink=Table Name=CONST(G/L Account),
                                  No.=FIELD(No.) }
      { 41      ;2   ;Action    ;
                      CaptionML=[ENU=Receivables-Payables;
                                 ESP=Cobros y pagos];
                      RunObject=Page 159;
                      Image=ReceivablesPayables }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 20      ;1   ;Action    ;
                      CaptionML=[ENU=Previous Period;
                                 ESP=Periodo anterior];
                      ToolTipML=ENU=Previous Period;
                      Promoted=Yes;
                      Image=PreviousRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 FindPeriod('<=');
                               END;
                                }
      { 21      ;1   ;Action    ;
                      CaptionML=[ENU=Next Period;
                                 ESP=Periodo siguiente];
                      ToolTipML=ENU=Next Period;
                      Promoted=Yes;
                      Image=NextRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 FindPeriod('>=');
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 50  ;1   ;Group     ;
                CaptionML=[ENU=Options;
                           ESP=Opciones] }

    { 40  ;2   ;Field     ;
                CaptionML=[ENU=Closing Entries;
                           ESP=Movs. regularizaci¢n];
                OptionCaptionML=[ENU=Include,Exclude;
                                 ESP=Incluir,Excluir];
                SourceExpr=ClosingEntryFilter;
                OnValidate=BEGIN
                             FindPeriod('');
                               ClosingEntryFilterOnAfterValid;
                           END;
                            }

    { 27  ;2   ;Field     ;
                CaptionML=[ENU=Debit && Credit Totals;
                           ESP=Totales Debe/Haber];
                SourceExpr=DebitCreditTotals;
                OnValidate=BEGIN
                             DebitCreditTotalsOnAfterValida;
                           END;
                            }

    { 14  ;2   ;Field     ;
                CaptionML=[ENU=View by;
                           ESP=Ver por];
                ToolTipML=[ENU=Day;
                           ESP=D¡a];
                OptionCaptionML=[ENU=Day,Week,Month,Quarter,Year,Accounting Period;
                                 ESP=D¡a,Semana,Mes,Trimestre,A¤o,Periodo contable];
                SourceExpr=PeriodType;
                OnValidate=BEGIN
                             IF PeriodType = PeriodType::"Accounting Period" THEN
                               AccountingPerioPeriodTypeOnVal;
                             IF PeriodType = PeriodType::Year THEN
                               YearPeriodTypeOnValidate;
                             IF PeriodType = PeriodType::Quarter THEN
                               QuarterPeriodTypeOnValidate;
                             IF PeriodType = PeriodType::Month THEN
                               MonthPeriodTypeOnValidate;
                             IF PeriodType = PeriodType::Week THEN
                               WeekPeriodTypeOnValidate;
                             IF PeriodType = PeriodType::Day THEN
                               DayPeriodTypeOnValidate;
                           END;
                            }

    { 25  ;2   ;Field     ;
                CaptionML=[ENU=View as;
                           ESP=Ver como];
                ToolTipML=[ENU=Net Change;
                           ESP=Saldo periodo];
                OptionCaptionML=[ENU=Net Change,Balance at Date;
                                 ESP=Saldo periodo,Saldo a la fecha];
                SourceExpr=AmountType;
                OnValidate=BEGIN
                             IF AmountType = AmountType::"Balance at Date" THEN
                               BalanceatDateAmountTypeOnValid;
                             IF AmountType = AmountType::"Net Change" THEN
                               NetChangeAmountTypeOnValidate;
                           END;
                            }

    { 5   ;1   ;Group     ;
                IndentationColumnName=NameIndent;
                IndentationControls=Name;
                GroupType=Repeater }

    { 6   ;2   ;Field     ;
                SourceExpr="No." }

    { 8   ;2   ;Field     ;
                SourceExpr=Name }

    { 1   ;2   ;Field     ;
                SourceExpr="Income/Balance" }

    { 10  ;2   ;Field     ;
                BlankNumbers=BlankZero;
                SourceExpr="Debit Amount" }

    { 12  ;2   ;Field     ;
                BlankNumbers=BlankZero;
                SourceExpr="Credit Amount" }

    { 35  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Net Change";
                Visible=FALSE }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      PeriodType@1000 : 'Day,Week,Month,Quarter,Year,Accounting Period';
      AmountType@1001 : 'Net Change,Balance at Date';
      ClosingEntryFilter@1002 : 'Include,Exclude';
      DebitCreditTotals@1003 : Boolean;
      "No.Emphasize"@19074284 : Boolean INDATASET;
      NameEmphasize@19018670 : Boolean INDATASET;
      NameIndent@19079073 : Integer INDATASET;
      "Income/BalanceEmphasize"@19057832 : Boolean INDATASET;
      "Debit AmountEmphasize"@19070960 : Boolean INDATASET;
      "Credit AmountEmphasize"@19071010 : Boolean INDATASET;
      "Net ChangeEmphasize"@19025187 : Boolean INDATASET;

    LOCAL PROCEDURE FindPeriod@1(SearchText@1000 : Code[10]);
    VAR
      Calendar@1001 : Record 2000000007;
      AccountingPeriod@1002 : Record 50;
      PeriodFormMgt@1003 : Codeunit 359;
    BEGIN
      IF GETFILTER("Date Filter") <> '' THEN BEGIN
        Calendar.SETFILTER("Period Start",GETFILTER("Date Filter"));
        IF NOT PeriodFormMgt.FindDate('+',Calendar,PeriodType) THEN
          PeriodFormMgt.FindDate('+',Calendar,PeriodType::Day);
        Calendar.SETRANGE("Period Start");
      END;
      PeriodFormMgt.FindDate(SearchText,Calendar,PeriodType);
      IF AmountType = AmountType::"Net Change" THEN
        IF Calendar."Period Start" = Calendar."Period End" THEN
          SETRANGE("Date Filter",Calendar."Period Start")
        ELSE
          SETRANGE("Date Filter",Calendar."Period Start",Calendar."Period End")
      ELSE
        SETRANGE("Date Filter",0D,Calendar."Period End");
      IF ClosingEntryFilter = ClosingEntryFilter::Exclude THEN BEGIN
        AccountingPeriod.SETCURRENTKEY("New Fiscal Year");
        AccountingPeriod.SETRANGE("New Fiscal Year",TRUE);
        IF GETRANGEMIN("Date Filter") = 0D THEN
          AccountingPeriod.SETRANGE("Starting Date",0D,GETRANGEMAX("Date Filter"))
        ELSE
          AccountingPeriod.SETRANGE(
            "Starting Date",
            GETRANGEMIN("Date Filter") + 1,
            GETRANGEMAX("Date Filter"));
        IF AccountingPeriod.FIND('-') THEN
          REPEAT
            SETFILTER(
              "Date Filter",GETFILTER("Date Filter") + '&<>%1',
              CLOSINGDATE(AccountingPeriod."Starting Date" - 1));
          UNTIL AccountingPeriod.NEXT = 0;
      END ELSE
        SETRANGE(
          "Date Filter",
          GETRANGEMIN("Date Filter"),
          CLOSINGDATE(GETRANGEMAX("Date Filter")));
    END;

    LOCAL PROCEDURE ClosingEntryFilterOnAfterValid@19030533();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE DebitCreditTotalsOnAfterValida@19017628();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE DayPeriodTypeOnPush@19008851();
    BEGIN
      FindPeriod('');
    END;

    LOCAL PROCEDURE WeekPeriodTypeOnPush@19046063();
    BEGIN
      FindPeriod('');
    END;

    LOCAL PROCEDURE MonthPeriodTypeOnPush@19047374();
    BEGIN
      FindPeriod('');
    END;

    LOCAL PROCEDURE QuarterPeriodTypeOnPush@19018850();
    BEGIN
      FindPeriod('');
    END;

    LOCAL PROCEDURE YearPeriodTypeOnPush@19051042();
    BEGIN
      FindPeriod('');
    END;

    LOCAL PROCEDURE AccountingPerioPeriodTypOnPush@19038761();
    BEGIN
      FindPeriod('');
    END;

    LOCAL PROCEDURE BalanceatDateAmountTypeOnPush@19049003();
    BEGIN
      FindPeriod('');
    END;

    LOCAL PROCEDURE NetChangeAmountTypeOnPush@19074855();
    BEGIN
      FindPeriod('');
    END;

    LOCAL PROCEDURE NoOnFormat@19031395();
    BEGIN
      "No.Emphasize" := "Account Type" <> "Account Type"::Posting;
    END;

    LOCAL PROCEDURE NameOnFormat@19039177();
    BEGIN
      NameIndent := Indentation;
      NameEmphasize := "Account Type" <> "Account Type"::Posting;
    END;

    LOCAL PROCEDURE IncomeBalanceOnFormat@19020457();
    BEGIN
      "Income/BalanceEmphasize" := "Account Type" <> "Account Type"::Posting;
    END;

    LOCAL PROCEDURE DebitAmountOnFormat@19036667();
    BEGIN
      "Debit AmountEmphasize" := "Account Type" <> "Account Type"::Posting;
    END;

    LOCAL PROCEDURE CreditAmountOnFormat@19075481();
    BEGIN
      "Credit AmountEmphasize" := "Account Type" <> "Account Type"::Posting;
    END;

    LOCAL PROCEDURE NetChangeOnFormat@19074173();
    BEGIN
      "Net ChangeEmphasize" := "Account Type" <> "Account Type"::Posting;
    END;

    LOCAL PROCEDURE DayPeriodTypeOnValidate@19012979();
    BEGIN
      DayPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE WeekPeriodTypeOnValidate@19058475();
    BEGIN
      WeekPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE MonthPeriodTypeOnValidate@19021027();
    BEGIN
      MonthPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE QuarterPeriodTypeOnValidate@19015346();
    BEGIN
      QuarterPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE YearPeriodTypeOnValidate@19064743();
    BEGIN
      YearPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE AccountingPerioPeriodTypeOnVal@19058901();
    BEGIN
      AccountingPerioPeriodTypOnPush;
    END;

    LOCAL PROCEDURE NetChangeAmountTypeOnValidate@19062218();
    BEGIN
      NetChangeAmountTypeOnPush;
    END;

    LOCAL PROCEDURE BalanceatDateAmountTypeOnValid@19007073();
    BEGIN
      BalanceatDateAmountTypeOnPush;
    END;

    BEGIN
    END.
  }
}
