OBJECT Page 10724 New Chart of Accounts
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=NAVES6.00.01;
  }
  PROPERTIES
  {
    CaptionML=[ENU=New Chart of Accounts;
               ESP=Plan de cuentas nuevo];
    SourceTable=Table10722;
    PageType=List;
    CardFormID=Page10723;
    OnAfterGetRecord=BEGIN
                       NameIndent := 0;
                       NoOnFormat;
                       NameOnFormat;
                     END;

    OnNewRecord=BEGIN
                  SetupNewGLAcc(xRec,BelowxRec);
                END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1100022 ;1   ;ActionGroup;
                      CaptionML=[ENU=A&ccount;
                                 ESP=&Cuenta] }
      { 1100025 ;2   ;Action    ;
                      CaptionML=[ENU=Co&mments;
                                 ESP=C&omentarios];
                      RunObject=Page 124;
                      RunFormLink=Table Name=CONST(New G/L Account),
                                  No.=FIELD(No.);
                      Image=ViewComments }
      { 1100084 ;2   ;Action    ;
                      ShortCutKey=May£s+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 ESP=Dimensiones];
                      RunObject=Page 540;
                      RunFormLink=Table ID=CONST(10722),
                                  No.=FIELD(No.);
                      Image=Dimensions }
      { 1100023 ;2   ;Action    ;
                      CaptionML=[ENU=E&xtended Texts;
                                 ESP=Te&xtos adicionales];
                      RunObject=Page 391;
                      RunFormView=SORTING(Table Name,No.,Language Code,All Language Codes,Starting Date,Ending Date);
                      RunFormLink=Table Name=CONST(New G/L Account),
                                  No.=FIELD(No.) }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100080 ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 ESP=Acci&ones] }
      { 1100081 ;2   ;Action    ;
                      CaptionML=[ENU=Import current chart of accounts;
                                 ESP=Importar Plan de cuentas actual];
                      OnAction=BEGIN
                                 CopyFromGLAcc;
                               END;
                                }
      { 1100082 ;2   ;Action    ;
                      CaptionML=[ENU=Import chart of accounts from txt;
                                 ESP=Importar Plan de cuentas a partir de txt];
                      OnAction=VAR
                                 InStr@1100003 : InStream;
                                 ImportFile@1100002 : File;
                                 ToFile@1100001 : Text[1024];
                               BEGIN
                                 // END;
                                 IF NOT ISSERVICETIER THEN
                                   DATAPORT.RUNMODAL(DATAPORT::"G/L Importing Tool")
                                 ELSE BEGIN
                                   UPLOAD('', '', 'Text file(*.txt)|*.txt', '', ToFile);
                                   ImportFile.OPEN(ToFile);
                                   ImportFile.CREATEINSTREAM(InStr);
                                   XMLPORT.IMPORT(XMLPORT::"G/L Importing Tool",InStr);
                                   ImportFile.CLOSE;
                                 END;
                               END;
                                }
      { 1100083 ;2   ;Separator  }
      { 1100094 ;2   ;Action    ;
                      CaptionML=[ENU=Test Chart of Accounts;
                                 ESP=Comprobar Plan de cuentas];
                      OnAction=VAR
                                 TestChartOfAcc@1100000 : Codeunit 3;
                               BEGIN
                                 TestChartOfAcc.IndentNewChartOfAccounts;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100000;1;Group     ;
                IndentationColumnName=NameIndent;
                IndentationControls=Name;
                GroupType=Repeater }

    { 1100002;2;Field     ;
                SourceExpr="No." }

    { 1100004;2;Field     ;
                SourceExpr=Name }

    { 1100006;2;Field     ;
                SourceExpr="Income/Balance";
                Visible=FALSE }

    { 1100008;2;Field     ;
                SourceExpr="Account Type";
                Visible=FALSE }

    { 1100026;2;Field     ;
                SourceExpr="Direct Posting";
                Visible=FALSE }

    { 1100010;2;Field     ;
                SourceExpr=Totaling;
                Visible=FALSE;
                OnLookup=VAR
                           NewGLaccList@1100000 : Form 10724;
                         BEGIN
                           NewGLaccList.LOOKUPMODE(TRUE);
                           IF NOT (NewGLaccList.RUNMODAL = ACTION::LookupOK) THEN
                             EXIT(FALSE)
                           ELSE
                             Text := NewGLaccList.GetSelectionFilter;
                           EXIT(TRUE);
                         END;
                          }

    { 1100070;2;Field     ;
                SourceExpr="Global Dimension 1 Code";
                Visible=FALSE }

    { 1100072;2;Field     ;
                SourceExpr="Global Dimension 2 Code";
                Visible=FALSE }

    { 1100012;2;Field     ;
                SourceExpr="Gen. Posting Type" }

    { 1100037;2;Field     ;
                SourceExpr="Gen. Bus. Posting Group" }

    { 1100014;2;Field     ;
                SourceExpr="Gen. Prod. Posting Group" }

    { 1100032;2;Field     ;
                SourceExpr="VAT Bus. Posting Group";
                Visible=FALSE }

    { 1100044;2;Field     ;
                SourceExpr="VAT Prod. Posting Group";
                Visible=FALSE }

    { 1100078;2;Field     ;
                SourceExpr="Income Stmt. Bal. Acc.";
                Visible=FALSE }

    { 1100057;2;Field     ;
                SourceExpr="Default IC Partner G/L Acc. No";
                Visible=FALSE }

    { 1100061;2;Field     ;
                SourceExpr="Consol. Translation Method" }

  }
  CODE
  {
    VAR
      "No.Emphasize"@19074284 : Boolean INDATASET;
      NameEmphasize@19018670 : Boolean INDATASET;
      NameIndent@19079073 : Integer INDATASET;

    PROCEDURE SetSelection@1100000(VAR NewGLAcc@1100000 : Record 10722);
    BEGIN
      CurrPage.SETSELECTIONFILTER(NewGLAcc);
    END;

    PROCEDURE GetSelectionFilter@1100001() : Code[80];
    VAR
      NewGLAcc@1100000 : Record 10722;
      FirstAcc@1100001 : Text[20];
      LastAcc@1100002 : Text[20];
      SelectionFilter@1100003 : Code[80];
      NewGLAccCount@1100004 : Integer;
      More@1100005 : Boolean;
    BEGIN
      CurrPage.SETSELECTIONFILTER(NewGLAcc);
      NewGLAcc.SETCURRENTKEY("No.");
      NewGLAccCount := NewGLAcc.COUNT;
      IF NewGLAccCount > 0 THEN BEGIN
        NewGLAcc.FIND('-');
        WHILE NewGLAccCount > 0 DO BEGIN
          NewGLAccCount := NewGLAccCount - 1;
          NewGLAcc.MARKEDONLY(FALSE);
          FirstAcc := NewGLAcc."No.";
          LastAcc := FirstAcc;
          More := (NewGLAccCount > 0);
          WHILE More DO
            IF NewGLAcc.NEXT = 0 THEN
              More := FALSE
            ELSE
              IF NOT NewGLAcc.MARK THEN
                More := FALSE
              ELSE BEGIN
                LastAcc := NewGLAcc."No.";
                NewGLAccCount := NewGLAccCount - 1;
                IF NewGLAccCount = 0 THEN
                  More := FALSE;
              END;
          IF SelectionFilter <> '' THEN
            SelectionFilter := SelectionFilter + '|';
          IF FirstAcc = LastAcc THEN
            SelectionFilter := SelectionFilter + FirstAcc
          ELSE
            SelectionFilter := SelectionFilter + FirstAcc + '..' + LastAcc;
          IF NewGLAccCount > 0 THEN BEGIN
            NewGLAcc.MARKEDONLY(TRUE);
            NewGLAcc.NEXT;
          END;
        END;
      END;
      EXIT(SelectionFilter);
    END;

    LOCAL PROCEDURE NoOnFormat@19031395();
    BEGIN
      "No.Emphasize" := "Account Type" <> "Account Type"::Posting;
    END;

    LOCAL PROCEDURE NameOnFormat@19039177();
    BEGIN
      NameIndent := Indentation;
      NameEmphasize := "Account Type" <> "Account Type"::Posting;
    END;

    BEGIN
    END.
  }
}
