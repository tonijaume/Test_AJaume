OBJECT Page 3010574 Cost Budget by Cost Center
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=CACEM6.00.01,NAVES6.00.01;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Cost Budget by Cost Center;
               ESP=Ppto. costes por centro coste];
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    LinksAllowed=No;
    SourceTable=Table3010551;
    PageType=ListPlus;
    OnOpenPage=VAR
                 CostBudgName@1100000 : Record 3010572;
               BEGIN
                 FindPeriod('');
                 MatrixRecord.SETCURRENTKEY("Sorting Order");
                 MATRIX_CaptionFieldNo := 1;
                 CostBudgName.Code := BudgetFilter;
                 IF NOT CostBudgName.FIND('=<>') THEN BEGIN
                   CostBudgName.INIT;
                   CostBudgName.Code := Text000;
                   CostBudgName.Name := Text001;
                   CostBudgName.INSERT;
                 END;
                 BudgetFilter := CostBudgName.Code;
                 MATRIX_GenerateColumnCaptions(MATRIX_SetWanted::First);
                 UpdateMatrixSubform;
               END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1100002 ;1   ;ActionGroup;
                      CaptionML=[ENU=Budge&t;
                                 ESP=Presupues&to] }
      { 1100003 ;2   ;Action    ;
                      CaptionML=[ENU=By &Period;
                                 ESP=Por &periodo];
                      RunObject=Page 3010573;
                      RunFormOnRec=Yes }
      { 1100004 ;2   ;Action    ;
                      CaptionML=[ENU=By Cost &Object;
                                 ESP=Por &objeto coste];
                      RunObject=Page 3010575;
                      RunFormOnRec=Yes }
      { 1100005 ;2   ;Separator  }
      { 1100006 ;2   ;Action    ;
                      CaptionML=[ENU=Budget / Movement;
                                 ESP=&Presupuesto/Movimiento];
                      RunObject=Page 3010576;
                      RunFormOnRec=Yes }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100017 ;1   ;Action    ;
                      CaptionML=[ENU=Previous Set;
                                 ESP=Conjunto anterior];
                      ToolTipML=ENU=Previous Set;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousSet;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MATRIX_GenerateColumnCaptions(MATRIX_SetWanted::Previous);
                                 UpdateMatrixSubform;
                               END;
                                }
      { 1100016 ;1   ;Action    ;
                      CaptionML=[ENU=Previous Column;
                                 ESP=Columna anterior];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MATRIX_GenerateColumnCaptions(MATRIX_SetWanted::PreviousColumn);
                                 UpdateMatrixSubform;
                               END;
                                }
      { 1100015 ;1   ;Action    ;
                      CaptionML=[ENU=Next Column;
                                 ESP=Columna siguiente];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MATRIX_GenerateColumnCaptions(MATRIX_SetWanted::NextColumn);
                                 UpdateMatrixSubform;
                               END;
                                }
      { 1100014 ;1   ;Action    ;
                      CaptionML=[ENU=Next Set;
                                 ESP=Conjunto siguiente];
                      ToolTipML=ENU=Next Set;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextSet;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MATRIX_GenerateColumnCaptions(MATRIX_SetWanted::Next);
                                 UpdateMatrixSubform;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100007;1;Group     ;
                CaptionML=[ENU=General;
                           ESP=General] }

    { 1100008;2;Field     ;
                CaptionML=[ENU=Rounding Factor;
                           ESP=Factor redondeo];
                OptionCaptionML=[ENU=None,1,1000,1000000;
                                 ESP=No,1,1000,1000000];
                SourceExpr=RoundingFactor;
                OnValidate=BEGIN
                             RoundingFactorOnAfterValidate;
                           END;
                            }

    { 1100020;2;Field     ;
                CaptionML=[ENU=Budget Filter;
                           ESP=Filtro presupuesto];
                SourceExpr=BudgetFilter;
                TableRelation="Cost Budget Name";
                OnValidate=BEGIN
                             BudgetFilterOnAfterValidate;
                           END;
                            }

    { 1100010;2;Field     ;
                CaptionML=[ENU=View by;
                           ESP=Ver por];
                OptionCaptionML=[ENU=Day,Week,Month,Quarter,Year,Period;
                                 ESP=D¡a,Semana,Mes,Trimestre,A¤o,Periodo];
                SourceExpr=PeriodType;
                OnValidate=BEGIN
                             FindPeriod('');
                               PeriodTypeOnAfterValidate;
                           END;
                            }

    { 1100012;2;Field     ;
                CaptionML=[ENU=View as;
                           ESP=Ver como];
                OptionCaptionML=[ENU=Balance at Date,Net Change;
                                 ESP=Saldo a la fecha,Saldo periodo];
                SourceExpr=AmountType;
                OnValidate=BEGIN
                             FindPeriod('');
                               AmountTypeOnAfterValidate;
                           END;
                            }

    { 1100000;1;Part      ;
                Name=MatrixForm;
                PagePartID=Page36885 }

  }
  CODE
  {
    VAR
      MatrixRecords@1150000 : ARRAY [32] OF Record 3010581;
      MatrixRecord@1150001 : Record 3010581;
      MatrixRecordRef@1150002 : RecordRef;
      MatrixMgt@1150003 : Codeunit 9200;
      MATRIX_CaptionSet@1150004 : ARRAY [32] OF Text[80];
      MATRIX_CaptionRange@1150005 : Text[80];
      MATRIX_PKFirstRecInCurrSet@1150006 : Text[80];
      MATRIX_SetWanted@1150007 : 'First,Previous,Same,Next,PreviousColumn,NextColumn';
      PeriodType@1150008 : 'Day,Week,Month,Quarter,Year,Period';
      RoundingFactor@1150009 : 'None,1,1000,1000000';
      AmountType@1150010 : 'Balance at Date,Net Change';
      MATRIX_CaptionFieldNo@1150011 : Integer;
      CurrentMatrixRecordOrdinal@1150012 : Integer;
      MATRIX_CurrSetLength@1150013 : Integer;
      BudgetFilter@1100000 : Code[10];
      Text000@1100002 : TextConst 'ENU=STANDARD;ESP=ESTµNDAR';
      Text001@1100001 : TextConst 'ENU=Default Cost Budget;ESP=Ppto. costes predet.';

    PROCEDURE MATRIX_GenerateColumnCaptions@1150000(Step@1150000 : 'First,Previous,Same,Next,PreviousColumn,NextColumn');
    BEGIN
      CLEAR(MATRIX_CaptionSet);
      CLEAR(MatrixRecords);
      CurrentMatrixRecordOrdinal := 1;

      MatrixRecord.SETRANGE("Line Type",MatrixRecord."Line Type"::"Cost Center");
      IF MatrixRecord.FIND('-') THEN;

      MatrixRecordRef.GETTABLE(MatrixRecord);
      MatrixRecordRef.SETTABLE(MatrixRecord);

      MatrixMgt.GenerateMatrixData(MatrixRecordRef,MATRIX_SetWanted,ARRAYLEN(MatrixRecords),MATRIX_CaptionFieldNo,
        MATRIX_PKFirstRecInCurrSet,MATRIX_CaptionSet,MATRIX_CaptionRange,MATRIX_CurrSetLength);

      IF MATRIX_CurrSetLength > 0 THEN BEGIN
        MatrixRecord.SETPOSITION(MATRIX_PKFirstRecInCurrSet);
        MatrixRecord.FIND;
        REPEAT
          MatrixRecords[CurrentMatrixRecordOrdinal].COPY(MatrixRecord);
          CurrentMatrixRecordOrdinal := CurrentMatrixRecordOrdinal + 1;
        UNTIL (CurrentMatrixRecordOrdinal > MATRIX_CurrSetLength) OR (MatrixRecord.NEXT <> 1);
      END;
    END;

    LOCAL PROCEDURE FindPeriod@1150001(FindTxt@1150000 : Code[10]);
    VAR
      Calendar@1150001 : Record 2000000007;
      PeriodFormMgt@1150002 : Codeunit 359;
    BEGIN
      IF GETFILTER("Date Filter") <> '' THEN BEGIN
        Calendar.SETFILTER("Period Start",GETFILTER("Date Filter"));
        IF NOT PeriodFormMgt.FindDate('+',Calendar,PeriodType) THEN
          PeriodFormMgt.FindDate('+',Calendar,PeriodType::Day);
        Calendar.SETRANGE("Period Start");
      END;
      PeriodFormMgt.FindDate(FindTxt,Calendar,PeriodType);
      IF AmountType = AmountType::"Net Change" THEN BEGIN
        SETRANGE("Date Filter",Calendar."Period Start",Calendar."Period End");
        IF GETRANGEMIN("Date Filter") = GETRANGEMAX("Date Filter") THEN
          SETRANGE("Date Filter",GETRANGEMIN("Date Filter"));
      END ELSE
        SETRANGE("Date Filter",0D,Calendar."Period End");
    END;

    PROCEDURE UpdateMatrixSubform@1102601003();
    BEGIN
      CurrPage.MatrixForm.FORM.Load(
        MATRIX_CaptionSet,MatrixRecords,MATRIX_CurrSetLength,GETFILTER("Date Filter"),BudgetFilter,RoundingFactor);
    END;

    LOCAL PROCEDURE RoundingFactorOnAfterValidate@19029817();
    BEGIN
      UpdateMatrixSubform;
    END;

    LOCAL PROCEDURE PeriodTypeOnAfterValidate@19015506();
    BEGIN
      UpdateMatrixSubform;
    END;

    LOCAL PROCEDURE AmountTypeOnAfterValidate@19077637();
    BEGIN
      UpdateMatrixSubform;
    END;

    LOCAL PROCEDURE BudgetFilterOnAfterValidate@19069837();
    BEGIN
      UpdateMatrixSubform;
    END;

    BEGIN
    END.
  }
}
