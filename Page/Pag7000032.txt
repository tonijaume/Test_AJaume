OBJECT Page 7000032 BG/PO Maturity Lines
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVES6.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Lines;
               ESP=L¡neas];
    SourceTable=Table2000000007;
    PageType=ListPart;
    OnOpenPage=BEGIN
                 RESET;
               END;

    OnFindRecord=BEGIN
                   EXIT(PeriodFormManagement.FindDate(Which,Rec,PeriodLength));
                 END;

    OnNextRecord=BEGIN
                   EXIT(PeriodFormManagement.NextDate(Steps,Rec,PeriodLength));
                 END;

    OnAfterGetRecord=BEGIN
                       SetDateFilter;
                       IF Type = Type::Receivable THEN BEGIN
                         BillGr.CALCFIELDS(Amount,"Amount (LCY)");
                         DocAmount := BillGr.Amount;
                         DocAmountLCY := BillGr."Amount (LCY)";
                       END;
                       IF Type = Type::Payable THEN BEGIN
                         PmtOrd.CALCFIELDS(Amount,"Amount (LCY)");
                         DocAmount := PmtOrd.Amount;
                         DocAmountLCY := PmtOrd."Amount (LCY)";
                       END;
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Editable=FALSE;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                SourceExpr="Period Start" }

    { 6   ;2   ;Field     ;
                SourceExpr="Period Name" }

    { 4   ;2   ;Field     ;
                DrillDown=Yes;
                CaptionML=[ENU=Amount;
                           ESP=Importe];
                SourceExpr=DocAmount;
                AutoFormatType=1;
                AutoFormatExpr=CurrCode;
                OnDrillDown=BEGIN
                              ShowDocEntries;
                            END;
                             }

    { 10  ;2   ;Field     ;
                CaptionML=[ENU=Amount (LCY);
                           ESP=Importe (DL)];
                SourceExpr=DocAmountLCY;
                AutoFormatType=1;
                OnDrillDown=BEGIN
                              ShowDocEntries;
                            END;
                             }

  }
  CODE
  {
    VAR
      BillGr@1100000 : Record 7000005;
      PmtOrd@1100001 : Record 7000020;
      Doc@1100002 : Record 7000002;
      PeriodFormManagement@1100003 : Codeunit 359;
      PeriodLength@1100004 : 'Day,Week,Month,Quarter,Year,Period';
      AmountType@1100005 : 'Net Change,Balance at Date';
      DocAmount@1100006 : Decimal;
      DocAmountLCY@1100007 : Decimal;
      Type@1100008 : 'Receivable,Payable';
      CurrCode@1100009 : Code[10];

    PROCEDURE SetReceivable@1(VAR NewBillGr@1100000 : Record 7000005;NewPeriodLength@1100001 : Integer;NewAmountType@1100002 : 'Net Change,Balance at Date');
    BEGIN
      BillGr.COPY(NewBillGr);
      PeriodLength := NewPeriodLength;
      AmountType := NewAmountType;
      CurrCode := BillGr."Currency Code";
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE SetPayable@2(VAR NewPmtOrd@1100000 : Record 7000020;NewPeriodLength@1100001 : Integer;NewAmountType@1100002 : 'Net Change,Balance at Date');
    BEGIN
      PmtOrd.COPY(NewPmtOrd);
      PeriodLength := NewPeriodLength;
      AmountType := NewAmountType;
      CurrCode := PmtOrd."Currency Code";
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE SetDateFilter@5();
    BEGIN
      IF Type = Type::Receivable THEN
        IF AmountType = AmountType::"Net Change" THEN
          BillGr.SETRANGE("Due Date Filter","Period Start","Period End")
        ELSE
          BillGr.SETRANGE("Due Date Filter",0D,"Period End");
      IF Type = Type::Payable THEN
        IF AmountType = AmountType::"Net Change" THEN
          PmtOrd.SETRANGE("Due Date Filter","Period Start","Period End")
        ELSE
          PmtOrd.SETRANGE("Due Date Filter",0D,"Period End");
    END;

    LOCAL PROCEDURE ShowDocEntries@8();
    BEGIN
      SetDateFilter;
      IF Type = Type::Receivable THEN BEGIN
        Doc.SETRANGE(Type,0); // Receivable
        Doc.SETRANGE("Bill Gr./Pmt. Order No.",BillGr."No.");
        Doc.SETRANGE("Collection Agent",Doc."Collection Agent"::Bank);
        Doc.SETFILTER("Due Date",BillGr.GETFILTER("Due Date Filter"));
        Doc.SETFILTER("Global Dimension 1 Code",BillGr.GETFILTER("Global Dimension 1 Filter"));
        Doc.SETFILTER("Global Dimension 2 Code",BillGr.GETFILTER("Global Dimension 2 Filter"));
        Doc.SETFILTER("Category Code",BillGr.GETFILTER("Category Filter"));
      END;
      IF Type = Type::Payable THEN BEGIN
        Doc.SETRANGE(Type,1); // Payable
        Doc.SETRANGE("Bill Gr./Pmt. Order No.",PmtOrd."No.");
        Doc.SETRANGE("Collection Agent",Doc."Collection Agent"::Bank);
        Doc.SETFILTER("Due Date",PmtOrd.GETFILTER("Due Date Filter"));
        Doc.SETFILTER("Global Dimension 1 Code",PmtOrd.GETFILTER("Global Dimension 1 Filter"));
        Doc.SETFILTER("Global Dimension 2 Code",PmtOrd.GETFILTER("Global Dimension 2 Filter"));
        Doc.SETFILTER("Category Code",PmtOrd.GETFILTER("Category Filter"));
      END;

      FORM.RUNMODAL(0,Doc);
    END;

    PROCEDURE TypeReceivable@3();
    BEGIN
      Type := Type::Receivable;
    END;

    PROCEDURE TypePayable@4();
    BEGIN
      Type := Type::Payable;
    END;

    BEGIN
    END.
  }
}
