OBJECT Page 658 Approval Entries
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVW16.00;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[ENU=Approval Entries;
               ESP=Movimientos aprobaci¢n];
    SourceTable=Table454;
    PageType=List;
    OnInit=BEGIN
             RejectVisible := TRUE;
             ApproveVisible := TRUE;
           END;

    OnOpenPage=VAR
                 Filterstring@1000 : Text[250];
               BEGIN
                 IF Usersetup.GET(USERID) THEN BEGIN
                   FILTERGROUP(2);
                   Filterstring := GETFILTERS;
                   FILTERGROUP(0);
                   IF STRLEN(Filterstring) = 0 THEN BEGIN
                     FILTERGROUP(2);
                     SETCURRENTKEY("Approver ID");
                     IF Overdue = Overdue::Yes THEN
                       SETRANGE("Approver ID",Usersetup."User ID");
                     SETRANGE(Status,Status::Open);
                     FILTERGROUP(0);
                   END ELSE
                     SETCURRENTKEY("Table ID","Document Type","Document No.");
                 END;
               END;

    OnAfterGetRecord=BEGIN
                       Overdue := Overdue::" ";
                       IF FormatField(Rec) THEN
                         Overdue := Overdue::Yes;
                     END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 33      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Show;
                                 ESP=&Mostrar] }
      { 38      ;2   ;Action    ;
                      CaptionML=[ENU=Document;
                                 ESP=Documento];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 Rec.ShowDocument;
                               END;
                                }
      { 42      ;2   ;Action    ;
                      CaptionML=[ENU=Comments;
                                 ESP=Comentarios];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ViewComments;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ApprovalComments@1000 : Form 660;
                               BEGIN
                                 ApprovalComments.Setfilters("Table ID","Document Type","Document No.");
                                 ApprovalComments.SetUpLine("Table ID","Document Type","Document No.");
                                 ApprovalComments.RUN;
                               END;
                                }
      { 49      ;2   ;Action    ;
                      CaptionML=[ENU=O&verdue Entries;
                                 ESP=Movs. &vencidos];
                      OnAction=BEGIN
                                 SETFILTER(Status,'%1|%2',Status::Created,Status::Open);
                                 SETFILTER("Due Date",'<%1',TODAY);
                               END;
                                }
      { 50      ;2   ;Action    ;
                      CaptionML=[ENU=All Entries;
                                 ESP=Todos los movs.];
                      OnAction=BEGIN
                                 SETRANGE(Status);
                                 SETRANGE("Due Date");
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 19      ;1   ;Action    ;
                      Name=Approve;
                      CaptionML=[ENU=&Approve;
                                 ESP=&Aprobar];
                      Promoted=Yes;
                      Visible=ApproveVisible;
                      PromotedIsBig=Yes;
                      Image=Approve;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ApprovalEntry@1001 : Record 454;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(ApprovalEntry);
                                 IF ApprovalEntry.FIND('-') THEN
                                   REPEAT
                                     ApprovalMgt.ApproveApprovalRequest(ApprovalEntry);
                                   UNTIL ApprovalEntry.NEXT = 0;
                               END;
                                }
      { 2       ;1   ;Action    ;
                      Name=Reject;
                      CaptionML=[ENU=&Reject;
                                 ESP=&Rechazar];
                      Promoted=Yes;
                      Visible=RejectVisible;
                      PromotedIsBig=Yes;
                      Image=Reject;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ApprovalEntry@1001 : Record 454;
                                 ApprovalSetup@1002 : Record 452;
                                 ApprovalComment@1005 : Form 660;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(ApprovalEntry);
                                 IF ApprovalEntry.FIND('-') THEN
                                   REPEAT
                                     IF NOT ApprovalSetup.GET THEN
                                       ERROR(Text004);
                                     IF ApprovalSetup."Request Rejection Comment" = TRUE THEN BEGIN
                                       ApprovalComment.Setfilters(
                                         ApprovalEntry."Table ID",ApprovalEntry."Document Type",ApprovalEntry."Document No.");
                                       ApprovalComment.SetUpLine(
                                         ApprovalEntry."Table ID",ApprovalEntry."Document Type",ApprovalEntry."Document No.");
                                       COMMIT;
                                       IF ApprovalComment.RUNMODAL = ACTION::OK THEN BEGIN
                                         CLEAR(ApprovalComment);
                                         ApprovalMgt.RejectApprovalRequest(ApprovalEntry);
                                       END;
                                     END ELSE BEGIN
                                       CLEAR(ApprovalComment);
                                       ApprovalMgt.RejectApprovalRequest(ApprovalEntry);
                                     END;
                                   UNTIL ApprovalEntry.NEXT = 0;
                               END;
                                }
      { 35      ;1   ;Action    ;
                      CaptionML=[ENU=&Delegate;
                                 ESP=&Delegar];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Delegate;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ApprovalEntry@1001 : Record 454;
                                 TempApprovalEntry@1003 : Record 454;
                                 ApprovalSetup@1002 : Record 452;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(ApprovalEntry);

                                 CurrPage.SETSELECTIONFILTER(TempApprovalEntry);
                                 IF TempApprovalEntry.FIND('-') THEN BEGIN
                                   TempApprovalEntry.SETFILTER(Status,'<>%1',TempApprovalEntry.Status::Open);
                                   IF NOT TempApprovalEntry.ISEMPTY THEN
                                     ERROR(Text001);
                                 END;

                                 IF ApprovalEntry.FIND('-') THEN BEGIN
                                   IF ApprovalSetup.GET THEN;
                                   IF Usersetup.GET(USERID) THEN;
                                   IF (ApprovalEntry."Sender ID" = Usersetup."User ID") OR
                                      (ApprovalSetup."Approval Administrator" = Usersetup."User ID") OR
                                      (ApprovalEntry."Approver ID" = Usersetup."User ID")
                                   THEN BEGIN
                                     REPEAT
                                       ApprovalMgt.DelegateApprovalRequest(ApprovalEntry);
                                     UNTIL ApprovalEntry.NEXT = 0;
                                   END;
                                 END;

                                 MESSAGE(Text002);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 40  ;2   ;Field     ;
                CaptionML=[ENU=Overdue;
                           ESP=Vencidos];
                ToolTipML=[ENU=Overdue Entry;
                           ESP=Mov. vencido];
                OptionCaptionML=[ENU=Yes;
                                 ESP=S¡];
                SourceExpr=Overdue;
                Editable=False }

    { 3   ;2   ;Field     ;
                SourceExpr="Table ID" }

    { 45  ;2   ;Field     ;
                SourceExpr="Limit Type" }

    { 43  ;2   ;Field     ;
                SourceExpr="Approval Type" }

    { 6   ;2   ;Field     ;
                SourceExpr="Document Type" }

    { 8   ;2   ;Field     ;
                SourceExpr="Document No." }

    { 10  ;2   ;Field     ;
                SourceExpr="Sequence No." }

    { 12  ;2   ;Field     ;
                SourceExpr="Approval Code" }

    { 21  ;2   ;Field     ;
                SourceExpr=Status }

    { 14  ;2   ;Field     ;
                SourceExpr="Sender ID" }

    { 16  ;2   ;Field     ;
                SourceExpr="Salespers./Purch. Code" }

    { 18  ;2   ;Field     ;
                SourceExpr="Approver ID" }

    { 36  ;2   ;Field     ;
                SourceExpr="Currency Code" }

    { 34  ;2   ;Field     ;
                SourceExpr="Amount (LCY)" }

    { 47  ;2   ;Field     ;
                SourceExpr="Available Credit Limit (LCY)" }

    { 23  ;2   ;Field     ;
                SourceExpr="Date-Time Sent for Approval" }

    { 25  ;2   ;Field     ;
                SourceExpr="Last Date-Time Modified" }

    { 27  ;2   ;Field     ;
                SourceExpr="Last Modified By ID" }

    { 29  ;2   ;Field     ;
                SourceExpr=Comment }

    { 31  ;2   ;Field     ;
                SourceExpr="Due Date" }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=TRUE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      Usersetup@1000 : Record 91;
      ApprovalMgt@1001 : Codeunit 439;
      Text001@1004 : TextConst 'ENU=You can only delegate open approval entries.;ESP=S¢lo puede delegar los movs. aprobaci¢n abiertos.';
      Text002@1003 : TextConst 'ENU="The selected approval(s) have been delegated. ";ESP="Se han delegado las aprobaciones seleccionadas. "';
      Overdue@1005 : 'Yes, ';
      Text004@1006 : TextConst 'ENU=Approval Setup not found.;ESP=No se encontr¢ la configuraci¢n de la aprobaci¢n';
      ApproveVisible@19079599 : Boolean INDATASET;
      RejectVisible@19070120 : Boolean INDATASET;

    PROCEDURE Setfilters@1(TableId@1001 : Integer;DocumentType@1002 : 'Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order';DocumentNo@1003 : Code[20]);
    BEGIN
      IF TableId <> 0 THEN BEGIN
        FILTERGROUP(2);
        SETCURRENTKEY("Table ID","Document Type","Document No.");
        SETRANGE("Table ID",TableId);
        SETRANGE("Document Type",DocumentType);
        IF DocumentNo <> '' THEN
          SETRANGE("Document No.",DocumentNo);
        FILTERGROUP(0);
      END;

      ApproveVisible := FALSE;
      RejectVisible := FALSE;
    END;

    PROCEDURE FormatField@2(Rec@1000 : Record 454) OK : Boolean;
    BEGIN
      IF (Status IN [Status::Created,Status::Open]) THEN BEGIN
        IF (Rec."Due Date" < TODAY) THEN
          EXIT(TRUE)
        ELSE
          EXIT(FALSE);
      END;
    END;

    PROCEDURE CalledFrom@3();
    BEGIN
      Overdue := Overdue::" ";
    END;

    BEGIN
    END.
  }
}
