OBJECT Page 8705 Mobile Document Queue List
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=NAVW16.00.01;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Mobile Document Queue List;
               ESP=Lista de cola de documento m¢vil];
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    SourceTable=Table8705;
    SourceTableView=SORTING(Created Date/Time,Status,Document Type,Mobile User ID)
                    ORDER(Descending);
    PageType=Worksheet;
    OnInit=BEGIN
             ShowAllCheckBoxEditable := TRUE;
           END;

    OnOpenPage=BEGIN
                 IF (FilterMobileUser = '') AND
                    (FilterDocumentType = '') AND
                    NOT ShowNew AND
                    NOT ShowProcessing AND
                    NOT ShowCompleted AND
                    NOT Showerror
                 THEN
                   SetShowAll
                 ELSE
                   ValidateFilter;
               END;

    OnAfterGetRecord=BEGIN
                       CreatedDateTimeOnFormat(FORMAT("Created Date/Time"));
                       AnswerDateTimeOnFormat(FORMAT("Answer Date/Time"));
                       ResultDateTimeOnFormat(FORMAT("Result Date/Time"));
                     END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 29      ;1   ;ActionGroup;
                      Name=Request;
                      CaptionML=[ENU=&Document;
                                 ESP=&Documento] }
      { 30      ;2   ;Action    ;
                      CaptionML=[ENU=Show &Request XML;
                                 ESP=Mostrar &Solicitud de XML];
                      OnAction=BEGIN
                                 ShowXMLRequestDoc;
                               END;
                                }
      { 31      ;2   ;Action    ;
                      CaptionML=[ENU=Show &Answer XML;
                                 ESP=Mostrar &Respuesta de XML];
                      OnAction=BEGIN
                                 ShowXMLAnswerDoc;
                               END;
                                }
      { 32      ;2   ;Action    ;
                      CaptionML=[ENU=Show Re&sult XML;
                                 ESP=Mostrar Res&ultado de XML];
                      OnAction=BEGIN
                                 ShowXMLResultDoc;
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 33      ;1   ;ActionGroup;
                      Name=Function;
                      CaptionML=[ENU=F&unctions;
                                 ESP=Acci&ones] }
      { 36      ;2   ;Action    ;
                      Name=Process;
                      CaptionML=[ENU=&Process Documents;
                                 ESP=&Procesar documentos];
                      OnAction=VAR
                                 MobDocQueue@1000 : Record 8705;
                                 MobDocQueue2@1003 : Record 8705;
                                 TempMobDocQueue@1002 : TEMPORARY Record 8705;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(MobDocQueue);
                                 MobDocQueue.SETCURRENTKEY("Message ID");
                                 MobDocQueue.ASCENDING(TRUE);
                                 IF MobDocQueue.FINDSET THEN
                                   REPEAT
                                     TempMobDocQueue := MobDocQueue;
                                     TempMobDocQueue.INSERT;
                                   UNTIL MobDocQueue.NEXT = 0;

                                 TempMobDocQueue.SETCURRENTKEY("Created Date/Time");
                                 IF TempMobDocQueue.FINDSET THEN
                                   REPEAT
                                     MobDocQueue2 := TempMobDocQueue;
                                     ProcessDocument(MobDocQueue2);
                                   UNTIL TempMobDocQueue.NEXT = 0;
                               END;
                                }
      { 57      ;2   ;Action    ;
                      Name=Reset;
                      Ellipsis=Yes;
                      CaptionML=[ENU=R&eset Documents;
                                 ESP=&Restablecer documentos];
                      OnAction=VAR
                                 MobDocQueue@1001 : Record 8705;
                                 MobDocQueue2@1000 : Record 8705;
                                 TempMobDocQueue@1003 : TEMPORARY Record 8705;
                               BEGIN
                                 IF CONFIRM(Text002,FALSE) THEN BEGIN
                                   CurrPage.SETSELECTIONFILTER(MobDocQueue);
                                   MobDocQueue.SETCURRENTKEY("Message ID");
                                   MobDocQueue.ASCENDING(TRUE);
                                   IF MobDocQueue.FINDSET THEN
                                     REPEAT
                                       TempMobDocQueue := MobDocQueue;
                                       TempMobDocQueue.INSERT;
                                     UNTIL MobDocQueue.NEXT = 0;

                                   TempMobDocQueue.SETCURRENTKEY("Created Date/Time");
                                   IF TempMobDocQueue.FINDSET THEN
                                     REPEAT
                                       MobDocQueue2 := TempMobDocQueue;
                                       ResetDocument(MobDocQueue2);
                                     UNTIL TempMobDocQueue.NEXT = 0;
                                 END;
                               END;
                                }
      { 56      ;2   ;Action    ;
                      Name=Delete;
                      Ellipsis=Yes;
                      CaptionML=[ENU=&Delete Documents;
                                 ESP=&Eliminar documentos];
                      OnAction=VAR
                                 MobDocQueue@1001 : Record 8705;
                                 MobDocQueue2@1000 : Record 8705;
                                 NewFound@1003 : Boolean;
                                 Confirmed@1004 : Boolean;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(MobDocQueue);
                                 MobDocQueue.ASCENDING(TRUE);
                                 IF MobDocQueue.FINDSET THEN BEGIN
                                   REPEAT
                                     IF MobDocQueue.Status IN [MobDocQueue.Status::New,MobDocQueue.Status::Error] THEN
                                       NewFound := TRUE;
                                   UNTIL (MobDocQueue.NEXT = 0) OR NewFound;

                                   IF NewFound THEN BEGIN
                                     IF CONFIRM(Text000 + Text001,FALSE) THEN
                                       Confirmed := TRUE;
                                   END ELSE BEGIN
                                     IF CONFIRM(Text001,FALSE) THEN
                                       Confirmed := TRUE;
                                   END;

                                   IF Confirmed THEN BEGIN
                                     MobDocQueue.FINDSET;
                                     REPEAT
                                       MobDocQueue2 := MobDocQueue;
                                       DeleteDocument(MobDocQueue2);
                                     UNTIL MobDocQueue.NEXT = 0;
                                   END;
                                 END;
                               END;
                                }
      { 58      ;2   ;Separator  }
      { 59      ;2   ;Action    ;
                      CaptionML=[ENU=Re&fresh;
                                 ESP=&Actualizar];
                      Image=Refresh;
                      OnAction=BEGIN
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 60      ;2   ;Separator  }
      { 61      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=E&xport Request XML;
                                 ESP=E&xportar Solicitud de XML];
                      OnAction=BEGIN
                                 ExporXMLRequestDoc;
                               END;
                                }
      { 62      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=&Import Request XML;
                                 ESP=&Importar Solicitud de XML];
                      OnAction=BEGIN
                                 ImporXMLRequestDoc;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 34  ;1   ;Group     ;
                CaptionML=[ENU=Filter;
                           ESP=Filtro] }

    { 42  ;2   ;Field     ;
                Name=ShowAllCheckBox;
                CaptionML=[ENU=Show All;
                           ESP=Mostrar todos];
                SourceExpr=ShowAll;
                Editable=ShowAllCheckBoxEditable;
                OnValidate=BEGIN
                             ShowAllOnAfterValidate;
                           END;
                            }

    { 52  ;2   ;Field     ;
                CaptionML=[ENU=Mobile User Filter;
                           ESP=Filtro usuario m¢vil];
                SourceExpr=FilterMobileUser;
                OnValidate=BEGIN
                             FilterMobileUserOnAfterValidat;
                           END;

                OnLookup=VAR
                           MobileUsers@1000 : Form 8700;
                         BEGIN
                           MobileUsers.LOOKUPMODE(TRUE);
                           IF NOT (MobileUsers.RUNMODAL = ACTION::LookupOK) THEN
                             EXIT(FALSE)
                           ELSE
                             Text := MobileUsers.GetSelectionFilter;
                           EXIT(TRUE);
                         END;
                          }

    { 54  ;2   ;Field     ;
                CaptionML=[ENU=Document Type Filter;
                           ESP=Filtro de tipo de documento];
                SourceExpr=FilterDocumentType;
                OnValidate=BEGIN
                             FilterDocumentTypeOnAfterValid;
                           END;

                OnLookup=VAR
                           MobDocTypes@1002 : Form 8704;
                         BEGIN
                           MobDocTypes.LOOKUPMODE(TRUE);
                           IF NOT (MobDocTypes.RUNMODAL = ACTION::LookupOK) THEN
                             EXIT(FALSE)
                           ELSE
                             Text := MobDocTypes.GetSelectionFilter;
                           EXIT(TRUE);
                         END;
                          }

    { 44  ;2   ;Field     ;
                CaptionML=[ENU=New;
                           ESP=Nuevo];
                SourceExpr=ShowNew;
                OnValidate=BEGIN
                             ShowNewOnAfterValidate;
                           END;
                            }

    { 46  ;2   ;Field     ;
                CaptionML=[ENU=Processing;
                           ESP=Procesando];
                SourceExpr=ShowProcessing;
                OnValidate=BEGIN
                             ShowProcessingOnAfterValidate;
                           END;
                            }

    { 50  ;2   ;Field     ;
                CaptionML=[ENU=Completed;
                           ESP=Completados];
                SourceExpr=ShowCompleted;
                OnValidate=BEGIN
                             ShowCompletedOnAfterValidate;
                           END;
                            }

    { 48  ;2   ;Field     ;
                CaptionML=[ENU=Error;
                           ESP=Error];
                SourceExpr=Showerror;
                OnValidate=BEGIN
                             ShowerrorOnAfterValidate;
                           END;
                            }

    { 1   ;1   ;Group     ;
                Editable=FALSE;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                SourceExpr="Message ID" }

    { 4   ;2   ;Field     ;
                SourceExpr="Device ID" }

    { 6   ;2   ;Field     ;
                SourceExpr="Mobile User ID" }

    { 8   ;2   ;Field     ;
                SourceExpr="Document Type" }

    { 10  ;2   ;Field     ;
                SourceExpr="Process Type" }

    { 12  ;2   ;Field     ;
                SourceExpr=Status }

    { 14  ;2   ;Field     ;
                SourceExpr="Created Date/Time" }

    { 16  ;2   ;Field     ;
                SourceExpr="Answer Date/Time" }

    { 18  ;2   ;Field     ;
                SourceExpr="Result Date/Time" }

    { 20  ;2   ;Field     ;
                CaptionML=[ENU=Request XML;
                           ESP=Solicitud de XML];
                SourceExpr="Request XML".HASVALUE }

    { 22  ;2   ;Field     ;
                CaptionML=[ENU=Answer XML;
                           ESP=Respuesta de XML];
                SourceExpr="Answer XML".HASVALUE }

    { 24  ;2   ;Field     ;
                CaptionML=[ENU=Result XML;
                           ESP=Resultado de XML];
                SourceExpr="Result XML".HASVALUE }

    { 35  ;2   ;Field     ;
                SourceExpr="NAS User ID";
                Visible=FALSE }

    { 38  ;2   ;Field     ;
                SourceExpr="NAS Host Name";
                Visible=FALSE }

    { 40  ;2   ;Field     ;
                SourceExpr="NAS Port";
                Visible=FALSE }

  }
  CODE
  {
    VAR
      FilterMobileUser@1000 : Text[1024];
      FilterDocumentType@1001 : Text[1024];
      FilterStatus@1002 : Text[1024];
      ShowAll@1004 : Boolean;
      ShowNew@1005 : Boolean;
      ShowProcessing@1006 : Boolean;
      ShowCompleted@1007 : Boolean;
      Showerror@1008 : Boolean;
      Text000@1003 : TextConst 'ENU=The selected documents include documents with the status New or Error.\;ESP=Los documentos seleccionados incluyen documentos con el estado Nuevo o Error.\';
      Text001@1009 : TextConst 'ENU=Do you want to delete the selected documents?;ESP=¨Desea eliminar los documentos seleccionados?';
      Text002@1010 : TextConst 'ENU=Do you want to reset the selected documents?;ESP=¨Desea restablecer los documentos seleccionados?';
      ShowAllCheckBoxEditable@19047001 : Boolean INDATASET;

    LOCAL PROCEDURE ValidateFilter@1();
    BEGIN
      BuildStatusFilter;

      ShowAll := ((FilterMobileUser = '') AND (FilterDocumentType = '') AND (FilterStatus = ''));

      FILTERGROUP(2);

      SETFILTER(Status,FilterStatus);
      SETFILTER("Document Type",FilterDocumentType);
      SETFILTER("Mobile User ID",FilterMobileUser);

      ShowAllCheckBoxEditable := NOT ShowAll;
      FILTERGROUP(0);

      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE SetShowAll@3();
    BEGIN
      FilterMobileUser := '';
      FilterDocumentType := '';

      ShowNew := TRUE;
      ShowProcessing := TRUE;
      ShowCompleted := TRUE;
      Showerror := TRUE;

      ValidateFilter;
    END;

    LOCAL PROCEDURE BuildStatusFilter@2();
    BEGIN
      FilterStatus := '';
      IF ShowNew AND ShowProcessing AND ShowCompleted AND Showerror THEN
        EXIT;

      IF ShowNew THEN
        FilterStatus := FilterStatus + '|' + FORMAT(Status::New);

      IF ShowProcessing THEN
        FilterStatus := FilterStatus + '|' + FORMAT(Status::Processing);

      IF ShowCompleted THEN
        FilterStatus := FilterStatus + '|' + FORMAT(Status::Completed);

      IF Showerror THEN
        FilterStatus := FilterStatus + '|' + FORMAT(Status::Error);

      IF FilterStatus <> '' THEN
        FilterStatus := COPYSTR(FilterStatus,2)
      ELSE
        FilterStatus :=
          STRSUBSTNO(
            '<>%1&<>%2&<>%3&<>%4',FORMAT(Status::New),FORMAT(Status::Processing),FORMAT(Status::Completed),FORMAT(Status::Error));
    END;

    LOCAL PROCEDURE ShowAllOnAfterValidate@19022929();
    BEGIN
      SetShowAll;
    END;

    LOCAL PROCEDURE ShowNewOnAfterValidate@19060201();
    BEGIN
      ValidateFilter;
    END;

    LOCAL PROCEDURE ShowProcessingOnAfterValidate@19053933();
    BEGIN
      ValidateFilter;
    END;

    LOCAL PROCEDURE ShowerrorOnAfterValidate@19034252();
    BEGIN
      ValidateFilter;
    END;

    LOCAL PROCEDURE ShowCompletedOnAfterValidate@19054754();
    BEGIN
      ValidateFilter;
    END;

    LOCAL PROCEDURE FilterMobileUserOnAfterValidat@19050226();
    BEGIN
      ValidateFilter;
    END;

    LOCAL PROCEDURE FilterDocumentTypeOnAfterValid@19058026();
    BEGIN
      ValidateFilter;
    END;

    LOCAL PROCEDURE CreatedDateTimeOnFormat@19044482(Text@19031083 : Text[1024]);
    BEGIN
      Text := FORMAT("Created Date/Time",0,3);
    END;

    LOCAL PROCEDURE AnswerDateTimeOnFormat@19019033(Text@19001026 : Text[1024]);
    BEGIN
      Text := FORMAT("Answer Date/Time",0,3);
    END;

    LOCAL PROCEDURE ResultDateTimeOnFormat@19021317(Text@19033297 : Text[1024]);
    BEGIN
      Text := FORMAT("Result Date/Time",0,3);
    END;

    BEGIN
    END.
  }
}
