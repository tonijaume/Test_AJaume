OBJECT Page 7358 Whse. Internal Pick Line
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVW16.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Lines;
               ESP=L¡neas];
    MultipleNewLines=Yes;
    LinksAllowed=No;
    SourceTable=Table7334;
    DelayedInsert=Yes;
    PageType=ListPart;
    OnNewRecord=BEGIN
                  SetUpNewLine(xRec);
                END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1907935204;1 ;ActionGroup;
                      CaptionML=[ENU=&Line;
                                 ESP=&L¡nea] }
      { 1901313504;2 ;Action    ;
                      CaptionML=[ENU=Bin Contents List;
                                 ESP=Lista contenidos ubicaci¢n];
                      OnAction=BEGIN
                                 //This functionality was copied from page #7357. Unsupported part was commented. Please check it.
                                 {CurrPage.WhseInternalPickLines.FORM.}
                                 _ShowBinContents;
                               END;
                                }
      { 1902759804;2 ;Action    ;
                      ShortCutKey=May£s+Ctrl+I;
                      CaptionML=[ENU=Item &Tracking Lines;
                                 ESP=L¡ns. se&guim. prod.];
                      Image=ItemTrackingLines;
                      OnAction=BEGIN
                                 //This functionality was copied from page #7357. Unsupported part was commented. Please check it.
                                 {CurrPage.WhseInternalPickLines.FORM.}
                                 _OpenItemTrackingLines;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 22  ;2   ;Field     ;
                SourceExpr="Item No.";
                OnValidate=BEGIN
                             ItemNoOnAfterValidate;
                           END;
                            }

    { 14  ;2   ;Field     ;
                SourceExpr="Variant Code";
                Visible=FALSE }

    { 30  ;2   ;Field     ;
                SourceExpr=Description }

    { 16  ;2   ;Field     ;
                SourceExpr="Location Code";
                Visible=FALSE;
                Editable=FALSE }

    { 42  ;2   ;Field     ;
                SourceExpr="To Zone Code";
                Visible=FALSE }

    { 40  ;2   ;Field     ;
                SourceExpr="To Bin Code";
                Visible=FALSE;
                OnValidate=BEGIN
                             ToBinCodeOnAfterValidate;
                           END;
                            }

    { 18  ;2   ;Field     ;
                SourceExpr="Shelf No.";
                Visible=FALSE;
                OnValidate=BEGIN
                             ShelfNoOnAfterValidate;
                           END;
                            }

    { 34  ;2   ;Field     ;
                SourceExpr=Quantity }

    { 4   ;2   ;Field     ;
                SourceExpr="Qty. (Base)";
                Visible=FALSE }

    { 8   ;2   ;Field     ;
                SourceExpr="Qty. Outstanding";
                Visible=TRUE }

    { 10  ;2   ;Field     ;
                SourceExpr="Qty. Outstanding (Base)";
                Visible=FALSE }

    { 48  ;2   ;Field     ;
                SourceExpr="Pick Qty.";
                Visible=FALSE }

    { 50  ;2   ;Field     ;
                SourceExpr="Pick Qty. (Base)";
                Visible=FALSE }

    { 32  ;2   ;Field     ;
                SourceExpr="Qty. Picked";
                Visible=FALSE }

    { 36  ;2   ;Field     ;
                SourceExpr="Qty. Picked (Base)";
                Visible=FALSE }

    { 2   ;2   ;Field     ;
                SourceExpr="Due Date";
                OnValidate=BEGIN
                             DueDateOnAfterValidate;
                           END;
                            }

    { 26  ;2   ;Field     ;
                SourceExpr="Unit of Measure Code" }

    { 24  ;2   ;Field     ;
                SourceExpr="Qty. per Unit of Measure" }

  }
  CODE
  {
    VAR
      SortMethod@1000 : ' ,Item,Bin Code,Due Date';

    PROCEDURE _ShowBinContents@19017879();
    VAR
      BinContent@1000 : Record 7302;
    BEGIN
      BinContent.ShowBinContents("Location Code","Item No.","Variant Code",'');
    END;

    PROCEDURE ShowBinContents@7300();
    VAR
      BinContent@1000 : Record 7302;
    BEGIN
      BinContent.ShowBinContents("Location Code","Item No.","Variant Code",'');
    END;

    PROCEDURE PickCreate@4();
    VAR
      WhseInternalPickHeader@1001 : Record 7333;
      WhseInternalPickLine@1000 : Record 7334;
      ReleaseWhseInternalPick@1002 : Codeunit 7315;
    BEGIN
      WhseInternalPickLine.COPY(Rec);
      WhseInternalPickHeader.GET(WhseInternalPickLine."No.");
      IF WhseInternalPickHeader.Status = WhseInternalPickHeader.Status::Open THEN
        ReleaseWhseInternalPick.Release(WhseInternalPickHeader);
      CreatePickDoc(WhseInternalPickLine,WhseInternalPickHeader);
    END;

    PROCEDURE _OpenItemTrackingLines@19054693();
    BEGIN
      Rec.OpenItemTrackingLines;
    END;

    PROCEDURE OpenItemTrackingLines@2();
    BEGIN
      Rec.OpenItemTrackingLines;
    END;

    PROCEDURE GetActualSortMethod@1() : Decimal;
    VAR
      WhseInternalPickHeader@1000 : Record 7333;
    BEGIN
      IF WhseInternalPickHeader.GET("No.") THEN
        EXIT(WhseInternalPickHeader."Sorting Method");
      EXIT(0);
    END;

    LOCAL PROCEDURE ItemNoOnAfterValidate@19061248();
    BEGIN
      IF GetActualSortMethod = SortMethod::Item THEN
        CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ToBinCodeOnAfterValidate@19037373();
    BEGIN
      IF GetActualSortMethod = SortMethod::"Bin Code" THEN
        CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ShelfNoOnAfterValidate@19051954();
    BEGIN
      IF GetActualSortMethod = SortMethod::"Bin Code" THEN
        CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE DueDateOnAfterValidate@19011747();
    BEGIN
      IF GetActualSortMethod = SortMethod::"Due Date" THEN
        CurrPage.UPDATE;
    END;

    BEGIN
    END.
  }
}
