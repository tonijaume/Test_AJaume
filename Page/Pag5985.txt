OBJECT Page 5985 Service Item Replacement
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVW16.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Service Item Replacement;
               ESP=Reposici¢n prod. servicio];
    PageType=Card;
    OnInit=BEGIN
             CopyComponentsEnable := TRUE;
           END;

    OnOpenPage=BEGIN
                 ServItem.GET(ServItemNo);
                 OldSerialNo := ServItem."Serial No.";
                 ServItemVariantCode := ServItem."Variant Code";
                 IF NOT Item.GET(ServItem."Item No.") THEN
                   CLEAR(Item);

                 ServItem.CALCFIELDS("Service Item Components");
                 Item.CALCFIELDS("Bill of Materials");
                 CopyComponentsEnable := (ServItem."Service Item Components") OR (Item."Bill of Materials")
               END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group      }

    { 30  ;2   ;Group     ;
                CaptionML=[ENU=Old Service Item;
                           ESP=Prod. serv. antiguo] }

    { 17  ;3   ;Field     ;
                CaptionML=[ENU=Service Item No.;
                           ESP=N§ prod. servicio];
                SourceExpr=ServItemNo;
                Editable=FALSE }

    { 2   ;3   ;Field     ;
                CaptionML=[ENU=Item No.;
                           ESP=N§ producto];
                SourceExpr=Item."No.";
                Editable=FALSE }

    { 5   ;3   ;Field     ;
                CaptionML=[ENU=Item Description;
                           ESP=Descripci¢n producto];
                SourceExpr=Item.Description;
                Editable=FALSE }

    { 25  ;3   ;Field     ;
                CaptionML=[ENU=Variant Code;
                           ESP=C¢d. variante];
                SourceExpr=ServItemVariantCode;
                Editable=FALSE }

    { 6   ;3   ;Field     ;
                CaptionML=[ENU=Serial No.;
                           ESP=N§ serie];
                SourceExpr=OldSerialNo;
                Editable=FALSE }

    { 31  ;2   ;Group     ;
                CaptionML=[ENU=New Service Item;
                           ESP=Prod. serv. nuevo] }

    { 12  ;3   ;Field     ;
                CaptionML=[ENU=Item No.;
                           ESP=N§ producto];
                SourceExpr=Item."No.";
                Editable=FALSE }

    { 13  ;3   ;Field     ;
                CaptionML=[ENU=Item Description;
                           ESP=Descripci¢n producto];
                SourceExpr=Item.Description;
                Editable=FALSE }

    { 23  ;3   ;Field     ;
                CaptionML=[ENU=Variant Code;
                           ESP=C¢d. variante];
                SourceExpr=VariantCode;
                OnValidate=BEGIN
                             IF VariantCode <> '' THEN BEGIN
                               ItemVariant.RESET;
                               ItemVariant.SETRANGE("Item No.",ItemNo);
                               ItemVariant.SETRANGE(Code,VariantCode);
                               IF NOT ItemVariant.FIND('-') THEN
                                 ERROR(
                                   Text000,
                                   ItemVariant.TABLECAPTION,ItemNo,VariantCode);
                             END;
                           END;

                OnLookup=BEGIN
                           ItemVariant.RESET;
                           ItemVariant.SETRANGE("Item No.",ItemNo);
                           IF FORM.RUNMODAL(FORM::"Item Variants",ItemVariant) = ACTION::LookupOK THEN
                             VariantCode := ItemVariant.Code;
                         END;
                          }

    { 14  ;3   ;Field     ;
                CaptionML=[ENU=Serial No.;
                           ESP=N§ serie];
                SourceExpr=NewSerialNo;
                OnAssistEdit=VAR
                               ItemLedgEntry@1000 : Record 32;
                             BEGIN
                               CLEAR(ItemLedgEntry);
                               ItemLedgEntry.SETCURRENTKEY("Item No.",Open);
                               ItemLedgEntry.SETRANGE("Item No.",ItemNo);
                               ItemLedgEntry.SETRANGE(Open,TRUE);
                               ItemLedgEntry.SETRANGE("Variant Code",VariantCode);
                               ItemLedgEntry.SETFILTER("Serial No.",'<>%1','');
                               IF FORM.RUNMODAL(0,ItemLedgEntry) = ACTION::LookupOK THEN
                                 NewSerialNo := ItemLedgEntry."Serial No.";
                             END;
                              }

    { 28  ;3   ;Field     ;
                Name=CopyComponents;
                CaptionML=[ENU=Copy Components From;
                           ESP=Copiar componentes de];
                OptionCaptionML=[ENU=None,Item BOM,Old Service Item,Old Service Item w/o Serial No.;
                                 ESP=Ninguno,LM de producto,Prod. servicio antiguo,Prod. servicio antiguo sin n§ serie];
                SourceExpr=CopyComponentsFrom;
                Enabled=CopyComponentsEnable;
                OnValidate=BEGIN
                             CASE CopyComponentsFrom OF
                               CopyComponentsFrom::"Item BOM":
                                 IF NOT Item."Bill of Materials" THEN
                                   ERROR(
                                     Text002,
                                     Item.FIELDCAPTION("Bill of Materials"),
                                     Item.TABLECAPTION,
                                     Item.FIELDCAPTION("No."),
                                     Item."No.");
                               CopyComponentsFrom::"Old Service Item",
                               CopyComponentsFrom::"Old Service Item w/o Serial No.":
                                 IF NOT ServItem."Service Item Components" THEN
                                   ERROR(
                                     Text002,
                                     ServItem.FIELDCAPTION("Service Item Components"),
                                     ServItem.TABLECAPTION,
                                     ServItem.FIELDCAPTION("No."),
                                     ServItem."No.")
                             END;
                           END;
                            }

    { 15  ;2   ;Field     ;
                CaptionML=[ENU=Replacement;
                           ESP=Reposici¢n];
                OptionCaptionML=[ENU=Temporary,Permanent;
                                 ESP=Temporal,Permanente];
                SourceExpr=Replacement }

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=The %1 %2,%3 does not exists.;ESP=No existe el %1 %2,%3.';
      Item@1001 : Record 27;
      ServItem@1002 : Record 5940;
      ItemVariant@1004 : Record 5401;
      Replacement@1005 : 'Temporary,Permanent';
      OldSerialNo@1007 : Code[20];
      NewSerialNo@1008 : Code[20];
      ServItemNo@1009 : Code[20];
      ItemNo@1010 : Code[20];
      VariantCode@1011 : Code[20];
      ServItemVariantCode@1013 : Code[20];
      CopyComponentsFrom@1006 : 'None,Item BOM,Old Service Item,Old Service Item w/o Serial No.';
      Text002@1003 : TextConst 'ENU=There is no %1 in the %2 %3 %4.;ESP=No existe %1 en el %2 %3 %4.';
      CopyComponentsEnable@19054375 : Boolean INDATASET;

    PROCEDURE SetValues@1(ServItemNo2@1002 : Code[20];ItemNo2@1003 : Code[20];VariantCode2@1004 : Code[20]);
    BEGIN
      ServItemNo := ServItemNo2;
      ItemNo := ItemNo2;
      VariantCode := VariantCode2;
    END;

    PROCEDURE ReturnSerialNo@2() : Text[50];
    BEGIN
      EXIT(NewSerialNo);
    END;

    PROCEDURE ReturnReplacement@4() : Integer;
    BEGIN
      EXIT(Replacement);
    END;

    PROCEDURE ReturnVariantCode@3() : Text[50];
    BEGIN
      EXIT(VariantCode);
    END;

    PROCEDURE ReturnCopyComponentsFrom@5() : Integer;
    BEGIN
      EXIT(CopyComponentsFrom);
    END;

    BEGIN
    END.
  }
}
