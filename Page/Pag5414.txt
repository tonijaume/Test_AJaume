OBJECT Page 5414 Item Availability by Variant
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=NAVW16.00.01;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Item Availability by Variant;
               ESP=Disp. producto por variante];
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    LinksAllowed=No;
    SourceTable=Table27;
    DataCaptionFields=No.,Description;
    PageType=ListPlus;
    OnOpenPage=BEGIN
                 FindPeriod('');
               END;

    OnClosePage=VAR
                  ItemVariant@1000 : Record 5401;
                BEGIN
                  CurrPage.ItemAvailLocLines.FORM.GETRECORD(ItemVariant);
                  LastVariant := ItemVariant.Code;
                END;

    OnAfterGetRecord=BEGIN
                       SETRANGE("Drop Shipment Filter",FALSE);
                       FindPeriod('');
                       UpdateSubForm;
                     END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 10      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Item;
                                 ESP=&Producto] }
      { 11      ;2   ;ActionGroup;
                      CaptionML=[ENU=&Item Availability by;
                                 ESP=&Disponibilidad prod. por] }
      { 14      ;3   ;Action    ;
                      CaptionML=[ENU=Period;
                                 ESP=Periodo];
                      RunObject=Page 157;
                      RunFormLink=No.=FIELD(No.),
                                  Global Dimension 1 Filter=FIELD(Global Dimension 1 Filter),
                                  Global Dimension 2 Filter=FIELD(Global Dimension 2 Filter),
                                  Location Filter=FIELD(Location Filter),
                                  Drop Shipment Filter=FIELD(Drop Shipment Filter),
                                  Variant Filter=FIELD(Variant Filter) }
      { 15      ;3   ;Action    ;
                      CaptionML=[ENU=Variant;
                                 ESP=Variante];
                      RunObject=Page 5414;
                      RunFormLink=No.=FIELD(No.),
                                  Global Dimension 1 Filter=FIELD(Global Dimension 1 Filter),
                                  Global Dimension 2 Filter=FIELD(Global Dimension 2 Filter),
                                  Location Filter=FIELD(Location Filter),
                                  Drop Shipment Filter=FIELD(Drop Shipment Filter),
                                  Variant Filter=FIELD(Variant Filter) }
      { 16      ;3   ;Action    ;
                      CaptionML=[ENU=Location;
                                 ESP=Almac‚n];
                      RunObject=Page 492;
                      RunFormLink=No.=FIELD(No.),
                                  Global Dimension 1 Filter=FIELD(Global Dimension 1 Filter),
                                  Global Dimension 2 Filter=FIELD(Global Dimension 2 Filter),
                                  Location Filter=FIELD(Location Filter),
                                  Drop Shipment Filter=FIELD(Drop Shipment Filter),
                                  Variant Filter=FIELD(Variant Filter) }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 27      ;1   ;Action    ;
                      CaptionML=[ENU=Previous Period;
                                 ESP=Periodo anterior];
                      ToolTipML=ENU=Previous Period;
                      Promoted=Yes;
                      Image=PreviousRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 FindPeriod('<=');
                                 UpdateSubForm;
                               END;
                                }
      { 26      ;1   ;Action    ;
                      CaptionML=[ENU=Next Period;
                                 ESP=Periodo siguiente];
                      ToolTipML=ENU=Next Period;
                      Promoted=Yes;
                      Image=NextRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 FindPeriod('>=');
                                 UpdateSubForm;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                CaptionML=[ENU=Options;
                           ESP=Opciones] }

    { 33  ;2   ;Field     ;
                CaptionML=[ENU=View by;
                           ESP=Ver por];
                ToolTipML=[ENU=Day;
                           ESP=D¡a];
                OptionCaptionML=[ENU=Day,Week,Month,Quarter,Year,Period;
                                 ESP=D¡a,Semana,Mes,Trimestre,A¤o,Periodo];
                SourceExpr=ItemPeriodLength;
                OnValidate=BEGIN
                             IF ItemPeriodLength = ItemPeriodLength::Period THEN
                               PeriodItemPeriodLengthOnValida;
                             IF ItemPeriodLength = ItemPeriodLength::Year THEN
                               YearItemPeriodLengthOnValidate;
                             IF ItemPeriodLength = ItemPeriodLength::Quarter THEN
                               QuarterItemPeriodLengthOnValid;
                             IF ItemPeriodLength = ItemPeriodLength::Month THEN
                               MonthItemPeriodLengthOnValidat;
                             IF ItemPeriodLength = ItemPeriodLength::Week THEN
                               WeekItemPeriodLengthOnValidate;
                             IF ItemPeriodLength = ItemPeriodLength::Day THEN
                               DayItemPeriodLengthOnValidate;
                           END;
                            }

    { 34  ;2   ;Field     ;
                CaptionML=[ENU=View as;
                           ESP=Ver como];
                ToolTipML=[ENU=Net Change;
                           ESP=Saldo periodo];
                OptionCaptionML=[ENU=Net Change,Balance at Date;
                                 ESP=Saldo periodo,Saldo a la fecha];
                SourceExpr=AmountType;
                OnValidate=BEGIN
                             IF AmountType = AmountType::"Balance at Date" THEN
                               BalanceatDateAmountTypeOnValid;
                             IF AmountType = AmountType::"Net Change" THEN
                               NetChangeAmountTypeOnValidate;
                           END;
                            }

    { 1   ;1   ;Part      ;
                Name=ItemAvailLocLines;
                SubFormLink=Item No.=FIELD(No.);
                PagePartID=Page5415;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      Calendar@1000 : Record 2000000007;
      ItemPeriodLength@1001 : 'Day,Week,Month,Quarter,Year,Period';
      AmountType@1002 : 'Net Change,Balance at Date';
      LastVariant@1003 : Code[10];

    LOCAL PROCEDURE FindPeriod@2(SearchText@1000 : Code[10]);
    VAR
      PeriodFormMgt@1001 : Codeunit 359;
    BEGIN
      IF GETFILTER("Date Filter") <> '' THEN BEGIN
        Calendar.SETFILTER("Period Start",GETFILTER("Date Filter"));
        IF NOT PeriodFormMgt.FindDate('+',Calendar,ItemPeriodLength) THEN
          PeriodFormMgt.FindDate('+',Calendar,ItemPeriodLength::Day);
        Calendar.SETRANGE("Period Start");
      END;
      PeriodFormMgt.FindDate(SearchText,Calendar,ItemPeriodLength);
      IF AmountType = AmountType::"Net Change" THEN BEGIN
        SETRANGE("Date Filter",Calendar."Period Start",Calendar."Period End");
        IF GETRANGEMIN("Date Filter") = GETRANGEMAX("Date Filter") THEN
          SETRANGE("Date Filter",GETRANGEMIN("Date Filter"));
      END ELSE
        SETRANGE("Date Filter",0D,Calendar."Period End");
    END;

    PROCEDURE UpdateSubForm@1();
    BEGIN
      CurrPage.ItemAvailLocLines.FORM.Set(Rec,AmountType);
    END;

    PROCEDURE GetLastVariant@3() : Code[10];
    BEGIN
      EXIT(LastVariant);
    END;

    LOCAL PROCEDURE PeriodItemPeriodLengthOnPush@19069671();
    BEGIN
      FindPeriod('');
      UpdateSubForm;
    END;

    LOCAL PROCEDURE YearItemPeriodLengthOnPush@19025466();
    BEGIN
      FindPeriod('');
      UpdateSubForm;
    END;

    LOCAL PROCEDURE QuarterItemPeriodLengthOnPush@19031488();
    BEGIN
      FindPeriod('');
      UpdateSubForm;
    END;

    LOCAL PROCEDURE MonthItemPeriodLengthOnPush@19075006();
    BEGIN
      FindPeriod('');
      UpdateSubForm;
    END;

    LOCAL PROCEDURE WeekItemPeriodLengthOnPush@19034453();
    BEGIN
      FindPeriod('');
      UpdateSubForm;
    END;

    LOCAL PROCEDURE DayItemPeriodLengthOnPush@19038924();
    BEGIN
      FindPeriod('');
      UpdateSubForm;
    END;

    LOCAL PROCEDURE NetChangeAmountTypeOnPush@19074855();
    BEGIN
      FindPeriod('');
      UpdateSubForm;
    END;

    LOCAL PROCEDURE BalanceatDateAmountTypeOnPush@19049003();
    BEGIN
      FindPeriod('');
      UpdateSubForm;
    END;

    LOCAL PROCEDURE DayItemPeriodLengthOnValidate@19054182();
    BEGIN
      DayItemPeriodLengthOnPush;
    END;

    LOCAL PROCEDURE WeekItemPeriodLengthOnValidate@19004944();
    BEGIN
      WeekItemPeriodLengthOnPush;
    END;

    LOCAL PROCEDURE MonthItemPeriodLengthOnValidat@19047492();
    BEGIN
      MonthItemPeriodLengthOnPush;
    END;

    LOCAL PROCEDURE QuarterItemPeriodLengthOnValid@19062960();
    BEGIN
      QuarterItemPeriodLengthOnPush;
    END;

    LOCAL PROCEDURE YearItemPeriodLengthOnValidate@19077185();
    BEGIN
      YearItemPeriodLengthOnPush;
    END;

    LOCAL PROCEDURE PeriodItemPeriodLengthOnValida@19021181();
    BEGIN
      PeriodItemPeriodLengthOnPush;
    END;

    LOCAL PROCEDURE NetChangeAmountTypeOnValidate@19062218();
    BEGIN
      NetChangeAmountTypeOnPush;
    END;

    LOCAL PROCEDURE BalanceatDateAmountTypeOnValid@19007073();
    BEGIN
      BalanceatDateAmountTypeOnPush;
    END;

    BEGIN
    END.
  }
}
