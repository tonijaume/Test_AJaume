OBJECT Page 104 Account Schedule
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=NAVW16.00,CACEM6.00,NAVES6.00.01;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Account Schedule;
               ESP=Esquema cuentas];
    SaveValues=Yes;
    MultipleNewLines=Yes;
    SourceTable=Table85;
    DataCaptionFields=Schedule Name;
    PageType=Worksheet;
    AutoSplitKey=Yes;
    OnOpenPage=BEGIN
                 AccSchedManagement.OpenSchedule(CurrentSchedName,Rec);
                 AfterxRec := FALSE;
               END;

    OnAfterGetRecord=BEGIN
                       IF NOT DimCaptionsInitialized THEN BEGIN
                         DimCaptionsInitialized := TRUE;
                       END;
                     END;

    OnNewRecord=BEGIN
                  AfterxRec := BelowxRec;
                END;

    OnInsertRecord=BEGIN
                     AfterxRec := BelowxRec;
                   END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 26      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Acc. Sched.;
                                 ESP=Esq. c&uentas] }
      { 29      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Overview;
                                 ESP=Panorama];
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 AccSchedOverview@1001 : Form 490;
                               BEGIN
                                 AccSchedOverview.SetAccSchedName(CurrentSchedName);
                                 AccSchedOverview.RUN;
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 15      ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 ESP=Acci&ones] }
      { 23      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Insert Accounts;
                                 ESP=Insertar cuentas];
                      OnAction=VAR
                                 AccSchedLine@1001 : Record 85;
                               BEGIN
                                 CurrPage.UPDATE(TRUE);
                                 AccSchedLine.COPY(Rec);
                                 IF "Line No." = 0 THEN BEGIN
                                   AccSchedLine := xRec;
                                   IF AccSchedLine.NEXT = 0 THEN
                                     AccSchedLine."Line No." := xRec."Line No." + 10000;
                                 END;
                                 AccSchedManagement.InsertGLAccounts(AccSchedLine);
                               END;
                                }
      { 24      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Set up &Column Layouts;
                                 ESP=Config. plantilla &columnas];
                      RunObject=Page 489 }
      { 1100002 ;2   ;Separator  }
      { 1100003 ;2   ;Action    ;
                      CaptionML=[ENU=Export Schedules to ASC format;
                                 ESP=Exp. esq. ctas. a formato ASC];
                      RunObject=Report 10720 }
      { 22      ;1   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=&Print;
                                 ESP=&Imprimir];
                      Promoted=Yes;
                      Image=Print;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 AccSchedName@1001 : Record 84;
                                 AccSched@1002 : Report 25;
                               BEGIN
                                 AccSchedName.GET("Schedule Name");
                                 AccSched.SetAccSchedName(AccSchedName.Name);
                                 IF AccSchedName.Standardized THEN
                                   REPORT.RUN(REPORT::"Normalized Account Schedule",TRUE,FALSE,AccSchedName)
                                 ELSE BEGIN
                                   AccSched.SetColumnLayoutName(AccSchedName."Default Column Layout");
                                   AccSched.RUN;
                                 END;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 18  ;1   ;Field     ;
                Lookup=Yes;
                CaptionML=[ENU=Name;
                           ESP=Nombre];
                SourceExpr=CurrentSchedName;
                OnValidate=BEGIN
                             AccSchedManagement.CheckName(CurrentSchedName);
                               CurrentSchedNameOnAfterValidat;
                           END;

                OnLookup=BEGIN
                           EXIT(AccSchedManagement.LookupName(CurrentSchedName,Text));
                         END;
                          }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                SourceExpr="Row No." }

    { 4   ;2   ;Field     ;
                SourceExpr=Description }

    { 6   ;2   ;Field     ;
                SourceExpr="Totaling Type" }

    { 8   ;2   ;Field     ;
                SourceExpr=Totaling;
                OnLookup=VAR
                           GLAccList@1002 : Form 18;
                           AccSchedName@1100003 : Record 84;
                           HistoricGLAccList@1100002 : Form 10731;
                           CostType@1460000 : Record 3010551;
                         BEGIN
                           IF "Totaling Type" IN
                              ["Totaling Type"::"Posting Accounts","Totaling Type"::"Total Accounts"]
                           THEN BEGIN
                             IF AccSchedName.GET(CurrentSchedName) THEN
                               IF AccSchedName."Acc. No. Referred to old Acc." THEN BEGIN
                                 HistoricGLAccList.LOOKUPMODE(TRUE);
                                 IF NOT (HistoricGLAccList.RUNMODAL = ACTION::LookupOK) THEN
                                   EXIT(FALSE)
                                 ELSE
                                   Text := HistoricGLAccList.GetSelectionFilter;
                                 EXIT(TRUE);
                               END ELSE BEGIN
                                 GLAccList.LOOKUPMODE(TRUE);
                                 IF NOT (GLAccList.RUNMODAL = ACTION::LookupOK) THEN
                                   EXIT(FALSE)
                                 ELSE
                                   Text := GLAccList.GetSelectionFilter;
                                 EXIT(TRUE);
                               END;
                           END;

                           IF "Totaling Type" IN ["Totaling Type"::"Cost Type","Totaling Type"::"Cost Type Total"] THEN BEGIN
                             CostType."No." := FORMAT(Text,-20);

                             IF "Totaling Type" = "Totaling Type"::"Cost Type Total" THEN
                               CostType.SETFILTER("Line Type",'%1|%2',CostType."Line Type"::Total,CostType."Line Type"::"End-Total");

                             IF FORM.RUNMODAL(0,CostType) = ACTION::LookupOK THEN BEGIN
                               Text := CostType."No.";

                               EXIT(TRUE);

                             END;
                           END;


                           EXIT(FALSE);
                         END;
                          }

    { 33  ;2   ;Field     ;
                SourceExpr="Row Type" }

    { 35  ;2   ;Field     ;
                SourceExpr="Amount Type" }

    { 1100000;2;Field     ;
                SourceExpr=Type }

    { 1100004;2;Field     ;
                SourceExpr="Positive Only" }

    { 1100006;2;Field     ;
                SourceExpr="Reverse Sign" }

    { 41  ;2   ;Field     ;
                SourceExpr="Dimension 1 Totaling";
                Visible=FALSE;
                OnLookup=BEGIN
                           EXIT(LookUpDimFilter(1,Text));
                         END;
                          }

    { 43  ;2   ;Field     ;
                SourceExpr="Dimension 2 Totaling";
                Visible=FALSE;
                OnLookup=BEGIN
                           EXIT(LookUpDimFilter(2,Text));
                         END;
                          }

    { 45  ;2   ;Field     ;
                SourceExpr="Dimension 3 Totaling";
                Visible=FALSE;
                OnLookup=BEGIN
                           EXIT(LookUpDimFilter(3,Text));
                         END;
                          }

    { 47  ;2   ;Field     ;
                SourceExpr="Dimension 4 Totaling";
                Visible=FALSE;
                OnLookup=BEGIN
                           EXIT(LookUpDimFilter(4,Text));
                         END;
                          }

    { 12  ;2   ;Field     ;
                SourceExpr=Show }

    { 20  ;2   ;Field     ;
                SourceExpr=Bold;
                Visible=FALSE }

    { 25  ;2   ;Field     ;
                SourceExpr=Italic;
                Visible=FALSE }

    { 28  ;2   ;Field     ;
                SourceExpr=Underline;
                Visible=FALSE }

    { 1460000;2;Field     ;
                SourceExpr=Color }

    { 31  ;2   ;Field     ;
                SourceExpr="Show Opposite Sign";
                Visible=FALSE }

    { 10  ;2   ;Field     ;
                SourceExpr="New Page" }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      AccSchedManagement@1000 : Codeunit 8;
      CurrentSchedName@1001 : Code[10];
      AfterxRec@1002 : Boolean;
      DimCaptionsInitialized@1003 : Boolean;

    PROCEDURE SetAccSchedName@1102601000(NewAccSchedName@1102601000 : Code[10]);
    BEGIN
      CurrentSchedName := NewAccSchedName;
    END;

    LOCAL PROCEDURE CurrentSchedNameOnAfterValidat@19053875();
    BEGIN
      CurrPage.SAVERECORD;
      AccSchedManagement.SetName(CurrentSchedName,Rec);
      CurrPage.UPDATE(FALSE);
    END;

    BEGIN
    END.
  }
}
