OBJECT Page 6500 Item Tracking Summary
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVW16.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Item Tracking Summary;
               ESP=Resumen seguimiento prod.];
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table338;
    PageType=Worksheet;
    SourceTableTemporary=Yes;
    OnInit=BEGIN
             Undefined1Visible := TRUE;
             Undefined0Visible := TRUE;
             Selected1Visible := TRUE;
             Selected0Visible := TRUE;
             MaxQuantity1Visible := TRUE;
             MaxQuantity0Visible := TRUE;
             "Bin ContentVisible" := TRUE;
           END;

    OnOpenPage=BEGIN
                 UpdateSelectedQuantity;

                 "Bin ContentVisible" := CurrBinCode <> '';

                 IF "Selected QuantityVisible" THEN BEGIN END
                 ELSE
                   IF "Serial No." <> '' THEN;
               END;

    OnAfterGetRecord=BEGIN
                       OnAfterGetCurrRecord;
                       MaxQuantitySelectedQuantityOnF;
                     END;

    OnNewRecord=BEGIN
                  OnAfterGetCurrRecord;
                END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 18  ;2   ;Field     ;
                SourceExpr="Lot No.";
                Editable=FALSE }

    { 16  ;2   ;Field     ;
                SourceExpr="Serial No.";
                Editable=FALSE }

    { 20  ;2   ;Field     ;
                SourceExpr="Warranty Date";
                Visible=FALSE;
                Editable=FALSE }

    { 22  ;2   ;Field     ;
                SourceExpr="Expiration Date";
                Visible=FALSE;
                Editable=FALSE }

    { 8   ;2   ;Field     ;
                DrillDown=Yes;
                SourceExpr="Total Quantity";
                Editable=FALSE;
                OnDrillDown=VAR
                              TempReservEntry2@1001 : TEMPORARY Record 337;
                            BEGIN
                              DrillDownEntries(FIELDNO("Total Quantity"));
                            END;
                             }

    { 24  ;2   ;Field     ;
                DrillDown=Yes;
                SourceExpr="Total Requested Quantity";
                Editable=FALSE;
                OnDrillDown=BEGIN
                              DrillDownEntries(FIELDNO("Total Requested Quantity"));
                            END;
                             }

    { 31  ;2   ;Field     ;
                SourceExpr="Current Pending Quantity";
                Editable=FALSE }

    { 12  ;2   ;Field     ;
                SourceExpr="Total Available Quantity";
                Editable=FALSE }

    { 14  ;2   ;Field     ;
                SourceExpr="Current Reserved Quantity";
                Visible=FALSE;
                Editable=FALSE }

    { 10  ;2   ;Field     ;
                SourceExpr="Total Reserved Quantity";
                Visible=FALSE;
                Editable=FALSE }

    { 34  ;2   ;Field     ;
                SourceExpr="Bin Content";
                Visible="Bin ContentVisible";
                OnDrillDown=BEGIN
                              DrillDownBinContent(FIELDNO("Bin Content"));
                            END;
                             }

    { 2   ;2   ;Field     ;
                SourceExpr="Selected Quantity";
                Visible="Selected QuantityVisible";
                Editable="Selected QuantityEditable";
                Style=Strong;
                StyleExpr=TRUE;
                OnValidate=BEGIN
                             SelectedQuantityOnAfterValidat;
                           END;
                            }

    { 50  ;1   ;Group      }

    { 1901775901;2;Group  ;
                GroupType=FixedLayout }

    { 1900545401;3;Group  ;
                CaptionML=[ENU=Selectable;
                           ESP=Seleccionable] }

    { 27  ;4   ;Field     ;
                Name=MaxQuantity1;
                CaptionML=[ENU=Selectable;
                           ESP=Seleccionable];
                DecimalPlaces=0:5;
                SourceExpr=MaxQuantity;
                Visible=MaxQuantity1Visible;
                Editable=FALSE }

    { 1900724401;3;Group  ;
                CaptionML=[ENU=Selected;
                           ESP=Selecc.] }

    { 5   ;4   ;Field     ;
                Name=Selected1;
                CaptionML=[ENU=Selected;
                           ESP=Selecc.];
                DecimalPlaces=0:5;
                SourceExpr=SelectedQuantity;
                Visible=Selected1Visible;
                Editable=FALSE }

    { 1900724101;3;Group  ;
                CaptionML=[ENU=Undefined;
                           ESP=Indefinido] }

    { 6   ;4   ;Field     ;
                Name=Undefined1;
                CaptionML=[ENU=Undefined;
                           ESP=Indefinido];
                DecimalPlaces=2:5;
                BlankZero=Yes;
                SourceExpr=MaxQuantity - SelectedQuantity;
                Visible=Undefined1Visible;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      TempReservEntry@1000 : TEMPORARY Record 337;
      ItemTrackingDataCollection@1004 : Codeunit 6501;
      CurrItemTrackingCode@1006 : Record 6502;
      MaxQuantity@1002 : Decimal;
      SelectedQuantity@1003 : Decimal;
      CurrBinCode@1005 : Code[20];
      xFilterRec@1007 : Record 338;
      "Selected QuantityVisible"@19045813 : Boolean INDATASET;
      "Bin ContentVisible"@19045641 : Boolean INDATASET;
      Undefined1Emphasize@19037692 : Boolean INDATASET;
      MaxQuantity0Visible@19058552 : Boolean INDATASET;
      MaxQuantity1Visible@19054264 : Boolean INDATASET;
      Selected0Visible@19001443 : Boolean INDATASET;
      Selected1Visible@19001414 : Boolean INDATASET;
      Undefined0Visible@19039033 : Boolean INDATASET;
      Undefined1Visible@19007737 : Boolean INDATASET;
      "Selected QuantityEditable"@19031275 : Boolean INDATASET;

    PROCEDURE SetSources@1(VAR ReservEntry@1000 : Record 337;VAR EntrySummary@1001 : Record 338);
    VAR
      xEntrySummary@1002 : Record 338;
    BEGIN
      TempReservEntry.RESET;
      TempReservEntry.DELETEALL;
      IF ReservEntry.FIND('-') THEN
        REPEAT
          TempReservEntry := ReservEntry;
          TempReservEntry.INSERT;
        UNTIL ReservEntry.NEXT = 0;

      xEntrySummary.SETVIEW(GETVIEW);
      RESET;
      DELETEALL;
      IF EntrySummary.FINDSET THEN
        REPEAT
          IF EntrySummary.HasQuantity THEN BEGIN
            Rec := EntrySummary;
            INSERT;
          END;
        UNTIL EntrySummary.NEXT = 0;
      SETVIEW(xEntrySummary.GETVIEW);
      UpdateSelectedQuantity;
    END;

    PROCEDURE SetSelectionMode@2(SelectionMode@1000 : Boolean);
    BEGIN
      "Selected QuantityVisible" := SelectionMode;
      "Selected QuantityEditable" := SelectionMode;
      MaxQuantity0Visible := SelectionMode;
      MaxQuantity1Visible := SelectionMode;
      Selected0Visible := SelectionMode;
      Selected1Visible := SelectionMode;
      Undefined0Visible := SelectionMode;
      Undefined1Visible := SelectionMode;
    END;

    PROCEDURE SetMaxQuantity@3(MaxQty@1000 : Decimal);
    BEGIN
      MaxQuantity := MaxQty;
    END;

    PROCEDURE SetCurrentBinAndItemTrkgCode@8(BinCode@1000 : Code[20];ItemTrackingCode@1001 : Record 6502);
    BEGIN
      ItemTrackingDataCollection.SetCurrentBinAndItemTrkgCode(BinCode,ItemTrackingCode);
      "Bin ContentVisible" := BinCode <> '';
      CurrBinCode := BinCode;
      CurrItemTrackingCode := ItemTrackingCode;
    END;

    PROCEDURE AutoSelectLotSerialNo@6();
    BEGIN
      ItemTrackingDataCollection.AutoSelectLotSerialNo(Rec,MaxQuantity);
    END;

    PROCEDURE UpdateSelectedQuantity@4();
    VAR
      xEntrySummary@1000 : Record 338;
    BEGIN
      IF NOT "Selected QuantityVisible" THEN
        EXIT;
      IF MODIFY THEN; // Ensure that changes to current rec are included in CALCSUMS
      xEntrySummary := Rec;
      CALCSUMS("Selected Quantity");
      SelectedQuantity := "Selected Quantity";
      Rec := xEntrySummary;
    END;

    PROCEDURE GetSelected@5(VAR EntrySummary@1000 : Record 338);
    BEGIN
      EntrySummary.RESET;
      EntrySummary.DELETEALL;
      SETFILTER("Selected Quantity",'<>%1',0);
      IF FINDSET THEN
        REPEAT
          EntrySummary := Rec;
          EntrySummary.INSERT;
        UNTIL NEXT = 0;
    END;

    PROCEDURE DrillDownEntries@7(FieldNumber@1001 : Integer);
    VAR
      TempReservEntry2@1000 : TEMPORARY Record 337;
    BEGIN
      TempReservEntry.RESET;
      TempReservEntry.SETCURRENTKEY(
        "Item No.","Source Type","Source Subtype","Reservation Status",
        "Location Code","Variant Code","Shipment Date","Expected Receipt Date","Serial No.","Lot No.");

      TempReservEntry.SETRANGE("Lot No.","Lot No.");
      IF "Serial No." <> '' THEN
        TempReservEntry.SETRANGE("Serial No.","Serial No.");

      CASE FieldNumber OF
        FIELDNO("Total Quantity"):
          BEGIN
            // An Item Ledger Entry will in itself be represented with a surplus TempReservEntry. Order tracking
            // and reservations against Item Ledger Entries are therefore kept out, as these quantities would
            // otherwise be represented twice in the drill down.

            TempReservEntry.SETRANGE(Positive,TRUE);
            TempReservEntry2.COPY(TempReservEntry);  // Copy key
            IF TempReservEntry.FINDSET THEN
              REPEAT
                TempReservEntry2 := TempReservEntry;
                IF TempReservEntry."Source Type" = DATABASE::"Item Ledger Entry" THEN BEGIN
                  IF TempReservEntry."Reservation Status" = TempReservEntry."Reservation Status"::Surplus THEN
                    TempReservEntry2.INSERT;
                END ELSE
                  TempReservEntry2.INSERT;
              UNTIL TempReservEntry.NEXT = 0;
            TempReservEntry2.ASCENDING(FALSE);
            FORM.RUNMODAL(FORM::"Avail. - Item Tracking Lines",TempReservEntry2);
          END;

        FIELDNO("Total Requested Quantity"):
          BEGIN
            TempReservEntry.SETRANGE(Positive,FALSE);
            TempReservEntry.ASCENDING(FALSE);
            FORM.RUNMODAL(FORM::"Avail. - Item Tracking Lines",TempReservEntry);
          END;
      END;
    END;

    PROCEDURE DrillDownBinContent@11(FieldNumber@1000 : Integer);
    VAR
      BinContent@1001 : Record 7302;
      BinContentForm@1002 : Form 7304;
    BEGIN
      IF CurrBinCode = '' THEN
        EXIT;
      TempReservEntry.RESET;
      IF NOT TempReservEntry.FINDFIRST THEN
        EXIT;

      CurrItemTrackingCode.TESTFIELD(Code);

      BinContent.SETRANGE("Location Code",TempReservEntry."Location Code");
      BinContent.SETRANGE("Item No.",TempReservEntry."Item No.");
      BinContent.SETRANGE("Variant Code",TempReservEntry."Variant Code");
      IF CurrItemTrackingCode."Lot Warehouse Tracking" THEN
        IF "Lot No." <> '' THEN
          BinContent.SETRANGE("Lot No. Filter","Lot No.");
      IF CurrItemTrackingCode."SN Warehouse Tracking" THEN
        IF "Serial No." <> '' THEN
          BinContent.SETRANGE("Serial No. Filter","Serial No.");

      IF FieldNumber = FIELDNO("Bin Content") THEN
        BinContent.SETRANGE("Bin Code",CurrBinCode);

      BinContentForm.SETTABLEVIEW(BinContent);
      BinContentForm.RUNMODAL;
    END;

    LOCAL PROCEDURE UpdateIfFiltersHaveChanged@9();
    BEGIN
      // In order to update Selected Quantity when filters have been changed on the form.
      IF GETFILTERS = xFilterRec.GETFILTERS THEN
        EXIT;

      UpdateSelectedQuantity;
      xFilterRec.COPY(Rec);
    END;

    LOCAL PROCEDURE SelectedQuantityOnAfterValidat@19049896();
    BEGIN
      UpdateSelectedQuantity;
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;
      UpdateIfFiltersHaveChanged;
    END;

    LOCAL PROCEDURE MaxQuantitySelectedQuantityOnF@19067374();
    BEGIN
      IF SelectedQuantity > MaxQuantity THEN BEGIN
        Undefined1Emphasize := TRUE;
      END ELSE BEGIN
        Undefined1Emphasize := FALSE;
      END;
    END;

    BEGIN
    END.
  }
}
