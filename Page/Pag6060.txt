OBJECT Page 6060 Contract Trendscape
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVW16.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Contract Trendscape;
               ESP=Trendscape contrato];
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    LinksAllowed=No;
    SourceTable=Table5965;
    PageType=List;
    OnAfterGetRecord=BEGIN
                       ContractNo := "Contract No.";
                       UpdateSubform;
                       OnAfterGetCurrRecord;
                     END;

    OnNewRecord=BEGIN
                  OnAfterGetCurrRecord;
                END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 16  ;1   ;Group     ;
                CaptionML=[ENU=General;
                           ESP=General] }

    { 11  ;2   ;Field     ;
                CaptionML=[ENU=Contract No.;
                           ESP=N§ contrato];
                SourceExpr=ContractNo;
                OnValidate=BEGIN
                             CLEAR(ServContract);
                             ServContract.SETRANGE("Contract Type",ServContract."Contract Type"::Contract);
                             ServContract.SETRANGE("Contract No.",ContractNo);
                             IF ServContract.FIND('-') THEN BEGIN
                               GET(ServContract."Contract Type"::Contract,ServContract."Contract No.");
                               SETRANGE("Contract No.",ServContract."Contract No.");
                               SETRANGE("Contract Type","Contract Type"::Contract);
                               ContractNo := ServContract."Contract No.";
                             END;
                               ContractNoOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           CLEAR(ServContract);
                           ServContract.SETRANGE("Contract Type",ServContract."Contract Type"::Contract);
                           ServContract."Contract No." := ContractNo;
                           IF FORM.RUNMODAL(0,ServContract) = ACTION::LookupOK THEN BEGIN
                             GET(ServContract."Contract Type"::Contract,ServContract."Contract No.");
                             SETRANGE("Contract Type","Contract Type"::Contract);
                             SETRANGE("Contract No.",ServContract."Contract No.");
                             ContractNo := ServContract."Contract No.";
                             CurrPage.UPDATE(FALSE);
                           END;
                         END;
                          }

    { 3   ;1   ;Part      ;
                Name=TrendLines;
                PagePartID=Page6061 }

    { 15  ;1   ;Group      }

    { 1901008301;2;Group  ;
                GroupType=FixedLayout }

    { 1901652701;3;Group  ;
                CaptionML=[ENU=Name;
                           ESP=Nombre] }

    { 13  ;4   ;Field     ;
                DrillDown=No;
                SourceExpr=Name;
                Editable=FALSE }

    { 1902923501;1;Group   }

    { 4   ;2   ;Field     ;
                CaptionML=[ENU=View by;
                           ESP=Ver por];
                ToolTipML=[ENU=Day;
                           ESP=D¡a];
                OptionCaptionML=[ENU=Day,Week,Month,Quarter,Year,Period;
                                 ESP=D¡a,Semana,Mes,Trimestre,A¤o,Periodo];
                SourceExpr=PeriodType;
                OnValidate=BEGIN
                             IF PeriodType = PeriodType::Period THEN
                               PeriodPeriodTypeOnValidate;
                             IF PeriodType = PeriodType::Year THEN
                               YearPeriodTypeOnValidate;
                             IF PeriodType = PeriodType::Quarter THEN
                               QuarterPeriodTypeOnValidate;
                             IF PeriodType = PeriodType::Month THEN
                               MonthPeriodTypeOnValidate;
                             IF PeriodType = PeriodType::Week THEN
                               WeekPeriodTypeOnValidate;
                             IF PeriodType = PeriodType::Day THEN
                               DayPeriodTypeOnValidate;
                           END;
                            }

    { 2   ;2   ;Field     ;
                CaptionML=[ENU=View as;
                           ESP=Ver como];
                ToolTipML=[ENU=Net Change;
                           ESP=Saldo periodo];
                OptionCaptionML=[ENU=Net Change,Balance at Date;
                                 ESP=Saldo periodo,Saldo a la fecha];
                SourceExpr=AmountType;
                OnValidate=BEGIN
                             IF AmountType = AmountType::"Balance at Date" THEN
                               BalanceatDateAmountTypeOnValid;
                             IF AmountType = AmountType::"Net Change" THEN
                               NetChangeAmountTypeOnValidate;
                           END;
                            }

  }
  CODE
  {
    VAR
      PeriodType@1000 : 'Day,Week,Month,Quarter,Year,Period';
      AmountType@1001 : 'Net Change,Balance at Date';
      ServContract@1002 : Record 5965;
      ContractNo@1003 : Code[20];

    PROCEDURE UpdateSubform@1();
    BEGIN
      CurrPage.TrendLines.FORM.Set(Rec,PeriodType,AmountType);
    END;

    LOCAL PROCEDURE ContractNoOnAfterValidate@19034635();
    BEGIN
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;
      ContractNo := "Contract No.";
      UpdateSubform;
    END;

    LOCAL PROCEDURE DayPeriodTypeOnPush@19008851();
    BEGIN
      UpdateSubform;
    END;

    LOCAL PROCEDURE WeekPeriodTypeOnPush@19046063();
    BEGIN
      UpdateSubform;
    END;

    LOCAL PROCEDURE MonthPeriodTypeOnPush@19047374();
    BEGIN
      UpdateSubform;
    END;

    LOCAL PROCEDURE QuarterPeriodTypeOnPush@19018850();
    BEGIN
      UpdateSubform;
    END;

    LOCAL PROCEDURE YearPeriodTypeOnPush@19051042();
    BEGIN
      UpdateSubform;
    END;

    LOCAL PROCEDURE PeriodPeriodTypeOnPush@19032639();
    BEGIN
      UpdateSubform;
    END;

    LOCAL PROCEDURE BalanceatDateAmountTypeOnPush@19049003();
    BEGIN
      UpdateSubform;
    END;

    LOCAL PROCEDURE NetChangeAmountTypeOnPush@19074855();
    BEGIN
      UpdateSubform;
    END;

    LOCAL PROCEDURE DayPeriodTypeOnValidate@19012979();
    BEGIN
      DayPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE WeekPeriodTypeOnValidate@19058475();
    BEGIN
      WeekPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE MonthPeriodTypeOnValidate@19021027();
    BEGIN
      MonthPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE QuarterPeriodTypeOnValidate@19015346();
    BEGIN
      QuarterPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE YearPeriodTypeOnValidate@19064743();
    BEGIN
      YearPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE PeriodPeriodTypeOnValidate@19066307();
    BEGIN
      PeriodPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE NetChangeAmountTypeOnValidate@19062218();
    BEGIN
      NetChangeAmountTypeOnPush;
    END;

    LOCAL PROCEDURE BalanceatDateAmountTypeOnValid@19007073();
    BEGIN
      BalanceatDateAmountTypeOnPush;
    END;

    BEGIN
    END.
  }
}
