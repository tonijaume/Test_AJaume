OBJECT Form 802 Online Map Address Selector
{
  OBJECT-PROPERTIES
  {
    Date=13/02/07;
    Time=12:00:00;
    Version List=NAVW15.00;
  }
  PROPERTIES
  {
    Width=7590;
    Height=4950;
    CaptionML=[ENU=Online Map Address Selector;
               ESP=Selector direcciones Online Map];
    OnOpenForm=BEGIN
                 OnlineMapSetup.GET;
                 CurrForm.LookupSelection.ACTIVATE;
                 Distance := OnlineMapSetup."Distance In";
                 Route := OnlineMapSetup.Route;
               END;

  }
  CONTROLS
  {
    { 1020002;CommandButton;2750;4180;2200;550  ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 PushAction=OK }
    { 1020003;CommandButton;5170;4180;2200;550  ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 PushAction=FormHelp }
    { 1020000;TabControl;220  ;220  ;7150 ;3740 ;HorzGlue=Both;
                                                 VertGlue=Both }
    { 1020001;TextBox   ;3960 ;1760 ;3190 ;440  ;Name=LookupCode;
                                                 HorzGlue=Left;
                                                 VertGlue=Top;
                                                 ParentControl=1020000;
                                                 InPage=0;
                                                 NextControl=1020002;
                                                 SourceExpr=LookupCode;
                                                 OnValidate=BEGIN
                                                              SelectedRecPosition := LoadLocationLookup(SelectedTableNo,LookupCode,FALSE);
                                                            END;

                                                 OnLookup=BEGIN
                                                            SelectedRecPosition := LoadLocationLookup(SelectedTableNo,LookupCode,TRUE);
                                                          END;
                                                           }
    { 1020006;TextBox   ;3960 ;1210 ;3190 ;440  ;Name=LookupSelection;
                                                 HorzGlue=Left;
                                                 VertGlue=Top;
                                                 ParentControl=1020000;
                                                 InPage=0;
                                                 OptionCaptionML=[ENU=" ,Bank,Contact,Customer,Employee,Job,Location,Resource,Vendor,Ship-to Address,Order Address";
                                                                  ESP=" ,Banco,Contacto,Cliente,Empleado,Proyecto,Almac‚n,Recurso,Proveedor,Enviar a direcci¢n,Direcci¢n de pedido"];
                                                 OptionString=[ ,Bank,Contact,Customer,Employee,Job,Location,Resource,Vendor,Ship-to Address,Order Address];
                                                 NextControl=1020001;
                                                 SourceExpr=LookupSelection;
                                                 OnAfterValidate=BEGIN
                                                                   SetTableNo;
                                                                 END;
                                                                  }
    { 1020005;Label     ;550  ;1210 ;3300 ;440  ;HorzGlue=Left;
                                                 VertGlue=Top;
                                                 ParentControl=1020006;
                                                 CaptionML=[ENU=Table Selection;
                                                            ESP=Selecci¢n tabla] }
    { 1020004;Label     ;550  ;1760 ;3300 ;440  ;Name=Selection;
                                                 HorzGlue=Left;
                                                 VertGlue=Top;
                                                 ParentControl=1020001;
                                                 InPage=0;
                                                 CaptionML=[ENU=Lookup Code;
                                                            ESP=C¢digo b£squeda] }
    { 1   ;TextBox      ;3960 ;2310 ;3190 ;440  ;ParentControl=1020000;
                                                 InPage=0;
                                                 OptionCaptionML=[ENU=Miles,Kilometers;
                                                                  ESP=Millas,Kil¢metros];
                                                 OptionString=Miles,Kilometers;
                                                 SourceExpr=Distance }
    { 2   ;Label        ;550  ;2310 ;3300 ;440  ;ParentControl=1;
                                                 CaptionML=[ENU=Distance In;
                                                            ESP=Distancia en] }
    { 3   ;TextBox      ;3960 ;2860 ;3190 ;440  ;ParentControl=1020000;
                                                 InPage=0;
                                                 CaptionML=[ENU=Route;
                                                            ESP=Ruta];
                                                 OptionCaptionML=[ENU=Quickest,Shortest;
                                                                  ESP=M s r pida,M s corta];
                                                 OptionString=Quickest,Shortest;
                                                 SourceExpr=Route }
    { 4   ;Label        ;550  ;2860 ;3190 ;440  ;ParentControl=3 }
  }
  CODE
  {
    VAR
      OnlineMapSetup@1002 : Record 800;
      SelectedRecPosition@1004 : Text[1000];
      LookupCode@1020001 : Code[20];
      LookupSelection@1020003 : ' ,Bank,Contact,Customer,Employee,Job,Location,Resource,Vendor,Ship-to Address,Order Address';
      Text001@1020007 : TextConst 'ENU=The selection that was chosen is not valid.;ESP=La opci¢n seleccionada no es v lida.';
      Text003@1020004 : TextConst 'ENU=The value %1 from Table ID %2 could not be found.;ESP=No se encontr¢ el valor %1 de Id. tabla %2.';
      Distance@1000 : 'Miles,Kilometers';
      Route@1001 : 'Quickest,Shortest';
      SelectedTableNo@1007 : Integer;
      Text004@1009 : TextConst 'ENU=Table No. %1 is not setup.;ESP=El n§ de tabla %1 no est  configurado.';

    PROCEDURE GetTableNo@1020001() : Integer;
    BEGIN
      EXIT(SelectedTableNo);
    END;

    PROCEDURE GetRecPosition@1020002() : Text[1000];
    BEGIN
      EXIT(SelectedRecPosition);
    END;

    PROCEDURE SetTableNo@1020000();
    BEGIN
      CASE LookupSelection OF
        LookupSelection::" ": SelectedTableNo := 0;
        LookupSelection::Bank: SelectedTableNo := DATABASE::"Bank Account";
        LookupSelection::Contact: SelectedTableNo := DATABASE::Contact;
        LookupSelection::Customer: SelectedTableNo := DATABASE::Customer;
        LookupSelection::Employee: SelectedTableNo := DATABASE::Employee;
        LookupSelection::Job: SelectedTableNo := DATABASE::Job;
        LookupSelection::Location: SelectedTableNo := DATABASE::Location;
        LookupSelection::Resource: SelectedTableNo := DATABASE::Resource;
        LookupSelection::Vendor: SelectedTableNo := DATABASE::Vendor;
        LookupSelection::"Ship-to Address": SelectedTableNo := DATABASE::"Ship-to Address";
        LookupSelection::"Order Address": SelectedTableNo := DATABASE::"Order Address";
        ELSE
          ERROR(Text001);
      END;
    END;

    PROCEDURE LoadLocationLookup@1020012(LoadTableNo@1020011 : Integer;VAR LookupCode@1020013 : Code[20];Lookup@1020014 : Boolean) : Text[1000];
    BEGIN
      CASE LoadTableNo OF
        DATABASE::"Bank Account": EXIT(LoadBankAccount(LookupCode,Lookup));
        DATABASE::Contact: EXIT(LoadContact(LookupCode,Lookup));
        DATABASE::Customer: EXIT(LoadCustomer(LookupCode,Lookup));
        DATABASE::Employee: EXIT(LoadEmployee(LookupCode,Lookup));
        DATABASE::Job: EXIT(LoadJob(LookupCode,Lookup));
        DATABASE::Location: EXIT(LoadLocation(LookupCode,Lookup));
        DATABASE::Resource: EXIT(LoadResource(LookupCode,Lookup));
        DATABASE::Vendor: EXIT(LoadVendor(LookupCode,Lookup));
        DATABASE::"Ship-to Address": EXIT(LoadShipTo(LookupCode,Lookup));
        DATABASE::"Order Address": EXIT(LoadOrderAddress(LookupCode,Lookup));
        ELSE BEGIN
          ERROR(STRSUBSTNO(Text004,FORMAT(LoadTableNo)));
        END;
      END;
    END;

    PROCEDURE LoadBankAccount@1020011(VAR LookUpCode@1020001 : Code[20];LookUp@1020000 : Boolean) : Text[1000];
    VAR
      BankAccount@1020002 : Record 270;
      Response@1020003 : Boolean;
    BEGIN
      IF LookUp THEN
        Response := FORM.RUNMODAL(FORM::"Bank Account List",BankAccount) = ACTION::LookupOK
      ELSE
        Response := BankAccount.GET(LookUpCode);

      IF Response THEN BEGIN
        LookUpCode := BankAccount."No.";
        EXIT(BankAccount.GETPOSITION)
      END ELSE
        ERROR(Text003,LookUpCode,DATABASE::"Bank Account");
    END;

    PROCEDURE LoadContact@1020010(VAR LookUpCode@1020000 : Code[20];LookUp@1020001 : Boolean) : Text[1000];
    VAR
      Contact@1020002 : Record 5050;
      Response@1020003 : Boolean;
    BEGIN
      IF LookUp THEN
        Response := FORM.RUNMODAL(FORM::"Contact List",Contact) = ACTION::LookupOK
      ELSE
        Response := Contact.GET(LookUpCode);

      IF Response THEN BEGIN
        LookUpCode := Contact."No.";
        EXIT(Contact.GETPOSITION)
      END ELSE
        ERROR(Text003,LookUpCode,DATABASE::Contact);
    END;

    PROCEDURE LoadCustomer@1020009(VAR LookUpCode@1020001 : Code[20];LookUp@1020000 : Boolean) : Text[1000];
    VAR
      Customer@1020002 : Record 18;
      Response@1020003 : Boolean;
    BEGIN
      IF LookUp THEN
        Response := FORM.RUNMODAL(FORM::"Customer List",Customer) = ACTION::LookupOK
      ELSE
        Response := Customer.GET(LookUpCode);

      IF Response THEN BEGIN
        LookUpCode := Customer."No.";
        EXIT(Customer.GETPOSITION)
      END ELSE
        ERROR(Text003,LookUpCode,DATABASE::Customer);
    END;

    PROCEDURE LoadEmployee@1020004(VAR LookUpCode@1020001 : Code[20];LookUp@1020000 : Boolean) : Text[1000];
    VAR
      Employee@1020002 : Record 5200;
      Response@1020003 : Boolean;
    BEGIN
      IF LookUp THEN
        Response := FORM.RUNMODAL(FORM::"Employee List",Employee) = ACTION::LookupOK
      ELSE
        Response := Employee.GET(LookUpCode);

      IF Response THEN BEGIN
        LookUpCode := Employee."No.";
        EXIT(Employee.GETPOSITION)
      END ELSE
        ERROR(Text003,LookUpCode,DATABASE::Employee);
    END;

    PROCEDURE LoadJob@1020006(VAR LookUpCode@1020001 : Code[20];LookUp@1020000 : Boolean) : Text[1000];
    VAR
      Job@1020002 : Record 167;
      Response@1020003 : Boolean;
    BEGIN
      IF LookUp THEN
        Response := FORM.RUNMODAL(FORM::"Job List",Job) = ACTION::LookupOK
      ELSE
        Response := Job.GET(LookUpCode);

      IF Response THEN BEGIN
        LookUpCode := Job."No.";
        EXIT(Job.GETPOSITION)
      END ELSE
        ERROR(Text003,LookUpCode,DATABASE::Job);
    END;

    PROCEDURE LoadLocation@1020007(VAR LookUpCode@1020001 : Code[20];LookUp@1020000 : Boolean) : Text[1000];
    VAR
      Location@1020002 : Record 14;
      Response@1020003 : Boolean;
    BEGIN
      IF LookUp THEN
        Response := FORM.RUNMODAL(FORM::"Location List",Location) = ACTION::LookupOK
      ELSE
        Response := Location.GET(LookUpCode);

      IF Response THEN BEGIN
        LookUpCode := Location.Code;
        EXIT(Location.GETPOSITION)
      END ELSE
        ERROR(Text003,LookUpCode,DATABASE::Location);
    END;

    PROCEDURE LoadResource@1020008(VAR LookUpCode@1020001 : Code[20];LookUp@1020000 : Boolean) : Text[1000];
    VAR
      Resource@1020002 : Record 156;
      Response@1020003 : Boolean;
    BEGIN
      IF LookUp THEN
        Response := FORM.RUNMODAL(FORM::"Resource List",Resource) = ACTION::LookupOK
      ELSE
        Response := Resource.GET(LookUpCode);

      IF Response THEN BEGIN
        LookUpCode := Resource."No.";
        EXIT(Resource.GETPOSITION)
      END ELSE
        ERROR(Text003,LookUpCode,DATABASE::Resource);
    END;

    PROCEDURE LoadVendor@1020015(VAR LookUpCode@1020001 : Code[20];LookUp@1020000 : Boolean) : Text[1000];
    VAR
      Vendor@1020002 : Record 23;
      Response@1020003 : Boolean;
    BEGIN
      IF LookUp THEN
        Response := FORM.RUNMODAL(FORM::"Vendor List",Vendor) = ACTION::LookupOK
      ELSE
        Response := Vendor.GET(LookUpCode);

      IF Response THEN BEGIN
        LookUpCode := Vendor."No.";
        EXIT(Vendor.GETPOSITION)
      END ELSE
        ERROR(Text003,LookUpCode,DATABASE::Vendor);
    END;

    PROCEDURE LoadShipTo@2(VAR LookUpCode@1020001 : Code[20];LookUp@1020000 : Boolean) : Text[1000];
    VAR
      ShipToAddress@1020002 : Record 222;
      Response@1020003 : Boolean;
    BEGIN
      IF LookUp THEN
        Response := FORM.RUNMODAL(FORM::"Ship-to Address List",ShipToAddress) = ACTION::LookupOK
      ELSE
        Response := ShipToAddress.GET(LookUpCode);

      IF Response THEN BEGIN
        LookUpCode := ShipToAddress.Code;
        EXIT(ShipToAddress.GETPOSITION)
      END ELSE
        ERROR(Text003,LookUpCode,DATABASE::"Ship-to Address");
    END;

    PROCEDURE LoadOrderAddress@4(VAR LookupCode@1000 : Code[20];LookUp@1001 : Boolean) : Text[1000];
    VAR
      OrderAddress@1003 : Record 224;
      Response@1002 : Boolean;
    BEGIN
      IF LookUp THEN
        Response := FORM.RUNMODAL(FORM::"Order Address List",OrderAddress) = ACTION::LookupOK
      ELSE
        Response := OrderAddress.GET(LookupCode);

      IF Response THEN BEGIN
        LookupCode := OrderAddress.Code;
        EXIT(OrderAddress.GETPOSITION)
      END ELSE
        ERROR(Text003,LookupCode,DATABASE::"Order Address");
    END;

    PROCEDURE Getdefaults@1(VAR ActualDistance@1001 : 'Miles,Kilometres';VAR ActualRoute@1000 : 'Quickest,Shortest');
    BEGIN
      ActualDistance := Distance;
      ActualRoute := Route;
    END;

    BEGIN
    END.
  }
}
