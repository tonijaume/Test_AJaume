OBJECT Form 5055276 Liq. Availability Lines
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=LIQEM6.00;
  }
  PROPERTIES
  {
    Width=15730;
    Height=4620;
    CaptionML=[ENU=Liq. Availability Lines;
               ESP=L¡neas disponibilidad liq.];
    TableBoxID=1140000;
    SourceTable=Table2000000007;
    OnOpenForm=BEGIN
                 RESET;
               END;

    OnFindRecord=BEGIN
                   EXIT(PeriodFormManagement.FindDate(Which,Rec,LiqPeriodLength));
                 END;

    OnNextRecord=BEGIN
                   EXIT(PeriodFormManagement.NextDate(Steps,Rec,LiqPeriodLength));
                 END;

    OnAfterGetRecord=BEGIN
                       SetDateFilter;

                       // Receivables
                       LiqLedgEntry.RESET;
                       LiqLedgEntry.SETCURRENTKEY("Liquidity No.","Liquidity Account No.","Source Type","Liquidity Date");
                       LiqLedgEntry.SETRANGE("Liquidity No.",Liquidity."No.");
                       LiqLedgEntry.SETRANGE("Source Type",LiqLedgEntry."Source Type"::Customer);
                       IF AmountType = AmountType::"Net Change" THEN
                         LiqLedgEntry.SETRANGE("Liquidity Date","Period Start","Period End")
                       ELSE
                         LiqLedgEntry.SETRANGE("Liquidity Date",0D,"Period End");
                       LiqLedgEntry.CALCSUMS(Amount);
                       Receivables := LiqLedgEntry.Amount;

                       // Payables
                       LiqLedgEntry.RESET;
                       LiqLedgEntry.SETCURRENTKEY("Liquidity No.","Liquidity Account No.","Source Type","Liquidity Date");
                       LiqLedgEntry.SETRANGE("Liquidity No.",Liquidity."No.");
                       LiqLedgEntry.SETRANGE("Source Type",LiqLedgEntry."Source Type"::Vendor);
                       IF AmountType = AmountType::"Net Change" THEN
                         LiqLedgEntry.SETRANGE("Liquidity Date","Period Start","Period End")
                       ELSE
                         LiqLedgEntry.SETRANGE("Liquidity Date",0D,"Period End");
                       LiqLedgEntry.CALCSUMS(Amount);
                       Payables := LiqLedgEntry.Amount;

                       // Sales Order
                       LiqLedgEntry.RESET;
                       LiqLedgEntry.SETCURRENTKEY("Liquidity No.","Liquidity Account No.","Source Type","Liquidity Date");
                       LiqLedgEntry.SETRANGE("Liquidity No.",Liquidity."No.");
                       LiqLedgEntry.SETRANGE("Source Type",LiqLedgEntry."Source Type"::"Sales Order");
                       IF AmountType = AmountType::"Net Change" THEN
                         LiqLedgEntry.SETRANGE("Liquidity Date","Period Start","Period End")
                       ELSE
                         LiqLedgEntry.SETRANGE("Liquidity Date",0D,"Period End");
                       LiqLedgEntry.CALCSUMS(Amount);
                       SalesOrders := LiqLedgEntry.Amount;

                       // Purchase Orders
                       LiqLedgEntry.RESET;
                       LiqLedgEntry.SETCURRENTKEY("Liquidity No.","Liquidity Account No.","Source Type","Liquidity Date");
                       LiqLedgEntry.SETRANGE("Liquidity No.",Liquidity."No.");
                       LiqLedgEntry.SETRANGE("Source Type",LiqLedgEntry."Source Type"::"Purchase Order");
                       IF AmountType = AmountType::"Net Change" THEN
                         LiqLedgEntry.SETRANGE("Liquidity Date","Period Start","Period End")
                       ELSE
                         LiqLedgEntry.SETRANGE("Liquidity Date",0D,"Period End");
                       LiqLedgEntry.CALCSUMS(Amount);
                       PurchaseOrders := LiqLedgEntry.Amount;

                       // Sale of Fixed Assets
                       LiqLedgEntry.RESET;
                       LiqLedgEntry.SETCURRENTKEY("Liquidity No.","Liquidity Account No.","Source Type","Liquidity Date");
                       LiqLedgEntry.SETRANGE("Liquidity No.",Liquidity."No.");
                       LiqLedgEntry.SETRANGE("Source Type",LiqLedgEntry."Source Type"::"Sale of Fixed Asset");
                       IF AmountType = AmountType::"Net Change" THEN
                         LiqLedgEntry.SETRANGE("Liquidity Date","Period Start","Period End")
                       ELSE
                         LiqLedgEntry.SETRANGE("Liquidity Date",0D,"Period End");
                       LiqLedgEntry.CALCSUMS(Amount);
                       SaleFixedAssets := LiqLedgEntry.Amount;

                       // Budgeted Fixed Assets
                       LiqLedgEntry.RESET;
                       LiqLedgEntry.SETCURRENTKEY("Liquidity No.","Liquidity Account No.","Source Type","Liquidity Date");
                       LiqLedgEntry.SETRANGE("Liquidity No.",Liquidity."No.");
                       LiqLedgEntry.SETRANGE("Source Type",LiqLedgEntry."Source Type"::"Budgeted Fixed Asset");
                       IF AmountType = AmountType::"Net Change" THEN
                         LiqLedgEntry.SETRANGE("Liquidity Date","Period Start","Period End")
                       ELSE
                         LiqLedgEntry.SETRANGE("Liquidity Date",0D,"Period End");
                       LiqLedgEntry.CALCSUMS(Amount);
                       BudgFixedAssets := LiqLedgEntry.Amount;

                       // Neutral Expenses
                       LiqLedgEntry.RESET;
                       LiqLedgEntry.SETCURRENTKEY("Liquidity No.","Liquidity Account No.","Source Type","Liquidity Date");
                       LiqLedgEntry.SETRANGE("Liquidity No.",Liquidity."No.");
                       LiqLedgEntry.SETRANGE("Source Type",LiqLedgEntry."Source Type"::"Neutral Expenses");
                       IF AmountType = AmountType::"Net Change" THEN
                         LiqLedgEntry.SETRANGE("Liquidity Date","Period Start","Period End")
                       ELSE
                         LiqLedgEntry.SETRANGE("Liquidity Date",0D,"Period End");
                       LiqLedgEntry.CALCSUMS(Amount);
                       NeutrExpenses := LiqLedgEntry.Amount;

                       // Neutral Revenues
                       LiqLedgEntry.RESET;
                       LiqLedgEntry.SETCURRENTKEY("Liquidity No.","Liquidity Account No.","Source Type","Liquidity Date");
                       LiqLedgEntry.SETRANGE("Liquidity No.",Liquidity."No.");
                       LiqLedgEntry.SETRANGE("Source Type",LiqLedgEntry."Source Type"::"Neutral Revenues");
                       IF AmountType = AmountType::"Net Change" THEN
                         LiqLedgEntry.SETRANGE("Liquidity Date","Period Start","Period End")
                       ELSE
                         LiqLedgEntry.SETRANGE("Liquidity Date",0D,"Period End");
                       LiqLedgEntry.CALCSUMS(Amount);
                       NeutrRevenues := LiqLedgEntry.Amount;

                       LiquiditySum := LiquidFunds + Receivables + SalesOrders + SaleFixedAssets + NeutrRevenues +
                                       Payables + PurchaseOrders + BudgFixedAssets + NeutrExpenses;

                       CASE RoundingFactor OF
                         RoundingFactor::"1":
                           BEGIN
                             Receivables:= ROUND(Receivables,1);
                             SalesOrders:= ROUND(SalesOrders,1);
                             NeutrRevenues:= ROUND(NeutrRevenues,1);
                             Payables:= ROUND(Payables,1);
                             PurchaseOrders:= ROUND(PurchaseOrders,1);
                             NeutrExpenses:= ROUND(NeutrExpenses,1);
                             SaleFixedAssets := ROUND(SaleFixedAssets,1);
                             BudgFixedAssets := ROUND(BudgFixedAssets,1);
                             LiquiditySum := ROUND(LiquiditySum,1);
                           END;
                         RoundingFactor::"1000":
                           BEGIN
                             Receivables:= ROUND(Receivables / 1000,0.1);
                             SalesOrders := ROUND(SalesOrders / 1000,0.1);
                             NeutrRevenues := ROUND(NeutrRevenues / 1000,0.1);
                             Payables := ROUND(Payables / 1000,0.1);
                             PurchaseOrders := ROUND(PurchaseOrders / 1000,0.1);
                             NeutrExpenses := ROUND(NeutrExpenses / 1000,0.1);
                             SaleFixedAssets := ROUND(SaleFixedAssets / 1000,0.1);
                             BudgFixedAssets := ROUND(BudgFixedAssets / 1000,0.1);
                             LiquiditySum := ROUND(LiquiditySum / 1000,0.1);
                           END;
                         RoundingFactor::"1000000":
                           BEGIN
                             Receivables := ROUND(Receivables / 1000000,0.1);
                             SalesOrders := ROUND(SalesOrders / 1000000,0.1);
                             NeutrRevenues := ROUND(NeutrRevenues / 1000000,0.1);
                             Payables := ROUND(Payables / 1000000,0.1);
                             PurchaseOrders := ROUND(PurchaseOrders / 1000000,0.1);
                             NeutrExpenses := ROUND(NeutrExpenses / 1000000,0.1);
                             SaleFixedAssets := ROUND(SaleFixedAssets / 1000000,0.1);
                             BudgFixedAssets := ROUND(BudgFixedAssets / 1000000,0.1);
                             LiquiditySum := ROUND(LiquiditySum / 1000000,0.1);
                           END;
                       END;
                     END;

  }
  CONTROLS
  {
    { 1140000;TableBox  ;0    ;0    ;15730;4620 ;HorzGlue=Both;
                                                 VertGlue=Both;
                                                 Editable=No }
    { 1140001;TextBox   ;2514 ;6364 ;1640 ;440  ;ParentControl=1140000;
                                                 InColumn=Yes;
                                                 SourceExpr="Period Start" }
    { 1140002;Label     ;0    ;0    ;3300 ;440  ;ParentControl=1140001;
                                                 InColumnHeading=Yes }
    { 1140003;TextBox   ;1430 ;6584 ;2196 ;440  ;HorzGlue=Both;
                                                 ParentControl=1140000;
                                                 InColumn=Yes;
                                                 SourceExpr="Period Name" }
    { 1140004;Label     ;0    ;0    ;3300 ;440  ;ParentControl=1140003;
                                                 InColumnHeading=Yes }
    { 1140005;TextBox   ;4207 ;1650 ;2157 ;440  ;ParentControl=1140000;
                                                 InColumn=Yes;
                                                 CaptionML=[ENU=Receivables;
                                                            ESP=Cobros];
                                                 SourceExpr=Receivables;
                                                 OnFormat=BEGIN
                                                            FormatAmount(Text);
                                                          END;
                                                           }
    { 1140006;Label     ;0    ;0    ;0    ;0    ;ParentControl=1140005;
                                                 InColumnHeading=Yes }
    { 1140007;TextBox   ;5848 ;1650 ;2090 ;440  ;ParentControl=1140000;
                                                 InColumn=Yes;
                                                 CaptionML=[ENU=Sales Orders;
                                                            ESP=Pedidos venta];
                                                 SourceExpr=SalesOrders;
                                                 OnFormat=BEGIN
                                                            FormatAmount(Text);
                                                          END;
                                                           }
    { 1140008;Label     ;0    ;0    ;0    ;0    ;ParentControl=1140007;
                                                 InColumnHeading=Yes }
    { 1140009;TextBox   ;8096 ;990  ;2158 ;440  ;ParentControl=1140000;
                                                 InColumn=Yes;
                                                 CaptionML=[ENU=Sale of Fixed Assets;
                                                            ESP=Venta activos fijos];
                                                 SourceExpr=SaleFixedAssets;
                                                 OnFormat=BEGIN
                                                            FormatAmount(Text);
                                                          END;
                                                           }
    { 1140010;Label     ;0    ;0    ;0    ;0    ;ParentControl=1140009;
                                                 InColumnHeading=Yes }
    { 1140011;TextBox   ;7726 ;1320 ;1980 ;440  ;ParentControl=1140000;
                                                 InColumn=Yes;
                                                 CaptionML=[ENU=Neutr. Revenues;
                                                            ESP=Ingresos neutr.];
                                                 SourceExpr=NeutrRevenues;
                                                 OnFormat=BEGIN
                                                            FormatAmount(Text);
                                                          END;
                                                           }
    { 1140012;Label     ;0    ;0    ;0    ;0    ;ParentControl=1140011;
                                                 InColumnHeading=Yes }
    { 1140013;TextBox   ;9578 ;1430 ;1980 ;440  ;ParentControl=1140000;
                                                 InColumn=Yes;
                                                 CaptionML=[ENU=Payables;
                                                            ESP=Pagos];
                                                 SourceExpr=Payables;
                                                 OnFormat=BEGIN
                                                            FormatAmount(Text);
                                                          END;
                                                           }
    { 1140014;Label     ;0    ;0    ;0    ;0    ;ParentControl=1140013;
                                                 InColumnHeading=Yes }
    { 1140015;TextBox   ;10901;1540 ;1980 ;440  ;ParentControl=1140000;
                                                 InColumn=Yes;
                                                 CaptionML=[ENU=Purchase Orders;
                                                            ESP=Pedidos compra];
                                                 SourceExpr=PurchaseOrders;
                                                 OnFormat=BEGIN
                                                            FormatAmount(Text);
                                                          END;
                                                           }
    { 1140016;Label     ;0    ;0    ;0    ;0    ;ParentControl=1140015;
                                                 InColumnHeading=Yes }
    { 1140017;TextBox   ;16206;1210 ;2070 ;440  ;ParentControl=1140000;
                                                 InColumn=Yes;
                                                 CaptionML=[ENU=Budg. Investment Fixed Assets;
                                                            ESP=Activos fijos inv. pptdos.];
                                                 SourceExpr=BudgFixedAssets;
                                                 OnFormat=BEGIN
                                                            FormatAmount(Text);
                                                          END;
                                                           }
    { 1140018;Label     ;0    ;0    ;0    ;0    ;ParentControl=1140017;
                                                 InColumnHeading=Yes }
    { 1140019;TextBox   ;12992;2970 ;1980 ;440  ;ParentControl=1140000;
                                                 InColumn=Yes;
                                                 CaptionML=[ENU=Neutr. Expenses;
                                                            ESP=Gastos neutr.];
                                                 SourceExpr=NeutrExpenses;
                                                 OnFormat=BEGIN
                                                            FormatAmount(Text);
                                                          END;
                                                           }
    { 1140020;Label     ;0    ;0    ;0    ;0    ;ParentControl=1140019;
                                                 InColumnHeading=Yes }
    { 1140021;TextBox   ;18627;2310 ;1980 ;440  ;ParentControl=1140000;
                                                 InColumn=Yes;
                                                 FontBold=Yes;
                                                 CaptionML=[ENU=Total;
                                                            ESP=Total];
                                                 SourceExpr=LiquiditySum;
                                                 OnFormat=BEGIN
                                                            FormatAmount(Text);
                                                          END;
                                                           }
    { 1140022;Label     ;0    ;0    ;0    ;0    ;ParentControl=1140021;
                                                 InColumnHeading=Yes }
    { 21  ;Label        ;5720 ;330  ;3300 ;440  ;InColumnHeading=Yes }
  }
  CODE
  {
    VAR
      Text1140000@1140000 : TextConst 'ENU=<Sign><Integer Thousand><Decimals,2>;ESP=<Sign><Integer Thousand><Decimals,2>';
      Liquidity@1140001 : Record 5055250;
      Liquidity2@1140002 : Record 5055250;
      SalesLine@1140003 : Record 37;
      PurchLine@1140004 : Record 39;
      ProdOrderLine@1140005 : Record 5406;
      ProdOrderComponent@1140006 : Record 5407;
      LiqLedgEntry@1140007 : Record 5055257;
      PeriodFormManagement@1140008 : Codeunit 359;
      AvailabilityMgt@1140009 : Codeunit 5400;
      LiqPeriodLength@1140010 : 'Day,Week,Month,Quarter,Year,Period';
      AmountType@1140011 : 'Net Change,Balance at Date';
      RoundingFactor@1140012 : 'None,1,1000,1000000';
      Receivables@1140013 : Decimal;
      SalesOrders@1140014 : Decimal;
      SaleFixedAssets@1140015 : Decimal;
      NeutrRevenues@1140016 : Decimal;
      Payables@1140017 : Decimal;
      PurchaseOrders@1140018 : Decimal;
      BudgFixedAssets@1140019 : Decimal;
      NeutrExpenses@1140020 : Decimal;
      LiquidFunds@1140021 : Decimal;
      LiquiditySum@1140022 : Decimal;
      DateFrom@1140023 : Date;
      DateTo@1140024 : Date;

    PROCEDURE Set@1140000(VAR NewLiquidity@1140000 : Record 5055250;NewLiquidityPeriodLength@1140001 : Integer;NewAmountType@1140002 : 'Net Change,Balance at Date';RoundingFactor2@1140003 : 'None,1,1000,1000000');
    BEGIN
      Liquidity.COPY(NewLiquidity);
      Liquidity.COPY(NewLiquidity);
      Liquidity2.COPY(NewLiquidity);
      LiqPeriodLength := NewLiquidityPeriodLength;
      AmountType := NewAmountType;
      CurrForm.UPDATE(FALSE);
      RoundingFactor := RoundingFactor2;
    END;

    LOCAL PROCEDURE SetDateFilter@1140001();
    BEGIN
    END;

    LOCAL PROCEDURE FormatAmount@1140002(VAR Text@1140000 : Text[250]);
    VAR
      Amount@1140001 : Decimal;
    BEGIN
      IF Text = '' THEN
        EXIT;

      EVALUATE(Amount,Text);

      IF RoundingFactor = RoundingFactor::None THEN
        EXIT;

      CASE RoundingFactor OF
        RoundingFactor::"1":
          Amount := ROUND(Amount,1);
        RoundingFactor::"1000":
          Amount := ROUND(Amount,0.1);
        RoundingFactor::"1000000":
          Amount := ROUND(Amount,0.1);
      END;
      IF Amount = 0 THEN
        Text := '0'
      ELSE
        CASE RoundingFactor OF
          RoundingFactor::"1":
            Text := FORMAT(Amount);
          RoundingFactor::"1000",RoundingFactor::"1000000":
            Text := FORMAT(Amount,0,Text1140000);
        END;
    END;

    BEGIN
    END.
  }
}
