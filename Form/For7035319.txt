OBJECT Form 7035319 Revision Periodica Vehiculos
{
  OBJECT-PROPERTIES
  {
    Date=16/10/09;
    Time=12:32:58;
    Version List=TRANSFER;
  }
  PROPERTIES
  {
    Width=20570;
    Height=10230;
    CaptionML=ESP=Revision Periodica Vehiculos;
    ActiveControlOnOpen=1100244017;
    MaximizedOnOpen=Yes;
    SaveValues=Yes;
    TableBoxID=1100244000;
    SourceTable=Table7010352;
    SaveTableView=No;
    UpdateOnActivate=Yes;
    DelayedInsert=Yes;
    PopulateAllFields=Yes;
    SourceTableView=SORTING(Usuario,Orden);
    OnOpenForm=BEGIN

                 FILTERGROUP(2);
                 SETRANGE(Usuario,USERID);
                 FILTERGROUP(0);
                 rSel.COPY(Rec);
                 IF rSel.FINDFIRST THEN
                   rSel.DELETEALL;

                 CLEAR(wOrden);
                 wFecha := TODAY;

                 Actualiza;
                 CurrForm.Fecha1.ACTIVATE;
               END;

    OnQueryCloseForm=BEGIN
                       CLEAR(rSel);
                       rSel.SETRANGE(Usuario,USERID);
                       rSel.SETRANGE(Seleccion,FALSE);
                       IF rSel.FINDFIRST THEN BEGIN
                         IF NOT CONFIRM (Text014) THEN
                           EXIT(FALSE);
                       END;
                     END;

    OnAfterGetCurrRecord=BEGIN

                           // CurrForm.Kilometros.EDITABLE((Numero <>'') AND (NOT Seleccion));
                           CurrForm."Kms. Contador".EDITABLE((Numero <>'') AND (NOT Seleccion));

                           CurrForm.Matricula.EDITABLE((Matricula='') AND (NOT Seleccion));
                         END;

    OnInsertRecord=BEGIN
                     EXIT(Matricula<>'');
                   END;

    OnDeleteRecord=BEGIN
                     // Retorna si un vehivulo tiene incidencias para ese dia la borra

                     IF (Matricula<>'') AND (Seleccion) THEN BEGIN
                       rInc.RESET;
                       rInc.INIT;
                       rInc.SETCURRENTKEY(Matricula,"Fecha Incidencia",Garaje);
                       rInc.SETRANGE(Matricula,Matricula);
                       rInc.SETRANGE("Tipo Incidencia",wIncidencia);
                       rInc.SETRANGE("Fecha Incidencia",wFecha);
                       IF rInc.FINDFIRST THEN
                         rInc.DELETE(TRUE);
                     END;
                   END;

  }
  CONTROLS
  {
    { 1100244000;TableBox;220 ;2420 ;20130;6820 ;Name=CAJA;
                                                 HorzGlue=Both;
                                                 VertGlue=Both;
                                                 HeadingHeight=880 }
    { 1100244003;TextBox;0    ;0    ;2590 ;0    ;ParentControl=1100244000;
                                                 InColumn=Yes;
                                                 NotBlank=Yes;
                                                 SourceExpr=Matricula;
                                                 OnFormat=BEGIN
                                                            CurrForm.Matricula.UPDATEFONTBOLD(Seleccion);
                                                          END;

                                                 OnValidate=BEGIN
                                                              IF rVeh.GET(Matricula) THEN
                                                                GetVehiculos(rVeh);

                                                              ValidaNumero;
                                                            END;
                                                             }
    { 1100244004;Label  ;0    ;0    ;0    ;0    ;ParentControl=1100244003;
                                                 InColumnHeading=Yes }
    { 1103350017;TextBox;2196 ;2860 ;2200 ;440  ;ParentControl=1100244000;
                                                 InColumn=Yes;
                                                 SourceExpr="Kms. Contador";
                                                 OnActivate=BEGIN
                                                              CurrForm."Kms. Contador".EDITABLE((Numero <>'') AND (NOT Seleccion));
                                                            END;

                                                 OnFormat=BEGIN
                                                            CurrForm."Kms. Contador".UPDATEFONTBOLD(Seleccion);
                                                          END;

                                                 OnValidate=BEGIN
                                                              CLEAR(Kilometros);
                                                              ConvierteKms(Numero,Kilometros,"Kms. Contador");
                                                            END;
                                                             }
    { 1103350018;Label  ;0    ;0    ;0    ;0    ;ParentControl=1103350017;
                                                 InColumnHeading=Yes }
    { 1103350000;TextBox;14738;5280 ;2310 ;440  ;Editable=No;
                                                 ParentControl=1100244000;
                                                 InColumn=Yes;
                                                 CaptionML=ESP=Kms. Reales;
                                                 DecimalPlaces=0:2;
                                                 SourceExpr=Kilometros;
                                                 OnActivate=BEGIN
                                                              // CurrForm.Kilometros.EDITABLE((Numero <>'') AND (NOT Seleccion));
                                                            END;

                                                 OnFormat=BEGIN
                                                            CurrForm.Kilometros.UPDATEFONTBOLD(Seleccion);
                                                          END;

                                                 OnValidate=BEGIN
                                                              CLEAR("Kms. Contador");
                                                              ConvierteKms(Numero,Kilometros,"Kms. Contador");


                                                              IF Kilometros < "Kms.Ultima Revision" THEN
                                                                MESSAGE(Text013);
                                                            END;
                                                             }
    { 1103350001;Label  ;0    ;0    ;0    ;0    ;ParentControl=1103350000;
                                                 InColumnHeading=Yes }
    { 1103350003;TextBox;5504 ;2970 ;2530 ;440  ;Editable=No;
                                                 ParentControl=1100244000;
                                                 InColumn=Yes;
                                                 DecimalPlaces=0:2;
                                                 SourceExpr="Kms.Ultima Revision";
                                                 OnFormat=BEGIN
                                                            CurrForm."Kms.Ultima Revision".UPDATEFONTBOLD(Seleccion);
                                                          END;

                                                 OnLookup=VAR
                                                            lrInc@1103350000 : Record 7010348;
                                                          BEGIN

                                                            CLEAR(lrInc);
                                                            lrInc.SETCURRENTKEY(Matricula,"Fecha Incidencia",Garaje);
                                                            // Orden inverso para pillar el £ltimo
                                                            lrInc.ASCENDING(FALSE);

                                                            lrInc.FILTERGROUP(2);
                                                            lrInc.SETRANGE(Matricula          , Matricula);
                                                            lrInc.SETRANGE("Tipo Incidencia"  , wIncidencia);
                                                            lrInc.SETRANGE(Tipo               , lrInc.Tipo::Revision);
                                                            lrInc.FILTERGROUP(0);
                                                            IF lrInc.FINDFIRST THEN
                                                              FORM.RUNMODAL(7010377,lrInc);
                                                            IF lrInc.FIND THEN
                                                              "Kms.Ultima Revision":= lrInc.Kilometros;
                                                          END;
                                                           }
    { 1103350004;Label  ;0    ;0    ;0    ;0    ;ParentControl=1103350003;
                                                 InColumnHeading=Yes }
    { 1103350005;TextBox;8303 ;2970 ;2640 ;440  ;Name=Diferencia1;
                                                 ParentControl=1100244000;
                                                 InColumn=Yes;
                                                 CaptionML=ESP=Diferencia;
                                                 DecimalPlaces=0:2;
                                                 SourceExpr=Kilometros - "Kms.Ultima Revision";
                                                 OnFormat=BEGIN
                                                            CurrForm.Diferencia1.UPDATEFONTBOLD(Seleccion);
                                                            IF (Kilometros-"Kms.Ultima Revision")<0 THEN
                                                              CurrForm.Diferencia1.UPDATEFORECOLOR(255)
                                                            ELSE
                                                              CurrForm.Diferencia1.UPDATEFORECOLOR(0);

                                                            IF Kilometros=0 THEN
                                                              Text:='';
                                                          END;
                                                           }
    { 1103350008;Label  ;0    ;0    ;0    ;0    ;ParentControl=1103350005;
                                                 InColumnHeading=Yes }
    { 1103350007;TextBox;9953 ;3080 ;1870 ;440  ;Editable=No;
                                                 ParentControl=1100244000;
                                                 InColumn=Yes;
                                                 SourceExpr="Ultima Fecha Revision";
                                                 OnFormat=BEGIN
                                                            CurrForm."Ultima Fecha Revision".UPDATEFONTBOLD(Seleccion);
                                                          END;
                                                           }
    { 1103350014;Label  ;0    ;0    ;0    ;0    ;ParentControl=1103350007;
                                                 InColumnHeading=Yes }
    { 1103350015;TextBox;11377;3080 ;1700 ;440  ;Name=DiferenciaMeses1;
                                                 ParentControl=1100244000;
                                                 InColumn=Yes;
                                                 CaptionML=ESP=Diferencia Meses;
                                                 BlankZero=Yes;
                                                 SourceExpr=MesesDif;
                                                 OnFormat=BEGIN
                                                            CurrForm.DiferenciaMeses1.UPDATEFONTBOLD(Seleccion);
                                                          END;
                                                           }
    { 1103350016;Label  ;0    ;0    ;0    ;0    ;ParentControl=1103350015;
                                                 InColumnHeading=Yes }
    { 1100244001;TextBox;0    ;2750 ;2473 ;440  ;Editable=No;
                                                 Focusable=No;
                                                 ParentControl=1100244000;
                                                 InColumn=Yes;
                                                 ForeColor=8421504;
                                                 SourceExpr=Numero;
                                                 OnActivate=BEGIN
                                                              //CurrForm.UPDATE;
                                                              //CurrForm.Numero.EDITABLE(Numero='');
                                                            END;

                                                 OnFormat=BEGIN
                                                            CurrForm.Numero.UPDATEFONTBOLD(Seleccion);
                                                          END;

                                                 OnLookup=BEGIN
                                                            CLEAR(rSel);
                                                            IF rSel.GET(USERID,Matricula) THEN
                                                              EXIT;
                                                            rVeh.RESET;
                                                            rVeh.SETCURRENTKEY(Numero);
                                                            rVeh.FILTERGROUP(2);
                                                            IF (wGaraje <> rPar."Todos los garajes") AND (wGaraje<>'')THEN
                                                              rVeh.SETRANGE(Garaje, wGaraje);
                                                            rVeh.SETRANGE(Numero,Numero);
                                                            IF rVeh.FINDFIRST THEN;
                                                            rVeh.SETRANGE(Numero);
                                                            rVeh.SETRANGE("Vehiculo propio",TRUE);
                                                            rVeh.SETFILTER("Fecha venta",'=%1',0D);
                                                            rVeh.FILTERGROUP(0);
                                                            IF FORM.RUNMODAL(0,rVeh,rVeh.Numero)= ACTION::LookupOK THEN BEGIN
                                                              Numero := rVeh.Numero;
                                                              ValidaNumero;
                                                            END;
                                                          END;
                                                           }
    { 1100244002;Label  ;0    ;0    ;0    ;0    ;ParentControl=1100244001;
                                                 InColumnHeading=Yes }
    { 1100244005;TextBox;0    ;0    ;2200 ;0    ;Focusable=No;
                                                 ParentControl=1100244000;
                                                 InColumn=Yes;
                                                 ForeColor=8421504;
                                                 SourceExpr="Tipo Vehiculo";
                                                 OnFormat=BEGIN
                                                            CurrForm."Tipo Vehiculo".UPDATEFONTBOLD(Seleccion);
                                                          END;
                                                           }
    { 1100244006;Label  ;0    ;0    ;0    ;0    ;ParentControl=1100244005;
                                                 InColumnHeading=Yes }
    { 1100244007;TextBox;0    ;0    ;1847 ;0    ;Focusable=No;
                                                 ParentControl=1100244000;
                                                 InColumn=Yes;
                                                 ForeColor=8421504;
                                                 NotBlank=Yes;
                                                 SourceExpr=Plazas;
                                                 OnFormat=BEGIN
                                                            CurrForm.Plazas.UPDATEFONTBOLD(Seleccion);
                                                          END;
                                                           }
    { 1100244008;Label  ;0    ;0    ;0    ;0    ;ParentControl=1100244007;
                                                 InColumnHeading=Yes }
    { 1100244009;TextBox;0    ;0    ;2108 ;0    ;Focusable=No;
                                                 ParentControl=1100244000;
                                                 InColumn=Yes;
                                                 ForeColor=8421504;
                                                 SourceExpr=Garaje;
                                                 OnFormat=BEGIN
                                                            CurrForm.Garaje.UPDATEFONTBOLD(Seleccion);
                                                          END;
                                                           }
    { 1100244010;Label  ;0    ;0    ;0    ;0    ;ParentControl=1100244009;
                                                 InColumnHeading=Yes }
    { 1100244013;CommandButton;10890;9460;2200;550;
                                                 HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 Default=Yes;
                                                 PushAction=LookupOK;
                                                 InvalidActionAppearance=Hide }
    { 1100244014;CommandButton;13310;9460;2200;550;
                                                 HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 Cancel=Yes;
                                                 PushAction=LookupCancel;
                                                 InvalidActionAppearance=Hide }
    { 1100244015;CommandButton;18150;9460;2200;550;
                                                 HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 PushAction=FormHelp }
    { 1100244027;MenuButton;15730;9460;2200;550 ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 CaptionML=ESP=&Asignacion;
                                                 Menu=MENUITEMS
                                                 {
                                                   { ID=1100244030;
                                                     Visible=No;
                                                     ShortCutKey=Ctrl+I;
                                                     CaptionML=ESP=Incidencias;
                                                     OnPush=VAR
                                                              fFicAve@1100244000 : Form 7010377;
                                                            BEGIN
                                                              rPar.GET;
                                                              rInc.RESET;
                                                              rInc.INIT;
                                                              rInc.SETCURRENTKEY(Matricula,"Fecha Incidencia",Garaje);

                                                              rInc.SETRANGE(Matricula,Matricula);

                                                              IF wFecha <> 0D THEN
                                                                rInc.SETRANGE("Fecha Incidencia",wFecha);

                                                              IF NOT rInc.FINDFIRST THEN
                                                                ERROR(Text007,rInc.GETFILTERS);
                                                              CLEAR(fFicAve);
                                                              fFicAve.SETTABLEVIEW(rInc);
                                                              fFicAve.RUN;
                                                              CLEAR(fFicAve);
                                                            END;
                                                             }
                                                   { ID=1103350002;
                                                     ShortCutKey=F9;
                                                     CaptionML=ESP=Revisiones Pendientes;
                                                     OnPush=BEGIN
                                                              // Propone los vehiculos con revisiones pendientes
                                                              ProponerRevisiones;
                                                            END;
                                                             }
                                                   { ID=1100244029;
                                                     ShortCutKey=F11;
                                                     CaptionML=ESP=Asignar;
                                                     OnPush=BEGIN
                                                              Asignar;
                                                            END;
                                                             }
                                                   { ID=1103350009;
                                                     MenuItemType=Separator;
                                                     CaptionML=ESP=- }
                                                   { ID=1103350010;
                                                     ShortCutKey=Ctrl+E;
                                                     CaptionML=ESP=Ficha Vehiculo;
                                                     OnPush=BEGIN
                                                              CLEAR(rVeh);
                                                              rVeh.GET(Matricula);
                                                              rVeh.FILTERGROUP(2);
                                                              rVeh.SETRECFILTER;
                                                              rVeh.FILTERGROUP(0);
                                                              FORM.RUN(7010372,rVeh)
                                                            END;
                                                             }
                                                   { ID=1103350011;
                                                     MenuItemType=Separator;
                                                     CaptionML=ESP=- }
                                                   { ID=1103350012;
                                                     PushAction=RunObject;
                                                     ShortCutKey=Ctrl+I;
                                                     CaptionML=ESP=Revisiones pendientes - Kms;
                                                     RunObject=Report 7010362 }
                                                   { ID=1100253000;
                                                     PushAction=RunObject;
                                                     CaptionML=ESP=Revisiones pendientes - Meses;
                                                     RunObject=Report 7010365 }
                                                 }
                                                  }
    { 1100244031;TabControl;220;220 ;20130;1980 ;HorzGlue=Both }
    { 1100244022;TextBox;8470 ;1540 ;3850 ;440  ;Focusable=No;
                                                 ParentControl=1100244031;
                                                 InPage=0;
                                                 SourceExpr=NombreIncid(wIncidencia) }
    { 1100244023;TextBox;5610 ;1540 ;2750 ;440  ;ParentControl=1100244031;
                                                 InPage=0;
                                                 CaptionML=ESP=Codigo Revision;
                                                 NextControl=1100244001;
                                                 SourceExpr=wIncidencia;
                                                 TableRelation="Vehiculo - Tipo incidencia" WHERE (Tipo=CONST(Revision));
                                                 OnDeactivate=BEGIN
                                                                CurrForm.UPDATE;
                                                              END;

                                                 OnValidate=VAR
                                                              lrTip@1103350001 : Record 7035343;
                                                            BEGIN
                                                              CLEAR(lrTip);
                                                              IF wIncidencia <> '' THEN BEGIN
                                                                lrTip.GET(wIncidencia);
                                                                IF lrTip.Tipo <> lrTip.Tipo::Revision THEN
                                                                  ERROR(Text011,lrTip.Tipo::Revision);
                                                              END;
                                                              Actualiza;
                                                            END;
                                                             }
    { 1100244024;Label  ;440  ;1540 ;5060 ;440  ;ParentControl=1100244023 }
    { 1100244021;TextBox;8470 ;990  ;3850 ;440  ;Focusable=No;
                                                 ParentControl=1100244031;
                                                 InPage=0;
                                                 SourceExpr=NombreGaraje(wGaraje) }
    { 1100244019;TextBox;5610 ;990  ;2750 ;440  ;ParentControl=1100244031;
                                                 InPage=0;
                                                 CaptionML=ESP=Garaje;
                                                 SourceExpr=wGaraje;
                                                 TableRelation=Garaje;
                                                 OnDeactivate=BEGIN
                                                                CurrForm.UPDATE;
                                                              END;

                                                 OnValidate=BEGIN
                                                              Actualiza;
                                                            END;
                                                             }
    { 1100244020;Label  ;3960 ;990  ;1540 ;440  ;ParentControl=1100244019 }
    { 1100244017;TextBox;1980 ;990  ;1700 ;440  ;Name=Fecha1;
                                                 ParentControl=1100244031;
                                                 InPage=0;
                                                 CaptionML=ESP=Fecha;
                                                 NextControl=1100244019;
                                                 SourceExpr=wFecha;
                                                 OnDeactivate=BEGIN
                                                                CurrForm.UPDATE;
                                                              END;

                                                 OnValidate=BEGIN
                                                              Actualiza;
                                                            END;
                                                             }
    { 1100244018;Label  ;440  ;990  ;1430 ;440  ;ParentControl=1100244017 }
    { 1103350006;TextBox;12430;1540 ;1700 ;440  ;ParentControl=1100244031;
                                                 InPage=0;
                                                 DecimalPlaces=0:2;
                                                 SourceExpr=GetKmsControl(wIncidencia,wTextoControl) }
    { 1103350013;TextBox;14300;1540 ;3300 ;440  ;Focusable=No;
                                                 ParentControl=1100244031;
                                                 InPage=0;
                                                 BackTransparent=Yes;
                                                 Border=No;
                                                 SourceExpr=wTextoControl }
  }
  CODE
  {
    VAR
      Text50000@1103355000 : TextConst 'ESP=+%1M';
      Text50001@1103355001 : TextConst 'ESP=+%1D';
      wFecha@1100244000 : Date;
      wGaraje@1100244001 : Code[10];
      wIncidencia@1100244002 : Code[10];
      rVeh@1100244003 : Record 7010346;
      rSel@1100244004 : Record 7010352;
      rPar@1100244005 : Record 7010311;
      Text001@1100244006 : TextConst 'ESP=¨Desea realmente asingar como revisados %1 a todos los vehiculos marcados?';
      Text002@1100244007 : TextConst 'ESP=Debe seleccionar una fecha';
      Text003@1100244008 : TextConst 'ESP=Debe seleccionar un Garaje';
      Text004@1100244009 : TextConst 'ESP=Debe seleccionar un Codigo de Revision';
      Text005@1100244010 : TextConst 'ESP=No hay ning£n vehiculo seleccionado';
      rInc@1100244011 : Record 7010348;
      Text006@1100244012 : TextConst 'ESP=Proceso Terminado';
      Text007@1100244013 : TextConst 'ESP=No se encuentra ninguna incidencia\ %1';
      rRevVeh@1103350007 : Record 7010395;
      rTipoInc@1103350008 : Record 7035343;
      wNumero@1100244014 : Code[10];
      Text008@1100244015 : TextConst 'ESP=No se encuentra Vehiculo \%1';
      wOrden@1100244016 : Integer;
      Text009@1103350000 : TextConst 'ESP=El vehiculo %1 No es propio';
      Text010@1103350001 : TextConst 'ESP=No se encontr¢ ning£n caso';
      Text011@1103350002 : TextConst 'ESP=La incidencia debe ser del tipo %1';
      Text012@1103350003 : TextConst 'ESP=El vehiculo %1 ha sido vendido';
      ventana@1103350004 : Dialog;
      Text013@1103350005 : TextConst 'ESP=Los kilometros indicados son menores a los kms de la £ltima revisi¢n';
      Text014@1103350006 : TextConst 'ESP=Han quedado lineas sin asignarse.\¨Quiere salir de todos modos?';
      Text015@1103350009 : TextConst 'ESP=Kms. Control';
      Text016@1103350010 : TextConst 'ESP=Meses Control';
      Text017@1103350011 : TextConst 'ESP=No se ha indicado ning£n parametro de Control para la Revisi¢n %1';
      wTextoControl@1103350012 : Text[30];
      Text018@1103350013 : TextConst 'ESP=Debe inidicar una fecha';
      Text019@1103350014 : TextConst 'ESP="El Vehiculo %1 No tiene asignada la incidencia %2 "';
      Text020@1103350015 : TextConst 'ESP=El Vehiculo %1 Est  Bloqueado';
      Text021@1103350016 : TextConst 'ESP=No se pueden introducir los dos parametros a la vez';

    PROCEDURE NombreGaraje@1100244000(pwCod@1100244001 : Code[10]) : Text[30];
    VAR
      lrGara@1100244000 : Record 7010310;
    BEGIN
      // NombreGaraje
      // Devuelve el nombre del Garaje pasado como parametro

      lrGara.RESET;
      IF lrGara.GET(pwCod) THEN
        EXIT(lrGara.Nombre)
      ELSE
        EXIT('');
    END;

    PROCEDURE NombreIncid@1100244001(pwCod@1100244001 : Code[10]) : Text[30];
    VAR
      lrInc@1100244000 : Record 7035343;
    BEGIN
      // NombreIncid
      // Devuelve la descripcion del tipo de incidencia pasado como parametro

      lrInc.RESET;
      IF lrInc.GET(pwCod) THEN
        EXIT(lrInc.Descripcion)
      ELSE
        EXIT('');
    END;

    PROCEDURE GetVehiculos@1100244002(VAR prVeh@1100244000 : Record 7010346);
    BEGIN
      // GetVehiculos

      Matricula          := prVeh.Matricula;
      Numero             := prVeh.Numero;
      Garaje             := prVeh.Garaje;
      Plazas             := prVeh.Plazas;
      "Tipo Vehiculo"    := prVeh."Tipo vehiculo";
      "Vehiculo propio"  := prVeh."Vehiculo propio";
      Bloqueado          := prVeh.Bloqueado;
      CLEAR(Kilometros);
      CLEAR("Kms. Contador");
    END;

    PROCEDURE Asignar@1100244003();
    BEGIN
      // Asignar

      CLEAR(rRevVeh);

      IF wFecha = 0D THEN
        ERROR(Text002);

      IF wIncidencia = '' THEN
        ERROR(Text004);

      rSel.RESET;
      rSel.COPY(Rec);
      rSel.SETRANGE(Seleccion, FALSE);
      IF NOT rSel.FINDFIRST THEN
        ERROR(Text005);

      IF NOT CONFIRM(Text001, FALSE, wIncidencia) THEN
        EXIT;

      IF rSel.FINDSET(TRUE) THEN BEGIN
        rInc.RESET;
        REPEAT
          IF NOT rRevVeh.GET(rSel.Matricula, wIncidencia) THEN // No deja insertar la incidencia si el vehiculo no la tiene asignada
            ERROR(Text019, rSel.Numero, wIncidencia);

          IF rSel.Matricula <> '' THEN BEGIN
            CLEAR(rInc);
            rInc.VALIDATE(Matricula         , rSel.Matricula);
            rInc.VALIDATE("Fecha Incidencia", wFecha);
            rInc.VALIDATE("Tipo Incidencia" , wIncidencia);
            rInc.VALIDATE(Kilometros        , rSel.Kilometros);
            rInc.INSERT(TRUE);

            rSel.Seleccion:= TRUE;
            rSel."Kms.Ultima Revision" := rInc.Kilometros;
            rSel."Ultima Fecha Revision" := rInc."Fecha Incidencia";
            rSel.MODIFY;
          END;
        UNTIL rSel.NEXT=0;
      END;

      MESSAGE(Text006);
      CurrForm.Fecha1.ACTIVATE;
    END;

    PROCEDURE TieneIncidencias@1100244004() : Boolean;
    VAR
      lwTiene@1100244000 : Boolean;
    BEGIN
      // TieneIncidencias
      // Retorna si un vehivulo tiene incidencias para un dia concreto

      CLEAR(lwTiene);
      IF (Matricula<>'') THEN BEGIN
        rInc.RESET;
        rInc.INIT;
        rInc.SETCURRENTKEY(Matricula,"Fecha Incidencia",Garaje);
        rInc.SETRANGE(Matricula,Matricula);
        IF wFecha <> 0D THEN
          rInc.SETRANGE("Fecha Incidencia",wFecha);
        lwTiene:= rInc.FINDFIRST;
      END;
      EXIT(lwTiene);
    END;

    PROCEDURE Actualiza@1100244006();
    VAR
      rSel2@1100244000 : Record 7010352;
    BEGIN
      // Actualiza
      rPar.GET;

      // Borra todas las que no se han introducido manualmente
      rSel.RESET;
      rSel.SETRANGE(Usuario   , USERID);
      rSel.SETRANGE(Seleccion , TRUE);
      IF rSel.FINDFIRST THEN
        rSel.DELETEALL;

      // Borra todos los que nos sean de este garaje
      rSel.RESET;
      rSel.SETRANGE(Usuario   , USERID);
      IF (wGaraje <> rPar."Todos los garajes") AND (wGaraje<>'')THEN BEGIN
        rVeh.SETFILTER(Garaje,'<>%1',wGaraje);
        IF rSel.FINDFIRST THEN
          rSel.DELETEALL;
      END;


      IF (wFecha<>0D) AND (wIncidencia <> '') THEN BEGIN
        rInc.RESET;
        rInc.INIT;
        rInc.SETCURRENTKEY(Matricula,"Fecha Incidencia",Garaje);
        rInc.SETRANGE("Fecha Incidencia", wFecha);
        rInc.SETRANGE("Tipo Incidencia" , wIncidencia);
        IF rInc.FINDSET THEN BEGIN
          REPEAT
            CLEAR(rSel);
            rSel.SETRANGE(Usuario   , USERID);
            rSel.SETRANGE(Matricula , rInc.Matricula);
            IF NOT rSel.FINDSET(TRUE) THEN BEGIN
              rVeh.RESET;
                IF (wGaraje <> rPar."Todos los garajes") AND (wGaraje<>'')THEN
                  rVeh.SETRANGE(Garaje, wGaraje);
                rVeh.SETRANGE(Matricula,rInc.Matricula);
                IF rVeh.FINDFIRST THEN BEGIN
                  rSel.INIT;
                  rSel.Usuario           := USERID;
                  rSel.Matricula         := rVeh.Matricula;
                  rSel.Numero            := rVeh.Numero;
                  rSel.Garaje            := rVeh.Garaje;
                  rSel.Plazas            := rVeh.Plazas;
                  rSel."Tipo Vehiculo"   := rVeh."Tipo vehiculo";
                  rSel."Vehiculo propio" := rVeh."Vehiculo propio";
                  rSel.Bloqueado         := rVeh.Bloqueado;
                  rSel.Seleccion         := TRUE;
                  BuscaKmsRealizados2(rVeh.Numero,rSel.Kilometros,rSel."Kms. Contador");
                  rSel."Kms.Ultima Revision"   := BuscaUltimaRevision(rVeh.Matricula,wIncidencia);
                  rSel."Ultima Fecha Revision" := BuscaFechaUltimaRevision(rVeh.Matricula,wIncidencia);
                  wOrden +=1;
                  rSel.Orden             := wOrden;
                  rSel.INSERT;
                END;
            END
            ELSE BEGIN
              IF NOT rSel.Seleccion THEN BEGIN
                rSel.Seleccion             := TRUE;
                rSel.MODIFY;
              END;
            END;
          UNTIL  rInc.NEXT=0;
        END;
      END;
    END;

    PROCEDURE ValidaNumero@1103350000();
    BEGIN
      // ValidaNumero
      IF  Numero <> xRec.Numero THEN BEGIN
        rPar.GET;
        rVeh.RESET;
        rVeh.SETCURRENTKEY(Numero);
        IF (wGaraje <> rPar."Todos los garajes") AND (wGaraje<>'')THEN
          rVeh.SETRANGE(Garaje, wGaraje);
        rVeh.SETRANGE(Numero,Numero);
        IF rVeh.FINDFIRST THEN BEGIN
          IF NOT rVeh."Vehiculo propio" THEN
            ERROR(Text009,Numero);
          IF rVeh."Fecha venta" <> 0D THEN
            ERROR(Text012,Numero);
          { JPT 07/10/04  a petici¢n de Jordi dejamos incluir vehiculos bloqueados
          IF rVeh.Bloqueado THEN
            ERROR(Text020,Numero);
          }
          // Si existe el registro lo borra para evitar rename
          IF FIND THEN
            DELETE;
          Matricula         :='';
          INIT;
          Usuario           := USERID;
          Matricula         := rVeh.Matricula;
          Numero            := rVeh.Numero;
          Garaje            := rVeh.Garaje;
          Plazas            := rVeh.Plazas;
          "Tipo Vehiculo"   := rVeh."Tipo vehiculo";
          "Vehiculo propio" := rVeh."Vehiculo propio";
          Bloqueado         := rVeh.Bloqueado;
          wOrden +=1;
          Orden             := wOrden;
          BuscaKmsRealizados2(Numero,Kilometros,"Kms. Contador");
          "Kms.Ultima Revision"   := BuscaUltimaRevision(rVeh.Matricula,wIncidencia);
          "Ultima Fecha Revision" := BuscaFechaUltimaRevision(rVeh.Matricula,wIncidencia);
          //INSERT;
        END
        ELSE
          ERROR (Text008,rVeh.GETFILTERS);
      END;
    END;

    PROCEDURE BuscaKmsRealizados@1103350001(pwNVehiculo@1103350002 : Code[10]) : Decimal;
    VAR
      lrReg@1103350000 : Record 7035342;
      lwKm@1103350001 : Decimal;
    BEGIN
      // BuscaKmsRealizados

      CLEAR(lwKm);
      CLEAR(lrReg);
      lrReg.SETCURRENTKEY(Vehiculo,Dia,"Hora repostaje",Anulado,"Kilometros Reales");

      // Orden inverso para pillar el £ltimo
      lrReg.ASCENDING(FALSE);

      lrReg.SETRANGE(Vehiculo , pwNVehiculo);
      lrReg.SETRANGE(Anulado  , FALSE);
      lrReg.SETFILTER("Kilometros Reales",'<>%1',0);

      IF lrReg.FINDFIRST THEN
        lwKm := lrReg."Kilometros Reales";
      EXIT(lwKm);
    END;

    PROCEDURE BuscaKmsRealizados2@1103350004(pwNVehiculo@1103350002 : Code[10];VAR pwKmsReales@1103350003 : Decimal;VAR pwKmsContador@1103350004 : Decimal) : Boolean;
    VAR
      lrReg@1103350000 : Record 7035342;
      lwOk@1103350001 : Boolean;
    BEGIN
      // BuscaKmsRealizados2
      // Es igual al anterio pero devuelve Kms reales y Kms Contador


      CLEAR(lrReg);
      CLEAR(pwKmsReales);
      CLEAR(pwKmsContador);
      lrReg.SETCURRENTKEY(Vehiculo,Dia,"Hora repostaje",Anulado,"Kilometros Reales");

      // Orden inverso para pillar el £ltimo
      lrReg.ASCENDING(FALSE);

      lrReg.SETRANGE(Vehiculo , pwNVehiculo);
      lrReg.SETRANGE(Anulado  , FALSE);
      lrReg.SETFILTER("Kilometros Reales",'<>%1',0);

      lwOk := lrReg.FINDFIRST;

      IF lwOk THEN BEGIN
        pwKmsReales   := lrReg."Kilometros Reales";
        pwKmsContador := lrReg.Kms;
      END;

      EXIT(lwOk);
    END;

    PROCEDURE ConvierteKms@1103350014(pwNVehiculo@1103350002 : Code[10];VAR pwKmsReales@1103350003 : Decimal;VAR pwKmsContador@1103350004 : Decimal) : Boolean;
    VAR
      lrReg@1103350000 : Record 7035342;
      lwOk@1103350001 : Boolean;
    BEGIN
      // ConvierteKms
      // Convierte los Kms Reales en Kms Contador y viceversa.
      // No es posible introducir los dos parametros a la vez

      IF (pwKmsReales <>0) AND  (pwKmsContador <>0) THEN
        ERROR(Text021);

      CLEAR(lrReg);
      lrReg.SETCURRENTKEY(Vehiculo,Dia,"Hora repostaje",Anulado,"Kilometros Reales");

      // Orden inverso para pillar el £ltimo
      lrReg.ASCENDING(FALSE);

      lrReg.SETRANGE(Vehiculo , pwNVehiculo);
      lrReg.SETRANGE(Anulado  , FALSE);
      lrReg.SETFILTER("Kilometros Reales",'<>%1',0);

      lwOk := lrReg.FINDFIRST;

      IF lwOk THEN BEGIN
        IF pwKmsReales <> 0 THEN BEGIN
          IF lrReg."Kilometros Reales" <> 0 THEN
            pwKmsContador:= pwKmsReales - (lrReg."Kilometros Reales" - lrReg.Kms)
          ELSE
            pwKmsContador:= pwKmsReales;
        END
        ELSE
          IF pwKmsContador <> 0 THEN BEGIN
            IF lrReg."Kilometros Reales" <> 0 THEN
              pwKmsReales := (lrReg."Kilometros Reales" - lrReg.Kms) + pwKmsContador
          ELSE
            pwKmsReales:= pwKmsContador;
          END;
      END;

      IF pwKmsReales =0 THEN
         pwKmsReales:= pwKmsContador
      ELSE
        IF pwKmsContador =0 THEN
          pwKmsContador := pwKmsReales;

      EXIT(lwOk);
    END;

    PROCEDURE ProponerRevisiones@1103350002();
    VAR
      lrSel@1103350000 : Record 7010352;
      lrTipInc@1103350001 : Record 7035343;
      lwKm@1103350002 : ARRAY [3] OF Decimal;
      lwEnc@1103350003 : Boolean;
      lwCont@1103350004 : Integer;
      lwTotal@1103350005 : Integer;
      lwOk@1103350006 : Boolean;
      lwTipoRev@1103350007 : 'Kms,Meses';
      lwFecha@1103350008 : ARRAY [2] OF Date;
    BEGIN
      // ProponerRevisiones

      // Propone los vehiculos con revisiones pendientes
      IF wIncidencia='' THEN
        ERROR(Text004);

      IF wFecha = 0D THEN
        ERROR(Text018);

      rPar.GET;

      CLEAR(lwEnc);
      CLEAR(lrTipInc);
      lrTipInc.GET(wIncidencia);
      IF lrTipInc."Kilometros Control" <> 0 THEN BEGIN
        lwTipoRev:= lwTipoRev::Kms;
      END
      ELSE
        IF lrTipInc."Meses Control" <> 0 THEN BEGIN
          lwTipoRev:= lwTipoRev::Meses;
        END
        ELSE
          ERROR(Text017,wIncidencia);


      CLEAR(rVeh);
      rVeh.SETRANGE("Vehiculo propio",TRUE);
      rVeh.SETFILTER("Fecha venta",'=%1',0D);
      IF (wGaraje <> rPar."Todos los garajes") AND (wGaraje<>'')THEN
        rVeh.SETFILTER(Garaje,'%1',wGaraje);
      // JPT 07/10/04 A peticion Jordi dejamos incluir vehiculos bloqueados
      // rVeh.SETRANGE(Bloqueado, FALSE);
      IF rVeh.FINDSET THEN BEGIN
        ventana.OPEN('@1@@@@@@@@@@');
        CLEAR(lwCont);
        lwTotal := rVeh.COUNT;
        REPEAT
          IF NOT lrSel.GET(USERID,rVeh.Matricula) THEN BEGIN // Si no esta ya
            lwOk := rRevVeh.GET(rVeh.Matricula,wIncidencia);
            IF lwOk THEN BEGIN
              CASE lwTipoRev OF
                lwTipoRev::Kms :BEGIN
                  CLEAR(lwKm);
                  BuscaKmsRealizados2(rVeh.Numero,lwKm[1],lwKm[3]);
                  lwKm[2] := BuscaUltimaRevision(rVeh.Matricula,wIncidencia);
                  lwOk := lwOk AND (lwKm[1] >= lwKm[2] + lrTipInc."Kilometros Control");
                END;
                lwTipoRev::Meses : BEGIN
                  CLEAR(lwFecha);
                  lwFecha[1] := BuscaFechaUltimaRevision(rVeh.Matricula,wIncidencia);
                  IF lwFecha[1] = 0D THEN BEGIN // Si no tiene revisiones calculamos a partir de la fecha de incio actividad
                    rVeh.TESTFIELD("Fecha inicio actividad");
                    lwFecha[1]:= rVeh."Fecha inicio actividad";
                   END;
                  IF lwFecha[1] <> 0D THEN
                    lwFecha[2] := CALCDATE(STRSUBSTNO(Text50000,lrTipInc."Meses Control"),lwFecha[1]);
                  lwOk := lwOk AND (lwFecha[2] <= wFecha);
                END;
              END;
            END;

            IF lwOk THEN BEGIN
              CLEAR(lrSel);
              lrSel.Usuario           := USERID;
              lrSel.Matricula         := rVeh.Matricula;
              lrSel.Numero            := rVeh.Numero;
              lrSel.Garaje            := rVeh.Garaje;
              lrSel.Plazas            := rVeh.Plazas;
              lrSel."Tipo Vehiculo"   := rVeh."Tipo vehiculo";
              lrSel."Vehiculo propio" := rVeh."Vehiculo propio";
              lrSel.Bloqueado         := rVeh.Bloqueado;
              wOrden +=1;
              lrSel.Orden             := wOrden;
              lrSel.Kilometros        := lwKm[1];
              lrSel."Kms. Contador"   := lwKm[3];
              lrSel."Kms.Ultima Revision" := BuscaUltimaRevision(rVeh.Matricula,wIncidencia);
              lrSel."Ultima Fecha Revision" := BuscaFechaUltimaRevision(rVeh.Matricula,wIncidencia);
              lrSel.INSERT;
              lwEnc:= TRUE;
            END;
          END;
          lwCont +=1;
          ventana.UPDATE(1,ROUND(lwCont/lwTotal*10000,1));
        UNTIL rVeh.NEXT=0;
        ventana.CLOSE;
      END;

      IF NOT lwEnc THEN
        MESSAGE(Text010);
    END;

    PROCEDURE BuscaUltimaRevision@1103350005(pwMatricula@1103350001 : Code[10];pwIncidencia@1103350002 : Code[10]) : Decimal;
    VAR
      lrInc@1103350000 : Record 7010348;
    BEGIN
      // BuscaUltimaRevision


      lrInc.SETCURRENTKEY(Matricula,"Fecha Incidencia",Garaje);
      // Orden inverso para pillar el £ltimo
      lrInc.ASCENDING(FALSE);

      lrInc.SETRANGE(Matricula          , pwMatricula);
      lrInc.SETRANGE("Tipo Incidencia"  , pwIncidencia);
      // lrInc.SETRANGE(Tipo               , lrInc.Tipo::Revision);
      IF NOT lrInc.FINDFIRST THEN
        CLEAR(lrInc);

      EXIT(lrInc.Kilometros);
    END;

    PROCEDURE BuscaFechaUltimaRevision@1103350012(pwMatricula@1103350001 : Code[10];pwIncidencia@1103350002 : Code[10]) : Date;
    VAR
      lrInc@1103350000 : Record 7010348;
    BEGIN
      // BuscaFechaUltimaRevision

      lrInc.SETCURRENTKEY(Matricula,"Fecha Incidencia",Garaje);
      // Orden inverso para pillar el £ltimo
      lrInc.ASCENDING(FALSE);

      lrInc.SETRANGE(Matricula          , pwMatricula);
      lrInc.SETRANGE("Tipo Incidencia"  , pwIncidencia);
      // lrInc.SETRANGE(Tipo               , lrInc.Tipo::Revision);
      IF NOT lrInc.FINDFIRST THEN
        CLEAR(lrInc);

      EXIT(lrInc."Fecha Incidencia");
    END;

    PROCEDURE GetKmsControl@1103350006(pwCodigo@1103350000 : Code[10];VAR pwText@1103350002 : Text[30]) : Decimal;
    VAR
      lrTip@1103350001 : Record 7035343;
      lwDato@1103350003 : Decimal;
    BEGIN
      // GetKmsControl
      // Devuelve cada cuando debe de hacerse la revision
      // Tambin devuelve el Texto de control

      CLEAR(lrTip);

      CLEAR(pwText);
      IF lrTip.GET(wIncidencia) THEN BEGIN
        IF lrTip."Kilometros Control" <> 0 THEN BEGIN
          pwText := Text015;
          lwDato := lrTip."Kilometros Control";
        END
        ELSE
          IF lrTip."Meses Control" <> 0 THEN BEGIN
            pwText := Text016;
            lwDato := lrTip."Meses Control";
          END
          ELSE
            ERROR(Text017,wIncidencia);
      END;

      EXIT(lwDato);
    END;

    PROCEDURE MesesDif@1103350003() : Integer;
    VAR
      lwFecha@1103350000 : ARRAY [2] OF Date;
      lwMeses@1103350001 : Integer;
      lwDias@1103350002 : Integer;
    BEGIN
      // MesesDif
      // Devuelve los meses que han pasado desde la ultima revision

      CLEAR(lwFecha);
      lwFecha[1]:= "Ultima Fecha Revision";
      CLEAR(lwMeses);

      IF lwFecha[1] <> 0D THEN BEGIN
        lwDias :=  wFecha-lwFecha[1];
        IF lwDias = 0 THEN BEGIN
          lwFecha[2] := CALCDATE(STRSUBSTNO(Text50001, wFecha-lwFecha[1]),01010000D);
          lwMeses := (DATE2DMY(lwFecha[2],3) * 12) + DATE2DMY(lwFecha[2],2) -1;
        END;
      END;

      EXIT(lwMeses);
    END;

    BEGIN
    END.
  }
}
