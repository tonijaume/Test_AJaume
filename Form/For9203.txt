OBJECT Form 9203 Budget Matrix
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=NAVW16.00.01,NAVES6.00.01;
  }
  PROPERTIES
  {
    Width=20350;
    Height=5500;
    CaptionML=ENU=Budget Matrix;
    InsertAllowed=No;
    DeleteAllowed=No;
    LinksAllowed=No;
    SourceTable=Table367;
    DataCaptionExpr=BudgetName;
    OnOpenForm=VAR
                 GLAcc@1044 : Record 15;
               BEGIN
                 GLAccBudgetBuf.SETPERMISSIONFILTER;

                 IF GLAccBudgetBuf.GETFILTER("Global Dimension 1 Filter") <> '' THEN
                   GlobalDim1Filter := GLAccBudgetBuf.GETFILTER("Global Dimension 1 Filter");
                 IF GLAccBudgetBuf.GETFILTER("Global Dimension 2 Filter") <> '' THEN
                   GlobalDim2Filter := GLAccBudgetBuf.GETFILTER("Global Dimension 2 Filter");

                 GLSetup.GET;
               END;

    OnFindRecord=BEGIN
                   EXIT(FindRec(LineDimOption,Rec,Which));
                 END;

    OnNextRecord=BEGIN
                   EXIT(NextRec(LineDimOption,Rec,Steps));
                 END;

    OnAfterGetRecord=VAR
                       MATRIX_CurrentColumnOrdinal@1045 : Integer;
                     BEGIN
                       FOR MATRIX_CurrentColumnOrdinal := 1 TO MATRIX_CurrentNoOfMatrixColumn DO
                         MATRIX_OnAfterGetRecord(MATRIX_CurrentColumnOrdinal);
                       Amount := ToRoundedValue(CalcAmount(FALSE));
                     END;

  }
  CONTROLS
  {
    { 1   ;TableBox     ;0    ;0    ;20350;4840 ;HorzGlue=Both;
                                                 VertGlue=Both }
    { 20  ;TextBox      ;3493 ;3080 ;2420 ;440  ;Editable=No;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 SourceExpr=Code;
                                                 OnLookup=BEGIN
                                                            LookUpCode(LineDimOption,LineDimCode,Code);
                                                          END;
                                                           }
    { 1046;Label        ;0    ;0    ;0    ;0    ;ParentControl=20;
                                                 InColumnHeading=Yes }
    { 22  ;TextBox      ;3493 ;3080 ;2420 ;440  ;Editable=No;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 SourceExpr=Name;
                                                 OnFormat=BEGIN
                                                                                                                 CurrForm.Name.UPDATEFONTBOLD("Show in Bold");
                                                                                                                 CurrForm.Name.UPDATEINDENT(220 * Indentation);
                                                          END;
                                                           }
    { 1047;Label        ;0    ;0    ;0    ;0    ;ParentControl=22;
                                                 InColumnHeading=Yes }
    { 24  ;TextBox      ;3493 ;3080 ;2420 ;440  ;Name=TotalBudgetedAmount;
                                                 Editable=No;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 CaptionML=ENU=Budgeted Amount;
                                                 BlankZero=Yes;
                                                 SourceExpr=Amount;
                                                 OnDrillDown=BEGIN
                                                               SetCommonFilters(GLAccBudgetBuf);
                                                               SetDimFilters(GLAccBudgetBuf,0);
                                                               BudgetDrillDown;
                                                             END;
                                                              }
    { 1048;Label        ;0    ;0    ;0    ;0    ;ParentControl=24;
                                                 InColumnHeading=Yes }
    { 1012;TextBox      ;3493 ;3080 ;2420 ;440  ;Name=Field1;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 BlankZero=Yes;
                                                 SourceExpr=MATRIX_CellData[1];
                                                 CaptionClass='3,' + MATRIX_CaptionSet[1];
                                                 OnValidate=BEGIN
                                                              UpdateAmount(1);
                                                            END;

                                                 OnDrillDown=BEGIN
                                                               MATRIX_OnDrillDown(1);
                                                             END;
                                                              }
    { 1049;Label        ;0    ;0    ;0    ;0    ;ParentControl=1012;
                                                 InColumnHeading=Yes }
    { 1013;TextBox      ;3493 ;3080 ;2420 ;440  ;Name=Field2;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 BlankZero=Yes;
                                                 SourceExpr=MATRIX_CellData[2];
                                                 CaptionClass='3,' + MATRIX_CaptionSet[2];
                                                 OnValidate=BEGIN
                                                              UpdateAmount(2);
                                                            END;

                                                 OnDrillDown=BEGIN
                                                               MATRIX_OnDrillDown(2);
                                                             END;
                                                              }
    { 1050;Label        ;0    ;0    ;0    ;0    ;ParentControl=1013;
                                                 InColumnHeading=Yes }
    { 1014;TextBox      ;3493 ;3080 ;2420 ;440  ;Name=Field3;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 BlankZero=Yes;
                                                 SourceExpr=MATRIX_CellData[3];
                                                 CaptionClass='3,' + MATRIX_CaptionSet[3];
                                                 OnValidate=BEGIN
                                                              UpdateAmount(3);
                                                            END;

                                                 OnDrillDown=BEGIN
                                                               MATRIX_OnDrillDown(3);
                                                             END;
                                                              }
    { 1051;Label        ;0    ;0    ;0    ;0    ;ParentControl=1014;
                                                 InColumnHeading=Yes }
    { 1015;TextBox      ;3493 ;3080 ;2420 ;440  ;Name=Field4;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 BlankZero=Yes;
                                                 SourceExpr=MATRIX_CellData[4];
                                                 CaptionClass='3,' + MATRIX_CaptionSet[4];
                                                 OnValidate=BEGIN
                                                              UpdateAmount(4);
                                                            END;

                                                 OnDrillDown=BEGIN
                                                               MATRIX_OnDrillDown(4);
                                                             END;
                                                              }
    { 1052;Label        ;0    ;0    ;0    ;0    ;ParentControl=1015;
                                                 InColumnHeading=Yes }
    { 1016;TextBox      ;3493 ;3080 ;2420 ;440  ;Name=Field5;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 BlankZero=Yes;
                                                 SourceExpr=MATRIX_CellData[5];
                                                 CaptionClass='3,' + MATRIX_CaptionSet[5];
                                                 OnValidate=BEGIN
                                                              UpdateAmount(5);
                                                            END;

                                                 OnDrillDown=BEGIN
                                                               MATRIX_OnDrillDown(5);
                                                             END;
                                                              }
    { 1053;Label        ;0    ;0    ;0    ;0    ;ParentControl=1016;
                                                 InColumnHeading=Yes }
    { 1017;TextBox      ;3493 ;3080 ;2420 ;440  ;Name=Field6;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 BlankZero=Yes;
                                                 SourceExpr=MATRIX_CellData[6];
                                                 CaptionClass='3,' + MATRIX_CaptionSet[6];
                                                 OnValidate=BEGIN
                                                              UpdateAmount(6);
                                                            END;

                                                 OnDrillDown=BEGIN
                                                               MATRIX_OnDrillDown(6);
                                                             END;
                                                              }
    { 1054;Label        ;0    ;0    ;0    ;0    ;ParentControl=1017;
                                                 InColumnHeading=Yes }
    { 1018;TextBox      ;3493 ;3080 ;2420 ;440  ;Name=Field7;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 BlankZero=Yes;
                                                 SourceExpr=MATRIX_CellData[7];
                                                 CaptionClass='3,' + MATRIX_CaptionSet[7];
                                                 OnValidate=BEGIN
                                                              UpdateAmount(7);
                                                            END;

                                                 OnDrillDown=BEGIN
                                                               MATRIX_OnDrillDown(7);
                                                             END;
                                                              }
    { 1055;Label        ;0    ;0    ;0    ;0    ;ParentControl=1018;
                                                 InColumnHeading=Yes }
    { 1019;TextBox      ;3493 ;3080 ;2420 ;440  ;Name=Field8;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 BlankZero=Yes;
                                                 SourceExpr=MATRIX_CellData[8];
                                                 CaptionClass='3,' + MATRIX_CaptionSet[8];
                                                 OnValidate=BEGIN
                                                              UpdateAmount(8);
                                                            END;

                                                 OnDrillDown=BEGIN
                                                                MATRIX_OnDrillDown(8);
                                                             END;
                                                              }
    { 1056;Label        ;0    ;0    ;0    ;0    ;ParentControl=1019;
                                                 InColumnHeading=Yes }
    { 1020;TextBox      ;3493 ;3080 ;2420 ;440  ;Name=Field9;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 BlankZero=Yes;
                                                 SourceExpr=MATRIX_CellData[9];
                                                 CaptionClass='3,' + MATRIX_CaptionSet[9];
                                                 OnValidate=BEGIN
                                                              UpdateAmount(9);
                                                            END;

                                                 OnDrillDown=BEGIN
                                                                MATRIX_OnDrillDown(9);
                                                             END;
                                                              }
    { 1057;Label        ;0    ;0    ;0    ;0    ;ParentControl=1020;
                                                 InColumnHeading=Yes }
    { 1021;TextBox      ;3493 ;3080 ;2420 ;440  ;Name=Field10;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 BlankZero=Yes;
                                                 SourceExpr=MATRIX_CellData[10];
                                                 CaptionClass='3,' + MATRIX_CaptionSet[10];
                                                 OnValidate=BEGIN
                                                              UpdateAmount(10);
                                                            END;

                                                 OnDrillDown=BEGIN
                                                                MATRIX_OnDrillDown(10);
                                                             END;
                                                              }
    { 1058;Label        ;0    ;0    ;0    ;0    ;ParentControl=1021;
                                                 InColumnHeading=Yes }
    { 1022;TextBox      ;3493 ;3080 ;2420 ;440  ;Name=Field11;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 BlankZero=Yes;
                                                 SourceExpr=MATRIX_CellData[11];
                                                 CaptionClass='3,' + MATRIX_CaptionSet[11];
                                                 OnValidate=BEGIN
                                                              UpdateAmount(11);
                                                            END;

                                                 OnDrillDown=BEGIN
                                                               MATRIX_OnDrillDown(11);
                                                             END;
                                                              }
    { 1059;Label        ;0    ;0    ;0    ;0    ;ParentControl=1022;
                                                 InColumnHeading=Yes }
    { 1023;TextBox      ;3493 ;3080 ;2420 ;440  ;Name=Field12;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 BlankZero=Yes;
                                                 SourceExpr=MATRIX_CellData[12];
                                                 CaptionClass='3,' + MATRIX_CaptionSet[12];
                                                 OnValidate=BEGIN
                                                              UpdateAmount(12);
                                                            END;

                                                 OnDrillDown=BEGIN
                                                               MATRIX_OnDrillDown(12);
                                                             END;
                                                              }
    { 1060;Label        ;0    ;0    ;0    ;0    ;ParentControl=1023;
                                                 InColumnHeading=Yes }
    { 2   ;MenuButton   ;17600;4840 ;2200 ;550  ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 CaptionML=ENU=&Balance;
                                                 Menu=MENUITEMS
                                                 {
                                                   { ID=3;
                                                     CaptionML=ENU=G/L Account Balance/Bud&get;
                                                     OnPush=BEGIN
                                                              GLAccountBalanceBudget;
                                                            END;
                                                             }
                                                 }
                                                  }
  }
  CODE
  {
    VAR
      Text001@1082 : TextConst 'ENU=Period';
      Text002@1002 : TextConst 'ENU=You may only edit column 1 to %1.';
      GLSetup@1093 : Record 98;
      GLAccBudgetBuf@1094 : Record 374;
      GLBudgetName@1095 : Record 95;
      PrevGLBudgetName@1096 : Record 95;
      MatrixRecords@1001 : ARRAY [12] OF Record 367;
      MATRIX_MatrixRecord@1000 : Record 367;
      BudgetName@1097 : Code[10];
      LineDimOption@1098 : 'G/L Account,Period,Business Unit,Global Dimension 1,Global Dimension 2,Budget Dimension 1,Budget Dimension 2,Budget Dimension 3,Budget Dimension 4,,,,,Historic G/L Account';
      ColumnDimOption@1099 : 'G/L Account,Period,Business Unit,Global Dimension 1,Global Dimension 2,Budget Dimension 1,Budget Dimension 2,Budget Dimension 3,Budget Dimension 4,,,,,Historic G/L Account';
      LineDimCode@1100 : Text[30];
      PeriodType@1102 : 'Day,Week,Month,Quarter,Year,Accounting Period';
      RoundingFactor@1103 : 'None,1,1000,1000000';
      ShowColumnName@1104 : Boolean;
      DateFilter@1106 : Text[30];
      InternalDateFilter@1107 : Text[30];
      BusUnitFilter@1108 : Code[250];
      GLAccFilter@1109 : Code[250];
      HistoricGLAccFilter@1100000 : Code[250];
      GlobalDim1Filter@1110 : Code[250];
      GlobalDim2Filter@1111 : Code[250];
      BudgetDim1Filter@1112 : Code[250];
      BudgetDim2Filter@1113 : Code[250];
      BudgetDim3Filter@1114 : Code[250];
      BudgetDim4Filter@1115 : Code[250];
      MatrixHeader@1116 : Text[50];
      PeriodInitialized@1117 : Boolean;
      MATRIX_CurrentNoOfMatrixColumn@1124 : Integer;
      MATRIX_CellData@1125 : ARRAY [12] OF Decimal;
      MATRIX_CaptionSet@1126 : ARRAY [12] OF Text[80];

    LOCAL PROCEDURE DimCodeToOption@21(DimCode@1000 : Text[30]) : Integer;
    VAR
      BusUnit@1001 : Record 220;
      GLAcc@1002 : Record 15;
      HistoricGLAcc@1100000 : Record 10721;
    BEGIN
      CASE DimCode OF
        '' :
          EXIT(-1);
        GLAcc.TABLECAPTION :
          EXIT(0);
        Text001 :
          EXIT(1);
        BusUnit.TABLECAPTION :
          EXIT(2);
        GLSetup."Global Dimension 1 Code" :
          EXIT(3);
        GLSetup."Global Dimension 2 Code" :
          EXIT(4);
        GLBudgetName."Budget Dimension 1 Code" :
          EXIT(5);
        GLBudgetName."Budget Dimension 2 Code" :
          EXIT(6);
        GLBudgetName."Budget Dimension 3 Code" :
          EXIT(7);
        GLBudgetName."Budget Dimension 4 Code" :
          EXIT(8);
        HistoricGLAcc.TABLECAPTION :
          EXIT(13);
        ELSE
          EXIT(-1);
      END;
    END;

    LOCAL PROCEDURE FindRec@1130(DimOption@1000 : 'G/L Account,Period,Business Unit,Global Dimension 1,Global Dimension 2,Budget Dimension 1,Budget Dimension 2,Budget Dimension 3,Budget Dimension 4,,,,,Historic G/L Account';VAR DimCodeBuf@1001 : Record 367;Which@1002 : Text[250]) : Boolean;
    VAR
      GLAcc@1131 : Record 15;
      BusUnit@1132 : Record 220;
      Period@1133 : Record 2000000007;
      DimVal@1134 : Record 349;
      PeriodFormMgt@1135 : Codeunit 359;
      Found@1136 : Boolean;
      HistoricGLAcc@1100000 : Record 10721;
    BEGIN
      CASE DimOption OF
        DimOption::"G/L Account" :
          BEGIN
            GLAcc."No." := DimCodeBuf.Code;
            IF GLAccFilter <> '' THEN
              GLAcc.SETFILTER("No.",GLAccFilter);
            Found := GLAcc.FIND(Which);
            IF Found THEN
              CopyGLAccToBuf(GLAcc,DimCodeBuf);
          END;
        DimOption::Period :
          BEGIN
            IF NOT PeriodInitialized THEN
              DateFilter := '';
            PeriodInitialized := TRUE;
            Period."Period Start" := DimCodeBuf."Period Start";
            IF DateFilter <> '' THEN
              Period.SETFILTER("Period Start",DateFilter)
            ELSE
              IF NOT PeriodInitialized AND (InternalDateFilter <> '') THEN
                Period.SETFILTER("Period Start",InternalDateFilter);
            Found := PeriodFormMgt.FindDate(Which,Period,PeriodType);
            IF Found THEN
              CopyPeriodToBuf(Period,DimCodeBuf);
          END;
        DimOption::"Business Unit" :
          BEGIN
            BusUnit.Code := DimCodeBuf.Code;
            IF BusUnitFilter <> '' THEN
              BusUnit.SETFILTER(Code,BusUnitFilter);
            Found := BusUnit.FIND(Which);
            IF Found THEN
              CopyBusUnitToBuf(BusUnit,DimCodeBuf);
          END;
        DimOption::"Global Dimension 1" :
          BEGIN
            IF GlobalDim1Filter <> '' THEN
              DimVal.SETFILTER(Code,GlobalDim1Filter);
            DimVal."Dimension Code" := GLSetup."Global Dimension 1 Code";
            DimVal.SETRANGE("Dimension Code",DimVal."Dimension Code");
            DimVal.Code := DimCodeBuf.Code;
            Found := DimVal.FIND(Which);
            IF Found THEN
              CopyDimValToBuf(DimVal,DimCodeBuf);
          END;
        DimOption::"Global Dimension 2" :
          BEGIN
            IF GlobalDim2Filter <> '' THEN
              DimVal.SETFILTER(Code,GlobalDim2Filter);
            DimVal."Dimension Code" := GLSetup."Global Dimension 2 Code";
            DimVal.SETRANGE("Dimension Code",DimVal."Dimension Code");
            DimVal.Code := DimCodeBuf.Code;
            Found := DimVal.FIND(Which);
            IF Found THEN
              CopyDimValToBuf(DimVal,DimCodeBuf);
          END;
        DimOption::"Budget Dimension 1" :
          BEGIN
            IF BudgetDim1Filter <> '' THEN
              DimVal.SETFILTER(Code,BudgetDim1Filter);
            DimVal."Dimension Code" := GLBudgetName."Budget Dimension 1 Code";
            DimVal.SETRANGE("Dimension Code",DimVal."Dimension Code");
            DimVal.Code := DimCodeBuf.Code;
            Found := DimVal.FIND(Which);
            IF Found THEN
              CopyDimValToBuf(DimVal,DimCodeBuf);
          END;
        DimOption::"Budget Dimension 2" :
          BEGIN
            IF BudgetDim2Filter <> '' THEN
              DimVal.SETFILTER(Code,BudgetDim2Filter);
            DimVal."Dimension Code" := GLBudgetName."Budget Dimension 2 Code";
            DimVal.SETRANGE("Dimension Code",DimVal."Dimension Code");
            DimVal.Code := DimCodeBuf.Code;
            Found := DimVal.FIND(Which);
            IF Found THEN
              CopyDimValToBuf(DimVal,DimCodeBuf);
          END;
        DimOption::"Budget Dimension 3" :
          BEGIN
            IF BudgetDim3Filter <> '' THEN
              DimVal.SETFILTER(Code,BudgetDim3Filter);
            DimVal."Dimension Code" := GLBudgetName."Budget Dimension 3 Code";
            DimVal.SETRANGE("Dimension Code",DimVal."Dimension Code");
            DimVal.Code := DimCodeBuf.Code;
            Found := DimVal.FIND(Which);
            IF Found THEN
              CopyDimValToBuf(DimVal,DimCodeBuf);
          END;
            DimOption::"Budget Dimension 4" :
              BEGIN
                IF BudgetDim4Filter <> '' THEN
                  DimVal.SETFILTER(Code,BudgetDim4Filter);
                DimVal."Dimension Code" := GLBudgetName."Budget Dimension 4 Code";
                DimVal.SETRANGE("Dimension Code",DimVal."Dimension Code");
                DimVal.Code := DimCodeBuf.Code;
                Found := DimVal.FIND(Which);
                IF Found THEN
                  CopyDimValToBuf(DimVal,DimCodeBuf);
              END;
        DimOption::"Historic G/L Account" :
          BEGIN
            HistoricGLAcc."No." := DimCodeBuf.Code;
            IF HistoricGLAccFilter <> '' THEN
              HistoricGLAcc.SETFILTER("No.",HistoricGLAccFilter);
            Found := HistoricGLAcc.FIND(Which);
            IF Found THEN
              CopyHistoricGLAccToBuf(HistoricGLAcc,DimCodeBuf);
          END;
      END;
      EXIT(Found);
    END;

    LOCAL PROCEDURE NextRec@1137(DimOption@1000 : 'G/L Account,Period,Business Unit,Global Dimension 1,Global Dimension 2,Budget Dimension 1,Budget Dimension 2,Budget Dimension 3,Budget Dimension 4,,,,,Historic G/L Account';VAR DimCodeBuf@1001 : Record 367;Steps@1002 : Integer) : Integer;
    VAR
      GLAcc@1138 : Record 15;
      BusUnit@1139 : Record 220;
      Period@1140 : Record 2000000007;
      DimVal@1141 : Record 349;
      PeriodFormMgt@1142 : Codeunit 359;
      ResultSteps@1143 : Integer;
      HistoricGLAcc@1100000 : Record 10721;
    BEGIN
      CASE DimOption OF
        DimOption::"G/L Account" :
          BEGIN
            GLAcc."No." := DimCodeBuf.Code;
            IF GLAccFilter <> '' THEN
              GLAcc.SETFILTER("No.",GLAccFilter);
            ResultSteps := GLAcc.NEXT(Steps);
            IF ResultSteps <> 0 THEN
              CopyGLAccToBuf(GLAcc,DimCodeBuf);
          END;
        DimOption::Period :
          BEGIN
            IF DateFilter <> '' THEN
              Period.SETFILTER("Period Start",DateFilter);
            Period."Period Start" := DimCodeBuf."Period Start";
            ResultSteps := PeriodFormMgt.NextDate(Steps,Period,PeriodType);
            IF ResultSteps <> 0 THEN
              CopyPeriodToBuf(Period,DimCodeBuf);
          END;
        DimOption::"Business Unit" :
          BEGIN
            BusUnit.Code := DimCodeBuf.Code;
            IF BusUnitFilter <> '' THEN
              BusUnit.SETFILTER(Code,BusUnitFilter);
            ResultSteps := BusUnit.NEXT(Steps);
            IF ResultSteps <> 0 THEN
              CopyBusUnitToBuf(BusUnit,DimCodeBuf);
          END;
        DimOption::"Global Dimension 1" :
          BEGIN
            IF GlobalDim1Filter <> '' THEN
              DimVal.SETFILTER(Code,GlobalDim1Filter);
            DimVal."Dimension Code" := GLSetup."Global Dimension 1 Code";
            DimVal.SETRANGE("Dimension Code",DimVal."Dimension Code");
            DimVal.Code := DimCodeBuf.Code;
            ResultSteps := DimVal.NEXT(Steps);
            IF ResultSteps <> 0 THEN
              CopyDimValToBuf(DimVal,DimCodeBuf);
          END;
        DimOption::"Global Dimension 2" :
          BEGIN
            IF GlobalDim2Filter <> '' THEN
              DimVal.SETFILTER(Code,GlobalDim2Filter);
            DimVal."Dimension Code" := GLSetup."Global Dimension 2 Code";
            DimVal.SETRANGE("Dimension Code",DimVal."Dimension Code");
            DimVal.Code := DimCodeBuf.Code;
            ResultSteps := DimVal.NEXT(Steps);
            IF ResultSteps <> 0 THEN
              CopyDimValToBuf(DimVal,DimCodeBuf);
          END;
        DimOption::"Budget Dimension 1" :
          BEGIN
            IF BudgetDim1Filter <> '' THEN
              DimVal.SETFILTER(Code,BudgetDim1Filter);
            DimVal."Dimension Code" := GLBudgetName."Budget Dimension 1 Code";
            DimVal.SETRANGE("Dimension Code",DimVal."Dimension Code");
            DimVal.Code := DimCodeBuf.Code;
            ResultSteps := DimVal.NEXT(Steps);
            IF ResultSteps <> 0 THEN
              CopyDimValToBuf(DimVal,DimCodeBuf);
          END;
        DimOption::"Budget Dimension 2" :
          BEGIN
            IF BudgetDim2Filter <> '' THEN
              DimVal.SETFILTER(Code,BudgetDim2Filter);
            DimVal."Dimension Code" := GLBudgetName."Budget Dimension 2 Code";
            DimVal.SETRANGE("Dimension Code",DimVal."Dimension Code");
            DimVal.Code := DimCodeBuf.Code;
            ResultSteps := DimVal.NEXT(Steps);
            IF ResultSteps <> 0 THEN
              CopyDimValToBuf(DimVal,DimCodeBuf);
          END;
        DimOption::"Budget Dimension 3" :
          BEGIN
            IF BudgetDim3Filter <> '' THEN
              DimVal.SETFILTER(Code,BudgetDim3Filter);
            DimVal."Dimension Code" := GLBudgetName."Budget Dimension 3 Code";
            DimVal.SETRANGE("Dimension Code",DimVal."Dimension Code");
            DimVal.Code := DimCodeBuf.Code;
            ResultSteps := DimVal.NEXT(Steps);
            IF ResultSteps <> 0 THEN
              CopyDimValToBuf(DimVal,DimCodeBuf);
          END;
        DimOption::"Budget Dimension 4" :
          BEGIN
            IF BudgetDim4Filter <> '' THEN
              DimVal.SETFILTER(Code,BudgetDim4Filter);
            DimVal."Dimension Code" := GLBudgetName."Budget Dimension 4 Code";
            DimVal.SETRANGE("Dimension Code",DimVal."Dimension Code");
            DimVal.Code := DimCodeBuf.Code;
            ResultSteps := DimVal.NEXT(Steps);
            IF ResultSteps <> 0 THEN
              CopyDimValToBuf(DimVal,DimCodeBuf);
          END;
        DimOption::"Historic G/L Account" :
          BEGIN
            HistoricGLAcc."No." := DimCodeBuf.Code;
            IF HistoricGLAccFilter <> '' THEN
              HistoricGLAcc.SETFILTER("No.",HistoricGLAccFilter);
            ResultSteps := HistoricGLAcc.NEXT(Steps);
            IF ResultSteps <> 0 THEN
              CopyHistoricGLAccToBuf(HistoricGLAcc,DimCodeBuf);
          END;
      END;
      EXIT(ResultSteps);
    END;

    LOCAL PROCEDURE CopyGLAccToBuf@1144(VAR TheGLAcc@1000 : Record 15;VAR TheDimCodeBuf@1001 : Record 367);
    BEGIN
      WITH TheDimCodeBuf DO BEGIN
        INIT;
        Code := TheGLAcc."No.";
        Name := TheGLAcc.Name;
        Totaling := TheGLAcc.Totaling;
        Indentation := TheGLAcc.Indentation;
        "Show in Bold" := TheGLAcc."Account Type" <> TheGLAcc."Account Type"::Posting;
      END;
    END;

    LOCAL PROCEDURE CopyPeriodToBuf@1145(VAR ThePeriod@1000 : Record 2000000007;VAR TheDimCodeBuf@1001 : Record 367);
    VAR
      Period2@1146 : Record 2000000007;
    BEGIN
      WITH TheDimCodeBuf DO BEGIN
        INIT;
        Code := FORMAT(ThePeriod."Period Start");
        "Period Start" := ThePeriod."Period Start";
        "Period End" := ThePeriod."Period End";
        IF DateFilter <> '' THEN BEGIN
          Period2.SETFILTER("Period End",DateFilter);
          IF Period2.GETRANGEMAX("Period End") < "Period End" THEN
            "Period End" := Period2.GETRANGEMAX("Period End");
        END;
        Name := ThePeriod."Period Name";
      END;
    END;

    LOCAL PROCEDURE CopyBusUnitToBuf@1147(VAR TheBusUnit@1000 : Record 220;VAR TheDimCodeBuf@1001 : Record 367);
    BEGIN
      WITH TheDimCodeBuf DO BEGIN
        INIT;
        Code := TheBusUnit.Code;
        IF TheBusUnit.Name <> '' THEN
          Name := TheBusUnit.Name
        ELSE
          Name := TheBusUnit."Company Name";
      END;
    END;

    LOCAL PROCEDURE CopyDimValToBuf@1148(VAR TheDimVal@1000 : Record 349;VAR TheDimCodeBuf@1001 : Record 367);
    BEGIN
      WITH TheDimCodeBuf DO BEGIN
        INIT;
        Code := TheDimVal.Code;
        Name := TheDimVal.Name;
        Totaling := TheDimVal.Totaling;
        Indentation := TheDimVal.Indentation;
        "Show in Bold" :=
                  TheDimVal."Dimension Value Type" <> TheDimVal."Dimension Value Type"::Standard;
      END;
    END;

    LOCAL PROCEDURE FindPeriod@1149(SearchText@1000 : Code[10]);
    VAR
      GLAcc@1150 : Record 15;
      Calendar@1151 : Record 2000000007;
      PeriodFormMgt@1152 : Codeunit 359;
    BEGIN
      IF DateFilter <> '' THEN BEGIN
        Calendar.SETFILTER("Period Start",DateFilter);
        IF NOT PeriodFormMgt.FindDate('+',Calendar,PeriodType) THEN
          PeriodFormMgt.FindDate('+',Calendar,PeriodType::Day);
        Calendar.SETRANGE("Period Start");
      END;
      PeriodFormMgt.FindDate(SearchText,Calendar,PeriodType);
      GLAcc.SETRANGE("Date Filter",Calendar."Period Start",Calendar."Period End");
      IF GLAcc.GETRANGEMIN("Date Filter") = GLAcc.GETRANGEMAX("Date Filter") THEN
        GLAcc.SETRANGE("Date Filter",GLAcc.GETRANGEMIN("Date Filter"));
      InternalDateFilter := GLAcc.GETFILTER("Date Filter");
      IF (LineDimOption <> LineDimOption::Period) AND (ColumnDimOption <> ColumnDimOption::Period) THEN
        DateFilter := InternalDateFilter;
    END;

    LOCAL PROCEDURE LookUpCode@1160(DimOption@1000 : 'G/L Account,Period,Business Unit,Global Dimension 1,Global Dimension 2,Budget Dimension 1,Budget Dimension 2,Budget Dimension 3,Budget Dimension 4,,,,,Historic G/L Account';DimCode@1001 : Text[30];Code@1002 : Text[30]);
    VAR
      GLAcc@1161 : Record 15;
      BusUnit@1162 : Record 220;
      DimVal@1163 : Record 349;
      DimValList@1164 : Form 560;
      HistoricGLAcc@1100000 : Record 10721;
    BEGIN
      CASE DimOption OF
        DimOption::"G/L Account" :
          BEGIN
            GLAcc.GET(Code);
            FORM.RUNMODAL(FORM::"G/L Account List",GLAcc);
          END;
        DimOption::Period : ;
        DimOption::"Business Unit" :
          BEGIN
            BusUnit.GET(Code);
            FORM.RUNMODAL(FORM::"Business Unit List",BusUnit);
          END;
        DimOption::"Global Dimension 1",DimOption::"Global Dimension 2",
        DimOption::"Budget Dimension 1",DimOption::"Budget Dimension 2",
        DimOption::"Budget Dimension 3",DimOption::"Budget Dimension 4" :
          BEGIN
            DimVal.SETRANGE("Dimension Code",DimCode);
            DimVal.GET(DimCode,Code);
            DimValList.SETTABLEVIEW(DimVal);
            DimValList.SETRECORD(DimVal);
            DimValList.RUNMODAL;
          END;
        DimOption::"Historic G/L Account" :
          BEGIN
            HistoricGLAcc.GET(Code);
            FORM.RUNMODAL(FORM::"Historic G/L Account List",HistoricGLAcc);
          END;
      END;
    END;

    LOCAL PROCEDURE SetCommonFilters@1168(VAR TheGLAccBudgetBuf@1000 : Record 374);
    BEGIN
      WITH TheGLAccBudgetBuf DO BEGIN
        RESET;
        SETRANGE("Budget Filter",GLBudgetName.Name);
        IF BusUnitFilter <> '' THEN
          SETFILTER("Business Unit Filter",BusUnitFilter);
        IF GLAccFilter <> '' THEN
          SETFILTER("G/L Account Filter",GLAccFilter);
        IF DateFilter <> '' THEN
          SETFILTER("Date Filter",DateFilter);
        IF GlobalDim1Filter <> '' THEN
          SETFILTER("Global Dimension 1 Filter",GlobalDim1Filter);
        IF GlobalDim2Filter <> '' THEN
          SETFILTER("Global Dimension 2 Filter",GlobalDim2Filter);
        IF BudgetDim1Filter <> '' THEN
          SETFILTER("Budget Dimension 1 Filter",BudgetDim1Filter);
        IF BudgetDim2Filter <> '' THEN
          SETFILTER("Budget Dimension 2 Filter",BudgetDim2Filter);
        IF BudgetDim3Filter <> '' THEN
          SETFILTER("Budget Dimension 3 Filter",BudgetDim3Filter);
        IF BudgetDim4Filter <> '' THEN
          SETFILTER("Budget Dimension 4 Filter",BudgetDim4Filter);
        IF HistoricGLAccFilter <> '' THEN
          SETFILTER("Historic G/L Account Filter",HistoricGLAccFilter);
      END;
    END;

    LOCAL PROCEDURE SetDimFilters@1169(VAR TheGLAccBudgetBuf@1000 : Record 374;LineOrColumn@1001 : 'Line,Column');
    VAR
      DimOption@1170 : 'G/L Account,Period,Business Unit,Global Dimension 1,Global Dimension 2,Budget Dimension 1,Budget Dimension 2,Budget Dimension 3,Budget Dimension 4,,,,,Historic G/L Account';
      DimCodeBuf@1171 : Record 367;
    BEGIN
      IF LineOrColumn = LineOrColumn::Line THEN BEGIN
        DimCodeBuf := Rec;
        DimOption := LineDimOption;
      END ELSE BEGIN
        DimCodeBuf := MATRIX_MatrixRecord;
        DimOption := ColumnDimOption;
      END;

      WITH TheGLAccBudgetBuf DO
        CASE DimOption OF
          DimOption::"G/L Account" :
            IF DimCodeBuf.Totaling <> '' THEN
              GLAccBudgetBuf.SETFILTER("G/L Account Filter",DimCodeBuf.Totaling)
            ELSE
              GLAccBudgetBuf.SETRANGE("G/L Account Filter",DimCodeBuf.Code);
          DimOption::Period :
            SETRANGE("Date Filter",DimCodeBuf."Period Start",DimCodeBuf."Period End");
          DimOption::"Business Unit" :
            SETRANGE("Business Unit Filter",DimCodeBuf.Code);
          DimOption::"Global Dimension 1" :
            IF DimCodeBuf.Totaling <> '' THEN
              SETFILTER("Global Dimension 1 Filter",DimCodeBuf.Totaling)
            ELSE
              SETRANGE("Global Dimension 1 Filter",DimCodeBuf.Code);
          DimOption::"Global Dimension 2" :
            IF DimCodeBuf.Totaling <> '' THEN
              SETFILTER("Global Dimension 2 Filter",DimCodeBuf.Totaling)
            ELSE
              SETRANGE("Global Dimension 2 Filter",DimCodeBuf.Code);
          DimOption::"Budget Dimension 1" :
            IF DimCodeBuf.Totaling <> '' THEN
              SETFILTER("Budget Dimension 1 Filter",DimCodeBuf.Totaling)
            ELSE
              SETRANGE("Budget Dimension 1 Filter",DimCodeBuf.Code);
          DimOption::"Budget Dimension 2" :
            IF DimCodeBuf.Totaling <> '' THEN
              SETFILTER("Budget Dimension 2 Filter",DimCodeBuf.Totaling)
            ELSE
              SETRANGE("Budget Dimension 2 Filter",DimCodeBuf.Code);
          DimOption::"Budget Dimension 3" :
            IF DimCodeBuf.Totaling <> '' THEN
              SETFILTER("Budget Dimension 3 Filter",DimCodeBuf.Totaling)
            ELSE
              SETRANGE("Budget Dimension 3 Filter",DimCodeBuf.Code);
          DimOption::"Budget Dimension 4" :
            IF DimCodeBuf.Totaling <> '' THEN
              SETFILTER("Budget Dimension 4 Filter",DimCodeBuf.Totaling)
            ELSE
              SETRANGE("Budget Dimension 4 Filter",DimCodeBuf.Code);
          DimOption::"Historic G/L Account" :
            IF DimCodeBuf.Totaling <> '' THEN
              GLAccBudgetBuf.SETFILTER("Historic G/L Account Filter",DimCodeBuf.Totaling)
            ELSE
              GLAccBudgetBuf.SETRANGE("Historic G/L Account Filter",DimCodeBuf.Code);
        END;
    END;

    LOCAL PROCEDURE BudgetDrillDown@1172();
    VAR
      GLBudgetEntry@1173 : Record 96;
    BEGIN
      GLBudgetEntry.SETRANGE("Budget Name",GLBudgetName.Name);
      IF GLAccBudgetBuf.GETFILTER("G/L Account Filter") <> '' THEN
        GLAccBudgetBuf.COPYFILTER("G/L Account Filter",GLBudgetEntry."G/L Account No.");
      IF GLAccBudgetBuf.GETFILTER("Business Unit Filter") <> '' THEN
        GLAccBudgetBuf.COPYFILTER("Business Unit Filter",GLBudgetEntry."Business Unit Code");
      IF GLAccBudgetBuf.GETFILTER("Global Dimension 1 Filter") <> '' THEN
        GLAccBudgetBuf.COPYFILTER("Global Dimension 1 Filter",GLBudgetEntry."Global Dimension 1 Code");
      IF GLAccBudgetBuf.GETFILTER("Global Dimension 2 Filter") <> '' THEN
        GLAccBudgetBuf.COPYFILTER("Global Dimension 2 Filter",GLBudgetEntry."Global Dimension 2 Code");
      IF GLAccBudgetBuf.GETFILTER("Budget Dimension 1 Filter") <> '' THEN
        GLAccBudgetBuf.COPYFILTER("Budget Dimension 1 Filter",GLBudgetEntry."Budget Dimension 1 Code");
      IF GLAccBudgetBuf.GETFILTER("Budget Dimension 2 Filter") <> '' THEN
        GLAccBudgetBuf.COPYFILTER("Budget Dimension 2 Filter",GLBudgetEntry."Budget Dimension 2 Code");
      IF GLAccBudgetBuf.GETFILTER("Budget Dimension 3 Filter") <> '' THEN
        GLAccBudgetBuf.COPYFILTER("Budget Dimension 3 Filter",GLBudgetEntry."Budget Dimension 3 Code");
      IF GLAccBudgetBuf.GETFILTER("Budget Dimension 4 Filter") <> '' THEN
        GLAccBudgetBuf.COPYFILTER("Budget Dimension 4 Filter",GLBudgetEntry."Budget Dimension 4 Code");
      IF GLAccBudgetBuf.GETFILTER("Historic G/L Account Filter") <> '' THEN
        GLAccBudgetBuf.COPYFILTER("Historic G/L Account Filter",GLBudgetEntry."Old G/L Account No.");
      IF GLAccBudgetBuf.GETFILTER("Date Filter") <> '' THEN
        GLAccBudgetBuf.COPYFILTER("Date Filter",GLBudgetEntry.Date)
      ELSE
        GLBudgetEntry.SETRANGE(Date,0D,31129999D);
      WITH GLBudgetEntry DO
        IF (GETFILTER("Global Dimension 1 Code") <> '') OR (GETFILTER("Global Dimension 2 Code") <> '') OR
           (GETFILTER("Business Unit Code") <> '')
        THEN
          SETCURRENTKEY("Budget Name","G/L Account No.","Business Unit Code","Global Dimension 1 Code")
        ELSE
          SETCURRENTKEY("Budget Name","G/L Account No.",Date);
      FORM.RUN(0,GLBudgetEntry);
    END;

    LOCAL PROCEDURE CalcAmount@1184(SetColumnFilter@1000 : Boolean) : Decimal;
    BEGIN
      SetCommonFilters(GLAccBudgetBuf);
      SetDimFilters(GLAccBudgetBuf,0);
      IF SetColumnFilter THEN
        SetDimFilters(GLAccBudgetBuf,1);
      GLAccBudgetBuf.CALCFIELDS("Budgeted Amount","Old Budgeted Amount");
      IF (LineDimOption <> LineDimOption::"Historic G/L Account") AND (ColumnDimOption <>
        ColumnDimOption::"Historic G/L Account") THEN
        EXIT(GLAccBudgetBuf."Budgeted Amount")
      ELSE
        EXIT(GLAccBudgetBuf."Old Budgeted Amount");
    END;

    LOCAL PROCEDURE ToRoundedValue@2(OrgAmount@1000 : Decimal) : Decimal;
    VAR
      NewAmount@1001 : Decimal;
    BEGIN
      NewAmount := OrgAmount;
      CASE RoundingFactor OF
        RoundingFactor::"1":
          NewAmount := ROUND(OrgAmount,1);
        RoundingFactor::"1000":
          NewAmount := ROUND(OrgAmount / 1000);
        RoundingFactor::"1000000":
          NewAmount := ROUND(OrgAmount / 1000000);
      END;
      EXIT(NewAmount);
    END;

    LOCAL PROCEDURE FromRoundedValue@3(OrgAmount@1000 : Decimal) : Decimal;
    VAR
      NewAmount@1001 : Decimal;
    BEGIN
      NewAmount := OrgAmount;
      CASE RoundingFactor OF
        RoundingFactor::"1000":
          NewAmount := OrgAmount * 1000;
        RoundingFactor::"1000000":
          NewAmount := OrgAmount * 1000000;
      END;
      EXIT(NewAmount);
    END;

    PROCEDURE Load@1186(VAR MatrixColumns1@1005 : ARRAY [32] OF Text[80];VAR MatrixRecords1@1006 : ARRAY [12] OF Record 367;CurrentNoOfMatrixColumns@1007 : Integer;_LineDimCode@1015 : Text[30];_LineDimOption@1000 : Integer;_ColumnDimOption@1002 : Integer;_GlobalDim1Filter@1001 : Code[250];_GlobalDim2Filter@1003 : Code[250];_BudgetDim1Filter@1004 : Code[250];_BudgetDim2Filter@1010 : Code[250];_BudgetDim3Filter@1009 : Code[250];_BudgetDim4Filter@1008 : Code[250];VAR _GLBudgetName@1011 : Record 95;_DateFilter@1012 : Text[30];_GLAccFilter@1013 : Code[250];_HistoricGLAccFilter@1100000 : Code[250];_RoundingFactor@1014 : Integer;_PeriodType@1017 : 'Day,Week,Month,Quarter,Year,Accounting Period');
    VAR
      i@1016 : Integer;
    BEGIN
      FOR i := 1 TO 12 DO BEGIN
        IF MatrixColumns1[i] = '' THEN
          MATRIX_CaptionSet[i] := ' '
        ELSE
          MATRIX_CaptionSet[i] := MatrixColumns1[i];
        MatrixRecords[i] := MatrixRecords1[i];
      END;
      IF MATRIX_CaptionSet[1] = '' THEN; // To make this form pass preCAL test
      IF CurrentNoOfMatrixColumns > ARRAYLEN(MATRIX_CellData) THEN
        MATRIX_CurrentNoOfMatrixColumn := ARRAYLEN(MATRIX_CellData)
      ELSE
        MATRIX_CurrentNoOfMatrixColumn := CurrentNoOfMatrixColumns;
      LineDimCode := _LineDimCode;
      LineDimOption := _LineDimOption;
      ColumnDimOption := _ColumnDimOption;
      GlobalDim1Filter := _GlobalDim1Filter;
      GlobalDim2Filter := _GlobalDim2Filter;
      BudgetDim1Filter := _BudgetDim1Filter;
      BudgetDim2Filter := _BudgetDim2Filter;
      BudgetDim3Filter := _BudgetDim3Filter;
      BudgetDim4Filter := _BudgetDim4Filter;
      GLBudgetName := _GLBudgetName;
      DateFilter := _DateFilter;
      GLAccFilter := _GLAccFilter;
      HistoricGLAccFilter := _HistoricGLAccFilter;
      RoundingFactor := _RoundingFactor;
      PeriodType := _PeriodType;
      CurrForm.UPDATECONTROLS;
    END;

    LOCAL PROCEDURE MATRIX_OnDrillDown@1187(MATRIX_ColumnOrdinal@1008 : Integer);
    BEGIN
      MATRIX_MatrixRecord := MatrixRecords[MATRIX_ColumnOrdinal];
      SetCommonFilters(GLAccBudgetBuf);
      SetDimFilters(GLAccBudgetBuf,0);
      SetDimFilters(GLAccBudgetBuf,1);
      BudgetDrillDown;
    END;

    LOCAL PROCEDURE MATRIX_OnAfterGetRecord@1189(MATRIX_ColumnOrdinal@1010 : Integer);
    BEGIN
      IF ShowColumnName THEN
        MatrixHeader := MatrixRecords[MATRIX_ColumnOrdinal].Name
      ELSE
        MatrixHeader := MatrixRecords[MATRIX_ColumnOrdinal].Code;
      MATRIX_MatrixRecord := MatrixRecords[MATRIX_ColumnOrdinal];
      MATRIX_CellData[MATRIX_ColumnOrdinal] := ToRoundedValue(CalcAmount(TRUE));
    END;

    PROCEDURE UpdateAmount@1102601001(MATRIX_ColumnOrdinal@1102601000 : Integer);
    VAR
      GLBudgEntry2@1102601005 : Record 96;
      ChangeLogMgt@1102601003 : Codeunit 423;
      RecRef@1001 : RecordRef;
      LastEntryNo2@1102601002 : Integer;
      LogInsertion@1102601001 : Boolean;
      NewAmount@1000 : Decimal;
    BEGIN
      IF MATRIX_ColumnOrdinal > MATRIX_CurrentNoOfMatrixColumn THEN
        ERROR(Text002,MATRIX_CurrentNoOfMatrixColumn);
      MATRIX_MatrixRecord := MatrixRecords[MATRIX_ColumnOrdinal];
      NewAmount := FromRoundedValue(MATRIX_CellData[MATRIX_ColumnOrdinal]);

      LogInsertion := ChangeLogMgt.GetTableTriggerMask(DATABASE::"G/L Budget Entry") MOD 2 <> 0;
      IF LogInsertion THEN
        IF GLBudgEntry2.FIND('+') THEN
          LastEntryNo2 := GLBudgEntry2."Entry No.";
      IF CalcAmount(TRUE) = 0 THEN; // To set filters correctly
      GLAccBudgetBuf.CALCFIELDS("Budgeted Amount");
      GLAccBudgetBuf.VALIDATE("Budgeted Amount",NewAmount);
      IF LogInsertion THEN
        IF GLBudgEntry2.FIND('+') THEN
          IF LastEntryNo2 < GLBudgEntry2."Entry No." THEN BEGIN
            RecRef.GETTABLE(GLBudgEntry2);
            ChangeLogMgt.LogInsertion(RecRef);
          END;

      Amount := ToRoundedValue(CalcAmount(FALSE));

      IF ISSERVICETIER THEN
        CurrForm.UPDATE;
    END;

    PROCEDURE GLAccountBalanceBudget@1102601002();
    VAR
      GLAcc@1102601000 : Record 15;
    BEGIN
      IF DimCodeToOption(LineDimCode) = 0 THEN
        GLAcc.GET(Code)
      ELSE BEGIN
        IF GLAccFilter <> '' THEN
          GLAcc.SETFILTER("No.",GLAccFilter);
        GLAcc.FIND('-');
        GLAcc.RESET;
      END;
      WITH GLAcc DO BEGIN
        SETRANGE("Budget Filter",BudgetName);
        IF BusUnitFilter <> '' THEN
          SETFILTER("Business Unit Filter",BusUnitFilter);
        IF GLAccFilter <> '' THEN
          SETFILTER("No.",GLAccFilter);
        IF GlobalDim1Filter <> '' THEN
          SETFILTER("Global Dimension 1 Filter",GlobalDim1Filter);
        IF GlobalDim2Filter <> '' THEN
          SETFILTER("Global Dimension 2 Filter",GlobalDim2Filter);
      END;
      FORM.RUN(FORM::"G/L Account Balance/Budget",GLAcc);
    END;

    LOCAL PROCEDURE CopyHistoricGLAccToBuf@1100000(VAR TheHistGLAcc@1100000 : Record 10721;VAR TheDimCodeBuf@1100001 : Record 367);
    BEGIN
      WITH TheDimCodeBuf DO BEGIN
        INIT;
        Code := TheHistGLAcc."No.";
        Name := TheHistGLAcc.Name;
        Totaling := TheHistGLAcc.Totaling;
        Indentation := TheHistGLAcc.Indentation;
        "Show in Bold" := TheHistGLAcc."Account Type" <> TheHistGLAcc."Account Type"::Posting;
      END;
    END;

    LOCAL PROCEDURE FindHistoricPeriod@1100001(SearchText@1100000 : Code[10]);
    VAR
      HistoricGLAcc@1100001 : Record 10721;
      Calendar@1100002 : Record 2000000007;
      PeriodFormMgt@1100003 : Codeunit 359;
    BEGIN
      IF DateFilter <> '' THEN BEGIN
        Calendar.SETFILTER("Period Start",DateFilter);
        IF NOT PeriodFormMgt.FindDate('+',Calendar,PeriodType) THEN
          PeriodFormMgt.FindDate('+',Calendar,PeriodType::Day);
        Calendar.SETRANGE("Period Start");
      END;
      PeriodFormMgt.FindDate(SearchText,Calendar,PeriodType);
      HistoricGLAcc.SETRANGE("Date Filter",Calendar."Period Start",Calendar."Period End");
      IF HistoricGLAcc.GETRANGEMIN("Date Filter") = HistoricGLAcc.GETRANGEMAX("Date Filter") THEN
        HistoricGLAcc.SETRANGE("Date Filter",HistoricGLAcc.GETRANGEMIN("Date Filter"));
      InternalDateFilter := HistoricGLAcc.GETFILTER("Date Filter");
      IF (LineDimOption <> LineDimOption::Period) AND (ColumnDimOption <> ColumnDimOption::Period) THEN
        DateFilter := InternalDateFilter;
    END;

    BEGIN
    END.
  }
}
