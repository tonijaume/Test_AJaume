OBJECT Form 7009837 Tabla Pendientes clientes
{
  OBJECT-PROPERTIES
  {
    Date=15/10/12;
    Time=12:56:08;
    Modified=Yes;
    Version List=AIC2009;
  }
  PROPERTIES
  {
    Width=20130;
    Height=6710;
    CaptionML=[ENU=Customer - Remaining Amounts List;
               ESP=Tabla Pendientes clientes];
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    TableBoxID=1;
    SourceTable=Table21;
    UpdateOnActivate=Yes;
    SourceTableView=SORTING(Customer No.,Open,Global Dimension 1 Code,Global Dimension 2 Code,Positive,Due Date,Currency Code);
  }
  CONTROLS
  {
    { 1   ;TableBox     ;220  ;220  ;19690;5500 ;HorzGlue=Both;
                                                 VertGlue=Both;
                                                 HeadingHeight=880 }
    { 2   ;TextBox      ;0    ;0    ;1650 ;0    ;ParentControl=1;
                                                 InColumn=Yes;
                                                 SourceExpr="Posting Date" }
    { 3   ;Label        ;0    ;0    ;0    ;0    ;ParentControl=2;
                                                 InColumnHeading=Yes }
    { 4   ;TextBox      ;0    ;0    ;1603 ;0    ;ParentControl=1;
                                                 InColumn=Yes;
                                                 SourceExpr="Document Type" }
    { 5   ;Label        ;0    ;0    ;0    ;0    ;ParentControl=4;
                                                 InColumnHeading=Yes }
    { 6   ;TextBox      ;0    ;0    ;1650 ;0    ;ParentControl=1;
                                                 InColumn=Yes;
                                                 SourceExpr="Document No." }
    { 7   ;Label        ;0    ;0    ;0    ;0    ;ParentControl=6;
                                                 InColumnHeading=Yes }
    { 8   ;TextBox      ;0    ;0    ;1650 ;0    ;ParentControl=1;
                                                 InColumn=Yes;
                                                 SourceExpr="Bill No." }
    { 9   ;Label        ;0    ;0    ;0    ;0    ;ParentControl=8;
                                                 InColumnHeading=Yes }
    { 10  ;TextBox      ;0    ;0    ;1650 ;0    ;ParentControl=1;
                                                 InColumn=Yes;
                                                 SourceExpr="Customer No." }
    { 11  ;Label        ;0    ;0    ;0    ;0    ;ParentControl=10;
                                                 InColumnHeading=Yes }
    { 12  ;TextBox      ;0    ;0    ;4400 ;0    ;HorzGlue=Both;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 SourceExpr=Description }
    { 13  ;Label        ;0    ;0    ;0    ;0    ;ParentControl=12;
                                                 InColumnHeading=Yes }
    { 14  ;TextBox      ;0    ;0    ;1650 ;0    ;ParentControl=1;
                                                 InColumn=Yes;
                                                 SourceExpr="Currency Code" }
    { 15  ;Label        ;0    ;0    ;0    ;0    ;ParentControl=14;
                                                 InColumnHeading=Yes }
    { 16  ;TextBox      ;0    ;0    ;2200 ;0    ;ParentControl=1;
                                                 InColumn=Yes;
                                                 SourceExpr=Amount }
    { 17  ;Label        ;0    ;0    ;0    ;0    ;ParentControl=16;
                                                 InColumnHeading=Yes }
    { 18  ;TextBox      ;0    ;0    ;2200 ;0    ;ParentControl=1;
                                                 InColumn=Yes;
                                                 SourceExpr="Remaining Amount" }
    { 19  ;Label        ;0    ;0    ;0    ;0    ;ParentControl=18;
                                                 InColumnHeading=Yes }
    { 35  ;TextBox      ;18018;1540 ;2355 ;440  ;ParentControl=1;
                                                 InColumn=Yes;
                                                 CaptionML=[ENU=Remaining Amount;
                                                            ESP=Importe Pendiente];
                                                 SourceExpr=CalcImporPdteLiqdcion("Remaining Amount") }
    { 36  ;Label        ;0    ;0    ;0    ;0    ;ParentControl=35;
                                                 InColumnHeading=Yes }
    { 20  ;TextBox      ;0    ;0    ;1650 ;0    ;ParentControl=1;
                                                 InColumn=Yes;
                                                 SourceExpr="Due Date" }
    { 21  ;Label        ;0    ;0    ;0    ;0    ;ParentControl=20;
                                                 InColumnHeading=Yes }
    { 22  ;TextBox      ;0    ;0    ;1650 ;0    ;ParentControl=1;
                                                 InColumn=Yes;
                                                 SourceExpr="Pmt. Discount Date" }
    { 23  ;Label        ;0    ;0    ;0    ;0    ;ParentControl=22;
                                                 InColumnHeading=Yes }
    { 24  ;TextBox      ;0    ;0    ;2200 ;0    ;ParentControl=1;
                                                 InColumn=Yes;
                                                 SourceExpr="Original Pmt. Disc. Possible" }
    { 25  ;Label        ;0    ;0    ;0    ;0    ;ParentControl=24;
                                                 InColumnHeading=Yes }
    { 26  ;TextBox      ;0    ;0    ;2200 ;0    ;ParentControl=1;
                                                 InColumn=Yes;
                                                 SourceExpr="Pmt. Disc. Given (LCY)" }
    { 27  ;Label        ;0    ;0    ;0    ;0    ;ParentControl=26;
                                                 InColumnHeading=Yes }
    { 28  ;CheckBox     ;0    ;0    ;1650 ;0    ;ParentControl=1;
                                                 InColumn=Yes;
                                                 ShowCaption=No;
                                                 SourceExpr=Open }
    { 29  ;Label        ;0    ;0    ;0    ;0    ;ParentControl=28;
                                                 InColumnHeading=Yes }
    { 30  ;CheckBox     ;0    ;0    ;1650 ;0    ;ParentControl=1;
                                                 InColumn=Yes;
                                                 ShowCaption=No;
                                                 SourceExpr=Positive }
    { 31  ;Label        ;0    ;0    ;0    ;0    ;ParentControl=30;
                                                 InColumnHeading=Yes }
    { 32  ;CommandButton;12870;5940 ;2200 ;550  ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 Default=Yes;
                                                 PushAction=LookupOK;
                                                 InvalidActionAppearance=Hide }
    { 33  ;CommandButton;15290;5940 ;2200 ;550  ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 Cancel=Yes;
                                                 PushAction=LookupCancel;
                                                 InvalidActionAppearance=Hide }
    { 34  ;CommandButton;17710;5940 ;2200 ;550  ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 PushAction=FormHelp }
  }
  CODE
  {
    VAR
      FechaLiqdcion@1103355000 : Date;
      CodDivisaLiqdcion@1103355001 : Code[10];
      IDLiqMovClie@1103355002 : Code[20];
      TipoLiqdcion@1103355003 : ' ,Liq. por n§ doc.,Liq. por ID';
      CalcTipo@1103355004 : 'Directo,LinDiaGen,CabVenta';
      ConfCG@1103355005 : Record 98;
      Divisa@1103355006 : Record 4;
      TipoCambDivisa@1103355007 : Record 330;
      MovClie@1103355008 : Record 21;
      MovClienteLiqddo@1103355009 : Record 21;
      LinDiaGen@1103355010 : Record 81;
      LinDiaGen2@1103355011 : Record 81;
      CabVenta@1103355012 : Record 36;
      ImpoLiquidado@1103355013 : Decimal;
      MostrarImporte@1103355014 : Decimal;
      PrecRedonLiqdcion@1103355015 : Decimal;
      RedondLiqdcion@1103355016 : Decimal;
      ImportePrecRedond@1103355017 : Decimal;

    PROCEDURE CalcImporPdteLiqdcion@6(Importe@1103355000 : Decimal) : Decimal;
    VAR
      ImportPdteLiqdcion@1103355001 : Decimal;
    BEGIN
      IF CodDivisaLiqdcion = "Currency Code" THEN
        EXIT(Importe)
      ELSE BEGIN
        IF FechaLiqdcion = 0D THEN
          FechaLiqdcion := "Posting Date";
        ImportPdteLiqdcion :=
          TipoCambDivisa.ExchangeAmtFCYToFCY(
            FechaLiqdcion,"Currency Code",CodDivisaLiqdcion,Importe);
        EXIT(ImportPdteLiqdcion);
      END;
    END;

    PROCEDURE retorna_registro@1(VAR par_mov@1103355000 : Record 21);
    BEGIN
      // retorna_registro
      //
      par_mov.COPY(Rec);
    END;

    PROCEDURE CalcImporLiqcion@4();
    VAR
      LinDiaGenCtaCamb@1103355000 : Codeunit 366;
      ImpLiqTemp@1103355001 : Decimal;
    BEGIN
      ImpoLiquidado := 0;

      CASE CalcTipo OF
        CalcTipo::Directo :
          BEGIN
            MostrarImporte := 0;
            FechaLiqdcion := "Posting Date";
            CodDivisaLiqdcion := "Currency Code";
            MovClie := Rec;
            BuscaImporteRedond;
            IDLiqMovClie := USERID;
            IF IDLiqMovClie = '' THEN
              IDLiqMovClie := '***';

            MovClienteLiqddo.SETCURRENTKEY("Customer No.",
                                           Open,
                                           Positive);
            MovClienteLiqddo.SETRANGE("Customer No."  , "Customer No.");
            MovClienteLiqddo.SETRANGE(Open     , TRUE);
            MovClienteLiqddo.SETRANGE("Applies-to ID", IDLiqMovClie);
            WITH MovClienteLiqddo DO BEGIN
              IF FIND('-') THEN BEGIN
                // Gesti¢n del n§ "Liq. por ID" en el registro actual
                //
                IF MovClie."Applies-to ID" <> IDLiqMovClie THEN BEGIN
                  FechaLiqdcion := "Posting Date";
                  CodDivisaLiqdcion := "Currency Code";
                END;

                REPEAT
                  // Gesti¢n de m£ltiples divisas
                  IF "Currency Code" <> CodDivisaLiqdcion THEN BEGIN
                    "Remaining Amount" :=
                      TipoCambDivisa.ExchangeAmtFCYToFCY(
                        FechaLiqdcion,"Currency Code",CodDivisaLiqdcion,"Remaining Amount");
                    "Original Pmt. Disc. Possible" :=
                      TipoCambDivisa.ExchangeAmtFCYToFCY(
                        FechaLiqdcion,"Currency Code",CodDivisaLiqdcion,"Original Pmt. Disc. Possible");
                  END;

                  // Test de dto. P.P.
                  IF (MovClie."Document Type" = MovClie."Document Type"::Payment) AND
                     ("Document Type" = "Document Type"::Invoice) AND
                     (MovClie."Posting Date" <= "Pmt. Discount Date") AND
                     (ABS(MovClie."Remaining Amount") + PrecRedonLiqdcion >=
                     ABS("Remaining Amount" - "Original Pmt. Disc. Possible")) AND
                     (MovClie."Applies-to ID" <> '')
                  THEN
                    "Remaining Amount" := "Remaining Amount" - "Original Pmt. Disc. Possible";

                  IF MovClie."Entry No." <> "Entry No." THEN BEGIN
                    ImpoLiquidado := ImpoLiquidado + ROUND("Remaining Amount",ImportePrecRedond);
                    IF MovClie."Remaining Amount" > 0 THEN BEGIN
                      MovClie."Remaining Amount" :=
                        MovClie."Remaining Amount" + "Remaining Amount";
                      IF MovClie."Remaining Amount" < 0 THEN
                        MovClie."Remaining Amount" := 0;
                    END;
                    IF MovClie."Remaining Amount" < 0 THEN BEGIN
                      MovClie."Remaining Amount" :=
                        MovClie."Remaining Amount" + "Remaining Amount";
                      IF MovClie."Remaining Amount" > 0 THEN
                        MovClie."Remaining Amount" := 0;
                    END;
                  END ELSE
                    MostrarImporte := "Remaining Amount";
                UNTIL NEXT = 0;
              END;
            END;
            TestRedondeo;
          END;

        CalcTipo::LinDiaGen :
          BEGIN
            BuscaImporteRedond;
            IF LinDiaGen."Bal. Account Type" = LinDiaGen."Bal. Account Type"::Customer THEN
              LinDiaGenCtaCamb.RUN(LinDiaGen);

            CASE TipoLiqdcion OF

              TipoLiqdcion::"Liq. por n§ doc." :
                BEGIN
                  MovClienteLiqddo := Rec;
                  WITH MovClienteLiqddo DO BEGIN
                    IF "Currency Code" <> CodDivisaLiqdcion THEN BEGIN
                      "Remaining Amount" :=
                        TipoCambDivisa.ExchangeAmtFCYToFCY(
                          FechaLiqdcion,"Currency Code",CodDivisaLiqdcion,"Remaining Amount");
                      "Original Pmt. Disc. Possible" :=
                        TipoCambDivisa.ExchangeAmtFCYToFCY(
                          FechaLiqdcion,"Currency Code",CodDivisaLiqdcion,"Original Pmt. Disc. Possible");
                    END;

                    IF (LinDiaGen."Document Type" = LinDiaGen."Document Type"::Payment) AND
                       (MovClienteLiqddo."Document Type" = MovClienteLiqddo."Document Type"::Invoice) AND
                       (LinDiaGen."Posting Date" <= "Pmt. Discount Date") AND
                       (ABS(LinDiaGen.Amount) + PrecRedonLiqdcion >=
                       ABS("Remaining Amount" - "Original Pmt. Disc. Possible"))
                    THEN
                      "Remaining Amount" := "Remaining Amount" - "Original Pmt. Disc. Possible";

                    ImpoLiquidado := ImpoLiquidado + ROUND("Remaining Amount",ImportePrecRedond);
                  END;
                  TestRedondeo;
                END;

              TipoLiqdcion::"Liq. por ID" :
                BEGIN
                  LinDiaGen2 := LinDiaGen;
                  WITH MovClie DO BEGIN
                    MovClienteLiqddo.SETCURRENTKEY("Customer No.",Open,Positive);
                    MovClienteLiqddo.SETRANGE("Customer No.",LinDiaGen."Account No.");
                    MovClienteLiqddo.SETRANGE(Open,TRUE);

                    IF LinDiaGen."Applies-to ID" <> '' THEN
                      MovClienteLiqddo.SETRANGE("Applies-to ID",LinDiaGen."Applies-to ID")
                    ELSE
                      MovClienteLiqddo.SETRANGE("Applies-to ID",CabVenta."No.");

                    WITH MovClienteLiqddo DO BEGIN
                      IF FIND('-') THEN
                        REPEAT
                          IF "Currency Code" <> CodDivisaLiqdcion THEN BEGIN
                            "Remaining Amount" :=
                              TipoCambDivisa.ExchangeAmtFCYToFCY(
                                FechaLiqdcion,"Currency Code",CodDivisaLiqdcion,"Remaining Amount");
                            "Original Pmt. Disc. Possible" :=
                              TipoCambDivisa.ExchangeAmtFCYToFCY(
                                FechaLiqdcion,"Currency Code",CodDivisaLiqdcion,"Original Pmt. Disc. Possible");
                          END;

                          IF (LinDiaGen2."Document Type" = LinDiaGen2."Document Type"::Payment) AND
                             (MovClienteLiqddo."Document Type" = MovClienteLiqddo."Document Type"::Invoice) AND
                             (LinDiaGen2."Posting Date" <= "Pmt. Discount Date") AND
                             (ABS(LinDiaGen2.Amount) + PrecRedonLiqdcion >=
                             ABS("Remaining Amount" - "Original Pmt. Disc. Possible"))
                          THEN
                            "Remaining Amount" := "Remaining Amount" - "Original Pmt. Disc. Possible";

                          ImpoLiquidado := ImpoLiquidado + ROUND("Remaining Amount",ImportePrecRedond);
                          IF (LinDiaGen2.Amount > 0) THEN BEGIN
                            LinDiaGen2.Amount :=
                              LinDiaGen2.Amount + "Remaining Amount";
                            IF LinDiaGen2.Amount < 0 THEN
                              LinDiaGen2.Amount := 0;
                          END;
                          IF (LinDiaGen2.Amount < 0) THEN BEGIN
                            LinDiaGen2.Amount :=
                              LinDiaGen2.Amount + "Remaining Amount";
                            IF LinDiaGen2.Amount > 0 THEN
                              LinDiaGen2.Amount := 0;
                          END
                        UNTIL NEXT = 0;
                    END;
                    TestRedondeo;
                  END;
                END;
            END;
          END;

        CalcTipo::CabVenta :
          BEGIN
            BuscaImporteRedond;

            CASE TipoLiqdcion OF

              TipoLiqdcion::"Liq. por n§ doc." :
                BEGIN
                  MovClienteLiqddo := Rec;
                  WITH MovClienteLiqddo DO BEGIN
                    IF "Currency Code" <> CodDivisaLiqdcion THEN
                      "Remaining Amount" :=
                        TipoCambDivisa.ExchangeAmtFCYToFCY(
                          FechaLiqdcion,"Currency Code",CodDivisaLiqdcion,"Remaining Amount");
                    ImpoLiquidado := ImpoLiquidado + ROUND("Remaining Amount",ImportePrecRedond);
                  END;
                  TestRedondeo;
                END;

              TipoLiqdcion::"Liq. por ID" :
                BEGIN
                  WITH MovClie DO BEGIN
                    MovClienteLiqddo.SETCURRENTKEY("Customer No.",Open,Positive);
                    MovClienteLiqddo.SETRANGE("Customer No.",CabVenta."Bill-to Customer No.");
                    MovClienteLiqddo.SETRANGE(Open,TRUE);

                    IF CabVenta."Applies-to ID" <> '' THEN
                      MovClienteLiqddo.SETRANGE("Applies-to ID",CabVenta."Applies-to ID")
                    ELSE
                      MovClienteLiqddo.SETRANGE("Applies-to ID",CabVenta."No.");

                    WITH MovClienteLiqddo DO BEGIN
                      IF FIND('-') THEN
                        REPEAT
                          IF "Currency Code" <> CodDivisaLiqdcion THEN
                            "Remaining Amount" :=
                              TipoCambDivisa.ExchangeAmtFCYToFCY(
                                FechaLiqdcion,"Currency Code",CodDivisaLiqdcion,"Remaining Amount");
                          ImpoLiquidado := ImpoLiquidado + ROUND("Remaining Amount",ImportePrecRedond);
                        UNTIL NEXT = 0;
                    END;
                    TestRedondeo;
                  END;
                END;
            END;
          END;
      END;
    END;

    PROCEDURE BuscaImporteRedond@7();
    BEGIN
      IF CodDivisaLiqdcion = '' THEN BEGIN
        Divisa.INIT;
        Divisa.Code := '';
        Divisa.InitRoundingPrecision;
      END ELSE
        IF CodDivisaLiqdcion <> Divisa.Code THEN
          Divisa.GET(CodDivisaLiqdcion);

      ImportePrecRedond := Divisa."Amount Rounding Precision";
    END;

    PROCEDURE TestRedondeo@3();
    BEGIN
      RedondLiqdcion := 0;

      CASE CalcTipo OF
        CalcTipo::CabVenta :
          BEGIN
            EXIT;
          END;

        CalcTipo::LinDiaGen :
          BEGIN
            IF LinDiaGen."Document Type" <> LinDiaGen."Document Type"::Payment THEN EXIT;
          END;

        CalcTipo::Directo :
          BEGIN
            IF "Document Type" <> "Document Type"::Payment THEN EXIT;
          END;
      END;

      IF CodDivisaLiqdcion = '' THEN
        PrecRedonLiqdcion := ConfCG."Appln. Rounding Precision"
      ELSE BEGIN
        IF CodDivisaLiqdcion <> "Currency Code" THEN
          Divisa.GET(CodDivisaLiqdcion);
        PrecRedonLiqdcion := Divisa."Appln. Rounding Precision";
      END;

      IF ABS(ImpoLiquidado+MostrarImporte) <= PrecRedonLiqdcion THEN
        RedondLiqdcion := -(ImpoLiquidado+MostrarImporte);
    END;

    PROCEDURE TraerMovCliente@5(VAR MovClie@1103355000 : Record 21);
    BEGIN
      MovClie := Rec;
    END;

    BEGIN
    END.
  }
}
