OBJECT Form 7118 Purchase Analysis Report
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVW16.00;
  }
  PROPERTIES
  {
    Width=16500;
    Height=10010;
    CaptionML=[ENU=Purchase Analysis Report;
               ESP=Informe de an lisis de compras];
    SaveValues=Yes;
    TableBoxID=1;
    LinksAllowed=No;
    SourceTable=Table7114;
    DataCaptionExpr=GetCaption;
    SourceTableView=WHERE(Analysis Area=CONST(Purchase));
    OnOpenForm=VAR
                 AnalysisLineTemplate@1001 : Record 7112;
               BEGIN
                 AnalysisReportMgt.OpenAnalysisLines(CurrentLineTemplate,Rec);
                 AnalysisReportMgt.OpenColumns(CurrentColumnTemplate,Rec,CurrForm.AnalysisReportMatrix.MatrixRec);
                 AnalysisReportMgt.CopyColumnsToTemp(Rec,CurrentColumnTemplate,TempAnalysisColumn);
                 AnalysisReportMgt.SetSourceNo(Rec,CurrentSourceTypeNoFilter);

                 GLSetup.GET;

                 IF AnalysisLineTemplate.GET(GETRANGEMAX("Analysis Area"),CurrentLineTemplate) THEN
                   IF AnalysisLineTemplate."Item Analysis View Code" <> '' THEN
                     ItemAnalysisView.GET(GETRANGEMAX("Analysis Area"),AnalysisLineTemplate."Item Analysis View Code")
                   ELSE BEGIN
                     CLEAR(ItemAnalysisView);
                     ItemAnalysisView."Dimension 1 Code" := GLSetup."Global Dimension 1 Code";
                     ItemAnalysisView."Dimension 2 Code" := GLSetup."Global Dimension 2 Code";
                   END;

                 FindPeriod('');

                 CurrForm.Dim1Filter.ENABLED := ItemAnalysisView."Dimension 1 Code" <> '';
                 CurrForm.Dim2Filter.ENABLED := ItemAnalysisView."Dimension 2 Code" <> '';
                 CurrForm.Dim3Filter.ENABLED := ItemAnalysisView."Dimension 3 Code" <> '';
                 CurrForm.UPDATECONTROLS;
               END;

  }
  CONTROLS
  {
    { 28  ;CommandButton;14080;9240 ;2200 ;550  ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 PushAction=FormHelp }
    { 29  ;TabControl   ;220  ;220  ;16060;3080 ;HorzGlue=Both;
                                                 PageNamesML=[ENU=General,Filters,Options;
                                                              ESP=General,Filtros,Opciones] }
    { 15  ;TextBox      ;13310;990  ;2750 ;440  ;ParentControl=29;
                                                 InPage=0;
                                                 SourceExpr="Date Filter" }
    { 16  ;Label        ;9900 ;990  ;3300 ;440  ;ParentControl=15 }
    { 35  ;TextBox      ;13310;1540 ;2750 ;440  ;ParentControl=29;
                                                 InPage=0;
                                                 SourceExpr="Item Budget Filter" }
    { 36  ;Label        ;9900 ;1540 ;3300 ;440  ;ParentControl=35 }
    { 40  ;TextBox      ;3850 ;990  ;2750 ;440  ;ParentControl=29;
                                                 InPage=0;
                                                 CaptionML=[ENU=Analysis Report Name;
                                                            ESP=Nombre del informe de an lisis];
                                                 SourceExpr=CurrentReportName;
                                                 OnValidate=BEGIN
                                                              AnalysisReportMgt.CheckReportName(CurrentReportName,Rec);
                                                            END;

                                                 OnLookup=BEGIN
                                                            IF AnalysisReportMgt.LookupReportName(GETRANGEMAX("Analysis Area"),CurrentReportName) THEN BEGIN
                                                              Text := CurrentReportName;
                                                              EXIT(TRUE);
                                                            END;
                                                          END;

                                                 OnAfterValidate=BEGIN
                                                                   CurrForm.SAVERECORD;
                                                                   ValidateReportName;
                                                                   AnalysisReportMgt.SetAnalysisLineTemplName(CurrentLineTemplate,Rec);
                                                                   ValidateAnalysisTemplateName;
                                                                   AnalysisReportMgt.CopyColumnsToTemp(Rec,CurrentColumnTemplate,TempAnalysisColumn);
                                                                   CurrForm.UPDATE(FALSE);
                                                                   CurrForm.UPDATECONTROLS;
                                                                 END;
                                                                  }
    { 41  ;Label        ;440  ;990  ;3300 ;440  ;ParentControl=40 }
    { 9   ;TextBox      ;3850 ;1650 ;2750 ;440  ;ParentControl=29;
                                                 InPage=0;
                                                 CaptionML=[ENU=Analysis Line Template;
                                                            ESP=Plantilla de l¡nea de an lisis];
                                                 SourceExpr=CurrentLineTemplate;
                                                 OnValidate=BEGIN
                                                              AnalysisReportMgt.CheckAnalysisLineTemplName(CurrentLineTemplate,Rec);
                                                            END;

                                                 OnLookup=BEGIN
                                                            CurrForm.SAVERECORD;
                                                            AnalysisReportMgt.LookupAnalysisLineTemplName(CurrentLineTemplate,Rec);
                                                            ValidateAnalysisTemplateName;
                                                            CurrForm.UPDATE(FALSE);
                                                            CurrForm.UPDATECONTROLS;
                                                          END;

                                                 OnAfterValidate=BEGIN
                                                                   CurrForm.SAVERECORD;
                                                                   AnalysisReportMgt.SetAnalysisLineTemplName(CurrentLineTemplate,Rec);
                                                                   ValidateAnalysisTemplateName;
                                                                   CurrForm.UPDATE(FALSE);
                                                                   CurrForm.UPDATECONTROLS;
                                                                 END;
                                                                  }
    { 10  ;Label        ;440  ;1650 ;3300 ;440  ;ParentControl=9 }
    { 8   ;TextBox      ;3850 ;2200 ;2750 ;440  ;ParentControl=29;
                                                 InPage=0;
                                                 CaptionML=[ENU=Analysis Column Template;
                                                            ESP=Plantilla columna de an lisis];
                                                 SourceExpr=CurrentColumnTemplate;
                                                 OnValidate=BEGIN
                                                              AnalysisReportMgt.GetColumnTemplate(GETRANGEMAX("Analysis Area"),CurrentColumnTemplate);
                                                            END;

                                                 OnLookup=BEGIN
                                                            IF AnalysisReportMgt.LookupColumnName(GETRANGEMAX("Analysis Area"),CurrentColumnTemplate) THEN BEGIN
                                                              Text := CurrentColumnTemplate;
                                                              EXIT(TRUE);
                                                            END;
                                                          END;

                                                 OnAfterValidate=BEGIN
                                                                   AnalysisReportMgt.CopyColumnsToTemp(Rec,CurrentColumnTemplate,TempAnalysisColumn);
                                                                   CurrForm.UPDATE(FALSE);
                                                                 END;
                                                                  }
    { 11  ;Label        ;440  ;2200 ;3300 ;440  ;ParentControl=8 }
    { 38  ;TextBox      ;13310;990  ;2750 ;440  ;Name=Dim1Filter;
                                                 ParentControl=29;
                                                 InPage=1;
                                                 SourceExpr="Dimension 1 Filter";
                                                 CaptionClass=FormGetCaptionClass(1);
                                                 OnLookup=BEGIN
                                                            EXIT(FormLookUpDimFilter(ItemAnalysisView."Dimension 1 Code",Text));
                                                          END;

                                                 OnAfterValidate=BEGIN
                                                                   CurrForm.UPDATE(FALSE);
                                                                 END;
                                                                  }
    { 39  ;Label        ;9900 ;990  ;3300 ;440  ;ParentControl=38 }
    { 42  ;TextBox      ;13310;1540 ;2750 ;440  ;Name=Dim2Filter;
                                                 ParentControl=29;
                                                 InPage=1;
                                                 SourceExpr="Dimension 2 Filter";
                                                 CaptionClass=FormGetCaptionClass(2);
                                                 OnLookup=BEGIN
                                                            EXIT(FormLookUpDimFilter(ItemAnalysisView."Dimension 2 Code",Text));
                                                          END;

                                                 OnAfterValidate=BEGIN
                                                                   CurrForm.UPDATE(FALSE);
                                                                 END;
                                                                  }
    { 43  ;Label        ;9900 ;1540 ;3300 ;440  ;ParentControl=42 }
    { 44  ;TextBox      ;13310;2090 ;2750 ;440  ;Name=Dim3Filter;
                                                 ParentControl=29;
                                                 InPage=1;
                                                 SourceExpr="Dimension 3 Filter";
                                                 CaptionClass=FormGetCaptionClass(3);
                                                 OnLookup=BEGIN
                                                            EXIT(FormLookUpDimFilter(ItemAnalysisView."Dimension 3 Code",Text));
                                                          END;

                                                 OnAfterValidate=BEGIN
                                                                   CurrForm.UPDATE(FALSE);
                                                                 END;
                                                                  }
    { 45  ;Label        ;9900 ;2090 ;3300 ;440  ;ParentControl=44 }
    { 25  ;TextBox      ;3850 ;1540 ;2750 ;440  ;ParentControl=29;
                                                 InPage=1;
                                                 CaptionML=[ENU=Source No. Filter;
                                                            ESP=Filtro n§ origen];
                                                 SourceExpr=CurrentSourceTypeNoFilter;
                                                 OnLookup=BEGIN
                                                            AnalysisReportMgt.LookupSourceNo(Rec,CurrentSourceTypeFilter,CurrentSourceTypeNoFilter);
                                                            CurrForm.UPDATE(FALSE);
                                                          END;

                                                 OnAfterValidate=BEGIN
                                                                   AnalysisReportMgt.SetSourceNo(Rec,CurrentSourceTypeNoFilter);
                                                                   CurrForm.UPDATE(FALSE);
                                                                 END;
                                                                  }
    { 26  ;Label        ;440  ;1540 ;3300 ;440  ;ParentControl=25 }
    { 27  ;TextBox      ;3850 ;990  ;2750 ;440  ;ParentControl=29;
                                                 InPage=1;
                                                 CaptionML=[ENU=Source Type Filter;
                                                            ESP=Filtro tipo origen];
                                                 OptionCaptionML=[ENU=" ,Customer,Vendor,Item";
                                                                  ESP=" ,Cliente,Proveedor,Producto"];
                                                 OptionString=[ ,Customer,Vendor,Item];
                                                 SourceExpr=CurrentSourceTypeFilter;
                                                 OnValidate=BEGIN
                                                              SETRANGE("Source Type Filter",CurrentSourceTypeFilter);
                                                              CurrentSourceTypeNoFilter := '';
                                                              AnalysisReportMgt.SetSourceNo(Rec,CurrentSourceTypeNoFilter);
                                                            END;

                                                 OnAfterValidate=BEGIN
                                                                   CurrForm.UPDATE(FALSE);
                                                                 END;
                                                                  }
    { 30  ;Label        ;440  ;990  ;3300 ;440  ;ParentControl=27 }
    { 32  ;TextBox      ;3850 ;990  ;1650 ;440  ;ParentControl=29;
                                                 InPage=2;
                                                 CaptionML=[ENU=Show Error;
                                                            ESP=Mostrar error];
                                                 OptionCaptionML=[ENU=None,Division by Zero,Period Error,Invalid Formula,Cyclic Formula,All;
                                                                  ESP=Ninguno,Divisi¢n entre cero,Error Periodo,F¢rmula no v lida,F¢rmula c¡clica,Todo];
                                                 SourceExpr=ShowError }
    { 34  ;Label        ;440  ;990  ;3300 ;440  ;ParentControl=32 }
    { 1   ;MatrixBox    ;220  ;3520 ;16060;5500 ;Name=AnalysisReportMatrix;
                                                 HorzGlue=Both;
                                                 VertGlue=Both;
                                                 Editable=No;
                                                 MatrixSourceTable=Table7118;
                                                 OnFindRecord=BEGIN
                                                                IF TempAnalysisColumn.FIND(Which) THEN BEGIN
                                                                  CurrForm.AnalysisReportMatrix.MatrixRec := TempAnalysisColumn;
                                                                  EXIT(TRUE);
                                                                END;
                                                              END;

                                                 OnNextRecord=VAR
                                                                ResultSteps@1000 : Integer;
                                                              BEGIN
                                                                ResultSteps := TempAnalysisColumn.NEXT(Steps);
                                                                IF ResultSteps <> 0 THEN
                                                                  CurrForm.AnalysisReportMatrix.MatrixRec := TempAnalysisColumn;
                                                                EXIT(ResultSteps);
                                                              END;

                                                 OnAfterGetRecord=BEGIN
                                                                    IF Range = '' THEN
                                                                      ColumnValue := 0
                                                                    ELSE
                                                                      ColumnValue :=
                                                                        AnalysisReportMgt.CalcCell(Rec,CurrForm.AnalysisReportMatrix.MatrixRec,FALSE);
                                                                  END;
                                                                   }
    { 2   ;TextBox      ;423  ;6160 ;1650 ;440  ;Name=RowRefNo;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 CaptionML=[ENU=Row Ref. No.;
                                                            ESP=Ref. fila n§];
                                                 SourceExpr="Row Ref. No.";
                                                 OnFormat=BEGIN
                                                            CurrForm.RowRefNo.UPDATEFONTBOLD := Bold;
                                                          END;
                                                           }
    { 3   ;Label        ;0    ;0    ;0    ;0    ;ParentControl=2;
                                                 InColumnHeading=Yes }
    { 4   ;TextBox      ;2123 ;6160 ;4400 ;440  ;Name=Description;
                                                 HorzGlue=Both;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 CaptionML=[ENU=Description;
                                                            ESP=Descripci¢n];
                                                 SourceExpr=Description;
                                                 OnFormat=BEGIN
                                                            CurrForm.Description.UPDATEFONTBOLD := Bold;
                                                            CurrForm.Description.UPDATEINDENT := 220 * Indentation;
                                                          END;
                                                           }
    { 5   ;Label        ;0    ;0    ;0    ;0    ;ParentControl=4;
                                                 InColumnHeading=Yes }
    { 6   ;TextBox      ;7321 ;7040 ;8619 ;440  ;Name=ColumnValue;
                                                 ParentControl=1;
                                                 InMatrix=Yes;
                                                 SourceExpr=ColumnValue;
                                                 OnFormat=VAR
                                                            Value@1000 : Decimal;
                                                          BEGIN
                                                            EVALUATE(Value,Text);
                                                            IF Value = 0 THEN
                                                              Text := '';
                                                            IF Bold THEN
                                                              CurrForm.ColumnValue.UPDATEFONTBOLD := TRUE;
                                                            IF AnalysisReportMgt.GetDivisionError THEN
                                                              IF ShowError IN [ShowError::"Division by Zero",ShowError::All] THEN BEGIN
                                                                Text := Text001;
                                                                CurrForm.ColumnValue.UPDATEFONTBOLD := TRUE;
                                                              END ELSE
                                                                Text := '';
                                                            IF AnalysisReportMgt.GetPeriodError THEN
                                                              IF ShowError IN [ShowError::"Period Error",ShowError::All] THEN BEGIN
                                                                Text := Text002;
                                                                CurrForm.ColumnValue.UPDATEFONTBOLD := TRUE;
                                                              END ELSE
                                                                Text := '';
                                                            IF AnalysisReportMgt.GetFormulaError THEN
                                                              IF ShowError IN [ShowError::"Invalid Formula",ShowError::All] THEN BEGIN
                                                                Text := Text004;
                                                                CurrForm.ColumnValue.UPDATEFONTBOLD := TRUE;
                                                              END ELSE
                                                                Text := '';
                                                            IF AnalysisReportMgt.GetCyclicError THEN
                                                              IF ShowError IN [ShowError::"Cyclic Formula",ShowError::All] THEN BEGIN
                                                                Text := Text005;
                                                                CurrForm.ColumnValue.UPDATEFONTBOLD := TRUE;
                                                              END ELSE
                                                                Text := '';
                                                          END;

                                                 OnDrillDown=BEGIN
                                                               AnalysisReportMgt.CalcCell(Rec,CurrForm.AnalysisReportMatrix.MatrixRec,TRUE);
                                                             END;
                                                              }
    { 7   ;TextBox      ;14520;6490 ;1650 ;440  ;ParentControl=6;
                                                 InMatrixHeading=Yes;
                                                 SourceExpr=CurrForm.AnalysisReportMatrix.MatrixRec."Column Header" }
    { 12  ;MenuButton   ;9240 ;9240 ;2200 ;550  ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 CaptionML=[ENU=F&unctions;
                                                            ESP=Acci&ones];
                                                 Menu=MENUITEMS
                                                 {
                                                   { ID=13;
                                                     Ellipsis=Yes;
                                                     CaptionML=[ENU=Set Up &Lines;
                                                                ESP=Configurar &l¡neas];
                                                     OnPush=BEGIN
                                                              AnalysisReportMgt.OpenAnalysisLinesForm(Rec,CurrentLineTemplate);
                                                              CurrForm.UPDATE(FALSE);
                                                            END;
                                                             }
                                                   { ID=14;
                                                     Ellipsis=Yes;
                                                     CaptionML=[ENU=Set Up &Columns;
                                                                ESP=&Configurar columnas];
                                                     OnPush=BEGIN
                                                              AnalysisReportMgt.OpenAnalysisColumnsForm(Rec,CurrentColumnTemplate);
                                                              CurrForm.UPDATE(FALSE);
                                                            END;
                                                             }
                                                   { ID=31;
                                                     MenuItemType=Separator }
                                                   { ID=37;
                                                     Ellipsis=Yes;
                                                     CaptionML=[ENU=Export to Excel;
                                                                ESP=Exportar a Excel];
                                                     OnPush=VAR
                                                              ExportAnalysisRepToExcel@1000 : Report 7113;
                                                            BEGIN
                                                              ExportAnalysisRepToExcel.SetOptions(Rec,CurrentColumnTemplate,CurrentLineTemplate);
                                                              ExportAnalysisRepToExcel.RUN;
                                                            END;
                                                             }
                                                   { ID=33;
                                                     CaptionML=[ENU=Show Bar Chart;
                                                                ESP=Mostrar gr fico de barras];
                                                     OnPush=BEGIN
                                                              ShowBarChart;
                                                            END;
                                                             }
                                                 }
                                                  }
    { 17  ;CommandButton;4290 ;9240 ;550  ;550  ;VertGlue=Bottom;
                                                 FocusOnClick=No;
                                                 ShowCaption=No;
                                                 BitmapPos=Center;
                                                 AutoRepeat=Yes;
                                                 Bitmap=16;
                                                 ToolTipML=[ENU=Next Period;
                                                            ESP=Periodo siguiente];
                                                 OnPush=BEGIN
                                                          FindPeriod('>=');
                                                        END;
                                                         }
    { 18  ;CommandButton;3740 ;9240 ;550  ;550  ;VertGlue=Bottom;
                                                 FocusOnClick=No;
                                                 ShowCaption=No;
                                                 BitmapPos=Center;
                                                 AutoRepeat=Yes;
                                                 Bitmap=15;
                                                 ToolTipML=[ENU=Previous Period;
                                                            ESP=Periodo anterior];
                                                 OnPush=BEGIN
                                                          FindPeriod('<=');
                                                        END;
                                                         }
    { 19  ;OptionButton ;2970 ;9240 ;550  ;550  ;VertGlue=Bottom;
                                                 FocusOnClick=No;
                                                 ShowCaption=No;
                                                 Border=Yes;
                                                 BitmapPos=Center;
                                                 Bitmap=14;
                                                 ToolTipML=[ENU=Accounting Period;
                                                            ESP=Periodo contable];
                                                 SourceExpr=PeriodType;
                                                 OptionValue=Accounting Period;
                                                 OnPush=BEGIN
                                                          FindPeriod('');
                                                        END;
                                                         }
    { 20  ;OptionButton ;2420 ;9240 ;550  ;550  ;VertGlue=Bottom;
                                                 FocusOnClick=No;
                                                 ShowCaption=No;
                                                 Border=Yes;
                                                 BitmapPos=Center;
                                                 Bitmap=13;
                                                 ToolTipML=[ENU=Year;
                                                            ESP=A¤o];
                                                 SourceExpr=PeriodType;
                                                 OptionValue=Year;
                                                 OnPush=BEGIN
                                                          FindPeriod('');
                                                        END;
                                                         }
    { 21  ;OptionButton ;1870 ;9240 ;550  ;550  ;VertGlue=Bottom;
                                                 FocusOnClick=No;
                                                 ShowCaption=No;
                                                 Border=Yes;
                                                 BitmapPos=Center;
                                                 Bitmap=12;
                                                 ToolTipML=[ENU=Quarter;
                                                            ESP=Trimestre];
                                                 SourceExpr=PeriodType;
                                                 OptionValue=Quarter;
                                                 OnPush=BEGIN
                                                          FindPeriod('');
                                                        END;
                                                         }
    { 22  ;OptionButton ;1320 ;9240 ;550  ;550  ;VertGlue=Bottom;
                                                 FocusOnClick=No;
                                                 ShowCaption=No;
                                                 Border=Yes;
                                                 BitmapPos=Center;
                                                 Bitmap=11;
                                                 ToolTipML=[ENU=Month;
                                                            ESP=Mes];
                                                 SourceExpr=PeriodType;
                                                 OptionValue=Month;
                                                 OnPush=BEGIN
                                                          FindPeriod('');
                                                        END;
                                                         }
    { 23  ;OptionButton ;770  ;9240 ;550  ;550  ;VertGlue=Bottom;
                                                 FocusOnClick=No;
                                                 ShowCaption=No;
                                                 Border=Yes;
                                                 BitmapPos=Center;
                                                 Bitmap=10;
                                                 ToolTipML=[ENU=Week;
                                                            ESP=Semana];
                                                 SourceExpr=PeriodType;
                                                 OptionValue=Week;
                                                 OnPush=BEGIN
                                                          FindPeriod('');
                                                        END;
                                                         }
    { 24  ;OptionButton ;220  ;9240 ;550  ;550  ;VertGlue=Bottom;
                                                 FocusOnClick=No;
                                                 ShowCaption=No;
                                                 Border=Yes;
                                                 BitmapPos=Center;
                                                 Bitmap=9;
                                                 ToolTipML=[ENU=Day;
                                                            ESP=D¡a];
                                                 SourceExpr=PeriodType;
                                                 OptionValue=Day;
                                                 OnPush=BEGIN
                                                          FindPeriod('');
                                                        END;
                                                         }
    { 46  ;CommandButton;11660;9240 ;2200 ;550  ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 Ellipsis=Yes;
                                                 CaptionML=[ENU=&Print;
                                                            ESP=&Imprimir];
                                                 OnPush=VAR
                                                          AnalysisReport@1006 : Report 7112;
                                                          DateFilter@1005 : Text[30];
                                                          ItemBudgetFilter@1004 : Text[30];
                                                          LocationFilter@1003 : Text[30];
                                                          Dim1Filter@1002 : Text[250];
                                                          Dim2Filter@1001 : Text[250];
                                                          Dim3Filter@1000 : Text[250];
                                                        BEGIN
                                                          AnalysisReport.SetParams(GETRANGEMAX("Analysis Area"),CurrentReportName,CurrentLineTemplate,CurrentColumnTemplate);
                                                          DateFilter := GETFILTER("Date Filter");
                                                          ItemBudgetFilter := GETFILTER("Item Budget Filter");
                                                          LocationFilter := GETFILTER("Location Filter");
                                                          Dim1Filter := GETFILTER("Dimension 1 Filter");
                                                          Dim2Filter := GETFILTER("Dimension 2 Filter");
                                                          Dim3Filter := GETFILTER("Dimension 3 Filter");
                                                          AnalysisReport.SetFilters(
                                                            DateFilter,ItemBudgetFilter,LocationFilter,Dim1Filter,Dim2Filter,Dim3Filter,
                                                            CurrentSourceTypeFilter,CurrentSourceTypeNoFilter);
                                                          AnalysisReport.RUN;
                                                        END;
                                                         }
  }
  CODE
  {
    VAR
      GLSetup@1017 : Record 98;
      TempAnalysisColumn@1003 : TEMPORARY Record 7118;
      ItemAnalysisView@1016 : Record 7152;
      AnalysisReportMgt@1000 : Codeunit 7110;
      CurrentReportName@1005 : Code[10];
      CurrentLineTemplate@1001 : Code[10];
      CurrentColumnTemplate@1002 : Code[10];
      CurrentSourceTypeFilter@1014 : ' ,Customer,Vendor,Item';
      CurrentSourceTypeNoFilter@1015 : Code[1024];
      ColumnValue@1004 : Decimal;
      PeriodType@1006 : 'Day,Week,Month,Quarter,Year,Accounting Period';
      ShowError@1007 : 'None,Division by Zero,Period Error,Invalid Formula,Cyclic Formula,All';
      Text001@1012 : TextConst 'ENU=* ERROR *;ESP=* ERROR *';
      Text002@1009 : TextConst 'ENU=Not Available;ESP=No disponible';
      Text003@1008 : TextConst 'ENU=1,6,,Dimension %1 Filter;ESP=1,6,,Filtro dimensi¢n %1';
      Text004@1011 : TextConst 'ENU=Invalid Formula;ESP=F¢rmula no v lida';
      Text005@1010 : TextConst 'ENU=Cyclic Error;ESP=Error c¡clico';

    LOCAL PROCEDURE FindPeriod@2(SearchText@1000 : Code[10]);
    VAR
      Calendar@1001 : Record 2000000007;
      PeriodFormMgt@1002 : Codeunit 359;
    BEGIN
      IF GETFILTER("Date Filter") <> '' THEN BEGIN
        Calendar.SETFILTER("Period Start",GETFILTER("Date Filter"));
        IF NOT PeriodFormMgt.FindDate('+',Calendar,PeriodType) THEN
          PeriodFormMgt.FindDate('+',Calendar,PeriodType::Day);
        Calendar.SETRANGE("Period Start");
      END;
      PeriodFormMgt.FindDate(SearchText,Calendar,PeriodType);
      SETRANGE("Date Filter",Calendar."Period Start",Calendar."Period End");
      IF GETRANGEMIN("Date Filter") = GETRANGEMAX("Date Filter") THEN
        SETRANGE("Date Filter",GETRANGEMIN("Date Filter"));
    END;

    LOCAL PROCEDURE ValidateAnalysisTemplateName@3();
    VAR
      AnalysisLineTemplate@1001 : Record 7112;
      PrevItemAnalysisView@1000 : Record 7152;
    BEGIN
      IF AnalysisLineTemplate.GET(GETRANGEMAX("Analysis Area"),CurrentLineTemplate) THEN
        IF (AnalysisLineTemplate."Default Column Template Name" <> '') AND
           (CurrentColumnTemplate <> AnalysisLineTemplate."Default Column Template Name")
        THEN BEGIN
          CurrentColumnTemplate := AnalysisLineTemplate."Default Column Template Name";
          AnalysisReportMgt.OpenColumns(CurrentColumnTemplate,Rec,CurrForm.AnalysisReportMatrix.MatrixRec);
          AnalysisReportMgt.CopyColumnsToTemp(Rec,CurrentColumnTemplate,TempAnalysisColumn);
        END;

      IF AnalysisLineTemplate."Item Analysis View Code" <> ItemAnalysisView.Code THEN BEGIN
        PrevItemAnalysisView := ItemAnalysisView;
        IF AnalysisLineTemplate."Item Analysis View Code" <> '' THEN
          ItemAnalysisView.GET(GETRANGEMAX("Analysis Area"),AnalysisLineTemplate."Item Analysis View Code")
        ELSE BEGIN
          CLEAR(ItemAnalysisView);
          ItemAnalysisView."Dimension 1 Code" := GLSetup."Global Dimension 1 Code";
          ItemAnalysisView."Dimension 2 Code" := GLSetup."Global Dimension 2 Code";
        END;
        IF PrevItemAnalysisView."Dimension 1 Code" <> ItemAnalysisView."Dimension 1 Code" THEN
          SETRANGE("Dimension 1 Filter");
        IF PrevItemAnalysisView."Dimension 2 Code" <> ItemAnalysisView."Dimension 2 Code" THEN
          SETRANGE("Dimension 2 Filter");
        IF PrevItemAnalysisView."Dimension 3 Code" <> ItemAnalysisView."Dimension 3 Code" THEN
          SETRANGE("Dimension 3 Filter");
      END;

      CurrForm.Dim1Filter.ENABLED := ItemAnalysisView."Dimension 1 Code" <> '';
      CurrForm.Dim2Filter.ENABLED := ItemAnalysisView."Dimension 2 Code" <> '';
      CurrForm.Dim3Filter.ENABLED := ItemAnalysisView."Dimension 3 Code" <> '';
    END;

    LOCAL PROCEDURE ValidateReportName@1();
    VAR
      AnalysisReportName@1000 : Record 7111;
    BEGIN
      IF AnalysisReportName.GET(GETRANGEMAX("Analysis Area"),CurrentReportName) THEN BEGIN
        IF AnalysisReportName."Analysis Line Template Name" <> '' THEN
          CurrentLineTemplate := AnalysisReportName."Analysis Line Template Name";
        IF AnalysisReportName."Analysis Column Template Name" <> '' THEN
          CurrentColumnTemplate := AnalysisReportName."Analysis Column Template Name";
      END;
    END;

    LOCAL PROCEDURE FormLookUpDimFilter@57(Dim@1000 : Code[20];VAR Text@1001 : Text[1024]) : Boolean;
    VAR
      DimVal@1002 : Record 349;
      DimValList@1003 : Form 560;
    BEGIN
      IF Dim = '' THEN
        EXIT(FALSE);
      DimVal.FILTERGROUP := 2;
      DimVal.SETRANGE("Dimension Code",Dim);
      DimVal.FILTERGROUP := 0;
      DimValList.SETTABLEVIEW(DimVal);
      DimValList.LOOKUPMODE(TRUE);
      IF DimValList.RUNMODAL = ACTION::LookupOK THEN BEGIN
        DimValList.GETRECORD(DimVal);
        Text := DimValList.GetSelectionFilter;
        EXIT(TRUE);
      END;
    END;

    LOCAL PROCEDURE FormGetCaptionClass@12(DimNo@1000 : Integer) : Text[250];
    BEGIN
      CASE DimNo OF
        1:
          IF ItemAnalysisView."Dimension 1 Code" <> '' THEN
            EXIT('1,6,' + ItemAnalysisView."Dimension 1 Code");
        2:
          IF ItemAnalysisView."Dimension 2 Code" <> '' THEN
            EXIT('1,6,' + ItemAnalysisView."Dimension 2 Code");
        3:
          IF ItemAnalysisView."Dimension 3 Code" <> '' THEN
            EXIT('1,6,' + ItemAnalysisView."Dimension 3 Code");
      END;
      EXIT(STRSUBSTNO(Text003,DimNo));
    END;

    LOCAL PROCEDURE GetCaption@6() : Text[250];
    VAR
      AnalysisReportName@1000 : Record 7111;
    BEGIN
      IF CurrentReportName <> '' THEN
        IF AnalysisReportName.GET(GETRANGEMAX("Analysis Area"),CurrentReportName) THEN
          EXIT(AnalysisReportName.Name + ' ' + AnalysisReportName.Description);
    END;

    LOCAL PROCEDURE ShowBarChart@4();
    VAR
      AnalysisLine@1004 : Record 7114;
      AnalysisLineBarChart@1002 : Form 7122;
      NoOfRows@1000 : Integer;
      LineNo@1001 : ARRAY [3] OF Integer;
      DateFilter@1003 : Text[80];
      ItemBudgetFilter@1005 : Text[80];
      Dim1Filter@1006 : Text[80];
      Dim2Filter@1007 : Text[80];
      Dim3Filter@1008 : Text[80];
      LocationFilter@1009 : Text[80];
    BEGIN
      CurrForm.SETSELECTIONFILTER(AnalysisLine);
      AnalysisLine.MARKEDONLY(TRUE);
      IF NOT AnalysisLine.FIND('-') THEN BEGIN
        NoOfRows := 1;
        LineNo[NoOfRows] := "Line No.";
      END ELSE
        REPEAT
          NoOfRows := NoOfRows + 1;
          LineNo[NoOfRows] := AnalysisLine."Line No.";
        UNTIL (NoOfRows = 3) OR (AnalysisLine.NEXT = 0);

      AnalysisLineBarChart.SetParams(
        GETRANGEMAX("Analysis Area"),CurrentReportName,CurrentLineTemplate,CurrentColumnTemplate,
        LineNo[1],LineNo[2],LineNo[3],PeriodType);

      DateFilter := GETFILTER("Date Filter");
      ItemBudgetFilter := GETFILTER("Item Budget Filter");
      Dim1Filter := GETFILTER("Dimension 1 Filter");
      Dim2Filter := GETFILTER("Dimension 2 Filter");
      Dim3Filter := GETFILTER("Dimension 3 Filter");

      AnalysisLineBarChart.SetFilters(
        DateFilter,
        ItemBudgetFilter,
        Dim1Filter,
        Dim2Filter,
        Dim3Filter,
        CurrentSourceTypeFilter,
        CurrentSourceTypeNoFilter,
        LocationFilter);

      AnalysisLineBarChart.RUN;
    END;

    PROCEDURE SetReportName@10(NewReportName@1000 : Code[10]);
    BEGIN
      //Dummy function to make form 9375 compile
    END;

    BEGIN
    END.
  }
}
