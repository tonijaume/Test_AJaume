OBJECT Form 5055279 Document Inquiry
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=LIQEM6.00.01;
  }
  PROPERTIES
  {
    Width=9790;
    Height=8800;
    CaptionML=[ENU=Document Inquiry;
               ESP=Consulta documentos];
    SaveValues=Yes;
    TableBoxID=1140000;
    SourceTable=Table5055267;
    OnOpenForm=BEGIN
                 IF (NewDocNo = '') AND (NewDueDate = 0D) THEN BEGIN
                   DocEntry.DELETEALL;
                   CurrForm.Show.ENABLED := FALSE;
                   SetSource(0D,'','',0,'');
                 END ELSE BEGIN
                   DocEntry.SETRANGE("Document No.",NewDocNo);
                   DocEntry.SETRANGE("Due Date",NewDueDate);
                   DocNoFilter := DocEntry.GETFILTER("Document No.");
                   DueDateFilter := DocEntry.GETFILTER("Due Date");
                   FindRecords;
                 END;
               END;

    OnFindRecord=BEGIN
                   DocEntry := Rec;
                   IF NOT DocEntry.FIND(Which) THEN
                     EXIT(FALSE);
                   Rec := DocEntry;
                   EXIT(TRUE);
                 END;

    OnNextRecord=VAR
                   CurrentSteps@1140000 : Integer;
                 BEGIN
                   DocEntry := Rec;
                   CurrentSteps := DocEntry.NEXT(Steps);
                   IF CurrentSteps <> 0 THEN
                     Rec := DocEntry;
                   EXIT(CurrentSteps);
                 END;

  }
  CONTROLS
  {
    { 1140000;TableBox  ;220  ;5830 ;9350 ;1980 ;HorzGlue=Both;
                                                 VertGlue=Both;
                                                 Editable=No }
    { 1140001;TextBox   ;212  ;4840 ;1650 ;440  ;Visible=No;
                                                 ParentControl=1140000;
                                                 InColumn=Yes;
                                                 SourceExpr="Entry No." }
    { 1140002;Label     ;0    ;0    ;0    ;0    ;ParentControl=1140001;
                                                 InColumnHeading=Yes }
    { 1140003;TextBox   ;370  ;5500 ;1650 ;440  ;Visible=No;
                                                 ParentControl=1140000;
                                                 InColumn=Yes;
                                                 SourceExpr="Table ID" }
    { 1140004;Label     ;0    ;0    ;0    ;0    ;ParentControl=1140003;
                                                 InColumnHeading=Yes }
    { 1140005;TextBox   ;0    ;0    ;4400 ;0    ;HorzGlue=Both;
                                                 ParentControl=1140000;
                                                 InColumn=Yes;
                                                 SourceExpr="Table Name" }
    { 1140006;Label     ;0    ;0    ;0    ;0    ;ParentControl=1140005;
                                                 InColumnHeading=Yes;
                                                 BorderStyle=Normal }
    { 1140007;TextBox   ;0    ;0    ;1650 ;0    ;ParentControl=1140000;
                                                 InColumn=Yes;
                                                 DrillDown=Yes;
                                                 SourceExpr="No. of Records";
                                                 OnDrillDown=BEGIN
                                                               ShowRecords;
                                                             END;
                                                              }
    { 1140008;Label     ;0    ;0    ;0    ;0    ;ParentControl=1140007;
                                                 InColumnHeading=Yes;
                                                 BorderStyle=Normal }
    { 1140009;CommandButton;4950;8030;2200;550  ;Name=Show;
                                                 HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 CaptionML=[ENU=&Show;
                                                            ESP=&Mostrar];
                                                 OnPush=BEGIN
                                                          ShowRecords;
                                                        END;
                                                         }
    { 1140010;CommandButton;7370;8030;2200;550  ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 PushAction=FormHelp }
    { 1140011;TabControl;220  ;220  ;9350 ;2530 ;HorzGlue=Both;
                                                 PageNamesML=[ENU=General;
                                                              ESP=General] }
    { 1140012;TextBox   ;3850 ;990  ;2750 ;440  ;ParentControl=1140011;
                                                 InPage=0;
                                                 CaptionML=[ENU=Document No.;
                                                            ESP=N§ documento];
                                                 SourceExpr=DocNoFilter;
                                                 OnValidate=BEGIN
                                                              SetDocNo(DocNoFilter);
                                                              ContactType := ContactType::" ";
                                                              ContactNo := '';
                                                              ExtDocNo := '';
                                                            END;

                                                 OnAfterValidate=BEGIN
                                                                   ClearSourceInfo;
                                                                 END;
                                                                  }
    { 1140013;Label     ;440  ;990  ;3300 ;440  ;ParentControl=1140012 }
    { 1140014;TextBox   ;3850 ;1540 ;1650 ;440  ;ParentControl=1140011;
                                                 InPage=0;
                                                 CaptionML=[ENU=Due Date;
                                                            ESP=Fecha vencimiento];
                                                 NextControl=1140016;
                                                 SourceExpr=DueDateFilter;
                                                 OnValidate=BEGIN
                                                              SetPostingDate(DueDateFilter);
                                                              ContactType := ContactType::" ";
                                                              ContactNo := '';
                                                              ExtDocNo := '';
                                                            END;

                                                 OnAfterValidate=BEGIN
                                                                   ClearSourceInfo;
                                                                 END;
                                                                  }
    { 1140015;Label     ;440  ;1540 ;3300 ;440  ;ParentControl=1140014 }
    { 1140016;CommandButton;7150;990;2200 ;550  ;HorzGlue=Right;
                                                 ParentControl=1140011;
                                                 InPage=0;
                                                 CaptionML=[ENU=Fi&nd;
                                                            ESP=&Buscar];
                                                 OnPush=BEGIN
                                                          FindPush;
                                                        END;
                                                         }
    { 1140017;Frame     ;220  ;2970 ;9350 ;2640 ;HorzGlue=Both;
                                                 ShowCaption=No }
    { 1140018;TextBox   ;3850 ;3190 ;5500 ;440  ;Name=DebitType;
                                                 Editable=No;
                                                 ParentControl=1140017;
                                                 InFrame=Yes;
                                                 CaptionML=[ENU=Document Type;
                                                            ESP=Tipo documento];
                                                 SourceExpr=DebitType }
    { 1140019;Label     ;440  ;3190 ;3300 ;440  ;ParentControl=1140018 }
    { 1140020;TextBox   ;3850 ;3850 ;2750 ;440  ;Name=SourceType;
                                                 Editable=No;
                                                 ParentControl=1140017;
                                                 InFrame=Yes;
                                                 CaptionML=[ENU=Source Type;
                                                            ESP=Tipo procedencia mov.];
                                                 SourceExpr=SourceType }
    { 1140021;Label     ;440  ;3850 ;3300 ;440  ;ParentControl=1140020 }
    { 1140022;TextBox   ;3850 ;4400 ;2750 ;440  ;Name=SourceNo;
                                                 Editable=No;
                                                 ParentControl=1140017;
                                                 InFrame=Yes;
                                                 CaptionML=[ENU=Source No.;
                                                            ESP=C¢d. procedencia mov.];
                                                 SourceExpr=SourceNo }
    { 1140023;Label     ;440  ;4400 ;3300 ;440  ;ParentControl=1140022 }
    { 1140024;TextBox   ;3850 ;4950 ;5500 ;440  ;Name=SourceName;
                                                 Editable=No;
                                                 ParentControl=1140017;
                                                 InFrame=Yes;
                                                 CaptionML=[ENU=Source Name;
                                                            ESP=Nombre procedencia];
                                                 SourceExpr=SourceName }
    { 1140025;Label     ;440  ;4950 ;3300 ;440  ;ParentControl=1140024 }
  }
  CODE
  {
    VAR
      Text1140000@1140000 : TextConst 'ENU=Reading Records...;ESP=Leyendo registros...';
      Text1140001@1140001 : TextConst 'ENU=Neutral Expenses;ESP=Gastos neutros';
      Text1140002@1140002 : TextConst 'ENU=Neutral Revenues;ESP=Ingresos neutros';
      Text1140003@1140003 : TextConst 'ENU=Liquid Funds;ESP=Fondos corrientes';
      Text1140004@1140004 : TextConst 'ENU=Sales Orders;ESP=Pedidos venta';
      Text1140005@1140005 : TextConst 'ENU=Purchase Orders;ESP=Pedidos compra';
      Text1140006@1140006 : TextConst 'ENU=The Document No. was used several times.;ESP=N§ documento se utiliz¢ varias veces.';
      Text1140007@1140007 : TextConst 'ENU=This combination of Document No. and Due Date was used several times.;ESP=Esta combinaci¢n de N§ documento y Fecha vencimiento se utiliz¢ varias veces.';
      Text1140008@1140008 : TextConst 'ENU=There are no posted records with this Document No.;ESP=No existe informaci¢n registrada con el N§ documento indicado.';
      Text1140009@1140009 : TextConst 'ENU=There are no records with this combination of Document No. and Due Date.;ESP=No hay registros con esta combinaci¢n de N§ documento y Fecha vencimiento.';
      Cust@1140010 : Record 18;
      Vend@1140011 : Record 23;
      SalesHeader@1140012 : Record 36;
      ServiceHeader@1140013 : Record 5900;
      PurchHeader@1140014 : Record 38;
      GLAcc@1140015 : Record 15;
      CustLedgEntry@1140016 : Record 21;
      VendorLedgEntry@1140017 : Record 25;
      FixedAsset@1140018 : Record 5600;
      InsuranceLedgEntry@1140019 : Record 5629;
      DocEntry@1140020 : TEMPORARY Record 5055267;
      NeutralPayments@1140021 : Record 5055260;
      NeutralPayments2@1140022 : Record 5055260;
      GLBudgEntry@1140023 : Record 96;
      ApplicationManagement@1140024 : Codeunit 1;
      Window@1140025 : Dialog;
      DocNoFilter@1140026 : Code[20];
      NewDocNo@1140027 : Code[20];
      ContactNo@1140028 : Code[250];
      ExtDocNo@1140029 : Code[250];
      SourceNo@1140030 : Code[20];
      NewDueDate@1140031 : Date;
      DueDateFilter@1140032 : Text[250];
      DebitType@1140033 : Text[30];
      SourceType@1140034 : Text[30];
      SourceName@1140035 : Text[50];
      ContactType@1140036 : ' ,Vendor';
      NewDocumentSource@1140037 : 'Customer,Vendor,Liquid Funds,Neutral Expenses,Neutral Revenues,Sales Order,Purchase Order,Budgeted Fixed Asset,Sale of Fixed Asset';
      NewAccountType@1140038 : ' ,G/L Account,Customer,Vendor,Fixed Asset';
      Text1106000010@1140039 : TextConst 'ENU=Service Orders;ESP=Pedidos servicio';
      DocExists@1140040 : Boolean;
      DocNoFilterLength@1140041 : Integer;

    PROCEDURE SetDoc@1140000(PostingDate@1140000 : Date;DocumentNo@1140001 : Code[20];DocumentSource@1140002 : 'Customer,Vendor,Liquid Funds,Neutral Expenses,Neutral Revenues,Sales Order,Purchase Order';AccountType@1140003 : ' ,G/L Account,Customer,Vendor,Fixed Asset');
    BEGIN

      NewDocNo := DocumentNo;
      NewDueDate := PostingDate;
      NewDocumentSource := DocumentSource;
      NewAccountType := AccountType;
    END;

    LOCAL PROCEDURE FindRecords@1140001();
    BEGIN
      WITH DocEntry DO BEGIN
        Window.OPEN(Text1140000);
        DELETEALL;
        "Entry No." := 0;
        DocNoFilterLength := STRLEN(DocNoFilter);
        IF NeutralPayments.READPERMISSION AND (DocNoFilterLength < 11) THEN BEGIN
          NeutralPayments.RESET;
          NeutralPayments.SETRANGE("Revenue/Expense",NeutralPayments."Revenue/Expense"::Expense);
          NeutralPayments.SETFILTER(Code,DocNoFilter);
          InsertIntoDocEntry(
          DATABASE::"Neutral Payments",Text1140001,NeutralPayments.COUNT,NewDueDate);
        END;
        IF NeutralPayments2.READPERMISSION AND (DocNoFilterLength < 11) THEN BEGIN
          NeutralPayments2.RESET;
          NeutralPayments2.SETRANGE("Revenue/Expense",NeutralPayments."Revenue/Expense"::Revenue);
          NeutralPayments2.SETFILTER(Code,DocNoFilter);
          InsertIntoDocEntry(
          DATABASE::"Neutral Payments",Text1140002,NeutralPayments2.COUNT,NewDueDate);
        END;
        IF GLAcc.READPERMISSION THEN BEGIN
          GLAcc.RESET;
          GLAcc.SETFILTER("No.",DocNoFilter);
          GLAcc.SETFILTER("Liquid Account No.",'<>%1','');
          InsertIntoDocEntry(
          DATABASE::"G/L Account",Text1140003,GLAcc.COUNT,NewDueDate);
        END;
        IF SalesHeader.READPERMISSION THEN BEGIN
          SalesHeader.RESET;
          SalesHeader.SETRANGE("Document Type",SalesHeader."Document Type"::Order);
          SalesHeader.SETFILTER("No.",DocNoFilter);
          SalesHeader.SETFILTER("Due Date",DueDateFilter);
          InsertIntoDocEntry(
          DATABASE::"Sales Header",Text1140004,SalesHeader.COUNT,NewDueDate);
        END;
        IF PurchHeader.READPERMISSION THEN BEGIN
          PurchHeader.RESET;
          PurchHeader.SETRANGE("Document Type",PurchHeader."Document Type"::Order);
          PurchHeader.SETFILTER("No.",DocNoFilter);
          PurchHeader.SETFILTER("Due Date",DueDateFilter);
          InsertIntoDocEntry(
          DATABASE::"Purchase Header",Text1140005,PurchHeader.COUNT,NewDueDate);
        END;
        IF CustLedgEntry.READPERMISSION THEN BEGIN
          CustLedgEntry.RESET;
          CustLedgEntry.SETCURRENTKEY("Document No.");
          CustLedgEntry.SETRANGE(Open,TRUE);
          CustLedgEntry.SETFILTER("Remaining Amount",'<>%1',0);
          CustLedgEntry.SETFILTER("Document No.",DocNoFilter);
          CustLedgEntry.SETFILTER("Due Date",DueDateFilter);
          InsertIntoDocEntry(
          DATABASE::"Cust. Ledger Entry",CustLedgEntry.TABLECAPTION,CustLedgEntry.COUNT,NewDueDate);
        END;
        IF VendorLedgEntry.READPERMISSION THEN BEGIN
          VendorLedgEntry.RESET;
          VendorLedgEntry.SETCURRENTKEY("Document No.");
          VendorLedgEntry.SETRANGE(Open,TRUE);
          VendorLedgEntry.SETFILTER("Remaining Amount",'<>%1',0);
          VendorLedgEntry.SETFILTER("Document No.",DocNoFilter);
          VendorLedgEntry.SETFILTER("Due Date",DueDateFilter);
          InsertIntoDocEntry(
          DATABASE::"Vendor Ledger Entry",VendorLedgEntry.TABLECAPTION,VendorLedgEntry.COUNT,NewDueDate);
        END;
        IF FixedAsset.READPERMISSION THEN BEGIN
          FixedAsset.RESET;
          FixedAsset.SETCURRENTKEY("No.");
          FixedAsset.SETFILTER("No.",DocNoFilter);
          InsertIntoDocEntry(
          DATABASE::"Fixed Asset",FixedAsset.TABLECAPTION,FixedAsset.COUNT,NewDueDate);
        END;
        IF (GLBudgEntry.READPERMISSION) AND (NewAccountType = NewAccountType::"G/L Account") THEN BEGIN
          GLBudgEntry.RESET;
          GLBudgEntry.SETFILTER("G/L Account No.",DocNoFilter);
          GLBudgEntry.SETFILTER(Date,DueDateFilter);
          InsertIntoDocEntry(
          DATABASE::"G/L Budget Entry",GLBudgEntry.TABLECAPTION,GLBudgEntry.COUNT,NewDueDate);
        END;
        IF ServiceHeader.READPERMISSION THEN BEGIN
          ServiceHeader.RESET;
          ServiceHeader.SETFILTER("No.",DocNoFilter);
          ServiceHeader.SETFILTER("Posting Date",DueDateFilter);
          InsertIntoDocEntry(
          DATABASE::"Service Header",Text1106000010,ServiceHeader.COUNT,NewDueDate);
        END;

        DocExists := FIND('-');
        Rec := DocEntry;

        SetSource(0D,'','',0,'');
        IF DocExists THEN BEGIN
          IF (NoOfRecords(DATABASE::"Cust. Ledger Entry") + NoOfRecords(DATABASE::"Vendor Ledger Entry") <= 1) AND
             (NoOfRecords(DATABASE::"Sales Invoice Header") + NoOfRecords(DATABASE::"Sales Cr.Memo Header") +
              NoOfRecords(DATABASE::"Sales Shipment Header") + NoOfRecords(DATABASE::"Issued Reminder Header") +
              NoOfRecords(DATABASE::"Issued Fin. Charge Memo Header") + NoOfRecords(DATABASE::"Purch. Inv. Header") +
              NoOfRecords(DATABASE::"Purch. Cr. Memo Hdr.") + NoOfRecords(DATABASE::"Purch. Rcpt. Header") +
              NoOfRecords(DATABASE::"Fixed Asset") + NoOfRecords(DATABASE::"G/L Budget Entry") +
              NoOfRecords(DATABASE::"Service Header") <= 1)
          THEN BEGIN
            //Reading Ledger Entries...
            IF NoOfRecords(DATABASE::"Cust. Ledger Entry") = 1 THEN BEGIN
              CustLedgEntry.FIND('-');
              SetSource(
                CustLedgEntry."Due Date",FORMAT(CustLedgEntry."Document Type"),CustLedgEntry."Document No.",
                1,CustLedgEntry."Customer No.");
            END;
            IF NoOfRecords(DATABASE::"Sales Header") = 1 THEN BEGIN
              SalesHeader.FIND('-');
              SetSource(
                SalesHeader."Due Date",FORMAT("Table Name"),SalesHeader."No.",
                1,SalesHeader."Bill-to Customer No.");
            END;

            //Neutral Expenses
            IF NoOfRecords(DATABASE::"Vendor Ledger Entry") = 1 THEN BEGIN
              VendorLedgEntry.FIND('-');
              SetSource(
                VendorLedgEntry."Due Date",FORMAT(VendorLedgEntry."Document Type"),VendorLedgEntry."Document No.",
                2,VendorLedgEntry."Vendor No.");
            END;
            IF NoOfRecords(DATABASE::"Purchase Header") = 1 THEN BEGIN
              PurchHeader.FIND('-');
              SetSource(
                PurchHeader."Due Date",FORMAT("Table Name"),PurchHeader."No.",
                2,PurchHeader."Pay-to Vendor No.");
            END;
          END ELSE BEGIN
            IF DocNoFilter <> '' THEN
              IF DueDateFilter = '' THEN
                MESSAGE(Text1140006)
              ELSE
                MESSAGE(Text1140007);
          END;
        END ELSE
          IF DueDateFilter = '' THEN
            MESSAGE(Text1140008)
          ELSE
            MESSAGE(Text1140009);

        CurrForm.Show.ENABLED := DocExists;
        CurrForm.UPDATE(FALSE);
        DocExists := FIND('-');
        IF DocExists THEN
          CurrForm."Table Name".ACTIVATE;
        Window.CLOSE;
      END;
    END;

    LOCAL PROCEDURE InsertIntoDocEntry@1140002(DocTableID@1140000 : Integer;DocTableName@1140001 : Text[30];DocNoOfRecords@1140002 : Integer;DocumentDate@1140003 : Date);
    BEGIN
      IF DocNoOfRecords = 0 THEN
        EXIT;
      DocEntry.INIT;
      DocEntry."Entry No." := DocEntry."Entry No." + 1;
      DocEntry."Table ID" := DocTableID;
      DocEntry."Table Name" := DocTableName;
      DocEntry."No. of Records" := DocNoOfRecords;
      DocEntry."Due Date" := DocumentDate;
      DocEntry.INSERT;
    END;

    LOCAL PROCEDURE NoOfRecords@1140003(TableID@1140000 : Integer) : Integer;
    BEGIN
      DocEntry.SETRANGE("Table ID",TableID);
      IF NOT DocEntry.FIND('-') THEN
        DocEntry.INIT;
      DocEntry.SETRANGE("Table ID");
      EXIT(DocEntry."No. of Records");
    END;

    LOCAL PROCEDURE SetSource@1140004(DueDate@1140000 : Date;DocType2@1140001 : Text[50];DocumentNo@1140002 : Text[50];SourceType2@1140003 : Integer;SourceNo2@1140004 : Code[20]);
    BEGIN
      IF SourceType2 = 0 THEN BEGIN
        DebitType := '';
        SourceType := '';
        SourceNo := '';
        SourceName := '';
      END ELSE BEGIN
        DebitType := DocType2;
        SourceNo := SourceNo2;
        DocEntry.SETRANGE("Document No.",DocumentNo);
        DocEntry.SETRANGE("Due Date",DueDate);
        DocNoFilter := DocEntry.GETFILTER("Document No.");
        DueDateFilter := DocEntry.GETFILTER("Due Date");
        CASE SourceType2 OF
          1:
            BEGIN
              SourceType := Cust.TABLECAPTION;
              IF NOT Cust.GET(SourceNo) THEN
                Cust.INIT;
              SourceName := Cust.Name;
            END;
          2:
            BEGIN
              SourceType := Vend.TABLECAPTION;
              IF NOT Vend.GET(SourceNo) THEN
                Vend.INIT;
              SourceName := Vend.Name;
            END;
        END;
      END;
      CurrForm.DebitType.ENABLED := SourceType2 <> 0;
      CurrForm.SourceType.ENABLED := SourceType2 <> 0;
      CurrForm.SourceNo.ENABLED := SourceType2 <> 0;
      CurrForm.SourceName.ENABLED := SourceType2 <> 0;
    END;

    LOCAL PROCEDURE ShowRecords@1140005();
    BEGIN
      DocEntry := Rec;
      IF DocEntry.FIND THEN
        Rec := DocEntry;

      WITH DocEntry DO
        CASE "Table ID" OF
          DATABASE::"Sales Header":
            FORM.RUN(0,SalesHeader);
          DATABASE::"Purchase Header":
            FORM.RUN(0,PurchHeader);
          DATABASE::"G/L Account":
            FORM.RUN(0,GLAcc);
          DATABASE::"Cust. Ledger Entry":
            FORM.RUN(0,CustLedgEntry);
          DATABASE::"Vendor Ledger Entry":
            FORM.RUN(0,VendorLedgEntry);
          DATABASE::"Neutral Payments":
            BEGIN
              IF NeutralPayments.FIND('-') THEN
                FORM.RUN(0,NeutralPayments)
              ELSE
                FORM.RUN(0,NeutralPayments2);
            END;
          DATABASE::"Fixed Asset":
            FORM.RUN(0,FixedAsset);
          DATABASE::"G/L Budget Entry":
            FORM.RUN(0,GLBudgEntry);
          DATABASE::"Service Header":
            FORM.RUN(0,ServiceHeader);
        END;
    END;

    LOCAL PROCEDURE SetPostingDate@1140006(DueDate@1140000 : Text[250]);
    BEGIN
      IF ApplicationManagement.MakeDateFilter(DueDate) = 0 THEN;
      DocEntry.SETFILTER("Due Date",DueDate);
      DueDateFilter := DocEntry.GETFILTER("Due Date");
    END;

    LOCAL PROCEDURE SetDocNo@1140007(DocumentNo@1140000 : Text[250]);
    BEGIN
      DocEntry.SETFILTER("Document No.",DocumentNo);
      DocNoFilter := DocEntry.GETFILTER("Document No.");
      DueDateFilter := DocEntry.GETFILTER("Due Date");
    END;

    LOCAL PROCEDURE ClearSourceInfo@1140008();
    BEGIN
      IF DocExists THEN BEGIN
        DocExists := FALSE;
        DocEntry.DELETEALL;
        CurrForm.Show.ENABLED := FALSE;
        SetSource(0D,'','',0,'');
        CurrForm.UPDATE(FALSE);
      END;
    END;

    LOCAL PROCEDURE FindPush@1140009();
    BEGIN
      FindRecords;
    END;

    BEGIN
    END.
  }
}
