OBJECT Form 9224 _Purch. Analysis by Dim
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=NAVW16.00.01;
  }
  PROPERTIES
  {
    Width=17380;
    Height=4400;
    CaptionML=ENU=Purch. Analysis by Dimensions;
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    LinksAllowed=No;
    SourceTable=Table367;
    DataCaptionExpr=CurrentItemAnalysisViewCode;
    OnOpenForm=BEGIN
                 IF ValueType = 0 THEN
                   ValueType := ValueType::"Cost Amount";

                 CurrentAnalysisArea := CurrentAnalysisArea::Purchase;

                 GLSetup.GET;
                 NormalFormatString := Text001 + GLSetup."Amount Decimal Places" + Text002;

                 ItemAnalysisMgt.AnalysisViewSelection(
                   CurrentAnalysisArea,CurrentItemAnalysisViewCode,ItemAnalysisView,ItemStatisticsBuffer,
                   Dim1Filter,Dim2Filter,Dim3Filter);

                 IF (NewItemAnalysisCode <> '') AND (NewItemAnalysisCode <> CurrentItemAnalysisViewCode) THEN BEGIN
                   CurrentItemAnalysisViewCode := NewItemAnalysisCode;
                   AVBreakdownBuffer.DELETEALL;
                   ItemAnalysisMgt.CheckAnalysisView(CurrentAnalysisArea,CurrentItemAnalysisViewCode,ItemAnalysisView);
                   ItemAnalysisMgt.SetItemAnalysisView(
                     CurrentAnalysisArea,CurrentItemAnalysisViewCode,ItemAnalysisView,ItemStatisticsBuffer,
                     Dim1Filter,Dim2Filter,Dim3Filter);
                 END;

                 ItemAnalysisMgt.SetLineAndColDim(
                   ItemAnalysisView,LineDimCode,LineDimOption,ColumnDimCode,ColumnDimOption);
                 UpdateFilterFields;

                 FindPeriod('');
                 CurrForm.UPDATECONTROLS;

                 NoOfColumns := 32;
                 SetPoints(MATRIX_SetWanted::Initial);
               END;

    OnFindRecord=BEGIN
                   EXIT(
                     ItemAnalysisMgt.FindRec(
                       ItemAnalysisView,LineDimOption,Rec,Which,
                       ItemFilter,LocationFilter,PeriodType,DateFilter,PeriodInitialized,InternalDateFilter,
                       Dim1Filter,Dim2Filter,Dim3Filter));
                 END;

    OnNextRecord=BEGIN
                   EXIT(
                     ItemAnalysisMgt.NextRec(
                       ItemAnalysisView,LineDimOption,Rec,Steps,
                       ItemFilter,LocationFilter,PeriodType,DateFilter,
                       Dim1Filter,Dim2Filter,Dim3Filter));
                 END;

  }
  CONTROLS
  {
    { 1   ;TabControl   ;220  ;220  ;16940;3190 ;HorzGlue=Both;
                                                 VertGlue=Top;
                                                 PageNamesML=ENU=General,Filters,Options,Matrix Options }
    { 5   ;TextBox      ;3850 ;990  ;2750 ;440  ;ParentControl=1;
                                                 InPage=0;
                                                 CaptionML=ENU=Analysis View Code;
                                                 SourceExpr=CurrentItemAnalysisViewCode;
                                                 OnValidate=BEGIN
                                                              AVBreakdownBuffer.DELETEALL;
                                                              ItemAnalysisMgt.CheckAnalysisView(CurrentAnalysisArea,CurrentItemAnalysisViewCode,ItemAnalysisView)
                                                            END;

                                                 OnLookup=BEGIN
                                                            ItemAnalysisMgt.LookupItemAnalysisView(
                                                              CurrentAnalysisArea,CurrentItemAnalysisViewCode,ItemAnalysisView,ItemStatisticsBuffer,
                                                              Dim1Filter,Dim2Filter,Dim3Filter);
                                                            ItemAnalysisMgt.SetLineAndColDim(
                                                              ItemAnalysisView,LineDimCode,LineDimOption,ColumnDimCode,ColumnDimOption);
                                                            UpdateFilterFields;
                                                            CurrForm.UPDATE(FALSE);
                                                            CurrForm.UPDATECONTROLS;
                                                          END;

                                                 OnAfterValidate=BEGIN
                                                                   ItemAnalysisMgt.SetItemAnalysisView(
                                                                     CurrentAnalysisArea,CurrentItemAnalysisViewCode,ItemAnalysisView,ItemStatisticsBuffer,
                                                                     Dim1Filter,Dim2Filter,Dim3Filter);
                                                                   ItemAnalysisMgt.SetLineAndColDim(
                                                                     ItemAnalysisView,LineDimCode,LineDimOption,ColumnDimCode,ColumnDimOption);
                                                                   UpdateFilterFields;
                                                                   CurrForm.UPDATE(FALSE);
                                                                   CurrForm.UPDATECONTROLS;
                                                                 END;
                                                                  }
    { 7   ;Label        ;440  ;990  ;3300 ;440  ;ParentControl=5 }
    { 6   ;TextBox      ;3850 ;1650 ;2750 ;440  ;ParentControl=1;
                                                 InPage=0;
                                                 CaptionML=ENU=Show as Lines;
                                                 SourceExpr=LineDimCode;
                                                 OnValidate=BEGIN
                                                              AVBreakdownBuffer.DELETEALL;
                                                              IF (UPPERCASE(LineDimCode) = UPPERCASE(ColumnDimCode)) AND (LineDimCode <> '') THEN BEGIN
                                                                ColumnDimCode := '';
                                                                ItemAnalysisMgt.ValidateColumnDimCode(
                                                                  ItemAnalysisView,ColumnDimCode,ColumnDimOption,LineDimOption,
                                                                  InternalDateFilter,DateFilter,ItemStatisticsBuffer,PeriodInitialized);
                                                              END;
                                                              ItemAnalysisMgt.ValidateLineDimCode(
                                                                ItemAnalysisView,LineDimCode,LineDimOption,ColumnDimOption,
                                                                InternalDateFilter,DateFilter,ItemStatisticsBuffer,PeriodInitialized);
                                                              IF LineDimOption = LineDimOption::Period THEN
                                                                SETCURRENTKEY("Period Start")
                                                              ELSE
                                                                SETCURRENTKEY(Code);
                                                            END;

                                                 OnLookup=VAR
                                                            NewCode@1002 : Text[30];
                                                          BEGIN
                                                            NewCode := ItemAnalysisMgt.GetDimSelection(LineDimCode,ItemAnalysisView);
                                                            IF NewCode <> LineDimCode THEN BEGIN
                                                              Text := NewCode;
                                                              EXIT(TRUE);
                                                            END;
                                                          END;

                                                 OnAfterValidate=BEGIN
                                                                   CurrForm.UPDATE(FALSE);
                                                                 END;
                                                                  }
    { 8   ;Label        ;440  ;1650 ;3300 ;440  ;ParentControl=6 }
    { 9   ;TextBox      ;3850 ;2200 ;2750 ;440  ;ParentControl=1;
                                                 InPage=0;
                                                 CaptionML=ENU=Show as Columns;
                                                 SourceExpr=ColumnDimCode;
                                                 OnValidate=BEGIN
                                                              AVBreakdownBuffer.DELETEALL;
                                                              IF (UPPERCASE(LineDimCode) = UPPERCASE(ColumnDimCode)) AND (LineDimCode <> '') THEN BEGIN
                                                                LineDimCode := '';
                                                                ItemAnalysisMgt.ValidateLineDimCode(
                                                                  ItemAnalysisView,LineDimCode,LineDimOption,ColumnDimOption,
                                                                  InternalDateFilter,DateFilter,ItemStatisticsBuffer,PeriodInitialized);
                                                              END;
                                                              ItemAnalysisMgt.ValidateColumnDimCode(
                                                                ItemAnalysisView,ColumnDimCode,ColumnDimOption,LineDimOption,
                                                                InternalDateFilter,DateFilter,ItemStatisticsBuffer,PeriodInitialized);
                                                              SetPoints(MATRIX_SetWanted::Initial);
                                                            END;

                                                 OnLookup=VAR
                                                            NewCode@1002 : Text[30];
                                                          BEGIN
                                                            NewCode := ItemAnalysisMgt.GetDimSelection(ColumnDimCode,ItemAnalysisView);
                                                            IF NewCode <> ColumnDimCode THEN BEGIN
                                                              Text := NewCode;
                                                              EXIT(TRUE);
                                                            END;
                                                          END;

                                                 OnAfterValidate=BEGIN
                                                                   CurrForm.UPDATE(FALSE);
                                                                 END;
                                                                  }
    { 10  ;Label        ;440  ;2200 ;3300 ;440  ;ParentControl=9 }
    { 47  ;TextBox      ;12980;990  ;2750 ;440  ;ParentControl=1;
                                                 InPage=0;
                                                 CaptionML=ENU=Show Value As;
                                                 OptionCaptionML=ENU=,Cost Amount,Quantity;
                                                 SourceExpr=ValueType;
                                                 OnValidate=BEGIN
                                                              AVBreakdownBuffer.DELETEALL;
                                                            END;
                                                             }
    { 48  ;Label        ;9570 ;990  ;3300 ;440  ;ParentControl=47 }
    { 30  ;TextBox      ;12980;1540 ;2750 ;440  ;Name=Dim2Filter;
                                                 ParentControl=1;
                                                 InPage=1;
                                                 CaptionML=ENU=Dimension 2 Filter;
                                                 ClearOnLookup=No;
                                                 SourceExpr=Dim2Filter;
                                                 CaptionClass=ItemAnalysisMgt.GetCaptionClass(2,ItemAnalysisView);
                                                 OnValidate=BEGIN
                                                              SetPoints(MATRIX_SetWanted::Initial);
                                                            END;

                                                 OnLookup=BEGIN
                                                            EXIT(ItemAnalysisMgt.LookUpDimFilter(ItemAnalysisView."Dimension 2 Code",Text));
                                                          END;

                                                 OnAfterValidate=BEGIN
                                                                   AVBreakdownBuffer.DELETEALL;
                                                                   CurrForm.UPDATE;
                                                                   SetPoints(MATRIX_SetWanted::Initial);
                                                                 END;
                                                                  }
    { 34  ;TextBox      ;12980;990  ;2750 ;440  ;Name=Dim1Filter;
                                                 ParentControl=1;
                                                 InPage=1;
                                                 CaptionML=ENU=Dimension 1 Filter;
                                                 ClearOnLookup=No;
                                                 SourceExpr=Dim1Filter;
                                                 CaptionClass=ItemAnalysisMgt.GetCaptionClass(1,ItemAnalysisView);
                                                 OnValidate=BEGIN
                                                              SetPoints(MATRIX_SetWanted::Initial);
                                                            END;

                                                 OnLookup=BEGIN
                                                            EXIT(ItemAnalysisMgt.LookUpDimFilter(ItemAnalysisView."Dimension 1 Code",Text));
                                                          END;

                                                 OnAfterValidate=BEGIN
                                                                   AVBreakdownBuffer.DELETEALL;
                                                                   CurrForm.UPDATE;
                                                                   SetPoints(MATRIX_SetWanted::Initial);
                                                                 END;
                                                                  }
    { 46  ;TextBox      ;12980;2090 ;2750 ;440  ;Name=Dim3Filter;
                                                 ParentControl=1;
                                                 InPage=1;
                                                 CaptionML=ENU=Dimension 3 Filter;
                                                 ClearOnLookup=No;
                                                 SourceExpr=Dim3Filter;
                                                 CaptionClass=ItemAnalysisMgt.GetCaptionClass(3,ItemAnalysisView);
                                                 OnValidate=BEGIN
                                                              SetPoints(MATRIX_SetWanted::Initial);
                                                            END;

                                                 OnLookup=BEGIN
                                                            EXIT(ItemAnalysisMgt.LookUpDimFilter(ItemAnalysisView."Dimension 3 Code",Text));
                                                          END;

                                                 OnAfterValidate=BEGIN
                                                                   AVBreakdownBuffer.DELETEALL;
                                                                   CurrForm.UPDATE;
                                                                   SetPoints(MATRIX_SetWanted::Initial);
                                                                 END;
                                                                  }
    { 38  ;TextBox      ;3740 ;1540 ;2750 ;440  ;ParentControl=1;
                                                 InPage=1;
                                                 CaptionML=ENU=Item Filter;
                                                 ClearOnLookup=No;
                                                 SourceExpr=ItemFilter;
                                                 OnValidate=BEGIN
                                                              SetPoints(MATRIX_SetWanted::Initial);
                                                            END;

                                                 OnLookup=VAR
                                                            ItemList@1002 : Form 31;
                                                          BEGIN
                                                            ItemList.LOOKUPMODE(TRUE);
                                                            IF ItemList.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                                              Text := ItemList.GetSelectionFilter;
                                                              EXIT(TRUE);
                                                            END;
                                                          END;

                                                 OnAfterValidate=BEGIN
                                                                   AVBreakdownBuffer.DELETEALL;
                                                                   ItemStatisticsBuffer.SETFILTER("Item Filter",ItemFilter);
                                                                   CurrForm.UPDATE(FALSE);
                                                                   SetPoints(MATRIX_SetWanted::Initial);
                                                                 END;
                                                                  }
    { 39  ;Label        ;330  ;1540 ;3300 ;440  ;ParentControl=38 }
    { 31  ;Label        ;9570 ;990  ;3300 ;440  ;ParentControl=34;
                                                 InPage=1 }
    { 33  ;Label        ;9570 ;1540 ;3300 ;440  ;ParentControl=30;
                                                 InPage=1 }
    { 44  ;Label        ;9570 ;2090 ;3300 ;440  ;ParentControl=46;
                                                 InPage=1 }
    { 13  ;TextBox      ;3740 ;2090 ;2750 ;440  ;ParentControl=1;
                                                 InPage=1;
                                                 CaptionML=ENU=Location Filter;
                                                 ClearOnLookup=No;
                                                 SourceExpr=LocationFilter;
                                                 OnLookup=VAR
                                                            LocationList@1002 : Form 15;
                                                          BEGIN
                                                            LocationList.LOOKUPMODE(TRUE);
                                                            IF LocationList.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                                              Text := LocationList.GetSelectionFilter;
                                                              EXIT(TRUE);
                                                            END;
                                                          END;

                                                 OnAfterValidate=BEGIN
                                                                   AVBreakdownBuffer.DELETEALL;
                                                                   ItemStatisticsBuffer.SETFILTER("Location Filter",LocationFilter);

                                                                   CurrForm.UPDATE(FALSE);
                                                                   SetPoints(MATRIX_SetWanted::Initial);
                                                                 END;
                                                                  }
    { 14  ;Label        ;330  ;2090 ;3300 ;440  ;ParentControl=13 }
    { 17  ;TextBox      ;3740 ;2640 ;2750 ;440  ;ParentControl=1;
                                                 InPage=1;
                                                 CaptionML=ENU=Budget Filter;
                                                 SourceExpr=BudgetFilter;
                                                 OnValidate=BEGIN
                                                              SetPoints(MATRIX_SetWanted::Initial);
                                                            END;

                                                 OnLookup=VAR
                                                            ItemBudgetName@1000 : Record 7132;
                                                          BEGIN
                                                            ItemBudgetName.FILTERGROUP := 2;
                                                            ItemBudgetName.SETRANGE("Analysis Area",CurrentAnalysisArea);
                                                            ItemBudgetName.FILTERGROUP := 0;
                                                            IF FORM.RUNMODAL(0,ItemBudgetName) = ACTION::LookupOK THEN BEGIN
                                                              Text := ItemBudgetName.Name;
                                                              EXIT(TRUE);
                                                            END;
                                                          END;

                                                 OnAfterValidate=BEGIN
                                                                   AVBreakdownBuffer.DELETEALL;
                                                                   ItemStatisticsBuffer.SETFILTER("Budget Filter",BudgetFilter);
                                                                   CurrForm.UPDATE(FALSE);
                                                                 END;
                                                                  }
    { 29  ;Label        ;330  ;2640 ;3300 ;440  ;ParentControl=17 }
    { 15  ;TextBox      ;3740 ;990  ;2750 ;440  ;ParentControl=1;
                                                 InPage=1;
                                                 CaptionML=ENU=Date Filter;
                                                 SourceExpr=DateFilter;
                                                 OnValidate=VAR
                                                              ApplicationManagement@1002 : Codeunit 1;
                                                            BEGIN
                                                              IF ApplicationManagement.MakeDateFilter(DateFilter) = 0 THEN;
                                                              ItemStatisticsBuffer.SETFILTER("Date Filter",DateFilter);
                                                              DateFilter := ItemStatisticsBuffer.GETFILTER("Date Filter");
                                                              InternalDateFilter := DateFilter;
                                                              SetPoints(MATRIX_SetWanted::Initial);
                                                            END;

                                                 OnAfterValidate=BEGIN
                                                                   AVBreakdownBuffer.DELETEALL;
                                                                   CurrForm.UPDATE;
                                                                 END;
                                                                  }
    { 12  ;Label        ;330  ;990  ;3300 ;440  ;ParentControl=15 }
    { 4   ;CheckBox     ;3850 ;2090 ;440  ;440  ;ParentControl=1;
                                                 InPage=2;
                                                 ShowCaption=No;
                                                 CaptionML=ENU=Show Column Name;
                                                 SourceExpr=ShowColumnName;
                                                 OnAfterValidate=BEGIN
                                                                   SetPoints(MATRIX_SetWanted::Same);
                                                                 END;
                                                                  }
    { 3   ;Label        ;440  ;2090 ;3300 ;440  ;ParentControl=4 }
    { 18  ;TextBox      ;3850 ;1540 ;2750 ;440  ;ParentControl=1;
                                                 InPage=2;
                                                 CaptionML=ENU=Rounding Factor;
                                                 OptionCaptionML=ENU=None,1,1000,1000000;
                                                 SourceExpr=RoundingFactor }
    { 28  ;Label        ;440  ;1540 ;3300 ;440  ;ParentControl=18 }
    { 32  ;TextBox      ;3850 ;990  ;2750 ;440  ;ParentControl=1;
                                                 InPage=2;
                                                 CaptionML=ENU=Show;
                                                 OptionCaptionML=ENU=Actual Amounts,Budgeted Amounts,Variance,Variance%,Index%;
                                                 SourceExpr=ShowActualBudget;
                                                 OnValidate=BEGIN
                                                              AVBreakdownBuffer.DELETEALL;
                                                            END;
                                                             }
    { 35  ;Label        ;440  ;990  ;3300 ;440  ;ParentControl=32 }
    { 50  ;CheckBox     ;3850 ;2640 ;440  ;440  ;ParentControl=1;
                                                 InPage=2;
                                                 ShowCaption=No;
                                                 CaptionML=ENU=Show Opposite Sign;
                                                 SourceExpr=ShowOppositeSign;
                                                 OnValidate=BEGIN
                                                              AVBreakdownBuffer.DELETEALL;
                                                            END;
                                                             }
    { 51  ;Label        ;440  ;2640 ;3300 ;440  ;ParentControl=50;
                                                 MultiLine=Yes }
    { 19  ;TextBox      ;3850 ;990  ;2750 ;440  ;ParentControl=1;
                                                 InPage=3;
                                                 CaptionML=ENU=View by;
                                                 OptionCaptionML=ENU=Day,Week,Month,Quarter,Year,Accounting Period;
                                                 SourceExpr=PeriodType;
                                                 OnValidate=BEGIN
                                                              FindPeriod('');
                                                              SetPoints(MATRIX_SetWanted::Initial);
                                                            END;
                                                             }
    { 2   ;Label        ;440  ;990  ;3300 ;440  ;ParentControl=19 }
    { 20  ;TextBox      ;3850 ;1650 ;2750 ;440  ;Name=ColumnSet;
                                                 Editable=No;
                                                 ParentControl=1;
                                                 InPage=3;
                                                 CaptionML=ENU=Column Set;
                                                 SourceExpr=MATRIX_CaptionRange }
    { 11  ;Label        ;440  ;1650 ;3300 ;440  ;ParentControl=20;
                                                 InPage=3 }
    { 21  ;CommandButton;6710 ;1540 ;550  ;550  ;VertGlue=Bottom;
                                                 FocusOnClick=No;
                                                 ParentControl=20;
                                                 InPage=3;
                                                 ShowCaption=No;
                                                 BitmapPos=Center;
                                                 AutoRepeat=Yes;
                                                 Bitmap=15;
                                                 CaptionML=ENU=Previous Set;
                                                 ToolTipML=ENU=Previous Set;
                                                 OnPush=BEGIN
                                                          SetPoints(MATRIX_SetWanted::Previous);
                                                          CurrForm.UPDATECONTROLS;
                                                        END;
                                                         }
    { 22  ;CommandButton;7260 ;1540 ;550  ;550  ;VertGlue=Bottom;
                                                 FocusOnClick=No;
                                                 ParentControl=20;
                                                 InPage=3;
                                                 ShowCaption=No;
                                                 BitmapPos=Center;
                                                 AutoRepeat=Yes;
                                                 Bitmap=16;
                                                 CaptionML=ENU=Next Set;
                                                 ToolTipML=ENU=Next Set;
                                                 OnPush=BEGIN
                                                          SetPoints(MATRIX_SetWanted::Next);
                                                          CurrForm.UPDATECONTROLS;
                                                        END;
                                                         }
    { 23  ;CommandButton;14960;3630 ;2200 ;550  ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 PushAction=FormHelp }
    { 16  ;CommandButton;10120;3630 ;2200 ;550  ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 CaptionML=ENU=&Show Matrix;
                                                 OnPush=BEGIN
                                                          CLEAR(PurchAnalysisByDimMatrix);
                                                          CLEAR(DimCodeBufferColumn);
                                                          ShowMatrix;
                                                        END;
                                                         }
    { 27  ;MenuButton   ;12540;3630 ;2200 ;550  ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 CaptionML=ENU=&Actions;
                                                 Menu=MENUITEMS
                                                 {
                                                   { ID=36;
                                                     CaptionML=ENU=Reverse Lines and Columns;
                                                     OnPush=VAR
                                                              TempDimCode@1001 : Text[30];
                                                            BEGIN
                                                              TempDimCode := ColumnDimCode;
                                                              ColumnDimCode := LineDimCode;
                                                              LineDimCode := TempDimCode;
                                                              ItemAnalysisMgt.ValidateLineDimCode(
                                                                ItemAnalysisView,LineDimCode,LineDimOption,ColumnDimOption,
                                                                InternalDateFilter,DateFilter,ItemStatisticsBuffer,PeriodInitialized);
                                                              ItemAnalysisMgt.ValidateColumnDimCode(
                                                                ItemAnalysisView,ColumnDimCode,ColumnDimOption,LineDimOption,
                                                                InternalDateFilter,DateFilter,ItemStatisticsBuffer,PeriodInitialized);
                                                              SetPoints(MATRIX_SetWanted::Initial);
                                                            END;
                                                             }
                                                 }
                                                  }
  }
  CODE
  {
    VAR
      GLSetup@1025 : Record 98;
      ItemAnalysisView@1011 : Record 7152;
      ItemStatisticsBuffer@1002 : Record 5821;
      AVBreakdownBuffer@1028 : TEMPORARY Record 375;
      DimCodeBufferColumn@1034 : Record 367;
      PurchAnalysisByDimMatrix@1000 : Form 9225;
      ItemAnalysisMgt@1038 : Codeunit 7153;
      MatrixMgt@1031 : Codeunit 9200;
      CurrentItemAnalysisViewCode@1016 : Code[10];
      CurrentAnalysisArea@1001 : 'Sales,Purchase,Inventory';
      ValueType@1004 : ',Cost Amount,Sales Quantity';
      ShowActualBudget@1027 : 'Actual Amounts,Budgeted Amounts,Variance,Variance%,Index%';
      RoundingFactor@1005 : 'None,1,1000,1000000';
      LineDimOption@1007 : 'Item,Period,Location,Dimension 1,Dimension 2,Dimension 3';
      ColumnDimOption@1006 : 'Item,Period,Location,Dimension 1,Dimension 2,Dimension 3';
      PeriodType@1008 : 'Day,Week,Month,Quarter,Year,Accounting Period';
      BudgetFilter@1026 : Code[250];
      LineDimCode@1020 : Text[30];
      ColumnDimCode@1019 : Text[30];
      InternalDateFilter@1014 : Text[30];
      NormalFormatString@1018 : Text[80];
      MatrixColumnCaptions@1022 : ARRAY [32] OF Text[1024];
      PeriodInitialized@1015 : Boolean;
      ShowColumnName@1029 : Boolean;
      ShowOppositeSign@1030 : Boolean;
      Text001@1024 : TextConst 'ENU=<Precision,';
      Text002@1023 : TextConst 'ENU=><Standard Format,0>';
      Steps@1033 : Integer;
      Dim1Filter1@1017 : Code[250];
      Dim2Filter1@1012 : Code[250];
      Dim3Filter1@1010 : Code[250];
      ItemFilter1@1009 : Code[250];
      LocationFilter1@1003 : Code[250];
      DateFilter1@1013 : Text[30];
      DateFilter@1021 : Text[30];
      Dim1Filter@1043 : Code[250];
      Dim2Filter@1042 : Code[250];
      Dim3Filter@1041 : Code[250];
      ItemFilter@1040 : Code[250];
      LocationFilter@1039 : Code[250];
      FirstColumn@1044 : Text[1024];
      LastColumn@1045 : Text[1024];
      FirstColumnDate@1035 : Date;
      LastColumnDate@1032 : Date;
      NoOfColumns@1047 : Integer;
      MATRIX_PKFirstRecInCurrSet@1036 : Text[100];
      MATRIX_CaptionRange@1046 : Text[50];
      MATRIX_CurrSetLength@1048 : Integer;
      MATRIX_SetWanted@1049 : 'Initial,Previous,Same,Next';
      NewItemAnalysisCode@1037 : Code[10];

    LOCAL PROCEDURE FindPeriod@2(SearchText@1000 : Code[10]);
    VAR
      Item@1003 : Record 27;
      Calendar@1001 : Record 2000000007;
      PeriodFormMgt@1002 : Codeunit 359;
    BEGIN
      IF DateFilter <> '' THEN BEGIN
        Calendar.SETFILTER("Period Start",DateFilter);
        IF NOT PeriodFormMgt.FindDate('+',Calendar,PeriodType) THEN
          PeriodFormMgt.FindDate('+',Calendar,PeriodType::Day);
        Calendar.SETRANGE("Period Start");
      END;
      PeriodFormMgt.FindDate(SearchText,Calendar,PeriodType);
      Item.SETRANGE("Date Filter",Calendar."Period Start",Calendar."Period End");
      IF Item.GETRANGEMIN("Date Filter") = Item.GETRANGEMAX("Date Filter") THEN
        Item.SETRANGE("Date Filter",Item.GETRANGEMIN("Date Filter"));
      InternalDateFilter := Item.GETFILTER("Date Filter");
      IF (LineDimOption <> LineDimOption::Period) AND (ColumnDimOption <> ColumnDimOption::Period) THEN
        DateFilter := InternalDateFilter;
      AVBreakdownBuffer.DELETEALL;
    END;

    LOCAL PROCEDURE UpdateFilterFields@4();
    VAR
      ItemAnalysisViewFilter@1000 : Record 7153;
    BEGIN
      ItemFilter := ItemAnalysisView."Item Filter";
      Dim1Filter := '';
      Dim2Filter := '';
      Dim3Filter := '';

      CurrForm.Dim1Filter.ENABLED := ItemAnalysisView."Dimension 1 Code" <> '';
      CurrForm.Dim2Filter.ENABLED := ItemAnalysisView."Dimension 2 Code" <> '';
      CurrForm.Dim3Filter.ENABLED := ItemAnalysisView."Dimension 3 Code" <> '';

      IF CurrForm.Dim1Filter.ENABLED THEN
        IF ItemAnalysisViewFilter.GET(
             ItemAnalysisView."Analysis Area",ItemAnalysisView.Code,ItemAnalysisView."Dimension 1 Code")
        THEN
          Dim1Filter := ItemAnalysisViewFilter."Dimension Value Filter";

      IF CurrForm.Dim2Filter.ENABLED THEN
        IF ItemAnalysisViewFilter.GET(
             ItemAnalysisView."Analysis Area",ItemAnalysisView.Code,ItemAnalysisView."Dimension 2 Code")
        THEN
          Dim2Filter := ItemAnalysisViewFilter."Dimension Value Filter";

      IF CurrForm.Dim3Filter.ENABLED THEN
        IF ItemAnalysisViewFilter.GET(
             ItemAnalysisView."Analysis Area",ItemAnalysisView.Code,ItemAnalysisView."Dimension 3 Code")
        THEN
          Dim3Filter := ItemAnalysisViewFilter."Dimension Value Filter";
    END;

    PROCEDURE SetPoints@5(SetWanted@1001 : 'Initial,Previous,Same,Next');
    VAR
      PeriodFormMgt@1000 : Codeunit 359;
      MATRIX_PeriodRecords@1002 : ARRAY [32] OF Record 2000000007;
    BEGIN
      CASE ColumnDimOption OF
        ColumnDimOption::Item:
          SetPointsItem(SetWanted);
        ColumnDimOption::Location:
          SetPointsLocation(SetWanted);
        ColumnDimOption::Period:
          BEGIN
            FirstColumn := '';
            LastColumn := '';
            MatrixMgt.GeneratePeriodMatrixData(SetWanted,NoOfColumns,ShowColumnName,PeriodType,DateFilter,MATRIX_PKFirstRecInCurrSet,
              MatrixColumnCaptions,MATRIX_CaptionRange,MATRIX_CurrSetLength,MATRIX_PeriodRecords);
            IF MATRIX_CurrSetLength > 0 THEN BEGIN
              FirstColumn := FORMAT(MATRIX_PeriodRecords[1]."Period Start");
              LastColumn := FORMAT(MATRIX_PeriodRecords[MATRIX_CurrSetLength]."Period End");
            END;
          END;
        ColumnDimOption::"Dimension 1":
          SetPointsDim(ItemAnalysisView."Dimension 1 Code",Dim1Filter,SetWanted);
        ColumnDimOption::"Dimension 2":
          SetPointsDim(ItemAnalysisView."Dimension 2 Code",Dim2Filter,SetWanted);
        ColumnDimOption::"Dimension 3":
          SetPointsDim(ItemAnalysisView."Dimension 3 Code",Dim3Filter,SetWanted);
      END;
    END;

    LOCAL PROCEDURE SetPointsItem@22(SetWanted@1001 : 'Initial,Previous,Same,Next');
    VAR
      Item@1013 : Record 27;
      RecRef@1000 : RecordRef;
      CaptionFieldNo@1002 : Integer;
    BEGIN
      CLEAR(MatrixColumnCaptions);
      FirstColumn := '';
      LastColumn := '';
      Item.SETFILTER("No.",ItemFilter);
      RecRef.GETTABLE(Item);
      RecRef.SETTABLE(Item);

      IF ShowColumnName THEN
        CaptionFieldNo := Item.FIELDNO(Description)
      ELSE
        CaptionFieldNo := Item.FIELDNO("No.");

      MatrixMgt.GenerateMatrixData(RecRef,SetWanted,NoOfColumns,CaptionFieldNo,MATRIX_PKFirstRecInCurrSet,MatrixColumnCaptions,
        MATRIX_CaptionRange,MATRIX_CurrSetLength);

      IF MATRIX_CurrSetLength > 0 THEN BEGIN
        FirstColumn := MatrixColumnCaptions[1];
        LastColumn := MatrixColumnCaptions[MATRIX_CurrSetLength];
      END;
    END;

    LOCAL PROCEDURE SetPointsLocation@6(SetWanted@1002 : 'Initial,Previous,Same,Next');
    VAR
      Location@1013 : Record 14;
      RecRef@1000 : RecordRef;
      CaptionFieldNo@1001 : Integer;
    BEGIN
      CLEAR(MatrixColumnCaptions);
      FirstColumn := '';
      LastColumn := '';
      Location.SETFILTER(Code,LocationFilter);
      RecRef.GETTABLE(Location);
      RecRef.SETTABLE(Location);

      IF ShowColumnName THEN
        CaptionFieldNo := Location.FIELDNO(Name)
      ELSE
        CaptionFieldNo := Location.FIELDNO(Code);

      MatrixMgt.GenerateMatrixData(RecRef,SetWanted,NoOfColumns,CaptionFieldNo,MATRIX_PKFirstRecInCurrSet,MatrixColumnCaptions,
        MATRIX_CaptionRange,MATRIX_CurrSetLength);

      IF MATRIX_CurrSetLength > 0 THEN BEGIN
        FirstColumn := MatrixColumnCaptions[1];
        LastColumn := MatrixColumnCaptions[MATRIX_CurrSetLength];
      END;
    END;

    LOCAL PROCEDURE SetPointsDim@17(DimensionCode@1003 : Code[20];DimFilter@1002 : Code[250];SetWanted@1006 : 'Initial,Previous,Same,Next');
    VAR
      MatrixMgt@1000 : Codeunit 9200;
      DimVal@1001 : Record 349;
      RecRef@1004 : RecordRef;
      CaptionFieldNo@1005 : Integer;
    BEGIN
      CLEAR(MatrixColumnCaptions);
      FirstColumn := '';
      LastColumn := '';
      DimVal.SETRANGE("Dimension Code",DimensionCode);
      IF DimFilter <> '' THEN
        DimVal.SETFILTER(Code,DimFilter);
      RecRef.GETTABLE(DimVal);
      RecRef.SETTABLE(DimVal);

      IF ShowColumnName THEN
        CaptionFieldNo := DimVal.FIELDNO(Name)
      ELSE
        CaptionFieldNo := DimVal.FIELDNO(Code);

      MatrixMgt.GenerateMatrixData(RecRef,SetWanted,NoOfColumns,CaptionFieldNo,MATRIX_PKFirstRecInCurrSet,MatrixColumnCaptions,
        MATRIX_CaptionRange,MATRIX_CurrSetLength);

      IF MATRIX_CurrSetLength > 0 THEN BEGIN
        FirstColumn := MatrixColumnCaptions[1];
        LastColumn := MatrixColumnCaptions[MATRIX_CurrSetLength];
      END;
    END;

    LOCAL PROCEDURE FillColumnsItem@9(VAR MatrixColumnCaptions@1009 : ARRAY [32] OF Text[30]) : Boolean;
    VAR
      Item@1013 : Record 27;
      i@1004 : Integer;
    BEGIN
      CLEAR(MatrixColumnCaptions);
      i := 1;
      Item.SETFILTER("No.",ItemFilter1);

      IF Item.FIND('-') THEN BEGIN
        REPEAT
          IF ShowColumnName THEN
            MatrixColumnCaptions[i] := Item.Description
          ELSE
            MatrixColumnCaptions[i] := Item."No.";
          i := i + 1;
        UNTIL (Item.NEXT = 0) OR (i > ARRAYLEN(MatrixColumnCaptions));
        EXIT(TRUE);
      END;
      EXIT(FALSE);
    END;

    LOCAL PROCEDURE FillColumnsLocation@11(VAR MatrixColumnCaptions@1009 : ARRAY [32] OF Text[30]) : Boolean;
    VAR
      Location@1013 : Record 14;
      i@1004 : Integer;
    BEGIN
      CLEAR(MatrixColumnCaptions);
      i := 1;
      Location.SETFILTER(Code,LocationFilter1);

      IF Location.FIND('-') THEN BEGIN
        REPEAT
          IF ShowColumnName THEN
            MatrixColumnCaptions[i] := Location.Name
          ELSE
            MatrixColumnCaptions[i] := Location.Code;
          i := i + 1;
        UNTIL (Location.NEXT = 0) OR (i > ARRAYLEN(MatrixColumnCaptions));
        EXIT(TRUE);
      END;
      EXIT(FALSE);
    END;

    LOCAL PROCEDURE FillColumnsPeriod@12(VAR MatrixColumnCaptions@1001 : ARRAY [32] OF Text[30]) : Boolean;
    VAR
      Period@1008 : Record 2000000007;
      tmpFirstColumn@1010 : Date;
      tmpLastColumn@1011 : Date;
      i@1003 : Integer;
    BEGIN
      CLEAR(MatrixColumnCaptions);
      i := 1;
      Period.SETRANGE("Period Type",PeriodType);
      tmpFirstColumn := FirstColumnDate;
      tmpLastColumn := LastColumnDate;
      Period.SETRANGE("Period Start",tmpFirstColumn,tmpLastColumn);
      IF Period.FIND('-') THEN BEGIN
        REPEAT
          IF ShowColumnName THEN
            MatrixColumnCaptions[i] := FORMAT(Period."Period Name")
          ELSE
            MatrixColumnCaptions[i] := FORMAT(Period."Period Start");
          i := i + 1;
        UNTIL (Period.NEXT = 0) OR (i > ARRAYLEN(MatrixColumnCaptions));
        EXIT(TRUE);
      END;
      EXIT(FALSE);
    END;

    LOCAL PROCEDURE FillColumnsDim@16(VAR MatrixColumnCaptions@1001 : ARRAY [32] OF Text[30];DimFilter@1000 : Text[250];DimensionCode@1006 : Code[20]) : Boolean;
    VAR
      DimVal@1005 : Record 349;
      i@1003 : Integer;
    BEGIN
      CLEAR(MatrixColumnCaptions);
      ApplyColumnFilter;
      DimVal.SETRANGE("Dimension Code",DimensionCode);
      DimVal.SETFILTER(Code,DimFilter);
      i := 1;

      IF DimVal.FIND('-') THEN BEGIN
        REPEAT
          IF ShowColumnName THEN
            MatrixColumnCaptions[i] := DimVal.Name
          ELSE
            MatrixColumnCaptions[i] := DimVal.Code;
          i := i + 1;
        UNTIL (DimVal.NEXT = 0) OR (i > ARRAYLEN(MatrixColumnCaptions));
        EXIT(TRUE);
      END;
      EXIT(FALSE);
    END;

    PROCEDURE ShowMatrix@10();
    BEGIN
      ApplyColumnFilter;

      PurchAnalysisByDimMatrix.LoadVariables(ItemAnalysisView,ItemStatisticsBuffer,
        CurrentItemAnalysisViewCode,CurrentAnalysisArea,
        LineDimOption,ColumnDimOption,LineDimCode,ColumnDimCode,PeriodType,ValueType,
        RoundingFactor,ShowActualBudget,MatrixColumnCaptions,
        ShowOppositeSign,PeriodInitialized,FirstColumn,LastColumn,ShowColumnName,MATRIX_CurrSetLength);

      PurchAnalysisByDimMatrix.LoadFilters(ItemFilter,LocationFilter,Dim1Filter,Dim2Filter,Dim3Filter,
        DateFilter,BudgetFilter,InternalDateFilter);

      PurchAnalysisByDimMatrix.RUNMODAL;
    END;

    PROCEDURE ApplyColumnFilter@13();
    BEGIN
      CLEAR(ItemFilter1);
      CLEAR(LocationFilter1);
      CLEAR(DateFilter1);
      CLEAR(Dim1Filter1);
      CLEAR(Dim2Filter1);
      CLEAR(Dim3Filter1);

      CASE ColumnDimOption OF
        ColumnDimOption::Item:
          BEGIN
            IF ItemFilter <> '' THEN
              ItemFilter1 := ItemFilter + '&';
            ItemFilter1 := ItemFilter1 + FORMAT(FirstColumn) + '..' + FORMAT(LastColumn);
            LocationFilter1 := LocationFilter;
            DateFilter1 := DateFilter;
            Dim1Filter1 := Dim1Filter;
            Dim2Filter1 := Dim2Filter;
            Dim3Filter1 := Dim3Filter;
          END;
        ColumnDimOption::Location:
          BEGIN
            ItemFilter1 := ItemFilter;
            IF LocationFilter <> '' THEN
              LocationFilter1 := LocationFilter + '&';
            LocationFilter1 := LocationFilter1 + FORMAT(FirstColumn) + '..' + FORMAT(LastColumn);
            DateFilter1 := DateFilter;
            Dim1Filter1 := Dim1Filter;
            Dim2Filter1 := Dim2Filter;
            Dim3Filter1 := Dim3Filter;
          END;
        ColumnDimOption::Period:
          BEGIN
            ItemFilter1 := ItemFilter;
            LocationFilter1 := LocationFilter;
            DateFilter1 := DateFilter;
            Dim1Filter1 := Dim1Filter;
            Dim2Filter1 := Dim2Filter;
            Dim3Filter1 := Dim3Filter;
          END;
        ColumnDimOption::"Dimension 1":
          BEGIN
            ItemFilter1 := ItemFilter;
            LocationFilter1 := LocationFilter;
            DateFilter1 := DateFilter;
            IF Dim1Filter <> '' THEN
              Dim1Filter1 := Dim1Filter + '&';
            Dim1Filter1 := Dim1Filter1 + FORMAT(FirstColumn) + '..' + FORMAT(LastColumn);
            Dim2Filter1 := Dim2Filter;
            Dim3Filter1 := Dim3Filter;
          END;
        ColumnDimOption::"Dimension 2":
          BEGIN
            ItemFilter1 := ItemFilter;
            LocationFilter1 := LocationFilter;
            DateFilter1 := DateFilter;
            Dim1Filter1 := Dim1Filter;
            IF Dim2Filter <> '' THEN
              Dim2Filter1 := Dim2Filter + '&';
            Dim2Filter1 := Dim2Filter1 + FORMAT(FirstColumn) + '..' + FORMAT(LastColumn);
            Dim3Filter1 := Dim3Filter;
          END;
        ColumnDimOption::"Dimension 3":
          BEGIN
            ItemFilter1 := ItemFilter;
            LocationFilter1 := LocationFilter;
            DateFilter1 := DateFilter;
            Dim1Filter1 := Dim1Filter;
            Dim2Filter1 := Dim2Filter;
            IF Dim3Filter <> '' THEN
              Dim3Filter1 := Dim3Filter + '&';
            Dim3Filter1 := Dim3Filter1 + FORMAT(FirstColumn) + '..' + FORMAT(LastColumn);
          END;
      END;
    END;

    PROCEDURE ClearPoints@21();
    BEGIN
      CLEAR(FirstColumn);
      CLEAR(LastColumn);
    END;

    PROCEDURE SetCurrentAnalysisViewCode@7(NewAnalysisViewCode@1000 : Code[10]);
    BEGIN
      NewItemAnalysisCode := NewAnalysisViewCode;
    END;

    BEGIN
    END.
  }
}
