OBJECT Form 605 IC Chart of Accounts
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVW16.00,NAVES4.00.02;
  }
  PROPERTIES
  {
    Width=12210;
    Height=6710;
    CaptionML=[ENU=IC Chart of Accounts;
               ESP=Plan de cuentas IC];
    TableBoxID=1;
    SourceTable=Table410;
  }
  CONTROLS
  {
    { 1   ;TableBox     ;220  ;220  ;11810;5500 ;HorzGlue=Both;
                                                 VertGlue=Both }
    { 2   ;TextBox      ;0    ;0    ;1700 ;0    ;ParentControl=1;
                                                 InColumn=Yes;
                                                 SourceExpr="No.";
                                                 OnFormat=BEGIN
                                                            IF "Account Type" <> "Account Type"::Posting THEN
                                                              CurrForm."No.".UPDATEFONTBOLD := TRUE;
                                                          END;
                                                           }
    { 3   ;Label        ;0    ;0    ;0    ;0    ;ParentControl=2;
                                                 InColumnHeading=Yes }
    { 4   ;TextBox      ;0    ;0    ;4400 ;0    ;HorzGlue=Both;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 SourceExpr=Name;
                                                 OnFormat=BEGIN
                                                            CurrForm.Name.UPDATEINDENT := Indentation * 220;
                                                            IF "Account Type" <> "Account Type"::Posting THEN
                                                              CurrForm.Name.UPDATEFONTBOLD := TRUE;
                                                          END;
                                                           }
    { 5   ;Label        ;0    ;0    ;0    ;0    ;ParentControl=4;
                                                 InColumnHeading=Yes }
    { 8   ;TextBox      ;0    ;0    ;550  ;0    ;ParentControl=1;
                                                 InColumn=Yes;
                                                 SourceExpr="Income/Balance" }
    { 9   ;Label        ;0    ;0    ;0    ;0    ;ParentControl=8;
                                                 InColumnHeading=Yes }
    { 6   ;TextBox      ;0    ;0    ;550  ;0    ;ParentControl=1;
                                                 InColumn=Yes;
                                                 SourceExpr="Account Type" }
    { 7   ;Label        ;0    ;0    ;0    ;0    ;ParentControl=6;
                                                 InColumnHeading=Yes }
    { 10  ;CheckBox     ;0    ;0    ;1700 ;0    ;ParentControl=1;
                                                 InColumn=Yes;
                                                 ShowCaption=No;
                                                 SourceExpr=Blocked }
    { 11  ;Label        ;0    ;0    ;0    ;0    ;ParentControl=10;
                                                 InColumnHeading=Yes }
    { 12  ;TextBox      ;0    ;0    ;1700 ;0    ;ParentControl=1;
                                                 InColumn=Yes;
                                                 SourceExpr="Map-to G/L Acc. No." }
    { 13  ;Label        ;0    ;0    ;0    ;0    ;ParentControl=12;
                                                 InColumnHeading=Yes }
    { 16  ;CommandButton;9830 ;5940 ;2200 ;550  ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 PushAction=FormHelp }
    { 14  ;MenuButton   ;7370 ;5940 ;2200 ;550  ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 CaptionML=[ENU=F&unctions;
                                                            ESP=Acci&ones];
                                                 Menu=MENUITEMS
                                                 {
                                                   { ID=18;
                                                     CaptionML=[ENU=Map to Acc. with Same No.;
                                                                ESP=Asignar a cuenta con igual n§];
                                                     OnPush=VAR
                                                              ICGLAcc@1001 : Record 410;
                                                              ICMapping@1000 : Codeunit 428;
                                                            BEGIN
                                                              CurrForm.SETSELECTIONFILTER(ICGLAcc);
                                                              IF (ICGLAcc.FIND('-')) AND (CONFIRM(Text000)) THEN
                                                                REPEAT
                                                                  ICMapping.MapAccounts(ICGLAcc);
                                                                UNTIL ICGLAcc.NEXT = 0;
                                                            END;
                                                             }
                                                   { ID=23;
                                                     CaptionML=[ENU=Copy from Chart of Accounts;
                                                                ESP=Copiar de Plan de cuentas];
                                                     OnPush=BEGIN
                                                              CopyFromChartOfAccounts;
                                                            END;
                                                             }
                                                   { ID=20;
                                                     CaptionML=[ENU=In&dent IC Chart of Accounts;
                                                                ESP=Aplicar sangr¡a &Plan de cuentas IC];
                                                     OnPush=VAR
                                                              IndentCOA@1000 : Codeunit 3;
                                                            BEGIN
                                                              IndentCOA.RunICAccountIndent;
                                                            END;
                                                             }
                                                   { ID=21;
                                                     MenuItemType=Separator }
                                                   { ID=17;
                                                     Ellipsis=Yes;
                                                     CaptionML=[ENU=Import;
                                                                ESP=Importar];
                                                     OnPush=BEGIN
                                                              ImportFromXML;
                                                            END;
                                                             }
                                                   { ID=22;
                                                     Ellipsis=Yes;
                                                     CaptionML=[ENU=E&xport;
                                                                ESP=E&xportar];
                                                     OnPush=BEGIN
                                                              ExportToXML;
                                                            END;
                                                             }
                                                 }
                                                  }
    { 15  ;MenuButton   ;4950 ;5940 ;2200 ;550  ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 CaptionML=[ENU=IC A&ccount;
                                                            ESP=&Cuenta IC];
                                                 Menu=MENUITEMS
                                                 {
                                                   { ID=19;
                                                     PushAction=RunObject;
                                                     ShortCutKey=May£s+F5;
                                                     CaptionML=[ENU=&Card;
                                                                ESP=&Ficha];
                                                     RunObject=Form 606;
                                                     RunFormLink=No.=FIELD(No.) }
                                                 }
                                                  }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Are you sure you want to map the selected line(s)?;ESP=¨Confirma que desea eliminar las l¡neas seleccionadas?';
      Text001@1002 : TextConst 'ENU=Select file to import into %1;ESP=Selecc. archivo para imp. en %1';
      Text002@1001 : TextConst 'ENU=ICGLAcc.xml;ESP=ICGLAcc.xml';
      Text003@1003 : TextConst 'ENU=Select a filename to export %1 to.;ESP=Seleccione nom. archivo para exportar %1';
      Text004@1004 : TextConst 'ENU=Are you sure you want to copy from %1?;ESP=¨Realmente desea copiar los datos de %1?';

    LOCAL PROCEDURE CopyFromChartOfAccounts@1();
    VAR
      GLAcc@1000 : Record 15;
      ICGLAcc@1001 : Record 410;
      ChartofAcc@1005 : Form 16;
      ICGLAccEmpty@1002 : Boolean;
      ICGLAccExists@1003 : Boolean;
      PrevIndentation@1004 : Integer;
    BEGIN
      IF NOT CONFIRM(Text004,FALSE,ChartofAcc.CAPTION) THEN
        EXIT;

      ICGLAccEmpty := NOT ICGLAcc.FIND('-');
      ICGLAcc.LOCKTABLE;
      IF GLAcc.FIND('-') THEN
        REPEAT
          IF GLAcc."Account Type" = GLAcc."Account Type"::"4" THEN
            PrevIndentation := PrevIndentation - 1;
          IF NOT ICGLAccEmpty THEN
            ICGLAccExists := ICGLAcc.GET(GLAcc."No.");
          IF NOT ICGLAccExists AND NOT GLAcc.Blocked THEN BEGIN
            ICGLAcc.INIT;
            ICGLAcc."No." := GLAcc."No.";
            ICGLAcc.Name := GLAcc.Name;
            ICGLAcc."Account Type" := GLAcc."Account Type";
            ICGLAcc."Income/Balance" := GLAcc."Income/Balance";
            ICGLAcc.Indentation := PrevIndentation;
            ICGLAcc.INSERT;
          END;
          PrevIndentation := GLAcc.Indentation;
          IF GLAcc."Account Type" = GLAcc."Account Type"::"3" THEN
            PrevIndentation := PrevIndentation + 1;
        UNTIL GLAcc.NEXT = 0;
    END;

    LOCAL PROCEDURE ImportFromXML@2();
    VAR
      CompanyInfo@1006 : Record 79;
      ICGLAccIO@1005 : XMLport 10;
      FileName@1004 : Text[250];
      StartFileName@1003 : Text[250];
      IFile@1002 : File;
      IStr@1001 : InStream;
      CmDlg@1000 : Codeunit 412;
    BEGIN
      CompanyInfo.GET;

      StartFileName := CompanyInfo."IC Inbox Details";
      IF StartFileName <> '' THEN BEGIN
        IF StartFileName[STRLEN(StartFileName)] <> '\' THEN
          StartFileName := StartFileName + '\';
        StartFileName := StartFileName + '*.xml';
      END;
      FileName := CmDlg.OpenFile(STRSUBSTNO(Text001,TABLECAPTION),StartFileName,4,'*.xml|*.xml',0);
      IF FileName = '' THEN
        EXIT;
      IFile.OPEN(FileName);
      IFile.CREATEINSTREAM(IStr);
      ICGLAccIO.SETSOURCE(IStr);
      ICGLAccIO.IMPORT;
    END;

    LOCAL PROCEDURE ExportToXML@3();
    VAR
      ICGLAcc@1007 : Record 410;
      CompanyInfo@1006 : Record 79;
      ICGLAccIO@1005 : XMLport 10;
      FileName@1004 : Text[250];
      DefaultFileName@1003 : Text[250];
      OFile@1002 : File;
      OStr@1001 : OutStream;
      CmDlg@1000 : Codeunit 412;
      RBAutoMgt@1102601000 : Codeunit 419;
    BEGIN
      CompanyInfo.GET;

      DefaultFileName := CompanyInfo."IC Inbox Details";
      IF DefaultFileName <> '' THEN
        IF DefaultFileName[STRLEN(DefaultFileName)] <> '\' THEN
          DefaultFileName := DefaultFileName + '\';
      DefaultFileName := DefaultFileName + Text002;

      IF NOT ISSERVICETIER THEN
        FileName := CmDlg.OpenFile(STRSUBSTNO(Text003,TABLECAPTION),DefaultFileName,0,'*.xml|*.xml',1)
      ELSE
        FileName := RBAutoMgt.EnvironFileName('','xml');

      IF FileName = '' THEN
        EXIT;

      OFile.CREATE(FileName);
      OFile.CREATEOUTSTREAM(OStr);
      ICGLAccIO.SETDESTINATION(OStr);
      ICGLAccIO.EXPORT;
      OFile.CLOSE;
      CLEAR(OStr);

      IF ISSERVICETIER THEN
        DOWNLOAD(FileName,'Export',TEMPORARYPATH,'',DefaultFileName);
    END;

    BEGIN
    END.
  }
}
