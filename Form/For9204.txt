OBJECT Form 9204 _Purchase Analysis Report
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVW16.00;
  }
  PROPERTIES
  {
    Width=17710;
    Height=4510;
    CaptionML=ENU=Purchase Analysis Report;
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    LinksAllowed=No;
    SourceTable=Table7114;
    DataCaptionExpr=GetCaption;
    SourceTableView=WHERE(Analysis Area=CONST(Purchase));
    OnOpenForm=VAR
                 AnalysisLineTemplate@1001 : Record 7112;
               BEGIN
                 IF (NewCurrentReportName <> '') AND (NewCurrentReportName <> CurrentReportName) THEN BEGIN
                   CurrentReportName := NewCurrentReportName;
                   AnalysisReportMgt.CheckReportName(CurrentReportName,Rec);
                   ValidateReportName;
                   AnalysisReportMgt.SetAnalysisLineTemplName(CurrentLineTemplate,Rec);
                   ValidateAnalysisTemplateName;
                 END;

                 AnalysisReportMgt.OpenAnalysisLines(CurrentLineTemplate,Rec);
                 AnalysisReportMgt.OpenColumns(CurrentColumnTemplate,Rec,AnalysisColumn);

                 AnalysisReportMgt.CopyColumnsToTemp(Rec,CurrentColumnTemplate,AnalysisColumn);
                 AnalysisReportMgt.SetSourceNo(Rec,CurrentSourceTypeNoFilter);

                 GLSetup.GET;

                 IF AnalysisLineTemplate.GET(GETRANGEMAX("Analysis Area"),CurrentLineTemplate) THEN
                   IF AnalysisLineTemplate."Item Analysis View Code" <> '' THEN
                     ItemAnalysisView.GET(GETRANGEMAX("Analysis Area"),AnalysisLineTemplate."Item Analysis View Code")
                   ELSE BEGIN
                     CLEAR(ItemAnalysisView);
                     ItemAnalysisView."Dimension 1 Code" := GLSetup."Global Dimension 1 Code";
                     ItemAnalysisView."Dimension 2 Code" := GLSetup."Global Dimension 2 Code";
                   END;

                 FindPeriod('');

                 CurrForm.UPDATECONTROLS;

                 NoOfColumns := 7;
                 Direction := Direction::Forward;

                 ClearPoints;
                 SetPointsAnalysisColumn;
               END;

  }
  CONTROLS
  {
    { 29  ;TabControl   ;220  ;220  ;17270;3300 ;HorzGlue=Both;
                                                 PageNamesML=ENU=General,Filters,Options,Matrix Options }
    { 40  ;TextBox      ;3850 ;990  ;2750 ;440  ;ParentControl=29;
                                                 InPage=0;
                                                 CaptionML=ENU=Analysis Report Name;
                                                 SourceExpr=CurrentReportName;
                                                 OnValidate=BEGIN
                                                              AnalysisReportMgt.CheckReportName(CurrentReportName,Rec);
                                                            END;

                                                 OnLookup=BEGIN
                                                            IF AnalysisReportMgt.LookupReportName(GETRANGEMAX("Analysis Area"),CurrentReportName) THEN BEGIN
                                                              Text := CurrentReportName;
                                                              EXIT(TRUE);
                                                            END;
                                                          END;

                                                 OnAfterValidate=BEGIN
                                                                   CurrForm.SAVERECORD;
                                                                   ValidateReportName;
                                                                   AnalysisReportMgt.SetAnalysisLineTemplName(CurrentLineTemplate,Rec);
                                                                   ValidateAnalysisTemplateName;
                                                                   AnalysisReportMgt.CopyColumnsToTemp(Rec,CurrentColumnTemplate,AnalysisColumn);
                                                                   CurrForm.UPDATE(FALSE);
                                                                   ClearPoints;
                                                                   SetPointsAnalysisColumn;
                                                                   CurrForm.UPDATECONTROLS;
                                                                 END;
                                                                  }
    { 41  ;Label        ;440  ;990  ;3300 ;440  ;ParentControl=40 }
    { 9   ;TextBox      ;3850 ;1650 ;2750 ;440  ;ParentControl=29;
                                                 InPage=0;
                                                 CaptionML=ENU=Analysis Line Template;
                                                 SourceExpr=CurrentLineTemplate;
                                                 OnValidate=BEGIN
                                                              AnalysisReportMgt.CheckAnalysisLineTemplName(CurrentLineTemplate,Rec);
                                                            END;

                                                 OnLookup=BEGIN
                                                            CurrForm.SAVERECORD;
                                                            AnalysisReportMgt.LookupAnalysisLineTemplName(CurrentLineTemplate,Rec);
                                                            ValidateAnalysisTemplateName;
                                                            CurrForm.UPDATE(FALSE);
                                                            CurrForm.UPDATECONTROLS;
                                                          END;

                                                 OnAfterValidate=BEGIN
                                                                   CurrForm.SAVERECORD;
                                                                   AnalysisReportMgt.SetAnalysisLineTemplName(CurrentLineTemplate,Rec);
                                                                   ValidateAnalysisTemplateName;
                                                                   CurrForm.UPDATE(FALSE);
                                                                   CurrForm.UPDATECONTROLS;
                                                                 END;
                                                                  }
    { 10  ;Label        ;440  ;1650 ;3300 ;440  ;ParentControl=9 }
    { 8   ;TextBox      ;3850 ;2200 ;2750 ;440  ;ParentControl=29;
                                                 InPage=0;
                                                 CaptionML=ENU=Analysis Column Template;
                                                 SourceExpr=CurrentColumnTemplate;
                                                 OnValidate=BEGIN
                                                              AnalysisReportMgt.GetColumnTemplate(GETRANGEMAX("Analysis Area"),CurrentColumnTemplate);
                                                            END;

                                                 OnLookup=BEGIN
                                                            IF AnalysisReportMgt.LookupColumnName(GETRANGEMAX("Analysis Area"),CurrentColumnTemplate) THEN BEGIN
                                                              Text := CurrentColumnTemplate;
                                                              EXIT(TRUE);
                                                            END;
                                                          END;

                                                 OnAfterValidate=BEGIN
                                                                   AnalysisReportMgt.CopyColumnsToTemp(Rec,CurrentColumnTemplate,AnalysisColumn);
                                                                   CurrForm.UPDATE(FALSE);
                                                                   ClearPoints;
                                                                   SetPointsAnalysisColumn;
                                                                 END;
                                                                  }
    { 11  ;Label        ;440  ;2200 ;3300 ;440  ;ParentControl=8 }
    { 25  ;TextBox      ;3850 ;1540 ;2750 ;440  ;ParentControl=29;
                                                 InPage=1;
                                                 CaptionML=ENU=Source No. Filter;
                                                 SourceExpr=CurrentSourceTypeNoFilter;
                                                 OnLookup=BEGIN
                                                            AnalysisReportMgt.LookupSourceNo(Rec,CurrentSourceTypeFilter,CurrentSourceTypeNoFilter);
                                                            CurrForm.UPDATE(FALSE);
                                                          END;

                                                 OnAfterValidate=BEGIN
                                                                   AnalysisReportMgt.SetSourceNo(Rec,CurrentSourceTypeNoFilter);
                                                                   CurrForm.UPDATE(FALSE);
                                                                 END;
                                                                  }
    { 26  ;Label        ;440  ;1540 ;3300 ;440  ;ParentControl=25 }
    { 27  ;TextBox      ;3850 ;990  ;2750 ;440  ;ParentControl=29;
                                                 InPage=1;
                                                 CaptionML=ENU=Source Type Filter;
                                                 OptionCaptionML=ENU=" ,Customer,Vendor,Item";
                                                 OptionString=[ ,Customer,Vendor,Item];
                                                 SourceExpr=CurrentSourceTypeFilter;
                                                 OnValidate=BEGIN
                                                              SETRANGE("Source Type Filter",CurrentSourceTypeFilter);
                                                              CurrentSourceTypeNoFilter := '';
                                                              AnalysisReportMgt.SetSourceNo(Rec,CurrentSourceTypeNoFilter);
                                                            END;

                                                 OnAfterValidate=BEGIN
                                                                   CurrForm.UPDATE(FALSE);
                                                                 END;
                                                                  }
    { 30  ;Label        ;440  ;990  ;3300 ;440  ;ParentControl=27 }
    { 32  ;TextBox      ;3850 ;990  ;1650 ;440  ;ParentControl=29;
                                                 InPage=2;
                                                 CaptionML=ENU=Show Error;
                                                 OptionCaptionML=ENU=None,Division by Zero,Period Error,Invalid Formula,Cyclic Formula,All;
                                                 SourceExpr=ShowError }
    { 34  ;Label        ;440  ;990  ;3300 ;440  ;ParentControl=32 }
    { 2   ;TextBox      ;3850 ;990  ;2750 ;440  ;ParentControl=29;
                                                 InPage=3;
                                                 CaptionML=ENU=View by;
                                                 OptionCaptionML=ENU=Day,Week,Month,Quarter,Year,Accounting Period;
                                                 SourceExpr=PeriodType;
                                                 OnValidate=BEGIN
                                                              FindPeriod('');
                                                            END;
                                                             }
    { 3   ;Label        ;440  ;990  ;3300 ;440  ;ParentControl=2 }
    { 5   ;TextBox      ;3850 ;1650 ;2750 ;440  ;ParentControl=29;
                                                 InPage=3;
                                                 CaptionML=ENU=Column Set;
                                                 SourceExpr=ColumnsSet }
    { 4   ;Label        ;440  ;1650 ;3300 ;440  ;ParentControl=5;
                                                 InPage=3 }
    { 6   ;CommandButton;6710 ;1540 ;550  ;550  ;VertGlue=Bottom;
                                                 FocusOnClick=No;
                                                 ParentControl=5;
                                                 InPage=3;
                                                 ShowCaption=No;
                                                 BitmapPos=Center;
                                                 AutoRepeat=Yes;
                                                 Bitmap=15;
                                                 CaptionML=ENU=Previous Set;
                                                 ToolTipML=ENU=Previous Set;
                                                 OnPush=BEGIN
                                                          Direction := Direction::Backward;
                                                          SetPointsAnalysisColumn;
                                                          CurrForm.UPDATECONTROLS;
                                                        END;
                                                         }
    { 7   ;CommandButton;7370 ;1540 ;550  ;550  ;VertGlue=Bottom;
                                                 FocusOnClick=No;
                                                 ParentControl=5;
                                                 InPage=3;
                                                 ShowCaption=No;
                                                 BitmapPos=Center;
                                                 AutoRepeat=Yes;
                                                 Bitmap=16;
                                                 CaptionML=ENU=Next Set;
                                                 ToolTipML=ENU=Next Set;
                                                 OnPush=BEGIN
                                                          Direction := Direction::Forward;
                                                          SetPointsAnalysisColumn;
                                                          CurrForm.UPDATECONTROLS;
                                                        END;
                                                         }
    { 12  ;CommandButton;15290;3740 ;2200 ;550  ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 PushAction=FormHelp }
    { 1   ;CommandButton;8030 ;3740 ;2200 ;550  ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 CaptionML=ENU=&Show Matrix;
                                                 OnPush=BEGIN
                                                          SetFilters;

                                                          CLEAR(MatrixColumnCaptions);

                                                          FillMatrixColumns;

                                                          CLEAR(PurchAnalysisMatrix);
                                                          PurchAnalysisMatrix.Load(AnalysisColumn,MatrixColumnCaptions,ShowError,FirstLineNo,LastLineNo);
                                                          PurchAnalysisMatrix.SETTABLEVIEW(AnalysisLine);
                                                          PurchAnalysisMatrix.RUNMODAL;
                                                        END;
                                                         }
    { 13  ;MenuButton   ;10450;3740 ;2200 ;550  ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 CaptionML=ENU=&Actions;
                                                 Menu=MENUITEMS
                                                 {
                                                   { ID=17;
                                                     Ellipsis=Yes;
                                                     CaptionML=ENU=Set Up &Lines;
                                                     OnPush=BEGIN
                                                              AnalysisReportMgt.OpenAnalysisLinesForm(Rec,CurrentLineTemplate);
                                                              CurrForm.UPDATE(FALSE);
                                                            END;
                                                             }
                                                   { ID=18;
                                                     Ellipsis=Yes;
                                                     CaptionML=ENU=Set Up &Columns;
                                                     OnPush=BEGIN
                                                              AnalysisReportMgt.OpenAnalysisColumnsForm(Rec,CurrentColumnTemplate);
                                                              CurrForm.UPDATE(FALSE);
                                                            END;
                                                             }
                                                   { ID=19;
                                                     MenuItemType=Separator }
                                                   { ID=20;
                                                     Ellipsis=Yes;
                                                     CaptionML=ENU=Export to Excel;
                                                     OnPush=VAR
                                                              ExportAnalysisRepToExcel@1000 : Report 7113;
                                                            BEGIN
                                                              ExportAnalysisRepToExcel.SetOptions(Rec,CurrentColumnTemplate,CurrentLineTemplate);
                                                              ExportAnalysisRepToExcel.RUN;
                                                            END;
                                                             }
                                                 }
                                                  }
    { 22  ;MenuButton   ;12870;3740 ;2200 ;550  ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 CaptionML=ENU=&Reports;
                                                 Menu=MENUITEMS
                                                 {
                                                   { ID=37;
                                                     CaptionML=ENU=Print;
                                                     OnPush=VAR
                                                              AnalysisReport@1006 : Report 7112;
                                                              DateFilter@1005 : Text[30];
                                                              ItemBudgetFilter@1004 : Text[30];
                                                              LocationFilter@1003 : Text[30];
                                                              Dim1Filter@1002 : Text[250];
                                                              Dim2Filter@1001 : Text[250];
                                                              Dim3Filter@1000 : Text[250];
                                                            BEGIN
                                                              AnalysisReport.SetParams(GETRANGEMAX("Analysis Area"),CurrentReportName,CurrentLineTemplate,CurrentColumnTemplate);
                                                              DateFilter := GETFILTER("Date Filter");
                                                              ItemBudgetFilter := GETFILTER("Item Budget Filter");
                                                              LocationFilter := GETFILTER("Location Filter");
                                                              Dim1Filter := GETFILTER("Dimension 1 Filter");
                                                              Dim2Filter := GETFILTER("Dimension 2 Filter");
                                                              Dim3Filter := GETFILTER("Dimension 3 Filter");
                                                              AnalysisReport.SetFilters(
                                                                DateFilter,ItemBudgetFilter,LocationFilter,Dim1Filter,Dim2Filter,Dim3Filter,
                                                                CurrentSourceTypeFilter,CurrentSourceTypeNoFilter);
                                                              AnalysisReport.RUN;
                                                            END;
                                                             }
                                                 }
                                                  }
  }
  CODE
  {
    VAR
      GLSetup@1017 : Record 98;
      AnalysisColumn@1003 : TEMPORARY Record 7118;
      ItemAnalysisView@1016 : Record 7152;
      AnalysisLine@1020 : Record 7114;
      PurchAnalysisMatrix@1004 : Form 9205;
      AnalysisReportMgt@1000 : Codeunit 7110;
      CurrentReportName@1005 : Code[10];
      CurrentLineTemplate@1001 : Code[10];
      CurrentColumnTemplate@1002 : Code[10];
      NewCurrentReportName@1010 : Code[10];
      CurrentSourceTypeNoFilter@1015 : Code[1024];
      CurrentSourceTypeFilter@1014 : ' ,Customer,Vendor,Item';
      PeriodType@1006 : 'Day,Week,Month,Quarter,Year,Accounting Period';
      ShowError@1007 : 'None,Division by Zero,Period Error,Invalid Formula,Cyclic Formula,All';
      Text003@1008 : TextConst 'ENU=1,6,,Dimension %1 Filter';
      Direction@1012 : 'Backward,Forward';
      NoOfColumns@1013 : Integer;
      FirstLineNo@1018 : Integer;
      LastLineNo@1019 : Integer;
      FirstColumn@1021 : Text[1024];
      LastColumn@1022 : Text[1024];
      MatrixColumnCaptions@1009 : ARRAY [32] OF Text[1024];

    LOCAL PROCEDURE FindPeriod@2(SearchText@1000 : Code[10]);
    VAR
      Calendar@1001 : Record 2000000007;
      PeriodFormMgt@1002 : Codeunit 359;
    BEGIN
      IF GETFILTER("Date Filter") <> '' THEN BEGIN
        Calendar.SETFILTER("Period Start",GETFILTER("Date Filter"));
        IF NOT PeriodFormMgt.FindDate('+',Calendar,PeriodType) THEN
          PeriodFormMgt.FindDate('+',Calendar,PeriodType::Day);
        Calendar.SETRANGE("Period Start");
      END;
      PeriodFormMgt.FindDate(SearchText,Calendar,PeriodType);
      SETRANGE("Date Filter",Calendar."Period Start",Calendar."Period End");
      IF GETRANGEMIN("Date Filter") = GETRANGEMAX("Date Filter") THEN
        SETRANGE("Date Filter",GETRANGEMIN("Date Filter"));
    END;

    LOCAL PROCEDURE ValidateAnalysisTemplateName@3();
    VAR
      AnalysisLineTemplate@1001 : Record 7112;
      PrevItemAnalysisView@1000 : Record 7152;
    BEGIN
      IF AnalysisLineTemplate.GET(GETRANGEMAX("Analysis Area"),CurrentLineTemplate) THEN
        IF (AnalysisLineTemplate."Default Column Template Name" <> '') AND
           (CurrentColumnTemplate <> AnalysisLineTemplate."Default Column Template Name")
        THEN BEGIN
          CurrentColumnTemplate := AnalysisLineTemplate."Default Column Template Name";
          AnalysisReportMgt.OpenColumns(CurrentColumnTemplate,Rec,AnalysisColumn);
          AnalysisReportMgt.CopyColumnsToTemp(Rec,CurrentColumnTemplate,AnalysisColumn);
        END;

      IF AnalysisLineTemplate."Item Analysis View Code" <> ItemAnalysisView.Code THEN BEGIN
        PrevItemAnalysisView := ItemAnalysisView;
        IF AnalysisLineTemplate."Item Analysis View Code" <> '' THEN
          ItemAnalysisView.GET(GETRANGEMAX("Analysis Area"),AnalysisLineTemplate."Item Analysis View Code")
        ELSE BEGIN
          CLEAR(ItemAnalysisView);
          ItemAnalysisView."Dimension 1 Code" := GLSetup."Global Dimension 1 Code";
          ItemAnalysisView."Dimension 2 Code" := GLSetup."Global Dimension 2 Code";
        END;
        IF PrevItemAnalysisView."Dimension 1 Code" <> ItemAnalysisView."Dimension 1 Code" THEN
          SETRANGE("Dimension 1 Filter");
        IF PrevItemAnalysisView."Dimension 2 Code" <> ItemAnalysisView."Dimension 2 Code" THEN
          SETRANGE("Dimension 2 Filter");
        IF PrevItemAnalysisView."Dimension 3 Code" <> ItemAnalysisView."Dimension 3 Code" THEN
          SETRANGE("Dimension 3 Filter");
      END;
    END;

    LOCAL PROCEDURE ValidateReportName@1();
    VAR
      AnalysisReportName@1000 : Record 7111;
    BEGIN
      IF AnalysisReportName.GET(GETRANGEMAX("Analysis Area"),CurrentReportName) THEN BEGIN
        IF AnalysisReportName."Analysis Line Template Name" <> '' THEN
          CurrentLineTemplate := AnalysisReportName."Analysis Line Template Name";
        IF AnalysisReportName."Analysis Column Template Name" <> '' THEN
          CurrentColumnTemplate := AnalysisReportName."Analysis Column Template Name";
      END;
    END;

    LOCAL PROCEDURE FormLookUpDimFilter@57(Dim@1000 : Code[20];VAR Text@1001 : Text[1024]) : Boolean;
    VAR
      DimVal@1002 : Record 349;
      DimValList@1003 : Form 560;
    BEGIN
      IF Dim = '' THEN
        EXIT(FALSE);
      DimVal.FILTERGROUP := 2;
      DimVal.SETRANGE("Dimension Code",Dim);
      DimVal.FILTERGROUP := 0;
      DimValList.SETTABLEVIEW(DimVal);
      DimValList.LOOKUPMODE(TRUE);
      IF DimValList.RUNMODAL = ACTION::LookupOK THEN BEGIN
        DimValList.GETRECORD(DimVal);
        Text := DimValList.GetSelectionFilter;
        EXIT(TRUE);
      END;
    END;

    LOCAL PROCEDURE FormGetCaptionClass@12(DimNo@1000 : Integer) : Text[250];
    BEGIN
      CASE DimNo OF
        1:
          IF ItemAnalysisView."Dimension 1 Code" <> '' THEN
            EXIT('1,6,' + ItemAnalysisView."Dimension 1 Code");
        2:
          IF ItemAnalysisView."Dimension 2 Code" <> '' THEN
            EXIT('1,6,' + ItemAnalysisView."Dimension 2 Code");
        3:
          IF ItemAnalysisView."Dimension 3 Code" <> '' THEN
            EXIT('1,6,' + ItemAnalysisView."Dimension 3 Code");
      END;
      EXIT(STRSUBSTNO(Text003,DimNo));
    END;

    LOCAL PROCEDURE GetCaption@6() : Text[250];
    VAR
      AnalysisReportName@1000 : Record 7111;
    BEGIN
      IF CurrentReportName <> '' THEN
        IF AnalysisReportName.GET("Analysis Area"::Purchase,CurrentReportName) THEN
          EXIT(AnalysisReportName.Name + ' ' + AnalysisReportName.Description);
    END;

    PROCEDURE SetFilters@4();
    BEGIN
      AnalysisColumn.RESET;
      AnalysisColumn.SETRANGE("Analysis Area","Analysis Area"::Purchase);
      AnalysisColumn.SETRANGE("Analysis Column Template",CurrentColumnTemplate);

      AnalysisLine.COPY(Rec);
      AnalysisLine.SETRANGE("Analysis Area","Analysis Area"::Purchase);
      AnalysisLine.SETRANGE("Analysis Line Template Name",CurrentLineTemplate);
    END;

    LOCAL PROCEDURE ColumnsSet@7() : Text[80];
    BEGIN
      IF FirstColumn = LastColumn THEN
        EXIT(FirstColumn);

      EXIT(FirstColumn + '..' + LastColumn);
    END;

    LOCAL PROCEDURE SetPointsAnalysisColumn@22();
    VAR
      AnalysisColumn2@1013 : Record 7118;
      tmpFirstColumn@1000 : Text[80];
      tmpLastColumn@1001 : Text[80];
      tmpFirstLineNo@1003 : Integer;
      tmpLastLineNo@1002 : Integer;
    BEGIN
      AnalysisColumn2.SETRANGE("Analysis Area",AnalysisColumn2."Analysis Area"::Purchase);
      AnalysisColumn2.SETRANGE("Analysis Column Template",CurrentColumnTemplate);

      IF (Direction = Direction::Forward) OR
         (FirstColumn = '') THEN BEGIN
        IF LastColumn = '' THEN BEGIN
          IF AnalysisColumn2.FIND('-') THEN;
          tmpFirstColumn := AnalysisColumn2."Column No.";
          tmpFirstLineNo := AnalysisColumn2."Line No.";
          AnalysisColumn2.NEXT(NoOfColumns - 1);
          tmpLastColumn := AnalysisColumn2."Column No.";
          tmpLastLineNo := AnalysisColumn2."Line No.";
        END ELSE BEGIN
          IF AnalysisColumn2.GET(AnalysisColumn2."Analysis Area"::Purchase,CurrentColumnTemplate,LastLineNo) THEN;
          AnalysisColumn2.NEXT(1);
          tmpFirstColumn := AnalysisColumn2."Column No.";
          tmpFirstLineNo := AnalysisColumn2."Line No.";
          AnalysisColumn2.NEXT(NoOfColumns - 1);
          tmpLastColumn := AnalysisColumn2."Column No.";
          tmpLastLineNo := AnalysisColumn2."Line No.";
        END;
      END ELSE BEGIN
        IF AnalysisColumn2.GET(AnalysisColumn2."Analysis Area"::Purchase,CurrentColumnTemplate,FirstLineNo) THEN;
        AnalysisColumn2.NEXT(-1);
        tmpLastColumn := AnalysisColumn2."Column No.";
        tmpLastLineNo := AnalysisColumn2."Line No.";
        AnalysisColumn2.NEXT(-NoOfColumns + 1);
        tmpFirstColumn := AnalysisColumn2."Column No.";
        tmpFirstLineNo := AnalysisColumn2."Line No.";
      END;

      IF (tmpFirstColumn = tmpLastColumn) AND
         ((tmpLastColumn = LastColumn) OR (tmpFirstColumn = FirstColumn)) THEN
        EXIT;

      FirstColumn := tmpFirstColumn;
      LastColumn := tmpLastColumn;
      FirstLineNo := tmpFirstLineNo;
      LastLineNo := tmpLastLineNo;
    END;

    LOCAL PROCEDURE FillMatrixColumns@8();
    VAR
      AnalysisColumn2@1013 : Record 7118;
      i@1004 : Integer;
    BEGIN
      AnalysisColumn2.SETRANGE("Analysis Area",AnalysisColumn2."Analysis Area"::Purchase);
      AnalysisColumn2.SETRANGE("Analysis Column Template",CurrentColumnTemplate);
      AnalysisColumn2.SETRANGE("Line No.",FirstLineNo,LastLineNo);
      i := 1;

      IF AnalysisColumn2.FIND('-') THEN
        REPEAT
          MatrixColumnCaptions[i] := AnalysisColumn2."Column Header";
          i := i + 1;
        UNTIL (AnalysisColumn2.NEXT = 0) OR (i > ARRAYLEN(MatrixColumnCaptions));
    END;

    PROCEDURE ClearPoints@5();
    BEGIN
      CLEAR(FirstColumn);
      CLEAR(LastColumn);
    END;

    PROCEDURE SetReportName@10(NewReportName@1000 : Code[10]);
    BEGIN
      NewCurrentReportName := NewReportName;
    END;

    BEGIN
    END.
  }
}
