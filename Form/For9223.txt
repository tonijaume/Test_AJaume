OBJECT Form 9223 Item Statistics Matrix
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVW16.00;
  }
  PROPERTIES
  {
    Width=20790;
    Height=5940;
    Editable=No;
    CaptionML=ENU=Item Statistics Matrix;
    LinksAllowed=No;
    SourceTable=Table367;
    DataCaptionExpr=ItemName;
    OnOpenForm=BEGIN
                 CurrForm.Field1.VISIBLE(1 <= MATRIX_CurrentNoOfMatrixColumn);
                 CurrForm.Field2.VISIBLE(2 <= MATRIX_CurrentNoOfMatrixColumn);
                 CurrForm.Field3.VISIBLE(3 <= MATRIX_CurrentNoOfMatrixColumn);
                 CurrForm.Field4.VISIBLE(4 <= MATRIX_CurrentNoOfMatrixColumn);
                 CurrForm.Field5.VISIBLE(5 <= MATRIX_CurrentNoOfMatrixColumn);
                 CurrForm.Field6.VISIBLE(6 <= MATRIX_CurrentNoOfMatrixColumn);
                 CurrForm.Field7.VISIBLE(7 <= MATRIX_CurrentNoOfMatrixColumn);
                 CurrForm.Field8.VISIBLE(8 <= MATRIX_CurrentNoOfMatrixColumn);
                 CurrForm.Field9.VISIBLE(9 <= MATRIX_CurrentNoOfMatrixColumn);
                 CurrForm.Field10.VISIBLE(10 <= MATRIX_CurrentNoOfMatrixColumn);
                 CurrForm.Field11.VISIBLE(11 <= MATRIX_CurrentNoOfMatrixColumn);
                 CurrForm.Field12.VISIBLE(12 <= MATRIX_CurrentNoOfMatrixColumn);
                 CurrForm.Field13.VISIBLE(13 <= MATRIX_CurrentNoOfMatrixColumn);
                 CurrForm.Field14.VISIBLE(14 <= MATRIX_CurrentNoOfMatrixColumn);
                 CurrForm.Field15.VISIBLE(15 <= MATRIX_CurrentNoOfMatrixColumn);
                 CurrForm.Field16.VISIBLE(16 <= MATRIX_CurrentNoOfMatrixColumn);
                 CurrForm.Field17.VISIBLE(17 <= MATRIX_CurrentNoOfMatrixColumn);
                 CurrForm.Field18.VISIBLE(18 <= MATRIX_CurrentNoOfMatrixColumn);
                 CurrForm.Field19.VISIBLE(19 <= MATRIX_CurrentNoOfMatrixColumn);
                 CurrForm.Field20.VISIBLE(20 <= MATRIX_CurrentNoOfMatrixColumn);
                 CurrForm.Field21.VISIBLE(21 <= MATRIX_CurrentNoOfMatrixColumn);
                 CurrForm.Field22.VISIBLE(22 <= MATRIX_CurrentNoOfMatrixColumn);
                 CurrForm.Field23.VISIBLE(23 <= MATRIX_CurrentNoOfMatrixColumn);
                 CurrForm.Field24.VISIBLE(24 <= MATRIX_CurrentNoOfMatrixColumn);
                 CurrForm.Field25.VISIBLE(25 <= MATRIX_CurrentNoOfMatrixColumn);
                 CurrForm.Field26.VISIBLE(26 <= MATRIX_CurrentNoOfMatrixColumn);
                 CurrForm.Field27.VISIBLE(27 <= MATRIX_CurrentNoOfMatrixColumn);
                 CurrForm.Field28.VISIBLE(28 <= MATRIX_CurrentNoOfMatrixColumn);
                 CurrForm.Field29.VISIBLE(29 <= MATRIX_CurrentNoOfMatrixColumn);
                 CurrForm.Field30.VISIBLE(30 <= MATRIX_CurrentNoOfMatrixColumn);
                 CurrForm.Field31.VISIBLE(31 <= MATRIX_CurrentNoOfMatrixColumn);
                 CurrForm.Field32.VISIBLE(32 <= MATRIX_CurrentNoOfMatrixColumn);

                 GLSetup.GET;

                 WITH Item DO BEGIN
                   IF "No." <> '' THEN
                     ItemFilter := "No.";
                   IF GETFILTER("Date Filter") <> '' THEN
                     DateFilter := GETFILTER("Date Filter");
                   IF GETFILTER("Variant Filter") <> '' THEN
                     VariantFilter := GETFILTER("Variant Filter");
                   IF GETFILTER("Location Filter") <> '' THEN
                     LocationFilter := GETFILTER("Location Filter");
                 END;

                 IF ColumnDimCode = '' THEN
                   ColumnDimCode := Text002;
                 ItemBuffer."Column Option" := DimCodeToOption(ColumnDimCode);
                 PeriodInitialized := DateFilter <> '';
                 FindPeriod('');
                 ItemName := STRSUBSTNO('%1  %2',Item."No.",Item.Description);
               END;

    OnFindRecord=BEGIN
                   WITH ItemBuffer DO BEGIN
                     IF "Line Option" = "Line Option"::"Profit Calculation" THEN
                       IntegerLine.SETRANGE(Number,1,5)
                     ELSE
                       IF "Line Option" = "Line Option"::"Cost Specification" THEN
                         IntegerLine.SETRANGE(Number,1,9);
                     EXIT(FindRec("Line Option",Rec,Which));
                   END;
                 END;

    OnNextRecord=BEGIN
                   EXIT(NextRec(ItemBuffer."Line Option",Rec,Steps));
                 END;

    OnAfterGetRecord=VAR
                       xMATRIX_CurrentColumnOrdinal@1044 : Integer;
                       MATRIX_Steps@1000 : Integer;
                     BEGIN
                       Amount := Calculate(FALSE);
                       MATRIX_ColumnOrdinal := 0;
                       IF MATRIX_OnFindRecord('=><') THEN BEGIN
                         MATRIX_ColumnOrdinal := 1;
                         REPEAT
                           MATRIX_OnAfterGetRecord(MATRIX_ColumnOrdinal);
                           VarMATRIX_CellData[MATRIX_ColumnOrdinal] := FORMAT(MATRIX_CellData[MATRIX_ColumnOrdinal]);
                           AmountOnFormat(VarMATRIX_CellData[MATRIX_ColumnOrdinal]);
                           MATRIX_Steps := MATRIX_OnNextRecord(1);
                           MATRIX_ColumnOrdinal := MATRIX_ColumnOrdinal + MATRIX_Steps;
                         UNTIL (MATRIX_ColumnOrdinal - MATRIX_Steps = ARRAYLEN(MatrixRecords)) OR (MATRIX_Steps = 0);
                         IF MATRIX_ColumnOrdinal <> 1 THEN
                           MATRIX_OnNextRecord(1 - MATRIX_ColumnOrdinal);
                       END;

                       VarAmount := FORMAT(Amount);
                       AmountOnFormat(VarAmount);
                     END;

  }
  CONTROLS
  {
    { 1   ;TableBox     ;220  ;220  ;20350;5500 ;HorzGlue=Both;
                                                 VertGlue=Both }
    { 22  ;TextBox      ;3493 ;3080 ;2420 ;440  ;ParentControl=1;
                                                 InColumn=Yes;
                                                 SourceExpr=Name;
                                                 OnFormat=BEGIN
                                                            CurrForm.Name.UPDATEFONTBOLD("Show in Bold");
                                                            CurrForm.Name.UPDATEINDENT(220 * Indentation);
                                                          END;
                                                           }
    { 1045;Label        ;0    ;0    ;0    ;0    ;ParentControl=22;
                                                 InColumnHeading=Yes }
    { 30  ;TextBox      ;3493 ;3080 ;2375 ;440  ;ParentControl=1;
                                                 InColumn=Yes;
                                                 CaptionML=ENU=Total Amount;
                                                 BlankZero=Yes;
                                                 SourceExpr=VarAmount;
                                                 OnDrillDown=BEGIN
                                                               WITH ItemBuffer DO
                                                                 IF NOT (("Line Option" = "Line Option"::"Profit Calculation") AND
                                                                   ((Name = FIELDCAPTION("Profit (LCY)")) OR (Name = FIELDCAPTION("Profit %"))) OR
                                                                   (("Line Option" = "Line Option"::"Cost Specification") AND (Name = FIELDCAPTION("Inventoriable Costs"))))
                                                                 THEN BEGIN
                                                                   SetCommonFilters(ItemBuffer);
                                                                   SetFilters(ItemBuffer,0);
                                                                   DrillDown;
                                                                 END;
                                                             END;
                                                              }
    { 1046;Label        ;0    ;0    ;0    ;0    ;ParentControl=30;
                                                 InColumnHeading=Yes;
                                                 CaptionML=ENU=Total Amount }
    { 1012;TextBox      ;3493 ;3080 ;2420 ;440  ;Name=Field1;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 BlankZero=Yes;
                                                 SourceExpr=VarMATRIX_CellData[1];
                                                 CaptionClass='3,' + MATRIX_CaptionSet[1];
                                                 OnDrillDown=BEGIN
                                                               MATRIX_OnDrillDown(1);
                                                             END;
                                                              }
    { 1047;Label        ;0    ;0    ;0    ;0    ;ParentControl=1012;
                                                 InColumnHeading=Yes }
    { 1013;TextBox      ;3493 ;3080 ;2420 ;440  ;Name=Field2;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 BlankZero=Yes;
                                                 SourceExpr=VarMATRIX_CellData[2];
                                                 CaptionClass='3,' + MATRIX_CaptionSet[2];
                                                 OnDrillDown=BEGIN
                                                               MATRIX_OnDrillDown(2);
                                                             END;
                                                              }
    { 1048;Label        ;0    ;0    ;0    ;0    ;ParentControl=1013;
                                                 InColumnHeading=Yes }
    { 1014;TextBox      ;3493 ;3080 ;2420 ;440  ;Name=Field3;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 BlankZero=Yes;
                                                 SourceExpr=VarMATRIX_CellData[3];
                                                 CaptionClass='3,' + MATRIX_CaptionSet[3];
                                                 OnDrillDown=BEGIN
                                                               MATRIX_OnDrillDown(3);
                                                             END;
                                                              }
    { 1049;Label        ;0    ;0    ;0    ;0    ;ParentControl=1014;
                                                 InColumnHeading=Yes }
    { 1015;TextBox      ;3493 ;3080 ;2420 ;440  ;Name=Field4;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 BlankZero=Yes;
                                                 SourceExpr=VarMATRIX_CellData[4];
                                                 CaptionClass='3,' + MATRIX_CaptionSet[4];
                                                 OnDrillDown=BEGIN
                                                               MATRIX_OnDrillDown(4);
                                                             END;
                                                              }
    { 1050;Label        ;0    ;0    ;0    ;0    ;ParentControl=1015;
                                                 InColumnHeading=Yes }
    { 1016;TextBox      ;3493 ;3080 ;2420 ;440  ;Name=Field5;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 BlankZero=Yes;
                                                 SourceExpr=VarMATRIX_CellData[5];
                                                 CaptionClass='3,' + MATRIX_CaptionSet[5];
                                                 OnDrillDown=BEGIN
                                                               MATRIX_OnDrillDown(5);
                                                             END;
                                                              }
    { 1051;Label        ;0    ;0    ;0    ;0    ;ParentControl=1016;
                                                 InColumnHeading=Yes }
    { 1017;TextBox      ;3493 ;3080 ;2420 ;440  ;Name=Field6;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 BlankZero=Yes;
                                                 SourceExpr=VarMATRIX_CellData[6];
                                                 CaptionClass='3,' + MATRIX_CaptionSet[6];
                                                 OnDrillDown=BEGIN
                                                               MATRIX_OnDrillDown(6);
                                                             END;
                                                              }
    { 1052;Label        ;0    ;0    ;0    ;0    ;ParentControl=1017;
                                                 InColumnHeading=Yes }
    { 1018;TextBox      ;3493 ;3080 ;2420 ;440  ;Name=Field7;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 BlankZero=Yes;
                                                 SourceExpr=VarMATRIX_CellData[7];
                                                 CaptionClass='3,' + MATRIX_CaptionSet[7];
                                                 OnDrillDown=BEGIN
                                                               MATRIX_OnDrillDown(7);
                                                             END;
                                                              }
    { 1053;Label        ;0    ;0    ;0    ;0    ;ParentControl=1018;
                                                 InColumnHeading=Yes }
    { 1019;TextBox      ;3493 ;3080 ;2420 ;440  ;Name=Field8;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 BlankZero=Yes;
                                                 SourceExpr=VarMATRIX_CellData[8];
                                                 CaptionClass='3,' + MATRIX_CaptionSet[8];
                                                 OnDrillDown=BEGIN
                                                               MATRIX_OnDrillDown(8);
                                                             END;
                                                              }
    { 1054;Label        ;0    ;0    ;0    ;0    ;ParentControl=1019;
                                                 InColumnHeading=Yes }
    { 1020;TextBox      ;3493 ;3080 ;2420 ;440  ;Name=Field9;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 BlankZero=Yes;
                                                 SourceExpr=VarMATRIX_CellData[9];
                                                 CaptionClass='3,' + MATRIX_CaptionSet[9];
                                                 OnDrillDown=BEGIN
                                                               MATRIX_OnDrillDown(9);
                                                             END;
                                                              }
    { 1055;Label        ;0    ;0    ;0    ;0    ;ParentControl=1020;
                                                 InColumnHeading=Yes }
    { 1021;TextBox      ;3493 ;3080 ;2420 ;440  ;Name=Field10;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 BlankZero=Yes;
                                                 SourceExpr=VarMATRIX_CellData[10];
                                                 CaptionClass='3,' + MATRIX_CaptionSet[10];
                                                 OnDrillDown=BEGIN
                                                               MATRIX_OnDrillDown(10);
                                                             END;
                                                              }
    { 1056;Label        ;0    ;0    ;0    ;0    ;ParentControl=1021;
                                                 InColumnHeading=Yes }
    { 1022;TextBox      ;3493 ;3080 ;2420 ;440  ;Name=Field11;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 BlankZero=Yes;
                                                 SourceExpr=VarMATRIX_CellData[11];
                                                 CaptionClass='3,' + MATRIX_CaptionSet[11];
                                                 OnDrillDown=BEGIN
                                                               MATRIX_OnDrillDown(11);
                                                             END;
                                                              }
    { 1057;Label        ;0    ;0    ;0    ;0    ;ParentControl=1022;
                                                 InColumnHeading=Yes }
    { 1023;TextBox      ;3493 ;3080 ;2420 ;440  ;Name=Field12;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 BlankZero=Yes;
                                                 SourceExpr=VarMATRIX_CellData[12];
                                                 CaptionClass='3,' + MATRIX_CaptionSet[12];
                                                 OnDrillDown=BEGIN
                                                               MATRIX_OnDrillDown(12);
                                                             END;
                                                              }
    { 1058;Label        ;0    ;0    ;0    ;0    ;ParentControl=1023;
                                                 InColumnHeading=Yes }
    { 1024;TextBox      ;3493 ;3080 ;2420 ;440  ;Name=Field13;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 BlankZero=Yes;
                                                 SourceExpr=VarMATRIX_CellData[13];
                                                 CaptionClass='3,' + MATRIX_CaptionSet[13];
                                                 OnDrillDown=BEGIN
                                                               MATRIX_OnDrillDown(13);
                                                             END;
                                                              }
    { 1059;Label        ;0    ;0    ;0    ;0    ;ParentControl=1024;
                                                 InColumnHeading=Yes }
    { 1025;TextBox      ;3493 ;3080 ;2420 ;440  ;Name=Field14;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 BlankZero=Yes;
                                                 SourceExpr=VarMATRIX_CellData[14];
                                                 CaptionClass='3,' + MATRIX_CaptionSet[14];
                                                 OnDrillDown=BEGIN
                                                               MATRIX_OnDrillDown(14);
                                                             END;
                                                              }
    { 1060;Label        ;0    ;0    ;0    ;0    ;ParentControl=1025;
                                                 InColumnHeading=Yes }
    { 1026;TextBox      ;3493 ;3080 ;2420 ;440  ;Name=Field15;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 BlankZero=Yes;
                                                 SourceExpr=VarMATRIX_CellData[15];
                                                 CaptionClass='3,' + MATRIX_CaptionSet[15];
                                                 OnDrillDown=BEGIN
                                                               MATRIX_OnDrillDown(15);
                                                             END;
                                                              }
    { 1061;Label        ;0    ;0    ;0    ;0    ;ParentControl=1026;
                                                 InColumnHeading=Yes }
    { 1027;TextBox      ;3493 ;3080 ;2420 ;440  ;Name=Field16;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 BlankZero=Yes;
                                                 SourceExpr=VarMATRIX_CellData[16];
                                                 CaptionClass='3,' + MATRIX_CaptionSet[16];
                                                 OnDrillDown=BEGIN
                                                               MATRIX_OnDrillDown(16);
                                                             END;
                                                              }
    { 1062;Label        ;0    ;0    ;0    ;0    ;ParentControl=1027;
                                                 InColumnHeading=Yes }
    { 1028;TextBox      ;3493 ;3080 ;2420 ;440  ;Name=Field17;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 BlankZero=Yes;
                                                 SourceExpr=VarMATRIX_CellData[17];
                                                 CaptionClass='3,' + MATRIX_CaptionSet[17];
                                                 OnDrillDown=BEGIN
                                                               MATRIX_OnDrillDown(17);
                                                             END;
                                                              }
    { 1063;Label        ;0    ;0    ;0    ;0    ;ParentControl=1028;
                                                 InColumnHeading=Yes }
    { 1029;TextBox      ;3493 ;3080 ;2420 ;440  ;Name=Field18;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 BlankZero=Yes;
                                                 SourceExpr=VarMATRIX_CellData[18];
                                                 CaptionClass='3,' + MATRIX_CaptionSet[18];
                                                 OnDrillDown=BEGIN
                                                               MATRIX_OnDrillDown(18);
                                                             END;
                                                              }
    { 1064;Label        ;0    ;0    ;0    ;0    ;ParentControl=1029;
                                                 InColumnHeading=Yes }
    { 1030;TextBox      ;3493 ;3080 ;2420 ;440  ;Name=Field19;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 BlankZero=Yes;
                                                 SourceExpr=VarMATRIX_CellData[19];
                                                 CaptionClass='3,' + MATRIX_CaptionSet[19];
                                                 OnDrillDown=BEGIN
                                                               MATRIX_OnDrillDown(19);
                                                             END;
                                                              }
    { 1065;Label        ;0    ;0    ;0    ;0    ;ParentControl=1030;
                                                 InColumnHeading=Yes }
    { 1031;TextBox      ;3493 ;3080 ;2420 ;440  ;Name=Field20;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 BlankZero=Yes;
                                                 SourceExpr=VarMATRIX_CellData[20];
                                                 CaptionClass='3,' + MATRIX_CaptionSet[20];
                                                 OnDrillDown=BEGIN
                                                               MATRIX_OnDrillDown(20);
                                                             END;
                                                              }
    { 1066;Label        ;0    ;0    ;0    ;0    ;ParentControl=1031;
                                                 InColumnHeading=Yes }
    { 1032;TextBox      ;3493 ;3080 ;2420 ;440  ;Name=Field21;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 BlankZero=Yes;
                                                 SourceExpr=VarMATRIX_CellData[21];
                                                 CaptionClass='3,' + MATRIX_CaptionSet[21];
                                                 OnDrillDown=BEGIN
                                                               MATRIX_OnDrillDown(21);
                                                             END;
                                                              }
    { 1067;Label        ;0    ;0    ;0    ;0    ;ParentControl=1032;
                                                 InColumnHeading=Yes }
    { 1033;TextBox      ;3493 ;3080 ;2420 ;440  ;Name=Field22;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 BlankZero=Yes;
                                                 SourceExpr=VarMATRIX_CellData[22];
                                                 CaptionClass='3,' + MATRIX_CaptionSet[22];
                                                 OnDrillDown=BEGIN
                                                               MATRIX_OnDrillDown(22);
                                                             END;
                                                              }
    { 1068;Label        ;0    ;0    ;0    ;0    ;ParentControl=1033;
                                                 InColumnHeading=Yes }
    { 1034;TextBox      ;3493 ;3080 ;2420 ;440  ;Name=Field23;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 BlankZero=Yes;
                                                 SourceExpr=VarMATRIX_CellData[23];
                                                 CaptionClass='3,' + MATRIX_CaptionSet[23];
                                                 OnDrillDown=BEGIN
                                                               MATRIX_OnDrillDown(23);
                                                             END;
                                                              }
    { 1069;Label        ;0    ;0    ;0    ;0    ;ParentControl=1034;
                                                 InColumnHeading=Yes }
    { 1035;TextBox      ;3493 ;3080 ;2420 ;440  ;Name=Field24;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 BlankZero=Yes;
                                                 SourceExpr=VarMATRIX_CellData[24];
                                                 CaptionClass='3,' + MATRIX_CaptionSet[24];
                                                 OnDrillDown=BEGIN
                                                               MATRIX_OnDrillDown(24);
                                                             END;
                                                              }
    { 1070;Label        ;0    ;0    ;0    ;0    ;ParentControl=1035;
                                                 InColumnHeading=Yes }
    { 1036;TextBox      ;3493 ;3080 ;2420 ;440  ;Name=Field25;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 BlankZero=Yes;
                                                 SourceExpr=VarMATRIX_CellData[25];
                                                 CaptionClass='3,' + MATRIX_CaptionSet[25];
                                                 OnDrillDown=BEGIN
                                                               MATRIX_OnDrillDown(25);
                                                             END;
                                                              }
    { 1071;Label        ;0    ;0    ;0    ;0    ;ParentControl=1036;
                                                 InColumnHeading=Yes }
    { 1037;TextBox      ;3493 ;3080 ;2420 ;440  ;Name=Field26;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 BlankZero=Yes;
                                                 SourceExpr=VarMATRIX_CellData[26];
                                                 CaptionClass='3,' + MATRIX_CaptionSet[26];
                                                 OnDrillDown=BEGIN
                                                               MATRIX_OnDrillDown(26);
                                                             END;
                                                              }
    { 1072;Label        ;0    ;0    ;0    ;0    ;ParentControl=1037;
                                                 InColumnHeading=Yes }
    { 1038;TextBox      ;3493 ;3080 ;2420 ;440  ;Name=Field27;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 BlankZero=Yes;
                                                 SourceExpr=VarMATRIX_CellData[27];
                                                 CaptionClass='3,' + MATRIX_CaptionSet[27];
                                                 OnDrillDown=BEGIN
                                                               MATRIX_OnDrillDown(27);
                                                             END;
                                                              }
    { 1073;Label        ;0    ;0    ;0    ;0    ;ParentControl=1038;
                                                 InColumnHeading=Yes }
    { 1039;TextBox      ;3493 ;3080 ;2420 ;440  ;Name=Field28;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 BlankZero=Yes;
                                                 SourceExpr=VarMATRIX_CellData[28];
                                                 CaptionClass='3,' + MATRIX_CaptionSet[28];
                                                 OnDrillDown=BEGIN
                                                               MATRIX_OnDrillDown(28);
                                                             END;
                                                              }
    { 1074;Label        ;0    ;0    ;0    ;0    ;ParentControl=1039;
                                                 InColumnHeading=Yes }
    { 1040;TextBox      ;3493 ;3080 ;2420 ;440  ;Name=Field29;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 BlankZero=Yes;
                                                 SourceExpr=VarMATRIX_CellData[29];
                                                 CaptionClass='3,' + MATRIX_CaptionSet[29];
                                                 OnDrillDown=BEGIN
                                                               MATRIX_OnDrillDown(29);
                                                             END;
                                                              }
    { 1075;Label        ;0    ;0    ;0    ;0    ;ParentControl=1040;
                                                 InColumnHeading=Yes }
    { 1041;TextBox      ;3493 ;3080 ;2420 ;440  ;Name=Field30;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 BlankZero=Yes;
                                                 SourceExpr=VarMATRIX_CellData[30];
                                                 CaptionClass='3,' + MATRIX_CaptionSet[30];
                                                 OnDrillDown=BEGIN
                                                               MATRIX_OnDrillDown(30);
                                                             END;
                                                              }
    { 1076;Label        ;0    ;0    ;0    ;0    ;ParentControl=1041;
                                                 InColumnHeading=Yes }
    { 1042;TextBox      ;3493 ;3080 ;2420 ;440  ;Name=Field31;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 BlankZero=Yes;
                                                 SourceExpr=VarMATRIX_CellData[31];
                                                 CaptionClass='3,' + MATRIX_CaptionSet[31];
                                                 OnDrillDown=BEGIN
                                                               MATRIX_OnDrillDown(31);
                                                             END;
                                                              }
    { 1077;Label        ;0    ;0    ;0    ;0    ;ParentControl=1042;
                                                 InColumnHeading=Yes }
    { 1043;TextBox      ;3493 ;3080 ;2420 ;440  ;Name=Field32;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 BlankZero=Yes;
                                                 SourceExpr=VarMATRIX_CellData[32];
                                                 CaptionClass='3,' + MATRIX_CaptionSet[32];
                                                 OnDrillDown=BEGIN
                                                               MATRIX_OnDrillDown(32);
                                                             END;
                                                              }
    { 1078;Label        ;0    ;0    ;0    ;0    ;ParentControl=1043;
                                                 InColumnHeading=Yes }
  }
  CODE
  {
    VAR
      Text000@1079 : TextConst 'ENU=<Sign><Integer Thousand><Decimals,2>';
      GLSetup@1080 : Record 98;
      Item@1081 : Record 27;
      ItemBuffer@1082 : Record 5821;
      IntegerLine@1083 : Record 2000000026;
      ColumnDimCode@1084 : Text[30];
      ItemName@1085 : Text[250];
      PeriodType@1086 : 'Day,Week,Month,Quarter,Year,Accounting Period';
      RoundingFactor@1087 : 'None,1,1000,1000000';
      AmountType@1088 : 'Net Change,Balance at Date';
      DateFilter@1089 : Text[30];
      InternalDateFilter@1090 : Text[30];
      ItemFilter@1091 : Code[250];
      VariantFilter@1092 : Code[250];
      LocationFilter@1093 : Code[250];
      ItemChargesFilter@1094 : Code[250];
      MatrixHeader@1095 : Text[30];
      PeriodInitialized@1096 : Boolean;
      InputError@1097 : Boolean;
      PerUnit@1098 : Boolean;
      IncludeExpected@1099 : Boolean;
      InputErrorText@1100 : Text[250];
      Qty@1101 : Decimal;
      CellAmount@1102 : Decimal;
      Text002@1103 : TextConst 'ENU=Period';
      Text003@1104 : TextConst 'ENU=%1 is not a valid column definition.';
      GLSetupRead@1105 : Boolean;
      MatrixRecords@1106 : ARRAY [32] OF Record 367;
      MATRIX_CurrentNoOfMatrixColumn@1107 : Integer;
      MATRIX_ColumnOrdinal@1000 : Integer;
      MATRIX_CellData@1108 : ARRAY [32] OF Decimal;
      VarMATRIX_CellData@1004 : ARRAY [32] OF Text[30];
      MATRIX_CaptionSet@1109 : ARRAY [32] OF Text[1024];
      MatrixRecord@1001 : Record 367;
      PrimaryKeyFirstCaptionInCurrSe@1002 : Text[1024];
      VarAmount@1003 : Text[30];

    LOCAL PROCEDURE DimCodeToOption@1110(DimCode@1000 : Text[30]) : Integer;
    VAR
      Location@1111 : Record 14;
    BEGIN
      CASE DimCode OF
        '' :
          EXIT(-1);
        Text002 :
          EXIT(4);
        Location.TABLECAPTION :
          EXIT(5);
        ELSE
          EXIT(-1);
      END;
    END;

    LOCAL PROCEDURE FindRec@1112(DimOption@1000 : 'Profit Calculation,Cost Specification,Purch. Item Charge Spec.,Sales Item Charge Spec.,Period,Location';VAR DimCodeBuf@1001 : Record 367;Which@1002 : Text[250]) : Boolean;
    VAR
      ItemCharge@1113 : Record 5800;
      Location@1114 : Record 14;
      Period@1115 : Record 2000000007;
      PeriodFormMgt@1116 : Codeunit 359;
      Found@1117 : Boolean;
    BEGIN
      CASE DimOption OF
        DimOption::"Profit Calculation",
        DimOption::"Cost Specification":
          BEGIN
            IF EVALUATE(IntegerLine.Number,DimCodeBuf.Code) THEN;
              Found := IntegerLine.FIND(Which);
              IF Found THEN
                CopyDimValueToBuf(IntegerLine,DimCodeBuf);
          END;
          DimOption::"Purch. Item Charge Spec.",
          DimOption::"Sales Item Charge Spec.":
            BEGIN
              ItemCharge."No." := DimCodeBuf.Code;
              Found := ItemCharge.FIND(Which);
              IF Found THEN
                CopyAddChargesToBuf(ItemCharge,DimCodeBuf);
            END;
          DimOption::Period:
            BEGIN
              IF NOT PeriodInitialized THEN
                DateFilter := '';
              PeriodInitialized := TRUE;
              Period."Period Start" := DimCodeBuf."Period Start";
              IF DateFilter <> '' THEN
                Period.SETFILTER("Period Start",DateFilter)
              ELSE
                IF NOT PeriodInitialized AND (InternalDateFilter <> '') THEN
                  Period.SETFILTER("Period Start",InternalDateFilter);
              Found := PeriodFormMgt.FindDate(Which,Period,PeriodType);
              IF Found THEN
                CopyPeriodToBuf(Period,DimCodeBuf);
            END;
          DimOption::Location:
            BEGIN
              Location.Code := DimCodeBuf.Code;
              IF LocationFilter <> '' THEN
                Location.SETFILTER(Code,LocationFilter);
              Found := Location.FIND(Which);
              IF Found THEN
                CopyLocationToBuf(Location,DimCodeBuf);
            END;
      END;
      EXIT(Found);
    END;

    LOCAL PROCEDURE NextRec@1118(DimOption@1000 : 'Profit Calculation,Cost Specification,Purch. Item Charge Spec.,Sales Item Charge Spec.,Period,Location';VAR DimCodeBuf@1001 : Record 367;Steps@1002 : Integer) : Integer;
    VAR
      ItemCharge@1119 : Record 5800;
      Location@1120 : Record 14;
      Period@1121 : Record 2000000007;
      PeriodFormMgt@1122 : Codeunit 359;
      ResultSteps@1123 : Integer;
    BEGIN
      CASE DimOption OF
        DimOption::"Profit Calculation",
        DimOption::"Cost Specification":
          BEGIN
            IF EVALUATE(IntegerLine.Number,DimCodeBuf.Code) THEN;
              ResultSteps := IntegerLine.NEXT(Steps);
            IF ResultSteps <> 0  THEN
              CopyDimValueToBuf(IntegerLine,DimCodeBuf);
          END;
        DimOption::"Purch. Item Charge Spec.",
        DimOption::"Sales Item Charge Spec.":
          BEGIN
            ItemCharge."No." := DimCodeBuf.Code;
            IF ItemChargesFilter <> '' THEN
              ItemCharge.SETFILTER("No.",ItemChargesFilter);
            ResultSteps := ItemCharge.NEXT(Steps);
            IF ResultSteps <> 0 THEN
              CopyAddChargesToBuf(ItemCharge,DimCodeBuf);
          END;
        DimOption::Period:
          BEGIN
            IF DateFilter <> '' THEN
              Period.SETFILTER("Period Start",DateFilter);
            Period."Period Start" := DimCodeBuf."Period Start";
            ResultSteps := PeriodFormMgt.NextDate(Steps,Period,PeriodType);
            IF ResultSteps <> 0 THEN
              CopyPeriodToBuf(Period,DimCodeBuf);
          END;
        DimOption::Location:
          BEGIN
            Location.Code := DimCodeBuf.Code;
            IF LocationFilter <> '' THEN
              Location.SETFILTER(Code,LocationFilter);
            ResultSteps := Location.NEXT(Steps);
            IF ResultSteps <> 0 THEN
              CopyLocationToBuf(Location,DimCodeBuf);
          END;
      END;
      EXIT(ResultSteps);
    END;

    LOCAL PROCEDURE CopyDimValueToBuf@1124(VAR TheDimValue@1000 : Record 2000000026;VAR TheDimCodeBuf@1001 : Record 367);
    BEGIN
      WITH ItemBuffer DO
        CASE "Line Option" OF
          "Line Option"::"Profit Calculation":
            CASE TheDimValue.Number OF
              1: InsertRow('1',FIELDCAPTION("Sales (LCY)"),0,FALSE,TheDimCodeBuf);
              2: InsertRow('2',FIELDCAPTION("COGS (LCY)"),0,FALSE,TheDimCodeBuf);
              3: InsertRow('3',FIELDCAPTION("Non-Invtbl. Costs (LCY)"),0,FALSE,TheDimCodeBuf);
              4: InsertRow('4',FIELDCAPTION("Profit (LCY)"),0,FALSE,TheDimCodeBuf);
              5: InsertRow('5',FIELDCAPTION("Profit %"),0,FALSE,TheDimCodeBuf);
            END;
            "Line Option"::"Cost Specification":
              CASE TheDimValue.Number OF
                1: InsertRow('1',FIELDCAPTION("Inventoriable Costs"),0,TRUE,TheDimCodeBuf);
                2: InsertRow('2',FIELDCAPTION("Direct Cost (LCY)"),1,FALSE,TheDimCodeBuf);
                3: InsertRow('3',FIELDCAPTION("Revaluation (LCY)"),1,FALSE,TheDimCodeBuf);
                4: InsertRow('4',FIELDCAPTION("Rounding (LCY)"),1,FALSE,TheDimCodeBuf);
                5: InsertRow('5',FIELDCAPTION("Indirect Cost (LCY)"),1,FALSE,TheDimCodeBuf);
                6: InsertRow('6',FIELDCAPTION("Variance (LCY)"),1,FALSE,TheDimCodeBuf);
                7: InsertRow('7',FIELDCAPTION("Inventoriable Costs, Total"),0,TRUE,TheDimCodeBuf);
                8: InsertRow('8',FIELDCAPTION("COGS (LCY)"),0,TRUE,TheDimCodeBuf);
                9: InsertRow('9',FIELDCAPTION("Inventory (LCY)"),0,TRUE,TheDimCodeBuf);
              END;
        END
    END;

    LOCAL PROCEDURE CopyAddChargesToBuf@1125(VAR TheItemCharge@1000 : Record 5800;VAR TheDimCodeBuf@1001 : Record 367);
    BEGIN
      WITH TheDimCodeBuf DO BEGIN
        INIT;
        Code := TheItemCharge."No.";
        Name := COPYSTR(
          STRSUBSTNO('%1 %2',TheItemCharge."No.",TheItemCharge.Description),1,50);
      END;
    END;

    LOCAL PROCEDURE CopyLocationToBuf@1126(VAR TheLocation@1000 : Record 14;VAR TheDimCodeBuf@1001 : Record 367);
    BEGIN
      WITH TheDimCodeBuf DO BEGIN
        INIT;
        Code := TheLocation.Code;
        Name := TheLocation.Name;
      END;
    END;

    LOCAL PROCEDURE CopyPeriodToBuf@1127(VAR ThePeriod@1000 : Record 2000000007;VAR TheDimCodeBuf@1001 : Record 367);
    BEGIN
      WITH TheDimCodeBuf DO BEGIN
        INIT;
        Code := FORMAT(ThePeriod."Period Start");
        "Period Start" := ThePeriod."Period Start";
        "Period End" := ThePeriod."Period End";
        Name := ThePeriod."Period Name";
      END;
    END;

    PROCEDURE InsertRow@1128(Code1@1000 : Code[10];Name1@1001 : Text[80];Indentation1@1002 : Integer;Bold1@1003 : Boolean;VAR TheDimCodeBuf@1004 : Record 367);
    BEGIN
      WITH TheDimCodeBuf DO BEGIN
        INIT;
        Code := Code1;
        Name := COPYSTR(Name1,1,MAXSTRLEN(Name));
        Indentation := Indentation1;
        "Show in Bold" := Bold1;
      END;
    END;

    LOCAL PROCEDURE FindPeriod@1129(SearchText@1000 : Code[10]);
    VAR
      Calendar@1130 : Record 2000000007;
      PeriodFormMgt@1131 : Codeunit 359;
    BEGIN
      IF DateFilter <> '' THEN BEGIN
        Calendar.SETFILTER("Period Start",DateFilter);
        IF NOT PeriodFormMgt.FindDate('+',Calendar,PeriodType) THEN
          PeriodFormMgt.FindDate('+',Calendar,PeriodType::Day);
        Calendar.SETRANGE("Period Start");
      END;
      PeriodFormMgt.FindDate(SearchText,Calendar,PeriodType);
      WITH ItemBuffer DO
        IF AmountType = AmountType::"Net Change" THEN BEGIN
          SETRANGE("Date Filter",Calendar."Period Start",Calendar."Period End");
          IF GETRANGEMIN("Date Filter") = GETRANGEMAX("Date Filter") THEN
            SETRANGE("Date Filter",GETRANGEMIN("Date Filter"));
        END ELSE
          SETRANGE("Date Filter",0D,Calendar."Period End");
        InternalDateFilter := ItemBuffer.GETFILTER("Date Filter");
    END;

    LOCAL PROCEDURE FormatAmount@1132(VAR Text@1000 : Text[250]);
    VAR
      Amount@1133 : Decimal;
    BEGIN
      IF (Text = '') OR (RoundingFactor = RoundingFactor::None) THEN
        EXIT;
      EVALUATE(Amount,Text);
      IF NOT (Name = ItemBuffer.FIELDCAPTION("Profit %")) THEN
        CASE RoundingFactor OF
          RoundingFactor::"1":
            Amount := ROUND(Amount,1);
          RoundingFactor::"1000":
            Amount := ROUND(Amount / 1000,0.1);
          RoundingFactor::"1000000":
            Amount := ROUND(Amount / 1000000,0.1);
        END;
      IF Amount = 0 THEN
        Text := ''
      ELSE
        IF NOT (Name = ItemBuffer.FIELDCAPTION("Profit %")) THEN
          CASE RoundingFactor OF
            RoundingFactor::"1":
              Text := FORMAT(Amount);
            RoundingFactor::"1000",RoundingFactor::"1000000":
              Text := FORMAT(Amount,0,Text000);
          END;
    END;

    LOCAL PROCEDURE GetDimSelection@1134(OldDimSelCode@1000 : Text[30]) : Text[30];
    VAR
      Location@1135 : Record 14;
      DimSelection@1136 : Form 568;
    BEGIN
      DimSelection.InsertDimSelBuf(FALSE,Location.TABLECAPTION,Location.TABLECAPTION);
      DimSelection.InsertDimSelBuf(FALSE,Text002,Text002);
      DimSelection.LOOKUPMODE := TRUE;
      IF DimSelection.RUNMODAL = ACTION::LookupOK THEN
        EXIT(DimSelection.GetDimSelCode)
      ELSE
        EXIT(OldDimSelCode);
    END;

    LOCAL PROCEDURE EvaluateAmount@1137(VAR Text@1000 : Text[250]);
    VAR
      Amount@1138 : Decimal;
    BEGIN
      InputError := NOT EVALUATE(Amount,Text);
      IF InputError THEN
        InputErrorText := Text
      ELSE
        CASE RoundingFactor OF
          RoundingFactor::"1000":
            Amount := Amount * 1000;
          RoundingFactor::"1000000":
            Amount := Amount * 1000000;
        END;
      Text := FORMAT(Amount);
    END;

    LOCAL PROCEDURE DrillDown@1139();
    VAR
      ValueEntry@1140 : Record 5802;
    BEGIN
      WITH ItemBuffer DO BEGIN
        ValueEntry.SETCURRENTKEY(
          "Item No.","Posting Date","Item Ledger Entry Type","Entry Type","Variance Type",
          "Item Charge No.","Location Code","Variant Code");
        IF GETFILTER("Item Filter") <> '' THEN
          COPYFILTER("Item Filter", ValueEntry."Item No.");
        IF GETFILTER("Date Filter") <> '' THEN
          COPYFILTER("Date Filter",ValueEntry."Posting Date")
        ELSE
          ValueEntry.SETRANGE("Posting Date",0D,31129999D);
        IF GETFILTER("Entry Type Filter") <> '' THEN
          COPYFILTER("Entry Type Filter",ValueEntry."Entry Type");
        IF GETFILTER("Item Ledger Entry Type Filter") <> '' THEN
          COPYFILTER("Item Ledger Entry Type Filter",ValueEntry."Item Ledger Entry Type");
        IF GETFILTER("Variance Type Filter") <> '' THEN
          COPYFILTER("Variance Type Filter",ValueEntry."Variance Type");
        IF GETFILTER("Item Charge No. Filter") <> '' THEN
          COPYFILTER("Item Charge No. Filter",ValueEntry."Item Charge No.");
        IF GETFILTER("Location Filter") <> '' THEN
          COPYFILTER("Location Filter",ValueEntry."Location Code");
        IF GETFILTER("Variant Filter") <> '' THEN
          COPYFILTER("Variant Filter",ValueEntry."Variant Code");
        CASE TRUE OF
          (("Line Option" = "Line Option"::"Profit Calculation") AND (Name = FIELDCAPTION("Sales (LCY)"))) OR
          ("Line Option" = "Line Option"::"Sales Item Charge Spec."):
            FORM.RUN(0,ValueEntry,ValueEntry."Sales Amount (Actual)");
          Name = FIELDCAPTION("Non-Invtbl. Costs (LCY)"):
            FORM.RUN(0,ValueEntry,ValueEntry."Cost Amount (Non-Invtbl.)");
          ELSE
            FORM.RUN(0,ValueEntry,ValueEntry."Cost Amount (Actual)");
        END;
      END;
    END;

    LOCAL PROCEDURE SetCommonFilters@1141(VAR TheItemBuffer@1000 : Record 5821);
    BEGIN
      WITH TheItemBuffer DO BEGIN
        RESET;
        IF ItemFilter <> '' THEN
          SETFILTER("Item Filter",ItemFilter);
        IF DateFilter <> '' THEN
          SETFILTER("Date Filter",DateFilter);
        IF LocationFilter <> '' THEN
          SETFILTER("Location Filter",LocationFilter);
        IF VariantFilter <> '' THEN
          SETFILTER("Variant Filter",VariantFilter);
      END;
    END;

    LOCAL PROCEDURE SetFilters@1142(VAR ItemBuffer@1000 : Record 5821;LineOrColumn@1001 : 'Line,Column');
    VAR
      DimOption@1143 : 'Profit Calculation,Cost Specification,Purch. Item Charge Spec.,Sales Item Charge Spec.,Period,Location';
      DimCodeBuf@1144 : Record 367;
    BEGIN
      IF LineOrColumn = LineOrColumn::Line THEN BEGIN
        DimCodeBuf := Rec;
        DimOption := ItemBuffer."Line Option";
      END ELSE BEGIN
        DimCodeBuf := MatrixRecords[MATRIX_ColumnOrdinal];
        DimOption := ItemBuffer."Column Option";
      END;
      WITH ItemBuffer DO BEGIN
        CASE DimOption OF
          DimOption::Location:
            SETRANGE("Location Filter",DimCodeBuf.Code);
          DimOption::Period:
            IF AmountType = AmountType::"Net Change" THEN
              SETRANGE("Date Filter",DimCodeBuf."Period Start",DimCodeBuf."Period End")
            ELSE
              SETRANGE("Date Filter",0D,DimCodeBuf."Period End");
          DimOption::"Profit Calculation",
          DimOption::"Cost Specification":
            CASE Name OF
              FIELDCAPTION("Sales (LCY)"),
              FIELDCAPTION("COGS (LCY)"),
              FIELDCAPTION("Profit (LCY)"),
              FIELDCAPTION("Profit %"):
                BEGIN
                  SETRANGE("Item Ledger Entry Type Filter","Item Ledger Entry Type Filter"::Sale);
                  IF DimOption = DimOption::"Profit Calculation" THEN
                    SETFILTER("Entry Type Filter",'<>%1',"Entry Type Filter"::Revaluation);
                  SETRANGE("Variance Type Filter","Variance Type Filter"::" ");
                END;
              FIELDCAPTION("Direct Cost (LCY)"),
              FIELDCAPTION("Revaluation (LCY)"),
              FIELDCAPTION("Rounding (LCY)"),
              FIELDCAPTION("Indirect Cost (LCY)"),
              FIELDCAPTION("Variance (LCY)"),
              FIELDCAPTION("Inventoriable Costs, Total"):
                BEGIN
                  SETFILTER(
                    "Item Ledger Entry Type Filter",'<>%1&<>%2',
                    "Item Ledger Entry Type Filter"::Sale,
                    "Item Ledger Entry Type Filter"::" ");
                  SETRANGE("Variance Type Filter","Variance Type Filter"::" ");
                  CASE Name OF
                    FIELDCAPTION("Direct Cost (LCY)"):
                      SETRANGE("Entry Type Filter","Entry Type Filter"::"Direct Cost");
                    FIELDCAPTION("Revaluation (LCY)"):
                      SETRANGE("Entry Type Filter","Entry Type Filter"::Revaluation);
                    FIELDCAPTION("Rounding (LCY)"):
                      SETRANGE("Entry Type Filter","Entry Type Filter"::Rounding);
                    FIELDCAPTION("Indirect Cost (LCY)"):
                      SETRANGE("Entry Type Filter","Entry Type Filter"::"Indirect Cost");
                    FIELDCAPTION("Variance (LCY)"):
                      BEGIN
                        SETRANGE("Entry Type Filter","Entry Type Filter"::Variance);
                        SETFILTER("Variance Type Filter",'<>%1',"Variance Type Filter"::" ");
                      END;
                    FIELDCAPTION("Inventoriable Costs, Total"):
                      SETRANGE("Variance Type Filter");
                  END;
                END;
              ELSE
                SETRANGE("Item Ledger Entry Type Filter");
                SETRANGE("Variance Type Filter");
              END;
          DimOption::"Purch. Item Charge Spec.":
            BEGIN
              SETRANGE("Variance Type Filter","Variance Type Filter"::" ");
              SETRANGE("Item Ledger Entry Type Filter","Item Ledger Entry Type Filter"::Purchase);
              SETRANGE("Item Charge No. Filter",DimCodeBuf.Code);
            END;
          DimOption::"Sales Item Charge Spec.":
            BEGIN
              SETRANGE("Variance Type Filter","Variance Type Filter"::" ");
              SETRANGE("Item Ledger Entry Type Filter","Item Ledger Entry Type Filter"::Sale);
              SETRANGE("Item Charge No. Filter",DimCodeBuf.Code);
            END;
        END;
        IF GETFILTER("Item Ledger Entry Type Filter") = '' THEN
          SETFILTER(
            "Item Ledger Entry Type Filter",'<>%1',
            "Item Ledger Entry Type Filter"::" ")
      END;
    END;

    LOCAL PROCEDURE ValidateColumnDimCode@1145();
    VAR
      Location@1146 : Record 14;
    BEGIN
      IF (UPPERCASE(ColumnDimCode) <> UPPERCASE(Location.TABLECAPTION)) AND
         (UPPERCASE(ColumnDimCode) <> UPPERCASE(Text002)) AND
         (ColumnDimCode <> '')
      THEN BEGIN
        MESSAGE(Text003,ColumnDimCode);
        ColumnDimCode := '';
      END;
      WITH ItemBuffer DO BEGIN
        ItemBuffer."Column Option" := DimCodeToOption(ColumnDimCode);
        IF ("Line Option" <> "Line Option"::Period)
          AND ("Column Option" <> "Column Option"::Period) THEN BEGIN
          DateFilter := InternalDateFilter;
          IF STRPOS(DateFilter,'&') > 1 THEN
            DateFilter := COPYSTR(DateFilter,1,STRPOS(DateFilter,'&') - 1);
        END ELSE
          PeriodInitialized := FALSE;
      END;
    END;

    PROCEDURE Calculate@1147(SetColumnFilter@1000 : Boolean) Amount : Decimal;
    BEGIN
      GetGLSetup;
      WITH ItemBuffer DO BEGIN
        CASE "Line Option" OF
        "Line Option"::"Profit Calculation",
        "Line Option"::"Cost Specification":
          CASE Name OF
            FIELDCAPTION("Sales (LCY)"):
              Amount := CalcSalesAmount(SetColumnFilter);
            FIELDCAPTION("COGS (LCY)"):
              Amount := CalcCostAmount(SetColumnFilter);
            FIELDCAPTION("Non-Invtbl. Costs (LCY)"):
              Amount := CalcCostAmountNonInvnt(SetColumnFilter);
            FIELDCAPTION("Profit (LCY)"):
              Amount := CalcSalesAmount(SetColumnFilter) +
                CalcCostAmount(SetColumnFilter) +
                CalcCostAmountNonInvnt(SetColumnFilter);
            FIELDCAPTION("Profit %"):
              IF CalcSalesAmount(SetColumnFilter) <> 0 THEN
                Amount := ROUND(100 * (CalcSalesAmount(SetColumnFilter) +
                  CalcCostAmount(SetColumnFilter) +
                  CalcCostAmountNonInvnt(SetColumnFilter)) /
                  CalcSalesAmount(SetColumnFilter))
              ELSE
                Amount := 0;
            FIELDCAPTION("Direct Cost (LCY)"),FIELDCAPTION("Revaluation (LCY)"),
            FIELDCAPTION("Rounding (LCY)"),FIELDCAPTION("Indirect Cost (LCY)"),
            FIELDCAPTION("Variance (LCY)"),FIELDCAPTION("Inventory (LCY)"),
            FIELDCAPTION("Inventoriable Costs, Total"):
              Amount := CalcCostAmount(SetColumnFilter);
            ELSE
              Amount := 0;
          END;
        "Line Option"::"Sales Item Charge Spec.":
          Amount := CalcSalesAmount(SetColumnFilter);
        "Line Option"::"Purch. Item Charge Spec.":
          Amount := CalcCostAmount(SetColumnFilter);
        END;
        IF PerUnit THEN BEGIN
          IF ("Line Option" = "Line Option"::"Profit Calculation") AND
             (Name = FIELDCAPTION("Profit %"))
          THEN
            Qty := 1
          ELSE
            Qty := CalcQty(SetColumnFilter);
          IF Qty <> 0 THEN
            Amount := ROUND(Amount / ABS(Qty),GLSetup."Unit-Amount Rounding Precision")
          ELSE
            Amount := 0;
          END;
      END;
    END;

    LOCAL PROCEDURE CalcSalesAmount@1148(SetColumnFilter@1000 : Boolean) : Decimal;
    BEGIN
      SetCommonFilters(ItemBuffer);
      SetFilters(ItemBuffer,0);
      IF SetColumnFilter THEN
        SetFilters(ItemBuffer,1);
      IF IncludeExpected THEN BEGIN
        ItemBuffer.CALCFIELDS("Sales Amount (Actual)","Sales Amount (Expected)");
        EXIT(ItemBuffer."Sales Amount (Actual)" + ItemBuffer."Sales Amount (Expected)");
      END;
      ItemBuffer.CALCFIELDS("Sales Amount (Actual)");
      EXIT(ItemBuffer."Sales Amount (Actual)");
    END;

    LOCAL PROCEDURE CalcCostAmount@1149(SetColumnFilter@1000 : Boolean) : Decimal;
    BEGIN
      SetCommonFilters(ItemBuffer);
      SetFilters(ItemBuffer,0);
      IF SetColumnFilter THEN
        SetFilters(ItemBuffer,1);
      IF IncludeExpected THEN BEGIN
        ItemBuffer.CALCFIELDS("Cost Amount (Actual)","Cost Amount (Expected)");
        EXIT(ItemBuffer."Cost Amount (Actual)" + ItemBuffer."Cost Amount (Expected)");
      END;
      ItemBuffer.CALCFIELDS("Cost Amount (Actual)");
      EXIT(ItemBuffer."Cost Amount (Actual)");
    END;

    LOCAL PROCEDURE CalcCostAmountNonInvnt@1150(SetColumnFilter@1000 : Boolean) : Decimal;
    BEGIN
      SetCommonFilters(ItemBuffer);
      SetFilters(ItemBuffer,0);
      IF SetColumnFilter THEN
        SetFilters(ItemBuffer,1);
      ItemBuffer.SETRANGE("Item Ledger Entry Type Filter");
      ItemBuffer.CALCFIELDS("Cost Amount (Non-Invtbl.)");
      EXIT(ItemBuffer."Cost Amount (Non-Invtbl.)");
    END;

    LOCAL PROCEDURE CalcQty@1151(SetColumnFilter@1000 : Boolean) : Decimal;
    BEGIN
      SetCommonFilters(ItemBuffer);
      SetFilters(ItemBuffer,0);
      IF SetColumnFilter THEN
        SetFilters(ItemBuffer,1);
      ItemBuffer.SETRANGE("Entry Type Filter");
      ItemBuffer.SETRANGE("Item Charge No. Filter");
      IF IncludeExpected THEN BEGIN
        ItemBuffer.CALCFIELDS(Quantity);
        EXIT(ItemBuffer.Quantity);
      END;
      ItemBuffer.CALCFIELDS("Invoiced Quantity");
      EXIT(ItemBuffer."Invoiced Quantity");
    END;

    PROCEDURE SetItem@1152(VAR NewItem@1000 : Record 27);
    BEGIN
      Item.GET(NewItem."No.");
      Item.COPYFILTERS(NewItem);
    END;

    LOCAL PROCEDURE GetGLSetup@1153();
    BEGIN
      IF NOT GLSetupRead THEN
        GLSetup.GET;
      GLSetupRead := TRUE;
    END;

    PROCEDURE Load@1154(VAR MatrixColumns1@1005 : ARRAY [32] OF Text[1024];VAR MatrixRecords1@1006 : ARRAY [32] OF Record 367;CurrentNoOfMatrixColumns@1007 : Integer;_RoundingFactor@1010 : 'None,1,1000,1000000';_PerUnit@1009 : Boolean;_IncludeExpected@1008 : Boolean;_ItemBuffer@1004 : Record 5821;_Item@1003 : Record 27;_PeriodType@1002 : 'Day,Week,Month,Quarter,Year,Accounting Period';_AmountType@1000 : 'Net Change,Balance at Date';_PrimaryKeyFirstCaptionInCurrS@1011 : Text[1024];_ColumnDimCode@1012 : Text[30];_DateFilter@1013 : Code[250];_ItemFilter@1014 : Code[250];_LocationFilter@1015 : Code[250];_VariantFilter@1016 : Code[250]);
    BEGIN
      COPYARRAY(MATRIX_CaptionSet,MatrixColumns1,1);
      COPYARRAY(MatrixRecords,MatrixRecords1,1);
      MATRIX_CurrentNoOfMatrixColumn := CurrentNoOfMatrixColumns;
      RoundingFactor := _RoundingFactor;
      PerUnit:=_PerUnit;
      IncludeExpected:= _IncludeExpected;
      ItemBuffer := _ItemBuffer;
      Item := _Item;
      PeriodType := _PeriodType;
      AmountType := _AmountType;
      PrimaryKeyFirstCaptionInCurrSe := _PrimaryKeyFirstCaptionInCurrS;
      ColumnDimCode := _ColumnDimCode;
      DateFilter := _DateFilter;
      ItemFilter := _ItemFilter;
      LocationFilter := _LocationFilter;
      VariantFilter := _VariantFilter;
    END;

    LOCAL PROCEDURE MATRIX_OnDrillDown@1155(_MATRIX_ColumnOrdinal@1008 : Integer);
    BEGIN
      WITH ItemBuffer DO
        IF NOT (("Line Option" = "Line Option"::"Profit Calculation") AND
          ((Name = FIELDCAPTION("Profit (LCY)")) OR (Name = FIELDCAPTION("Profit %"))) OR
          (("Line Option" = "Line Option"::"Cost Specification") AND (Name = FIELDCAPTION("Inventoriable Costs"))))
        THEN BEGIN
          SetCommonFilters(ItemBuffer);
          SetFilters(ItemBuffer,0);
          MATRIX_ColumnOrdinal := _MATRIX_ColumnOrdinal;
          SetFilters(ItemBuffer,1);
          DrillDown;
        END;
    END;

    LOCAL PROCEDURE MATRIX_OnAfterGetRecord@1157(MATRIX_ColumnOrdinal@1010 : Integer);
    BEGIN
      MatrixHeader := MatrixRecords[MATRIX_ColumnOrdinal].Code;
      CellAmount := Calculate(TRUE);
      MATRIX_CellData[MATRIX_ColumnOrdinal] := CellAmount;
    END;

    LOCAL PROCEDURE MATRIX_OnFindRecord@1935(Which@1786 : Text[1024]) : Boolean;
    BEGIN
      EXIT(FindRec(ItemBuffer."Column Option",MatrixRecord,Which));
    END;

    LOCAL PROCEDURE MATRIX_OnNextRecord@1936(Steps@1787 : Integer) : Integer;
    BEGIN
      EXIT(NextRec(ItemBuffer."Column Option",MatrixRecord,Steps));
    END;

    LOCAL PROCEDURE xMATRIX_OnAfterGetRecord@1937();
    BEGIN
      MatrixHeader := MatrixRecord.Code;
      CellAmount := Calculate(TRUE);
      MATRIX_CellData[MATRIX_ColumnOrdinal] := CellAmount;
    END;

    LOCAL PROCEDURE MATRIX_OnAfterGetCurrRecord@1938();
    BEGIN
      CellAmount := Calculate(TRUE);
      MATRIX_CellData[MATRIX_ColumnOrdinal] := CellAmount;
    END;

    PROCEDURE AmountOnFormat@2(VAR TextVar@1000 : Text[30]);
    BEGIN
      FormatAmount(TextVar);
    END;

    BEGIN
    END.
  }
}
