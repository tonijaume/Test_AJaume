OBJECT Form 233 Apply Vendor Entries
{
  OBJECT-PROPERTIES
  {
    Date=02/10/12;
    Time=12:00:00;
    Modified=Yes;
    Version List=AIC2009,NAVW16.00.01,NAVES6.00.01;
  }
  PROPERTIES
  {
    Width=16500;
    Height=11660;
    CaptionML=[ENU=Apply Vendor Entries;
               ESP=Movs. pendientes proveedor];
    ActiveControlOnOpen=2;
    InsertAllowed=No;
    DeleteAllowed=No;
    TableBoxID=1;
    LinksAllowed=No;
    SourceTable=Table25;
    DataCaptionFields=Vendor No.;
    OnOpenForm=BEGIN
                 IF CalcType = CalcType::Direct THEN BEGIN
                   Vend.GET("Vendor No.");
                   ApplnCurrencyCode := Vend."Currency Code";
                   FindApplyingEntry;
                 END;

                 IF ApplnType = ApplnType::"Applies-to Doc. No." THEN
                   CurrForm."Applies-to ID".VISIBLE := FALSE
                 ELSE
                   CurrForm."Applies-to ID".VISIBLE := TRUE;

                 GLSetup.GET;

                 IF CalcType = CalcType::GenJnlLine THEN
                   CalcApplnAmount;
                 PostingDone := FALSE;
               END;

    OnQueryCloseForm=BEGIN
                       IF ApplnType = ApplnType::"Applies-to Doc. No." THEN BEGIN
                         IF OK AND (ApplyingVendLedgEntry."Posting Date" < "Posting Date") THEN BEGIN
                           OK := FALSE;
                           ERROR(
                             Text006,ApplyingVendLedgEntry."Document Type",ApplyingVendLedgEntry."Document No.",
                             "Document Type","Document No.");
                         END;
                         IF OK THEN BEGIN
                           IF "Amount to Apply" = 0 THEN
                             "Amount to Apply" := "Remaining Amount";
                           CODEUNIT.RUN(CODEUNIT::"Vend. Entry-Edit",Rec);
                         END;
                       END;

                       IF (CalcType = CalcType::Direct) AND NOT OK AND NOT PostingDone THEN BEGIN
                         Rec := ApplyingVendLedgEntry;
                         "Applying Entry" := FALSE;
                         "Applies-to ID" := '';
                         "Amount to Apply" := 0;
                         CODEUNIT.RUN(CODEUNIT::"Vend. Entry-Edit",Rec);
                       END;
                     END;

    OnAfterGetCurrRecord=BEGIN
                           IF ApplnType = ApplnType::"Applies-to Doc. No." THEN
                             CalcApplnAmount;
                         END;

    OnModifyRecord=BEGIN
                     CODEUNIT.RUN(CODEUNIT::"Vend. Entry-Edit",Rec);
                     EXIT(FALSE);
                   END;

  }
  CONTROLS
  {
    { 1   ;TableBox     ;220  ;3960 ;16060;5060 ;HorzGlue=Both;
                                                 VertGlue=Both;
                                                 InlineEditing=Yes }
    { 22  ;TextBox      ;0    ;5390 ;1700 ;440  ;ParentControl=1;
                                                 InColumn=Yes;
                                                 SourceExpr="Applies-to ID" }
    { 23  ;Label        ;0    ;0    ;0    ;0    ;ParentControl=22;
                                                 InColumnHeading=Yes }
    { 2   ;TextBox      ;0    ;0    ;1650 ;0    ;Editable=No;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 SourceExpr="Posting Date" }
    { 3   ;Label        ;0    ;0    ;0    ;0    ;ParentControl=2;
                                                 InColumnHeading=Yes }
    { 4   ;TextBox      ;0    ;0    ;550  ;0    ;Editable=No;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 SourceExpr="Document Type" }
    { 5   ;Label        ;0    ;0    ;0    ;0    ;ParentControl=4;
                                                 InColumnHeading=Yes }
    { 6   ;TextBox      ;0    ;0    ;1650 ;0    ;Editable=No;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 SourceExpr="Document No." }
    { 7   ;Label        ;0    ;0    ;0    ;0    ;ParentControl=6;
                                                 InColumnHeading=Yes }
    { 1100002;TextBox   ;3228 ;880  ;1650 ;440  ;Editable=No;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 SourceExpr="Bill No." }
    { 1100003;Label     ;0    ;0    ;0    ;0    ;ParentControl=1100002;
                                                 InColumnHeading=Yes }
    { 1100006;TextBox   ;5428 ;880  ;550  ;440  ;Editable=No;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 SourceExpr="Document Status" }
    { 1100007;Label     ;0    ;0    ;0    ;0    ;ParentControl=1100006;
                                                 InColumnHeading=Yes }
    { 1100004;TextBox   ;4878 ;880  ;550  ;440  ;Editable=No;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 SourceExpr="Document Situation" }
    { 1100005;Label     ;0    ;0    ;0    ;0    ;ParentControl=1100004;
                                                 InColumnHeading=Yes }
    { 38  ;TextBox      ;3545 ;550  ;1650 ;440  ;ParentControl=1;
                                                 InColumn=Yes;
                                                 SourceExpr="External Document No." }
    { 55  ;Label        ;0    ;0    ;0    ;0    ;ParentControl=38;
                                                 InColumnHeading=Yes }
    { 8   ;TextBox      ;0    ;0    ;1650 ;0    ;Editable=No;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 SourceExpr="Vendor No." }
    { 9   ;Label        ;0    ;0    ;0    ;0    ;ParentControl=8;
                                                 InColumnHeading=Yes }
    { 10  ;TextBox      ;0    ;0    ;4400 ;0    ;HorzGlue=Both;
                                                 Editable=No;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 SourceExpr=Description }
    { 11  ;Label        ;0    ;0    ;0    ;0    ;ParentControl=10;
                                                 InColumnHeading=Yes }
    { 39  ;TextBox      ;11510;880  ;1100 ;440  ;ParentControl=1;
                                                 InColumn=Yes;
                                                 SourceExpr="Currency Code" }
    { 40  ;Label        ;0    ;0    ;0    ;0    ;ParentControl=39;
                                                 InColumnHeading=Yes }
    { 61  ;TextBox      ;12436;990  ;2200 ;440  ;Visible=No;
                                                 Editable=No;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 SourceExpr="Original Amount" }
    { 62  ;Label        ;0    ;0    ;0    ;0    ;ParentControl=61;
                                                 InColumnHeading=Yes }
    { 12  ;TextBox      ;0    ;0    ;2200 ;0    ;Visible=No;
                                                 Editable=No;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 SourceExpr=Amount }
    { 13  ;Label        ;0    ;0    ;0    ;0    ;ParentControl=12;
                                                 InColumnHeading=Yes }
    { 14  ;TextBox      ;0    ;0    ;2200 ;0    ;Editable=No;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 SourceExpr="Remaining Amount" }
    { 15  ;Label        ;0    ;0    ;0    ;0    ;ParentControl=14;
                                                 InColumnHeading=Yes }
    { 33  ;TextBox      ;16695;550  ;2200 ;440  ;ParentControl=1;
                                                 InColumn=Yes;
                                                 CaptionML=[ENU=Appln. Remaining Amount;
                                                            ESP=Importe pendiente liquidaci¢n];
                                                 SourceExpr=CalcApplnRemainingAmount("Remaining Amount");
                                                 AutoFormatType=1;
                                                 AutoFormatExpr=ApplnCurrencyCode }
    { 42  ;Label        ;0    ;0    ;0    ;0    ;ParentControl=33;
                                                 InColumnHeading=Yes }
    { 90  ;TextBox      ;25374;5390 ;2200 ;440  ;ParentControl=1;
                                                 InColumn=Yes;
                                                 SourceExpr="Amount to Apply";
                                                 OnValidate=BEGIN
                                                              CODEUNIT.RUN(CODEUNIT::"Vend. Entry-Edit",Rec);

                                                              IF (xRec."Amount to Apply" = 0) OR (Rec."Amount to Apply" = 0) AND
                                                                (ApplnType = ApplnType::"Applies-to ID")
                                                              THEN
                                                                SetVendApplId;
                                                            END;

                                                 OnAfterValidate=BEGIN
                                                                   IF ApplnType <> ApplnType::"Applies-to Doc. No." THEN BEGIN
                                                                     CalcApplnAmount;
                                                                     CurrForm.UPDATE(FALSE);
                                                                   END;
                                                                 END;
                                                                  }
    { 91  ;Label        ;0    ;0    ;0    ;0    ;ParentControl=90;
                                                 InColumnHeading=Yes }
    { 92  ;TextBox      ;28044;5610 ;2200 ;440  ;ParentControl=1;
                                                 InColumn=Yes;
                                                 CaptionML=[ENU=Appln. Amount to Apply;
                                                            ESP=Importe a Aplicar divisa liquidacion];
                                                 SourceExpr=CalcApplnAmounttoApply("Amount to Apply");
                                                 AutoFormatType=1;
                                                 AutoFormatExpr=ApplnCurrencyCode }
    { 93  ;Label        ;0    ;0    ;0    ;0    ;ParentControl=92;
                                                 InColumnHeading=Yes }
    { 16  ;TextBox      ;0    ;0    ;1650 ;0    ;ParentControl=1;
                                                 InColumn=Yes;
                                                 SourceExpr="Due Date" }
    { 17  ;Label        ;0    ;0    ;0    ;0    ;ParentControl=16;
                                                 InColumnHeading=Yes }
    { 18  ;TextBox      ;0    ;0    ;1650 ;0    ;ParentControl=1;
                                                 InColumn=Yes;
                                                 SourceExpr="Pmt. Discount Date";
                                                 OnAfterValidate=BEGIN
                                                                   CurrForm.UPDATE(TRUE);
                                                                   CalcApplnAmount;
                                                                 END;
                                                                  }
    { 19  ;Label        ;0    ;0    ;0    ;0    ;ParentControl=18;
                                                 InColumnHeading=Yes }
    { 66  ;TextBox      ;26167;440  ;1700 ;440  ;ParentControl=1;
                                                 InColumn=Yes;
                                                 SourceExpr="Pmt. Disc. Tolerance Date" }
    { 67  ;Label        ;0    ;0    ;0    ;0    ;ParentControl=66;
                                                 InColumnHeading=Yes }
    { 20  ;TextBox      ;0    ;0    ;2200 ;0    ;Visible=No;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 SourceExpr="Original Pmt. Disc. Possible" }
    { 21  ;Label        ;0    ;0    ;0    ;0    ;ParentControl=20;
                                                 InColumnHeading=Yes }
    { 64  ;TextBox      ;23469;330  ;2200 ;440  ;ParentControl=1;
                                                 InColumn=Yes;
                                                 SourceExpr="Remaining Pmt. Disc. Possible";
                                                 OnAfterValidate=BEGIN
                                                                   CurrForm.UPDATE(TRUE);
                                                                   CalcApplnAmount;
                                                                 END;
                                                                  }
    { 65  ;Label        ;0    ;0    ;0    ;0    ;ParentControl=64;
                                                 InColumnHeading=Yes }
    { 1100000;TextBox   ;12356;440  ;2200 ;440  ;ParentControl=1;
                                                 InColumn=Yes;
                                                 SourceExpr="Pmt. Disc. Rcd.(LCY)" }
    { 1100001;Label     ;0    ;0    ;0    ;0    ;ParentControl=1100000;
                                                 InColumnHeading=Yes }
    { 51  ;TextBox      ;10901;330  ;2200 ;440  ;ParentControl=1;
                                                 InColumn=Yes;
                                                 CaptionML=[ENU=Appln. Pmt. Disc. Possible;
                                                            ESP=Dto. P.P. posible liqdn.];
                                                 SourceExpr=CalcApplnRemainingAmount("Remaining Pmt. Disc. Possible");
                                                 AutoFormatType=1;
                                                 AutoFormatExpr=ApplnCurrencyCode }
    { 52  ;Label        ;0    ;0    ;0    ;0    ;ParentControl=51;
                                                 InColumnHeading=Yes }
    { 68  ;TextBox      ;32279;440  ;2200 ;440  ;ParentControl=1;
                                                 InColumn=Yes;
                                                 SourceExpr="Max. Payment Tolerance" }
    { 69  ;Label        ;0    ;0    ;0    ;0    ;ParentControl=68;
                                                 InColumnHeading=Yes }
    { 24  ;CheckBox     ;0    ;0    ;1650 ;0    ;Editable=No;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 SourceExpr=Open }
    { 25  ;Label        ;0    ;0    ;0    ;0    ;ParentControl=24;
                                                 InColumnHeading=Yes }
    { 26  ;CheckBox     ;0    ;0    ;1650 ;0    ;Editable=No;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 SourceExpr=Positive }
    { 27  ;Label        ;0    ;0    ;0    ;0    ;ParentControl=26;
                                                 InColumnHeading=Yes }
    { 56  ;TextBox      ;31300;440  ;1650 ;440  ;ParentControl=1;
                                                 InColumn=Yes;
                                                 SourceExpr="Global Dimension 1 Code" }
    { 58  ;Label        ;0    ;0    ;0    ;0    ;ParentControl=56;
                                                 InColumnHeading=Yes }
    { 59  ;TextBox      ;32950;440  ;1650 ;440  ;ParentControl=1;
                                                 InColumn=Yes;
                                                 SourceExpr="Global Dimension 2 Code" }
    { 60  ;Label        ;0    ;0    ;0    ;0    ;ParentControl=59;
                                                 InColumnHeading=Yes }
    { 28  ;CommandButton;1980 ;10890;2200 ;550  ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 Default=Yes;
                                                 PushAction=LookupOK;
                                                 InvalidActionAppearance=Hide;
                                                 OnPush=BEGIN
                                                          OK := TRUE;
                                                        END;
                                                         }
    { 29  ;CommandButton;4400 ;10890;2200 ;550  ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 Cancel=Yes;
                                                 PushAction=LookupCancel;
                                                 InvalidActionAppearance=Hide }
    { 30  ;MenuButton   ;9240 ;10890;2200 ;550  ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 CaptionML=[ENU=&Application;
                                                            ESP=Li&quidaci¢n];
                                                 Menu=MENUITEMS
                                                 {
                                                   { ID=32;
                                                     ShortCutKey=F9;
                                                     CaptionML=[ENU=Set Applies-to ID;
                                                                ESP=Marcar &id. de liquidaci¢n];
                                                     OnPush=BEGIN
                                                              IF (CalcType = CalcType::GenJnlLine) AND (ApplnType = ApplnType::"Applies-to Doc. No.") THEN
                                                                ERROR(Text004);

                                                              SetVendApplId;
                                                            END;
                                                             }
                                                   { ID=34;
                                                     ShortCutKey=F11;
                                                     Ellipsis=Yes;
                                                     CaptionML=[ENU=Post Application;
                                                                ESP=Registrar liquidaci¢n marcada];
                                                     OnPush=VAR
                                                              VendEntryApplyPostedEntries@1001 : Codeunit 227;
                                                            BEGIN
                                                              IF CalcType = CalcType::Direct THEN BEGIN
                                                                IF ApplyingVendLedgEntry."Entry No." <> 0 THEN BEGIN
                                                                  Rec := ApplyingVendLedgEntry;
                                                                  // Post Application
                                                                  VendEntryApplyPostedEntries.RUN(Rec);
                                                                  PostingDone := TRUE;
                                                                  CurrForm.CLOSE;
                                                                END ELSE
                                                                  ERROR(Text002);
                                                              END ELSE
                                                                ERROR(Text003);
                                                            END;
                                                             }
                                                   { ID=99;
                                                     MenuItemType=Separator;
                                                     CaptionML=[ENU=-;
                                                                ESP=-] }
                                                   { ID=100;
                                                     CaptionML=[ENU=Show Only Selected Entries to Be Applied;
                                                                ESP=Mostrar s¢lo entradas seleccionadas para aplicar];
                                                     OnPush=BEGIN
                                                              ShowAppliedEntries := NOT ShowAppliedEntries;
                                                              IF ShowAppliedEntries THEN BEGIN
                                                                IF CalcType = CalcType::GenJnlLine THEN
                                                                  SETRANGE("Applies-to ID",GenJnlLine."Applies-to ID")
                                                                ELSE BEGIN
                                                                  VendEntryApplID := USERID;
                                                                  IF VendEntryApplID = '' THEN
                                                                    VendEntryApplID := '***';
                                                                  SETRANGE("Applies-to ID",VendEntryApplID);
                                                                END;
                                                              END ELSE
                                                                SETRANGE("Applies-to ID");
                                                            END;
                                                             }
                                                 }
                                                  }
    { 35  ;CommandButton;14080;10890;2200 ;550  ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 PushAction=FormHelp }
    { 36  ;CommandButton;11660;10890;2200 ;550  ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 CaptionML=[ENU=&Navigate;
                                                            ESP=&Navegar];
                                                 OnPush=BEGIN
                                                          Navigate.SetDoc("Posting Date","Document No.");
                                                          Navigate.RUN;
                                                        END;
                                                         }
    { 37  ;MenuButton   ;6820 ;10890;2200 ;550  ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 CaptionML=[ENU=Ent&ry;
                                                            ESP=Movimien&to];
                                                 Menu=MENUITEMS
                                                 {
                                                   { ID=31;
                                                     PushAction=RunObject;
                                                     CaptionML=[ENU=Applied E&ntries;
                                                                ESP=&Movs. conciliados];
                                                     RunObject=Form 62;
                                                     RunFormOnRec=Yes }
                                                   { ID=57;
                                                     PushAction=RunObject;
                                                     ShortCutKey=May£s+Ctrl+D;
                                                     CaptionML=[ENU=Dimensions;
                                                                ESP=Dimensiones];
                                                     RunObject=Form 544;
                                                     RunFormLinkType=OnUpdate;
                                                     RunFormLink=Table ID=CONST(25),
                                                                 Entry No.=FIELD(Entry No.) }
                                                   { ID=63;
                                                     PushAction=RunObject;
                                                     ShortCutKey=Ctrl+F5;
                                                     CaptionML=[ENU=Detailed &Ledger Entries;
                                                                ESP=M&ovimientos detallados];
                                                     RunObject=Form 574;
                                                     RunFormLinkType=OnUpdate;
                                                     RunFormView=SORTING(Vendor Ledger Entry No.,Posting Date);
                                                     RunFormLink=Vendor Ledger Entry No.=FIELD(Entry No.) }
                                                 }
                                                  }
    { 41  ;Frame        ;220  ;9240 ;16060;1430 ;HorzGlue=Both;
                                                 VertGlue=Bottom;
                                                 ShowCaption=No }
    { 43  ;TextBox      ;13860;10010;2200 ;440  ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 Editable=No;
                                                 ParentControl=41;
                                                 InFrame=Yes;
                                                 CaptionML=[ENU=Balance;
                                                            ESP=Saldo];
                                                 SourceExpr=AppliedAmount + (-PmtDiscAmount) + ApplyingAmount + ApplnRounding;
                                                 AutoFormatType=1;
                                                 AutoFormatExpr=ApplnCurrencyCode }
    { 44  ;Label        ;13860;9460 ;2200 ;440  ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 ParentControl=43;
                                                 HorzAlign=Right;
                                                 LeaderDots=No }
    { 45  ;TextBox      ;2310 ;10010;2200 ;440  ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 Editable=No;
                                                 ParentControl=41;
                                                 InFrame=Yes;
                                                 CaptionML=[ENU=Amount to Apply;
                                                            ESP=Importe pendiente de liquidar];
                                                 SourceExpr=AppliedAmount;
                                                 AutoFormatType=1;
                                                 AutoFormatExpr=ApplnCurrencyCode }
    { 46  ;Label        ;2310 ;9460 ;2200 ;440  ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 ParentControl=45;
                                                 HorzAlign=Right;
                                                 LeaderDots=No }
    { 47  ;TextBox      ;11440;10010;2200 ;440  ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 Editable=No;
                                                 ParentControl=41;
                                                 InFrame=Yes;
                                                 HorzAlign=General;
                                                 CaptionML=[ENU=Available Amount;
                                                            ESP=Cantidad disponible];
                                                 SourceExpr=ApplyingAmount;
                                                 AutoFormatType=1;
                                                 AutoFormatExpr=ApplnCurrencyCode }
    { 48  ;Label        ;11440;9460 ;2200 ;440  ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 ParentControl=47;
                                                 HorzAlign=Right;
                                                 LeaderDots=No }
    { 49  ;TextBox      ;440  ;10010;1650 ;440  ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 Editable=No;
                                                 ParentControl=41;
                                                 InFrame=Yes;
                                                 SourceExpr=ApplnCurrencyCode;
                                                 TableRelation=Currency }
    { 53  ;TextBox      ;7150 ;10010;1650 ;440  ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 Editable=No;
                                                 ParentControl=41;
                                                 InFrame=Yes;
                                                 CaptionML=[ENU=Rounding;
                                                            ESP=Redondeo];
                                                 SourceExpr=ApplnRounding;
                                                 AutoFormatType=1;
                                                 AutoFormatExpr=ApplnCurrencyCode }
    { 54  ;Label        ;7150 ;9460 ;1650 ;440  ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 ParentControl=53;
                                                 HorzAlign=Right;
                                                 LeaderDots=No }
    { 94  ;TextBox      ;4730 ;10010;2200 ;440  ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 Editable=No;
                                                 ParentControl=41;
                                                 InFrame=Yes;
                                                 HorzAlign=General;
                                                 CaptionML=[ENU=Pmt. Disc. Amount;
                                                            ESP=Importe desc. P.P.];
                                                 SourceExpr=-PmtDiscAmount;
                                                 AutoFormatType=1;
                                                 AutoFormatExpr=ApplnCurrencyCode }
    { 95  ;Label        ;4730 ;9460 ;2200 ;440  ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 ParentControl=94;
                                                 HorzAlign=Right;
                                                 LeaderDots=No }
    { 98  ;TextBox      ;9020 ;10010;2200 ;440  ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 Editable=No;
                                                 ParentControl=41;
                                                 InFrame=Yes;
                                                 CaptionML=[ENU=Applied Amount;
                                                            ESP=Importe liquidado];
                                                 SourceExpr=AppliedAmount + (-PmtDiscAmount) + ApplnRounding;
                                                 AutoFormatType=1;
                                                 AutoFormatExpr=ApplnCurrencyCode }
    { 97  ;Label        ;9020 ;9460 ;2200 ;440  ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 ParentControl=98;
                                                 HorzAlign=Right;
                                                 LeaderDots=No }
    { 70  ;TabControl   ;220  ;220  ;16060;3630 ;HorzGlue=Both;
                                                 VertGlue=Top;
                                                 PageNamesML=[ENU=General;
                                                              ESP=General] }
    { 71  ;TextBox      ;3850 ;2640 ;2750 ;440  ;Editable=No;
                                                 ParentControl=70;
                                                 InPage=0;
                                                 CaptionML=[ENU=Vendor No.;
                                                            ESP=N§ proveedor];
                                                 SourceExpr=ApplyingVendLedgEntry."Vendor No." }
    { 72  ;Label        ;440  ;2640 ;3300 ;440  ;ParentControl=71 }
    { 73  ;TextBox      ;3850 ;990  ;1700 ;440  ;Editable=No;
                                                 ParentControl=70;
                                                 InPage=0;
                                                 CaptionML=[ENU=Posting Date;
                                                            ESP=Fecha registro];
                                                 SourceExpr=ApplyingVendLedgEntry."Posting Date" }
    { 74  ;Label        ;440  ;990  ;3300 ;440  ;ParentControl=73 }
    { 75  ;TextBox      ;3850 ;1540 ;2750 ;440  ;Editable=No;
                                                 ParentControl=70;
                                                 InPage=0;
                                                 CaptionML=[ENU=Document Type;
                                                            ESP=Tipo documento];
                                                 OptionCaptionML=[ENU=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund,,,,,,,,,,,,,,,Bill";
                                                                  ESP=" ,Pago,Factura,Abono,Docs. inters,Recordatorio,Reembolso,,,,,,,,,,,,,,,Efecto"];
                                                 OptionString=[ ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund,,,,,,,,,,,,,,,Bill];
                                                 SourceExpr=ApplyingVendLedgEntry."Document Type" }
    { 76  ;Label        ;440  ;1540 ;3300 ;440  ;ParentControl=75 }
    { 77  ;TextBox      ;3850 ;2090 ;2750 ;440  ;Editable=No;
                                                 ParentControl=70;
                                                 InPage=0;
                                                 CaptionML=[ENU=Document No.;
                                                            ESP=N§ documento];
                                                 SourceExpr=ApplyingVendLedgEntry."Document No." }
    { 78  ;Label        ;440  ;2090 ;3300 ;440  ;ParentControl=77 }
    { 79  ;TextBox      ;13090;990  ;2750 ;440  ;Editable=No;
                                                 ParentControl=70;
                                                 InPage=0;
                                                 CaptionML=[ENU=Currency Code;
                                                            ESP=C¢d. divisa];
                                                 SourceExpr=ApplyingVendLedgEntry."Currency Code" }
    { 80  ;Label        ;9680 ;990  ;3300 ;440  ;ParentControl=79 }
    { 81  ;TextBox      ;13090;1540 ;2750 ;440  ;Editable=No;
                                                 ParentControl=70;
                                                 InPage=0;
                                                 CaptionML=[ENU=Amount;
                                                            ESP=Importe];
                                                 SourceExpr=ApplyingVendLedgEntry.Amount }
    { 82  ;Label        ;9680 ;1540 ;3300 ;440  ;ParentControl=81 }
    { 83  ;TextBox      ;13090;2090 ;2750 ;440  ;Editable=No;
                                                 ParentControl=70;
                                                 InPage=0;
                                                 CaptionML=[ENU=Remaining Amount;
                                                            ESP=Importe pendiente];
                                                 SourceExpr=ApplyingVendLedgEntry."Remaining Amount" }
    { 84  ;Label        ;9680 ;2090 ;3300 ;440  ;ParentControl=83 }
    { 85  ;TextBox      ;3850 ;3190 ;5500 ;440  ;Editable=No;
                                                 ParentControl=70;
                                                 InPage=0;
                                                 CaptionML=[ENU=Description;
                                                            ESP=Descripci¢n];
                                                 SourceExpr=ApplyingVendLedgEntry.Description }
    { 86  ;Label        ;440  ;3190 ;3300 ;440  ;ParentControl=85 }
    { 50  ;Label        ;440  ;9460 ;1650 ;440  ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 ParentControl=41;
                                                 LeaderDots=No;
                                                 CaptionML=[ENU=Appln. Currency;
                                                            ESP=Divisa de liquidaci¢n] }
  }
  CODE
  {
    VAR
      ApplyingVendLedgEntry@1033 : TEMPORARY Record 25;
      AppliedVendLedgEntry@1001 : Record 25;
      Currency@1002 : Record 4;
      CurrExchRate@1003 : Record 330;
      GenJnlLine@1004 : Record 81;
      GenJnlLine2@1005 : Record 81;
      PurchHeader@1006 : Record 38;
      Vend@1007 : Record 23;
      VendLedgEntry@1008 : Record 25;
      GLSetup@1009 : Record 98;
      TotalPurchLine@1010 : Record 39;
      TotalPurchLineLCY@1011 : Record 39;
      Navigate@1012 : Form 344;
      GenJnlPostLine@1041 : Codeunit 12;
      VendEntrySetApplID@1013 : Codeunit 111;
      GenJnlApply@1014 : Codeunit 225;
      PurchPost@1015 : Codeunit 90;
      GenJnlLineApply@1016 : Boolean;
      AppliedAmount@1017 : Decimal;
      ApplyingAmount@1018 : Decimal;
      PmtDiscAmount@1040 : Decimal;
      ApplnDate@1019 : Date;
      ApplnCurrencyCode@1020 : Code[10];
      ApplnRoundingPrecision@1021 : Decimal;
      ApplnRounding@1022 : Decimal;
      ApplnType@1023 : ' ,Applies-to Doc. No.,Applies-to ID';
      AmountRoundingPrecision@1024 : Decimal;
      VATAmount@1025 : Decimal;
      VATAmountText@1026 : Text[30];
      CalcType@1027 : 'Direct,GenJnlLine,PurchHeader';
      VendEntryApplID@1029 : Code[20];
      ValidExchRate@1030 : Boolean;
      DifferentCurrenciesFound@1031 : Boolean;
      DifferentCurrenciesInAppln@1032 : Boolean;
      Text002@1036 : TextConst 'ENU=You must select an applying entry before you can post the application.;ESP=Seleccione un movimiento de liquidaci¢n antes de registrar la liquidaci¢n.';
      Text003@1035 : TextConst 'ENU=You must post the application from the window where you entered the applying entry.;ESP=Registre la liquidaci¢n desde la ventana en la que registro el movimiento.';
      Text004@1038 : TextConst 'ENU=You are not allowed to set Applies-to ID while selecting Applies-to Doc. No.;ESP=No tiene permiso para establecer el Id. de liquidaci¢n al seleccionar Liq. por n§ de documento.';
      ShowAppliedEntries@1039 : Boolean;
      OK@1028 : Boolean;
      Text006@1034 : TextConst 'ENU=You are not allowed to apply and post an entry to an entry with an earlier posting date.\\Instead, post %1 %2 and then apply it to %3 %4.;ESP=No tiene permiso para aplicar ni registrar un movimiento con una fecha de registro anterior.\\En su lugar, registre %1 %2 y, a continuaci¢n, apl¡quelo a %3 %4.';
      PostingDone@1000 : Boolean;

    PROCEDURE SetGenJnlLine@1(NewGenJnlLine@1000 : Record 81;ApplnTypeSelect@1001 : Integer);
    BEGIN
      GenJnlLine := NewGenJnlLine;
      GenJnlLineApply := TRUE;

      IF GenJnlLine."Account Type" = GenJnlLine."Account Type"::Vendor THEN
        ApplyingAmount := GenJnlLine.Amount;
      IF GenJnlLine."Bal. Account Type" = GenJnlLine."Bal. Account Type"::Vendor THEN
        ApplyingAmount := -GenJnlLine.Amount;
      ApplnDate := GenJnlLine."Posting Date";
      ApplnCurrencyCode := GenJnlLine."Currency Code";
      CalcType := CalcType::GenJnlLine;

      CASE ApplnTypeSelect OF
        GenJnlLine.FIELDNO("Applies-to Doc. No.") :
          ApplnType := ApplnType::"Applies-to Doc. No.";
        GenJnlLine.FIELDNO("Applies-to ID") :
          ApplnType := ApplnType::"Applies-to ID";
      END;

      SetApplyingVendLedgEntry;
    END;

    PROCEDURE SetPurch@2(NewPurchHeader@1000 : Record 38;VAR NewVendLedgEntry@1001 : Record 25;ApplnTypeSelect@1002 : Integer);
    BEGIN
      PurchHeader := NewPurchHeader;
      Rec.COPYFILTERS(NewVendLedgEntry);

      PurchPost.SumPurchLines(
        PurchHeader,0,TotalPurchLine,TotalPurchLineLCY,
        VATAmount,VATAmountText);

      CASE PurchHeader."Document Type" OF
        PurchHeader."Document Type"::"Return Order",
        PurchHeader."Document Type"::"Credit Memo":
          ApplyingAmount := TotalPurchLine."Amount Including VAT"
        ELSE
          ApplyingAmount := -TotalPurchLine."Amount Including VAT";
      END;

      ApplnDate := PurchHeader."Posting Date";
      ApplnCurrencyCode := PurchHeader."Currency Code";
      CalcType := CalcType::PurchHeader;

      CASE ApplnTypeSelect OF
        PurchHeader.FIELDNO("Applies-to Doc. No.") :
          ApplnType := ApplnType::"Applies-to Doc. No.";
        PurchHeader.FIELDNO("Applies-to ID") :
          ApplnType := ApplnType::"Applies-to ID";
      END;

      SetApplyingVendLedgEntry;
    END;

    PROCEDURE SetVendLedgEntry@13(NewVendLedgEntry@1000 : Record 25);
    BEGIN
      Rec := NewVendLedgEntry;
    END;

    PROCEDURE SetApplyingVendLedgEntry@9();
    VAR
      "VendEntry-Edit"@1000 : Codeunit 113;
    BEGIN
      CASE CalcType OF
        CalcType::PurchHeader :
          BEGIN
            ApplyingVendLedgEntry."Posting Date" := PurchHeader."Posting Date";
            IF PurchHeader."Document Type" = PurchHeader."Document Type"::"Return Order" THEN
              ApplyingVendLedgEntry."Document Type" := PurchHeader."Document Type"::"Credit Memo"
            ELSE
              ApplyingVendLedgEntry."Document Type" := PurchHeader."Document Type";
            ApplyingVendLedgEntry."Document No." := PurchHeader."No.";
            ApplyingVendLedgEntry."Vendor No." := PurchHeader."Pay-to Vendor No.";
            ApplyingVendLedgEntry.Description := PurchHeader."Posting Description";
            ApplyingVendLedgEntry."Currency Code" := PurchHeader."Currency Code";
            IF ApplyingVendLedgEntry."Document Type" = ApplyingVendLedgEntry."Document Type"::"Credit Memo" THEN  BEGIN
              ApplyingVendLedgEntry.Amount := TotalPurchLine."Amount Including VAT";
              ApplyingVendLedgEntry."Remaining Amount" := TotalPurchLine."Amount Including VAT";
            END ELSE BEGIN
              ApplyingVendLedgEntry.Amount := -TotalPurchLine."Amount Including VAT";
              ApplyingVendLedgEntry."Remaining Amount" := -TotalPurchLine."Amount Including VAT";
            END;
            CalcApplnAmount;
          END;
        CalcType::Direct :
          BEGIN
            IF "Applying Entry" THEN BEGIN
              IF ApplyingVendLedgEntry."Entry No." <> 0 THEN
                VendLedgEntry := ApplyingVendLedgEntry;
              "VendEntry-Edit".RUN(Rec);
              IF "Applies-to ID" = '' THEN
                SetVendApplId;
              CALCFIELDS(Amount);
              ApplyingVendLedgEntry := Rec;
              IF VendLedgEntry."Entry No." <> 0 THEN BEGIN
                Rec := VendLedgEntry;
                "Applying Entry" := FALSE;
                SetVendApplId;
              END;
              SETCURRENTKEY("Entry No.");
              SETFILTER("Entry No.",'<> %1',ApplyingVendLedgEntry."Entry No.");
              ApplyingAmount := ApplyingVendLedgEntry."Remaining Amount";
              ApplnDate := ApplyingVendLedgEntry."Posting Date";
              ApplnCurrencyCode := ApplyingVendLedgEntry."Currency Code";
            END;
            CalcApplnAmount;
          END;
        CalcType::GenJnlLine :
          BEGIN
            ApplyingVendLedgEntry."Posting Date" := GenJnlLine."Posting Date";
            ApplyingVendLedgEntry."Document Type" := GenJnlLine."Document Type";
            ApplyingVendLedgEntry."Document No." := GenJnlLine."Document No.";
            ApplyingVendLedgEntry."Vendor No." := GenJnlLine."Account No.";
            ApplyingVendLedgEntry.Description := GenJnlLine.Description;
            ApplyingVendLedgEntry."Currency Code" := GenJnlLine."Currency Code";
            ApplyingVendLedgEntry.Amount := GenJnlLine.Amount;
            ApplyingVendLedgEntry."Remaining Amount" := GenJnlLine.Amount;
            CalcApplnAmount;
          END;
      END;
    END;

    PROCEDURE SetVendApplId@10();
    BEGIN
      IF (CalcType = CalcType::GenJnlLine) AND (ApplyingVendLedgEntry."Posting Date" < "Posting Date") THEN
        ERROR(
          Text006,ApplyingVendLedgEntry."Document Type",ApplyingVendLedgEntry."Document No.",
          "Document Type","Document No.");

      IF ApplyingVendLedgEntry."Entry No." <> 0 THEN
        GenJnlApply.CheckAgainstApplnCurrency(
          ApplnCurrencyCode,"Currency Code",GenJnlLine."Account Type"::Vendor,TRUE);

      VendLedgEntry.COPY(Rec);
      CurrForm.SETSELECTIONFILTER(VendLedgEntry);
      IF GenJnlLineApply THEN
        VendEntrySetApplID.SetApplId(VendLedgEntry,ApplyingVendLedgEntry,AppliedAmount,PmtDiscAmount,GenJnlLine."Applies-to ID")
      ELSE
        VendEntrySetApplID.SetApplId(VendLedgEntry,ApplyingVendLedgEntry,AppliedAmount,PmtDiscAmount,PurchHeader."Applies-to ID");

      CalcApplnAmount;
    END;

    PROCEDURE CalcApplnAmount@7();
    VAR
      ExchAccGLJnlLine@1000 : Codeunit 366;
      I@1001 : Integer;
    BEGIN
      AppliedAmount := 0;
      PmtDiscAmount := 0;
      DifferentCurrenciesInAppln := FALSE;

      CASE CalcType OF
        CalcType::Direct :
          BEGIN
            FindAmountRounding;
            VendEntryApplID := USERID;
            IF VendEntryApplID = '' THEN
              VendEntryApplID := '***';

            VendLedgEntry := ApplyingVendLedgEntry;

            AppliedVendLedgEntry.SETCURRENTKEY("Vendor No.",Open,Positive);
            AppliedVendLedgEntry.SETRANGE("Vendor No.","Vendor No.");
            AppliedVendLedgEntry.SETRANGE(Open,TRUE);
            AppliedVendLedgEntry.SETRANGE("Applies-to ID",VendEntryApplID);

            IF ApplyingVendLedgEntry."Entry No." <> 0 THEN BEGIN
              VendLedgEntry.CALCFIELDS("Remaining Amount");
              AppliedVendLedgEntry.SETFILTER("Entry No.",'<>%1',VendLedgEntry."Entry No.");
            END;

            HandlChosenEntries(0,
              VendLedgEntry."Remaining Amount",
              VendLedgEntry."Currency Code",
              VendLedgEntry."Posting Date");
          END;

        CalcType::GenJnlLine :
          BEGIN
            FindAmountRounding;
            IF GenJnlLine."Bal. Account Type" = GenJnlLine."Bal. Account Type"::Vendor THEN
              ExchAccGLJnlLine.RUN(GenJnlLine);

            CASE ApplnType OF
              ApplnType::"Applies-to Doc. No." :
                BEGIN
                  AppliedVendLedgEntry := Rec;
                  WITH AppliedVendLedgEntry DO BEGIN
                    CALCFIELDS("Remaining Amount");
                    IF "Currency Code" <> ApplnCurrencyCode THEN BEGIN
                      "Remaining Amount" :=
                        CurrExchRate.ExchangeAmtFCYToFCY(
                          ApplnDate,"Currency Code",ApplnCurrencyCode,"Remaining Amount");
                      "Remaining Pmt. Disc. Possible" :=
                        CurrExchRate.ExchangeAmtFCYToFCY(
                          ApplnDate,"Currency Code",ApplnCurrencyCode,"Remaining Pmt. Disc. Possible");
                      "Amount to Apply" :=
                        CurrExchRate.ExchangeAmtFCYToFCY(
                          ApplnDate,"Currency Code",ApplnCurrencyCode,"Amount to Apply");
                    END;

                    IF "Amount to Apply" <> 0 THEN
                      AppliedAmount := ROUND("Amount to Apply",AmountRoundingPrecision)
                    ELSE
                      AppliedAmount := ROUND("Remaining Amount",AmountRoundingPrecision);

                    IF GenJnlPostLine.CheckCalcPmtDiscGenJnlVend(
                         GenJnlLine,AppliedVendLedgEntry,0,FALSE) AND
                       ((ABS(GenJnlLine.Amount) + ApplnRoundingPrecision >=
                         ABS(AppliedAmount - "Remaining Pmt. Disc. Possible")) OR
                        (GenJnlLine.Amount = 0))
                    THEN
                      PmtDiscAmount := "Remaining Pmt. Disc. Possible";

                    IF NOT DifferentCurrenciesInAppln THEN
                      DifferentCurrenciesInAppln:= ApplnCurrencyCode <> "Currency Code";

                  END;
                  CheckRounding;
                END;

              ApplnType::"Applies-to ID" :
                BEGIN
                  GenJnlLine2 := GenJnlLine;
                  AppliedVendLedgEntry.SETCURRENTKEY("Vendor No.",Open,Positive);
                  AppliedVendLedgEntry.SETRANGE("Vendor No.",GenJnlLine."Account No.");
                  AppliedVendLedgEntry.SETRANGE(Open,TRUE);
                  AppliedVendLedgEntry.SETRANGE("Applies-to ID",GenJnlLine."Applies-to ID");

                  HandlChosenEntries(1,
                    GenJnlLine2.Amount,
                    GenJnlLine2."Currency Code",
                    GenJnlLine2."Posting Date");
                END;
              END;
          END;

        CalcType::PurchHeader:
          BEGIN
            FindAmountRounding;

            CASE ApplnType OF
              ApplnType::"Applies-to Doc. No." :
                BEGIN
                  AppliedVendLedgEntry := Rec;
                  WITH AppliedVendLedgEntry DO BEGIN
                    CALCFIELDS("Remaining Amount");

                    IF "Currency Code" <> ApplnCurrencyCode THEN
                      "Remaining Amount" :=
                        CurrExchRate.ExchangeAmtFCYToFCY(
                          ApplnDate,"Currency Code",ApplnCurrencyCode,"Remaining Amount");

                    AppliedAmount := AppliedAmount + ROUND("Remaining Amount",AmountRoundingPrecision);

                    IF NOT DifferentCurrenciesInAppln THEN
                      DifferentCurrenciesInAppln:= ApplnCurrencyCode <> "Currency Code";

                  END;
                  CheckRounding;
                END;

              ApplnType::"Applies-to ID" :
                BEGIN
                  WITH VendLedgEntry DO BEGIN
                    AppliedVendLedgEntry.SETCURRENTKEY("Vendor No.",Open,Positive);
                    AppliedVendLedgEntry.SETRANGE("Vendor No.",PurchHeader."Pay-to Vendor No.");
                    AppliedVendLedgEntry.SETRANGE(Open,TRUE);
                    AppliedVendLedgEntry.SETRANGE("Applies-to ID",PurchHeader."Applies-to ID");

                    HandlChosenEntries(2,
                      GenJnlLine.Amount,
                      GenJnlLine."Currency Code",
                      ApplnDate);
                  END;
                END;
            END;
          END;
      END;
    END;

    PROCEDURE CalcApplnRemainingAmount@4(Amount@1000 : Decimal) : Decimal;
    VAR
      ApplnRemainingAmount@1001 : Decimal;
    BEGIN
      ValidExchRate := TRUE;
      IF ApplnCurrencyCode = "Currency Code" THEN
        EXIT(Amount)
      ELSE BEGIN
        IF ApplnDate = 0D THEN
          ApplnDate := "Posting Date";
        ApplnRemainingAmount :=
          CurrExchRate.ApplnExchangeAmtFCYToFCY(
            ApplnDate,"Currency Code",ApplnCurrencyCode,Amount,ValidExchRate);
        EXIT(ApplnRemainingAmount);
      END;
    END;

    PROCEDURE CalcApplnAmounttoApply@11(AmounttoApply@1000 : Decimal) : Decimal;
    VAR
      ApplnAmountToApply@1001 : Decimal;
    BEGIN
      ValidExchRate := TRUE;

      IF ApplnCurrencyCode = "Currency Code" THEN
        EXIT(AmounttoApply)
      ELSE BEGIN
        IF ApplnDate = 0D THEN
          ApplnDate := "Posting Date";
        ApplnAmountToApply :=
          CurrExchRate.ApplnExchangeAmtFCYToFCY(
            ApplnDate,"Currency Code",ApplnCurrencyCode,AmounttoApply,ValidExchRate);
        EXIT(ApplnAmountToApply);
      END;
    END;

    PROCEDURE FindAmountRounding@6();
    BEGIN
      IF ApplnCurrencyCode = '' THEN BEGIN
        Currency.INIT;
        Currency.Code := '';
        Currency.InitRoundingPrecision;
      END ELSE
        IF ApplnCurrencyCode <> Currency.Code THEN
          Currency.GET(ApplnCurrencyCode);

      AmountRoundingPrecision := Currency."Amount Rounding Precision";
    END;

    PROCEDURE CheckRounding@3();
    BEGIN
      ApplnRounding := 0;

      CASE CalcType OF
        CalcType::PurchHeader :
          EXIT;
        CalcType::GenJnlLine :
          IF ("Document Type" <> "Document Type"::Payment) AND
            ("Document Type" <> "Document Type"::Refund)
          THEN
            EXIT;
      END;

      IF ApplnCurrencyCode = '' THEN
        ApplnRoundingPrecision := GLSetup."Appln. Rounding Precision"
      ELSE BEGIN
        IF ApplnCurrencyCode <> "Currency Code" THEN
          Currency.GET(ApplnCurrencyCode);
        ApplnRoundingPrecision := Currency."Appln. Rounding Precision";
      END;

      IF (ABS((AppliedAmount - PmtDiscAmount) + ApplyingAmount) <= ApplnRoundingPrecision) AND DifferentCurrenciesInAppln THEN
        ApplnRounding := -((AppliedAmount - PmtDiscAmount) + ApplyingAmount);
    END;

    PROCEDURE GetVendLedgEntry@5(VAR VendLedgEntry@1000 : Record 25);
    BEGIN
      VendLedgEntry := Rec;
    END;

    PROCEDURE FindApplyingEntry@12();
    BEGIN
      IF CalcType = CalcType::Direct THEN BEGIN
        VendEntryApplID := USERID;
        IF VendEntryApplID = '' THEN
          VendEntryApplID := '***';

        VendLedgEntry.SETCURRENTKEY("Vendor No.","Applies-to ID",Open);
        VendLedgEntry.SETRANGE("Vendor No.","Vendor No.");
        VendLedgEntry.SETRANGE("Applies-to ID",VendEntryApplID);
        VendLedgEntry.SETRANGE(Open,TRUE);
        VendLedgEntry.SETRANGE("Applying Entry",TRUE);
        IF VendLedgEntry.FIND('-') THEN BEGIN
          VendLedgEntry.CALCFIELDS(Amount,"Remaining Amount");
          ApplyingVendLedgEntry := VendLedgEntry;
          SETCURRENTKEY("Entry No.");
          SETFILTER("Entry No.",'<> %1',VendLedgEntry."Entry No.");
          ApplyingAmount := VendLedgEntry."Remaining Amount";
          ApplnDate := VendLedgEntry."Posting Date";
          ApplnCurrencyCode := VendLedgEntry."Currency Code";
        END;
        CalcApplnAmount;
      END;
    END;

    PROCEDURE HandlChosenEntries@8(Type@1000 : 'Direct,GenJnlLine,PurchHeader';CurrentAmount@1001 : Decimal;CurrencyCode@1002 : Code[10];"Posting Date"@1003 : Date);
    VAR
      AppliedVendLedgEntryTemp@1004 : TEMPORARY Record 25;
      PossiblePmtdisc@1007 : Decimal;
      OldPmtdisc@1008 : Decimal;
      CorrectionAmount@1009 : Decimal;
      CalculateCurrency@1006 : Boolean;
      CanUseDisc@1005 : Boolean;
      FromZeroGenJnl@1010 : Boolean;
    BEGIN
      IF AppliedVendLedgEntry.FINDSET(FALSE,FALSE) THEN BEGIN
        REPEAT
          AppliedVendLedgEntryTemp := AppliedVendLedgEntry;
          AppliedVendLedgEntryTemp.INSERT;
        UNTIL AppliedVendLedgEntry.NEXT = 0;
      END ELSE
        EXIT;

      FromZeroGenJnl := (CurrentAmount = 0) AND (Type = Type::GenJnlLine);

      REPEAT
        IF NOT FromZeroGenJnl THEN
          AppliedVendLedgEntryTemp.SETRANGE(Positive,CurrentAmount < 0);
        IF AppliedVendLedgEntryTemp.FINDFIRST THEN BEGIN
          AppliedVendLedgEntryTemp.CALCFIELDS("Remaining Amount");

          IF Type = Type::Direct THEN
            CalculateCurrency := ApplyingVendLedgEntry."Entry No." <> 0
          ELSE
            CalculateCurrency := TRUE;


          IF (CurrencyCode <> AppliedVendLedgEntryTemp."Currency Code") AND CalculateCurrency THEN BEGIN
            AppliedVendLedgEntryTemp."Remaining Amount" :=
              GenJnlPostLine.ExchAmount(
                AppliedVendLedgEntryTemp."Remaining Amount",
                AppliedVendLedgEntryTemp."Currency Code",
                CurrencyCode,"Posting Date");
            AppliedVendLedgEntryTemp."Remaining Pmt. Disc. Possible" :=
              GenJnlPostLine.ExchAmount(
                AppliedVendLedgEntryTemp."Remaining Pmt. Disc. Possible",
                AppliedVendLedgEntryTemp."Currency Code",
                CurrencyCode,"Posting Date");
            AppliedVendLedgEntryTemp."Amount to Apply" :=
              GenJnlPostLine.ExchAmount(
                AppliedVendLedgEntryTemp."Amount to Apply",
                AppliedVendLedgEntryTemp."Currency Code",
                CurrencyCode,"Posting Date");
          END;

          CASE Type OF
            Type::Direct:
              CanUseDisc := GenJnlPostLine.CheckCalcPmtDiscVend(VendLedgEntry,AppliedVendLedgEntryTemp,0,FALSE,FALSE);
            Type::GenJnlLine:
              CanUseDisc := GenJnlPostLine.CheckCalcPmtDiscGenJnlVend(GenJnlLine2,AppliedVendLedgEntryTemp,0,FALSE)
            ELSE
              CanUseDisc := FALSE;
          END;

          IF CanUseDisc AND
            (ABS(AppliedVendLedgEntryTemp."Amount to Apply") >= ABS(AppliedVendLedgEntryTemp."Remaining Amount" -
            AppliedVendLedgEntryTemp."Remaining Pmt. Disc. Possible")) THEN BEGIN

            IF (ABS(CurrentAmount - PossiblePmtdisc) > ABS(AppliedVendLedgEntryTemp."Remaining Amount" -
              AppliedVendLedgEntryTemp."Remaining Pmt. Disc. Possible"))
            THEN BEGIN
              PmtDiscAmount := PmtDiscAmount + AppliedVendLedgEntryTemp."Remaining Pmt. Disc. Possible";
              CurrentAmount := CurrentAmount + AppliedVendLedgEntryTemp."Remaining Amount" -
                AppliedVendLedgEntryTemp."Remaining Pmt. Disc. Possible";
            END ELSE IF (ABS(CurrentAmount - PossiblePmtdisc) = ABS(AppliedVendLedgEntryTemp."Remaining Amount" -
              AppliedVendLedgEntryTemp."Remaining Pmt. Disc. Possible"))
            THEN BEGIN
              PmtDiscAmount := PmtDiscAmount + AppliedVendLedgEntryTemp."Remaining Pmt. Disc. Possible" + PossiblePmtdisc;
              CurrentAmount := CurrentAmount + AppliedVendLedgEntryTemp."Remaining Amount" -
                AppliedVendLedgEntryTemp."Remaining Pmt. Disc. Possible" - PossiblePmtdisc;
              PossiblePmtdisc := 0;
              AppliedAmount := AppliedAmount + CorrectionAmount;
            END ELSE IF FromZeroGenJnl THEN BEGIN
              PmtDiscAmount := PmtDiscAmount + AppliedVendLedgEntryTemp."Remaining Pmt. Disc. Possible";
              CurrentAmount := CurrentAmount +
                AppliedVendLedgEntryTemp."Remaining Amount" - AppliedVendLedgEntryTemp."Remaining Pmt. Disc. Possible";
            END ELSE BEGIN
              IF (CurrentAmount + AppliedVendLedgEntryTemp."Remaining Amount" >= 0) <> (CurrentAmount >= 0) THEN BEGIN
                PmtDiscAmount := PmtDiscAmount + PossiblePmtdisc;
                CurrentAmount := CurrentAmount - PossiblePmtdisc;
                AppliedAmount := AppliedAmount + CorrectionAmount;
              END;
              CurrentAmount := CurrentAmount + AppliedVendLedgEntryTemp."Remaining Amount";
              PossiblePmtdisc := AppliedVendLedgEntryTemp."Remaining Pmt. Disc. Possible";
            END;
          END ELSE BEGIN
            IF (((CurrentAmount - PossiblePmtdisc + AppliedVendLedgEntryTemp."Amount to Apply") * CurrentAmount) <= 0) THEN BEGIN
              PmtDiscAmount := PmtDiscAmount + PossiblePmtdisc;
              CurrentAmount := CurrentAmount - PossiblePmtdisc;
              PossiblePmtdisc := 0;
              AppliedAmount := AppliedAmount + CorrectionAmount;
            END;
            CurrentAmount := CurrentAmount + AppliedVendLedgEntryTemp."Amount to Apply";
          END;
        END ELSE BEGIN
          AppliedVendLedgEntryTemp.SETRANGE(Positive);
          AppliedVendLedgEntryTemp.FINDFIRST;
        END;

        IF (OldPmtdisc <> PmtDiscAmount) THEN
          AppliedAmount := AppliedAmount + AppliedVendLedgEntryTemp."Remaining Amount"
        ELSE
          AppliedAmount := AppliedAmount + AppliedVendLedgEntryTemp."Amount to Apply";
        OldPmtdisc := PmtDiscAmount;

        IF PossiblePmtdisc <> 0 THEN
          CorrectionAmount := AppliedVendLedgEntryTemp."Remaining Amount" - AppliedVendLedgEntryTemp."Amount to Apply"
        ELSE
          CorrectionAmount := 0;

        IF NOT DifferentCurrenciesInAppln THEN
          DifferentCurrenciesInAppln:= ApplnCurrencyCode <> AppliedVendLedgEntryTemp."Currency Code";

        AppliedVendLedgEntryTemp.DELETE;
        AppliedVendLedgEntryTemp.SETRANGE(Positive);

      UNTIL NOT AppliedVendLedgEntryTemp.FINDFIRST;
      CheckRounding;
    END;

    BEGIN
    {
      $001 AJS 01.02.2007
         Cambiar el caption ESP de la columna Appln. Amount to Apply por Importe a Aplicar divisa liquidacion
    }
    END.
  }
}
