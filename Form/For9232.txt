OBJECT Form 9232 _G/L Balance by Dimension
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=NAVW16.00.01;
  }
  PROPERTIES
  {
    Width=16500;
    Height=4290;
    CaptionML=ENU=G/L Balance by Dimension;
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    LinksAllowed=No;
    SourceTable=Table367;
    OnInit=VAR
             Field@1000 : Record 2000000041;
           BEGIN
             Field.GET(DATABASE::"G/L Account",42);
             BusUnitFilterCaption := Field."Field Caption";
           END;

    OnOpenForm=VAR
                 MATRIX_Step@1000 : 'Initial,Previous,Same,Next';
               BEGIN
                 GLAcc.SETPERMISSIONFILTER;
                 GlobalDim1Filter := GLAcc.GETFILTER("Global Dimension 1 Filter");
                 GlobalDim2Filter := GLAcc.GETFILTER("Global Dimension 2 Filter");

                 GLSetup.GET;
                 CurrForm.Dim1Filter.ENABLED :=
                   (GLSetup."Global Dimension 1 Code" <> '') AND
                   (GLAcc.GETFILTER("Global Dimension 1 Filter") = '');
                 CurrForm.Dim2Filter.ENABLED :=
                   (GLSetup."Global Dimension 2 Code" <> '') AND
                   (GLAcc.GETFILTER("Global Dimension 2 Filter") = '');

                 IF GLSetup."Additional Reporting Currency" = '' THEN
                   ShowInAddCurr := FALSE;

                 IF (LineDimCode = '') AND (ColumnDimCode = '') THEN BEGIN
                   LineDimCode := GLAcc.TABLECAPTION;
                   ColumnDimCode := Text001;
                 END;
                 LineDimOption := DimCodeToOption(LineDimCode);
                 ColumnDimOption := DimCodeToOption(ColumnDimCode);

                 CalculateClosingDateFilter;
                 FindPeriod('');

                 MATRIX_NoOfColumns := 32;
                 MATRIX_GenerateColumnCaptions(MATRIX_Step::Initial);
               END;

  }
  CONTROLS
  {
    { 1   ;TabControl   ;220  ;220  ;16060;3080 ;HorzGlue=Both;
                                                 VertGlue=Top;
                                                 PageNamesML=ENU=General,Filters,Options,Matrix Options }
    { 6   ;TextBox      ;3850 ;990  ;2750 ;440  ;ParentControl=1;
                                                 InPage=0;
                                                 CaptionML=ENU=Show as Lines;
                                                 SourceExpr=LineDimCode;
                                                 OnValidate=BEGIN
                                                              IF (UPPERCASE(LineDimCode) = UPPERCASE(ColumnDimCode)) AND (LineDimCode <> '') THEN BEGIN
                                                                ColumnDimCode := '';
                                                                ValidateColumnDimCode;
                                                              END;
                                                              DimCodAmtBuf.DELETEALL;
                                                              ValidateLineDimCode;
                                                            END;

                                                 OnLookup=VAR
                                                            NewCode@1002 : Text[30];
                                                          BEGIN
                                                            NewCode := GetDimSelection(LineDimCode);
                                                            IF NewCode = LineDimCode THEN
                                                              EXIT(FALSE)
                                                            ELSE BEGIN
                                                              Text := NewCode;
                                                              LineDimCode := NewCode;
                                                              ValidateLineDimCode;
                                                              CurrForm.UPDATE;
                                                              EXIT(TRUE);
                                                            END
                                                          END;

                                                 OnAfterValidate=BEGIN
                                                                   CurrForm.UPDATE;
                                                                 END;
                                                                  }
    { 108 ;Label        ;440  ;990  ;3300 ;440  ;ParentControl=6 }
    { 9   ;TextBox      ;3850 ;1540 ;2750 ;440  ;ParentControl=1;
                                                 InPage=0;
                                                 CaptionML=ENU=Show as Columns;
                                                 SourceExpr=ColumnDimCode;
                                                 OnValidate=BEGIN
                                                              IF (UPPERCASE(LineDimCode) = UPPERCASE(ColumnDimCode)) AND (LineDimCode <> '') THEN BEGIN
                                                                LineDimCode := '';
                                                                ValidateLineDimCode;
                                                              END;
                                                              DimCodAmtBuf.DELETEALL;
                                                              ValidateColumnDimCode;
                                                            END;

                                                 OnLookup=VAR
                                                            NewCode@1002 : Text[30];
                                                          BEGIN
                                                            NewCode := GetDimSelection(ColumnDimCode);
                                                            IF NewCode = ColumnDimCode THEN
                                                              EXIT(FALSE)
                                                            ELSE BEGIN
                                                              Text := NewCode;
                                                              ColumnDimCode := NewCode;
                                                              ValidateColumnDimCode;
                                                              CurrForm.UPDATE;
                                                              EXIT(TRUE);
                                                            END
                                                          END;

                                                 OnAfterValidate=VAR
                                                                   MATRIX_Steps@1001 : 'First,Previous,Next';
                                                                 BEGIN
                                                                   CurrForm.UPDATE;
                                                                   MATRIX_GenerateColumnCaptions(MATRIX_Steps::First);
                                                                 END;
                                                                  }
    { 10  ;Label        ;440  ;1540 ;3300 ;440  ;ParentControl=9 }
    { 36  ;TextBox      ;3850 ;990  ;2750 ;440  ;ParentControl=1;
                                                 InPage=1;
                                                 CaptionML=ENU=Date Filter;
                                                 SourceExpr=DateFilter;
                                                 OnValidate=VAR
                                                              ApplicationManagement@1001 : Codeunit 1;
                                                              Date1@1002 : Date;
                                                            BEGIN
                                                              IF ApplicationManagement.MakeDateFilter(DateFilter) = 0 THEN;
                                                              IF DateFilter <> '' THEN
                                                                IF EVALUATE(Date1,DateFilter) THEN
                                                                  IF Date1 <> NORMALDATE(Date1) THEN
                                                                    DateFilter := STRSUBSTNO('%1..%2',NORMALDATE(Date1),Date1);
                                                              GLAcc.SETFILTER("Date Filter",DateFilter);
                                                              DateFilter := GLAcc.GETFILTER("Date Filter");
                                                              InternalDateFilter := DateFilter;
                                                            END;

                                                 OnAfterValidate=VAR
                                                                   MATRIX_Step@1001 : 'First,Previous,Next';
                                                                 BEGIN
                                                                   DimCodAmtBuf.DELETEALL;
                                                                   CurrForm.UPDATE;
                                                                   IF ColumnDimOption = ColumnDimOption::Period THEN BEGIN
                                                                     PeriodInitialized := TRUE;
                                                                     MATRIX_GenerateColumnCaptions(MATRIX_Step::First);
                                                                   END;
                                                                 END;
                                                                  }
    { 37  ;Label        ;440  ;990  ;3300 ;440  ;ParentControl=36 }
    { 38  ;TextBox      ;3850 ;1540 ;2750 ;440  ;ParentControl=1;
                                                 InPage=1;
                                                 CaptionML=ENU=G/L Account Filter;
                                                 ClearOnLookup=No;
                                                 SourceExpr=GLAccFilter;
                                                 OnLookup=VAR
                                                            GLAccList@1002 : Form 18;
                                                          BEGIN
                                                            GLAccList.LOOKUPMODE(TRUE);
                                                            IF NOT (GLAccList.RUNMODAL = ACTION::LookupOK) THEN
                                                              EXIT(FALSE)
                                                            ELSE
                                                              Text := GLAccList.GetSelectionFilter;
                                                            EXIT(TRUE);
                                                          END;

                                                 OnAfterValidate=VAR
                                                                   MATRIX_Step@1001 : 'First,Previous,Next';
                                                                 BEGIN
                                                                   DimCodAmtBuf.DELETEALL;
                                                                   CurrForm.UPDATE;
                                                                   IF ColumnDimOption = ColumnDimOption::"G/L Account" THEN
                                                                     MATRIX_GenerateColumnCaptions(MATRIX_Step::First);
                                                                 END;
                                                                  }
    { 39  ;Label        ;440  ;1540 ;3300 ;440  ;ParentControl=38 }
    { 30  ;TextBox      ;12980;2090 ;2750 ;440  ;Name=Dim2Filter;
                                                 ParentControl=1;
                                                 InPage=1;
                                                 ClearOnLookup=No;
                                                 SourceExpr=GlobalDim2Filter;
                                                 CaptionClass='1,3,2';
                                                 OnLookup=BEGIN
                                                            EXIT(LookUpDimFilter(GLSetup."Global Dimension 2 Code",Text));
                                                          END;

                                                 OnAfterValidate=VAR
                                                                   MATRIX_Step@1001 : 'First,Previous,Next';
                                                                 BEGIN
                                                                   DimCodAmtBuf.DELETEALL;
                                                                   CurrForm.UPDATE;
                                                                   IF ColumnDimOption = ColumnDimOption::"Dimension 2" THEN
                                                                     MATRIX_GenerateColumnCaptions(MATRIX_Step::First);
                                                                 END;
                                                                  }
    { 34  ;TextBox      ;12980;1540 ;2750 ;440  ;Name=Dim1Filter;
                                                 ParentControl=1;
                                                 InPage=1;
                                                 ClearOnLookup=No;
                                                 SourceExpr=GlobalDim1Filter;
                                                 CaptionClass='1,3,1';
                                                 OnLookup=BEGIN
                                                            EXIT(LookUpDimFilter(GLSetup."Global Dimension 1 Code",Text));
                                                          END;

                                                 OnAfterValidate=VAR
                                                                   MATRIX_Step@1001 : 'First,Previous,Next';
                                                                 BEGIN
                                                                   DimCodAmtBuf.DELETEALL;
                                                                   CurrForm.UPDATE;
                                                                   IF ColumnDimOption = ColumnDimOption::"Dimension 1" THEN
                                                                     MATRIX_GenerateColumnCaptions(MATRIX_Step::First);
                                                                 END;
                                                                  }
    { 53  ;TextBox      ;3850 ;2090 ;2750 ;440  ;ValidateTableRelation=No;
                                                 ParentControl=1;
                                                 InPage=1;
                                                 CaptionML=ENU=Budget Filter;
                                                 ClearOnLookup=No;
                                                 SourceExpr=BudgetFilter;
                                                 TableRelation="G/L Budget Name".Name;
                                                 LookupFormID=G/L Budget Names;
                                                 OnAfterValidate=BEGIN
                                                                   IF ShowActualBudg <> ShowActualBudg::"Actual Amounts" THEN
                                                                     DimCodAmtBuf.DELETEALL;
                                                                   CurrForm.UPDATE;
                                                                 END;
                                                                  }
    { 117 ;Label        ;440  ;2090 ;3300 ;440  ;ParentControl=53 }
    { 5   ;Label        ;9570 ;1540 ;3300 ;440  ;ParentControl=34;
                                                 InPage=1 }
    { 7   ;Label        ;9570 ;2090 ;3300 ;440  ;ParentControl=30;
                                                 InPage=1 }
    { 16  ;TextBox      ;12980;990  ;2750 ;440  ;ParentControl=1;
                                                 InPage=1;
                                                 ClearOnLookup=No;
                                                 SourceExpr=BusUnitFilter;
                                                 CaptionClass='3,' + BusUnitFilterCaption;
                                                 OnLookup=VAR
                                                            BusUnitList@1002 : Form 240;
                                                          BEGIN
                                                            BusUnitList.LOOKUPMODE(TRUE);
                                                            IF NOT (BusUnitList.RUNMODAL = ACTION::LookupOK) THEN
                                                              EXIT(FALSE);
                                                            Text := BusUnitList.GetSelectionFilter;
                                                            EXIT(TRUE);
                                                          END;

                                                 OnAfterValidate=VAR
                                                                   MATRIX_Step@1000 : 'First,Previous,Next';
                                                                 BEGIN
                                                                   DimCodAmtBuf.DELETEALL;
                                                                   CurrForm.UPDATE;
                                                                   IF ColumnDimOption = ColumnDimOption::"Business Unit" THEN
                                                                     MATRIX_GenerateColumnCaptions(MATRIX_Step::First);
                                                                 END;
                                                                  }
    { 15  ;Label        ;9570 ;990  ;3300 ;440  ;ParentControl=16 }
    { 4   ;CheckBox     ;12980;2090 ;440  ;440  ;ParentControl=1;
                                                 InPage=2;
                                                 ShowCaption=No;
                                                 CaptionML=ENU=Show Column Name;
                                                 SourceExpr=ShowColumnName;
                                                 OnAfterValidate=VAR
                                                                   MATRIX_Step@1000 : 'Initial,Previous,Same,Next';
                                                                 BEGIN
                                                                   MATRIX_GenerateColumnCaptions(MATRIX_Step::Same);
                                                                 END;
                                                                  }
    { 3   ;Label        ;9570 ;2090 ;3300 ;440  ;ParentControl=4 }
    { 19  ;TextBox      ;3850 ;2640 ;2750 ;440  ;ParentControl=1;
                                                 InPage=2;
                                                 CaptionML=ENU=Rounding Factor;
                                                 OptionCaptionML=ENU=None,1,1000,1000000;
                                                 SourceExpr=RoundingFactor }
    { 28  ;Label        ;440  ;2640 ;3300 ;440  ;ParentControl=19 }
    { 29  ;TextBox      ;3850 ;990  ;2750 ;440  ;ParentControl=1;
                                                 InPage=2;
                                                 CaptionML=ENU=Show;
                                                 OptionCaptionML=ENU=Actual Amounts,Budgeted Amounts,Variance,Variance%,Index%;
                                                 SourceExpr=ShowActualBudg;
                                                 OnValidate=BEGIN
                                                              DimCodAmtBuf.DELETEALL;

                                                              //Amount := CalcAmount(FALSE);
                                                            END;
                                                             }
    { 32  ;Label        ;440  ;990  ;3300 ;440  ;ParentControl=29 }
    { 47  ;TextBox      ;3850 ;1540 ;2750 ;440  ;ParentControl=1;
                                                 InPage=2;
                                                 CaptionML=ENU=Show Amount Field;
                                                 OptionCaptionML=ENU=Amount,Debit Amount,Credit Amount;
                                                 SourceExpr=AmountField;
                                                 OnValidate=BEGIN
                                                              DimCodAmtBuf.DELETEALL;
                                                              //Amount := CalcAmount(FALSE);
                                                            END;
                                                             }
    { 48  ;Label        ;440  ;1540 ;3300 ;440  ;ParentControl=47 }
    { 49  ;CheckBox     ;12980;1430 ;440  ;440  ;ParentControl=1;
                                                 InPage=2;
                                                 ShowCaption=No;
                                                 CaptionML=ENU=Show Amounts in Add. Reporting Currency;
                                                 SourceExpr=ShowInAddCurr;
                                                 OnValidate=BEGIN
                                                              DimCodAmtBuf.DELETEALL;
                                                              //Amount := CalcAmount(FALSE);
                                                            END;
                                                             }
    { 50  ;Label        ;9570 ;990  ;3300 ;880  ;ParentControl=49;
                                                 MultiLine=Yes }
    { 20  ;TextBox      ;3850 ;2090 ;2750 ;440  ;ParentControl=1;
                                                 InPage=2;
                                                 CaptionML=ENU=Closing Entries;
                                                 OptionCaptionML=ENU=Include,Exclude;
                                                 SourceExpr=ClosingEntryFilter;
                                                 OnValidate=BEGIN
                                                              DimCodAmtBuf.DELETEALL;
                                                              CalculateClosingDateFilter;
                                                              FindPeriod('=');
                                                              //Amount := CalcAmount(FALSE);
                                                            END;
                                                             }
    { 51  ;Label        ;440  ;2090 ;3300 ;440  ;ParentControl=20 }
    { 26  ;TextBox      ;3850 ;990  ;2750 ;440  ;ParentControl=1;
                                                 InPage=3;
                                                 CaptionML=ENU=View by;
                                                 OptionCaptionML=ENU=Day,Week,Month,Quarter,Year,Accounting Period;
                                                 SourceExpr=PeriodType;
                                                 OnValidate=BEGIN
                                                              FindPeriod('');
                                                            END;

                                                 OnAfterValidate=VAR
                                                                   MATRIX_Step@1001 : 'First,Previous,Next';
                                                                 BEGIN
                                                                   IF ColumnDimOption = ColumnDimOption::Period THEN
                                                                     MATRIX_GenerateColumnCaptions(MATRIX_Step::First);
                                                                 END;
                                                                  }
    { 27  ;Label        ;440  ;990  ;3300 ;440  ;ParentControl=26 }
    { 22  ;TextBox      ;11440;990  ;3410 ;440  ;Editable=No;
                                                 ParentControl=1;
                                                 InPage=3;
                                                 CaptionML=ENU=Column Set;
                                                 SourceExpr=MATRIX_ColumnSet }
    { 14  ;CommandButton;14850;990  ;550  ;550  ;VertGlue=Bottom;
                                                 FocusOnClick=No;
                                                 ParentControl=22;
                                                 InPage=3;
                                                 ShowCaption=No;
                                                 BitmapPos=Center;
                                                 AutoRepeat=Yes;
                                                 Bitmap=15;
                                                 CaptionML=ENU=Previous Set;
                                                 ToolTipML=ENU=Previous Set;
                                                 OnPush=VAR
                                                          MATRIX_Step@1001 : 'Initial,Previous,Same,Next';
                                                        BEGIN
                                                          MATRIX_GenerateColumnCaptions(MATRIX_Step::Previous);
                                                        END;
                                                         }
    { 24  ;Label        ;7920 ;990  ;3300 ;440  ;ParentControl=22;
                                                 InPage=3 }
    { 18  ;CommandButton;15510;1870 ;550  ;550  ;VertGlue=Bottom;
                                                 FocusOnClick=No;
                                                 ParentControl=22;
                                                 InPage=3;
                                                 ShowCaption=No;
                                                 BitmapPos=Center;
                                                 AutoRepeat=Yes;
                                                 Bitmap=16;
                                                 CaptionML=ENU=Next Set;
                                                 ToolTipML=ENU=Next Set;
                                                 OnPush=VAR
                                                          MATRIX_Step@1001 : 'Initial,Previous,Same,Next';
                                                        BEGIN
                                                          MATRIX_GenerateColumnCaptions(MATRIX_Step::Next);
                                                        END;
                                                         }
    { 11  ;TextBox      ;3850 ;1650 ;2750 ;440  ;ParentControl=1;
                                                 InPage=3;
                                                 CaptionML=ENU=View as;
                                                 OptionCaptionML=ENU=Net Change,Balance at Date;
                                                 SourceExpr=AmountType;
                                                 OnValidate=BEGIN
                                                              FindPeriod('');
                                                            END;

                                                 OnAfterValidate=VAR
                                                                   MATRIX_Step@1001 : 'First,Previous,Next';
                                                                 BEGIN
                                                                   IF ColumnDimOption = ColumnDimOption::Period THEN
                                                                     MATRIX_GenerateColumnCaptions(MATRIX_Step::First);
                                                                 END;
                                                                  }
    { 12  ;Label        ;440  ;1650 ;3300 ;440  ;ParentControl=11 }
    { 2   ;CommandButton;14080;3520 ;2200 ;550  ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 PushAction=FormHelp }
    { 119 ;CommandButton;9240 ;3520 ;2200 ;550  ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 CaptionML=ENU=&Show Matrix;
                                                 OnPush=VAR
                                                          MatrixForm@1284 : Form 9233;
                                                        BEGIN
                                                          CLEAR(MatrixForm);
                                                          MatrixForm.Load(
                                                            LineDimCode,ColumnDimCode,PeriodType,DateFilter,GLAccFilter,BusUnitFilter,
                                                            BudgetFilter,GlobalDim1Filter,GlobalDim2Filter,
                                                            ShowActualBudg,AmountField,ClosingEntryFilter,RoundingFactor,ShowInAddCurr,
                                                            MATRIX_ColumnCaptions,MATRIX_PrimaryKeyFirstColInSet,
                                                            AmountType,MATRIX_CurrSetLength);
                                                          MatrixForm.RUNMODAL;
                                                        END;
                                                         }
    { 8   ;MenuButton   ;11660;3520 ;2200 ;550  ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 CaptionML=ENU=&Actions;
                                                 Menu=MENUITEMS
                                                 {
                                                   { ID=13;
                                                     CaptionML=ENU=Reverse Lines and Columns;
                                                     OnPush=VAR
                                                              TempDimCode@1001 : Text[30];
                                                              MATRIX_Step@1002 : 'First,Previous,Next';
                                                            BEGIN
                                                              TempDimCode := ColumnDimCode;
                                                              ColumnDimCode := LineDimCode;
                                                              LineDimCode := TempDimCode;
                                                              ValidateLineDimCode;
                                                              ValidateColumnDimCode;
                                                              MATRIX_GenerateColumnCaptions(MATRIX_Step::First);
                                                            END;
                                                             }
                                                 }
                                                  }
  }
  CODE
  {
    VAR
      Text001@1001 : TextConst 'ENU=Period';
      Text002@1002 : TextConst 'ENU=%1 is not a valid line definition.';
      Text003@1003 : TextConst 'ENU=%1 is not a valid column definition.';
      GLSetup@1004 : Record 98;
      GLAcc@1005 : Record 15;
      BusUnit@1038 : Record 220;
      DimCodAmtBuf@1006 : TEMPORARY Record 375;
      CurrExchRate@1007 : Record 330;
      LineDimOption@1008 : 'G/L Account,Period,Business Unit,Dimension 1,Dimension 2,Dimension 3,Dimension 4';
      ColumnDimOption@1009 : 'G/L Account,Period,Business Unit,Dimension 1,Dimension 2,Dimension 3,Dimension 4';
      LineDimCode@1010 : Text[30];
      ColumnDimCode@1011 : Text[30];
      PeriodType@1012 : 'Day,Week,Month,Quarter,Year,Accounting Period';
      AmountType@1013 : 'Net Change,Balance at Date';
      RoundingFactor@1014 : 'None,1,1000,1000000';
      AmountField@1015 : 'Amount,Debit Amount,Credit Amount';
      ShowActualBudg@1016 : 'Actual Amounts,Budgeted Amounts,Variance,Variance%,Index%';
      ShowInAddCurr@1017 : Boolean;
      ClosingEntryFilter@1018 : 'Include,Exclude';
      ShowColumnName@1019 : Boolean;
      DateFilter@1020 : Text[250];
      InternalDateFilter@1021 : Text[250];
      ExcludeClosingDateFilter@1022 : Text[250];
      GLAccFilter@1023 : Code[250];
      BudgetFilter@1024 : Code[250];
      BusUnitFilter@1025 : Code[250];
      GlobalDim1Filter@1026 : Code[250];
      GlobalDim2Filter@1027 : Code[250];
      BusUnitFilterCaption@1000 : Text[80];
      MatrixHeader@1028 : Text[50];
      PeriodInitialized@1030 : Boolean;
      MATRIX_ColumnCaptions@1032 : ARRAY [32] OF Text[1024];
      MATRIX_NoOfColumns@1033 : Integer;
      MATRIX_ColumnSet@1035 : Text[1024];
      MATRIX_PrimaryKeyFirstColInSet@1034 : Text[1024];
      MATRIX_CurrSetLength@1037 : Integer;

    LOCAL PROCEDURE DimCodeToOption@21(DimCode@1000 : Text[30]) : Integer;
    VAR
      BusUnit@1001 : Record 220;
    BEGIN
      CASE DimCode OF
        '':
          EXIT(-1);
        GLAcc.TABLECAPTION:
          EXIT(0);
        Text001:
          EXIT(1);
        BusUnit.TABLECAPTION:
          EXIT(2);
        GLSetup."Global Dimension 1 Code":
          EXIT(3);
        GLSetup."Global Dimension 2 Code":
          EXIT(4);
        ELSE
          EXIT(-1);
      END;
    END;

    LOCAL PROCEDURE CopyGLAccToBuf@1(VAR TheGLAcc@1000 : Record 15;VAR TheDimCodeBuf@1001 : Record 367);
    BEGIN
      WITH TheDimCodeBuf DO BEGIN
        INIT;
        Code := TheGLAcc."No.";
        Name := TheGLAcc.Name;
        Totaling := TheGLAcc.Totaling;
        Indentation := TheGLAcc.Indentation;
        "Show in Bold" := TheGLAcc."Account Type" <> TheGLAcc."Account Type"::Posting;
      END;
    END;

    LOCAL PROCEDURE CopyPeriodToBuf@8(VAR ThePeriod@1000 : Record 2000000007;VAR TheDimCodeBuf@1001 : Record 367);
    VAR
      Period2@1002 : Record 2000000007;
    BEGIN
      WITH TheDimCodeBuf DO BEGIN
        INIT;
        Code := FORMAT(ThePeriod."Period Start");
        "Period Start" := ThePeriod."Period Start";
        IF ClosingEntryFilter = ClosingEntryFilter::Include THEN
          "Period End" := CLOSINGDATE(ThePeriod."Period End")
        ELSE
          "Period End" := ThePeriod."Period End";
        IF DateFilter <> '' THEN BEGIN
          Period2.SETFILTER("Period End",DateFilter);
          IF Period2.GETRANGEMAX("Period End") < "Period End" THEN
            "Period End" := Period2.GETRANGEMAX("Period End");
        END;
        Name := ThePeriod."Period Name";
      END;
    END;

    LOCAL PROCEDURE CopyBusUnitToBuf@5(VAR TheBusUnit@1000 : Record 220;VAR TheDimCodeBuf@1001 : Record 367);
    BEGIN
      WITH TheDimCodeBuf DO BEGIN
        INIT;
        Code := TheBusUnit.Code;
        Name := TheBusUnit.Name;
      END;
    END;

    LOCAL PROCEDURE CopyDimValueToBuf@9(VAR TheDimVal@1000 : Record 349;VAR TheDimCodeBuf@1001 : Record 367);
    BEGIN
      WITH TheDimCodeBuf DO BEGIN
        INIT;
        Code := TheDimVal.Code;
        Name := TheDimVal.Name;
        Totaling := TheDimVal.Totaling;
        Indentation := TheDimVal.Indentation;
        "Show in Bold" :=
          TheDimVal."Dimension Value Type" <> TheDimVal."Dimension Value Type"::Standard;
      END;
    END;

    LOCAL PROCEDURE FindPeriod@2(SearchText@1000 : Code[10]);
    VAR
      Period@1001 : Record 2000000007;
      PeriodFormMgt@1002 : Codeunit 359;
    BEGIN
      IF DateFilter <> '' THEN BEGIN
        Period.SETFILTER("Period Start",DateFilter);
        IF NOT PeriodFormMgt.FindDate('+',Period,PeriodType) THEN
          PeriodFormMgt.FindDate('+',Period,PeriodType::Day);
        Period.SETRANGE("Period Start");
      END;
      IF PeriodFormMgt.FindDate(SearchText,Period,PeriodType) THEN
        IF ClosingEntryFilter = ClosingEntryFilter::Include THEN
          Period."Period End" := CLOSINGDATE(Period."Period End");
      IF AmountType = AmountType::"Net Change" THEN BEGIN
        GLAcc.SETRANGE("Date Filter",Period."Period Start",Period."Period End");
        IF GLAcc.GETRANGEMIN("Date Filter") = GLAcc.GETRANGEMAX("Date Filter") THEN
          GLAcc.SETRANGE("Date Filter",GLAcc.GETRANGEMIN("Date Filter"));
      END ELSE
        GLAcc.SETRANGE("Date Filter",0D,Period."Period End");

      InternalDateFilter := GLAcc.GETFILTER("Date Filter");
      IF (LineDimOption <> LineDimOption::Period) AND (ColumnDimOption <> ColumnDimOption::Period) THEN
        DateFilter := InternalDateFilter;
      DimCodAmtBuf.DELETEALL;
    END;

    LOCAL PROCEDURE CalculateClosingDateFilter@45();
    VAR
      AccountingPeriod@1000 : Record 50;
      FirstRec@1001 : Boolean;
    BEGIN
      IF ClosingEntryFilter = ClosingEntryFilter::Include THEN
        ExcludeClosingDateFilter := ''
      ELSE BEGIN
        AccountingPeriod.SETCURRENTKEY("New Fiscal Year");
        AccountingPeriod.SETRANGE("New Fiscal Year",TRUE);
        FirstRec := TRUE;
        IF AccountingPeriod.FIND('-') THEN
          REPEAT
            IF FirstRec THEN
              ExcludeClosingDateFilter :=
                STRSUBSTNO('<>%1',CLOSINGDATE(AccountingPeriod."Starting Date" - 1))
            ELSE
              ExcludeClosingDateFilter :=
                ExcludeClosingDateFilter + STRSUBSTNO('&<>%1',CLOSINGDATE(AccountingPeriod."Starting Date" - 1));
            FirstRec := FALSE;
          UNTIL AccountingPeriod.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE GetDimSelection@3(OldDimSelCode@1000 : Text[30]) : Text[30];
    VAR
      DimSelection@1001 : Form 568;
    BEGIN
      DimSelection.InsertDimSelBuf(FALSE,GLAcc.TABLECAPTION,GLAcc.TABLECAPTION);
      DimSelection.InsertDimSelBuf(FALSE,BusUnit.TABLECAPTION,BusUnit.TABLECAPTION);
      DimSelection.InsertDimSelBuf(FALSE,Text001,Text001);
      IF GLSetup."Global Dimension 1 Code" <> '' THEN
        DimSelection.InsertDimSelBuf(FALSE,GLSetup."Global Dimension 1 Code",'');
      IF GLSetup."Global Dimension 2 Code" <> '' THEN
        DimSelection.InsertDimSelBuf(FALSE,GLSetup."Global Dimension 2 Code",'');

      DimSelection.LOOKUPMODE := TRUE;
      IF DimSelection.RUNMODAL = ACTION::LookupOK THEN
        EXIT(DimSelection.GetDimSelCode)
      ELSE
        EXIT(OldDimSelCode);
    END;

    LOCAL PROCEDURE LookUpCode@4(DimOption@1000 : 'G/L Account,Period,Business Unit,Dimension 1,Dimension 2';DimCode@1001 : Text[30];Code@1002 : Text[30]);
    VAR
      GLAcc@1003 : Record 15;
      BusUnit@1004 : Record 220;
      DimVal@1005 : Record 349;
      DimValList@1006 : Form 560;
    BEGIN
      CASE DimOption OF
        DimOption::"G/L Account":
          BEGIN
            GLAcc.GET(Code);
            FORM.RUNMODAL(FORM::"G/L Account List",GLAcc);
          END;
        DimOption::Period: ;
        DimOption::"Business Unit":
          BEGIN
            BusUnit.GET(Code);
            FORM.RUNMODAL(FORM::"Business Unit List",BusUnit);
          END;
        DimOption::"Dimension 1",DimOption::"Dimension 2":
          BEGIN
            DimVal.SETRANGE("Dimension Code",DimCode);
            DimVal.GET(DimCode,Code);
            DimValList.SETTABLEVIEW(DimVal);
            DimValList.SETRECORD(DimVal);
            DimValList.RUNMODAL;
          END;
      END;
    END;

    LOCAL PROCEDURE LookUpDimFilter@57(Dim@1000 : Code[20];VAR Text@1001 : Text[250]) : Boolean;
    VAR
      DimVal@1002 : Record 349;
      DimValList@1003 : Form 560;
    BEGIN
      IF Dim = '' THEN
        EXIT(FALSE);
      DimValList.LOOKUPMODE(TRUE);
      DimVal.SETRANGE("Dimension Code",Dim);
      DimValList.SETTABLEVIEW(DimVal);
      IF DimValList.RUNMODAL = ACTION::LookupOK THEN BEGIN
        DimValList.GETRECORD(DimVal);
        Text := DimValList.GetSelectionFilter;
        EXIT(TRUE);
      END ELSE
        EXIT(FALSE)
    END;

    LOCAL PROCEDURE ValidateLineDimCode@19();
    VAR
      BusUnit@1000 : Record 220;
    BEGIN
      IF (UPPERCASE(LineDimCode) <> UPPERCASE(GLAcc.TABLECAPTION)) AND
         (UPPERCASE(LineDimCode) <> UPPERCASE(BusUnit.TABLECAPTION)) AND
         (UPPERCASE(LineDimCode) <> UPPERCASE(Text001)) AND
         (UPPERCASE(LineDimCode) <> GLSetup."Global Dimension 1 Code") AND
         (UPPERCASE(LineDimCode) <> GLSetup."Global Dimension 2 Code") AND
         (LineDimCode <> '') THEN BEGIN
        MESSAGE(Text002,LineDimCode);
        LineDimCode := '';
      END;
      LineDimOption := DimCodeToOption(LineDimCode);
      InternalDateFilter := GLAcc.GETFILTER("Date Filter");
      IF (LineDimOption <> LineDimOption::Period) AND (ColumnDimOption <> ColumnDimOption::Period) THEN BEGIN
        DateFilter := InternalDateFilter;
        IF STRPOS(DateFilter,'&') > 1 THEN
          DateFilter := COPYSTR(DateFilter,1,STRPOS(DateFilter,'&') - 1);
      END ELSE
        PeriodInitialized := FALSE;
    END;

    LOCAL PROCEDURE ValidateColumnDimCode@20();
    VAR
      BusUnit@1000 : Record 220;
    BEGIN
      IF (UPPERCASE(ColumnDimCode) <> UPPERCASE(GLAcc.TABLECAPTION)) AND
         (UPPERCASE(ColumnDimCode) <> UPPERCASE(BusUnit.TABLECAPTION)) AND
         (UPPERCASE(ColumnDimCode) <> UPPERCASE(Text001)) AND
         (UPPERCASE(ColumnDimCode) <> GLSetup."Global Dimension 1 Code") AND
         (UPPERCASE(ColumnDimCode) <> GLSetup."Global Dimension 2 Code") AND
         (ColumnDimCode <> '') THEN BEGIN
        MESSAGE(Text003,ColumnDimCode);
        ColumnDimCode := '';
      END;
      ColumnDimOption := DimCodeToOption(ColumnDimCode);
      InternalDateFilter := GLAcc.GETFILTER("Date Filter");
      IF (LineDimOption <> LineDimOption::Period) AND (ColumnDimOption <> ColumnDimOption::Period) THEN BEGIN
        DateFilter := InternalDateFilter;
        IF STRPOS(DateFilter,'&') > 1 THEN
          DateFilter := COPYSTR(DateFilter,1,STRPOS(DateFilter,'&') - 1);
      END ELSE
        PeriodInitialized := FALSE;
    END;

    LOCAL PROCEDURE FindRec@1223(DimOption@1000 : 'G/L Account,Period,Business Unit,Dimension 1,Dimension 2';VAR DimCodeBuf@1001 : Record 367;Which@1002 : Text[250]) : Boolean;
    VAR
      GLAcc@1224 : Record 15;
      BusUnit@1225 : Record 220;
      Period@1226 : Record 2000000007;
      DimVal@1227 : Record 349;
      PeriodFormMgt@1228 : Codeunit 359;
      Found@1229 : Boolean;
    BEGIN
      GLAcc.SETPERMISSIONFILTER;
      CASE DimOption OF
        DimOption::"G/L Account":
          BEGIN
            GLAcc."No." := DimCodeBuf.Code;
            IF GLAccFilter <> '' THEN
              GLAcc.SETFILTER("No.",GLAccFilter);
            Found := GLAcc.FIND(Which);
            IF Found THEN
              CopyGLAccToBuf(GLAcc,DimCodeBuf);
          END;
        DimOption::Period:
          BEGIN
            IF NOT PeriodInitialized THEN
              DateFilter := '';
            PeriodInitialized := TRUE;
            EVALUATE(Period."Period Start",DimCodeBuf.Code);
            IF DateFilter <> '' THEN
              Period.SETFILTER("Period Start",DateFilter)
            ELSE
              IF NOT PeriodInitialized AND (InternalDateFilter <> '') THEN
                Period.SETFILTER("Period Start",InternalDateFilter);
            Found := PeriodFormMgt.FindDate(Which,Period,PeriodType);
            IF Found THEN
              CopyPeriodToBuf(Period,DimCodeBuf);
          END;
        DimOption::"Business Unit":
          BEGIN
            BusUnit.Code := DimCodeBuf.Code;
            IF BusUnitFilter <> '' THEN
              BusUnit.SETFILTER(Code,BusUnitFilter);
            Found := BusUnit.FIND(Which);
            IF Found THEN
              CopyBusUnitToBuf(BusUnit,DimCodeBuf);
          END;
        DimOption::"Dimension 1":
          BEGIN
            IF GlobalDim1Filter <> '' THEN
              DimVal.SETFILTER(Code,GlobalDim1Filter);
            DimVal."Dimension Code" := GLSetup."Global Dimension 1 Code";
            DimVal.SETRANGE("Dimension Code",DimVal."Dimension Code");
            DimVal.Code := DimCodeBuf.Code;
            Found := DimVal.FIND(Which);
            IF Found THEN
              CopyDimValueToBuf(DimVal,DimCodeBuf);
          END;
        DimOption::"Dimension 2":
          BEGIN
            IF GlobalDim2Filter <> '' THEN
              DimVal.SETFILTER(Code,GlobalDim2Filter);
            DimVal."Dimension Code" := GLSetup."Global Dimension 2 Code";
            DimVal.SETRANGE("Dimension Code",DimVal."Dimension Code");
            DimVal.Code := DimCodeBuf.Code;
            Found := DimVal.FIND(Which);
            IF Found THEN
              CopyDimValueToBuf(DimVal,DimCodeBuf);
          END;
      END;
      EXIT(Found);
    END;

    LOCAL PROCEDURE NextRec@1230(DimOption@1000 : 'G/L Account,Period,Business Unit,Dimension 1,Dimension 2';VAR DimCodeBuf@1001 : Record 367;Steps@1002 : Integer) : Integer;
    VAR
      GLAcc@1231 : Record 15;
      BusUnit@1232 : Record 220;
      Period@1233 : Record 2000000007;
      DimVal@1234 : Record 349;
      PeriodFormMgt@1235 : Codeunit 359;
      ResultSteps@1236 : Integer;
    BEGIN
      GLAcc.SETPERMISSIONFILTER;
      CASE DimOption OF
        DimOption::"G/L Account":
          BEGIN
            GLAcc."No." := DimCodeBuf.Code;
            IF GLAccFilter <> '' THEN
              GLAcc.SETFILTER("No.",GLAccFilter);
            ResultSteps := GLAcc.NEXT(Steps);
            IF ResultSteps <> 0 THEN
              CopyGLAccToBuf(GLAcc,DimCodeBuf);
          END;
        DimOption::Period:
          BEGIN
            IF DateFilter <> '' THEN
              Period.SETFILTER("Period Start",DateFilter);
            EVALUATE(Period."Period Start",DimCodeBuf.Code);
            ResultSteps := PeriodFormMgt.NextDate(Steps,Period,PeriodType);
            IF ResultSteps <> 0 THEN
              CopyPeriodToBuf(Period,DimCodeBuf);
          END;
        DimOption::"Business Unit":
          BEGIN
            BusUnit.Code := DimCodeBuf.Code;
            IF BusUnitFilter <> '' THEN
              BusUnit.SETFILTER(Code,BusUnitFilter);
            ResultSteps := BusUnit.NEXT(Steps);
            IF ResultSteps <> 0 THEN
              CopyBusUnitToBuf(BusUnit,DimCodeBuf);
          END;
        DimOption::"Dimension 1":
          BEGIN
            IF GlobalDim1Filter <> '' THEN
              DimVal.SETFILTER(Code,GlobalDim1Filter);
            DimVal."Dimension Code" := GLSetup."Global Dimension 1 Code";
            DimVal.SETRANGE("Dimension Code",DimVal."Dimension Code");
            DimVal.Code := DimCodeBuf.Code;
            ResultSteps := DimVal.NEXT(Steps);
            IF ResultSteps <> 0 THEN
              CopyDimValueToBuf(DimVal,DimCodeBuf);
          END;
        DimOption::"Dimension 2":
          BEGIN
            IF GlobalDim2Filter <> '' THEN
              DimVal.SETFILTER(Code,GlobalDim2Filter);
            DimVal."Dimension Code" := GLSetup."Global Dimension 2 Code";
            DimVal.SETRANGE("Dimension Code",DimVal."Dimension Code");
            DimVal.Code := DimCodeBuf.Code;
            ResultSteps := DimVal.NEXT(Steps);
            IF ResultSteps <> 0 THEN
              CopyDimValueToBuf(DimVal,DimCodeBuf);
          END;
      END;
      EXIT(ResultSteps);
    END;

    PROCEDURE MATRIX_GenerateColumnCaptions@7(Step@1000 : 'Initial,Previous,Same,Next');
    VAR
      CurrentColumn@1003 : Record 367;
      Continue@1002 : Boolean;
      Found@1001 : Boolean;
      Which@1004 : Text[30];
    BEGIN
      MATRIX_CurrSetLength := 0;
      Continue := TRUE;
      CLEAR(MATRIX_ColumnCaptions);
      MATRIX_ColumnSet := '';

      CASE Step OF
        Step::Initial:
          BEGIN
          IF (ColumnDimOption = ColumnDimOption::Period) AND (PeriodType <> PeriodType::"Accounting Period")
              AND (DateFilter = '') THEN BEGIN
            EVALUATE(CurrentColumn.Code,FORMAT(WORKDATE));
            Which := '=><';
          END ELSE
            Which := '-';
          Found := FindRec(ColumnDimOption,CurrentColumn,Which);
          END;
        Step::Previous:
          BEGIN
            CurrentColumn.SETPOSITION(MATRIX_PrimaryKeyFirstColInSet);
            Found := FindRec(ColumnDimOption,CurrentColumn,'=');
            NextRec(ColumnDimOption,CurrentColumn,-MATRIX_NoOfColumns)
          END;
        Step::Same:
          BEGIN
            CurrentColumn.SETPOSITION(MATRIX_PrimaryKeyFirstColInSet);
            Found := FindRec(ColumnDimOption,CurrentColumn,'=');
          END;
        Step::Next:
          BEGIN
            CurrentColumn.SETPOSITION(MATRIX_PrimaryKeyFirstColInSet);
            Found := FindRec(ColumnDimOption,CurrentColumn,'=');
            IF NOT (NextRec(ColumnDimOption,CurrentColumn,MATRIX_NoOfColumns) = MATRIX_NoOfColumns) THEN BEGIN
              CurrentColumn.SETPOSITION(MATRIX_PrimaryKeyFirstColInSet);
              Found := FindRec(ColumnDimOption,CurrentColumn,'=');
            END
          END;
      END;

      MATRIX_PrimaryKeyFirstColInSet := CurrentColumn.GETPOSITION;

      IF Found THEN BEGIN
        REPEAT
          MATRIX_CurrSetLength := MATRIX_CurrSetLength + 1;
          IF ShowColumnName THEN
            MATRIX_ColumnCaptions[MATRIX_CurrSetLength] := CurrentColumn.Name
          ELSE
            MATRIX_ColumnCaptions[MATRIX_CurrSetLength] := CurrentColumn.Code;
        UNTIL (MATRIX_CurrSetLength = MATRIX_NoOfColumns) OR (NextRec(ColumnDimOption,CurrentColumn,1) <> 1);

        IF MATRIX_CurrSetLength = 1 THEN
          MATRIX_ColumnSet := MATRIX_ColumnCaptions[1]
        ELSE
          MATRIX_ColumnSet := MATRIX_ColumnCaptions[1] + '..' + MATRIX_ColumnCaptions[MATRIX_CurrSetLength];
      END;
    END;

    BEGIN
    END.
  }
}
