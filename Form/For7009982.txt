OBJECT Form 7009982 Generacion estados de cuenta
{
  OBJECT-PROPERTIES
  {
    Date=02/10/12;
    Time=12:00:00;
    Modified=Yes;
    Version List=AIC2009;
  }
  PROPERTIES
  {
    Width=13310;
    Height=4290;
    CaptionML=[ENU=Ledger entries status generation;
               ESP=Generacion estados de cuenta];
    SaveValues=Yes;
    TimerInterval=60000;
    OnOpenForm=BEGIN
                 wOn := FALSE;
                 SetEditable;
               END;

    OnQueryCloseForm=VAR
                       lwOK@1103355000 : Boolean;
                     BEGIN
                       lwOK := NOT wOn;
                       IF wOn THEN
                         lwOK := CONFIRM(Text002,FALSE, wNesxtDT);
                       IF lwOK THEN
                         wOn := FALSE;

                       EXIT(lwOK);
                     END;

    OnTimer=VAR
              lwTotal@1103355000 : Integer;
              lwCont@1103355001 : Integer;
            BEGIN
              SetEditable;
              IF wOn THEN BEGIN
                IF CURRENTDATETIME > wNesxtDT THEN
                  Lanzar;

                lwTotal := wNesxtDT - wInitDT;
                lwCont  := CURRENTDATETIME - wInitDT;

                wBarra := ROUND((lwCont/lwTotal*10000),1);
                CurrForm.UPDATE(FALSE);
              END;
            END;

  }
  CONTROLS
  {
    { 1103355000;TabControl;220;220 ;12870;3080 ;HorzGlue=Both;
                                                 VertGlue=Both }
    { 1103355001;TextBox;3520 ;990  ;1320 ;440  ;Name=Tiemp1;
                                                 ParentControl=1103355000;
                                                 InPage=0;
                                                 CaptionML=[ENU=Time in minutes;
                                                            ESP=Tiempo en Minutos];
                                                 ToolTipML=[ENU=Indicate in how many minutes each Account Statements Generation must be released;
                                                            ESP=Indica cada cuantos minutos debe de lanzarse la Generacion Estados Cuenta];
                                                 SourceExpr=wTiempMin;
                                                 MinValue=0 }
    { 1103355002;Label  ;440  ;990  ;2970 ;440  ;ParentControl=1103355001 }
    { 1103355003;TextBox;8470 ;990  ;4180 ;440  ;Editable=No;
                                                 ParentControl=1103355000;
                                                 InPage=0;
                                                 HorzAlign=Center;
                                                 CaptionML=[ENU=Next Time;
                                                            ESP=Proxima Hora];
                                                 SourceExpr=wNesxtDT }
    { 1103355004;Label  ;5060 ;990  ;3300 ;440  ;ParentControl=1103355003 }
    { 1103355005;Indicator;8470;1540;4180 ;440  ;Focusable=No;
                                                 ParentControl=1103355000;
                                                 InPage=0;
                                                 BorderStyle=Normal;
                                                 Percentage=No;
                                                 SourceExpr=wBarra }
    { 1103355007;CommandButton;6050;3520;2200;550;
                                                 Name=Iniciar1;
                                                 HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 CaptionML=[ENU=Start;
                                                            ESP=Iniciar];
                                                 OnPush=BEGIN
                                                          Arranca(TRUE);
                                                        END;
                                                         }
    { 1103355009;CommandButton;8470;3520;2200;550;
                                                 Name=Detener1;
                                                 HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 CaptionML=[ENU=Stop;
                                                            ESP=Detener];
                                                 OnPush=BEGIN
                                                          Arranca(FALSE);
                                                        END;
                                                         }
    { 1103355010;CommandButton;10780;3520;2200;550;
                                                 HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 CaptionML=[ENU=Release;
                                                            ESP=Lanzar];
                                                 OnPush=BEGIN
                                                          Lanzar;
                                                        END;
                                                         }
  }
  CODE
  {
    VAR
      cFunGestDoc@1103355004 : Codeunit 7009900;
      wTiempMin@1103355000 : Integer;
      wNesxtDT@1103355001 : DateTime;
      wInitDT@1103355006 : DateTime;
      wOn@1103355002 : Boolean;
      Text001@1103355003 : TextConst 'ENU=Time in minutes must be filled;ESP=Debe de rellenarse Tiempo en Minutos';
      wBarra@1103355005 : Decimal;
      Text002@1103355007 : TextConst 'ENU=At this moment the timing is starting for the function of generating account status. If you close the window the timing will stop. The next time is %1.\Would you like to exit anyway?;ESP=En este momento se est  ejecutando el temporizador para la funci¢n de Generaci¢n de estados de cuenta. Si cierra la ventana el temporaizador se detendr . La proxima hora prevista es %1.\¨Quiere salir de todos modos?';

    PROCEDURE SetEditable@1103355001();
    BEGIN
      // SetEditable

      CurrForm.Iniciar1.ENABLED := wOn = FALSE;
      CurrForm.Tiemp1.ENABLED   := wOn = FALSE;
      CurrForm.Detener1.ENABLED := wOn;
      IF NOT wOn THEN
        wNesxtDT := 0DT;
    END;

    PROCEDURE Arranca@1103355003(pwArranca@1103355000 : Boolean) : Boolean;
    VAR
      lwOk@1103355001 : Boolean;
    BEGIN
      // Arranca

      CLEAR(wInitDT);
      lwOk := pwArranca;
      IF lwOk THEN BEGIN
        IF wTiempMin=0 THEN
          ERROR(Text001);
      END;
      IF lwOk THEN BEGIN
        wInitDT  := CURRENTDATETIME;
        wNesxtDT := wInitDT + (wTiempMin * 60000)
      END
      ELSE BEGIN
        wNesxtDT := 0DT;
        wBarra   := 0;
      END;
      wOn := lwOk;
      SetEditable;
      EXIT(lwOk);
    END;

    PROCEDURE Lanzar@1103355006();
    BEGIN
      // Lanzar

      cFunGestDoc.ImportarDetallePago(FALSE);
      COMMIT;
      cFunGestDoc.GeneracionEstadosCta(FALSE);
      IF wOn THEN BEGIN
        wInitDT  := CURRENTDATETIME;
        wNesxtDT := wInitDT + (wTiempMin * 60000)
      END;
    END;

    BEGIN
    END.
  }
}
