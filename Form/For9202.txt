OBJECT Form 9202 _Budget
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=NAVW16.00.01,NAVES6.00.01;
  }
  PROPERTIES
  {
    Width=20790;
    Height=10450;
    CaptionML=ENU=Budget;
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    LinksAllowed=No;
    DataCaptionExpr=BudgetName;
    OnOpenForm=VAR
                 GLAcc@1000 : Record 15;
                 MATRIX_Step@1001 : 'First,Previous,Same,Next';
               BEGIN
                 GLAccBudgetBuf.SETPERMISSIONFILTER;

                 IF GLAccBudgetBuf.GETFILTER("Global Dimension 1 Filter") <> '' THEN
                   GlobalDim1Filter := GLAccBudgetBuf.GETFILTER("Global Dimension 1 Filter");
                 IF GLAccBudgetBuf.GETFILTER("Global Dimension 2 Filter") <> '' THEN
                   GlobalDim2Filter := GLAccBudgetBuf.GETFILTER("Global Dimension 2 Filter");

                 GLSetup.GET;

                 CurrForm.GlobalDim1Filter.ENABLED :=
                   (GLSetup."Global Dimension 1 Code" <> '') AND
                   (GLAccBudgetBuf.GETFILTER("Global Dimension 1 Filter") = '');
                 CurrForm.GlobalDim2Filter.ENABLED :=
                   (GLSetup."Global Dimension 2 Code" <> '') AND
                   (GLAccBudgetBuf.GETFILTER("Global Dimension 2 Filter") = '');

                 ValidateBudgetName;

                 IF LineDimCode = '' THEN
                   LineDimCode := GLAcc.TABLECAPTION;
                 IF ColumnDimCode = '' THEN
                   ColumnDimCode := Text001;

                 LineDimOption := DimCodeToOption(LineDimCode);
                 ColumnDimOption := DimCodeToOption(ColumnDimCode);

                 IF (NewBudgetName <> '') AND (NewBudgetName <> BudgetName) THEN BEGIN
                   BudgetName := NewBudgetName;
                   ValidateBudgetName;
                   ValidateLineDimCode;
                   ValidateColumnDimCode;
                 END;

                 IF (LineDimOption = LineDimOption::"Historic G/L Account") OR (ColumnDimOption = ColumnDimOption::"Historic G/L Account") THEN
                   FindHistoricPeriod('')
                 ELSE

                 FindPeriod('');
                 MATRIX_GenerateColumnCaptions(MATRIX_Step::First);

                 UpdateMatrixSubform;
                 CurrForm.UPDATECONTROLS;
               END;

  }
  CONTROLS
  {
    { 1   ;TabControl   ;220  ;220  ;20350;3630 ;HorzGlue=Both;
                                                 VertGlue=Top;
                                                 PageNamesML=ENU=General,Filters }
    { 5   ;TextBox      ;3850 ;990  ;2750 ;440  ;ParentControl=1;
                                                 InPage=0;
                                                 CaptionML=ENU=Budget Name;
                                                 SourceExpr=BudgetName;
                                                 TableRelation="G/L Budget Name";
                                                 OnValidate=BEGIN
                                                              ValidateBudgetName;
                                                              ValidateLineDimCode;
                                                              ValidateColumnDimCode;

                                                              UpdateMatrixSubform;
                                                            END;

                                                 OnLookup=VAR
                                                            GLBudgetNames@1002 : Form 121;
                                                          BEGIN
                                                            GLBudgetNames.LOOKUPMODE := TRUE;
                                                            GLBudgetNames.SETRECORD(GLBudgetName);
                                                            IF GLBudgetNames.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                                              GLBudgetNames.GETRECORD(GLBudgetName);
                                                              BudgetName := GLBudgetName.Name;
                                                              Text := GLBudgetName.Name;
                                                              ValidateBudgetName;
                                                              ValidateLineDimCode;
                                                              ValidateColumnDimCode;
                                                              CurrForm.UPDATE;
                                                              EXIT(TRUE);
                                                            END ELSE BEGIN
                                                              ValidateBudgetName;
                                                              ValidateLineDimCode;
                                                              ValidateColumnDimCode;
                                                              CurrForm.UPDATE;
                                                              EXIT(FALSE);
                                                            END;
                                                          END;

                                                 OnAfterValidate=BEGIN
                                                                   CurrForm.UPDATECONTROLS;
                                                                   UpdateMatrixSubform;
                                                                 END;
                                                                  }
    { 7   ;Label        ;440  ;990  ;3300 ;440  ;ParentControl=5 }
    { 6   ;TextBox      ;3850 ;1650 ;2750 ;440  ;ParentControl=1;
                                                 InPage=0;
                                                 CaptionML=ENU=Show as Lines;
                                                 SourceExpr=LineDimCode;
                                                 OnValidate=VAR
                                                              MATRIX_SetWanted@1001 : 'First,Previous,Same,Next';
                                                            BEGIN
                                                              IF (UPPERCASE(LineDimCode) = UPPERCASE(ColumnDimCode)) AND (LineDimCode <> '') THEN BEGIN
                                                                ColumnDimCode := '';
                                                                ValidateColumnDimCode;
                                                              END;
                                                              ValidateLineDimCode;
                                                              MATRIX_GenerateColumnCaptions(MATRIX_SetWanted::First);
                                                            END;

                                                 OnLookup=VAR
                                                            NewCode@1002 : Text[30];
                                                          BEGIN
                                                            NewCode := GetDimSelection(LineDimCode);
                                                            IF NewCode = LineDimCode THEN
                                                              EXIT(FALSE)
                                                            ELSE BEGIN
                                                              Text := NewCode;
                                                              LineDimCode := NewCode;
                                                              ValidateLineDimCode;
                                                              CurrForm.UPDATE;
                                                              EXIT(TRUE);
                                                            END
                                                          END;

                                                 OnAfterValidate=BEGIN
                                                                   CurrForm.UPDATE;
                                                                   UpdateMatrixSubform;
                                                                 END;
                                                                  }
    { 8   ;Label        ;440  ;1650 ;3300 ;440  ;ParentControl=6 }
    { 9   ;TextBox      ;3850 ;2200 ;2750 ;440  ;ParentControl=1;
                                                 InPage=0;
                                                 CaptionML=ENU=Show as Columns;
                                                 SourceExpr=ColumnDimCode;
                                                 OnValidate=VAR
                                                              MATRIX_Step@1001 : 'First,Previous,Same,Next';
                                                            BEGIN
                                                              IF (UPPERCASE(LineDimCode) = UPPERCASE(ColumnDimCode)) AND (LineDimCode <> '') THEN BEGIN
                                                                LineDimCode := '';
                                                                ValidateLineDimCode;
                                                              END;
                                                              ValidateColumnDimCode;
                                                              MATRIX_GenerateColumnCaptions(MATRIX_Step::First);
                                                            END;

                                                 OnLookup=VAR
                                                            NewCode@1002 : Text[30];
                                                            MATRIX_Step@1003 : 'First,Previous,Same,Next';
                                                          BEGIN
                                                            NewCode := GetDimSelection(ColumnDimCode);
                                                            IF NewCode = ColumnDimCode THEN
                                                              EXIT(FALSE)
                                                            ELSE BEGIN
                                                              Text := NewCode;
                                                              ColumnDimCode := NewCode;
                                                              ValidateColumnDimCode;
                                                              CurrForm.UPDATE;
                                                              EXIT(TRUE);
                                                              MATRIX_GenerateColumnCaptions(MATRIX_Step::First);
                                                            END
                                                          END;

                                                 OnAfterValidate=BEGIN
                                                                   CurrForm.UPDATE;
                                                                   UpdateMatrixSubform;
                                                                 END;
                                                                  }
    { 10  ;Label        ;440  ;2200 ;3300 ;440  ;ParentControl=9 }
    { 111 ;CommandButton;16390;770  ;550  ;550  ;VertGlue=Bottom;
                                                 FocusOnClick=No;
                                                 ParentControl=1;
                                                 InPage=0;
                                                 ShowCaption=No;
                                                 BitmapPos=Center;
                                                 AutoRepeat=Yes;
                                                 Bitmap=16;
                                                 CaptionML=ENU=Next Set;
                                                 ToolTipML=ENU=Next Set;
                                                 OnPush=BEGIN
                                                          MATRIX_GenerateColumnCaptions(MATRIX_Step::Next);
                                                          UpdateMatrixSubform;
                                                        END;
                                                         }
    { 12  ;CommandButton;16390;2420 ;550  ;550  ;VertGlue=Bottom;
                                                 FocusOnClick=No;
                                                 ParentControl=1;
                                                 InPage=0;
                                                 ShowCaption=No;
                                                 BitmapPos=Center;
                                                 AutoRepeat=Yes;
                                                 Bitmap=15;
                                                 CaptionML=ENU=Previous Set;
                                                 ToolTipML=ENU=Previous Set;
                                                 OnPush=BEGIN
                                                          MATRIX_GenerateColumnCaptions(MATRIX_Step::Previous);
                                                          UpdateMatrixSubform;
                                                        END;
                                                         }
    { 15  ;TextBox      ;11550;1100 ;2750 ;440  ;Name=PeriodType;
                                                 ParentControl=1;
                                                 InPage=0;
                                                 CaptionML=ENU=View by;
                                                 OptionCaptionML=ENU=Day,Week,Month,Quarter,Year,Accounting Period;
                                                 SourceExpr=PeriodType;
                                                 OnValidate=BEGIN
                                                              FindPeriod('');
                                                            END;

                                                 OnAfterValidate=VAR
                                                                   MATRIX_Step@1001 : 'First,Previous,Same,Next';
                                                                 BEGIN
                                                                   IF ColumnDimOption = ColumnDimOption::Period THEN
                                                                     MATRIX_GenerateColumnCaptions(MATRIX_Step::First);
                                                                   UpdateMatrixSubform;
                                                                 END;
                                                                  }
    { 16  ;Label        ;8140 ;1100 ;3300 ;440  ;ParentControl=15 }
    { 18  ;CheckBox     ;11550;2200 ;440  ;440  ;ParentControl=1;
                                                 InPage=0;
                                                 ShowCaption=No;
                                                 CaptionML=ENU=Show Column Name;
                                                 SourceExpr=ShowColumnName;
                                                 OnPush=VAR
                                                          MATRIX_Step@1000 : 'First,Previous,Same,Next';
                                                        BEGIN
                                                          MATRIX_GenerateColumnCaptions(MATRIX_Step::Same);
                                                          UpdateMatrixSubform;
                                                        END;
                                                         }
    { 17  ;Label        ;8140 ;2200 ;3300 ;440  ;ParentControl=18 }
    { 19  ;TextBox      ;11550;1650 ;2750 ;440  ;ParentControl=1;
                                                 InPage=0;
                                                 CaptionML=ENU=Rounding Factor;
                                                 OptionCaptionML=ENU=None,1,1000,1000000;
                                                 SourceExpr=RoundingFactor;
                                                 OnValidate=BEGIN
                                                              UpdateMatrixSubform;
                                                            END;
                                                             }
    { 20  ;Label        ;8140 ;1650 ;3300 ;440  ;ParentControl=19 }
    { 52  ;CommandButton;16390;1320 ;550  ;550  ;VertGlue=Bottom;
                                                 FocusOnClick=No;
                                                 ParentControl=1;
                                                 InPage=0;
                                                 ShowCaption=No;
                                                 BitmapPos=Center;
                                                 AutoRepeat=Yes;
                                                 Bitmap=49;
                                                 CaptionML=ENU=Next Column;
                                                 OnPush=BEGIN
                                                          MATRIX_GenerateColumnCaptions(MATRIX_Step::NextColumn);
                                                          UpdateMatrixSubform;
                                                        END;
                                                         }
    { 50  ;CommandButton;16390;1870 ;550  ;550  ;VertGlue=Bottom;
                                                 FocusOnClick=No;
                                                 ParentControl=1;
                                                 InPage=0;
                                                 ShowCaption=No;
                                                 BitmapPos=Center;
                                                 AutoRepeat=Yes;
                                                 Bitmap=51;
                                                 CaptionML=ENU=Previous Column;
                                                 OnPush=BEGIN
                                                          MATRIX_GenerateColumnCaptions(MATRIX_Step::PreviousColumn);
                                                          UpdateMatrixSubform;
                                                        END;
                                                         }
    { 22  ;CommandButton;17710;2640 ;550  ;550  ;VertGlue=Bottom;
                                                 FocusOnClick=No;
                                                 ParentControl=1;
                                                 InPage=0;
                                                 ShowCaption=No;
                                                 BitmapPos=Center;
                                                 AutoRepeat=Yes;
                                                 Bitmap=49;
                                                 CaptionML=ENU=Next Period;
                                                 OnPush=BEGIN
                                                          IF (LineDimOption = LineDimOption::Period) OR (ColumnDimOption = ColumnDimOption::Period) THEN
                                                            EXIT;
                                                          FindPeriod('>');
                                                          CurrForm.UPDATE;
                                                          UpdateMatrixSubform;
                                                        END;
                                                         }
    { 21  ;CommandButton;17050;2640 ;550  ;550  ;VertGlue=Bottom;
                                                 FocusOnClick=No;
                                                 ParentControl=1;
                                                 InPage=0;
                                                 ShowCaption=No;
                                                 BitmapPos=Center;
                                                 AutoRepeat=Yes;
                                                 Bitmap=51;
                                                 CaptionML=ENU=Previous Period;
                                                 OnPush=BEGIN
                                                          IF (LineDimOption = LineDimOption::Period) OR (ColumnDimOption = ColumnDimOption::Period) THEN
                                                            EXIT;
                                                          FindPeriod('<');
                                                          CurrForm.UPDATE;
                                                          UpdateMatrixSubform;
                                                        END;
                                                         }
    { 38  ;TextBox      ;3850 ;1540 ;2750 ;440  ;ParentControl=1;
                                                 InPage=1;
                                                 CaptionML=ENU=G/L Account Filter;
                                                 ClearOnLookup=No;
                                                 SourceExpr=GLAccFilter;
                                                 OnLookup=VAR
                                                            GLAccList@1002 : Form 18;
                                                          BEGIN
                                                            GLAccList.LOOKUPMODE(TRUE);
                                                            IF NOT (GLAccList.RUNMODAL = ACTION::LookupOK) THEN
                                                              EXIT(FALSE)
                                                            ELSE
                                                              Text := GLAccList.GetSelectionFilter;
                                                            EXIT(TRUE);
                                                          END;

                                                 OnAfterValidate=BEGIN
                                                                   GLAccBudgetBuf.SETFILTER("G/L Account Filter",GLAccFilter);
                                                                   IF ColumnDimOption = ColumnDimOption::"G/L Account" THEN
                                                                     MATRIX_GenerateColumnCaptions(MATRIX_Step::First);
                                                                   UpdateMatrixSubform;
                                                                 END;
                                                                  }
    { 39  ;Label        ;440  ;1540 ;3300 ;440  ;ParentControl=38 }
    { 48  ;TextBox      ;3850 ;3190 ;2750 ;440  ;Name=GlobalDim2Filter;
                                                 ParentControl=1;
                                                 InPage=1;
                                                 CaptionML=ENU=Global Dimension 2 Filter;
                                                 ClearOnLookup=No;
                                                 SourceExpr=GlobalDim2Filter;
                                                 CaptionClass='1,3,2';
                                                 OnLookup=BEGIN
                                                            EXIT(LookUpDimFilter(GLSetup."Global Dimension 2 Code",Text));
                                                          END;

                                                 OnAfterValidate=BEGIN
                                                                   GLAccBudgetBuf.SETFILTER("Global Dimension 2 Filter",GlobalDim2Filter);
                                                                   IF ColumnDimOption = ColumnDimOption::"Global Dimension 2" THEN
                                                                     MATRIX_GenerateColumnCaptions(MATRIX_Step::First);
                                                                   UpdateMatrixSubform;
                                                                 END;
                                                                  }
    { 49  ;TextBox      ;3850 ;2640 ;2750 ;440  ;Name=GlobalDim1Filter;
                                                 ParentControl=1;
                                                 InPage=1;
                                                 CaptionML=ENU=Global Dimension 1 Filter;
                                                 ClearOnLookup=No;
                                                 SourceExpr=GlobalDim1Filter;
                                                 CaptionClass='1,3,1';
                                                 OnLookup=BEGIN
                                                            EXIT(LookUpDimFilter(GLSetup."Global Dimension 1 Code",Text));
                                                          END;

                                                 OnAfterValidate=BEGIN
                                                                   GLAccBudgetBuf.SETFILTER("Global Dimension 1 Filter",GlobalDim1Filter);
                                                                   IF ColumnDimOption = ColumnDimOption::"Global Dimension 1" THEN
                                                                     MATRIX_GenerateColumnCaptions(MATRIX_Step::First);
                                                                   UpdateMatrixSubform;
                                                                 END;
                                                                  }
    { 30  ;TextBox      ;12980;1540 ;2750 ;440  ;Name=BudgetDim2Filter;
                                                 ParentControl=1;
                                                 InPage=1;
                                                 CaptionML=ENU=Budget Dimension 2 Filter;
                                                 ClearOnLookup=No;
                                                 SourceExpr=BudgetDim2Filter;
                                                 CaptionClass=GetCaptionClass(2);
                                                 OnLookup=BEGIN
                                                            EXIT(LookUpDimFilter(GLBudgetName."Budget Dimension 2 Code",Text));
                                                          END;

                                                 OnAfterValidate=BEGIN
                                                                   GLAccBudgetBuf.SETFILTER("Budget Dimension 2 Filter",BudgetDim2Filter);
                                                                   IF ColumnDimOption = ColumnDimOption::"Budget Dimension 2" THEN
                                                                     MATRIX_GenerateColumnCaptions(MATRIX_Step::First);
                                                                   UpdateMatrixSubform;
                                                                 END;
                                                                  }
    { 34  ;TextBox      ;12980;990  ;2750 ;440  ;Name=BudgetDim1Filter;
                                                 ParentControl=1;
                                                 InPage=1;
                                                 CaptionML=ENU=Budget Dimension 1 Filter;
                                                 ClearOnLookup=No;
                                                 SourceExpr=BudgetDim1Filter;
                                                 CaptionClass=GetCaptionClass(1);
                                                 OnLookup=BEGIN
                                                            EXIT(LookUpDimFilter(GLBudgetName."Budget Dimension 1 Code",Text));
                                                          END;

                                                 OnAfterValidate=BEGIN
                                                                   GLAccBudgetBuf.SETFILTER("Budget Dimension 1 Filter",BudgetDim1Filter);
                                                                   IF ColumnDimOption = ColumnDimOption::"Budget Dimension 1" THEN
                                                                     MATRIX_GenerateColumnCaptions(MATRIX_Step::First);
                                                                   UpdateMatrixSubform;
                                                                 END;
                                                                  }
    { 35  ;TextBox      ;12980;2640 ;2750 ;440  ;Name=BudgetDim4Filter;
                                                 ParentControl=1;
                                                 InPage=1;
                                                 CaptionML=ENU=Budget Dimension 4 Filter;
                                                 ClearOnLookup=No;
                                                 SourceExpr=BudgetDim4Filter;
                                                 CaptionClass=GetCaptionClass(4);
                                                 OnLookup=BEGIN
                                                            EXIT(LookUpDimFilter(GLBudgetName."Budget Dimension 4 Code",Text));
                                                          END;

                                                 OnAfterValidate=BEGIN
                                                                   GLAccBudgetBuf.SETFILTER("Budget Dimension 4 Filter",BudgetDim4Filter);
                                                                   IF ColumnDimOption = ColumnDimOption::"Budget Dimension 4" THEN
                                                                     MATRIX_GenerateColumnCaptions(MATRIX_Step::First);
                                                                   UpdateMatrixSubform;
                                                                 END;
                                                                  }
    { 46  ;TextBox      ;12980;2090 ;2750 ;440  ;Name=BudgetDim3Filter;
                                                 ParentControl=1;
                                                 InPage=1;
                                                 CaptionML=ENU=Budget Dimension 3 Filter;
                                                 ClearOnLookup=No;
                                                 SourceExpr=BudgetDim3Filter;
                                                 CaptionClass=GetCaptionClass(3);
                                                 OnLookup=BEGIN
                                                            EXIT(LookUpDimFilter(GLBudgetName."Budget Dimension 3 Code",Text));
                                                          END;

                                                 OnAfterValidate=BEGIN
                                                                   GLAccBudgetBuf.SETFILTER("Budget Dimension 3 Filter",BudgetDim3Filter);
                                                                   IF ColumnDimOption = ColumnDimOption::"Budget Dimension 3" THEN
                                                                     MATRIX_GenerateColumnCaptions(MATRIX_Step::First);
                                                                   UpdateMatrixSubform;
                                                                 END;
                                                                  }
    { 36  ;TextBox      ;3850 ;990  ;2750 ;440  ;ParentControl=1;
                                                 InPage=1;
                                                 CaptionML=ENU=Date Filter;
                                                 SourceExpr=DateFilter;
                                                 OnValidate=VAR
                                                              ApplicationManagement@1001 : Codeunit 1;
                                                            BEGIN
                                                              IF ApplicationManagement.MakeDateFilter(DateFilter) = 0 THEN;
                                                              GLAccBudgetBuf.SETFILTER("Date Filter",DateFilter);
                                                              DateFilter := GLAccBudgetBuf.GETFILTER("Date Filter");
                                                              InternalDateFilter := DateFilter;
                                                            END;

                                                 OnAfterValidate=BEGIN
                                                                   CurrForm.UPDATE;
                                                                   IF ColumnDimOption = ColumnDimOption::Period THEN
                                                                     MATRIX_GenerateColumnCaptions(MATRIX_Step::First);
                                                                   UpdateMatrixSubform;
                                                                 END;
                                                                  }
    { 37  ;Label        ;440  ;990  ;3300 ;440  ;ParentControl=36 }
    { 28  ;Label        ;440  ;2640 ;3300 ;440  ;ParentControl=49;
                                                 InPage=1 }
    { 29  ;Label        ;440  ;3190 ;3300 ;440  ;ParentControl=48;
                                                 InPage=1 }
    { 13  ;Label        ;9570 ;990  ;3300 ;440  ;ParentControl=34;
                                                 InPage=1 }
    { 14  ;Label        ;9570 ;1540 ;3300 ;440  ;ParentControl=30;
                                                 InPage=1 }
    { 31  ;Label        ;9570 ;2090 ;3300 ;440  ;ParentControl=46;
                                                 InPage=1 }
    { 33  ;Label        ;9570 ;2640 ;3300 ;440  ;ParentControl=35;
                                                 InPage=1 }
    { 1100000;TextBox   ;3850 ;2090 ;2750 ;440  ;ParentControl=1;
                                                 InPage=1;
                                                 CaptionML=ENU=Historic. G/L Account Filter;
                                                 ClearOnLookup=No;
                                                 SourceExpr=HistoricGLAccFilter;
                                                 OnLookup=VAR
                                                            HistoricGLAccList@1100000 : Form 10731;
                                                          BEGIN
                                                            HistoricGLAccList.LOOKUPMODE(TRUE);
                                                            IF NOT (HistoricGLAccList.RUNMODAL = ACTION::LookupOK) THEN
                                                              EXIT(FALSE)
                                                            ELSE
                                                              Text := HistoricGLAccList.GetSelectionFilter;
                                                            EXIT(TRUE);
                                                          END;

                                                 OnAfterValidate=BEGIN
                                                                   GLAccBudgetBuf.SETFILTER("Historic G/L Account Filter",HistoricGLAccFilter);
                                                                 END;
                                                                  }
    { 1100001;Label     ;440  ;2090 ;3300 ;440  ;ParentControl=1100000 }
    { 2   ;CommandButton;18370;9680 ;2200 ;550  ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 PushAction=FormHelp }
    { 1102601000;SubForm;220  ;3960 ;20350;5500 ;Name=MatrixForm;
                                                 HorzGlue=Both;
                                                 VertGlue=Both;
                                                 SubFormID=Form9203 }
    { 1102601001;MenuButton;15950;9680;2200;550 ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 CaptionML=ENU=F&unctions;
                                                 Menu=MENUITEMS
                                                 {
                                                   { ID=1102601002;
                                                     PushAction=RunObject;
                                                     Ellipsis=Yes;
                                                     CaptionML=ENU=Copy Budget;
                                                     RunObject=Report 96 }
                                                   { ID=1102601003;
                                                     CaptionML=ENU=Delete Budget;
                                                     OnPush=BEGIN
                                                              DeleteBudget;
                                                            END;
                                                             }
                                                   { ID=1102601004;
                                                     MenuItemType=Separator;
                                                     CaptionML=ENU="" }
                                                   { ID=1102601005;
                                                     Ellipsis=Yes;
                                                     CaptionML=ENU=Export to Excel;
                                                     OnPush=VAR
                                                              GLBudgetEntry@1001 : Record 96;
                                                            BEGIN
                                                              GLBudgetEntry.SETFILTER("Budget Name",BudgetName);
                                                              GLBudgetEntry.SETFILTER("Business Unit Code",BusUnitFilter);
                                                              GLBudgetEntry.SETFILTER("G/L Account No.",GLAccFilter);
                                                              GLBudgetEntry.SETFILTER("Global Dimension 1 Code",GlobalDim1Filter);
                                                              GLBudgetEntry.SETFILTER("Global Dimension 2 Code",GlobalDim2Filter);
                                                              GLBudgetEntry.SETFILTER("Budget Dimension 1 Code",BudgetDim1Filter);
                                                              GLBudgetEntry.SETFILTER("Budget Dimension 2 Code",BudgetDim2Filter);
                                                              GLBudgetEntry.SETFILTER("Budget Dimension 3 Code",BudgetDim3Filter);
                                                              GLBudgetEntry.SETFILTER("Budget Dimension 4 Code",BudgetDim4Filter);
                                                              REPORT.RUN(REPORT::"Export Budget to Excel",TRUE,FALSE,GLBudgetEntry);
                                                            END;
                                                             }
                                                   { ID=1102601006;
                                                     Ellipsis=Yes;
                                                     CaptionML=ENU=Import from Excel;
                                                     OnPush=VAR
                                                              ImportBudgetfromExcel@1001 : Report 81;
                                                            BEGIN
                                                              ImportBudgetfromExcel.SetGLBudgetName(BudgetName);
                                                              ImportBudgetfromExcel.RUNMODAL;
                                                            END;
                                                             }
                                                   { ID=1102601007;
                                                     MenuItemType=Separator }
                                                   { ID=1102601008;
                                                     CaptionML=ENU=Reverse Lines and Columns;
                                                     OnPush=VAR
                                                              TempDimCode@1102601000 : Text[30];
                                                            BEGIN
                                                              TempDimCode := ColumnDimCode;
                                                              ColumnDimCode := LineDimCode;
                                                              LineDimCode := TempDimCode;
                                                              ValidateLineDimCode;
                                                              ValidateColumnDimCode;

                                                              MATRIX_GenerateColumnCaptions(MATRIX_Step::First);
                                                              UpdateMatrixSubform;
                                                            END;
                                                             }
                                                 }
                                                  }
    { 1102601009;MenuButton;13530;9680;2200;550 ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 CaptionML=ENU=&Balance;
                                                 Menu=MENUITEMS
                                                 {
                                                   { ID=1102601011;
                                                     PushAction=RunObject;
                                                     CaptionML=ENU=G/L Balance/B&udget;
                                                     RunObject=Form 422 }
                                                 }
                                                  }
  }
  CODE
  {
    VAR
      GLSetup@1014 : Record 98;
      GLAccBudgetBuf@1013 : Record 374;
      GLBudgetName@1012 : Record 95;
      PrevGLBudgetName@1002 : Record 95;
      MATRIX_MatrixRecords@1191 : ARRAY [12] OF Record 367;
      MATRIX_CaptionSet@1192 : ARRAY [32] OF Text[80];
      MATRIX_CaptionRange@1193 : Text[80];
      FirstColumn@1194 : Text[80];
      LastColumn@1195 : Text[80];
      MATRIX_CaptionFieldNo@1196 : Integer;
      MATRIX_PrimKeyFirstCaptionInCu@1197 : Text[80];
      MATRIX_CurrentNoOfColumns@1198 : Integer;
      Text001@1001 : TextConst 'ENU=Period';
      Text003@1003 : TextConst 'ENU=Do you want to delete the budget entries shown?';
      Text004@1004 : TextConst 'ENU=DEFAULT';
      Text005@1005 : TextConst 'ENU=Default budget';
      Text006@1006 : TextConst 'ENU=%1 is not a valid line definition.';
      Text007@1007 : TextConst 'ENU=%1 is not a valid column definition.';
      Text008@1008 : TextConst 'ENU=1,6,,Budget Dimension 1 Filter';
      Text009@1009 : TextConst 'ENU=1,6,,Budget Dimension 2 Filter';
      Text010@1010 : TextConst 'ENU=1,6,,Budget Dimension 3 Filter';
      Text011@1011 : TextConst 'ENU=1,6,,Budget Dimension 4 Filter';
      MATRIX_Step@1015 : 'First,Previous,Same,Next,PreviousColumn,NextColumn';
      BudgetName@1016 : Code[10];
      NewBudgetName@1042 : Code[10];
      LineDimOption@1017 : 'G/L Account,Period,Business Unit,Global Dimension 1,Global Dimension 2,Budget Dimension 1,Budget Dimension 2,Budget Dimension 3,Budget Dimension 4,,,,,Historic G/L Account';
      ColumnDimOption@1018 : 'G/L Account,Period,Business Unit,Global Dimension 1,Global Dimension 2,Budget Dimension 1,Budget Dimension 2,Budget Dimension 3,Budget Dimension 4,,,,,Historic G/L Account';
      LineDimCode@1019 : Text[30];
      ColumnDimCode@1020 : Text[30];
      PeriodType@1021 : 'Day,Week,Month,Quarter,Year,Accounting Period';
      RoundingFactor@1022 : 'None,1,1000,1000000';
      ShowColumnName@1023 : Boolean;
      BudgetedAmount@1024 : Decimal;
      DateFilter@1025 : Text[30];
      InternalDateFilter@1026 : Text[30];
      BusUnitFilter@1027 : Code[250];
      GLAccFilter@1028 : Code[250];
      GlobalDim1Filter@1029 : Code[250];
      GlobalDim2Filter@1030 : Code[250];
      BudgetDim1Filter@1031 : Code[250];
      BudgetDim2Filter@1032 : Code[250];
      BudgetDim3Filter@1033 : Code[250];
      BudgetDim4Filter@1034 : Code[250];
      HistoricGLAccFilter@1100000 : Code[250];

    PROCEDURE MATRIX_GenerateColumnCaptions@1206(MATRIX_SetWanted@1000 : 'First,Previous,Same,Next,PreviousColumn,NextColumn');
    VAR
      MATRIX_PeriodRecords@1006 : ARRAY [32] OF Record 2000000007;
      BusUnit@1002 : Record 220;
      GLAccount@1008 : Record 15;
      MatrixMgt@1003 : Codeunit 9200;
      RecRef@1004 : RecordRef;
      FieldRef@1005 : FieldRef;
      CurrentMatrixRecordOrdinal@1001 : Integer;
      i@1007 : Integer;
      HistoricGLAccount@1100000 : Record 10721;
    BEGIN
      CLEAR(MATRIX_CaptionSet);
      CurrentMatrixRecordOrdinal := 1;
      CLEAR(MATRIX_MatrixRecords);
      FirstColumn := '';
      LastColumn := '';
      MATRIX_CurrentNoOfColumns := 12;

      IF ColumnDimCode = '' THEN
        EXIT;

      CASE ColumnDimCode OF
        Text001:  // Period
          BEGIN
            MatrixMgt.GeneratePeriodMatrixData(
              MATRIX_SetWanted,MATRIX_CurrentNoOfColumns,ShowColumnName,
              PeriodType,DateFilter,MATRIX_PrimKeyFirstCaptionInCu,
              MATRIX_CaptionSet,MATRIX_CaptionRange,MATRIX_CurrentNoOfColumns,MATRIX_PeriodRecords);
            FOR i := 1 TO MATRIX_CurrentNoOfColumns DO BEGIN
              MATRIX_MatrixRecords[i]."Period Start" := MATRIX_PeriodRecords[i]."Period Start";
              MATRIX_MatrixRecords[i]."Period End" := MATRIX_PeriodRecords[i]."Period End";
            END;
            FirstColumn := FORMAT(MATRIX_PeriodRecords[1]."Period Start");
            LastColumn := FORMAT(MATRIX_PeriodRecords[MATRIX_CurrentNoOfColumns]."Period End");
            CurrForm.PeriodType.ENABLED := TRUE;
          END;

        GLAccount.TABLECAPTION:
          BEGIN
            CLEAR(MATRIX_CaptionSet);
            RecRef.GETTABLE(GLAccount);
            RecRef.SETTABLE(GLAccount);
            IF GLAccFilter <> '' THEN BEGIN
              FieldRef := RecRef.FIELDINDEX(1);
              FieldRef.SETFILTER(GLAccFilter);
            END;
            MatrixMgt.GenerateMatrixData(
              RecRef,MATRIX_SetWanted,12,1,
              MATRIX_PrimKeyFirstCaptionInCu,MATRIX_CaptionSet,MATRIX_CaptionRange,MATRIX_CurrentNoOfColumns);
            FOR i := 1 TO MATRIX_CurrentNoOfColumns DO
              MATRIX_MatrixRecords[i].Code := COPYSTR(MATRIX_CaptionSet[i],1,MAXSTRLEN(MATRIX_MatrixRecords[i].Code));
            IF ShowColumnName THEN
              MatrixMgt.GenerateMatrixData(
                RecRef,MATRIX_SetWanted::Same,12,GLAccount.FIELDNO(Name),
                MATRIX_PrimKeyFirstCaptionInCu,MATRIX_CaptionSet,MATRIX_CaptionRange,MATRIX_CurrentNoOfColumns);
          END;

        BusUnit.TABLECAPTION:
          BEGIN
            CLEAR(MATRIX_CaptionSet);
            RecRef.GETTABLE(BusUnit);
            RecRef.SETTABLE(BusUnit);
            IF BusUnitFilter <> '' THEN BEGIN
              FieldRef := RecRef.FIELDINDEX(1);
              FieldRef.SETFILTER(BusUnitFilter);
            END;
            MatrixMgt.GenerateMatrixData(
              RecRef,MATRIX_SetWanted,12,1,
              MATRIX_PrimKeyFirstCaptionInCu,MATRIX_CaptionSet,MATRIX_CaptionRange,MATRIX_CurrentNoOfColumns);
            FOR i := 1 TO MATRIX_CurrentNoOfColumns DO
              MATRIX_MatrixRecords[i].Code := MATRIX_CaptionSet[i];
            IF ShowColumnName THEN
              MatrixMgt.GenerateMatrixData(
                RecRef,MATRIX_SetWanted::Same,12,BusUnit.FIELDNO(Name),
                MATRIX_PrimKeyFirstCaptionInCu,MATRIX_CaptionSet,MATRIX_CaptionRange,MATRIX_CurrentNoOfColumns);
          END;

        GLSetup."Global Dimension 1 Code":
          BEGIN
            MatrixMgt.SetDimColumnSet(
              GLSetup."Global Dimension 1 Code",
              GlobalDim1Filter,MATRIX_SetWanted,MATRIX_PrimKeyFirstCaptionInCu,FirstColumn,LastColumn,MATRIX_CurrentNoOfColumns);
            MatrixMgt.DimToCaptions(
              MATRIX_CaptionSet,MATRIX_MatrixRecords,ColumnDimCode,
              FirstColumn,LastColumn,MATRIX_CurrentNoOfColumns,ShowColumnName,MATRIX_CaptionRange);
          END;
        GLSetup."Global Dimension 2 Code":
          BEGIN
            MatrixMgt.SetDimColumnSet(
              GLSetup."Global Dimension 2 Code",
              GlobalDim2Filter,MATRIX_SetWanted,MATRIX_PrimKeyFirstCaptionInCu,FirstColumn,LastColumn,MATRIX_CurrentNoOfColumns);
            MatrixMgt.DimToCaptions(
              MATRIX_CaptionSet,MATRIX_MatrixRecords,ColumnDimCode,
              FirstColumn,LastColumn,MATRIX_CurrentNoOfColumns,ShowColumnName,MATRIX_CaptionRange);
          END;
        GLBudgetName."Budget Dimension 1 Code":
          BEGIN
            MatrixMgt.SetDimColumnSet(
              GLBudgetName."Budget Dimension 1 Code",
              BudgetDim1Filter,MATRIX_SetWanted,MATRIX_PrimKeyFirstCaptionInCu,FirstColumn,LastColumn,MATRIX_CurrentNoOfColumns);
            MatrixMgt.DimToCaptions(
              MATRIX_CaptionSet,MATRIX_MatrixRecords,ColumnDimCode,
              FirstColumn,LastColumn,MATRIX_CurrentNoOfColumns,ShowColumnName,MATRIX_CaptionRange);
          END;
        GLBudgetName."Budget Dimension 2 Code":
          BEGIN
            MatrixMgt.SetDimColumnSet(
              GLBudgetName."Budget Dimension 2 Code",
              BudgetDim2Filter,MATRIX_SetWanted,MATRIX_PrimKeyFirstCaptionInCu,FirstColumn,LastColumn,MATRIX_CurrentNoOfColumns);
            MatrixMgt.DimToCaptions(
              MATRIX_CaptionSet,MATRIX_MatrixRecords,ColumnDimCode,
              FirstColumn,LastColumn,MATRIX_CurrentNoOfColumns,ShowColumnName,MATRIX_CaptionRange);
          END;
        GLBudgetName."Budget Dimension 3 Code":
          BEGIN
            MatrixMgt.SetDimColumnSet(
              GLBudgetName."Budget Dimension 3 Code",
              BudgetDim3Filter,MATRIX_SetWanted,MATRIX_PrimKeyFirstCaptionInCu,FirstColumn,LastColumn,MATRIX_CurrentNoOfColumns);
            MatrixMgt.DimToCaptions(
              MATRIX_CaptionSet,MATRIX_MatrixRecords,ColumnDimCode,
              FirstColumn,LastColumn,MATRIX_CurrentNoOfColumns,ShowColumnName,MATRIX_CaptionRange);
          END;
        GLBudgetName."Budget Dimension 4 Code":
          BEGIN
            MatrixMgt.SetDimColumnSet(
              GLBudgetName."Budget Dimension 4 Code",
              BudgetDim4Filter,MATRIX_SetWanted,MATRIX_PrimKeyFirstCaptionInCu,FirstColumn,LastColumn,MATRIX_CurrentNoOfColumns);
            MatrixMgt.DimToCaptions(
              MATRIX_CaptionSet,MATRIX_MatrixRecords,ColumnDimCode,
              FirstColumn,LastColumn,MATRIX_CurrentNoOfColumns,ShowColumnName,MATRIX_CaptionRange);
          END;

        HistoricGLAccount.TABLECAPTION :
          BEGIN
            CLEAR(MATRIX_CaptionSet);
            RecRef.GETTABLE(HistoricGLAccount);
            RecRef.SETTABLE(HistoricGLAccount);

            MatrixMgt.GenerateMatrixData(RecRef,MATRIX_SetWanted,ARRAYLEN(MATRIX_CaptionSet),1,
               MATRIX_PrimKeyFirstCaptionInCu,MATRIX_CaptionSet,MATRIX_CaptionRange,MATRIX_CurrentNoOfColumns);
            FOR i := 1 TO MATRIX_CurrentNoOfColumns DO
              MATRIX_MatrixRecords[i].Code := MATRIX_CaptionSet[i];
            IF ShowColumnName THEN
            MatrixMgt.GenerateMatrixData(RecRef,MATRIX_SetWanted::Same,ARRAYLEN(MATRIX_CaptionSet),HistoricGLAccount.FIELDNO(Name),
               MATRIX_PrimKeyFirstCaptionInCu,MATRIX_CaptionSet,MATRIX_CaptionRange,MATRIX_CurrentNoOfColumns);
          END;
      END;
    END;

    LOCAL PROCEDURE DimCodeToOption@21(DimCode@1000 : Text[30]) : Integer;
    VAR
      BusUnit@1001 : Record 220;
      GLAcc@1002 : Record 15;
      HistoricGLAcc@1100000 : Record 10721;
    BEGIN
      CASE DimCode OF
        '':
          EXIT(-1);
        GLAcc.TABLECAPTION:
          EXIT(0);
        Text001 :
          EXIT(1);
        BusUnit.TABLECAPTION:
          EXIT(2);
        GLSetup."Global Dimension 1 Code":
          EXIT(3);
        GLSetup."Global Dimension 2 Code":
          EXIT(4);
        GLBudgetName."Budget Dimension 1 Code":
          EXIT(5);
        GLBudgetName."Budget Dimension 2 Code":
          EXIT(6);
        GLBudgetName."Budget Dimension 3 Code":
          EXIT(7);
        GLBudgetName."Budget Dimension 4 Code":
          EXIT(8);
        HistoricGLAcc.TABLECAPTION :
          EXIT(13);
        ELSE
          EXIT(-1);
      END;
    END;

    LOCAL PROCEDURE FindPeriod@2(SearchText@1000 : Code[10]);
    VAR
      GLAcc@1001 : Record 15;
      Calendar@1002 : Record 2000000007;
      PeriodFormMgt@1003 : Codeunit 359;
    BEGIN
      IF DateFilter <> '' THEN BEGIN
        Calendar.SETFILTER("Period Start",DateFilter);
        IF NOT PeriodFormMgt.FindDate('+',Calendar,PeriodType) THEN
          PeriodFormMgt.FindDate('+',Calendar,PeriodType::Day);
        Calendar.SETRANGE("Period Start");
      END;
      PeriodFormMgt.FindDate(SearchText,Calendar,PeriodType);
      GLAcc.SETRANGE("Date Filter",Calendar."Period Start",Calendar."Period End");
      IF GLAcc.GETRANGEMIN("Date Filter") = GLAcc.GETRANGEMAX("Date Filter") THEN
        GLAcc.SETRANGE("Date Filter",GLAcc.GETRANGEMIN("Date Filter"));
      InternalDateFilter := GLAcc.GETFILTER("Date Filter");
      IF (LineDimOption <> LineDimOption::Period) AND (ColumnDimOption <> ColumnDimOption::Period) THEN
        DateFilter := InternalDateFilter;
    END;

    LOCAL PROCEDURE GetDimSelection@3(OldDimSelCode@1000 : Text[30]) : Text[30];
    VAR
      GLAcc@1001 : Record 15;
      BusUnit@1003 : Record 220;
      DimSelection@1002 : Form 568;
      HistoricGLAcc@1100000 : Record 10721;
    BEGIN
      DimSelection.InsertDimSelBuf(FALSE,GLAcc.TABLECAPTION,GLAcc.TABLECAPTION);
      DimSelection.InsertDimSelBuf(FALSE,BusUnit.TABLECAPTION,BusUnit.TABLECAPTION);
      DimSelection.InsertDimSelBuf(FALSE,HistoricGLAcc.TABLECAPTION,HistoricGLAcc.TABLECAPTION);
      DimSelection.InsertDimSelBuf(FALSE,Text001,Text001);
      IF GLSetup."Global Dimension 1 Code" <> '' THEN
        DimSelection.InsertDimSelBuf(FALSE,GLSetup."Global Dimension 1 Code",'');
      IF GLSetup."Global Dimension 2 Code" <> '' THEN
        DimSelection.InsertDimSelBuf(FALSE,GLSetup."Global Dimension 2 Code",'');
      IF GLBudgetName."Budget Dimension 1 Code" <> '' THEN
        DimSelection.InsertDimSelBuf(FALSE,GLBudgetName."Budget Dimension 1 Code",'');
      IF GLBudgetName."Budget Dimension 2 Code" <> '' THEN
        DimSelection.InsertDimSelBuf(FALSE,GLBudgetName."Budget Dimension 2 Code",'');
      IF GLBudgetName."Budget Dimension 3 Code" <> '' THEN
        DimSelection.InsertDimSelBuf(FALSE,GLBudgetName."Budget Dimension 3 Code",'');
      IF GLBudgetName."Budget Dimension 4 Code" <> '' THEN
        DimSelection.InsertDimSelBuf(FALSE,GLBudgetName."Budget Dimension 4 Code",'');

      DimSelection.LOOKUPMODE := TRUE;
      IF DimSelection.RUNMODAL = ACTION::LookupOK THEN
        EXIT(DimSelection.GetDimSelCode)
      ELSE
        EXIT(OldDimSelCode);
    END;

    LOCAL PROCEDURE LookUpCode@4(DimOption@1000 : 'G/L Account,Period,Business Unit,Global Dimension 1,Global Dimension 2,Budget Dimension 1,Budget Dimension 2,Budget Dimension 3,Budget Dimension 4,,,,,Historic G/L Account';DimCode@1001 : Text[30];Code@1002 : Text[30]);
    VAR
      GLAcc@1003 : Record 15;
      BusUnit@1004 : Record 220;
      DimVal@1005 : Record 349;
      DimValList@1006 : Form 560;
      HistoricGLAcc@1100000 : Record 10721;
    BEGIN
      CASE DimOption OF
        DimOption::"G/L Account":
          BEGIN
            GLAcc.GET(Code);
            FORM.RUNMODAL(FORM::"G/L Account List",GLAcc);
          END;
        DimOption::"Business Unit":
          BEGIN
            BusUnit.GET(Code);
            FORM.RUNMODAL(FORM::"Business Unit List",BusUnit);
          END;
        DimOption::"Global Dimension 1",DimOption::"Global Dimension 2",
        DimOption::"Budget Dimension 1",DimOption::"Budget Dimension 2",
        DimOption::"Budget Dimension 3",DimOption::"Budget Dimension 4":
          BEGIN
            DimVal.SETRANGE("Dimension Code",DimCode);
            DimVal.GET(DimCode,Code);
            DimValList.SETTABLEVIEW(DimVal);
            DimValList.SETRECORD(DimVal);
            DimValList.RUNMODAL;
          END;
        DimOption::"Historic G/L Account" :
          BEGIN
            HistoricGLAcc.GET(Code);
            FORM.RUNMODAL(FORM::"Historic G/L Account List",HistoricGLAcc);
          END;
      END;
    END;

    LOCAL PROCEDURE LookUpDimFilter@57(Dim@1000 : Code[20];VAR Text@1001 : Text[250]) : Boolean;
    VAR
      DimVal@1002 : Record 349;
      DimValList@1003 : Form 560;
    BEGIN
      IF Dim = '' THEN
        EXIT(FALSE);
      DimValList.LOOKUPMODE(TRUE);
      DimVal.SETRANGE("Dimension Code",Dim);
      DimValList.SETTABLEVIEW(DimVal);
      IF DimValList.RUNMODAL = ACTION::LookupOK THEN BEGIN
        DimValList.GETRECORD(DimVal);
        Text := DimValList.GetSelectionFilter;
      END;
      EXIT(TRUE);
    END;

    LOCAL PROCEDURE DeleteBudget@10();
    VAR
      GLBudgetEntry@1000 : Record 96;
      UpdateAnalysisView@1001 : Codeunit 410;
    BEGIN
      IF CONFIRM(Text003) THEN
        WITH GLBudgetEntry DO BEGIN
          SETRANGE("Budget Name",BudgetName);
          IF BusUnitFilter <> '' THEN
            SETFILTER("Business Unit Code",BusUnitFilter);
          IF GLAccFilter <> '' THEN
            SETFILTER("G/L Account No.",GLAccFilter);
          IF DateFilter <> '' THEN
            SETFILTER(Date,DateFilter);
          IF GlobalDim1Filter <> '' THEN
            SETFILTER("Global Dimension 1 Code",GlobalDim1Filter);
          IF GlobalDim2Filter <> '' THEN
            SETFILTER("Global Dimension 2 Code",GlobalDim2Filter);
          IF BudgetDim1Filter <> '' THEN
            SETFILTER("Budget Dimension 1 Code",BudgetDim1Filter);
          IF BudgetDim2Filter <> '' THEN
            SETFILTER("Budget Dimension 2 Code",BudgetDim2Filter);
          IF BudgetDim3Filter <> '' THEN
            SETFILTER("Budget Dimension 3 Code",BudgetDim3Filter);
          IF BudgetDim4Filter <> '' THEN
            SETFILTER("Budget Dimension 4 Code",BudgetDim4Filter);
          IF HistoricGLAccFilter <> '' THEN
            SETFILTER("G/L Account No.",HistoricGLAccFilter);
          SETCURRENTKEY("Entry No.");
          IF FIND('-') THEN
            UpdateAnalysisView.SetLastBudgetEntryNo(GLBudgetEntry."Entry No." - 1);
          SETCURRENTKEY("Budget Name");
          DELETEALL(TRUE);
        END;
    END;

    LOCAL PROCEDURE ValidateBudgetName@11();
    BEGIN
      GLBudgetName.Name := BudgetName;
      IF NOT GLBudgetName.FIND('=<>') THEN BEGIN
        GLBudgetName.INIT;
        GLBudgetName.Name := Text004;
        GLBudgetName.Description := Text005;
        GLBudgetName.INSERT;
      END;
      BudgetName := GLBudgetName.Name;
      GLAccBudgetBuf.SETRANGE("Budget Filter",BudgetName);
      IF PrevGLBudgetName.Name <> '' THEN BEGIN
        IF (GLBudgetName."Budget Dimension 1 Code" <> PrevGLBudgetName."Budget Dimension 1 Code") THEN
          BudgetDim1Filter := '';
        IF (GLBudgetName."Budget Dimension 2 Code" <> PrevGLBudgetName."Budget Dimension 2 Code") THEN
          BudgetDim2Filter := '';
        IF (GLBudgetName."Budget Dimension 3 Code" <> PrevGLBudgetName."Budget Dimension 3 Code") THEN
          BudgetDim3Filter := '';
        IF (GLBudgetName."Budget Dimension 4 Code" <> PrevGLBudgetName."Budget Dimension 4 Code") THEN
          BudgetDim4Filter := '';
      END;
      GLAccBudgetBuf.SETFILTER("Budget Dimension 1 Filter",BudgetDim1Filter);
      GLAccBudgetBuf.SETFILTER("Budget Dimension 2 Filter",BudgetDim2Filter);
      GLAccBudgetBuf.SETFILTER("Budget Dimension 3 Filter",BudgetDim3Filter);
      GLAccBudgetBuf.SETFILTER("Budget Dimension 4 Filter",BudgetDim4Filter);
      CurrForm.BudgetDim1Filter.ENABLED := (GLBudgetName."Budget Dimension 1 Code" <> '');
      CurrForm.BudgetDim2Filter.ENABLED := (GLBudgetName."Budget Dimension 2 Code" <> '');
      CurrForm.BudgetDim3Filter.ENABLED := (GLBudgetName."Budget Dimension 3 Code" <> '');
      CurrForm.BudgetDim4Filter.ENABLED := (GLBudgetName."Budget Dimension 4 Code" <> '');

      PrevGLBudgetName := GLBudgetName;
    END;

    LOCAL PROCEDURE ValidateLineDimCode@19();
    VAR
      BusUnit@1000 : Record 220;
      GLAcc@1001 : Record 15;
      HistoricGLAcc@1100000 : Record 10721;
    BEGIN
      IF (UPPERCASE(LineDimCode) <> UPPERCASE(GLAcc.TABLECAPTION)) AND
         (UPPERCASE(LineDimCode) <> UPPERCASE(BusUnit.TABLECAPTION)) AND
         (UPPERCASE(LineDimCode) <> UPPERCASE(Text001)) AND
         (UPPERCASE(LineDimCode) <> GLBudgetName."Budget Dimension 1 Code") AND
         (UPPERCASE(LineDimCode) <> GLBudgetName."Budget Dimension 2 Code") AND
         (UPPERCASE(LineDimCode) <> GLBudgetName."Budget Dimension 3 Code") AND
         (UPPERCASE(LineDimCode) <> GLBudgetName."Budget Dimension 4 Code") AND
         (UPPERCASE(LineDimCode) <> GLSetup."Global Dimension 1 Code") AND
         (UPPERCASE(LineDimCode) <> GLSetup."Global Dimension 2 Code") AND
         (UPPERCASE(LineDimCode) <> UPPERCASE(HistoricGLAcc.TABLECAPTION)) AND
         (LineDimCode <> '')
      THEN BEGIN
        MESSAGE(Text006,LineDimCode);
        LineDimCode := '';
      END;
      LineDimOption := DimCodeToOption(LineDimCode);
      DateFilter := InternalDateFilter;
      IF (LineDimOption <> LineDimOption::Period) AND (ColumnDimOption <> ColumnDimOption::Period) THEN BEGIN
        DateFilter := InternalDateFilter;
        IF STRPOS(DateFilter,'&') > 1 THEN
          DateFilter := COPYSTR(DateFilter,1,STRPOS(DateFilter,'&') - 1);
      END ELSE
        DateFilter := '';
    END;

    LOCAL PROCEDURE ValidateColumnDimCode@20();
    VAR
      BusUnit@1000 : Record 220;
      GLAcc@1001 : Record 15;
      HistoricGLAcc@1100000 : Record 10721;
    BEGIN
      IF (UPPERCASE(ColumnDimCode) <> UPPERCASE(GLAcc.TABLECAPTION)) AND
         (UPPERCASE(ColumnDimCode) <> UPPERCASE(BusUnit.TABLECAPTION)) AND
         (UPPERCASE(ColumnDimCode) <> UPPERCASE(Text001)) AND
         (UPPERCASE(ColumnDimCode) <> GLBudgetName."Budget Dimension 1 Code") AND
         (UPPERCASE(ColumnDimCode) <> GLBudgetName."Budget Dimension 2 Code") AND
         (UPPERCASE(ColumnDimCode) <> GLBudgetName."Budget Dimension 3 Code") AND
         (UPPERCASE(ColumnDimCode) <> GLBudgetName."Budget Dimension 4 Code") AND
         (UPPERCASE(ColumnDimCode) <> GLSetup."Global Dimension 1 Code") AND
         (UPPERCASE(ColumnDimCode) <> GLSetup."Global Dimension 2 Code") AND
         (UPPERCASE(ColumnDimCode) <> UPPERCASE(HistoricGLAcc.TABLECAPTION)) AND
         (ColumnDimCode <> '')
      THEN BEGIN
        MESSAGE(Text007,ColumnDimCode);
        ColumnDimCode := '';
      END;
      ColumnDimOption := DimCodeToOption(ColumnDimCode);
      DateFilter := InternalDateFilter;
      IF (LineDimOption <> LineDimOption::Period) AND (ColumnDimOption <> ColumnDimOption::Period) THEN BEGIN
        DateFilter := InternalDateFilter;
        IF STRPOS(DateFilter,'&') > 1 THEN
          DateFilter := COPYSTR(DateFilter,1,STRPOS(DateFilter,'&') - 1);
      END ELSE
        DateFilter := '';
    END;

    LOCAL PROCEDURE GetCaptionClass@13(BudgetDimType@1000 : Integer) : Text[250];
    BEGIN
      IF GLBudgetName.Name <> BudgetName THEN
        GLBudgetName.GET(BudgetName);
      CASE BudgetDimType OF
        1:
          BEGIN
            IF GLBudgetName."Budget Dimension 1 Code" <> '' THEN
              EXIT('1,6,' + GLBudgetName."Budget Dimension 1 Code")
            ELSE
              EXIT(Text008);
          END;
        2:
          BEGIN
            IF GLBudgetName."Budget Dimension 2 Code" <> '' THEN
              EXIT('1,6,' + GLBudgetName."Budget Dimension 2 Code")
            ELSE
              EXIT(Text009);
          END;
        3:
          BEGIN
            IF GLBudgetName."Budget Dimension 3 Code" <> '' THEN
              EXIT('1,6,' + GLBudgetName."Budget Dimension 3 Code")
            ELSE
              EXIT(Text010);
          END;
        4:
          BEGIN
            IF GLBudgetName."Budget Dimension 4 Code" <> '' THEN
              EXIT('1,6,' + GLBudgetName."Budget Dimension 4 Code")
            ELSE
              EXIT(Text011);
          END;
      END;
    END;

    PROCEDURE SetBudgetName@14(NextBudgetName@1000 : Code[10]);
    BEGIN
      NewBudgetName := NextBudgetName;
    END;

    PROCEDURE UpdateMatrixSubform@1102601003();
    BEGIN
      CurrForm.MatrixForm.FORM.Load(
        MATRIX_CaptionSet,MATRIX_MatrixRecords,MATRIX_CurrentNoOfColumns,LineDimCode,
        LineDimOption,ColumnDimOption,GlobalDim1Filter,GlobalDim2Filter,BudgetDim1Filter,
        BudgetDim2Filter,BudgetDim3Filter,BudgetDim4Filter,GLBudgetName,DateFilter,
        GLAccFilter,HistoricGLAccFilter,RoundingFactor,PeriodType);
    END;

    LOCAL PROCEDURE CopyHistoricGLAccToBuf@1100000(VAR TheHistGLAcc@1100000 : Record 10721;VAR TheDimCodeBuf@1100001 : Record 367);
    BEGIN
      WITH TheDimCodeBuf DO BEGIN
        INIT;
        Code := TheHistGLAcc."No.";
        Name := TheHistGLAcc.Name;
        Totaling := TheHistGLAcc.Totaling;
        Indentation := TheHistGLAcc.Indentation;
        "Show in Bold" := TheHistGLAcc."Account Type" <> TheHistGLAcc."Account Type"::Posting;
      END;
    END;

    LOCAL PROCEDURE FindHistoricPeriod@1100001(SearchText@1100000 : Code[10]);
    VAR
      HistoricGLAcc@1100001 : Record 10721;
      Calendar@1100002 : Record 2000000007;
      PeriodFormMgt@1100003 : Codeunit 359;
    BEGIN
      IF DateFilter <> '' THEN BEGIN
        Calendar.SETFILTER("Period Start",DateFilter);
        IF NOT PeriodFormMgt.FindDate('+',Calendar,PeriodType) THEN
          PeriodFormMgt.FindDate('+',Calendar,PeriodType::Day);
        Calendar.SETRANGE("Period Start");
      END;
      PeriodFormMgt.FindDate(SearchText,Calendar,PeriodType);
      HistoricGLAcc.SETRANGE("Date Filter",Calendar."Period Start",Calendar."Period End");
      IF HistoricGLAcc.GETRANGEMIN("Date Filter") = HistoricGLAcc.GETRANGEMAX("Date Filter") THEN
        HistoricGLAcc.SETRANGE("Date Filter",HistoricGLAcc.GETRANGEMIN("Date Filter"));
      InternalDateFilter := HistoricGLAcc.GETFILTER("Date Filter");
      IF (LineDimOption <> LineDimOption::Period) AND (ColumnDimOption <> ColumnDimOption::Period) THEN
        DateFilter := InternalDateFilter;
    END;

    BEGIN
    END.
  }
}
