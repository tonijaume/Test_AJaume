OBJECT Form 600 IC Dimensions
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVW16.00;
  }
  PROPERTIES
  {
    Width=11110;
    Height=6710;
    CaptionML=[ENU=IC Dimensions;
               ESP=Dimensiones IC];
    TableBoxID=1;
    SourceTable=Table411;
  }
  CONTROLS
  {
    { 1   ;TableBox     ;220  ;220  ;10710;5500 ;HorzGlue=Both;
                                                 VertGlue=Both }
    { 2   ;TextBox      ;0    ;0    ;1700 ;0    ;ParentControl=1;
                                                 InColumn=Yes;
                                                 SourceExpr=Code }
    { 3   ;Label        ;0    ;0    ;0    ;0    ;ParentControl=2;
                                                 InColumnHeading=Yes }
    { 4   ;TextBox      ;0    ;0    ;4400 ;0    ;HorzGlue=Both;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 SourceExpr=Name }
    { 5   ;Label        ;0    ;0    ;0    ;0    ;ParentControl=4;
                                                 InColumnHeading=Yes }
    { 6   ;CheckBox     ;0    ;0    ;1700 ;0    ;ParentControl=1;
                                                 InColumn=Yes;
                                                 ShowCaption=No;
                                                 SourceExpr=Blocked }
    { 7   ;Label        ;0    ;0    ;0    ;0    ;ParentControl=6;
                                                 InColumnHeading=Yes }
    { 8   ;TextBox      ;0    ;0    ;1700 ;0    ;ParentControl=1;
                                                 InColumn=Yes;
                                                 SourceExpr="Map-to Dimension Code" }
    { 9   ;Label        ;0    ;0    ;0    ;0    ;ParentControl=8;
                                                 InColumnHeading=Yes }
    { 10  ;CommandButton;1430 ;5940 ;2200 ;550  ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 Default=Yes;
                                                 PushAction=LookupOK;
                                                 InvalidActionAppearance=Hide }
    { 12  ;CommandButton;8690 ;5940 ;2200 ;550  ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 PushAction=FormHelp }
    { 15  ;MenuButton   ;3850 ;5940 ;2200 ;550  ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 CaptionML=[ENU=IC &Dimension;
                                                            ESP=&Dimensi¢n IC];
                                                 Menu=MENUITEMS
                                                 {
                                                   { ID=16;
                                                     PushAction=RunObject;
                                                     CaptionML=[ENU=IC Dimension &Values;
                                                                ESP=&Valores de dimensi¢n IC];
                                                     RunObject=Form 601;
                                                     RunFormLink=Dimension Code=FIELD(Code) }
                                                 }
                                                  }
    { 11  ;MenuButton   ;6270 ;5940 ;2200 ;550  ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 CaptionML=[ENU=F&unctions;
                                                            ESP=Acci&ones];
                                                 Menu=MENUITEMS
                                                 {
                                                   { ID=17;
                                                     CaptionML=[ENU=Map to Dim. with Same Code;
                                                                ESP=Asignar a dim. con igual c¢digo];
                                                     OnPush=VAR
                                                              ICDimension@1001 : Record 411;
                                                              ICMapping@1000 : Codeunit 428;
                                                            BEGIN
                                                              CurrForm.SETSELECTIONFILTER(ICDimension);
                                                              IF (ICDimension.FIND('-')) AND (CONFIRM(Text000)) THEN
                                                                  REPEAT
                                                                    ICMapping.MapIncomingICDimensions(ICDimension);
                                                                  UNTIL ICDimension.NEXT = 0;
                                                            END;
                                                             }
                                                   { ID=13;
                                                     CaptionML=[ENU=Copy from Dimensions;
                                                                ESP=Copiar de Dimensiones];
                                                     OnPush=BEGIN
                                                              CopyFromDimensions;
                                                            END;
                                                             }
                                                   { ID=14;
                                                     MenuItemType=Separator }
                                                   { ID=18;
                                                     Ellipsis=Yes;
                                                     CaptionML=[ENU=Import;
                                                                ESP=Importar];
                                                     OnPush=BEGIN
                                                              ImportFromXML;
                                                            END;
                                                             }
                                                   { ID=19;
                                                     Ellipsis=Yes;
                                                     CaptionML=[ENU=E&xport;
                                                                ESP=E&xportar];
                                                     OnPush=BEGIN
                                                              ExportToXML;
                                                            END;
                                                             }
                                                 }
                                                  }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Are you sure you want to map the selected line(s)?;ESP=¨Confirma que desea eliminar las l¡neas seleccionadas?';
      Text001@1004 : TextConst 'ENU=Select file to import into %1;ESP=Selecc. archivo para imp. en %1';
      Text002@1003 : TextConst 'ENU=ICDim.xml;ESP=ICDim.xml';
      Text003@1002 : TextConst 'ENU=Select a filename to export %1 to.;ESP=Seleccione nom. archivo para exportar %1';
      Text004@1001 : TextConst 'ENU=Are you sure you want to copy from Dimensions?;ESP=¨Realmente desea copiar los datos de Dimensiones?';

    LOCAL PROCEDURE CopyFromDimensions@1();
    VAR
      Dim@1000 : Record 348;
      DimVal@1005 : Record 349;
      ICDim@1001 : Record 411;
      ICDimVal@1006 : Record 412;
      ICDimValEmpty@1002 : Boolean;
      ICDimValExists@1003 : Boolean;
      PrevIndentation@1004 : Integer;
    BEGIN
      IF NOT CONFIRM(Text004,FALSE) THEN
        EXIT;

      ICDimVal.LOCKTABLE;
      ICDim.LOCKTABLE;
      Dim.SETRANGE(Blocked,FALSE);
      IF Dim.FIND('-') THEN
        REPEAT
          IF NOT ICDim.GET(Dim.Code) THEN BEGIN
            ICDim.INIT;
            ICDim.Code := Dim.Code;
            ICDim.Name := Dim.Name;
            ICDim.INSERT;
          END;

          ICDimValExists := FALSE;
          DimVal.SETRANGE("Dimension Code",Dim.Code);
          ICDimVal.SETRANGE("Dimension Code",Dim.Code);
          ICDimValEmpty := NOT ICDimVal.FIND('-');
          IF DimVal.FIND('-') THEN
            REPEAT
              IF DimVal."Dimension Value Type" = DimVal."Dimension Value Type"::"End-Total" THEN
                PrevIndentation := PrevIndentation - 1;
              IF NOT ICDimValEmpty THEN
                ICDimValExists := ICDimVal.GET(DimVal."Dimension Code",DimVal.Code);
              IF NOT ICDimValExists AND NOT DimVal.Blocked THEN BEGIN
                ICDimVal.INIT;
                ICDimVal."Dimension Code" := DimVal."Dimension Code";
                ICDimVal.Code := DimVal.Code;
                ICDimVal.Name := DimVal.Name;
                ICDimVal."Dimension Value Type" := DimVal."Dimension Value Type";
                ICDimVal.Indentation := PrevIndentation;
                ICDimVal.INSERT;
              END;
              PrevIndentation := DimVal.Indentation;
              IF DimVal."Dimension Value Type" = DimVal."Dimension Value Type"::"Begin-Total" THEN
                PrevIndentation := PrevIndentation + 1;
            UNTIL DimVal.NEXT = 0;
        UNTIL Dim.NEXT = 0;
    END;

    LOCAL PROCEDURE ImportFromXML@2();
    VAR
      CompanyInfo@1006 : Record 79;
      ICDimIO@1005 : XMLport 11;
      FileName@1004 : Text[250];
      StartFileName@1003 : Text[250];
      IFile@1002 : File;
      IStr@1001 : InStream;
      CmDlg@1000 : Codeunit 412;
    BEGIN
      CompanyInfo.GET;

      StartFileName := CompanyInfo."IC Inbox Details";
      IF StartFileName <> '' THEN BEGIN
        IF StartFileName[STRLEN(StartFileName)] <> '\' THEN
          StartFileName := StartFileName + '\';
        StartFileName := StartFileName + '*.xml';
      END;
      FileName := CmDlg.OpenFile(STRSUBSTNO(Text001,TABLECAPTION),StartFileName,4,'*.xml|*.xml',0);
      IF FileName = '' THEN
        EXIT;
      IFile.OPEN(FileName);
      IFile.CREATEINSTREAM(IStr);
      ICDimIO.SETSOURCE(IStr);
      ICDimIO.IMPORT;
    END;

    LOCAL PROCEDURE ExportToXML@3();
    VAR
      ICDim@1007 : Record 411;
      CompanyInfo@1006 : Record 79;
      ICDimIO@1005 : XMLport 11;
      FileName@1004 : Text[250];
      DefaultFileName@1003 : Text[250];
      OFile@1002 : File;
      OStr@1001 : OutStream;
      CmDlg@1000 : Codeunit 412;
      RBAutoMgt@1102601000 : Codeunit 419;
    BEGIN
      CompanyInfo.GET;

      DefaultFileName := CompanyInfo."IC Inbox Details";
      IF DefaultFileName <> '' THEN
        IF DefaultFileName[STRLEN(DefaultFileName)] <> '\' THEN
          DefaultFileName := DefaultFileName + '\';
      DefaultFileName := DefaultFileName + Text002;

      IF NOT ISSERVICETIER THEN
        FileName := CmDlg.OpenFile(STRSUBSTNO(Text003,TABLECAPTION),DefaultFileName,4,'*.xml|*.xml',1)
      ELSE
        FileName := RBAutoMgt.EnvironFileName('','xml');

      IF FileName = '' THEN
        EXIT;

      OFile.CREATE(FileName);
      OFile.CREATEOUTSTREAM(OStr);
      ICDimIO.SETDESTINATION(OStr);
      ICDimIO.EXPORT;
      OFile.CLOSE;
      CLEAR(OStr);

      IF ISSERVICETIER THEN
        DOWNLOAD(FileName,'Export',TEMPORARYPATH,'',DefaultFileName);
    END;

    BEGIN
    END.
  }
}
