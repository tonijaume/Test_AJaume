OBJECT Form 566 Code Overview
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVW16.00;
  }
  PROPERTIES
  {
    Width=16500;
    Height=8580;
    Editable=No;
    CaptionML=[ENU=Code Overview;
               ESP=Panorama c¢digo];
    TableBoxID=1;
    LinksAllowed=No;
    SourceTable=Table2000000049;
    DataCaptionExpr=DataCaption;
    SourceTableView=WHERE(Object ID=FILTER(<>0));
    OnAfterGetRecord=BEGIN
                       MARK := "Line Type" = "Line Type"::Code;
                     END;

  }
  CONTROLS
  {
    { 1   ;TableBox     ;220  ;220  ;16060;7370 ;HorzGlue=Both;
                                                 VertGlue=Both }
    { 10  ;TextBox      ;0    ;0    ;4400 ;0    ;HorzGlue=Both;
                                                 ParentControl=1;
                                                 InColumn=Yes;
                                                 FontName=Courier;
                                                 CaptionML=[ENU=Code;
                                                            ESP=C¢digo];
                                                 SourceExpr=Line;
                                                 OnFormat=BEGIN
                                                            IF ("Line Type" = "Line Type"::"Trigger/Function") OR ("Line No." = 0) THEN
                                                              CurrForm.Line.UPDATEFONTBOLD := TRUE;
                                                            IF NOT InUse THEN
                                                              CurrForm.Line.UPDATEFORECOLOR := 255;
                                                          END;
                                                           }
    { 11  ;Label        ;0    ;0    ;0    ;0    ;ParentControl=10;
                                                 InColumnHeading=Yes }
    { 14  ;CommandButton;9240 ;7810 ;2200 ;550  ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 Default=Yes;
                                                 PushAction=LookupOK;
                                                 InvalidActionAppearance=Hide }
    { 15  ;CommandButton;11660;7810 ;2200 ;550  ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 Cancel=Yes;
                                                 PushAction=LookupCancel;
                                                 InvalidActionAppearance=Hide }
    { 16  ;CommandButton;14080;7810 ;2200 ;550  ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 PushAction=FormHelp }
  }
  CODE
  {

    PROCEDURE DataCaption@1() : Text[250];
    VAR
      Object@1000 : Record 2000000001;
    BEGIN
      Object.Type := "Object Type";
      Object.ID := "Object ID";
      Object.SETRECFILTER;
      IF (Object.GETFILTER(Type) = GETFILTER("Object Type")) AND
         (Object.GETFILTER(ID) = GETFILTER("Object ID"))
      THEN BEGIN
        Object.RESET;
        IF Object.FIND THEN;
        EXIT(STRSUBSTNO('%1 %2 %3',Object.Type,Object.ID,Object.Name));
      END;
    END;

    PROCEDURE InUse@2() : Boolean;
    VAR
      CoverageLine@1000 : Record 2000000049;
      LineInUse@1001 : Boolean;
      Continue@1002 : Boolean;
    BEGIN
      IF "Line No." = 0 THEN BEGIN
        CoverageLine.SETRANGE("Object Type","Object Type");
        CoverageLine.SETRANGE("Object ID","Object ID");
        CoverageLine.SETFILTER("Line No.",'>0');
        CoverageLine.SETRANGE("Line Type","Line Type"::Code);
        CoverageLine.SETFILTER("No. of Hits",'<>0');
        EXIT(CoverageLine.FIND('-'));
      END;

      IF "Line Type" = "Line Type"::Code THEN
        EXIT("No. of Hits" <> 0);
      CoverageLine.SETRANGE("Object Type","Object Type");
      CoverageLine.SETRANGE("Object ID","Object ID");
      CoverageLine.SETFILTER("Line No.",'>0');
      IF "Line Type" = "Line Type"::Empty THEN BEGIN
        CoverageLine := Rec;
        Continue := TRUE;
        REPEAT
          IF CoverageLine.NEXT(-1) = 0 THEN
            Continue := FALSE
          ELSE
            CASE CoverageLine."Line Type" OF
              CoverageLine."Line Type"::"Trigger/Function":
                Continue := FALSE;
              CoverageLine."Line Type"::Code:
                BEGIN
                  IF CoverageLine."No. of Hits" = 0 THEN
                    EXIT;
                  LineInUse := TRUE;
                  Continue := FALSE;
                END;
            END;
          UNTIL NOT Continue;
      END;
      CoverageLine := Rec;
      Continue := TRUE;
      REPEAT
        IF CoverageLine.NEXT = 0 THEN
          Continue := FALSE
        ELSE
          CASE CoverageLine."Line Type" OF
            CoverageLine."Line Type"::"Trigger/Function":
              Continue := FALSE;
            CoverageLine."Line Type"::Code:
              EXIT(CoverageLine."No. of Hits" <> 0);
          END;
      UNTIL NOT Continue;
      EXIT(LineInUse);
    END;

    BEGIN
    END.
  }
}
