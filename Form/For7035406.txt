OBJECT Form 7035406 Agrupaciones
{
  OBJECT-PROPERTIES
  {
    Date=13/05/10;
    Time=12:00:00;
    Version List=TRANSFER;
  }
  PROPERTIES
  {
    Width=16500;
    Height=6710;
    CaptionML=ESP=Agrupaciones;
    TableBoxID=1103355000;
    LookupMode=No;
    SourceTable=Table7010360;
    SourceTablePlacement=Last;
    DelayedInsert=Yes;
    PopulateAllFields=Yes;
    OnInit=BEGIN
             CLEAR(wAgrupacion);
           END;

    OnFindRecord=VAR
                   lwEnc@1103355000 : Boolean;
                 BEGIN
                   rTemp.COPY(Rec);
                   lwEnc := rTemp.FIND(Which);
                   IF lwEnc THEN
                     Rec := rTemp;
                    EXIT(lwEnc);
                 END;

    OnNextRecord=VAR
                   lwSteps2@1103355000 : Integer;
                 BEGIN
                   rTemp.COPY(Rec);
                   lwSteps2 := rTemp.NEXT(Steps);
                   IF lwSteps2  <> 0 THEN
                     Rec := rTemp;
                   EXIT(lwSteps2);
                 END;

    OnAfterGetRecord=BEGIN
                       wParte := "N§ Parte";
                     END;

    OnNewRecord=BEGIN
                  wParte := '';
                END;

    OnInsertRecord=BEGIN

                     EXIT(TRUE);
                   END;

    OnDeleteRecord=BEGIN

                     Borra("N§ Parte");
                     EXIT(FALSE);
                   END;

  }
  CONTROLS
  {
    { 1103355000;TableBox;220 ;220  ;16060;5500 ;HorzGlue=Both;
                                                 VertGlue=Both;
                                                 HeadingHeight=880 }
    { 1103355020;TextBox;0    ;1430 ;3463 ;440  ;Name=NoParte1;
                                                 ParentControl=1103355000;
                                                 InColumn=Yes;
                                                 CaptionML=ESP=N§ Parte;
                                                 NotBlank=Yes;
                                                 NextControl=1103355020;
                                                 SourceExpr=wParte;
                                                 TableRelation=Parte."N§ Parte";
                                                 OnValidate=BEGIN
                                                              ValidaParte(wParte);
                                                            END;

                                                 OnLookup=VAR
                                                            lrParte@1103355001 : Record 7010360;
                                                            lfForm@1103355000 : Form 7010401;
                                                            lwRango@1103355004 : Integer;
                                                          BEGIN
                                                            CLEAR(lrParte);
                                                            IF wParte = '' THEN BEGIN
                                                              // Filtramos los partes posibles
                                                              CLEAR(lrParte);
                                                              lrParte.SETCURRENTKEY(Fecha,"Tipo Servicio","Codigo Servicio");
                                                              lrParte.SETRANGE(Confirmado, FALSE);
                                                              IF Cliente <> '' THEN
                                                               lrParte.SETRANGE(Cliente          , Cliente);
                                                              IF "Codigo Servicio" <> '' THEN
                                                                lrParte.SETRANGE("Codigo Servicio", "Codigo Servicio");
                                                              lrParte.SETRANGE(Fecha , TODAY-1, TODAY+1); // Filtramos por los tres dias actuales
                                                              // lrParte.SETRANGE(Agrupacion,'');
                                                              lfForm.SETTABLEVIEW(lrParte);
                                                              lfForm.LlamadaAsignacion(TRUE);
                                                              lfForm.LOOKUPMODE := TRUE;
                                                              IF lfForm.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                                                lfForm.GETRECORD(lrParte);
                                                                wParte := lrParte."N§ Parte";
                                                                ValidaParte(wParte);
                                                              END
                                                            END
                                                            ELSE BEGIN
                                                              lrParte.GET(wParte);
                                                              FORM.RUN(7010400, lrParte);
                                                            END;
                                                          END;

                                                 OnAfterValidate=BEGIN
                                                                   CurrForm.UPDATE;
                                                                 END;
                                                                  }
    { 1103355021;Label  ;0    ;0    ;0    ;0    ;ParentControl=1103355020;
                                                 InColumnHeading=Yes }
    { 1103355003;TextBox;0    ;0    ;1980 ;0    ;Editable=No;
                                                 ParentControl=1103355000;
                                                 InColumn=Yes;
                                                 SourceExpr=Garaje }
    { 1103355004;Label  ;0    ;0    ;0    ;0    ;ParentControl=1103355003;
                                                 InColumnHeading=Yes }
    { 1103355005;TextBox;0    ;0    ;1700 ;0    ;Editable=No;
                                                 ParentControl=1103355000;
                                                 InColumn=Yes;
                                                 SourceExpr=Fecha }
    { 1103355006;Label  ;0    ;0    ;0    ;0    ;ParentControl=1103355005;
                                                 InColumnHeading=Yes }
    { 1103355007;TextBox;0    ;0    ;1700 ;0    ;Editable=No;
                                                 ParentControl=1103355000;
                                                 InColumn=Yes;
                                                 SourceExpr=Cliente }
    { 1103355008;Label  ;0    ;0    ;0    ;0    ;ParentControl=1103355007;
                                                 InColumnHeading=Yes }
    { 1103355009;TextBox;0    ;0    ;1700 ;0    ;Editable=No;
                                                 ParentControl=1103355000;
                                                 InColumn=Yes;
                                                 SourceExpr="Codigo Servicio" }
    { 1103355010;Label  ;0    ;0    ;0    ;0    ;ParentControl=1103355009;
                                                 InColumnHeading=Yes }
    { 1103355011;TextBox;0    ;0    ;1700 ;0    ;Editable=No;
                                                 ParentControl=1103355000;
                                                 InColumn=Yes;
                                                 SourceExpr="Tipo Servicio" }
    { 1103355012;Label  ;0    ;0    ;0    ;0    ;ParentControl=1103355011;
                                                 InColumnHeading=Yes }
    { 1103355015;TextBox;0    ;0    ;4400 ;0    ;Editable=No;
                                                 ParentControl=1103355000;
                                                 InColumn=Yes;
                                                 SourceExpr=Touroperadores }
    { 1103355016;Label  ;0    ;0    ;0    ;0    ;ParentControl=1103355015;
                                                 InColumnHeading=Yes }
    { 1103355001;TextBox;11853;3080 ;1700 ;440  ;Editable=No;
                                                 ParentControl=1103355000;
                                                 InColumn=Yes;
                                                 SourceExpr=Agrupacion }
    { 1103355002;Label  ;0    ;0    ;0    ;0    ;ParentControl=1103355001;
                                                 InColumnHeading=Yes }
    { 1103355013;TextBox;0    ;0    ;4888 ;0    ;HorzGlue=Both;
                                                 Editable=No;
                                                 ParentControl=1103355000;
                                                 InColumn=Yes;
                                                 SourceExpr=Observaciones }
    { 1103355014;Label  ;0    ;0    ;0    ;0    ;ParentControl=1103355013;
                                                 InColumnHeading=Yes }
    { 1103355017;CommandButton;8690;5940;2750;550;
                                                 HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 InvalidActionAppearance=Hide;
                                                 CaptionML=ESP=Crear Agrupacion;
                                                 OnPush=BEGIN
                                                          IF CrearAgruapcion THEN
                                                            CurrForm.CLOSE;
                                                        END;
                                                         }
    { 1103355018;CommandButton;11660;5940;2200;550;
                                                 HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 Cancel=Yes;
                                                 PushAction=Close;
                                                 InvalidActionAppearance=Hide }
    { 1103355019;CommandButton;14080;5940;2200;550;
                                                 HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 PushAction=FormHelp }
  }
  CODE
  {
    VAR
      rTemp@1103355000 : TEMPORARY Record 7010360;
      rBorrados@1103355008 : TEMPORARY Record 7010360;
      wParte@1103355001 : Code[20];
      Text0001@1103355002 : TextConst 'ESP=El parte %1 est  confirmado';
      Text0002@1103355003 : TextConst 'ESP=¨Est  seguro que quiere cambiar el parte %1 por el  %2?';
      Text0003@1103355004 : TextConst 'ESP=El parte %1 pertenece a otra agrupaci¢n. ¨Quiere incluirlo en la actual?';
      Text0004@1103355005 : TextConst 'ESP=Operaci¢n Anulada';
      wAgrupacion@1103355006 : Code[10];
      Text0005@1103355007 : TextConst 'ESP=¨Desea realmente crear la agrupaci¢n?';
      Text0006@1103355009 : TextConst 'ESP=No se ha seleccionado ning£n parte.';
      Text0007@1103355010 : TextConst 'ESP=Se va a proceder a deshacer la agrupaci¢n actual.\¨Desea seguir?';
      Text0008@1103355011 : TextConst 'ESP=El parte %1 ya tiene una agrupaci¢n propia. Tiene de eliminar dicha agrupaci¢n antes de insertar este parte';

    PROCEDURE LimpiaTodo@1103355005();
    BEGIN
      // LimpiaTodo

      CLEAR(rTemp);
      rTemp.DELETEALL;
      CLEAR(rBorrados);
      rBorrados.DELETEALL;
    END;

    PROCEDURE InsertaParte@1103355010(pwParte@1103355000 : Code[20]);
    VAR
      lrParte@1103355001 : Record 7010360;
    BEGIN
      // InsertaParte

      IF pwParte ='' THEN
        EXIT;

      // AJF 07/07/09
      // Soporte para que se pueda insertar el parte con pistola.
      // quito la fecha de delante (8 primeros caracteres).

      IF STRLEN(pwParte) > MAXSTRLEN(lrParte."N§ Parte") THEN BEGIN
        pwParte := COPYSTR(pwParte, 9, STRLEN(pwParte));
      END;

      lrParte.GET(pwParte);

      IF lrParte.Confirmado THEN
        ERROR(Text0001, pwParte);

      IF (lrParte.Agrupacion <> '') AND (wAgrupacion <> lrParte.Agrupacion) THEN BEGIN
        IF lrParte.Agrupacion = lrParte."N§ Parte" THEN
          ERROR(Text0008, pwParte);
        IF NOT CONFIRM(Text0003, FALSE, pwParte)  THEN
          EXIT;
      END;

      Inserta(pwParte);
    END;

    PROCEDURE Inserta@1103355011(pwParte@1103355000 : Code[10]);
    VAR
      lrParte@1103355001 : Record 7010360;
    BEGIN
      // Inserta
      // Inserta el registro sin ning£n tipo de contro

      IF pwParte ='' THEN
        EXIT;

      CLEAR(lrParte);
      lrParte.GET(pwParte);
      rTemp := lrParte;
      rTemp.INSERT;

      // AJF 07/07/09
      // Al insertar un parte hay que mirar si est  en la lista de borrados y quitarlo.
      rBorrados.RESET;
      IF rBorrados.GET(pwParte) THEN
        rBorrados.DELETE;
    END;

    PROCEDURE Borra@1103355014(pwParte@1103355000 : Code[10]);
    BEGIN
      // Borra

      rBorrados := rTemp;
      rBorrados.INSERT;
      rTemp.GET(pwParte);
      rTemp.DELETE;
    END;

    PROCEDURE InsertaAgrupacion@1103355002(prParte@1103355000 : Record 7010360);
    VAR
      lrParte@1103355001 : Record 7010360;
    BEGIN
      // InsertaAgrupacion

      LimpiaTodo;

      wAgrupacion := prParte.Agrupacion;
      IF wAgrupacion <> '' THEN BEGIN
        CLEAR(lrParte);
        lrParte.SETCURRENTKEY(Agrupacion);
        lrParte.SETRANGE(Agrupacion, wAgrupacion);
        IF lrParte.FINDSET THEN BEGIN
          REPEAT
            Inserta(lrParte."N§ Parte");
          UNTIL lrParte.NEXT=0;
        END;
      END
      ELSE BEGIN
        Inserta(prParte."N§ Parte");
      END;

      // Filtramos por esos campos para poder filtrar en la selecci¢n de partes
      FILTERGROUP(2);
      SETRANGE("Codigo Servicio", prParte."Codigo Servicio");
      SETRANGE(Cliente          , prParte.Cliente);
      FILTERGROUP(0);
    END;

    PROCEDURE CrearAgruapcion@1103355013() : Boolean;
    VAR
      lrParte@1103355000 : Record 7010360;
    BEGIN
      // CrearAgruapcion

      CLEAR(rTemp);
      CLEAR(rBorrados);
      IF NOT rTemp.FINDFIRST THEN BEGIN
        IF rBorrados.FINDFIRST THEN BEGIN
          IF NOT CONFIRM(Text0007) THEN
            EXIT;
        END
        ELSE
          ERROR(Text0006);
      END;

      // Primero miramos los borrados
      // Si se ha eliminado algun registro de esta agrupaci¢n se desasigna
      IF wAgrupacion <> '' THEN BEGIN
        CLEAR(rBorrados);
        IF rBorrados.FINDSET THEN BEGIN
          REPEAT
            lrParte.GET(rBorrados."N§ Parte");
            IF lrParte.Agrupacion = wAgrupacion THEN BEGIN
              lrParte.Agrupacion := '';
              lrParte.MODIFY;
            END;
          UNTIL rBorrados.NEXT=0;
        END;
      END;

      CLEAR(rTemp);
      IF rTemp.FINDSET THEN BEGIN
        IF NOT CONFIRM(Text0005) THEN
          EXIT;
        wAgrupacion := rTemp."N§ Parte";
        REPEAT
          CLEAR(lrParte);
          lrParte.GET(rTemp."N§ Parte");
          lrParte.Agrupacion := wAgrupacion;
          lrParte.MODIFY;
        UNTIL rTemp.NEXT=0;
      END;

      EXIT(TRUE);
    END;

    PROCEDURE ValidaParte@1103355000(pwParte@1103355000 : Code[20]);
    BEGIN
      // ValidaParte

      IF (pwParte <> '') AND ("N§ Parte" <> '') THEN BEGIN
        IF NOT CONFIRM (Text0002, FALSE, "N§ Parte", pwParte) THEN BEGIN
          wParte := "N§ Parte";
          EXIT;
        END
        ELSE
          Borra("N§ Parte");
      END;

      InsertaParte(pwParte);
    END;

    BEGIN
    {

      ## AJF 07/07/09

        .- (09/00355) Quito el FIND de la funci¢n ValidaParte ya que daba error al intentar introducir un parte
           en la agrupaci¢n.
        .- (09/00357) A¤adido soporte para insertar l¡neas mediante c¢digos de barras.
    }
    END.
  }
}
