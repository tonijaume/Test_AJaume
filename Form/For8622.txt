OBJECT Form 8622 Company Setup
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=NAVW16.00.01;
  }
  PROPERTIES
  {
    Width=9350;
    Height=2200;
    CaptionML=[ENU=Company Setup;
               ESP=Configuraci¢n empresa];
    Sizeable=No;
    OnOpenForm=BEGIN
                 CompanyType.DELETEALL;
               END;

  }
  CONTROLS
  {
    { 1   ;Label        ;220  ;220  ;3300 ;440  ;Name=Company Type;
                                                 ParentControl=2 }
    { 2   ;TextBox      ;3630 ;220  ;2750 ;440  ;Name=Company Type;
                                                 Lookup=Yes;
                                                 CaptionML=[ENU=Company Type;
                                                            ESP=Tipo empresa];
                                                 SourceExpr=CompanyTypeTxt;
                                                 OnLookup=BEGIN
                                                            GenCompanySelection;
                                                          END;
                                                           }
    { 3   ;TextBox      ;3630 ;770  ;5500 ;440  ;Name=Name;
                                                 Editable=No;
                                                 CaptionML=[ENU=Name;
                                                            ESP=Nombre];
                                                 SourceExpr=COMPANYNAME }
    { 4   ;Label        ;220  ;770  ;3300 ;440  ;ParentControl=3 }
    { 1000000004;CommandButton;2090;1430;2200;550;
                                                 CaptionML=[ENU=Ok;
                                                            ESP=Aceptar];
                                                 OnPush=BEGIN
                                                          GetDataXML;
                                                          CurrForm.CLOSE;
                                                        END;
                                                         }
    { 1000000005;CommandButton;4510;1430;2200;550;
                                                 PushAction=Close;
                                                 CaptionML=[ENU=Cancel;
                                                            ESP=Cancelar];
                                                 OnPush=BEGIN
                                                          MESSAGE(STRSUBSTNO(Text001,COMPANYNAME));
                                                        END;
                                                         }
    { 1000000006;CommandButton;6930;1430;2200;550;
                                                 PushAction=FormHelp;
                                                 CaptionML=[ENU=Help;
                                                            ESP=Ayuda] }
  }
  CODE
  {
    VAR
      CompanyType@1012 : Record 8620;
      CompanyTypeSelected@1011 : Record 8620;
      CompanyTypeTxt@1000 : Text[1024];
      Text000@1001 : TextConst 'ENU=Configuration file %1 does not exist.;ESP=El archivo de configuraci¢n %1 no existe.';
      Text001@1002 : TextConst 'ENU=Company %1 has been created successfully.;ESP=La empresa %1 se ha creado correctamente.';
      Text002@1003 : TextConst 'ENU=Company %1 has been created with errors.\Do you want to see the errors in Migration overview?;ESP=La empresa %1 se ha creado con errores.\¨Desea ver los errores en info. gral. migraci¢n?';
      Window@1006 : Dialog;
      TotalNoOfTables@1005 : Integer;
      MigratedTables@1004 : Integer;
      Text003@1009 : TextConst 'ENU=Applying Data...\;ESP=Aplicando datos...\';
      Text004@1008 : TextConst 'ENU=Table #1######################\;ESP=Tabla #1######################\';
      Text005@1007 : TextConst 'ENU=@3################################;ESP=@3################################';
      Text006@1010 : TextConst 'ENU=Validating data... \;ESP=Validando datos... \';
      Text007@1013 : TextConst 'ENU=Cannot find %1 language.;ESP=No se encuentra el idioma %1.';

    PROCEDURE GenCompanySelection@5();
    VAR
      CompanyTypeSelection@1000 : Form 8623;
      ConfigXML@1004 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60";
      CmpyTypeNodes@1003 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF82-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNodeList";
      CmpyTypeNode@1002 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      CmpyTypeCount@1001 : Integer;
    BEGIN
      CREATE(ConfigXML);
      ConfigXML.load(ConfigFileName);

      CmpyTypeNodes := ConfigXML.selectNodes('//CompanyTypes/CompanyType');
      FOR CmpyTypeCount := 0 TO CmpyTypeNodes.length - 1 DO BEGIN
        CmpyTypeNode := CmpyTypeNodes.item(CmpyTypeCount);
        IF NOT CompanyType.GET(GetAttribute('name',CmpyTypeNode)) THEN BEGIN
          CompanyType.INIT;
          CompanyType.Name := GetAttribute('name',CmpyTypeNode);
          CompanyType.Description := GetAttribute('description',CmpyTypeNode) ;
          CompanyType.INSERT;
        END;
      END;

      COMMIT;

      CompanyTypeSelection.LOOKUPMODE := TRUE;
      CompanyTypeSelection.RUNMODAL;
      CompanyTypeSelected := CompanyType;
      CompanyTypeSelected.SETRANGE(Selected,TRUE);

      CreateSelectionString;
    END;

    PROCEDURE GetDataXML@2();
    VAR
      MigrationTable@1007 : Record 8613;
      MigrationRecord@1008 : Record 8614;
      MigrationDataError@1009 : Record 8617;
      MigrationMgt@1006 : Codeunit 8611;
      ConfigXML@1004 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60";
      DataLinkNodes@1003 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF82-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNodeList";
      DataLinkNode@1002 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      DataFileNode@1000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      DataLinkCount@1005 : Integer;
      FileName@1001 : Text[260];
    BEGIN
      CREATE(ConfigXML);
      ConfigXML.load(ConfigFileName);

      DataLinkNodes := ConfigXML.documentElement.lastChild.selectNodes('DataLink');
      FOR DataLinkCount := 0 TO DataLinkNodes.length - 1 DO BEGIN
        DataLinkNode := DataLinkNodes.item(DataLinkCount);
        CompanyTypeSelected.Name := GetAttribute('CompanyType',DataLinkNode);
        IF CompanyTypeSelected.FIND THEN BEGIN
          IF DataLinkNode.hasChildNodes THEN BEGIN
            DataFileNode := DataLinkNode.firstChild;
            IF GetAttribute('name',DataFileNode) <> '' THEN
              MigrationMgt.ImportSetupDataXML(APPLICATIONPATH + 'Company Settings\' + GetClientLanguage + '\' +
                GetAttribute('name',DataFileNode),TRUE,CompanyTypeSelected.Name);
          END;
        END;
      END;

      InitialiseProgressWindow(MigrationTable.COUNTAPPROX,Text003);

      IF MigrationTable.FIND('-') THEN
        REPEAT
          MigrationTable.CALCFIELDS("Table Name");
          UpdateProgressWindow(MigrationTable."Table Name");
          MigrationRecord.SETRANGE(TableID,MigrationTable.TableID);
          IF MigrationRecord.FIND('-') THEN
            REPEAT
              MigrationMgt.InsertMatrixRecord(MigrationRecord,TRUE);
              MigrationRecord.DELETE(TRUE);
            UNTIL MigrationRecord.NEXT = 0;
        UNTIL MigrationTable.NEXT = 0;

      InitialiseProgressWindow(MigrationTable.COUNTAPPROX,Text006);

      IF MigrationTable.FIND('-') THEN
        REPEAT
          MigrationTable.CALCFIELDS("Table Name");
          UpdateProgressWindow(MigrationTable."Table Name");
          MigrationMgt.RunSetupDataFieldRelation(MigrationTable);
        UNTIL MigrationTable.NEXT = 0;

      CloseProgressWindow;
      COMMIT;

      IF NOT MigrationDataError.FIND('-') THEN
        MESSAGE(STRSUBSTNO(Text001,COMPANYNAME))
      ELSE BEGIN
        IF CONFIRM(STRSUBSTNO(Text002,COMPANYNAME)) THEN
          FORM.RUNMODAL(FORM::"Migration Overview");
      END;
    END;

    PROCEDURE ConfigFileName@3() : Text[1024];
    VAR
      FileName@1000 : Text[1024];
    BEGIN
      FileName := APPLICATIONPATH + 'Company Settings\' + GetClientLanguage + '\' + 'Configuration.xml';

      IF NOT EXISTS(FileName) THEN
        ERROR(Text000, FileName);

      EXIT(FileName);
    END;

    PROCEDURE CreateSelectionString@1000000001();
    BEGIN
      CompanyTypeTxt := '';

      IF CompanyTypeSelected.FINDFIRST THEN BEGIN
        REPEAT
          CompanyTypeTxt := CompanyTypeTxt + CompanyTypeSelected.Name + ',';
        UNTIL CompanyTypeSelected.NEXT = 0;
      END;

      CompanyTypeTxt := DELCHR(CompanyTypeTxt,'>',',');
    END;

    LOCAL PROCEDURE GetAttribute@1(AttributeName@1001 : Text[1024];VAR XMLNode@1000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode") : Text[1000];
    VAR
      XMLAttributes@1002 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF83-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNamedNodeMap";
      XMLAttributeNode@1003 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
    BEGIN
      XMLAttributes := XMLNode.attributes;
      XMLAttributeNode := XMLAttributes.getNamedItem(AttributeName);
      IF ISCLEAR(XMLAttributeNode) THEN
        EXIT('');
      EXIT(FORMAT(XMLAttributeNode.text));
    END;

    LOCAL PROCEDURE InitialiseProgressWindow@21(Count@1000 : Integer;MigrationText@1001 : Text[1024]);
    BEGIN
      MigratedTables := 0;
      TotalNoOfTables := Count;

      Window.OPEN(MigrationText + Text004 + Text005);
    END;

    LOCAL PROCEDURE UpdateProgressWindow@19(TableCaption@1000 : Text[250]);
    BEGIN
      MigratedTables := MigratedTables + 1;

      Window.UPDATE(1,TableCaption);
      Window.UPDATE(3,ROUND(MigratedTables / TotalNoOfTables * 10000,1));
    END;

    PROCEDURE CloseProgressWindow@4();
    BEGIN
      Window.CLOSE;
    END;

    PROCEDURE GetClientLanguage@6() : Text[3];
    VAR
      WindowsLanguage@1000 : Record 2000000045;
    BEGIN
      IF NOT WindowsLanguage.GET(GLOBALLANGUAGE) THEN
        ERROR(Text007,GLOBALLANGUAGE);

      EXIT(WindowsLanguage."Abbreviated Name");
    END;

    BEGIN
    END.
  }
}
