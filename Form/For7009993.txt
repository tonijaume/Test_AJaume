OBJECT Form 7009993 Agrupar Reservas Transfer
{
  OBJECT-PROPERTIES
  {
    Date=15/07/15;
    Time=11:53:53;
    Modified=Yes;
    Version List=AIC2009;
  }
  PROPERTIES
  {
    Width=26950;
    Height=11660;
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    TableBoxID=1000000000;
    SourceTable=Table7009795;
    SaveTableView=No;
    UpdateOnActivate=Yes;
    SourceTableView=SORTING(Fecha/Hora Vuelo,Orden zona,Orden hotel,Hotel,Zona,Tipo Transfer,TourOperador)
                    ORDER(Ascending);
    OnOpenForm=BEGIN
                 rCondTemp.RESET;
                 rCondTemp.GET(USERID);
                 IF (rCondTemp."Hora Salida" = 0T) OR (rCondTemp."Hora Entrada" = 0T) THEN
                   ERROR(Text001);

                 // Agrupamos transfer privado
                 rAcuZon.RESET;
                 IF rAcuZon.GET(rCondTemp."Fecha desde", rCondTemp."Zona Servicio", rCondTemp.TourOperador, rCondTemp."Tipo Transfer") THEN
                   //codCua.AgruparTransferPrivado(rAcuZon, FALSE);
                   ;

                 RefrescarCuadrante;

                 TipoVis := TipoVis::Pendiente;

                 FILTERGROUP(0);
                 SETRANGE("Tipo Transfer", rCondTemp."Tipo Transfer");

                 SETRANGE("Filtro Agrupacion entrada", 0);
                 SETRANGE("Filtro Agrupacion salida", 0);
                 FILTERGROUP(2);

                 IF rCondTemp."Tipo Transfer" = rCondTemp."Tipo Transfer"::Entrada THEN
                 BEGIN
                   CurrForm."Personas entrada".VISIBLE := TRUE;
                   CurrForm."Personas salida".VISIBLE := FALSE;
                 END
                 ELSE
                 BEGIN
                   CurrForm."Personas entrada".VISIBLE := FALSE;
                   CurrForm."Personas salida".VISIBLE := TRUE;
                 END;

                 FiltraDateTime;

                 IF rCondTemp.TourOperador <> '' THEN
                   SETRANGE(TourOperador, rCondTemp.TourOperador);

                 IF rCondTemp."Zona Servicio" <> '' THEN
                   SETRANGE(Zona , rCondTemp."Zona Servicio");

                 // Filtramos los subformularios
                 CurrForm.SubServ1.FORM.SetFilters(rCondTemp."Fecha desde", rCondTemp."Zona Servicio", rCondTemp."Tipo Transfer");
                 IF rCondTemp."Tipo Transfer" = rCondTemp."Tipo Transfer"::Entrada THEN
                   CurrForm.SubServ2.FORM.SetFilters(rCondTemp."Fecha desde", rCondTemp."Zona Servicio", 1)
                 ELSE
                   CurrForm.SubServ2.FORM.SetFilters(rCondTemp."Fecha desde", rCondTemp."Zona Servicio", 0);

                 CurrForm.UPDATE(FALSE);
               END;

  }
  CONTROLS
  {
    { 1000000000;TableBox;220 ;2310 ;16280;5500 ;VertGlue=Both;
                                                 HeadingHeight=880 }
    { 1000000011;TextBox;0    ;4840 ;2473 ;440  ;Visible=No;
                                                 ParentControl=1000000000;
                                                 InColumn=Yes;
                                                 SourceExpr=Hotel;
                                                 OnFormat=BEGIN
                                                            IF TieneMarca(Rec) THEN
                                                              CurrForm.Hotel.UPDATEFONTBOLD(TRUE);
                                                          END;
                                                           }
    { 1000000012;Label  ;0    ;0    ;0    ;0    ;ParentControl=1000000011;
                                                 InColumnHeading=Yes }
    { 1000000002;TextBox;1693 ;4620 ;3970 ;440  ;Name=nomhot;
                                                 ParentControl=1000000000;
                                                 InColumn=Yes;
                                                 SourceExpr=nomHotel(Hotel);
                                                 OnFormat=BEGIN
                                                            IF TieneMarca(Rec) THEN
                                                              CurrForm.nomhot.UPDATEFONTBOLD(TRUE);
                                                          END;
                                                           }
    { 1000000019;Label  ;0    ;0    ;0    ;0    ;ParentControl=1000000002;
                                                 InColumnHeading=Yes;
                                                 CaptionML=[ENU=Hotel Name;
                                                            ESP=Nombre Hotel] }
    { 1000000003;TextBox;0    ;0    ;1700 ;0    ;Name=zon;
                                                 ParentControl=1000000000;
                                                 InColumn=Yes;
                                                 CaptionML=[ENU=Fisical Location;
                                                            ESP=Zona F¡sica];
                                                 SourceExpr=ZonaFisica(Hotel);
                                                 OnFormat=BEGIN
                                                            IF TieneMarca(Rec) THEN
                                                              CurrForm.zon.UPDATEFONTBOLD(TRUE);
                                                          END;
                                                           }
    { 1000000004;Label  ;0    ;0    ;0    ;0    ;ParentControl=1000000003;
                                                 InColumnHeading=Yes }
    { 1000000001;TextBox;7858 ;2640 ;1700 ;440  ;Editable=No;
                                                 ParentControl=1000000000;
                                                 InColumn=Yes;
                                                 SourceExpr=Vuelo;
                                                 OnFormat=BEGIN
                                                            IF TieneMarca(Rec) THEN
                                                              CurrForm.Vuelo.UPDATEFONTBOLD(TRUE);
                                                          END;
                                                           }
    { 1000000007;Label  ;0    ;0    ;0    ;0    ;ParentControl=1000000001;
                                                 InColumnHeading=Yes }
    { 1000000013;TextBox;0    ;0    ;1320 ;0    ;ParentControl=1000000000;
                                                 InColumn=Yes;
                                                 CaptionML=[ENU=Flight Time;
                                                            ESP=Hora Vuelo];
                                                 SourceExpr=Hora;
                                                 Format=<Hours24,2>:<Minutes,2>;
                                                 OnFormat=BEGIN
                                                            IF TieneMarca(Rec) THEN
                                                              CurrForm.Hora.UPDATEFONTBOLD(TRUE);
                                                          END;
                                                           }
    { 1000000014;Label  ;0    ;0    ;0    ;0    ;ParentControl=1000000013;
                                                 InColumnHeading=Yes }
    { 1000000047;TextBox;0    ;0    ;1320 ;0    ;Editable=No;
                                                 ParentControl=1000000000;
                                                 InColumn=Yes;
                                                 SourceExpr="Hora recogida";
                                                 Format=<Hours24,2>:<Minutes,2>;
                                                 OnFormat=BEGIN
                                                            IF TieneMarca(Rec) THEN
                                                              CurrForm."Hora recogida".UPDATEFONTBOLD(TRUE);
                                                          END;
                                                           }
    { 1000000048;Label  ;0    ;0    ;0    ;0    ;ParentControl=1000000047;
                                                 InColumnHeading=Yes }
    { 1000000017;TextBox;12566;0    ;2090 ;0    ;ParentControl=1000000000;
                                                 InColumn=Yes;
                                                 SourceExpr=TourOperador;
                                                 OnFormat=BEGIN
                                                            IF TieneMarca(Rec) THEN
                                                              CurrForm.TourOperador.UPDATEFONTBOLD(TRUE);
                                                          END;
                                                           }
    { 1000000018;Label  ;0    ;0    ;0    ;0    ;ParentControl=1000000017;
                                                 InColumnHeading=Yes }
    { 1000000005;TextBox;14259;5060 ;1540 ;440  ;Editable=No;
                                                 ParentControl=1000000000;
                                                 InColumn=Yes;
                                                 SourceExpr="Personas entrada";
                                                 OnFormat=BEGIN
                                                            IF TieneMarca(Rec) THEN
                                                              CurrForm."Personas entrada".UPDATEFONTBOLD(TRUE);
                                                          END;

                                                 OnDrillDown=BEGIN
                                                               rRsv.RESET;
                                                               rRsv.SETCURRENTKEY("Fecha entrada",
                                                                                  "Zona servicio entrada",
                                                                                  TourOperador,
                                                                                  "Compa¤ia entrada",
                                                                                  "Vuelo entrada",
                                                                                  "IATA origen entrada",
                                                                                  "Orden entrada");
                                                               rRsv.SETRANGE("Fecha entrada"         , Fecha);
                                                               rRsv.SETFILTER("Zona servicio entrada", Zona);
                                                               rRsv.SETRANGE("Hotel entrada"         , Hotel);
                                                               rRsv.SETRANGE("Compa¤ia entrada"      , Compa¤ia);
                                                               rRsv.SETRANGE("Vuelo entrada"         , "Num. Vuelo");
                                                               rRsv.SETRANGE("IATA origen entrada"   , IATA);
                                                               IF TipoVis = TipoVis::Pendiente THEN
                                                                 rRsv.SETRANGE("Agrupacion entrada",0)
                                                               ELSE
                                                                 rRsv.SETRANGE("Agrupacion entrada",1,999999999);

                                                               rRsv.SETRANGE(TourOperador, TourOperador);
                                                               rRsv.SETRANGE(Entrada     , 1);

                                                               CLEAR(fRsv);
                                                               rAcuZon.GET(Fecha,Zona,TourOperador,"Tipo Transfer");
                                                               fRsv.SetDatos(rAcuZon);
                                                               fRsv.SETTABLEVIEW(rRsv);
                                                               fRsv.RUNMODAL;

                                                               CurrForm.UPDATECONTROLS;
                                                             END;
                                                              }
    { 1000000006;Label  ;0    ;0    ;0    ;0    ;ParentControl=1000000005;
                                                 InColumnHeading=Yes;
                                                 CaptionML=[ENU=People;
                                                            ESP=Personas] }
    { 1000000009;TextBox;15799;5060 ;1540 ;440  ;Editable=No;
                                                 ParentControl=1000000000;
                                                 InColumn=Yes;
                                                 SourceExpr="Personas salida";
                                                 OnFormat=BEGIN
                                                            IF TieneMarca(Rec) THEN
                                                              CurrForm."Personas salida".UPDATEFONTBOLD(TRUE);
                                                          END;

                                                 OnDrillDown=BEGIN
                                                               rRsv.RESET;
                                                               rRsv.SETCURRENTKEY("Fecha salida",
                                                                                  "Zona servicio salida",
                                                                                  TourOperador,
                                                                                  "Compa¤ia salida",
                                                                                  "Vuelo salida",
                                                                                  "IATA destino salida",
                                                                                  "Orden salida");
                                                               rRsv.SETRANGE("Fecha salida"         , Fecha);
                                                               rRsv.SETFILTER("Zona servicio salida", Zona);
                                                               rRsv.SETRANGE("Hotel salida"         , Hotel);
                                                               rRsv.SETRANGE("Compa¤ia salida"      , Compa¤ia);
                                                               rRsv.SETRANGE("Vuelo salida"         , "Num. Vuelo");
                                                               rRsv.SETRANGE("IATA destino salida"  , IATA);

                                                               IF TipoVis = TipoVis::Pendiente THEN
                                                                 rRsv.SETRANGE("Agrupacion salida", 0)
                                                               ELSE
                                                                 rRsv.SETRANGE("Agrupacion salida", 1, 999999999);

                                                               rRsv.SETRANGE(TourOperador, TourOperador);
                                                               rRsv.SETRANGE(Salida      , 1);

                                                               CLEAR(fRsv);
                                                               rAcuZon.GET(Fecha,Zona,TourOperador,"Tipo Transfer");
                                                               fRsv.SetDatos(rAcuZon);
                                                               fRsv.SETTABLEVIEW(rRsv);
                                                               fRsv.RUNMODAL;

                                                               CurrForm.UPDATECONTROLS;
                                                             END;
                                                              }
    { 1000000010;Label  ;0    ;0    ;0    ;0    ;ParentControl=1000000009;
                                                 InColumnHeading=Yes;
                                                 CaptionML=[ENU=People;
                                                            ESP=Personas] }
    { 1000000051;CommandButton;24420;10890;2200;550;
                                                 HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 PushAction=FormHelp }
    { 1000000052;TabControl;220;110 ;26400;1980 ;HorzGlue=Both;
                                                 PageNamesML=[ENU=General;
                                                              ESP=General] }
    { 1000000053;TextBox;3960 ;880  ;1650 ;440  ;Editable=No;
                                                 ParentControl=1000000052;
                                                 InPage=0;
                                                 CaptionML=[ENU=Date;
                                                            ESP=Fecha];
                                                 SourceExpr=rCondTemp."Fecha desde" }
    { 1000000054;Label  ;550  ;880  ;3300 ;440  ;ParentControl=1000000053 }
    { 1000000055;TextBox;3960 ;1430 ;2750 ;440  ;Editable=No;
                                                 ParentControl=1000000052;
                                                 InPage=0;
                                                 CaptionML=[ENU=Zone;
                                                            ESP=Zona];
                                                 SourceExpr=rCondTemp."Zona Servicio" }
    { 1000000056;Label  ;550  ;1430 ;3300 ;440  ;ParentControl=1000000055 }
    { 1000000057;TextBox;11000;1430 ;2750 ;440  ;Editable=No;
                                                 ParentControl=1000000052;
                                                 InPage=0;
                                                 CaptionML=[ENU=TourOperator;
                                                            ESP=TourOperador];
                                                 SourceExpr=rCondTemp.TourOperador }
    { 1000000058;Label  ;7590 ;1430 ;3300 ;440  ;ParentControl=1000000057;
                                                 CaptionML=[ENU=TourOperator;
                                                            ESP=TourOperador] }
    { 1000000059;TextBox;11000;880  ;2750 ;440  ;Editable=No;
                                                 ParentControl=1000000052;
                                                 InPage=0;
                                                 CaptionML=[ENU=Transfer Type;
                                                            ESP=Tipo Transfer];
                                                 OptionCaptionML=[ENU=Arrival,Departure;
                                                                  ESP=Entrada,Salida];
                                                 OptionString=Entrada,Salida;
                                                 SourceExpr=rCondTemp."Tipo Transfer" }
    { 1000000060;Label  ;7590 ;880  ;3300 ;440  ;ParentControl=1000000059 }
    { 1000000065;OptionButton;18040;880;2090;990;VertGlue=Bottom;
                                                 ParentControl=1000000052;
                                                 InPage=0;
                                                 HorzAlign=Center;
                                                 Border=Yes;
                                                 FontBold=Yes;
                                                 BitmapPos=None;
                                                 CaptionML=[ENU=Remaining;
                                                            ESP=Pendiente];
                                                 ToolTipML=[ENU=Remaining;
                                                            ESP=Pendiente];
                                                 SourceExpr=TipoVis;
                                                 OptionValue=Pendiente;
                                                 OnPush=BEGIN
                                                          FILTERGROUP(0);
                                                          TipoVis := TipoVis::Pendiente;
                                                          SETRANGE("Filtro Agrupacion entrada", 0);
                                                          SETRANGE("Filtro Agrupacion salida", 0);
                                                          FILTERGROUP(2);
                                                          CurrForm.UPDATE(FALSE);
                                                        END;
                                                         }
    { 1000000064;OptionButton;20240;880;2090;990;VertGlue=Bottom;
                                                 ParentControl=1000000052;
                                                 InPage=0;
                                                 HorzAlign=Center;
                                                 Border=Yes;
                                                 FontBold=Yes;
                                                 BitmapPos=None;
                                                 CaptionML=[ENU=Grouped;
                                                            ESP=Agrupado];
                                                 ToolTipML=[ENU=Grouped;
                                                            ESP=Agrupado];
                                                 SourceExpr=TipoVis;
                                                 OptionValue=Agrupado;
                                                 OnPush=BEGIN

                                                          FILTERGROUP(0);
                                                          TipoVis := TipoVis::Agrupado;
                                                          SETFILTER("Filtro Agrupacion entrada", '<>%1', 0);
                                                          SETFILTER("Filtro Agrupacion salida", '<>%1', 0);
                                                          FILTERGROUP(2);
                                                          CurrForm.UPDATE(FALSE);
                                                        END;
                                                         }
    { 1000000015;TextBox;16500;1430 ;1320 ;440  ;ParentControl=1000000052;
                                                 InPage=0;
                                                 CaptionML=[ENU=Final Time;
                                                            ESP=Hora Final];
                                                 SourceExpr=rCondTemp."Hora Salida";
                                                 Format=<Hours24,2>:<Minutes,2>;
                                                 OnValidate=BEGIN
                                                              FiltraDateTime;
                                                            END;

                                                 OnAfterValidate=BEGIN
                                                                   CurrForm.UPDATE(FALSE);
                                                                 END;
                                                                  }
    { 1000000020;Label  ;14080;1430 ;2310 ;440  ;ParentControl=1000000015 }
    { 1000000016;TextBox;16500;880  ;1320 ;440  ;ParentControl=1000000052;
                                                 InPage=0;
                                                 CaptionML=[ENU=Initial Time;
                                                            ESP=Hora Inicio];
                                                 SourceExpr=rCondTemp."Hora Entrada";
                                                 Format=<Hours24,2>:<Minutes,2>;
                                                 OnValidate=BEGIN
                                                              FiltraDateTime;
                                                            END;

                                                 OnAfterValidate=BEGIN
                                                                   CurrForm.UPDATE(FALSE);
                                                                 END;
                                                                  }
    { 1000000021;Label  ;14080;880  ;2310 ;440  ;ParentControl=1000000016 }
    { 1000000022;SubForm;16720;2310 ;9900 ;5500 ;Name=SubServ1;
                                                 HorzGlue=Both;
                                                 VertGlue=Both;
                                                 Border=No;
                                                 SubFormID=Form7009994;
                                                 SubFormView=SORTING(Fecha,Zona,Tipo transfer)
                                                             ORDER(Ascending) }
    { 1000000023;SubForm;220  ;7920 ;26400;2860 ;Name=SubServ2;
                                                 HorzGlue=Both;
                                                 VertGlue=Bottom;
                                                 Border=No;
                                                 SubFormID=Form7009995;
                                                 SubFormView=SORTING(Fecha,Zona,Tipo transfer)
                                                             ORDER(Ascending) }
    { 1000000024;MenuButton;22000;10890;2200;550;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 CaptionML=[ENU=&Actions;
                                                            ESP=&Acciones];
                                                 Menu=MENUITEMS
                                                 {
                                                   { ID=1000000025;
                                                     ShortCutKey=Ctrl+C;
                                                     CaptionML=[ENU=&Mark;
                                                                ESP=&Marcar];
                                                     OnPush=BEGIN
                                                              IF rCondTemp."Tipo Transfer" = rCondTemp."Tipo Transfer"::Entrada THEN
                                                              BEGIN
                                                                rRsv.RESET;
                                                                rRsv.SETCURRENTKEY("Fecha entrada",
                                                                                   "Zona servicio entrada",
                                                                                   TourOperador,
                                                                                   "Compa¤ia entrada",
                                                                                   "Vuelo entrada",
                                                                                   "IATA origen entrada",
                                                                                   "Orden entrada");
                                                                rRsv.SETRANGE("Fecha entrada"         , Fecha);
                                                                rRsv.SETFILTER("Zona servicio entrada", Zona);
                                                                rRsv.SETRANGE("Hotel entrada"         , Hotel);
                                                                rRsv.SETRANGE("Compa¤ia entrada"      , Compa¤ia);
                                                                rRsv.SETRANGE("Vuelo entrada"         , "Num. Vuelo");
                                                                rRsv.SETRANGE("IATA origen entrada"   , IATA);
                                                                rRsv.SETRANGE("Agrupacion entrada"    , 0);
                                                                rRsv.SETRANGE(TourOperador            , TourOperador);
                                                                IF rRsv.FINDFIRST THEN
                                                                  CodTra.MarcarReservaAgrupar(rRsv);
                                                              END
                                                              ELSE
                                                              BEGIN
                                                                rRsv.RESET;
                                                                rRsv.SETCURRENTKEY("Fecha salida",
                                                                                   "Zona servicio salida",
                                                                                   TourOperador,
                                                                                   "Compa¤ia salida",
                                                                                   "Vuelo salida",
                                                                                   "IATA destino salida",
                                                                                   "Orden salida");
                                                                rRsv.SETRANGE("Fecha salida"         , Fecha);
                                                                rRsv.SETFILTER("Zona servicio salida", Zona);
                                                                rRsv.SETRANGE("Hotel salida"         , Hotel);
                                                                rRsv.SETRANGE("Compa¤ia salida"      , Compa¤ia);
                                                                rRsv.SETRANGE("Vuelo salida"         , "Num. Vuelo");
                                                                rRsv.SETRANGE("IATA destino salida"  , IATA);
                                                                rRsv.SETRANGE("Agrupacion salida"    , 0);
                                                                rRsv.SETRANGE(TourOperador           , TourOperador);
                                                                IF rRsv.FINDFIRST THEN
                                                                  CodTra.MarcarReservaAgrupar(rRsv);
                                                              END;
                                                            END;
                                                             }
                                                   { ID=1000000008;
                                                     ShortCutKey=Ctrl+V;
                                                     CaptionML=[ENU=Mark Flight;
                                                                ESP=Marcar Vuelo];
                                                     OnPush=BEGIN
                                                              IF rCondTemp."Tipo Transfer" = rCondTemp."Tipo Transfer"::Entrada THEN
                                                              BEGIN
                                                                rRsv.RESET;
                                                                rRsv.SETCURRENTKEY("Fecha entrada",
                                                                                   "Zona servicio entrada",
                                                                                   TourOperador,
                                                                                   "Compa¤ia entrada",
                                                                                   "Vuelo entrada",
                                                                                   "IATA origen entrada",
                                                                                   "Orden entrada");
                                                                rRsv.SETRANGE("Fecha entrada"         , Fecha);
                                                                rRsv.SETFILTER("Zona servicio entrada", Zona);
                                                                rRsv.SETRANGE("Compa¤ia entrada"      , Compa¤ia);
                                                                rRsv.SETRANGE("Vuelo entrada"         , "Num. Vuelo");
                                                                rRsv.SETRANGE("IATA origen entrada"   , IATA);
                                                                rRsv.SETRANGE("Agrupacion entrada"    , 0);
                                                                rRsv.SETRANGE(TourOperador            , TourOperador);
                                                                IF rRsv.FINDFIRST THEN
                                                                  CodTra.MarcarReservaAgrupar(rRsv);
                                                              END
                                                              ELSE
                                                              BEGIN
                                                                rRsv.RESET;
                                                                rRsv.SETCURRENTKEY("Fecha salida",
                                                                                   "Zona servicio salida",
                                                                                   TourOperador,
                                                                                   "Compa¤ia salida",
                                                                                   "Vuelo salida",
                                                                                   "IATA destino salida",
                                                                                   "Orden salida");
                                                                rRsv.SETRANGE("Fecha salida"         , Fecha);
                                                                rRsv.SETFILTER("Zona servicio salida", Zona);
                                                                rRsv.SETRANGE("Compa¤ia salida"      , Compa¤ia);
                                                                rRsv.SETRANGE("Vuelo salida"         , "Num. Vuelo");
                                                                rRsv.SETRANGE("IATA destino salida"  , IATA);
                                                                rRsv.SETRANGE("Agrupacion salida"    , 0);
                                                                rRsv.SETRANGE(TourOperador           , TourOperador);
                                                                IF rRsv.FINDFIRST THEN
                                                                  CodTra.MarcarReservaAgrupar(rRsv);
                                                              END;
                                                            END;
                                                             }
                                                   { ID=1000000049;
                                                     MenuItemType=Separator }
                                                   { ID=1000000046;
                                                     CaptionML=[ENU=Add Touroperators;
                                                                ESP=Agregar Touroperadores];
                                                     OnPush=BEGIN
                                                              codCua.AgregarTouroperador(Rec);
                                                            END;
                                                             }
                                                   { ID=1000000050;
                                                     CaptionML=[ENU=Add Zones;
                                                                ESP=Agregar Zonas];
                                                     OnPush=BEGIN
                                                              codCua.AgregarZonas(Rec);
                                                            END;
                                                             }
                                                   { ID=1000000026;
                                                     MenuItemType=Separator }
                                                   { ID=1000000027;
                                                     ShortCutKey=F3;
                                                     CaptionML=[ENU=Create service;
                                                                ESP=Crear servicio];
                                                     OnPush=BEGIN
                                                              IF rAcuZon.GET(Fecha,Zona,TourOperador,"Tipo Transfer") THEN
                                                                codCua.Agrupar(rAcuZon, rAcuZon.GETFILTER(Zona), rAcuZon.GETFILTER(TourOperador));

                                                              CurrForm.UPDATECONTROLS;
                                                              CurrForm.SubServ1.ACTIVATE;
                                                              CurrForm.SubServ2.ACTIVATE;
                                                              CurrForm.nomhot.ACTIVATE;
                                                            END;
                                                             }
                                                   { ID=1000000028;
                                                     ShortCutKey=F4;
                                                     CaptionML=[ENU=Delete service;
                                                                ESP=Deshacer servicio];
                                                     OnPush=BEGIN
                                                              CLEAR(rAgr);
                                                              CurrForm.SubServ1.FORM.GETRECORD(rAgr);
                                                              codCua.Desagrupar(rAgr);

                                                              CurrForm.UPDATECONTROLS;
                                                              CurrForm.SubServ1.ACTIVATE;
                                                              CurrForm.SubServ2.ACTIVATE;
                                                              CurrForm.nomhot.ACTIVATE;
                                                            END;
                                                             }
                                                   { ID=1000000029;
                                                     MenuItemType=Separator }
                                                   { ID=1000000030;
                                                     CaptionML=[ENU=Assign to service;
                                                                ESP=Asignar a servicio];
                                                     OnPush=BEGIN

                                                              IF rAcuZon.GET(Fecha, Zona, TourOperador, "Tipo Transfer") THEN
                                                                CodTra.CambiarAgrupacionCuadrante(rAcuZon, rAcuZon.Zona, rAcuZon.TourOperador);
                                                            END;
                                                             }
                                                   { ID=1000000031;
                                                     CaptionML=[ENU=Unassign service;
                                                                ESP=Sacar de servicio];
                                                     OnPush=BEGIN
                                                              IF rAcuZon.GET(Fecha, Zona, TourOperador, "Tipo Transfer") THEN
                                                                CodTra.SacarAgrupacionCuadrante(rAcuZon, rAcuZon.Zona, rAcuZon.TourOperador);
                                                            END;
                                                             }
                                                   { ID=1000000032;
                                                     MenuItemType=Separator }
                                                   { ID=1000000033;
                                                     ShortCutKey=F9;
                                                     CaptionML=[ENU=&Calculate;
                                                                ESP=&Calcular];
                                                     OnPush=BEGIN
                                                              iOpcion := STRMENU(Text000);
                                                              CASE iOpcion OF
                                                                1: BEGIN
                                                                  CurrForm.SubServ1.FORM.GETRECORD(rAgr);
                                                                  codcal.calcular_margenes(FALSE, rAgr);
                                                                END;

                                                                2: BEGIN
                                                                  CurrForm.SubServ1.FORM.Pasar_Seleccion(rAgr);

                                                                  IF rVerMargen.FIND('-') THEN
                                                                    rVerMargen.DELETEALL;

                                                                  IF rAgr.FINDFIRST THEN BEGIN
                                                                    REPEAT
                                                                      rAgr."Tipo Calculo" := rAgr."Tipo Calculo"::Margenes;
                                                                      rAgr.MODIFY;
                                                                      rMar.RESET;
                                                                      rMar.SETRANGE(Agrupacion, rAgr."N§ Agrupacion");
                                                                      IF rMar.FIND('-') THEN
                                                                        rMar.DELETEALL;
                                                                      rMar.RESET;
                                                                      COMMIT;
                                                                      cCalTra.calcular_agrupacion(rAgr, FALSE);
                                                                      rAgr.GET(rAgr."N§ Agrupacion");
                                                                      CodTra.rellenar_margenes(rAgr);
                                                                      rAgr."Tipo Calculo" := rAgr."Tipo Calculo"::"Coste/Ingreso";
                                                                      rAgr.MODIFY;
                                                                    UNTIL rAgr.NEXT = 0;
                                                                  END;
                                                                  COMMIT;
                                                                  FORM.RUNMODAL(FORM::"Tabla Ver Margenes");
                                                                END;

                                                                3: BEGIN
                                                                  CurrForm.SubServ1.FORM.GETRECORD(rAgr);
                                                                  CurrForm.SubServ1.FORM.Pasar_filtros(rAgr);
                                                                  CodTra.ver_margenes(rAgr);
                                                                END;
                                                              END;
                                                            END;
                                                             }
                                                 }
                                                  }
    { 1000000034;MenuButton;19580;10890;2200;550;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 CaptionML=[ENU=&Queries;
                                                            ESP=&Consultas];
                                                 Menu=MENUITEMS
                                                 {
                                                   { ID=1000000035;
                                                     ShortCutKey=Ctrl+F5;
                                                     CaptionML=[ENU=Serv&ice Card;
                                                                ESP=F&icha agrupaci¢n];
                                                     OnPush=BEGIN
                                                              CurrForm.SubServ1.FORM.GETRECORD(rAgr);
                                                              fFicAgr.SETTABLEVIEW(rAgr);
                                                              fFicAgr.SETRECORD(rAgr);
                                                              fFicAgr.RUNMODAL;
                                                              CLEAR(fFicAgr);
                                                            END;
                                                             }
                                                   { ID=1000000045;
                                                     MenuItemType=Separator }
                                                   { ID=1000000036;
                                                     CaptionML=[ENU=&Service Pick-ups;
                                                                ESP=&Recogidas agrupaci¢n];
                                                     OnPush=BEGIN
                                                              CurrForm.SubServ1.FORM.GETRECORD(rAgr);

                                                              IF rAgr."N§ Agrupacion" <> 0 THEN BEGIN
                                                                lrHorAgr.RESET;
                                                                lrHorAgr.FILTERGROUP(0);
                                                                lrHorAgr.SETRANGE("N§ Agrupacion", rAgr."N§ Agrupacion");
                                                                lrHorAgr.FILTERGROUP(2);
                                                                IF lrHorAgr.FINDFIRST THEN
                                                                  FORM.RUNMODAL(7009910, lrHorAgr);

                                                              END;
                                                            END;
                                                             }
                                                   { ID=1000000037;
                                                     CaptionML=[ENU=&Comments;
                                                                ESP=&Comentarios transportista];
                                                     OnPush=BEGIN
                                                              CurrForm.SubServ1.FORM.GETRECORD(rAgr);

                                                              IF rAgr."N§ Agrupacion" <> 0 THEN BEGIN

                                                                rAgrCom.SETRANGE(Agrupacion,rAgr."N§ Agrupacion");

                                                                FORM.RUNMODAL(7009945,rAgrCom);

                                                              END;
                                                            END;
                                                             }
                                                   { ID=1000000038;
                                                     CaptionML=[ENU=&Margins;
                                                                ESP=&Margenes calculados];
                                                     OnPush=BEGIN
                                                              CurrForm.SubServ1.FORM.GETRECORD(rAgr);
                                                              codcal.calcular_margenes(TRUE, rAgr);
                                                            END;
                                                             }
                                                   { ID=1000000041;
                                                     MenuItemType=Separator }
                                                   { ID=1000000043;
                                                     CaptionML=[ENU=Day pick-ups times;
                                                                ESP=Recogidas d¡a];
                                                     OnPush=BEGIN
                                                              IF "Tipo Transfer" = "Tipo Transfer"::Entrada THEN
                                                                EXIT;

                                                              CLEAR(rVuelos);

                                                              CLEAR(lfHorarios);
                                                              lfHorarios.PasaParametros(Fecha, 0, rVuelos); //. Modo diario
                                                              lfHorarios.RUNMODAL;
                                                            END;
                                                             }
                                                   { ID=1000000042;
                                                     PushAction=RunObject;
                                                     CaptionML=[ENU=Flights;
                                                                ESP=Vuelos];
                                                     RunObject=Form 7009904;
                                                     RunFormLink=Fecha=FIELD(Fecha),
                                                                 Zona=FIELD(Zona),
                                                                 TourOperador=FIELD(TourOperador),
                                                                 Tipo Transfer=FIELD(Tipo Transfer) }
                                                   { ID=1000000044;
                                                     CaptionML=[ENU=Transfers in destination;
                                                                ESP=Traslados en destino];
                                                     OnPush=BEGIN
                                                              rAcuZon.RESET;
                                                              rAcuZon.GET(Fecha, Zona, TourOperador, "Tipo Transfer");
                                                              lcGestTra.CallServices(rAcuZon);
                                                            END;
                                                             }
                                                 }
                                                  }
    { 1000000039;TextBox;3630 ;10890;1100 ;550  ;VertGlue=Bottom;
                                                 Editable=No;
                                                 HorzAlign=Center;
                                                 ForeColor=255;
                                                 FontSize=10;
                                                 CaptionML=ESP=Seleccionados;
                                                 SourceExpr=PasajerosSeleccionados }
    { 1000000040;Label  ;220  ;10890;3300 ;550  ;VertGlue=Bottom;
                                                 ParentControl=1000000039 }
  }
  CODE
  {
    VAR
      rCondTemp@1000000001 : Record 7010085;
      rAcuZon@1000000011 : Record 7009793;
      rAgr@1000000013 : Record 7009796;
      rMar@1000000019 : Record 7009808;
      rVerMargen@1000000018 : Record 7009814;
      lrHorAgr@1000000016 : Record 7009800;
      rAgrCom@1000000017 : Record 7009813;
      rVuelos@1000000022 : Record 7009754;
      rRsv@1000000024 : Record 7009744;
      fFicAgr@1000000015 : Form 7009938;
      lfHorarios@1000000021 : Form 7009845;
      fRsv@1000000025 : Form 7009930;
      codcal@1000000009 : Codeunit 7009736;
      CodTra@1000000010 : Codeunit 7009732;
      codCua@1000000006 : Codeunit 7009733;
      cCalTra@1000000020 : Codeunit 7009734;
      lcGestTra@1000000023 : Codeunit 7009782;
      TipoVis@1000000000 : 'Pendiente,Agrupado';
      vDateTIni@1000000003 : DateTime;
      vDateTFin@1000000004 : DateTime;
      Text001@1000000005 : TextConst 'ENU=You must indicate Intial date and Final date.;ESP=Debe indicar Hora desde y Hora Hasta.';
      Text000@1000000008 : TextConst 'ENU=&Current grouping,&Selection,&Quadrant;ESP=&Agrupaci¢n Actual,&Seleccion,&Cuadrante';
      iOpcion@1000000014 : Integer;

    PROCEDURE nomHotel@1000000000(codHot@1000000001 : Code[20]) : Text[30];
    VAR
      rHot@1000000000 : Record 7009724;
    BEGIN
      rHot.RESET;
      IF rHot.GET(codHot) THEN
        EXIT(rHot.Nombre);
    END;

    PROCEDURE ZonaFisica@1000000001(codHot@1000000001 : Code[20]) : Code[10];
    VAR
      rHot@1000000000 : Record 7009724;
    BEGIN
      rHot.RESET;
      IF rHot.GET(codHot) THEN
        EXIT(rHot."Zona Fisica");
    END;

    PROCEDURE FiltraDateTime@1000000002();
    BEGIN
      vDateTIni := CREATEDATETIME(rCondTemp."Fecha desde", rCondTemp."Hora Entrada");
      IF rCondTemp."Hora Entrada" <= rCondTemp."Hora Salida" THEN
        vDateTFin := CREATEDATETIME(rCondTemp."Fecha desde", rCondTemp."Hora Salida")
      ELSE
        vDateTFin := CREATEDATETIME(rCondTemp."Fecha desde" + 1, rCondTemp."Hora Salida");

      SETRANGE("Fecha/Hora Vuelo", vDateTIni, vDateTFin);
    END;

    PROCEDURE TieneMarca@1000000003(VAR pRec@1000000000 : Record 7009795) : Boolean;
    BEGIN
      IF rCondTemp."Tipo Transfer" = rCondTemp."Tipo Transfer"::Entrada THEN
      BEGIN
        rRsv.RESET;
        rRsv.SETCURRENTKEY("Fecha entrada",
                           "Zona servicio entrada",
                           TourOperador,
                           "Compa¤ia entrada",
                           "Vuelo entrada",
                           "IATA origen entrada",
                           "Orden entrada");
        rRsv.SETRANGE("Fecha entrada"         , pRec.Fecha);
        rRsv.SETFILTER("Zona servicio entrada", pRec.Zona);
        rRsv.SETRANGE("Hotel entrada"         , pRec.Hotel);
        rRsv.SETRANGE("Compa¤ia entrada"      , pRec.Compa¤ia);
        rRsv.SETRANGE("Vuelo entrada"         , pRec."Num. Vuelo");
        rRsv.SETRANGE("IATA origen entrada"   , pRec.IATA);
        rRsv.SETRANGE("Agrupacion entrada"    , 0);
        rRsv.SETRANGE(TourOperador            , pRec.TourOperador);
        rRsv.SETRANGE("Marca Cuadrante"       , UPPERCASE(USERID));
        rRsv.SETRANGE(Entrada                 , 1);
        IF rRsv.FINDFIRST THEN
        BEGIN
          EXIT(TRUE)
        END;
      END
      ELSE
      BEGIN
        rRsv.RESET;
        rRsv.SETCURRENTKEY("Fecha salida",
                           "Zona servicio salida",
                           TourOperador,
                           "Compa¤ia salida",
                           "Vuelo salida",
                           "IATA destino salida",
                           "Orden salida");
        rRsv.SETRANGE("Fecha salida"         , pRec.Fecha);
        rRsv.SETFILTER("Zona servicio salida", pRec.Zona);
        rRsv.SETRANGE("Hotel salida"         , pRec.Hotel);
        rRsv.SETRANGE("Compa¤ia salida"      , pRec.Compa¤ia);
        rRsv.SETRANGE("Vuelo salida"         , pRec."Num. Vuelo");
        rRsv.SETRANGE("IATA destino salida"  , pRec.IATA);
        rRsv.SETRANGE("Agrupacion salida"    , 0);
        rRsv.SETRANGE(TourOperador           , pRec.TourOperador);
        rRsv.SETRANGE("Marca Cuadrante"      , UPPERCASE(USERID));
        rRsv.SETRANGE(Salida                 , 1);
        IF rRsv.FINDFIRST THEN
        BEGIN
          EXIT(TRUE)
        END;
      END;
    END;

    PROCEDURE RefrescarCuadrante@1000000004();
    VAR
      lrCond@1000000000 : Record 7010085;
    BEGIN
      IF CALCDATE('<+6M>', rAcuZon.Fecha) <= TODAY THEN
        EXIT;

      IF NOT rAcuZon.Refrescar THEN
        EXIT;

      codCua.deshacer_cuadrante(rAcuZon, TRUE);
      IF NOT lrCond.GET(UPPERCASE(USERID)) THEN
      BEGIN
        lrCond.Usuario := USERID;
        lrCond.INSERT;
      END;

      lrCond.INIT;
      lrCond.Usuario         := USERID();
      lrCond.Fecha           := rAcuZon.Fecha;
      lrCond."Zona Servicio" := rAcuZon.Zona;
      lrCond.TourOperador    := rAcuZon.TourOperador;
      lrCond."Tipo Transfer" := rAcuZon."Tipo Transfer";
      lrCond.MODIFY;

      COMMIT;

      codCua.traducir_zona(lrCond);
      codCua.crear_acumulados(lrCond);
    END;

    PROCEDURE PasajerosSeleccionados@1000000005() : Integer;
    VAR
      rRsv@1000000000 : Record 7009744;
    BEGIN
      rRsv.RESET;

      IF rCondTemp."Tipo Transfer" = rCondTemp."Tipo Transfer"::Entrada THEN
      BEGIN
        rRsv.SETRANGE("Fecha entrada"        , rCondTemp."Fecha desde");
        rRsv.SETRANGE("Zona servicio entrada", rCondTemp."Zona Servicio");
      END
      ELSE
      BEGIN
        rRsv.SETRANGE("Fecha salida"        , rCondTemp."Fecha desde");
        rRsv.SETRANGE("Zona servicio salida", rCondTemp."Zona Servicio");
      END;
      COPYFILTER(TourOperador, rRsv.TourOperador);
      rRsv.SETRANGE("Marca Cuadrante", UPPERCASE(USERID));
      EXIT(rRsv.COUNT);
    END;

    BEGIN
    {
      $001 ARM 02032015 CNT-OC-14093

      $002 AJS 12032015 Hago que los subformularios se refresquen correctamente al crear o deshacer servicio

      $003 AJS 30042015 Dejamos, temporalmente de crear los servicios privados de manera automatica

      $004 AJS 16052015 A¤adimos nueva opci¢n para marcar todas las lineas del vuelo

      $005 AJS 01062015 Tener en cuenta los campos Entrada y Salida

      $006 AJS 27062015 Nueva funcion "Agregar Touroperadores" para sumar touroperadores al cuadrante

      $007 AJS 11072015 Nueva funcion "Agregar Zonas" para sumar zonas al cuadrante, el filtro de zona tiene que
                        poderse alterar

      $008 AJS 15072015 Modifico la llamada a Agrugar para pasar filtro de zona y touroperador
    }
    END.
  }
}
