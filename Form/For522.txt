OBJECT Form 522 View Applied Entries
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVW16.00;
  }
  PROPERTIES
  {
    Width=16170;
    Height=5280;
    CaptionML=[ENU=Application Worksheet;
               ESP=Hoja liquidaci¢n];
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=Yes;
    TableBoxID=1;
    SourceTable=Table32;
    SourceTableTemporary=Yes;
    OnInit=VAR
             t@1000 : Integer;
           BEGIN
             CurrForm.LOOKUPMODE:=NOT ShowApplied;
           END;

    OnOpenForm=VAR
                 t@1000 : Integer;
               BEGIN
                 Show;
               END;

    OnFindRecord=VAR
                   Found@1000 : Boolean;
                 BEGIN
                   EXIT(FIND(Which));
                 END;

    OnAfterGetRecord=BEGIN
                       GetApplQty;
                     END;

  }
  CONTROLS
  {
    { 12  ;CommandButton;6490 ;4620 ;2200 ;550  ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 Default=Yes;
                                                 PushAction=LookupOK;
                                                 InvalidActionAppearance=Hide }
    { 13  ;CommandButton;8910 ;4620 ;2200 ;550  ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 Cancel=Yes;
                                                 PushAction=Cancel;
                                                 InvalidActionAppearance=Hide }
    { 14  ;CommandButton;13750;4620 ;2200 ;550  ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 PushAction=FormHelp }
    { 36  ;MenuButton   ;11330;4620 ;2200 ;550  ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 CaptionML=[ENU=Ent&ry;
                                                            ESP=&Movimiento];
                                                 Menu=MENUITEMS
                                                 {
                                                   { ID=37;
                                                     PushAction=RunObject;
                                                     ShortCutKey=May£s+Ctrl+D;
                                                     CaptionML=[ENU=Dimensions;
                                                                ESP=Dimensiones];
                                                     RunObject=Form 544;
                                                     RunFormLinkType=OnUpdate;
                                                     RunFormLink=Table ID=CONST(32),
                                                                 Entry No.=FIELD(Entry No.) }
                                                   { ID=48;
                                                     PushAction=RunObject;
                                                     ShortCutKey=Ctrl+F5;
                                                     CaptionML=[ENU=&Value Entries;
                                                                ESP=Movs. &valor];
                                                     RunObject=Form 5802;
                                                     RunFormLinkType=OnUpdate;
                                                     RunFormView=SORTING(Item Ledger Entry No.);
                                                     RunFormLink=Item Ledger Entry No.=FIELD(Entry No.) }
                                                   { ID=38;
                                                     CaptionML=[ENU=Reservation Entries;
                                                                ESP=Movs. reserva];
                                                     OnPush=BEGIN
                                                              ShowReservationEntries(TRUE);
                                                            END;
                                                             }
                                                 }
                                                  }
    { 1   ;CommandButton;13750;110  ;2200 ;550  ;HorzGlue=Right;
                                                 CaptionML=[ENU=Re&move Application;
                                                            ESP=Eli&minar liquidaci¢n];
                                                 OnPush=BEGIN
                                                          UnapplyRec();
                                                        END;
                                                         }
    { 2   ;TableBox     ;220  ;770  ;15730;3740 ;HorzGlue=Both;
                                                 VertGlue=Both;
                                                 Editable=No }
    { 3   ;TextBox      ;0    ;0    ;1650 ;440  ;ParentControl=2;
                                                 InColumn=Yes;
                                                 SourceExpr="Posting Date" }
    { 4   ;Label        ;0    ;0    ;3300 ;440  ;ParentControl=3;
                                                 InColumnHeading=Yes }
    { 5   ;TextBox      ;0    ;0    ;550  ;440  ;ParentControl=2;
                                                 InColumn=Yes;
                                                 SourceExpr="Entry Type" }
    { 6   ;Label        ;0    ;0    ;3300 ;440  ;ParentControl=5;
                                                 InColumnHeading=Yes }
    { 7   ;TextBox      ;2294 ;0    ;550  ;440  ;ParentControl=2;
                                                 InColumn=Yes;
                                                 SourceExpr="Document Type" }
    { 8   ;Label        ;0    ;0    ;3300 ;440  ;ParentControl=7;
                                                 InColumnHeading=Yes }
    { 9   ;TextBox      ;0    ;0    ;1650 ;440  ;ParentControl=2;
                                                 InColumn=Yes;
                                                 SourceExpr="Document No." }
    { 10  ;Label        ;0    ;0    ;3300 ;440  ;ParentControl=9;
                                                 InColumnHeading=Yes }
    { 11  ;TextBox      ;3643 ;0    ;1700 ;440  ;Visible=No;
                                                 ParentControl=2;
                                                 InColumn=Yes;
                                                 SourceExpr="Document Line No." }
    { 15  ;Label        ;0    ;0    ;3300 ;440  ;ParentControl=11;
                                                 InColumnHeading=Yes }
    { 16  ;TextBox      ;0    ;0    ;1650 ;440  ;Visible=No;
                                                 ParentControl=2;
                                                 InColumn=Yes;
                                                 SourceExpr="Item No." }
    { 18  ;Label        ;0    ;0    ;3300 ;440  ;ParentControl=16;
                                                 InColumnHeading=Yes }
    { 19  ;TextBox      ;4834 ;220  ;1650 ;440  ;Visible=No;
                                                 ParentControl=2;
                                                 InColumn=Yes;
                                                 SourceExpr="Variant Code" }
    { 20  ;Label        ;0    ;0    ;3300 ;440  ;ParentControl=19;
                                                 InColumnHeading=Yes }
    { 21  ;TextBox      ;3855 ;0    ;1700 ;440  ;Visible=No;
                                                 ParentControl=2;
                                                 InColumn=Yes;
                                                 SourceExpr="Serial No." }
    { 22  ;Label        ;0    ;0    ;3300 ;440  ;ParentControl=21;
                                                 InColumnHeading=Yes }
    { 23  ;TextBox      ;9517 ;110  ;1700 ;440  ;Visible=No;
                                                 ParentControl=2;
                                                 InColumn=Yes;
                                                 SourceExpr="Lot No." }
    { 24  ;Label        ;0    ;0    ;3300 ;440  ;ParentControl=23;
                                                 InColumnHeading=Yes }
    { 25  ;TextBox      ;0    ;0    ;4400 ;440  ;HorzGlue=Both;
                                                 Visible=No;
                                                 ParentControl=2;
                                                 InColumn=Yes;
                                                 SourceExpr=Description }
    { 26  ;Label        ;0    ;0    ;3300 ;440  ;ParentControl=25;
                                                 InColumnHeading=Yes }
    { 27  ;TextBox      ;8988 ;550  ;1650 ;440  ;Visible=No;
                                                 ParentControl=2;
                                                 InColumn=Yes;
                                                 SourceExpr="Global Dimension 1 Code" }
    { 28  ;Label        ;0    ;0    ;3300 ;440  ;ParentControl=27;
                                                 InColumnHeading=Yes }
    { 29  ;TextBox      ;10813;440  ;1650 ;440  ;Visible=No;
                                                 ParentControl=2;
                                                 InColumn=Yes;
                                                 SourceExpr="Global Dimension 2 Code" }
    { 30  ;Label        ;0    ;0    ;3300 ;440  ;ParentControl=29;
                                                 InColumnHeading=Yes }
    { 31  ;TextBox      ;12163;330  ;1650 ;440  ;Visible=No;
                                                 ParentControl=2;
                                                 InColumn=Yes;
                                                 SourceExpr="Location Code" }
    { 32  ;Label        ;0    ;0    ;3300 ;440  ;ParentControl=31;
                                                 InColumnHeading=Yes }
    { 33  ;TextBox      ;17163;220  ;1650 ;440  ;ParentControl=2;
                                                 InColumn=Yes;
                                                 CaptionML=[ENU=Applied Quantity;
                                                            ESP=Cdad. liquidada];
                                                 DecimalPlaces=0:5;
                                                 SourceExpr=ApplQty }
    { 34  ;Label        ;0    ;0    ;3300 ;440  ;ParentControl=33;
                                                 InColumnHeading=Yes }
    { 35  ;TextBox      ;0    ;0    ;1650 ;440  ;ParentControl=2;
                                                 InColumn=Yes;
                                                 CaptionML=[ENU=Quantity;
                                                            ESP=Cantidad];
                                                 DecimalPlaces=0:5;
                                                 SourceExpr=Qty }
    { 39  ;Label        ;0    ;0    ;3300 ;440  ;ParentControl=35;
                                                 InColumnHeading=Yes }
    { 40  ;TextBox      ;12480;110  ;2200 ;440  ;ParentControl=2;
                                                 InColumn=Yes;
                                                 SourceExpr="Cost Amount (Actual)" }
    { 41  ;Label        ;0    ;0    ;3300 ;440  ;ParentControl=40;
                                                 InColumnHeading=Yes }
    { 42  ;TextBox      ;22958;0    ;2200 ;440  ;Visible=No;
                                                 ParentControl=2;
                                                 InColumn=Yes;
                                                 CaptionML=[ENU=Unit Cost(LCY);
                                                            ESP=Coste unitario (DL)];
                                                 SourceExpr=GetUnitCostLCY }
    { 43  ;Label        ;0    ;0    ;3300 ;440  ;ParentControl=42;
                                                 InColumnHeading=Yes }
    { 44  ;TextBox      ;17401;440  ;1650 ;440  ;Visible=Yes;
                                                 ParentControl=2;
                                                 InColumn=Yes;
                                                 SourceExpr="Invoiced Quantity" }
    { 45  ;Label        ;0    ;0    ;3300 ;440  ;ParentControl=44;
                                                 InColumnHeading=Yes }
    { 46  ;TextBox      ;17534;0    ;2200 ;440  ;ParentControl=2;
                                                 InColumn=Yes;
                                                 SourceExpr="Reserved Quantity" }
    { 47  ;Label        ;0    ;0    ;3300 ;440  ;ParentControl=46;
                                                 InColumnHeading=Yes }
    { 49  ;TextBox      ;19677;440  ;1650 ;440  ;Visible=Yes;
                                                 ParentControl=2;
                                                 InColumn=Yes;
                                                 SourceExpr="Remaining Quantity" }
    { 50  ;Label        ;0    ;0    ;3300 ;440  ;ParentControl=49;
                                                 InColumnHeading=Yes }
    { 1102601000;TextBox;36248;1980 ;2200 ;440  ;ParentControl=2;
                                                 InColumn=Yes;
                                                 CaptionML=[ENU=Quantity Available for Cost Applications;
                                                            ESP=Cantidad disponible para liquidaciones de coste];
                                                 DecimalPlaces=0:5;
                                                 SourceExpr=CostAvailable(Rec) }
    { 1102601001;Label  ;0    ;0    ;0    ;0    ;ParentControl=1102601000;
                                                 InColumnHeading=Yes }
    { 51  ;TextBox      ;34811;0    ;2200 ;440  ;ParentControl=2;
                                                 InColumn=Yes;
                                                 CaptionML=[ENU=Available for Quantity Application;
                                                            ESP=Disponible para aplicaci¢n cantidad];
                                                 DecimalPlaces=0:5;
                                                 SourceExpr=QuantityAvailable(Rec) }
    { 52  ;Label        ;0    ;0    ;3300 ;440  ;ParentControl=51;
                                                 InColumnHeading=Yes }
    { 53  ;TextBox      ;30657;0    ;2200 ;440  ;ParentControl=2;
                                                 InColumn=Yes;
                                                 SourceExpr="Shipped Qty. Not Returned" }
    { 54  ;Label        ;0    ;0    ;3300 ;440  ;ParentControl=53;
                                                 InColumnHeading=Yes }
    { 55  ;CheckBox     ;0    ;0    ;1650 ;440  ;ParentControl=2;
                                                 InColumn=Yes;
                                                 SourceExpr=Open }
    { 56  ;Label        ;0    ;0    ;3300 ;440  ;ParentControl=55;
                                                 InColumnHeading=Yes }
    { 57  ;TextBox      ;39812;220  ;1650 ;440  ;Visible=No;
                                                 ParentControl=2;
                                                 InColumn=Yes;
                                                 SourceExpr="Qty. per Unit of Measure" }
    { 58  ;Label        ;0    ;0    ;3300 ;440  ;ParentControl=57;
                                                 InColumnHeading=Yes }
    { 59  ;CheckBox     ;59788;440  ;1650 ;440  ;Visible=No;
                                                 ParentControl=2;
                                                 InColumn=Yes;
                                                 ShowCaption=No;
                                                 SourceExpr="Drop Shipment" }
    { 60  ;Label        ;0    ;0    ;3300 ;440  ;ParentControl=59;
                                                 InColumnHeading=Yes }
    { 61  ;TextBox      ;37245;0    ;1700 ;440  ;Visible=No;
                                                 ParentControl=2;
                                                 InColumn=Yes;
                                                 SourceExpr="Applies-to Entry" }
    { 62  ;Label        ;0    ;0    ;3300 ;440  ;ParentControl=61;
                                                 InColumnHeading=Yes }
    { 63  ;CheckBox     ;10549;220  ;1650 ;440  ;Visible=No;
                                                 ParentControl=2;
                                                 InColumn=Yes;
                                                 ShowCaption=No;
                                                 SourceExpr="Applied Entry to Adjust" }
    { 64  ;Label        ;0    ;0    ;3300 ;440  ;ParentControl=63;
                                                 InColumnHeading=Yes }
    { 65  ;TextBox      ;43913;110  ;1650 ;440  ;Visible=No;
                                                 ParentControl=2;
                                                 InColumn=Yes;
                                                 SourceExpr="Prod. Order No." }
    { 66  ;Label        ;0    ;0    ;3300 ;440  ;ParentControl=65;
                                                 InColumnHeading=Yes }
    { 67  ;TextBox      ;0    ;0    ;1650 ;440  ;ParentControl=2;
                                                 InColumn=Yes;
                                                 SourceExpr="Entry No." }
    { 68  ;Label        ;0    ;0    ;3300 ;440  ;ParentControl=67;
                                                 InColumnHeading=Yes }
  }
  CODE
  {
    VAR
      AppliedRec@1001 : Record 32;
      ShowApplied@1002 : Boolean;
      ShowQuantity@1007 : Boolean;
      Apply@1003 : Codeunit 22;
      RecordToShow@1008 : Record 32;
      InventoryPeriod@1010 : Record 5814;
      InventoryOpenedFrom@1011 : Date;
      MaxToApply@1004 : Decimal;
      ApplQty@1005 : Decimal;
      Qty@1006 : Decimal;
      TotalApplied@1015 : Decimal;

    PROCEDURE SetRecordToShow@7(VAR RecordToSet@1000 : Record 32;VAR ApplyCodeunit@1001 : Codeunit 22;newShowApplied@1002 : Boolean);
    BEGIN
      RecordToShow.COPY(RecordToSet);
      Apply:=ApplyCodeunit;
      ShowApplied:=newShowApplied;
    END;

    LOCAL PROCEDURE Show@8();
    VAR
      ItemLedgEntry@1000 : Record 32;
      Apprec@1102601000 : Record 339;
    BEGIN
      WITH ItemLedgEntry DO BEGIN
        GET(RecordToShow."Entry No.");
        IF ("Entry Type" IN ["Entry Type"::Sale,"Entry Type"::Output]) AND Positive THEN
          ShowQuantity := FALSE
        ELSE
          ShowQuantity := TRUE;
        MaxToApply:=0;
        IF NOT ShowQuantity THEN BEGIN
      //    MaxToApply := Quantity - GetApplied;
          MaxToApply := Quantity + Apprec.Returned("Entry No.");
        END;
      END;
      SetMyView(RecordToShow,ShowApplied,ShowQuantity,MaxToApply);
    END;

    LOCAL PROCEDURE SetMyView@22(ItemLedgEntry@1000 : Record 32;ShowApplied@1002 : Boolean;ShowQuantity@1004 : Boolean;MaxToApply@1005 : Decimal);
    VAR
      ItemApplnEntry@1001 : Record 339;
      ItemLedgEntry2@1003 : Record 32;
    BEGIN
      InitView();
      CASE ShowQuantity OF
        TRUE: BEGIN
          CASE ShowApplied OF
            TRUE : ShowQuantityApplied(ItemLedgEntry);
            FALSE : BEGIN
              ShowQuantityOpen(ItemLedgEntry);
              ShowCostOpen(ItemLedgEntry,MaxToApply);
            END;
          END
        END;
        FALSE: BEGIN
          CASE ShowApplied OF
            TRUE : ShowCostApplied(ItemLedgEntry);
            FALSE : ShowCostOpen(ItemLedgEntry,MaxToApply);
          END
        END;
      END;
    END;

    LOCAL PROCEDURE InitView@23();
    BEGIN
      DELETEALL;
    END;

    LOCAL PROCEDURE ShowQuantityApplied@20(ItemLedgEntry@1000 : Record 32);
    VAR
      ItemApplnEntry@1002 : Record 339;
      ItemLedgEntry2@1001 : Record 32;
    BEGIN
      InitApplied();
      WITH ItemLedgEntry DO BEGIN
        IF Positive THEN BEGIN
          ItemApplnEntry.RESET;
          ItemApplnEntry.SETCURRENTKEY("Inbound Item Entry No.","Outbound Item Entry No.","Cost Application");
          ItemApplnEntry.SETRANGE("Inbound Item Entry No.","Entry No.");
          ItemApplnEntry.SETFILTER("Outbound Item Entry No.",'<>%1&<>%2',"Entry No.",0);
          IF ItemApplnEntry.FIND('-') THEN
            REPEAT
              InsertTempEntry(ItemApplnEntry."Outbound Item Entry No.",ItemApplnEntry.Quantity,TRUE);
            UNTIL ItemApplnEntry.NEXT = 0;
        END
      ELSE
      BEGIN
        ItemApplnEntry.RESET;
        ItemApplnEntry.SETCURRENTKEY("Outbound Item Entry No.","Item Ledger Entry No.","Cost Application");
        ItemApplnEntry.SETRANGE("Outbound Item Entry No.","Entry No.");
        ItemApplnEntry.SETRANGE("Item Ledger Entry No.","Entry No.");
        IF ItemApplnEntry.FIND('-') THEN
          REPEAT
            InsertTempEntry(ItemApplnEntry."Inbound Item Entry No.",-ItemApplnEntry.Quantity,TRUE);
          UNTIL ItemApplnEntry.NEXT = 0;
         END
      END;
    END;

    LOCAL PROCEDURE ShowQuantityOpen@19(ItemLedgEntry@1000 : Record 32);
    VAR
      ItemApplnEntry@1002 : Record 339;
      ItemLedgEntry2@1001 : Record 32;
    BEGIN
      WITH ItemLedgEntry DO
        IF ItemLedgEntry."Remaining Quantity" <>0 THEN
          IF Positive THEN BEGIN
            ItemLedgEntry2.SETRANGE("Item No.","Item No.");
            ItemLedgEntry2.SETRANGE("Location Code" ,"Location Code");
            ItemLedgEntry2.SETRANGE(Positive,FALSE);
            ItemLedgEntry2.SETRANGE(Open,TRUE);
            IF ItemLedgEntry2.FIND('-') THEN
              REPEAT
                IF (QuantityAvailable(ItemLedgEntry2)<>0) AND
                NOT ItemApplnEntry.ExistsBetween("Entry No.",ItemLedgEntry2."Entry No.") THEN
                  InsertTempEntry(ItemLedgEntry2."Entry No.",0,TRUE);
             UNTIL ItemLedgEntry2.NEXT = 0;
          END ELSE
          BEGIN
            ItemLedgEntry2.SETRANGE("Item No.","Item No.");
            ItemLedgEntry2.SETRANGE("Location Code" ,"Location Code");
            ItemLedgEntry2.SETRANGE(Positive,TRUE);
            ItemLedgEntry2.SETRANGE(Open,TRUE);
            IF ItemLedgEntry2.FIND('-') THEN
              REPEAT
                IF (QuantityAvailable(ItemLedgEntry2)<>0) AND
                NOT ItemApplnEntry.ExistsBetween("Entry No.",ItemLedgEntry2."Entry No.")
                THEN
                  InsertTempEntry(ItemLedgEntry2."Entry No.",0,TRUE);
              UNTIL ItemLedgEntry2.NEXT = 0;
          END;
    END;

    LOCAL PROCEDURE ShowCostApplied@18(ItemLedgEntry@1000 : Record 32);
    VAR
      ItemApplnEntry@1002 : Record 339;
      ItemLedgEntry2@1001 : Record 32;
    BEGIN
      InitApplied();
      WITH ItemLedgEntry DO BEGIN
        IF Positive THEN BEGIN
          ItemApplnEntry.RESET;
          ItemApplnEntry.SETCURRENTKEY("Inbound Item Entry No.","Outbound Item Entry No.","Cost Application");
          ItemApplnEntry.SETRANGE("Inbound Item Entry No.","Entry No.");
          ItemApplnEntry.SETRANGE("Item Ledger Entry No.","Entry No.");
          ItemApplnEntry.SETFILTER("Outbound Item Entry No.",'<>%1',0);
          ItemApplnEntry.SETRANGE("Cost Application",TRUE); // we want to show even average cost application
          IF ItemApplnEntry.FIND('-') THEN
            REPEAT
              InsertTempEntry(ItemApplnEntry."Outbound Item Entry No.",ItemApplnEntry.Quantity,FALSE);
            UNTIL ItemApplnEntry.NEXT = 0;
        END
      ELSE
      BEGIN
        ItemApplnEntry.RESET;
        ItemApplnEntry.SETCURRENTKEY("Outbound Item Entry No.","Item Ledger Entry No.","Cost Application");
        ItemApplnEntry.SETRANGE("Outbound Item Entry No.","Entry No.");
        ItemApplnEntry.SETFILTER("Item Ledger Entry No.",'<>%1',"Entry No.");
        ItemApplnEntry.SETRANGE("Cost Application",TRUE); // we want to show even average cost application
        IF ItemApplnEntry.FIND('-') THEN
          REPEAT
            InsertTempEntry(ItemApplnEntry."Inbound Item Entry No.",-ItemApplnEntry.Quantity,FALSE);
          UNTIL ItemApplnEntry.NEXT = 0;
         END
      END;
    END;

    LOCAL PROCEDURE ShowCostOpen@17(ItemLedgEntry@1000 : Record 32;MaxToApply@1003 : Decimal);
    VAR
      ItemApplnEntry@1002 : Record 339;
      ItemLedgEntry2@1001 : Record 32;
    BEGIN
      WITH ItemLedgEntry DO BEGIN
        IF Positive THEN BEGIN
          ItemLedgEntry2.SETRANGE("Item No.","Item No.");
          ItemLedgEntry2.SETRANGE("Location Code","Location Code");
          ItemLedgEntry2.SETRANGE(Positive,FALSE);
          ItemLedgEntry2.SETFILTER("Shipped Qty. Not Returned",'<%1&>=%2',0,-MaxToApply);
          IF MaxToApply<>0 THEN
            ItemLedgEntry2.SETFILTER("Shipped Qty. Not Returned",'<=%1',-MaxToApply);
          IF ItemLedgEntry2.FIND('-') THEN
            REPEAT
              IF (CostAvailable(ItemLedgEntry2)<>0) AND
                NOT ItemApplnEntry.ExistsBetween("Entry No.",ItemLedgEntry2."Entry No.")
              THEN
                InsertTempEntry(ItemLedgEntry2."Entry No.",0,TRUE);
           UNTIL ItemLedgEntry2.NEXT = 0;
        END ELSE BEGIN
          ItemLedgEntry2.SETRANGE("Item No.","Item No.");
          ItemLedgEntry2.SETRANGE("Location Code","Location Code");
          ItemLedgEntry2.SETRANGE(Positive,TRUE);
          ItemLedgEntry2.SETFILTER("Shipped Qty. Not Returned",'<%1&>=%2',0,-MaxToApply);
          IF ItemLedgEntry2.FIND('-') THEN
            REPEAT
              IF (CostAvailable(ItemLedgEntry2)<>0) AND
                NOT ItemApplnEntry.ExistsBetween("Entry No.",ItemLedgEntry2."Entry No.")
                THEN
                InsertTempEntry(ItemLedgEntry2."Entry No.",0,TRUE);
            UNTIL ItemLedgEntry2.NEXT = 0;
        END;
      END;
    END;

    LOCAL PROCEDURE InsertTempEntry@21(EntryNo@1000 : Integer;AppliedQty@1001 : Decimal;ShowQuantity@1003 : Boolean);
    VAR
      ItemLedgEntry@1002 : Record 32;
    BEGIN
      ItemLedgEntry.GET(EntryNo);

      IF ShowQuantity THEN
        IF AppliedQty * ItemLedgEntry.Quantity < 0 THEN
          EXIT;

      IF NOT GET(EntryNo) THEN BEGIN
        RESET;
        Rec := ItemLedgEntry;
        CALCFIELDS("Reserved Quantity");
        Quantity := AppliedQty;
        INSERT;
      END ELSE BEGIN
        Quantity := Quantity + AppliedQty;
        MODIFY;
      END;

      TotalApplied:=TotalApplied + AppliedQty;
    END;

    LOCAL PROCEDURE InitApplied@13();
    BEGIN
      CLEAR(TotalApplied);
    END;

    LOCAL PROCEDURE GetApplied@14() : Decimal;
    BEGIN
      EXIT(TotalApplied);
    END;

    LOCAL PROCEDURE RemoveApplications@1(Inbound@1000 : Integer;OutBound@1001 : Integer);
    VAR
      Application@1003 : Record 339;
    BEGIN
      Application.SETCURRENTKEY("Inbound Item Entry No.",Application."Outbound Item Entry No.");
      Application.SETRANGE("Inbound Item Entry No.",Inbound);
      Application.SETRANGE("Outbound Item Entry No.",OutBound);
      IF Application.FIND('-') THEN REPEAT
        Apply.UnApply(Application);
      UNTIL Application.NEXT = 0;
    END;

    LOCAL PROCEDURE AutoReapply@6();
    BEGIN
      Apply.RedoApplications;
      Apply.CostAdjust;
    END;

    LOCAL PROCEDURE UnapplyRec@3();
    VAR
      LoopRec@1000 : Record 32;
      Applyrec@1001 : Record 32;
      AppliedRec@1002 : Record 32;
    BEGIN
      Applyrec.GET(RecordToShow."Entry No.");
      CurrForm.SETSELECTIONFILTER(LoopRec);
      IF LoopRec.FINDFIRST THEN
      REPEAT
        AppliedRec := LoopRec;
        IF AppliedRec."Entry No." <> 0 THEN BEGIN
          IF Applyrec.Positive THEN
            RemoveApplications(Applyrec."Entry No.",AppliedRec."Entry No.")
          ELSE
            RemoveApplications(AppliedRec."Entry No.",Applyrec."Entry No.");
        END;
      UNTIL LoopRec.NEXT <= 0;
      Show;
    END;

    PROCEDURE ApplyRec@5();
    VAR
      Applyrec@1000 : Record 32;
      LoopRec@1001 : Record 32;
    BEGIN
      Applyrec.GET(RecordToShow."Entry No.");
      CurrForm.SETSELECTIONFILTER(LoopRec);
      IF LoopRec.FINDFIRST THEN REPEAT
        AppliedRec := LoopRec;
        IF AppliedRec."Entry No." <> 0 THEN BEGIN
          Apply.ReApply(Applyrec,AppliedRec."Entry No.");
        END;
      UNTIL LoopRec.NEXT <= 0;
      Show;
    END;

    LOCAL PROCEDURE GetApplQty@10();
    VAR
      ItemLedgEntry@1000 : Record 32;
    BEGIN
      ItemLedgEntry.GET("Entry No.");
      ApplQty := Quantity;
      Qty := ItemLedgEntry.Quantity;
    END;

    LOCAL PROCEDURE QuantityAvailable@11(ILE@1000 : Record 32) : Decimal;
    VAR
      Apprec@1102601000 : Record 339;
    BEGIN
      WITH ILE DO BEGIN
        CALCFIELDS("Reserved Quantity");
        EXIT("Remaining Quantity"-"Reserved Quantity");
      END;
    END;

    LOCAL PROCEDURE CostAvailable@1102601000(ILE@1000 : Record 32) : Decimal;
    VAR
      Apprec@1102601000 : Record 339;
    BEGIN
      WITH ILE DO BEGIN
        IF ILE."Shipped Qty. Not Returned"<>0 THEN
          EXIT(-ILE."Shipped Qty. Not Returned")
        ELSE
          EXIT("Remaining Quantity"+Apprec.Returned("Entry No."));
      END;
    END;

    BEGIN
    END.
  }
}
