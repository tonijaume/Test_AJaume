OBJECT Form 35306 Cartera Fact. Statistics FB
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVES6.00;
  }
  PROPERTIES
  {
    Width=6710;
    Height=5060;
    Editable=No;
    CaptionML=ENU=Cartera Fact. Statistics FB;
    SourceTable=Table18;
    OnAfterGetRecord=VAR
                       CostCalcMgt@1000 : Codeunit 5836;
                     BEGIN
                       SETRANGE("No.");

                       IF CurrentDate <> WORKDATE THEN BEGIN
                         CurrentDate := WORKDATE;
                         DateFilterCalc.CreateAccountingPeriodFilter(CustDateFilter[1],CustDateName[1],CurrentDate,0);
                         DateFilterCalc.CreateFiscalYearFilter(CustDateFilter[2],CustDateName[2],CurrentDate,0);
                         DateFilterCalc.CreateFiscalYearFilter(CustDateFilter[3],CustDateName[3],CurrentDate,-1);
                       END;

                       SETRANGE("Date Filter",0D,CurrentDate);
                       CALCFIELDS(
                         Balance,"Balance (LCY)","Balance Due","Balance Due (LCY)",
                         "Outstanding Orders (LCY)","Shipped Not Invoiced (LCY)");

                       TotalAmountLCY := "Balance (LCY)" + "Outstanding Orders (LCY)" + "Shipped Not Invoiced (LCY)" + "Outstanding Invoices (LCY)";

                       FOR i := 1 TO 4 DO BEGIN
                         SETFILTER("Date Filter",CustDateFilter[i]);
                         CALCFIELDS(
                           "Sales (LCY)","Profit (LCY)","Inv. Discounts (LCY)","Inv. Amounts (LCY)","Pmt. Discounts (LCY)",
                           "Pmt. Disc. Tolerance (LCY)","Pmt. Tolerance (LCY)",
                           "Fin. Charge Memo Amounts (LCY)","Cr. Memo Amounts (LCY)","Payments (LCY)",
                           "Reminder Amounts (LCY)","Refunds (LCY)","Other Amounts (LCY)");
                         CustSalesLCY[i] := "Sales (LCY)";
                         CustProfit[i] := "Profit (LCY)" + CostCalcMgt.NonInvtblCostAmt(Rec);
                         AdjmtCostLCY[i] := CostCalcMgt.CalcCustAdjmtCostLCY(Rec);
                         AdjCustProfit[i] := CustProfit[i] + AdjmtCostLCY[i];

                         IF "Sales (LCY)" <> 0 THEN BEGIN
                           ProfitPct[i] := ROUND(100 * CustProfit[i] / "Sales (LCY)",0.1);
                           AdjProfitPct[i] := ROUND(100 * AdjCustProfit[i] / "Sales (LCY)",0.1);
                         END ELSE BEGIN
                           ProfitPct[i] := 0;
                           AdjProfitPct[i] := 0;
                         END;

                         InvAmountsLCY[i] := "Inv. Amounts (LCY)";
                         CustInvDiscAmountLCY[i] := "Inv. Discounts (LCY)";
                         CustPaymentDiscLCY[i] := "Pmt. Discounts (LCY)";
                         CustPaymentDiscTolLCY[i] := "Pmt. Disc. Tolerance (LCY)";
                         CustPaymentTolLCY[i] := "Pmt. Tolerance (LCY)";
                         CustReminderChargeAmtLCY[i] := "Reminder Amounts (LCY)";
                         CustFinChargeAmtLCY[i] := "Fin. Charge Memo Amounts (LCY)";
                         CustCrMemoAmountsLCY[i] := "Cr. Memo Amounts (LCY)";
                         CustPaymentsLCY[i] := "Payments (LCY)";
                         CustRefundsLCY[i] := "Refunds (LCY)";
                         CustOtherAmountsLCY[i] := "Other Amounts (LCY)";
                       END;
                       SETRANGE("Date Filter",0D,CurrentDate);

                       UpdateDocStatistics;
                     END;

  }
  CONTROLS
  {
    { 1100035;TextBox   ;3740 ;4400 ;2750 ;440  ;Editable=No;
                                                 CaptionML=ENU=Rejected;
                                                 SourceExpr=RejectedRemainingAmtLCY[5];
                                                 AutoFormatType=1;
                                                 OnDrillDown=BEGIN
                                                               DrillDownRejected(0,0);
                                                             END;
                                                              }
    { 1100043;TextBox   ;3740 ;1870 ;2750 ;440  ;Editable=No;
                                                 CaptionML=ENU=Rejected;
                                                 SourceExpr=NoRejected[5] }
    { 1100049;Label     ;330  ;1870 ;3330 ;440  ;ParentControl=1100043;
                                                 CaptionML=ENU=Rejected }
    { 1100036;TextBox   ;3740 ;3850 ;2750 ;440  ;Editable=No;
                                                 CaptionML=ENU=Honored;
                                                 SourceExpr=HonoredRemainingAmtLCY[5];
                                                 AutoFormatType=1;
                                                 OnDrillDown=BEGIN
                                                               DrillDownHonored(0,0);
                                                             END;
                                                              }
    { 1100042;TextBox   ;3740 ;1320 ;2750 ;440  ;Editable=No;
                                                 CaptionML=ENU=Honored;
                                                 SourceExpr=NoHonored[5] }
    { 1100048;Label     ;330  ;1320 ;3330 ;440  ;ParentControl=1100042;
                                                 CaptionML=ENU=Honored }
    { 1100040;TextBox   ;3740 ;3300 ;2750 ;440  ;Editable=No;
                                                 CaptionML=ENU=Open;
                                                 SourceExpr=OpenRemainingAmtLCY[5];
                                                 AutoFormatType=1;
                                                 OnDrillDown=BEGIN
                                                               DrillDownOpen(0,0);
                                                             END;
                                                              }
    { 1100041;TextBox   ;3740 ;770  ;2750 ;440  ;Editable=No;
                                                 CaptionML=ENU=Open;
                                                 SourceExpr=NoOpen[5] }
    { 1100047;Label     ;330  ;770  ;3330 ;440  ;ParentControl=1100041;
                                                 CaptionML=ENU=Open }
    { 1100044;Label     ;220  ;2750 ;4070 ;440  ;FontBold=No;
                                                 CaptionML=ENU=Remaining Amt.  (LCY) }
    { 1100046;Label     ;220  ;220  ;4070 ;440  ;FontBold=No;
                                                 CaptionML=ENU=No. of Invoices }
    { 1100000;Label     ;330  ;4400 ;3330 ;440  ;ParentControl=1100035;
                                                 CaptionML=ENU=Rejected }
    { 1100001;Label     ;330  ;3850 ;3330 ;440  ;ParentControl=1100036;
                                                 CaptionML=ENU=Honored }
    { 1100002;Label     ;330  ;3300 ;3330 ;440  ;ParentControl=1100040;
                                                 CaptionML=ENU=Open }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Overdue Amounts (LCY) as of %1';
      ValueEntry@1017 : Record 5802;
      DateFilterCalc@1001 : Codeunit 358;
      CustDateFilter@1002 : ARRAY [4] OF Text[30];
      CustDateName@1003 : ARRAY [4] OF Text[30];
      TotalAmountLCY@1004 : Decimal;
      CurrentDate@1005 : Date;
      CustSalesLCY@1006 : ARRAY [4] OF Decimal;
      AdjmtCostLCY@1022 : ARRAY [4] OF Decimal;
      CustProfit@1007 : ARRAY [4] OF Decimal;
      ProfitPct@1008 : ARRAY [4] OF Decimal;
      AdjCustProfit@1024 : ARRAY [4] OF Decimal;
      AdjProfitPct@1023 : ARRAY [4] OF Decimal;
      CustInvDiscAmountLCY@1009 : ARRAY [4] OF Decimal;
      CustPaymentDiscLCY@1010 : ARRAY [4] OF Decimal;
      CustPaymentDiscTolLCY@1019 : ARRAY [4] OF Decimal;
      CustPaymentTolLCY@1018 : ARRAY [4] OF Decimal;
      CustReminderChargeAmtLCY@1011 : ARRAY [4] OF Decimal;
      CustFinChargeAmtLCY@1012 : ARRAY [4] OF Decimal;
      CustCrMemoAmountsLCY@1013 : ARRAY [4] OF Decimal;
      CustPaymentsLCY@1014 : ARRAY [4] OF Decimal;
      CustRefundsLCY@1020 : ARRAY [4] OF Decimal;
      CustOtherAmountsLCY@1021 : ARRAY [4] OF Decimal;
      i@1015 : Integer;
      InvAmountsLCY@1016 : ARRAY [4] OF Decimal;
      Text001@1025 : TextConst 'ENU=Placeholder';
      DocumentSituationFilter@1100010 : ARRAY [3] OF ' ,Posted BG/PO,Closed BG/PO,BG/PO,Cartera,Closed Documents';
      NoOpen@1100011 : ARRAY [5] OF Integer;
      NoHonored@1100012 : ARRAY [5] OF Integer;
      NoRejected@1100013 : ARRAY [5] OF Integer;
      NoRedrawn@1100014 : ARRAY [5] OF Integer;
      OpenAmtLCY@1100015 : ARRAY [5] OF Decimal;
      HonoredAmtLCY@1100016 : ARRAY [5] OF Decimal;
      RejectedAmtLCY@1100017 : ARRAY [5] OF Decimal;
      RedrawnAmtLCY@1100018 : ARRAY [5] OF Decimal;
      OpenRemainingAmtLCY@1100019 : ARRAY [5] OF Decimal;
      RejectedRemainingAmtLCY@1100020 : ARRAY [5] OF Decimal;
      HonoredRemainingAmtLCY@1100021 : ARRAY [5] OF Decimal;
      RedrawnRemainingAmtLCY@1100022 : ARRAY [5] OF Decimal;
      j@1100023 : Integer;

    PROCEDURE UpdateDocStatistics@1100100();
    VAR
      CustLedgEntry@1100000 : Record 21;
    BEGIN
      DocumentSituationFilter[1] := DocumentSituationFilter::Cartera;
      DocumentSituationFilter[2] := DocumentSituationFilter::"BG/PO";
      DocumentSituationFilter[3] := DocumentSituationFilter::"Posted BG/PO";

      WITH CustLedgEntry DO BEGIN
        SETCURRENTKEY("Customer No.","Document Type","Document Situation","Document Status");
        SETRANGE("Customer No.",Rec."No.");
        FOR j := 1 TO 5 DO BEGIN
          CASE j OF
            4: // Closed Bill Group and Closed Documents
              BEGIN
                SETRANGE("Document Type","Document Type"::Bill);
                SETFILTER("Document Situation",'%1|%2',
                  "Document Situation"::"Closed BG/PO",
                  "Document Situation"::"Closed Documents");
              END;
            5: // Invoices
              BEGIN
                SETRANGE("Document Type","Document Type"::Invoice);
                SETFILTER("Document Situation",'<>0');
              END;
            ELSE BEGIN
              SETRANGE("Document Type","Document Type"::Bill);
              SETRANGE("Document Situation",DocumentSituationFilter[j]);
            END;
          END;
          SETRANGE("Document Status","Document Status"::Open);
          CALCSUMS("Amount (LCY) stats.","Remaining Amount (LCY) stats.");
          OpenAmtLCY[j] := "Amount (LCY) stats.";
          OpenRemainingAmtLCY[j] := "Remaining Amount (LCY) stats.";
          NoOpen[j] := COUNT;
          SETRANGE("Document Status");

          SETRANGE("Document Status","Document Status"::Honored);
          CALCSUMS("Amount (LCY) stats.","Remaining Amount (LCY) stats.");
          HonoredAmtLCY[j] := "Amount (LCY) stats.";
          HonoredRemainingAmtLCY[j] := "Remaining Amount (LCY) stats.";
          NoHonored[j] := COUNT;
          SETRANGE("Document Status");

          SETRANGE("Document Status","Document Status"::Rejected);
          CALCSUMS("Amount (LCY) stats.","Remaining Amount (LCY) stats.");
          RejectedAmtLCY[j] := "Amount (LCY) stats.";
          RejectedRemainingAmtLCY[j] := "Remaining Amount (LCY) stats.";
          NoRejected[j] := COUNT;
          SETRANGE("Document Status");

          SETRANGE("Document Status","Document Status"::Redrawn);
          CALCSUMS("Amount (LCY) stats.","Remaining Amount (LCY) stats.");
          RedrawnAmtLCY[j] := "Amount (LCY) stats.";
          RedrawnRemainingAmtLCY[j] := "Remaining Amount (LCY) stats.";
          NoRedrawn[j] := COUNT;
          SETRANGE("Document Status");

          SETRANGE("Document Situation");
        END;
      END;
    END;

    PROCEDURE DrillDownOpen@1100101(Situation@1100000 : ' ,Posted BG/PO,Closed BG/PO,BG/PO,Cartera,Closed Documents';DocType@1100001 : 'Invoice,Bill');
    VAR
      CustLedgEntry@1100002 : Record 21;
      CustLedgEntriesForm@1100003 : Form 25;
    BEGIN
      WITH CustLedgEntry DO BEGIN
        SETCURRENTKEY("Customer No.","Document Type","Document Situation","Document Status");
        SETRANGE("Customer No.",Rec."No.");
        CASE Situation OF
          Situation::Cartera:
            SETRANGE("Document Situation","Document Situation"::Cartera);
          Situation::"BG/PO":
            SETRANGE("Document Situation","Document Situation"::"BG/PO");
          Situation::"Posted BG/PO":
            SETRANGE("Document Situation","Document Situation"::"Posted BG/PO");
          Situation::"Closed BG/PO":
            SETFILTER("Document Situation",'%1|%2',
              "Document Situation"::"Closed BG/PO",
              "Document Situation"::"Closed Documents");
          ELSE
            SETFILTER("Document Situation",'<>0');
        END;
        CASE DocType OF
          DocType::Invoice:
            SETRANGE("Document Type","Document Type"::Invoice);
          DocType::Bill:
            SETRANGE("Document Type","Document Type"::Bill);
        END;

        SETRANGE("Document Status","Document Status"::Open);
        CustLedgEntriesForm.SETTABLEVIEW(CustLedgEntry);
        CustLedgEntriesForm.SETRECORD(CustLedgEntry);
        CustLedgEntriesForm.RUNMODAL;
        SETRANGE("Document Status");
        SETRANGE("Document Situation");
      END;
    END;

    PROCEDURE DrillDownHonored@1100102(Situation@1100000 : ' ,Posted BG/PO,Closed BG/PO,BG/PO,Cartera,Closed Documents';DocType@1100001 : 'Invoice,Bill');
    VAR
      CustLedgEntry@1100002 : Record 21;
      CustLedgEntriesForm@1100003 : Form 25;
    BEGIN
      WITH CustLedgEntry DO BEGIN
        SETCURRENTKEY("Customer No.","Document Type","Document Situation","Document Status");
        SETRANGE("Customer No.",Rec."No.");
        CASE Situation OF
          Situation::Cartera:
            SETRANGE("Document Situation","Document Situation"::Cartera);
          Situation::"BG/PO":
            SETRANGE("Document Situation","Document Situation"::"BG/PO");
          Situation::"Posted BG/PO":
            SETRANGE("Document Situation","Document Situation"::"Posted BG/PO");
          Situation::"Closed BG/PO":
            SETFILTER("Document Situation",'%1|%2',
              "Document Situation"::"Closed BG/PO",
              "Document Situation"::"Closed Documents");
          ELSE
            SETFILTER("Document Situation",'<>0');
        END;
        CASE DocType OF
          DocType::Invoice:
            SETRANGE("Document Type","Document Type"::Invoice);
          DocType::Bill:
            SETRANGE("Document Type","Document Type"::Bill);
        END;

        SETRANGE("Document Status","Document Status"::Honored);
        CustLedgEntriesForm.SETTABLEVIEW(CustLedgEntry);
        CustLedgEntriesForm.SETRECORD(CustLedgEntry);
        CustLedgEntriesForm.RUNMODAL;
        SETRANGE("Document Status");
        SETRANGE("Document Situation");
      END;
    END;

    PROCEDURE DrillDownRejected@1100103(Situation@1100000 : ' ,Posted BG/PO,Closed BG/PO,BG/PO,Cartera,Closed Documents';DocType@1100001 : 'Invoice,Bill');
    VAR
      CustLedgEntry@1100002 : Record 21;
      CustLedgEntriesForm@1100003 : Form 25;
    BEGIN
      WITH CustLedgEntry DO BEGIN
        SETCURRENTKEY("Customer No.","Document Type","Document Situation","Document Status");
        SETRANGE("Customer No.",Rec."No.");
        CASE Situation OF
          Situation::Cartera:
            SETRANGE("Document Situation","Document Situation"::Cartera);
          Situation::"BG/PO":
            SETRANGE("Document Situation","Document Situation"::"BG/PO");
          Situation::"Posted BG/PO":
            SETRANGE("Document Situation","Document Situation"::"Posted BG/PO");
          Situation::"Closed BG/PO":
            SETFILTER("Document Situation",'%1|%2',
              "Document Situation"::"Closed BG/PO",
              "Document Situation"::"Closed Documents");
          ELSE
            SETFILTER("Document Situation",'<>0');
        END;
        CASE DocType OF
          DocType::Invoice:
            SETRANGE("Document Type","Document Type"::Invoice);
          DocType::Bill:
            SETRANGE("Document Type","Document Type"::Bill);
        END;

        SETRANGE("Document Status","Document Status"::Rejected);
        CustLedgEntriesForm.SETTABLEVIEW(CustLedgEntry);
        CustLedgEntriesForm.SETRECORD(CustLedgEntry);
        CustLedgEntriesForm.RUNMODAL;
        SETRANGE("Document Status");
        SETRANGE("Document Situation");
      END;
    END;

    PROCEDURE DrillDownRedrawn@1100104(Situation@1100000 : ' ,Posted BG/PO,Closed BG/PO,BG/PO,Cartera,Closed Documents';DocType@1100001 : 'Invoice,Bill');
    VAR
      CustLedgEntry@1100002 : Record 21;
      CustLedgEntriesForm@1100003 : Form 25;
    BEGIN
      WITH CustLedgEntry DO BEGIN
        SETCURRENTKEY("Customer No.","Document Type","Document Situation","Document Status");
        SETRANGE("Customer No.",Rec."No.");
        CASE Situation OF
          Situation::Cartera:
            SETRANGE("Document Situation","Document Situation"::Cartera);
          Situation::"BG/PO":
            SETRANGE("Document Situation","Document Situation"::"BG/PO");
          Situation::"Posted BG/PO":
            SETRANGE("Document Situation","Document Situation"::"Posted BG/PO");
          Situation::"Closed BG/PO",Situation::"Closed Documents":
            SETFILTER("Document Situation",'%1|%2',
              "Document Situation"::"Closed BG/PO",
              "Document Situation"::"Closed Documents");
          ELSE
            SETFILTER("Document Situation",'<>0');
        END;
        CASE DocType OF
          DocType::Invoice:
            SETRANGE("Document Type","Document Type"::Invoice);
          DocType::Bill:
            SETRANGE("Document Type","Document Type"::Bill);
        END;
        SETRANGE("Document Status","Document Status"::Redrawn);
        CustLedgEntriesForm.SETTABLEVIEW(CustLedgEntry);
        CustLedgEntriesForm.SETRECORD(CustLedgEntry);
        CustLedgEntriesForm.RUNMODAL;
        SETRANGE("Document Status");
        SETRANGE("Document Situation");
      END;
    END;

    BEGIN
    END.
  }
}
