OBJECT XMLport 5504 Check Prod. Schedule Conflict
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVW16.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Check Prod. Schedule Conflict;
               ESP=Comprobar conflicto en previsi¢n de producci¢n];
    OnPreXMLport=BEGIN
                   ProdOrderLine.CLEARMARKS;
                   "Prod. Order Line".CLEARMARKS;
                   ConflictExist := FALSE;
                   CLEAR(ProdSchedConflictsXML);
                 END;

    OnPostXMLport=VAR
                    ProdOrderLine1@1000 : Record 5406;
                  BEGIN
                    COMMIT;
                    IF "Prod. Order Line".FIND('-') THEN BEGIN
                      REPEAT
                        IF NOT ProdOrderLine1.GET("Prod. Order Line".Status,"Prod. Order Line"."Prod. Order No.",
                          "Prod. Order Line"."Line No.") THEN BEGIN
                          ConflictExist := TRUE;
                          "Prod. Order Line".MARK(TRUE);
                        END ELSE BEGIN
                          IF ProdOrderLine1."Item No." <> "Prod. Order Line"."Item No." THEN
                            MarkProdOrderLine;
                        END;

                        "Prod. Order Routing Line".SETRANGE(Status,"Prod. Order Line".Status);
                        "Prod. Order Routing Line".SETRANGE("Prod. Order No.","Prod. Order Line"."Prod. Order No.");
                        "Prod. Order Routing Line".SETRANGE("Routing Reference No.","Prod. Order Line"."Routing Reference No.");
                        "Prod. Order Routing Line".SETRANGE("Routing No.","Prod. Order Line"."Routing No.");

                        IF "Prod. Order Routing Line".FIND('-') THEN
                          REPEAT
                            ProdOrderRtngLine.RESET;
                            IF ProdOrderRtngLine.GET("Prod. Order Routing Line".Status,"Prod. Order Routing Line"."Prod. Order No.",
                              "Prod. Order Routing Line"."Routing Reference No.","Prod. Order Routing Line"."Routing No.",
                              "Prod. Order Routing Line"."Operation No.")
                            THEN;

                            IF (ProdOrderRtngLine."Previous Operation No." <> "Prod. Order Routing Line"."Previous Operation No.") OR
                               (ProdOrderRtngLine."Next Operation No." <> "Prod. Order Routing Line"."Next Operation No.") OR
                               (ProdOrderRtngLine.Type <> "Prod. Order Routing Line".Type) OR
                               (ProdOrderRtngLine."No." <> "Prod. Order Routing Line"."No.") OR
                               (ProdOrderRtngLine."Routing Status" <> "Prod. Order Routing Line"."Routing Status") OR
                               (FORMAT(ProdOrderRtngLine."Starting Date") <> FORMAT("Prod. Order Routing Line"."Starting Date")) OR
                               (FORMAT(ProdOrderRtngLine."Starting Time") <> FORMAT("Prod. Order Routing Line"."Starting Time")) OR
                               (FORMAT(ProdOrderRtngLine."Ending Date") <> FORMAT("Prod. Order Routing Line"."Ending Date")) OR
                               (FORMAT(ProdOrderRtngLine."Ending Time") <> FORMAT("Prod. Order Routing Line"."Ending Time"))
                            THEN
                              MarkProdOrderLine;
                            IF CalendarConflictExists THEN
                              MarkProdOrderLine;
                          UNTIL "Prod. Order Routing Line".NEXT = 0;
                      UNTIL "Prod. Order Line".NEXT = 0;

                      IF ConflictExist THEN
                        CreateConflictResult;
                    END
                  END;

  }
  ELEMENTS
  {
    { [{B1FA00D8-07CF-4449-8DCF-8F320949187F}];  ;NavisionGantt       ;Element ;Text    ;
                                                  MaxOccurs=Once }

    { [{3AD605FE-E4BD-47FA-92AA-D35E472296AD}];1 ;ProductionOrders    ;Element ;Text    ;
                                                  MaxOccurs=Once;
                                                  Export::OnBeforePassVariable=VAR
                                                                                 ProdOrder@1000 : Record 5405;
                                                                               BEGIN
                                                                               END;
                                                                                }

    { [{95F47CD3-811B-4196-B9CF-DA6722E9302C}];2 ;ProductionOrder     ;Element ;Table   ;
                                                  SourceTable=Table5406;
                                                  Temporary=Yes;
                                                  MinOccurs=Zero }

    { [{ED2D1795-013E-4B90-AD2D-E61239A9028D}];3 ;Status              ;Element ;Field   ;
                                                  DataType=Option;
                                                  SourceField=Prod. Order Line::Status }

    { [{C3EB4E1F-AFD2-41F3-8374-1781035F0B32}];3 ;No                  ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Prod. Order Line::Prod. Order No.;
                                                  Import::OnAfterAssignVariable=6 }

    { [{42E0D1A7-B85A-4636-BC70-3FA02856E07D}];3 ;ProductionOrderLineNo;Element;Field   ;
                                                  DataType=Integer;
                                                  SourceField=Prod. Order Line::Line No.;
                                                  Import::OnAfterAssignField=VAR
                                                                               ProdOrderLine1@1000 : Record 5406;
                                                                             BEGIN
                                                                               IF NOT ProdOrderLine1.GET("Prod. Order Line".Status,"Prod. Order Line"."Prod. Order No.","Prod. Order Line"."Line No.") THEN BEGIN
                                                                                 ConflictExist := TRUE;
                                                                                 "Prod. Order Line".MARK(TRUE);
                                                                               END
                                                                             END;
                                                                              }

    { [{C4571AA2-EADD-4E55-95F8-8A7A0F9C8E94}];3 ;ItemNo              ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Prod. Order Line::Item No. }

    { [{E47A4104-5F0C-4DAB-A697-C41F8DFE74A2}];3 ;Quantity            ;Element ;Field   ;
                                                  DataType=Decimal;
                                                  SourceField=Prod. Order Line::Quantity;
                                                  Export::OnBeforePassVariable=30 }

    { [{29041BD8-E232-4936-B71B-875D485AA631}];3 ;DueDate             ;Element ;Text    ;
                                                  VariableName=PODueDate;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 PODueDate := ProdSchedMgt.ConvertFromDDMMYY(PODueDate);
                                                                                 EVALUATE("Prod. Order Line"."Due Date",PODueDate);
                                                                               END;
                                                                                }

    { [{6587C06B-D341-46C1-AAC9-CEAA78ED0E99}];3 ;UnitOfMeasure       ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Prod. Order Line::Unit of Measure Code }

    { [{23BFD290-803E-4F3A-A31D-768BF2DDD2F8}];3 ;RoutingReferenceNo  ;Element ;Field   ;
                                                  DataType=Integer;
                                                  SourceField=Prod. Order Line::Routing Reference No. }

    { [{A9258EF9-A1E9-4843-9FA2-0614269EDC94}];3 ;RoutingNo           ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Prod. Order Line::Routing No. }

    { [{3F137D44-6825-4AE5-AC27-E21CD7AA743D}];3 ;Routing             ;Element ;Text     }

    { [{79570CE3-79A1-4DFB-9DF5-7F43D57B960C}];4 ;Operation           ;Element ;Table   ;
                                                  SourceTable=Table5409;
                                                  Temporary=Yes;
                                                  MinOccurs=Zero }

    { [{E16BBE9E-980D-4C6D-9530-765A5790A626}];5 ;ProductionOrderStatus;Element;Field   ;
                                                  DataType=Option;
                                                  SourceField=Prod. Order Routing Line::Status }

    { [{4B51F22B-2F5F-4F3E-81C7-3393DA1E95FC}];5 ;ProductionOrderNo   ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Prod. Order Routing Line::Prod. Order No. }

    { [{1F34CD3B-FE5C-4937-94EA-7B86B3624376}];5 ;RoutingReferenceNo  ;Element ;Field   ;
                                                  DataType=Integer;
                                                  SourceField=Prod. Order Routing Line::Routing Reference No. }

    { [{63241076-61BC-46E5-8392-40CD1BA14108}];5 ;RoutingNo           ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Prod. Order Routing Line::Routing No. }

    { [{64719B4A-38D5-4F4F-B30D-6DC465F8D66E}];5 ;OperationNo         ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Prod. Order Routing Line::Operation No. }

    { [{34900273-F41A-4D0B-97A4-C4267F172083}];5 ;PrevOperationNo     ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Prod. Order Routing Line::Previous Operation No. }

    { [{F10624B7-1E3E-463E-8245-290C5F08C440}];5 ;NextOperationNo     ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Prod. Order Routing Line::Next Operation No. }

    { [{69976A1C-8C6E-4693-BA2F-AE168B35473F}];5 ;Type                ;Element ;Field   ;
                                                  DataType=Option;
                                                  SourceField=Prod. Order Routing Line::Type;
                                                  Import::OnAfterAssignVariable=8 }

    { [{C2B41A6C-E288-44C9-A557-598306789E2E}];5 ;No                  ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Prod. Order Routing Line::No. }

    { [{C4CB240E-9657-4687-9862-2AC38220C4A2}];5 ;StartingDate        ;Element ;Text    ;
                                                  VariableName=POStartDate;
                                                  DataType=Date;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  POStartDate := ProdSchedMgt.ConvertFromDDMMYY(POStartDate);
                                                                                  EVALUATE("Prod. Order Routing Line"."Starting Date",POStartDate);
                                                                                END;
                                                                                 }

    { [{241EC3CC-FF4C-422F-BBD0-C706580A9A23}];5 ;StartingTime        ;Element ;Field   ;
                                                  DataType=Time;
                                                  SourceField=Prod. Order Routing Line::Starting Time }

    { [{506CCED7-8516-40F8-8538-CD44445D2B4F}];5 ;EndingDate          ;Element ;Text    ;
                                                  VariableName=POEndDate;
                                                  DataType=Date;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  POEndDate := ProdSchedMgt.ConvertFromDDMMYY(POEndDate);
                                                                                  EVALUATE("Prod. Order Routing Line"."Ending Date",POEndDate);
                                                                                END;
                                                                                 }

    { [{43F0E9CD-1D28-4191-8B22-B5EFD04492AC}];5 ;EndingTime          ;Element ;Field   ;
                                                  DataType=Time;
                                                  SourceField=Prod. Order Routing Line::Ending Time }

    { [{B9D6275C-C426-4257-9B3B-0D6B95FA0462}];5 ;RoutingStatus       ;Element ;Field   ;
                                                  DataType=Option;
                                                  SourceField=Prod. Order Routing Line::Routing Status }

    { [{DA3C6A6B-1C71-46A3-899E-371806F042C8}];5 ;CapacityNeed        ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Export::OnBeforePassVariable=VAR
                                                                                 ProdOrderCapNeed@1000 : Record 5410;
                                                                               BEGIN
                                                                               END;
                                                                                }

    { [{FAC3EA1D-3CEE-43A7-9930-9B34BF957EDF}];6 ;DivideFactor        ;Attribute;Text   ;
                                                  VariableName=CapNeedDivideFactor;
                                                  Export::OnBeforePassVariable=VAR
                                                                                 ProdOrderCapNeed@1000 : Record 5410;
                                                                               BEGIN
                                                                               END;
                                                                                }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      ProdOrderLine@1002 : Record 5406;
      ProdOrderRtngLine@1003 : Record 5409;
      ProdSchedMgt@1004 : Codeunit 5500;
      ProdSchedConflictsXML@1006 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60";
      ConflictExist@1001 : Boolean;
      Text000@1005 : TextConst 'ENU=Error creating conflict result xml;ESP=Error al crear el archivo xml de resultado de conflictos';

    PROCEDURE CalendarConflictExists@3() : Boolean;
    VAR
      ProdSchedCalc@1000 : Codeunit 5501;
    BEGIN
      ProdSchedCalc.Initialize("Prod. Order Routing Line"."Starting Date",
        "Prod. Order Routing Line"."Starting Time","Prod. Order Routing Line"."Ending Date","Prod. Order Routing Line"."Ending Time",
        "Prod. Order Routing Line".Type,"Prod. Order Routing Line"."No.",'0','1',FALSE);
      IF ProdSchedCalc.RUN(ProdOrderRtngLine) THEN;
      EXIT(ProdSchedCalc.CalculationErrorExist);
    END;

    PROCEDURE MarkProdOrderLine@1();
    BEGIN
      ConflictExist := TRUE;
      IF NOT ProdOrderLine.GET("Prod. Order Line".Status,"Prod. Order Line"."Prod. Order No.","Prod. Order Line"."Line No.") THEN;
      ProdOrderLine.MARK(TRUE);
    END;

    PROCEDURE CreateConflictResult@2();
    VAR
      ProdSchedSetup@1003 : Record 5500;
      ProdSchedConflicts@1002 : XMLport 5506;
      IStream@1001 : InStream;
      OStream@1000 : OutStream;
    BEGIN
      IF ISCLEAR(ProdSchedConflictsXML) THEN
        CREATE(ProdSchedConflictsXML);

      ProdSchedSetup.LOCKTABLE;
      ProdSchedSetup.GET;
      ProdSchedSetup.GanttXML.CREATEOUTSTREAM(OStream);
      ProdSchedConflicts.SETDESTINATION(OStream);
      ProdSchedConflicts.SETTABLEVIEW(ProdOrderLine);
      ProdSchedConflicts.SetDeletedOrders("Prod. Order Line");
      IF ProdSchedConflicts.EXPORT THEN BEGIN
        ProdSchedSetup.GanttXML.CREATEINSTREAM(IStream);
        ProdSchedConflictsXML.load(IStream);
      END ELSE
        ERROR(Text000);
    END;

    PROCEDURE ChangesExist@4() : Boolean;
    BEGIN
      EXIT(ConflictExist);
    END;

    PROCEDURE GetConflicts@6(VAR ConflictResultXML1@1000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60");
    BEGIN
      ProdSchedConflictsXML.save(ConflictResultXML1);
    END;

    EVENT ProdSchedConflictsXML@1006::ondataavailable@198();
    BEGIN
    END;

    EVENT ProdSchedConflictsXML@1006::onreadystatechange@-609();
    BEGIN
    END;

    BEGIN
    END.
  }
}
