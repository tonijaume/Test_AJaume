OBJECT XMLport 5505 Update Production Schedule
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVW16.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Update Production Schedule;
               ESP=Actualizar previsi¢n de producci¢n];
    OnPreXMLport=BEGIN
                   ProdOrderLine.CLEARMARKS;
                   "Prod. Order Line".CLEARMARKS;
                   ConflictExist := FALSE;
                   CLEAR(ProdSchedConflictsXML);
                 END;

    OnPostXMLport=BEGIN
                    COMMIT;
                    IF "Prod. Order Line".FIND('-') THEN BEGIN
                      REPEAT
                        "Prod. Order Routing Line".SETRANGE(Status,"Prod. Order Line".Status);
                        "Prod. Order Routing Line".SETRANGE("Prod. Order No.","Prod. Order Line"."Prod. Order No.");
                        "Prod. Order Routing Line".SETRANGE("Routing Reference No.","Prod. Order Line"."Routing Reference No.");
                        "Prod. Order Routing Line".SETRANGE("Routing No.","Prod. Order Line"."Routing No.");

                        IF "Prod. Order Routing Line".FIND('-') THEN
                          REPEAT
                            UpdateRoutingLine;
                          UNTIL "Prod. Order Routing Line".NEXT = 0;
                      UNTIL "Prod. Order Line".NEXT = 0;
                      IF ConflictExist THEN
                        CreateConflictResult;
                    END
                  END;

  }
  ELEMENTS
  {
    { [{B1FA00D8-07CF-4449-8DCF-8F320949187F}];  ;NavisionGantt       ;Element ;Text     }

    { [{3AD605FE-E4BD-47FA-92AA-D35E472296AD}];1 ;ProductionOrders    ;Element ;Text    ;
                                                  Export::OnBeforePassVariable=VAR
                                                                                 ProdOrder@1000 : Record 5405;
                                                                               BEGIN
                                                                               END;
                                                                                }

    { [{95F47CD3-811B-4196-B9CF-DA6722E9302C}];2 ;ProductionOrder     ;Element ;Table   ;
                                                  SourceTable=Table5406;
                                                  Temporary=Yes;
                                                  MinOccurs=Zero }

    { [{E316AEB9-0E08-4459-A812-9A26C85B808E}];3 ;Status              ;Element ;Field   ;
                                                  DataType=Option;
                                                  SourceField=Prod. Order Line::Status;
                                                  Export::OnBeforePassVariable=6 }

    { [{4226BF6F-E231-4316-9203-F472DAE2D0BF}];3 ;No                  ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Prod. Order Line::Prod. Order No. }

    { [{B9BB7D5F-E185-4442-8C03-02EA94EFF519}];3 ;ProductionOrderLineNo;Element;Field   ;
                                                  DataType=Integer;
                                                  SourceField=Prod. Order Line::Line No. }

    { [{53D64148-10B1-4168-8353-62EDD8647209}];3 ;ItemNo              ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Prod. Order Line::Item No. }

    { [{D97B8360-B0D1-4653-A52F-5BF8BAE6A339}];3 ;Quantity            ;Element ;Field   ;
                                                  DataType=Decimal;
                                                  SourceField=Prod. Order Line::Quantity;
                                                  Export::OnBeforePassVariable=30 }

    { [{6EA4A899-1862-4A72-A62D-83A7EE9B37F9}];3 ;DueDate             ;Element ;Text    ;
                                                  VariableName=PODueDate;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 PODueDate := ProdSchedMgt.ConvertFromDDMMYY(PODueDate);
                                                                                 EVALUATE("Prod. Order Line"."Due Date",PODueDate);
                                                                               END;
                                                                                }

    { [{A172E796-3D75-4944-81A2-36EA832773C2}];3 ;UnitOfMeasure       ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Prod. Order Line::Unit of Measure Code }

    { [{BCD6155F-7733-449B-BEDA-2B4DF283FD21}];3 ;RoutingReferenceNo  ;Element ;Field   ;
                                                  DataType=Integer;
                                                  SourceField=Prod. Order Line::Routing Reference No. }

    { [{1AF45A32-81CC-44BC-9A17-9B0D94FE2CDA}];3 ;RoutingNo           ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Prod. Order Line::Routing No. }

    { [{3F137D44-6825-4AE5-AC27-E21CD7AA743D}];3 ;Routing             ;Element ;Text     }

    { [{79570CE3-79A1-4DFB-9DF5-7F43D57B960C}];4 ;Operation           ;Element ;Table   ;
                                                  SourceTable=Table5409;
                                                  Temporary=Yes;
                                                  MinOccurs=Zero }

    { [{F3A63A24-6608-419C-B808-F5F8DDE2554D}];5 ;ProductionOrderStatus;Element;Field   ;
                                                  DataType=Option;
                                                  SourceField=Prod. Order Routing Line::Status;
                                                  Export::OnBeforePassVariable=9 }

    { [{42EBA626-469B-4318-9F1B-EDF1A3D7EB78}];5 ;ProductionOrderNo   ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Prod. Order Routing Line::Prod. Order No. }

    { [{1F34CD3B-FE5C-4937-94EA-7B86B3624376}];5 ;RoutingReferenceNo  ;Element ;Field   ;
                                                  DataType=Integer;
                                                  SourceField=Prod. Order Routing Line::Routing Reference No. }

    { [{0FA81FEA-5CB9-43B2-94E0-65D243D5B6FD}];5 ;RoutingNo           ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Prod. Order Routing Line::Routing No. }

    { [{64719B4A-38D5-4F4F-B30D-6DC465F8D66E}];5 ;OperationNo         ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Prod. Order Routing Line::Operation No. }

    { [{34900273-F41A-4D0B-97A4-C4267F172083}];5 ;PrevOperationNo     ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Prod. Order Routing Line::Previous Operation No. }

    { [{F10624B7-1E3E-463E-8245-290C5F08C440}];5 ;NextOperationNo     ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Prod. Order Routing Line::Next Operation No. }

    { [{69976A1C-8C6E-4693-BA2F-AE168B35473F}];5 ;Type                ;Element ;Field   ;
                                                  DataType=Option;
                                                  SourceField=Prod. Order Routing Line::Type;
                                                  Export::OnBeforePassVariable=7 }

    { [{C2B41A6C-E288-44C9-A557-598306789E2E}];5 ;No                  ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Prod. Order Routing Line::No. }

    { [{7A74C4DF-CF52-49C3-B033-1D14AF3EF8DF}];5 ;StartingDate        ;Element ;Text    ;
                                                  VariableName=POStartDate;
                                                  DataType=Date;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  POStartDate := ProdSchedMgt.ConvertFromDDMMYY(POStartDate);
                                                                                  EVALUATE("Prod. Order Routing Line"."Starting Date",POStartDate);
                                                                                END;
                                                                                 }

    { [{20F78FC2-6BDE-4E60-A2CF-9340ECB72619}];5 ;StartingTime        ;Element ;Field   ;
                                                  DataType=Time;
                                                  SourceField=Prod. Order Routing Line::Starting Time }

    { [{5AD1A0CA-ACCB-480B-8493-D343ABACD75B}];5 ;EndingDate          ;Element ;Text    ;
                                                  VariableName=POEndDate;
                                                  DataType=Date;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  POEndDate := ProdSchedMgt.ConvertFromDDMMYY(POEndDate);
                                                                                  EVALUATE("Prod. Order Routing Line"."Ending Date",POEndDate);
                                                                                END;
                                                                                 }

    { [{7DEDB80E-C9A0-451D-AD57-5DD940F33DFB}];5 ;EndingTime          ;Element ;Field   ;
                                                  DataType=Time;
                                                  SourceField=Prod. Order Routing Line::Ending Time }

    { [{178E01D5-4555-4885-BB0D-2987961A31F4}];5 ;RoutingStatus       ;Element ;Field   ;
                                                  DataType=Option;
                                                  SourceField=Prod. Order Routing Line::Routing Status }

    { [{DA3C6A6B-1C71-46A3-899E-371806F042C8}];5 ;CapacityNeed        ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{FAC3EA1D-3CEE-43A7-9930-9B34BF957EDF}];6 ;DivideFactor        ;Attribute;Text   ;
                                                  VariableName=CapNeedDivideFactor }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      ProdOrderLine@1004 : Record 5406;
      ProdOrderRtngLine@1002 : Record 5409;
      ProdSchedMgt@1000 : Codeunit 5500;
      ProdSchedConflictsXML@1003 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60";
      ConflictExist@1001 : Boolean;
      Text000@1005 : TextConst 'ENU=Error creating conflict result xml;ESP=Error al crear el archivo xml de resultado de conflictos';

    PROCEDURE UpdateRoutingLine@6();
    VAR
      ProdOrderLine@1005 : Record 5406;
      ProdOrderRtngLine1@1003 : Record 5409;
      ProdSchedCalc@1006 : Codeunit 5501;
      CalcProdOrder@1004 : Codeunit 99000773;
      CalcProdOrderRtngLine@1001 : Codeunit 99000774;
      Direction@1002 : 'Forward,Backward';
    BEGIN
      WITH ProdOrderRtngLine DO BEGIN
        IF NOT GET("Prod. Order Routing Line".Status,"Prod. Order Routing Line"."Prod. Order No.",
          "Prod. Order Routing Line"."Routing Reference No.","Prod. Order Routing Line"."Routing No.",
          "Prod. Order Routing Line"."Operation No.") THEN;
        IF (ProdOrderRtngLine."Previous Operation No." <> "Prod. Order Routing Line"."Previous Operation No.") OR
           (ProdOrderRtngLine."Next Operation No." <> "Prod. Order Routing Line"."Next Operation No.") OR
           (ProdOrderRtngLine.Type <> "Prod. Order Routing Line".Type) OR
           (ProdOrderRtngLine."No." <> "Prod. Order Routing Line"."No.") OR
           (FORMAT(ProdOrderRtngLine."Starting Date") <> FORMAT("Prod. Order Routing Line"."Starting Date")) OR
           (FORMAT(ProdOrderRtngLine."Starting Time") <> FORMAT("Prod. Order Routing Line"."Starting Time")) OR
           (FORMAT(ProdOrderRtngLine."Ending Date") <> FORMAT("Prod. Order Routing Line"."Ending Date")) OR
           (FORMAT(ProdOrderRtngLine."Ending Time") <> FORMAT("Prod. Order Routing Line"."Ending Time"))
        THEN BEGIN
          ProdSchedCalc.Initialize("Prod. Order Routing Line"."Starting Date","Prod. Order Routing Line"."Starting Time",
            "Prod. Order Routing Line"."Ending Date","Prod. Order Routing Line"."Ending Time","Prod. Order Routing Line".Type,
            "Prod. Order Routing Line"."No.",'0','1',TRUE);

          IF ProdSchedCalc.RUN(ProdOrderRtngLine) THEN;
          IF ProdSchedCalc.CalculationErrorExist THEN
            MarkProdOrderLine;
        END;
      END;
    END;

    PROCEDURE MarkProdOrderLine@1();
    BEGIN
      ConflictExist := TRUE;
      IF NOT ProdOrderLine.GET("Prod. Order Line".Status,"Prod. Order Line"."Prod. Order No.","Prod. Order Line"."Line No.") THEN;
      ProdOrderLine.MARK(TRUE);
    END;

    PROCEDURE CreateConflictResult@2();
    VAR
      ProdSchedSetup@1003 : Record 5500;
      ProdSchedConflicts@1002 : XMLport 5506;
      IStream@1001 : InStream;
      OStream@1000 : OutStream;
    BEGIN
      IF ISCLEAR(ProdSchedConflictsXML) THEN
        CREATE(ProdSchedConflictsXML);

      ProdSchedSetup.LOCKTABLE;
      ProdSchedSetup.GET;
      ProdSchedSetup.GanttXML.CREATEOUTSTREAM(OStream);
      ProdSchedConflicts.SETDESTINATION(OStream);
      ProdSchedConflicts.SETTABLEVIEW(ProdOrderLine);
      ProdSchedConflicts.SetDeletedOrders("Prod. Order Line");
      IF ProdSchedConflicts.EXPORT THEN BEGIN
        ProdSchedSetup.GanttXML.CREATEINSTREAM(IStream);
        ProdSchedConflictsXML.load(IStream);
      END ELSE
        ERROR(Text000);
    END;

    PROCEDURE ChangesExist@4() : Boolean;
    BEGIN
      EXIT(ConflictExist);
    END;

    PROCEDURE GetConflicts@5(VAR ConflictResultXML1@1000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60");
    BEGIN
      ProdSchedConflictsXML.save(ConflictResultXML1);
    END;

    EVENT ProdSchedConflictsXML@1003::ondataavailable@198();
    BEGIN
    END;

    EVENT ProdSchedConflictsXML@1003::onreadystatechange@-609();
    BEGIN
    END;

    BEGIN
    END.
  }
}
