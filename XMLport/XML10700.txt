OBJECT XMLport 10700 Hist. Consolid. Import/Export
{
  OBJECT-PROPERTIES
  {
    Date=05/10/12;
    Time=12:28:24;
    Modified=Yes;
    Version List=NAVES6.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Hist. Consolid. Import/Export;
               ESP=Importar/exportar consolidaci¢n hist¢rica];
    Format/Evaluate=XML Format/Evaluate;
  }
  ELEMENTS
  {
    { [{5CDBAF06-C7E1-4222-9633-B90B6840C9FC}];  ;subFinReport        ;Element ;Text    ;
                                                  MinOccurs=Once;
                                                  MaxOccurs=Once;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  NextGLEntryNo := 1;
                                                                                END;
                                                                                 }

    { [{B6564B5B-C840-45E1-91C8-A3B073508158}];1 ;product             ;Attribute;Text    }

    { [{476179A5-6D2C-4BD6-9924-08687237A462}];1 ;productVersion      ;Attribute;Text    }

    { [{92C00E3F-2218-41BF-A788-242559DF8E43}];1 ;formatVersion       ;Attribute;Text   ;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                    // add code here to test format Version against CurrentFormatVersion.
                                                                                    // if different only behind the decimal point, than ok.
                                                                                    // if different before the decimal, then give error message.
                                                                                END;
                                                                                 }

    { [{3609D822-9A93-44AB-A1D9-60A57D06D9B2}];1 ;subCompanyName      ;Attribute;Text    }

    { [{03051B56-8E9E-4890-8EFF-D19138E51115}];1 ;currencyLCY         ;Attribute;Text   ;
                                                  Occurrence=Optional }

    { [{403BCC17-A05E-4C60-B6C0-EAA216A4A338}];1 ;currencyACY         ;Attribute;Text   ;
                                                  Occurrence=Optional }

    { [{5C189382-CE6F-4E9C-B7EA-13AD3A65D52F}];1 ;currencyPCY         ;Attribute;Text   ;
                                                  Occurrence=Optional }

    { [{EB9A5AD3-FFF2-4883-A0F5-C35468D5FCDC}];1 ;checkSum            ;Attribute;Text    }

    { [{4E3F5603-FB98-43BE-87A6-F2C0357E57C7}];1 ;startingDate        ;Attribute;Text   ;
                                                  Occurrence=Optional }

    { [{364E19CC-B2C6-4374-B263-D6796AEB5710}];1 ;endingDate          ;Attribute;Text    }

    { [{5C4BCA68-52E0-4C0C-9110-4AD9500F27ED}];1 ;reportingDate       ;Attribute;Text    }

    { [{A37D7517-4A21-4780-B825-60921BBFD7B2}];1 ;reportingUserID     ;Attribute;Text    }

    { [{EABBC626-6C90-4054-BB28-7C728EBCB335}];1 ;exchRateTable       ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  MaxOccurs=Once }

    { [{2D177F23-0857-4E76-83E2-7B2BE181FB40}];2 ;exchRate            ;Element ;Table   ;
                                                  SourceTable=Table330;
                                                  SourceTableView=SORTING(Field1,Field2);
                                                  Temporary=Yes;
                                                  MinOccurs=Zero }

    { [{D25A01B7-C405-484D-973E-896BD1DE3C53}];3 ;currencyCode        ;Attribute;Field  ;
                                                  DataType=Code;
                                                  SourceField=Currency Exchange Rate::Currency Code;
                                                  Occurrence=Required }

    { [{B1F15BC8-7A55-40B4-BF8A-68AECAB9B754}];3 ;relCurrencyCode     ;Attribute;Field  ;
                                                  DataType=Code;
                                                  SourceField=Currency Exchange Rate::Relational Currency Code;
                                                  Occurrence=Optional }

    { [{00C74AC3-EAC2-43E1-BFCB-F0E28207C85B}];3 ;startingDate        ;Attribute;Field  ;
                                                  DataType=Date;
                                                  SourceField=Currency Exchange Rate::Starting Date }

    { [{09FDCFCA-73CB-4313-9BEA-7867B5E566B6}];3 ;exchRateAmount      ;Attribute;Field  ;
                                                  DataType=Decimal;
                                                  SourceField=Currency Exchange Rate::Exchange Rate Amount }

    { [{64E757B2-AC85-4989-8CC6-F5DD6CB9F213}];3 ;relExchRateAmount   ;Attribute;Field  ;
                                                  DataType=Decimal;
                                                  SourceField=Currency Exchange Rate::Relational Exch. Rate Amount }

    { [{43320295-4D3B-4E19-B133-9B3AA5B36FC7}];1 ;historicGLAccountTable;Element;Text   ;
                                                  MinOccurs=Once;
                                                  MaxOccurs=Once }

    { [{23143A4A-54D6-44B0-A9DC-06DD54EF4B7F}];2 ;historicGLAccount   ;Element ;Table   ;
                                                  VariableName=Historic G/L Account;
                                                  SourceTable=Table10721;
                                                  SourceTableView=SORTING(Field1);
                                                  Temporary=Yes }

    { [{8770CA07-24B5-401E-BB9A-3EEA4FB0FA4C}];3 ;no                  ;Attribute;Field  ;
                                                  DataType=Text;
                                                  SourceField=Historic G/L Account::No. }

    { [{D785C97E-7DB7-407E-B9A6-594B173122A1}];3 ;accountDebit        ;Attribute;Field  ;
                                                  DataType=Code;
                                                  SourceField=Historic G/L Account::Consol. Debit Acc.;
                                                  Occurrence=Optional }

    { [{31A63C25-4BB1-4A6D-8CAE-0E7DAAF1B678}];3 ;accountCredit       ;Attribute;Field  ;
                                                  DataType=Code;
                                                  SourceField=Historic G/L Account::Consol. Credit Acc.;
                                                  Occurrence=Optional }

    { [{40CF9AD9-0204-4AD8-B9C5-EE468EA89E2E}];3 ;translationMethod   ;Attribute;Field  ;
                                                  DataType=Option;
                                                  SourceField=Historic G/L Account::Consol. Translation Method }

    { [{8F09EE39-16E2-4538-A816-355D3DA5126D}];3 ;glEntry             ;Element ;Table   ;
                                                  SourceTable=Table17;
                                                  SourceTableView=SORTING(Field3,Field4);
                                                  LinkFields=Field3=FIELD(Field1);
                                                  LinkTable=Historic G/L Account;
                                                  Temporary=Yes;
                                                  MinOccurs=Zero;
                                                  Import::OnBeforeInsertRecord=BEGIN
                                                                                 "G/L Entry"."Entry No." := NextGLEntryNo;
                                                                                 "G/L Entry"."G/L Account No." := "Historic G/L Account"."No.";
                                                                               END;

                                                  Import::OnAfterInsertRecord=BEGIN
                                                                                NextGLEntryNo := NextGLEntryNo + 1;
                                                                              END;
                                                                               }

    { [{4A78056E-39C7-4263-8185-50F6FC332C9B}];4 ;postingDate         ;Attribute;Field  ;
                                                  DataType=Date;
                                                  SourceField=G/L Entry::Posting Date }

    { [{1CAA0172-6A2A-4C4E-952E-38C03FFA54EC}];4 ;amountDebit         ;Attribute;Field  ;
                                                  DataType=Decimal;
                                                  SourceField=G/L Entry::Debit Amount;
                                                  Occurrence=Optional }

    { [{CFD78F83-7698-4498-AB6E-4EA2B1E8F2DA}];4 ;amountCredit        ;Attribute;Field  ;
                                                  DataType=Decimal;
                                                  SourceField=G/L Entry::Credit Amount;
                                                  Occurrence=Optional }

    { [{FAA3EF59-136A-4297-B327-7CC9F1BC3D5F}];4 ;arcAmountDebit      ;Attribute;Field  ;
                                                  DataType=Decimal;
                                                  SourceField=G/L Entry::Add.-Currency Debit Amount;
                                                  Occurrence=Optional }

    { [{FAE9B5BD-59D6-4D6E-B797-D29DB2060CAD}];4 ;arcAmountCredit     ;Attribute;Field  ;
                                                  DataType=Decimal;
                                                  SourceField=G/L Entry::Add.-Currency Credit Amount;
                                                  Occurrence=Optional }

    { [{87233B97-96D8-4EA5-BFC1-5C427156AC16}];4 ;dimension           ;Element ;Table   ;
                                                  SourceTable=Table355;
                                                  SourceTableView=SORTING(Field1,Field2,Field3)
                                                                  WHERE(Field1=CONST(17));
                                                  LinkFields=Field2=FIELD(Field1);
                                                  LinkTable=G/L Entry;
                                                  Temporary=Yes;
                                                  MinOccurs=Zero;
                                                  Import::OnBeforeInsertRecord=BEGIN
                                                                                 "Ledger Entry Dimension"."Table ID" := DATABASE::"G/L Entry";
                                                                                 "Ledger Entry Dimension"."Entry No." := "G/L Entry"."Entry No.";
                                                                               END;
                                                                                }

    { [{8E784AAA-13A6-419F-B9C7-A7BC3A5E61F8}];5 ;code                ;Attribute;Field  ;
                                                  DataType=Code;
                                                  SourceField=Ledger Entry Dimension::Dimension Code }

    { [{0864FC58-CA4E-4CE4-A0D7-B0C04CACE903}];5 ;value               ;Attribute;Field  ;
                                                  DataType=Code;
                                                  SourceField=Ledger Entry Dimension::Dimension Value Code }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      CurrentProduct@1100001 : TextConst 'ENU=Microsoft Dynamics NAV;ESP=Microsoft Dynamics NAV';
      CurrentProductVersion@1100002 : TextConst 'ENU=4.00;ESP=4.00';
      CurrentFormatVersion@1100003 : TextConst 'ENU=1.00;ESP=1.00';
      NextGLEntryNo@1100000 : Integer;

    PROCEDURE SetGlobals@1100000(NewCompanyName@1100000 : Text[30];NewCurrencyLCY@1100001 : Code[10];NewCurrencyACY@1100002 : Code[10];NewCurrencyPCY@1100003 : Code[10];NewCheckSum@1100004 : Decimal;NewStartingDate@1100005 : Date;NewEndingDate@1100006 : Date);
    BEGIN
      product := CurrentProduct;
      productVersion := CurrentProductVersion;
      formatVersion := CurrentFormatVersion;
      subCompanyName := NewCompanyName;
      currencyLCY := NewCurrencyLCY;
      currencyACY := NewCurrencyACY;
      currencyPCY := NewCurrencyPCY;
      checkSum := DecimalToXMLText(NewCheckSum);
      startingDate := DateToXMLText(NewStartingDate);
      endingDate := DateToXMLText(NewEndingDate);
      reportingDate := DateToXMLText(TODAY);
      reportingUserID := USERID;
    END;

    PROCEDURE GetGlobals@1100001(VAR ImpProductVersion@1100000 : Code[10];VAR ImpFormatVersion@1100001 : Code[10];VAR ImpCompanyName@1100002 : Text[30];VAR ImpCurrencyLCY@1100003 : Code[10];VAR ImpCurrencyACY@1100004 : Code[10];VAR ImpCurrencyPCY@1100005 : Code[10];VAR ImpCheckSum@1100006 : Decimal;VAR ImpStartingDate@1100007 : Date;VAR ImpEndingDate@1100008 : Date);
    BEGIN
      ImpProductVersion := productVersion;
      ImpFormatVersion := formatVersion;
      ImpCompanyName := subCompanyName;
      ImpCurrencyLCY := currencyLCY;
      ImpCurrencyACY := currencyACY;
      ImpCurrencyPCY := currencyPCY;
      ImpCheckSum := XMLTextToDecimal(checkSum);
      ImpStartingDate := XMLTextToDate(startingDate);
      ImpEndingDate := XMLTextToDate(endingDate);
    END;

    PROCEDURE SetGLAccount@1100002(VAR TempHistoricGLAccount@1100000 : Record 10721);
    BEGIN
      "Historic G/L Account".RESET;
      "Historic G/L Account".DELETEALL;
      IF TempHistoricGLAccount.FIND('-') THEN
        REPEAT
          "Historic G/L Account" := TempHistoricGLAccount;
          "Historic G/L Account".INSERT;
        UNTIL TempHistoricGLAccount.NEXT = 0;
    END;

    PROCEDURE GetGLAccount@1100003(VAR TempHistoricGLAccount@1100000 : Record 10721);
    BEGIN
      TempHistoricGLAccount.RESET;
      TempHistoricGLAccount.DELETEALL;
      "Historic G/L Account".RESET;
      IF "Historic G/L Account".FIND('-') THEN
        REPEAT
          TempHistoricGLAccount := "Historic G/L Account";
          TempHistoricGLAccount.INSERT;
        UNTIL "Historic G/L Account".NEXT = 0;
    END;

    PROCEDURE SetGLEntry@1100004(VAR TempGLEntry@1100000 : Record 17);
    BEGIN
      "G/L Entry".RESET;
      "G/L Entry".DELETEALL;
      IF TempGLEntry.FIND('-') THEN
        REPEAT
          "G/L Entry" := TempGLEntry;
          "G/L Entry".INSERT;
        UNTIL TempGLEntry.NEXT = 0;
    END;

    PROCEDURE GetGLEntry@1100005(VAR TempGLEntry@1100000 : Record 17);
    BEGIN
      TempGLEntry.RESET;
      TempGLEntry.DELETEALL;
      "G/L Entry".RESET;
      IF "G/L Entry".FIND('-') THEN
        REPEAT
          TempGLEntry := "G/L Entry";
          TempGLEntry.INSERT;
        UNTIL "G/L Entry".NEXT = 0;
    END;

    PROCEDURE SetEntryDim@1100006(VAR TempLedgEntryDim@1100000 : Record 355);
    BEGIN
      "Ledger Entry Dimension".RESET;
      "Ledger Entry Dimension".DELETEALL;
      IF TempLedgEntryDim.FIND('-') THEN
        REPEAT
          "Ledger Entry Dimension" := TempLedgEntryDim;
          "Ledger Entry Dimension".INSERT;
        UNTIL TempLedgEntryDim.NEXT = 0;
    END;

    PROCEDURE GetEntryDim@1100007(VAR TempLedgEntryDim@1100000 : Record 355);
    BEGIN
      TempLedgEntryDim.RESET;
      TempLedgEntryDim.DELETEALL;
      "Ledger Entry Dimension".RESET;
      IF "Ledger Entry Dimension".FIND('-') THEN
        REPEAT
          TempLedgEntryDim := "Ledger Entry Dimension";
          TempLedgEntryDim.INSERT;
        UNTIL "Ledger Entry Dimension".NEXT = 0;
    END;

    PROCEDURE SetExchRate@1100008(VAR TempExchRate@1100000 : Record 330);
    BEGIN
      "Currency Exchange Rate".RESET;
      "Currency Exchange Rate".DELETEALL;
      IF TempExchRate.FIND('-') THEN
        REPEAT
          "Currency Exchange Rate" := TempExchRate;
          "Currency Exchange Rate".INSERT;
        UNTIL TempExchRate.NEXT = 0;
    END;

    PROCEDURE GetExchRate@1100009(VAR TempExchRate@1100000 : Record 330);
    BEGIN
      TempExchRate.RESET;
      TempExchRate.DELETEALL;
      "Currency Exchange Rate".RESET;
      IF "Currency Exchange Rate".FIND('-') THEN
        REPEAT
          TempExchRate := "Currency Exchange Rate";
          TempExchRate.INSERT;
        UNTIL "Currency Exchange Rate".NEXT = 0;
    END;

    LOCAL PROCEDURE DateToXMLText@1100010(Date@1100000 : Date) XMLText : Text[30];
    BEGIN
      XMLText := FORMAT(Date,10,'<Year4>-<Month,2>-<Day,2>');
    END;

    LOCAL PROCEDURE XMLTextToDate@1100011(XMLText@1100000 : Text[30]) Date : Date;
    VAR
      Month@1100004 : Integer;
      Day@1100003 : Integer;
      Year@1100002 : Integer;
    BEGIN
      EVALUATE(Year,COPYSTR(XMLText,1,4));
      EVALUATE(Month,COPYSTR(XMLText,6,2));
      EVALUATE(Day,COPYSTR(XMLText,9,2));
      Date := DMY2DATE(Day,Month,Year);
    END;

    LOCAL PROCEDURE DecimalToXMLText@1100012(Amount@1100000 : Decimal) XMLText : Text[30];
    VAR
      BeforePoint@1100001 : Decimal;
      AfterPoint@1100002 : Decimal;
      Places@1100003 : Integer;
      Minus@1100004 : Boolean;
    BEGIN
      Minus := (Amount < 0);
      IF Minus THEN
        Amount := -Amount;
      BeforePoint := ROUND(Amount,1,'<');
      AfterPoint := Amount - BeforePoint;
      Places := 0;
      WHILE ROUND(AfterPoint,1) <> AfterPoint DO BEGIN
        AfterPoint := AfterPoint * 10;
        Places := Places + 1;
      END;
      XMLText :=
        FORMAT(BeforePoint,0,1) + '.' + CONVERTSTR(FORMAT(AfterPoint,Places,1),' ','0');
      IF Minus THEN
        XMLText := '-' + XMLText;
    END;

    LOCAL PROCEDURE XMLTextToDecimal@1100013(XMLText@1100000 : Text[30]) Amount : Decimal;
    VAR
      BeforePoint@1100003 : Decimal;
      AfterPoint@1100002 : Decimal;
      BeforeText@1100001 : Text[30];
      AfterText@1100004 : Text[30];
      Minus@1100005 : Boolean;
      Places@1100006 : Integer;
      Point@1100007 : Integer;
    BEGIN
      IF STRLEN(XMLText) = 0 THEN
        EXIT(0);
      Minus := (XMLText[1] = '-');
      IF Minus THEN
        XMLText := DELSTR(XMLText,1,1);
      Point := STRLEN(XMLText);
      AfterText := '';
      WHILE (XMLText[Point] IN ['0','1','2','3','4','5','6','7','8','9']) AND
            (Point > 1)
      DO BEGIN
        Places := Places + 1;
        AfterText := ' ' + AfterText;
        AfterText[1] := XMLText[Point];
        Point := Point - 1;
      END;
      BeforeText := DELCHR(COPYSTR(XMLText,1,Point),'=','.,');
      EVALUATE(BeforePoint,BeforeText);
      EVALUATE(AfterPoint,AfterText);
      WHILE Places > 0 DO BEGIN
        AfterPoint := AfterPoint / 10;
        Places := Places - 1;
      END;
      Amount := BeforePoint + AfterPoint;
      IF Minus THEN
        Amount := -Amount;
    END;

    BEGIN
    END.
  }
}
